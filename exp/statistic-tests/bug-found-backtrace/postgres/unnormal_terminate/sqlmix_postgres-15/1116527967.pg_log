2022-08-02 04:09:26.153 UTC [24373] STATEMENT:  
	select jsonb_path_query(
		'["2017-03-10 12:34:00+01", "2017-03-10 12:35:00+01", "2017-03-10 12:36:00+01", "2017-03-10 12:35:00+02", "2017-03-10 12:35:00-02", "2017-03-10 10:35:00", "2017-03-10 11:35:00", "2017-03-10 12:35:00", "2017-03-10", "2017-03-11", "12:34:56", "12:34:56+01"]',
		'$[*].datetime() ? (@ < "10.03.2017 12:35 +1".datetime("dd.mm.yyyy HH24:MI TZH"))');
2022-08-02 04:09:26.153 UTC [24373] WARNING:  there is no transaction in progress
2022-08-02 04:09:26.163 UTC [24373] ERROR:  cannot retrieve commit timestamp for transaction 0
2022-08-02 04:09:26.163 UTC [24373] STATEMENT:  SELECT * FROM pg_xact_commit_timestamp_origin('0'::xid);
2022-08-02 04:09:26.163 UTC [24373] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2022-08-02 04:09:26.163 UTC [24373] STATEMENT:  SELECT * FROM pg_xact_commit_timestamp_origin('1'::xid);
2022-08-02 04:09:26.163 UTC [24373] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2022-08-02 04:09:26.163 UTC [24373] STATEMENT:  SELECT pg_advisory_unlock_all();
2022-08-02 04:09:26.163 UTC [24373] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2022-08-02 04:09:26.163 UTC [24373] STATEMENT:  SELECT x.timestamp > '-infinity'::timestamptz AS ts_low,
	       x.timestamp <= now() AS ts_high,
	       r.roname
	  FROM pg_xact_commit_timestamp_origin('727') x, pg_replication_origin r
	  WHERE r.roident = x.roident;
2022-08-02 04:09:26.163 UTC [24373] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2022-08-02 04:09:26.163 UTC [24373] STATEMENT:  DROP ROLE regress_test_createrole;
2022-08-02 04:09:26.163 UTC [24373] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2022-08-02 04:09:26.163 UTC [24373] STATEMENT:  DROP USER regress_test_user_canlogin;
2022-08-02 04:09:26.163 UTC [24373] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2022-08-02 04:09:26.163 UTC [24373] STATEMENT:  RESET SESSION AUTHORIZATION;
2022-08-02 04:09:26.166 UTC [24373] ERROR:  could not get commit timestamp data
2022-08-02 04:09:26.166 UTC [24373] STATEMENT:  SELECT x.timestamp > '-infinity'::timestamptz AS ts_low,
	       x.timestamp <= now() AS ts_high,
	       r.roname
	  FROM pg_xact_commit_timestamp_origin('727') x, pg_replication_origin r
	  WHERE r.roident = x.roident;
2022-08-02 04:09:26.166 UTC [24373] ERROR:  channel name cannot be empty
2022-08-02 04:09:26.166 UTC [24373] STATEMENT:  SELECT pg_notify('','sample message1');
2022-08-02 04:09:26.166 UTC [24373] ERROR:  channel name too long
2022-08-02 04:09:26.166 UTC [24373] STATEMENT:  SELECT pg_notify('notify_async_channel_name_too_long______________________________','sample_message1');
2022-08-02 04:09:26.167 UTC [24373] ERROR:  role "regress_test_role_canlogin" already exists
2022-08-02 04:09:26.167 UTC [24373] STATEMENT:  CREATE ROLE regress_test_role_canlogin WITH LOGIN;
2022-08-02 04:09:26.167 UTC [24373] WARNING:  there is no transaction in progress
2022-08-02 04:09:26.171 UTC [24373] ERROR:  role "regress_test_createrole" does not exist
2022-08-02 04:09:26.171 UTC [24373] STATEMENT:  ALTER ROLE regress_test_createrole WITH NOCREATEROLE;
2022-08-02 04:09:26.176 UTC [24373] ERROR:  could not get commit timestamp data
2022-08-02 04:09:26.176 UTC [24373] STATEMENT:  SELECT x.timestamp > '-infinity'::timestamptz AS ts_low,
	       x.timestamp <= now() AS ts_high,
	       r.roname
	  FROM pg_xact_commit_timestamp_origin('727') x, pg_replication_origin r
	  WHERE r.roident = x.roident;
=================================================================
==24373==ERROR: AddressSanitizer: global-buffer-overflow on address 0x0000027667a0 at pc 0x00000143090d bp 0x7ffcd5a02c70 sp 0x7ffcd5a02c68
READ of size 16 at 0x0000027667a0 thread T0
    #0 0x143090c  (/root/bin_aflpp_asan/usr/local/pgsql/bin/postgres+0x143090c)
    #1 0xb884f2  (/root/bin_aflpp_asan/usr/local/pgsql/bin/postgres+0xb884f2)
    #2 0xbda7b9  (/root/bin_aflpp_asan/usr/local/pgsql/bin/postgres+0xbda7b9)
    #3 0xb8b73a  (/root/bin_aflpp_asan/usr/local/pgsql/bin/postgres+0xb8b73a)
    #4 0xbc04e4  (/root/bin_aflpp_asan/usr/local/pgsql/bin/postgres+0xbc04e4)
    #5 0xbb7d48  (/root/bin_aflpp_asan/usr/local/pgsql/bin/postgres+0xbb7d48)
    #6 0xb6902b  (/root/bin_aflpp_asan/usr/local/pgsql/bin/postgres+0xb6902b)
    #7 0x118b035  (/root/bin_aflpp_asan/usr/local/pgsql/bin/postgres+0x118b035)
    #8 0x118a1d7  (/root/bin_aflpp_asan/usr/local/pgsql/bin/postgres+0x118a1d7)
    #9 0x118624d  (/root/bin_aflpp_asan/usr/local/pgsql/bin/postgres+0x118624d)
    #10 0x117f7bb  (/root/bin_aflpp_asan/usr/local/pgsql/bin/postgres+0x117f7bb)
    #11 0xf570a3  (/root/bin_aflpp_asan/usr/local/pgsql/bin/postgres+0xf570a3)
    #12 0xf611e8  (/root/bin_aflpp_asan/usr/local/pgsql/bin/postgres+0xf611e8)
    #13 0xf593e4  (/root/bin_aflpp_asan/usr/local/pgsql/bin/postgres+0xf593e4)
    #14 0xcba9cc  (/root/bin_aflpp_asan/usr/local/pgsql/bin/postgres+0xcba9cc)
    #15 0x7f0b7117d082  (/lib/x86_64-linux-gnu/libc.so.6+0x24082)
    #16 0x49bc2d  (/root/bin_aflpp_asan/usr/local/pgsql/bin/postgres+0x49bc2d)

0x0000027667a0 is located 0 bytes to the right of global variable 'slruStats' defined in '/root/postgres/src/backend/postmaster/pgstat.c:280:25' (0x27665a0) of size 512
SUMMARY: AddressSanitizer: global-buffer-overflow (/root/bin_aflpp_asan/usr/local/pgsql/bin/postgres+0x143090c) 
Shadow bytes around the buggy address:
  0x0000804e4ca0: f9 f9 f9 f9 00 00 00 00 00 00 00 00 00 f9 f9 f9
  0x0000804e4cb0: f9 f9 f9 f9 00 00 00 00 00 00 00 00 00 00 00 00
  0x0000804e4cc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0000804e4cd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0000804e4ce0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0000804e4cf0: 00 00 00 00[f9]f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9
  0x0000804e4d00: f9 f9 f9 f9 00 00 00 00 00 00 00 00 00 00 00 f9
  0x0000804e4d10: f9 f9 f9 f9 00 f9 f9 f9 f9 f9 f9 f9 00 f9 f9 f9
  0x0000804e4d20: f9 f9 f9 f9 00 00 00 00 00 00 00 00 00 00 00 00
  0x0000804e4d30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0000804e4d40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==24373==ABORTING
2022-08-02 04:09:26.222 UTC [23892] LOG:  server process (PID 24373) was terminated by signal 6: Aborted
2022-08-02 04:09:26.222 UTC [23892] LOG:  terminating any other active server processes
2022-08-02 04:09:26.232 UTC [41940] FATAL:  the database system is in recovery mode
2022-08-02 04:09:26.234 UTC [41943] FATAL:  the database system is in recovery mode
2022-08-02 04:09:26.238 UTC [23892] LOG:  all server processes terminated; reinitializing
2022-08-02 04:09:26.256 UTC [41944] LOG:  database system was interrupted; last known up at 2022-08-02 04:09:22 UTC
2022-08-02 04:09:26.257 UTC [41945] FATAL:  the database system is in recovery mode
2022-08-02 04:09:26.262 UTC [23892] LOG:  received smart shutdown request
2022-08-02 04:09:26.275 UTC [41944] LOG:  recovered replication state of node 4 to 0/0
2022-08-02 04:09:26.275 UTC [41944] LOG:  database system was not properly shut down; automatic recovery in progress
2022-08-02 04:09:26.276 UTC [41944] LOG:  redo starts at 0/1F67C7C8
