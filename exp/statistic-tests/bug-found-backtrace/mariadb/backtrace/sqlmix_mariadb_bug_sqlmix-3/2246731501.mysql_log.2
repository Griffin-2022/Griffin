
dict_table_open_on_name: dict_table_open_on_name: table: 'mysql/innodb_table_stats'
dict_table_open_on_name: dict_table_open_on_name: table: 'mysql/innodb_index_stats'
que_eval_sql: ib_que: Execute 9 (QUERY THREAD) at 0x6290018e3758
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x6290018e3800
que_eval_sql: ib_que: Execute 4 (UPDATE) at 0x6290018e25e8
que_eval_sql: ib_que: Execute 6 (SELECT) at 0x6290018e2968
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locking
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locked
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) unlocking
que_eval_sql: ib_que: Execute 4 (UPDATE) at 0x6290018e25e8
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x6290018e3800
que_eval_sql: ib_que: Execute 4 (UPDATE) at 0x6290018e2ec8
que_eval_sql: ib_que: Execute 6 (SELECT) at 0x6290018e3248
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locking
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locked
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) unlocking
que_eval_sql: ib_que: Execute 4 (UPDATE) at 0x6290018e2ec8
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x6290018e3800
que_eval_sql: ib_que: Execute 9 (QUERY THREAD) at 0x6290018e3758
que_graph_free_recursive: que_graph_free_recursive: node: 0x6290018e36a0, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x6290018e3758, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x6290018e3800, type: 1044
que_graph_free_recursive: que_graph_free_recursive: node: 0x6290018e25e8, type: 4
que_graph_free_recursive: que_graph_free_recursive: node: 0x6290018e2968, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x6290018e2ec8, type: 4
que_graph_free_recursive: que_graph_free_recursive: node: 0x6290018e3248, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x61700029ed18, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b0003b9d20, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x61700029ec20, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x61700029f098, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b0003ba420, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x61700029efa0, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x61700029f418, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b0003bab20, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x61700029f320, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x61700029f798, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b0003bb220, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x61700029f6a0, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x61700029fb18, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b0003bb920, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x61700029fa20, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170002a0218, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b00028aa20, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170002a0120, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170002a0598, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b0003bc020, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170002a04a0, type: 6
que_eval_sql: que_eval_sql: query: PROCEDURE DROP_DATABASE_PROC () IS
fk CHAR;
name CHAR;
tid CHAR;
iid CHAR;
DECLARE FUNCTION fk_report;
DECLARE CURSOR fkf IS
SELECT ID FROM SYS_FOREIGN WHERE ID >= :db FOR UPDATE;
DECLARE CURSOR fkr IS
SELECT REF_NAME,ID FROM SYS_FOREIGN WHERE REF_NAME >= :db FOR UPDATE
ORDER BY REF_NAME;
DECLARE CURSOR tab IS
SELECT ID,NAME FROM SYS_TABLES WHERE NAME >= :db FOR UPDATE;
DECLARE CURSOR idx IS
SELECT ID FROM SYS_INDEXES WHERE TABLE_ID = tid FOR UPDATE;
BEGIN
OPEN fkf;
WHILE 1 = 1 LOOP
  FETCH fkf INTO fk;
  IF (SQL % NOTFOUND) THEN EXIT; END IF;
  IF TO_BINARY(SUBSTR(fk, 0, LENGTH(:db)))<>TO_BINARY(:db) THEN EXIT; END IF;
  DELETE FROM SYS_FOREIGN_COLS WHERE TO_BINARY(ID)=TO_BINARY(fk);
  DELETE FROM SYS_FOREIGN WHERE CURRENT OF fkf;
END LOOP;
CLOSE fkf;
OPEN fkr;
FETCH fkr INTO fk_report();
CLOSE fkr;
OPEN tab;
WHILE 1 = 1 LOOP
  FETCH tab INTO tid,name;
  IF (SQL % NOTFOUND) THEN EXIT; END IF;
  IF SUBSTR(name, 0, LENGTH(:db)) <> :db THEN EXIT; END IF;
  DELETE FROM SYS_COLUMNS WHERE TABLE_ID=tid;
  D
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_FOREIGN'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_FOREIGN'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_TABLES'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_INDEXES'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_FOREIGN_COLS'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_FOREIGN'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_COLUMNS'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_TABLES'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_FIELDS'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_INDEXES'
que_eval_sql: ib_que: Execute 9 (QUERY THREAD) at 0x6250002d13e0
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x6250002d1488
que_eval_sql: ib_que: Execute 25 (OPEN) at 0x629000dc8888
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x6250002d1488
que_eval_sql: ib_que: Execute 1046 (WHILE) at 0x62500037b3c8
que_eval_sql: ib_que: Execute 24 (FETCH) at 0x629000dc8d10
que_eval_sql: ib_que: 