2022-07-29 20:58:24 2709 [Warning] Aborted connection 2709 to db: 'unconnected' user: 'root' host: 'localhost' (Got an error reading communication packets)
2022-07-29 20:58:24 2711 [Warning] Aborted connection 2711 to db: 'unconnected' user: 'root' host: 'localhost' (Got an error reading communication packets)
2022-07-29 20:58:24 2713 [Warning] Aborted connection 2713 to db: 'unconnected' user: 'root' host: 'localhost' (Got an error reading communication packets)
2022-07-29 20:58:24 2715 [Warning] Aborted connection 2715 to db: 'unconnected' user: 'root' host: 'localhost' (Got an error writing communication packets)
2022-07-29 20:58:24 2717 [Warning] Aborted connection 2717 to db: 'unconnected' user: 'root' host: 'localhost' (Got an error reading communication packets)
2022-07-29 20:58:24 2719 [Warning] Aborted connection 2719 to db: 'unconnected' user: 'root' host: 'localhost' (Got an error reading communication packets)
2022-07-29 20:58:24 2721 [Warning] Aborted connection 2721 to db: 'unconnected' user: 'root' host: 'localhost' (Got an error writing communication packets)
my_3306: /root/mariadb/sql/item_windowfunc.cc:463: virtual Field *Item_sum_hybrid_simple::create_tmp_field(MEM_ROOT *, bool, TABLE *): Assertion `0' failed.
220729 20:58:24 [ERROR] mysqld got signal 6 ;
This could be because you hit a bug. It is also possible that this binary
or one of the libraries it was linked against is corrupt, improperly built,
or misconfigured. This error can also be caused by malfunctioning hardware.

To report this bug, see https://mariadb.com/kb/en/reporting-bugs

We will try our best to scrape up some info that will hopefully help
diagnose the problem, but since we have already crashed, 
something is definitely wrong and this may fail.

Server version: 10.7.1-MariaDB-debug
key_buffer_size=134217728
read_buffer_size=131072
max_used_connections=2
max_threads=153
thread_count=3
It is possible that mysqld could use up to 
key_buffer_size + (read_buffer_size + sort_buffer_size)*max_threads = 468119 K  bytes of memory
Hope that's ok; if not, decrease some variables in the equation.

Thread pointer: 0x62b00016c288
Attempting backtrace. You can use the following information to find out
where mysqld died. If you see no messages after this, something went
terribly wrong...
stack_bottom = 0x7fab74be7c80 thread_stack 0x100000
??:0(__interceptor_backtrace)[0x77602b]
mysys/stacktrace.c:212(my_print_stacktrace)[0x3586647]
sql/signal_handler.cc:0(handle_fatal_signal)[0x187c05b]
??:0(__restore_rt)[0x7fab9b7ce420]
??:0(gsignal)[0x7fab9b3fc00b]
??:0(abort)[0x7fab9b3db859]
/lib/x86_64-linux-gnu/libc.so.6(+0x22729)[0x7fab9b3db729]
??:0(__assert_fail)[0x7fab9b3ecfd6]
??:0(Item_sum_hybrid_simple::create_tmp_field(st_mem_root*, bool, TABLE*))[0x200454e]
??:0(create_tmp_field(TABLE*, Item*, Item***, Field**, Field**, bool, bool, bool, bool))[0xf5d321]
sql/sql_select.cc:18963(Create_tmp_table::add_fields(THD*, TABLE*, TMP_TABLE_PARAM*, List<Item>&))[0xf617ae]
sql/sql_select.cc:19616(create_tmp_table(THD*, TMP_TABLE_PARAM*, List<Item>&, st_order*, bool, bool, unsigned long long, unsigned long long, st_mysql_const_lex_string const*, bool, bool))[0xee6dbd]
sql/sql_select.cc:4010(JOIN::create_postjoin_aggr_table(st_join_table*, List<Item>*, st_order*, bool, bool, bool))[0xeebdea]
sql/sql_select.cc:3589(JOIN::make_aggr_tables_info())[0xed9d70]
sql/sql_select.cc:3225(JOIN::optimize_stage2())[0xea32bc]
sql/sql_select.cc:2479(JOIN::optimize_inner())[0xeaf999]
??:0(JOIN::optimize())[0xe8ac3c]
sql/sql_lex.cc:4938(st_select_lex::optimize_unflattened_subqueries(bool))[0xc7cfb9]
sql/sql_select.cc:3270(JOIN::optimize_stage2())[0xe8b43c]
sql/sql_select.cc:2479(JOIN::optimize_inner())[0xeaf999]
??:0(JOIN::optimize())[0xe8ac3c]
sql/sql_lex.cc:4938(st_select_lex::optimize_unflattened_subqueries(bool))[0xc7cfb9]
sql/sql_insert.cc:852(mysql_insert(THD*, TABLE_LIST*, List<Item>&, List<List<Item> >&, List<Item>&, List<Item>&, enum_duplicates, bool, select_result*))[0xc09dab]
sql/sql_parse.cc:4563(mysql_execute_command(THD*, bool))[0xd3a69a]
sql/sql_parse.cc:8028(mysql_parse(THD*, char*, unsigned int, Parser_state*))[0xd1155c]
sql/sql_parse.cc:1991(dispatch_command(enum_server_command, THD*, char*, unsigned int, bool))[0xd0800b]
??:0(do_command(THD*, bool))[0xd137aa]
sql/sql_connect.cc:1418(do_handle_one_connection(CONNECT*, bool))[0x131b0a3]
sql/sql_connect.cc:0(handle_one_connection)[0x131a831]
perfschema/pfs.cc:2203(pfs_spawn_thread)[0x23fd89f]
??:0(start_thread)[0x7fab9b7c2609]
??:0(clone)[0x7fab9b4d8133]

Trying to get some variables.
Some pointers may be invalid and cause the dump to abort.
Query (0x6290001274a6): INSERT INTO v0 ( v3 ) VALUES ( 79 ) , ( 87047147.000000 / 28921260.000000 IN ( SELECT DISTINCT v3 WHERE 'x' BETWEEN ( SELECT ( SELECT LAST_VALUE ( ( v3 = v3 AND -128 ) ) OVER ( ORDER BY v1 ) ) AS v5 FROM v0 AS v4 GROUP BY v3 HAVING v1 ) AND 35 ) ) 

Connection ID (thread ID): 2723
Status: NOT_KILLED

Optimizer switch: index_merge=on,index_merge_union=on,index_merge_sort_union=on,index_merge_intersection=on,index_merge_sort_intersection=off,engine_condition_pushdown=off,index_condition_pushdown=on,derived_merge=on,derived_with_keys=on,firstmatch=on,loosescan=on,materialization=on,in_to_exists=on,semijoin=on,partial_match_rowid_merge=on,partial_match_table_scan=on,subquery_cache=on,mrr=off,mrr_cost_based=off,mrr_sort_keys=off,outer_join_with_cache=on,semijoin_with_cache=on,join_cache_incremental=on,join_cache_hashed=on,join_cache_bka=on,optimize_join_buffer_size=on,table_elimination=on,extended_keys=on,exists_to_in=on,orderby_uses_equalities=on,condition_pushdown_for_derived=on,split_materialized=on,condition_pushdown_for_subquery=on,rowid_filter=on,condition_pushdown_from_having=on,not_null_range_scan=off

The manual page at https://mariadb.com/kb/en/how-to-produce-a-full-stack-trace-for-mysqld/ contains
information that should help you find out what is causing the crash.
Writing a core file...
Working directory at /dev/shm/out/mysql_client_dir_3306
Resource Limits:
Limit                     Soft Limit           Hard Limit           Units     
Max cpu time              unlimited            unlimited            seconds   
Max file size             unlimited            unlimited            bytes     
Max data size             unlimited            unlimited            bytes     
Max stack size            8388608              unlimited            bytes     
Max core file size        0                    unlimited            bytes     
Max resident set          unlimited            unlimited            bytes     
Max processes             unlimited            unlimited            processes 
Max open files            1048576              1048576              files     
Max locked memory         65536                65536                bytes     
Max address space         unlimited            unlimited            bytes     
Max file locks            unlimited            unlimited            locks     
Max pending signals       2062354              2062354              signals   
Max msgqueue size         819200               819200               bytes     
Max nice priority         0                    0                    
Max realtime priority     0                    0                    
Max realtime timeout      unlimited            unlimited            us        
Core pattern: core

