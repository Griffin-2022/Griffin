mysql_inplace_alter_table: mutex: LOCK_table_cache (0x61e0000011d8) locking
mysql_inplace_alter_table: mutex: LOCK_table_cache (0x61e0000011d8) locked
mysql_inplace_alter_table: mutex: LOCK_table_cache (0x61e0000011d8) unlocking
mysql_inplace_alter_table: mutex: LOCK_table_cache (0x61e0000012e8) locking
mysql_inplace_alter_table: mutex: LOCK_table_cache (0x61e0000012e8) locked
mysql_inplace_alter_table: mutex: LOCK_table_cache (0x61e0000012e8) unlocking
mysql_inplace_alter_table: mutex: LOCK_table_cache (0x61e0000013f8) locking
mysql_inplace_alter_table: mutex: LOCK_table_cache (0x61e0000013f8) locked
mysql_inplace_alter_table: mutex: LOCK_table_cache (0x61e0000013f8) unlocking
mysql_inplace_alter_table: mutex: element->LOCK_table_share (0x61b000492ec0) unlocking
mysql_inplace_alter_table: mutex: element->LOCK_table_share (0x61b000492ec0) locking
mysql_inplace_alter_table: mutex: element->LOCK_table_share (0x61b000492ec0) locked
mysql_inplace_alter_table: mutex: element->LOCK_table_share (0x61b000492ec0) unlocking
alloc_root: enter: root: 0x62b0001641a8
alloc_root: exit: ptr: 0x6290000e9e20
lock_tables_check: info: Adding mdl lock MDL_SHARED_READ to MDL_EXCLUSIVE
get_lock_data: info: count 1
alloc_root: enter: root: 0x62b0001641a8
alloc_root: exit: ptr: 0x6290000e9e30
ha_partition::store_lock: info: store lock 0 iteration
ha_partition::store_lock: info: store lock 1 iteration
ha_partition::store_lock: info: store lock 2 iteration
ha_partition::store_lock: info: store lock 3 iteration
ha_partition::store_lock: info: store lock 4 iteration
ha_partition::store_lock: info: store lock 5 iteration
ha_partition::store_lock: info: store lock 6 iteration
ha_partition::store_lock: info: store lock 7 iteration
ha_partition::store_lock: info: store lock 8 iteration
ha_partition::store_lock: info: store lock 9 iteration
get_lock_data: info: sql_lock->table_count 1 sql_lock->lock_count 0
mysql_lock_tables(sql_lock): THD::enter_stage: System lock at /root/mariadb/sql/lock.cc:337
lock_external: info: count 1
ha_partition::external_lock: info: external_lock(thd, 0) part 0
ha_innobase::external_lock: enter: lock_type: 0
ha_innobase::update_thd: ha_innobase::update_thd: user_thd: 0x62b00015e288 -> 0x62b00015e288
trans_register_ha: enter: stmt
ha_partition::external_lock: info: external_lock part 0 lock 0
ha_partition::external_lock: info: external_lock(thd, 0) part 1
ha_innobase::external_lock: enter: lock_type: 0
ha_innobase::update_thd: ha_innobase::update_thd: user_thd: 0x62b00015e288 -> 0x62b00015e288
trans_register_ha: enter: stmt
ha_partition::external_lock: info: external_lock part 1 lock 0
ha_partition::external_lock: info: external_lock(thd, 0) part 2
ha_innobase::external_lock: enter: lock_type: 0
ha_innobase::update_thd: ha_innobase::update_thd: user_thd: 0x62b00015e288 -> 0x62b00015e288
trans_register_ha: enter: stmt
ha_partition::external_lock: info: external_lock part 2 lock 0
ha_partition::external_lock: info: external_lock(thd, 0) part 3
ha_innobase::external_lock: enter: lock_type: 0
ha_innobase::update_thd: ha_innobase::update_thd: user_thd: 0x62b00015e288 -> 0x62b00015e288
trans_register_ha: enter: stmt
ha_partition::external_lock: info: external_lock part 3 lock 0
ha_partition::external_lock: info: external_lock(thd, 0) part 4
ha_innobase::external_lock: enter: lock_type: 0
ha_innobase::update_thd: ha_innobase::update_thd: user_thd: 0x62b00015e288 -> 0x62b00015e288
trans_register_ha: enter: stmt
ha_partition::external_lock: info: external_lock part 4 lock 0
ha_partition::external_lock: info: external_lock(thd, 0) part 5
ha_innobase::external_lock: enter: lock_type: 0
ha_innobase::update_thd: ha_innobase::update_thd: user_thd: 0x62b00015e288 -> 0x62b00015e288
trans_register_ha: enter: stmt
ha_partition::external_lock: info: external_lock part 5 lock 0
ha_partition::external_lock: info: external_lock(thd, 0) part 6
ha_innobase::external_lock: enter: lock_type: 0
ha_innobase::update_thd: ha_innobase::update_thd: user_thd: 0x62b00015e288 -> 0x62b00015e288
trans_register_ha: enter: stmt
ha_partition::external_lock: info: external_lock part 6 lock 0
ha_partition::external_lock: info: external_lock(thd, 0) part 7
ha_innobase::external_lock: enter: lock_type: 0
ha_innobase::update_thd: ha_innobase::update_thd: user_thd: 0x62b00015e288 -> 0x62b00015e288
trans_register_ha: enter: stmt
ha_partition::external_lock: info: external_lock part 7 lock 0
ha_partition::external_lock: info: external_lock(thd, 0) part 8
ha_innobase::external_lock: enter: lock_type: 0
ha_innobase::update_thd: ha_innobase::update_thd: user_thd: 0x62b00015e288 -> 0x62b00015e288
trans_register_ha: enter: stmt
ha_partition::external_lock: info: external_lock part 8 lock 0
ha_partition::external_lock: info: external_lock(thd, 0) part 9
ha_innobase::external_lock: enter: lock_type: 0
ha_innobase::update_thd: ha_innobase::update_thd: user_thd: 0x62b00015e288 -> 0x62b00015e288
trans_register_ha: enter: stmt
ha_partition::external_lock: info: external_lock part 9 lock 0
mysql_lock_tables(sql_lock): THD::enter_stage: table lock at /root/mariadb/sql/lock.cc:342
mysql_lock_tables(sql_lock): THD::enter_stage: After create at /root/mariadb/sql/lock.cc:357
THD::decide_logging_format: info: Query: ALTER TABLE sys_trx_start ENCRYPTED=NO ENCRYPTION_KEY_ID=1
THD::decide_logging_format: info: binlog_format: 0
THD::decide_logging_format: info: current_stmt_binlog_format: 1
THD::decide_logging_format: info: lex->get_stmt_unsafe_flags(): 0x0
THD::decide_logging_format: info: decision: no logging since mysql_bin_log.is_open() = 0 and (options & OPTION_BIN_LOG) = 0x40000 and binlog_format = 0 and binlog_filter->db_ok(db) = 1
mysql_inplace_alter_table: THD::enter_stage: preparing for alter table at /root/mariadb/sql/sql_table.cc:7394
update_phase: ddl_log: pos: 4  phase: 4
my_pwrite: my: fd: 3  Seek: 16386  Buffer: 0x7fedb14000f0  Count: 1  MyFlags: 20
my_sync: my: fd: 3  my_flags: 16
alloc_root: enter: root: 0x62b0001641a8
alloc_root: exit: ptr: 0x6290000e9e60
innobase_trx_allocate: mutex: mutex (0x611000001480) locking
innobase_trx_allocate: mutex: mutex (0x611000001480) locked
innobase_trx_allocate: mutex: mutex (0x611000001480) unlocking
innobase_trx_allocate: mutex: mutex (0x6120000012a0) locking
innobase_trx_allocate: 