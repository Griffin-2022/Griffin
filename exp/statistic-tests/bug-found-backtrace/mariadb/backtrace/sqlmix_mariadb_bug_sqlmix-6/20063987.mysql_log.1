         WHERE ID = foreign_id;
        id_len := LENGTH(foreign_id);
        IF (INSTR(foreign_id, '/') > 0) THEN
  
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_FOREIGN'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_FOREIGN'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_FOREIGN'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_FOREIGN_COLS'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_FOREIGN'
que_eval_sql: ib_que: Execute 9 (QUERY THREAD) at 0x62500008d6b0
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x62500008d758
que_eval_sql: ib_que: Execute 23 (ASSIGNMENT) at 0x629001e6f780
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x62500008d758
que_eval_sql: ib_que: Execute 23 (ASSIGNMENT) at 0x629001e6fc78
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x62500008d758
que_eval_sql: ib_que: Execute 23 (ASSIGNMENT) at 0x629001e70170
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x62500008d758
que_eval_sql: ib_que: Execute 23 (ASSIGNMENT) at 0x629001e705f8
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x62500008d758
que_eval_sql: ib_que: Execute 23 (ASSIGNMENT) at 0x629001e70898
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x62500008d758
que_eval_sql: ib_que: Execute 23 (ASSIGNMENT) at 0x629001e70c30
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x62500008d758
que_eval_sql: ib_que: Execute 1046 (WHILE) at 0x62500008c628
que_eval_sql: ib_que: Execute 6 (SELECT) at 0x629001e710c0
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locking
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locked
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) unlocking
que_eval_sql: ib_que: Execute 1046 (WHILE) at 0x62500008c628
que_eval_sql: ib_que: Execute 1045 (IF) at 0x62500008c5c8
que_eval_sql: ib_que: Execute 23 (ASSIGNMENT) at 0x629001e71fc8
que_eval_sql: ib_que: Execute 1045 (IF) at 0x62500008c5c8
que_eval_sql: ib_que: Execute 1046 (WHILE) at 0x62500008c628
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x62500008d758
que_eval_sql: ib_que: Execute 4 (UPDATE) at 0x62500008c998
que_eval_sql: ib_que: Execute 6 (SELECT) at 0x62500008d0d0
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locking
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locked
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) unlocking
que_eval_sql: ib_que: Execute 4 (UPDATE) at 0x62500008c998
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x62500008d758
que_eval_sql: ib_que: Execute 9 (QUERY THREAD) at 0x62500008d6b0
que_graph_free_recursive: que_graph_free_recursive: node: 0x62500008d5f8, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x62500008d6b0, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x62500008d758, type: 1044
que_graph_free_recursive: que_graph_free_recursive: node: 0x629001e6f780, type: 23
que_graph_free_recursive: que_graph_free_recursive: node: 0x629001e6fc78, type: 23
que_graph_free_recursive: que_graph_free_recursive: node: 0x629001e70170, type: 23
que_graph_free_recursive: que_graph_free_recursive: node: 0x629001e705f8, type: 23
que_graph_free_recursive: que_graph_free_recursive: node: 0x629001e70898, type: 23
que_graph_free_recursive: que_graph_free_recursive: node: 0x629001e70c30, type: 23
que_graph_free_recursive: que_graph_free_recursive: node: 0x62500008c628, type: 1046
que_graph_free_recursive: que_graph_free_recursive: node: 0x629001e710c0, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x62500008c5c8, type: 1045
que_graph_free_recursive: que_graph_free_recursive: node: 0x629001e71fc8, type: 23
que_graph_free_recursive: que_graph_free_recursive: node: 0x62500070d3c8, type: 4
que_graph_free_recursive: que_graph_free_recursive: node: 0x62500070d758, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x62500070de78, type: 23
que_graph_free_recursive: que_graph_free_recursive: node: 0x62500008c568, type: 1045
que_graph_free_recursive: que_graph_free_recursive: node: 0x6250013d3bc8, type: 1045
que_graph_free_recursive: que_graph_free_recursive: node: 0x62500070eb20, type: 23
que_graph_free_recursive: que_graph_free_recursive: node: 0x6250013d33f8, type: 23
que_graph_free_recursive: que_graph_free_recursive: node: 0x6250013d3b78, type: 23
que_graph_free_recursive: que_graph_free_recursive: node: 0x6250013d3f58, type: 4
que_graph_free_recursive: que_graph_free_recursive: node: 0x6250013d42e8, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x6250013d4ae0, type: 4
que_graph_free_recursive: que_graph_free_recursive: node: 0x6250013d4e70, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x62500008c998, type: 4
que_graph_free_recursive: que_graph_free_recursive: node: 0x62500008d0d0, type: 6
commit_try_rebuild: mutex: mutex (0x69533c0) locking
commit_try_rebuild: mutex: mutex (0x69533c0) locked
commit_try_rebuild: mutex: mutex (0x69533c0) unlocking
commit_try_rebuild: mutex: mutex (0x69533c0) locking
commit_try_rebuild: mutex: mutex (0x69533c0) locked
commit_try_rebuild: ib_log: write 70219711 to 70220055
commit_try_rebuild: mutex: mutex (0x69533c0) unlocking
commit_try_rebuild: ib_log: write 70219264 to 70212608: len 1024 blocks 137148..137149
commit_try_rebuild: mutex: mutex (0x69a4520) locking
commit_try_rebuild: mutex: mutex (0x69a4520) locked
commit_try_rebuild: mutex: mutex (0x69a4520) unlocking
commit_try_rebuild: mutex: mutex (0x69533c0) locking
commit_try_rebuild: mutex: mutex (0x69533c0) locked
commit_try_rebuild: mutex: mutex (0x69a4520) locking
commit_try_rebuild: mutex: mutex (0x69a4520) locked
commit_try_rebuild: mutex: mutex (0x69533c0) unlocking
commit_try_rebuild: mutex: mutex (0x69a4520) unlocking
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locking
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locked
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) unlocking
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locking
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locked
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) unlocking
que_eval_sql: que_eval_sql: query: PROCEDURE DELETE_FROM_TABLE_STATS () IS
BEGIN
DELETE FROM "mysql/innodb_table_stats" WHERE
database_name = :database_name AND
table_name = :table_name;
END;

dict_table_open_on_name: dict_table_open_on_name: table: 'mysql/innodb_table_stats'
