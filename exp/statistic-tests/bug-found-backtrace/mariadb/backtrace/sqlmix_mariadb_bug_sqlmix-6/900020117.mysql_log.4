que_graph_free_recursive: que_graph_free_recursive: node: 0x62900a5d4ea0, type: 25
que_graph_free_recursive: que_graph_free_recursive: node: 0x62900a5d4ef0, type: 28
que_graph_free_recursive: que_graph_free_recursive: node: 0x62900a5d5088, type: 25
que_graph_free_recursive: que_graph_free_recursive: node: 0x62900a5d51d0, type: 25
que_graph_free_recursive: que_graph_free_recursive: node: 0x62900a5d5400, type: 23
que_graph_free_recursive: que_graph_free_recursive: node: 0x62900a5d5cf0, type: 1046
que_graph_free_recursive: que_graph_free_recursive: node: 0x62900a5d58a0, type: 24
que_graph_free_recursive: que_graph_free_recursive: node: 0x62900a5d5c90, type: 1045
que_graph_free_recursive: que_graph_free_recursive: node: 0x62900a5d5c40, type: 23
que_graph_free_recursive: que_graph_free_recursive: node: 0x62900a5d5e38, type: 25
info: mutex: mutex (0x6130000d3ec0) locking
info: mutex: mutex (0x6130000d3ec0) locked
info: mutex: mutex (0x6130000d3ec0) unlocking
info: trx: Commit in memory: 0x7ff50b33f9d0
info: mutex: mutex (0x52b5200) locking
info: mutex: mutex (0x52b5200) locked
info: mutex: mutex (0x52b5200) unlocking
info: mutex: mutex (0x6120000012a0) locking
info: mutex: mutex (0x6120000012a0) locked
info: mutex: mutex (0x6120000012a0) unlocking
dirname_part: enter: '././mhrdsgrm/t1.frm'
dirname_part: enter: '././mhrdsgrm/'
cleanup_dirname: enter: from: '././mhrdsgrm/'
cleanup_dirname: exit: to: './mhrdsgrm/'
alloc_root: enter: root: 0x6190001223a0
my_malloc: my: size: 1016 flags: 4112
my_malloc: info: global thd memory_used: 7656  size: 1040
my_malloc: exit: ptr: 0x61a0042de108
alloc_root: exit: ptr: 0x61a0042de128
open_table_from_share: mutex: share->LOCK_share (0x61b00089d9e8) locking
open_table_from_share: mutex: share->LOCK_share (0x61b00089d9e8) locked
open_table_from_share: mutex: share->LOCK_share (0x61b00089d9e8) unlocking
build_table_filename: enter: db: 'mhrdsgrm'  table_name: 't1'  ext: '.TRG'  flags: 0
tablename_to_filename: enter: from 'mhrdsgrm'
tablename_to_filename: exit: to 'mhrdsgrm'
tablename_to_filename: enter: from 't1'
tablename_to_filename: exit: to 't1'
build_table_filename: exit: buff: './mhrdsgrm/t1.TRG'
open_table: mutex: element->LOCK_table_share (0x61b0012bf1c0) locking
open_table: mutex: element->LOCK_table_share (0x61b0012bf1c0) locked
open_table: mutex: element->LOCK_table_share (0x61b0012bf1c0) unlocking
open_table: mutex: LOCK_table_cache (0x61e000000c88) locking
open_table: mutex: LOCK_table_cache (0x61e000000c88) locked
open_table: mutex: LOCK_table_cache (0x61e000000c88) unlocking
MDL_context::acquire_lock: enter: lock_type: MDL_BACKUP_TRANS_DML  timeout: 86400.000000
MDL_context::acquire_lock: info: Got lock without waiting
my_malloc: my: size: 8 flags: 16
my_malloc: info: global thd memory_used: 13120  size: 32
my_malloc: exit: ptr: 0x60e000812088
open_table: mutex: LOCK_thd_data (0x62b000127fe8) locking
open_table: mutex: LOCK_thd_data (0x62b000127fe8) locked
open_table: mutex: LOCK_thd_data (0x62b000127fe8) unlocking
handle_table: info: table: 0x6290055b43e0  name: t1  db: mhrdsgrm  flags: 0
open_tables: THD::enter_stage: After opening tables at /root/mariadb/sql/sql_base.cc:4505
open_tables: THD::enter_stage: (null) at /root/mariadb/sql/sql_base.cc:4506
open_tables: open_tables: returning: 0
alloc_root: enter: root: 0x62b00012c1a8
alloc_root: exit: ptr: 0x6290055b5188
lock_tables_check: info: Adding mdl lock MDL_SHARED_WRITE to MDL_SHARED_WRITE
get_lock_data: info: count 1
alloc_root: enter: root: 0x62b00012c1a8
alloc_root: exit: ptr: 0x6290055b5198
get_lock_data: info: sql_lock->table_count 1 sql_lock->lock_count 0
mysql_lock_tables(sql_lock): THD::enter_stage: System lock at /root/mariadb/sql/lock.cc:337
lock_external: info: count 1
ha_innobase::external_lock: enter: lock_type: 1
ha_innobase::update_thd: ha_innobase::update_thd: user_thd: 0x62b000126288 -> 0x62b000126288
trans_register_ha: enter: stmt
mysql_lock_tables(sql_lock): THD::enter_stage: table lock at /root/mariadb/sql/lock.cc:342
mysql_lock_tables(sql_lock): THD::enter_stage: (null) at /root/mariadb/sql/lock.cc:357
THD::decide_logging_format: info: Query: delete from t1 where ST_Contains(@poly1, c2)
THD::decide_logging_format: info: binlog_format: 0
THD::decide_logging_format: info: current_stmt_binlog_format: 1
THD::decide_logging_format: info: lex->get_stmt_unsafe_flags(): 0x0
THD::decide_logging_format: info: decision: no logging since mysql_bin_log.is_open() = 0 and (options & OPTION_BIN_LOG) = 0x40000 and binlog_format = 0 and binlog_filter->db_ok(db) = 1
init_alloc_root: enter: root: 0x7ff4fd5c7188  prealloc: 0
open_and_lock_tables: enter: derived handling: 0
open_tables: THD::enter_stage: Opening tables at /root/mariadb/sql/sql_base.cc:4222
lock_table_names: info: mdl_request.type: 3  open_type: 0
lock_table_names: info: mdl_request.type: 3  open_type: 0
lock_table_names: info: mdl_request.type: 3  open_type: 0
open_and_process_table: tcache: opening table: 'mysql'.'table_stats'  item: 0x7ff4fd5c4a20
MDL_context::acquire_lock: enter: lock_type: MDL_SHARED_READ  timeout: 31536000.000000
MDL_context::acquire_lock: info: Got lock without waiting
alloc_table_share: enter: table: 'mysql'.'table_stats'
build_table_filename: enter: db: 'mysql'  table_name: 'table_stats'  ext: ''  flags: 0
tablename_to_filename: enter: from 'mysql'
tablename_to_filename: exit: to 'mysql'
tablename_to_filename: enter: from 'table_stats'
tablename_to_filename: exit: to 'table_stats'
build_table_filename: exit: buff: './mysql/table_stats'
init_alloc_root: enter: root: 0x7ff4fd5c1d80  prealloc: 0
alloc_root: enter: root: 0x7ff4fd5c1d80
my_malloc: my: size: 1520 flags: 4112
my_malloc: info: global thd memory_used: 13152  size: 1544
my_malloc: exit: ptr: 0x61b000537508
alloc_root: exit: ptr: 0x61b000537528
init_alloc_root: enter: root: 0x61b000537800  prealloc: 0
safe_mutex_init: enter: mutex: 0x61b0005376e8  name: &share->LOCK_share
safe_mutex_init: enter: mutex: 0x61b000537638  name: &share->LOCK_ha_data
