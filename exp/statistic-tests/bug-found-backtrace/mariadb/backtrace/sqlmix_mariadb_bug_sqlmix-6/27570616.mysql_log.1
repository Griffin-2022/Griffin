| | | | | | | | | | | | | | | | | >que_graph_free_recursive
| | | | | | | | | | | | | | | | | | que_graph_free_recursive: node: 0x629003ee4b30, type: 6
| | | | | | | | | | | | | | | | | <que_graph_free_recursive
| | | | | | | | | | | | | | | | <que_graph_free_recursive
| | | | | | | | | | | | | | | <que_graph_free_recursive
| | | | | | | | | | | | | | <que_graph_free_recursive
| | | | | | | | | | | | | <que_graph_free_recursive
| | | | | | | | | | | | <que_eval_sql
| | | | | | | | | | | | >que_eval_sql
| | | | | | | | | | | | | que_eval_sql: query: PROCEDURE RENAME_CONSTRAINT_IDS () IS
gen_constr_prefix CHAR;
new_db_name CHAR;
foreign_id CHAR;
new_foreign_id CHAR;
old_db_name_len INT;
old_t_name_len INT;
new_db_name_len INT;
id_len INT;
offset INT;
found INT;
BEGIN
found := 1;
old_db_name_len := INSTR(:old_table_name, '/')-1;
new_db_name_len := INSTR(:new_table_name, '/')-1;
new_db_name := SUBSTR(:new_table_name, 0,
                      new_db_name_len);
old_t_name_len := LENGTH(:old_table_name);
gen_constr_prefix := CONCAT(:old_table_name_utf8,
                            '_ibfk_');
WHILE found = 1 LOOP
       SELECT ID INTO foreign_id
        FROM SYS_FOREIGN
        WHERE FOR_NAME = :old_table_name
         AND TO_BINARY(FOR_NAME)
           = TO_BINARY(:old_table_name)
         LOCK IN SHARE MODE;
       IF (SQL % NOTFOUND) THEN
        found := 0;
       ELSE
        UPDATE SYS_FOREIGN
        SET FOR_NAME = :new_table_name
         WHERE ID = foreign_id;
        id_len := LENGTH(foreign_id);
        IF (INSTR(foreign_id, '/') > 0) THEN
  
| | | | | | | | | | | | | >dict_table_open_on_name
| | | | | | | | | | | | | | dict_table_open_on_name: table: 'SYS_FOREIGN'
| | | | | | | | | | | | | <dict_table_open_on_name
| | | | | | | | | | | | | >dict_table_open_on_name
| | | | | | | | | | | | | | dict_table_open_on_name: table: 'SYS_FOREIGN'
| | | | | | | | | | | | | <dict_table_open_on_name
| | | | | | | | | | | | | >dict_table_open_on_name
| | | | | | | | | | | | | | dict_table_open_on_name: table: 'SYS_FOREIGN'
| | | | | | | | | | | | | <dict_table_open_on_name
| | | | | | | | | | | | | >dict_table_open_on_name
| | | | | | | | | | | | | | dict_table_open_on_name: table: 'SYS_FOREIGN_COLS'
| | | | | | | | | | | | | <dict_table_open_on_name
| | | | | | | | | | | | | >dict_table_open_on_name
| | | | | | | | | | | | | | dict_table_open_on_name: table: 'SYS_FOREIGN'
| | | | | | | | | | | | | <dict_table_open_on_name
| | | | | | | | | | | | | ib_que: Execute 9 (QUERY THREAD) at 0x625000fce6b0
| | | | | | | | | | | | | ib_que: Execute 1044 (STORED PROCEDURE) at 0x625000fce758
| | | | | | | | | | | | | ib_que: Execute 23 (ASSIGNMENT) at 0x6290034f4780
| | | | | | | | | | | | | ib_que: Execute 1044 (STORED PROCEDURE) at 0x625000fce758
| | | | | | | | | | | | | ib_que: Execute 23 (ASSIGNMENT) at 0x6290034f4c78
| | | | | | | | | | | | | ib_que: Execute 1044 (STORED PROCEDURE) at 0x625000fce758
| | | | | | | | | | | | | ib_que: Execute 23 (ASSIGNMENT) at 0x6290034f5170
| | | | | | | | | | | | | ib_que: Execute 1044 (STORED PROCEDURE) at 0x625000fce758
| | | | | | | | | | | | | ib_que: Execute 23 (ASSIGNMENT) at 0x6290034f55f8
| | | | | | | | | | | | | ib_que: Execute 1044 (STORED PROCEDURE) at 0x625000fce758
| | | | | | | | | | | | | ib_que: Execute 23 (ASSIGNMENT) at 0x6290034f5898
| | | | | | | | | | | | | ib_que: Execute 1044 (STORED PROCEDURE) at 0x625000fce758
| | | | | | | | | | | | | ib_que: Execute 23 (ASSIGNMENT) at 0x6290034f5c30
| | | | | | | | | | | | | ib_que: Execute 1044 (STORED PROCEDURE) at 0x625000fce758
| | | | | | | | | | | | | ib_que: Execute 1046 (WHILE) at 0x625000fcd628
| | | | | | | | | | | | | ib_que: Execute 6 (SELECT) at 0x6290034f60c0
| | | | | | | | | | | | | >btr_cur_search_to_nth_level
| | | | | | | | | | | | | | mutex: mutex (0x69a4520) locking
| | | | | | | | | | | | | | mutex: mutex (0x69a4520) locked
| | | | | | | | | | | | | | mutex: mutex (0x69a4520) unlocking
| | | | | | | | | | | | | <btr_cur_search_to_nth_level
| | | | | | | | | | | | | ib_que: Execute 1046 (WHILE) at 0x625000fcd628
| | | | | | | | | | | | | ib_que: Execute 1045 (IF) at 0x625000fcd5c8
| | | | | | | | | | | | | ib_que: Execute 23 (ASSIGNMENT) at 0x6290034f6fc8
| | | | | | | | | | | | | ib_que: Execute 1045 (IF) at 0x625000fcd5c8
| | | | | | | | | | | | | ib_que: Execute 1046 (WHILE) at 0x625000fcd628
| | | | | | | | | | | | | ib_que: Execute 1044 (STORED PROCEDURE) at 0x625000fce758
| | | | | | | | | | | | | ib_que: Execute 4 (UPDATE) at 0x625000fcd998
| | | | | | | | | | | | | >row_upd_step
| | | | | | | | | | | | | <row_upd_step
| | | | | | | | | | | | | ib_que: Execute 6 (SELECT) at 0x625000fce0d0
| | | | | | | | | | | | | >btr_cur_search_to_nth_level
| | | | | | | | | | | | | | mutex: mutex (0x69a4520) locking
| | | | | | | | | | | | | | mutex: mutex (0x69a4520) locked
| | | | | | | | | | | | | | mutex: mutex (0x69a4520) unlocking
| | | | | | | | | | | | | <btr_cur_search_to_nth_level
| | | | | | | | | | | | | ib_que: Execute 4 (UPDATE) at 0x625000fcd998
| | | | | | | | | | | | | >row_upd_step
| | | | | | | | | | | | | <row_upd_step
| | | | | | | | | | | | | ib_que: 