row_upd: mutex: mutex (0x69533c0) locking
row_upd: mutex: mutex (0x69533c0) locked
row_upd: mutex: mutex (0x69533c0) unlocking
explain_filename: enter: from 'SYS_COLUMNS'
add_identifier: info: conv 'SYS_COLUMNS' -> 'SYS_COLUMNS'
explain_filename: exit: to '`SYS_COLUMNS`'
row_upd: exit: delete-mark clust `SYS_COLUMNS` (2) by 0x14c13: RECORD(info_bits=32, 9 fields): {[8]      / (0x0000000000002FEF),[4]    (0x00000000),[6]    K (0x000000014BFA),[7]      E(0xEE000001BC1945),[2]c1(0x6331),[4]    (0x00000006),[4]    (0x00000503),[4]    (0x00000004),[4]    (0x00000000)}
row_upd: mutex: mutex (0x69533c0) locking
row_upd: mutex: mutex (0x69533c0) locked
row_upd: mutex: mutex (0x69533c0) unlocking
que_eval_sql: ib_que: Execute 6 (SELECT) at 0x629004cf0de0
que_eval_sql: ib_que: Execute 4 (UPDATE) at 0x629004cf0a60
row_upd: row_upd: table: SYS_COLUMNS
row_upd: row_upd: info bits in update vector: 0x0
row_upd: row_upd: foreign_id: NULL
row_upd: mutex: mutex (0x69a4520) locking
row_upd: mutex: mutex (0x69a4520) locked
row_upd: mutex: mutex (0x69a4520) unlocking
row_upd: mutex: mutex (0x69533c0) locking
row_upd: mutex: mutex (0x69533c0) locked
row_upd: mutex: mutex (0x69533c0) unlocking
explain_filename: enter: from 'SYS_COLUMNS'
add_identifier: info: conv 'SYS_COLUMNS' -> 'SYS_COLUMNS'
explain_filename: exit: to '`SYS_COLUMNS`'
row_upd: exit: delete-mark clust `SYS_COLUMNS` (2) by 0x14c13: RECORD(info_bits=32, 9 fields): {[8]      / (0x0000000000002FEF),[4]    (0x00000001),[6]    K (0x000000014BFA),[7]      Z(0xEE000001BC195A),[2]c2(0x6332),[4]    (0x0000000E),[4]    (0x000004FF),[4]    (0x0000000C),[4]    (0x00000000)}
row_upd: mutex: mutex (0x69533c0) locking
row_upd: mutex: mutex (0x69533c0) locked
row_upd: mutex: mutex (0x69533c0) unlocking
que_eval_sql: ib_que: Execute 6 (SELECT) at 0x629004cf0de0
que_eval_sql: ib_que: Execute 4 (UPDATE) at 0x629004cf0a60
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x629004cf28f8
que_eval_sql: ib_que: Execute 25 (OPEN) at 0x629004cf1328
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x629004cf28f8
que_eval_sql: ib_que: Execute 1046 (WHILE) at 0x629004cf2608
que_eval_sql: ib_que: Execute 24 (FETCH) at 0x629004cf17b0
que_eval_sql: ib_que: Execute 6 (SELECT) at 0x629004cef898
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locking
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locked
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) unlocking
que_eval_sql: ib_que: Execute 24 (FETCH) at 0x629004cf17b0
que_eval_sql: ib_que: Execute 1046 (WHILE) at 0x629004cf2608
que_eval_sql: ib_que: Execute 1045 (IF) at 0x629004cf19b0
que_eval_sql: ib_que: Execute 1046 (WHILE) at 0x629004cf2608
que_eval_sql: ib_que: Execute 4 (UPDATE) at 0x629004cf1b08
row_upd: row_upd: table: SYS_INDEXES
row_upd: row_upd: info bits in update vector: 0x0
row_upd: row_upd: foreign_id: NULL
row_upd: mutex: mutex (0x69a4520) locking
row_upd: mutex: mutex (0x69a4520) locked
row_upd: mutex: mutex (0x69a4520) unlocking
row_upd: mutex: mutex (0x69533c0) locking
row_upd: mutex: mutex (0x69533c0) locked
row_upd: mutex: mutex (0x69533c0) unlocking
explain_filename: enter: from 'SYS_INDEXES'
add_identifier: info: conv 'SYS_INDEXES' -> 'SYS_INDEXES'
explain_filename: exit: to '`SYS_INDEXES`'
row_upd: exit: delete-mark clust `SYS_INDEXES` (3) by 0x14c13: RECORD(info_bits=32, 10 fields): {[8]      / (0x0000000000002FEF),[8]      :9(0x0000000000003A39),[6]    K (0x000000014BFA),[7]      o(0xEE000001BC196F),[7]PRIMARY(0x5052494D415259),[4]    (0x00000001),[4]    (0x00000003),[4]  /%(0x00002F25),[4]    (0x00000003),[4]   2(0x00000032)}
row_upd: mutex: mutex (0x69533c0) locking
row_upd: mutex: mutex (0x69533c0) locked
row_upd: mutex: mutex (0x69533c0) unlocking
que_eval_sql: ib_que: Execute 1046 (WHILE) at 0x629004cf2608
que_eval_sql: ib_que: Execute 4 (UPDATE) at 0x629004cf1e20
que_eval_sql: ib_que: Execute 6 (SELECT) at 0x629004cf21b0
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locking
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locked
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) unlocking
que_eval_sql: ib_que: Execute 4 (UPDATE) at 0x629004cf1e20
row_upd: row_upd: table: SYS_FIELDS
row_upd: row_upd: info bits in update vector: 0x0
row_upd: row_upd: foreign_id: NULL
row_upd: mutex: mutex (0x69a4520) locking
row_upd: mutex: mutex (0x69a4520) locked
row_upd: mutex: mutex (0x69a4520) unlocking
row_upd: mutex: mutex (0x69533c0) locking
row_upd: mutex: mutex (0x69533c0) locked
row_upd: mutex: mutex (0x69533c0) unlocking
explain_filename: enter: from 'SYS_FIELDS'
add_identifier: info: conv 'SYS_FIELDS' -> 'SYS_FIELDS'
explain_filename: exit: to '`SYS_FIELDS`'
row_upd: exit: delete-mark clust `SYS_FIELDS` (4) by 0x14c13: RECORD(info_bits=32, 5 fields): {[8]      :9(0x0000000000003A39),[4]    (0x00000000),[6]    K (0x000000014BFA),[7]       (0xEE000001BC1988),[2]c1(0x6331)}
row_upd: mutex: mutex (0x69533c0) locking
row_upd: mutex: mutex (0x69533c0) locked
row_upd: mutex: mutex (0x69533c0) unlocking
que_eval_sql: ib_que: Execute 6 (SELECT) at 0x629004cf21b0
que_eval_sql: ib_que: Execute 4 (UPDATE) at 0x629004cf1e20
que_eval_sql: ib_que: Execute 1046 (WHILE) at 0x629004cf2608
que_eval_sql: ib_que: Execute 24 (FETCH) at 0x629004cf17b0
que_eval_sql: ib_que: Execute 6 (SELECT) at 0x629004cef898
que_eval_sql: ib_que: Execute 24 (FETCH) at 0x629004cf17b0
que_eval_sql: ib_que: Execute 1046 (WHILE) at 0x629004cf2608
que_eval_sql: ib_que: Execute 1045 (IF) at 0x629004cf19b0
que_eval_sql: ib_que: Execute 32 (EXIT) at 0x629004cf1970
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x629004cf28f8
que_eval_sql: ib_que: Execute 25 (OPEN) at 0x629004cf2748
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x629004cf28f8
que_eval_sql: ib_que: Execute 9 (QUERY THREAD) at 0x629004cf2850
que_graph_free_recursive: que_graph_free_recursive: node: 0x629004cef898, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x629004cf2798, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x629004cf2850, type: 9
que_graph_free_recursive: que_graph_free_recursive: 