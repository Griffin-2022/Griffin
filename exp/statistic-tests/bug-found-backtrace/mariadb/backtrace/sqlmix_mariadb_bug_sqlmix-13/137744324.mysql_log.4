innobase_trx_allocate: trx: Create: 0x7f5c0c83fb80
innobase_trx_allocate: mutex: mutex (0x52b5200) locking
innobase_trx_allocate: mutex: mutex (0x52b5200) locked
innobase_trx_allocate: mutex: mutex (0x52b5200) unlocking
que_graph_free_recursive: que_graph_free_recursive: node: 0x61700094f318, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b000e0b720, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x61700094f220, type: 6
dict_table_open_on_name: dict_table_open_on_name: table: 'mysql/innodb_table_stats'
filename_to_tablename: enter: from 'mysql'
filename_to_tablename: exit: to 'mysql'
filename_to_tablename: enter: from 'innodb_table_stats'
filename_to_tablename: exit: to 'innodb_table_stats'
MDL_context::acquire_lock: enter: lock_type: MDL_SHARED  timeout: 86400.000000
MDL_context::acquire_lock: info: Got lock without waiting
filename_to_tablename: enter: from 'mysql'
filename_to_tablename: exit: to 'mysql'
filename_to_tablename: enter: from 'innodb_table_stats'
filename_to_tablename: exit: to 'innodb_table_stats'
dict_table_open_on_name: dict_table_open_on_name: table: 'mysql/innodb_index_stats'
dict_load_table_one: dict_load_table_one: table: mysql/innodb_index_stats
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locking
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locked
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) unlocking
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000952e98, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b00091f020, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000952da0, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000950f18, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b000920520, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000950e20, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000951298, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b00060d420, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170009511a0, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000951998, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b0006e2520, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170009518a0, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000950818, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b0006e4120, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000950720, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000722098, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b0006e2c20, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000721fa0, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x61700094fd98, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b0008cf620, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x61700094fca0, type: 6
que_eval_sql: que_eval_sql: query: PROCEDURE DROP_FOREIGN() IS
fid CHAR;
DECLARE CURSOR fk IS
SELECT ID FROM SYS_FOREIGN
WHERE FOR_NAME=:name
AND TO_BINARY(FOR_NAME)=TO_BINARY(:name)
FOR UPDATE;
BEGIN
OPEN fk;
WHILE 1=1 LOOP
  FETCH fk INTO fid;
  IF (SQL % NOTFOUND)THEN RETURN;END IF;
  DELETE FROM SYS_FOREIGN_COLS WHERE ID=fid;
  DELETE FROM SYS_FOREIGN WHERE ID=fid;
END LOOP;
CLOSE fk;
END;

dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_FOREIGN'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_FOREIGN_COLS'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_FOREIGN'
que_eval_sql: ib_que: Execute 9 (QUERY THREAD) at 0x62900436f000
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x62900436f0a8
que_eval_sql: ib_que: Execute 25 (OPEN) at 0x62900436d518
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x62900436f0a8
que_eval_sql: ib_que: Execute 1046 (WHILE) at 0x62900436edb8
que_eval_sql: ib_que: Execute 24 (FETCH) at 0x62900436d9a0
que_eval_sql: ib_que: Execute 6 (SELECT) at 0x62900436c868
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locking
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locked
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) unlocking
que_eval_sql: ib_que: Execute 24 (FETCH) at 0x62900436d9a0
que_eval_sql: ib_que: Execute 1046 (WHILE) at 0x62900436edb8
que_eval_sql: ib_que: Execute 1045 (IF) at 0x62900436dba0
que_eval_sql: ib_que: Execute 28 (RETURN) at 0x62900436db60
que_eval_sql: ib_que: Execute 9 (QUERY THREAD) at 0x62900436f000
que_graph_free_recursive: que_graph_free_recursive: node: 0x62900436c868, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x62900436ef48, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x62900436f000, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x62900436f0a8, type: 1044
que_graph_free_recursive: que_graph_free_recursive: node: 0x62900436d518, type: 25
que_graph_free_recursive: que_graph_free_recursive: node: 0x62900436edb8, type: 1046
que_graph_free_recursive: que_graph_free_recursive: node: 0x62900436d9a0, type: 24
que_graph_free_recursive: que_graph_free_recursive: node: 0x62900436dba0, type: 1045
que_graph_free_recursive: que_graph_free_recursive: node: 0x62900436db60, type: 28
que_graph_free_recursive: que_graph_free_recursive: node: 0x62900436dd00, type: 4
que_graph_free_recursive: que_graph_free_recursive: node: 0x62900436e088, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x62900436e5d8, type: 4
que_graph_free_recursive: que_graph_free_recursive: node: 0x62900436e960, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x62900436eef8, type: 25
que_eval_sql: que_eval_sql: query: PROCEDURE DROP_VIRTUAL() IS
BEGIN
DELETE FROM SYS_VIRTUAL WHERE TABLE_ID=:id;
END;

dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_VIRTUAL'
