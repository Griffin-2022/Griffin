get_new_handler: info: handler created F_UNLCK 2 F_RDLCK 0 F_WRLCK 1
TABLE_SHARE::init_from_binary_frm_image: debug: field_type: smallint, field_length: 6, interval: 0x0, pack_flag: FIELDFLAG_BINARY FIELDFLAG_NUMBER FIELDFLAG_PACK 
alloc_root: enter: root: 0x7f6d2ba24c08
alloc_root: exit: ptr: 0x61a000ee7cd8
alloc_root: enter: root: 0x7f6d2ba24c08
alloc_root: exit: ptr: 0x61a000ee7db0
parse_option_list: enter: struct: 0x0 list: 0x0 rules: 0x51c2aa0 suppress_warning: 1 root: 0x7f6d2ba24c08
alloc_root: enter: root: 0x7f6d2ba24c08
alloc_root: exit: ptr: 0x61a000ee7dc0
set_one_value: enter: opt: 0x51c2aa0 type: 3 name 'PAGE_COMPRESSED' value: '<DEFAULT>'
set_one_value: enter: opt: 0x51c2af0 type: 0 name 'PAGE_COMPRESSION_LEVEL' value: '<DEFAULT>'
set_one_value: enter: opt: 0x51c2b40 type: 2 name 'ENCRYPTED' value: '<DEFAULT>'
set_one_value: enter: opt: 0x51c2b90 type: 0 name 'ENCRYPTION_KEY_ID' value: '<DEFAULT>'
parse_option_list: enter: struct: 0x0 list: 0x0 rules: 0x0 suppress_warning: 1 root: 0x7f6d2ba24c08
parse_option_list: enter: struct: 0x0 list: 0x0 rules: 0x0 suppress_warning: 1 root: 0x7f6d2ba24c08
alloc_root: enter: root: 0x7f6d2ba24c08
alloc_root: exit: ptr: 0x61a000ee7de8
open_table_from_share: enter: name: 'jidzmaau.bug13510739'  form: 0x7f6d2ba24520
init_alloc_root: enter: root: 0x7f6d2ba247b8  prealloc: 0
alloc_root: enter: root: 0x7f6d2ba247b8
my_malloc: my: size: 1016 flags: 4112
my_malloc: info: global thd memory_used: 1088  size: 1040
my_malloc: exit: ptr: 0x61a000ee8708
alloc_root: exit: ptr: 0x61a000ee8728
get_new_handler: enter: alloc: 0x7f6d2ba247b8
alloc_root: enter: root: 0x7f6d2ba247b8
my_malloc: my: size: 1992 flags: 4112
my_malloc: info: global thd memory_used: 2128  size: 2016
my_malloc: exit: ptr: 0x61d000eacf08
alloc_root: exit: ptr: 0x61d000eacf28
get_new_handler: info: handler created F_UNLCK 2 F_RDLCK 0 F_WRLCK 1
alloc_root: enter: root: 0x7f6d2ba247b8
alloc_root: exit: ptr: 0x61a000ee8738
alloc_root: enter: root: 0x7f6d2ba247b8
alloc_root: exit: ptr: 0x61a000ee8748
alloc_root: enter: root: 0x7f6d2ba247b8
alloc_root: exit: ptr: 0x61a000ee8760
alloc_root: enter: root: 0x7f6d2ba247b8
alloc_root: exit: ptr: 0x61a000ee8790
alloc_root: enter: root: 0x7f6d2ba247b8
alloc_root: exit: ptr: 0x61a000ee8868
alloc_root: enter: root: 0x7f6d2ba247b8
alloc_root: exit: ptr: 0x61a000ee8950
innobase_trx_allocate: mutex: mutex (0x611000001480) locking
innobase_trx_allocate: mutex: mutex (0x611000001480) locked
innobase_trx_allocate: mutex: mutex (0x611000001480) unlocking
innobase_trx_allocate: mutex: mutex (0x6120000012a0) locking
innobase_trx_allocate: mutex: mutex (0x6120000012a0) locked
innobase_trx_allocate: mutex: mutex (0x6120000012a0) unlocking
innobase_trx_allocate: trx: Create: 0x7f6d3bf49b80
innobase_trx_allocate: mutex: mutex (0x52b5200) locking
innobase_trx_allocate: mutex: mutex (0x52b5200) locked
innobase_trx_allocate: mutex: mutex (0x52b5200) unlocking
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000674598, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b000865f20, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170006744a0, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000675e18, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b000866620, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000675d20, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000676898, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b000866d20, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170006767a0, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000676518, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b000867420, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000676420, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000677318, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b000867b20, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000677220, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000678498, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b000868220, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170006783a0, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000676f98, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b000868920, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000676ea0, type: 6
create_table_def: enter: table_name: jidzmaau/bug13510739
create_table_def: ib_que: Execute 9 (QUERY THREAD) at 0x61b000869978
create_table_def: ib_que: Execute 14 (CREATE TABLE) at 0x617000676b20
create_table_def: mutex: mutex (0x69a4520) locking
create_table_def: mutex: mutex (0x69a4520) locked
create_table_def: mutex: mutex (0x69a4520) unlocking
create_table_def: mutex: mutex (0x69533c0) locking
create_table_def: mutex: mutex (0x69533c0) locked
create_table_def: mutex: mutex (0x69533c0) unlocking
create_table_def: mutex: mutex (0x69a4520) locking
create_table_def: mutex: mutex (0x69a4520) locked
create_table_def: mutex: mutex (0x69a4520) unlocking
create_table_def: mutex: mutex (0x69a4520) locking
create_table_def: mutex: mutex (0x69a4520) locked
create_table_def: mutex: mutex (0x69a4520) unlocking
create_table_def: mutex: mutex (0x69533c0) locking
create_table_def: mutex: mutex (0x69533c0) locked
create_table_def: mutex: mutex (0x69533c0) unlocking
create_table_def: ib_que: Execute 2 (INSERT) at 0x617000676ba0
row_ins: row_ins: table: SYS_TABLES
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locking
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locked
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) unlocking
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locking
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locked
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) unlocking
