que_graph_free_recursive: que_graph_free_recursive: node: 0x6170001822a0, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000182018, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b00021c620, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000181f20, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000181c98, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b00021bf20, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000181ba0, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000181918, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b00021b820, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000181820, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000181598, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b00021b120, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170001814a0, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000180798, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b00021aa20, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170001806a0, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000181218, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b00021a320, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000181120, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000180e98, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b000219c20, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000180da0, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000180b18, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b000219520, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000180a20, type: 6
que_eval_sql: que_eval_sql: query: PROCEDURE DROP_FOREIGN() IS
fid CHAR;
DECLARE CURSOR fk IS
SELECT ID FROM SYS_FOREIGN
WHERE FOR_NAME=:name
AND TO_BINARY(FOR_NAME)=TO_BINARY(:name)
FOR UPDATE;
BEGIN
OPEN fk;
WHILE 1=1 LOOP
  FETCH fk INTO fid;
  IF (SQL % NOTFOUND)THEN RETURN;END IF;
  DELETE FROM SYS_FOREIGN_COLS WHERE ID=fid;
  DELETE FROM SYS_FOREIGN WHERE ID=fid;
END LOOP;
CLOSE fk;
END;

dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_FOREIGN'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_FOREIGN_COLS'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_FOREIGN'
que_eval_sql: ib_que: Execute 9 (QUERY THREAD) at 0x629000639000
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x6290006390a8
que_eval_sql: ib_que: Execute 25 (OPEN) at 0x629000637518
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x6290006390a8
que_eval_sql: ib_que: Execute 1046 (WHILE) at 0x629000638db8
que_eval_sql: ib_que: Execute 24 (FETCH) at 0x6290006379a0
que_eval_sql: ib_que: Execute 6 (SELECT) at 0x629000636868
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locking
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locked
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) unlocking
que_eval_sql: ib_que: Execute 24 (FETCH) at 0x6290006379a0
que_eval_sql: ib_que: Execute 1046 (WHILE) at 0x629000638db8
que_eval_sql: ib_que: Execute 1045 (IF) at 0x629000637ba0
que_eval_sql: ib_que: Execute 28 (RETURN) at 0x629000637b60
que_eval_sql: ib_que: Execute 9 (QUERY THREAD) at 0x629000639000
que_graph_free_recursive: que_graph_free_recursive: node: 0x629000636868, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x629000638f48, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x629000639000, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x6290006390a8, type: 1044
que_graph_free_recursive: que_graph_free_recursive: node: 0x629000637518, type: 25
que_graph_free_recursive: que_graph_free_recursive: node: 0x629000638db8, type: 1046
que_graph_free_recursive: que_graph_free_recursive: node: 0x6290006379a0, type: 24
que_graph_free_recursive: que_graph_free_recursive: node: 0x629000637ba0, type: 1045
que_graph_free_recursive: que_graph_free_recursive: node: 0x629000637b60, type: 28
que_graph_free_recursive: que_graph_free_recursive: node: 0x629000637d00, type: 4
que_graph_free_recursive: que_graph_free_recursive: node: 0x629000638088, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x6290006385d8, type: 4
que_graph_free_recursive: que_graph_free_recursive: node: 0x629000638960, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x629000638ef8, type: 25
que_eval_sql: que_eval_sql: query: PROCEDURE DELETE_FROM_TABLE_STATS () IS
BEGIN
DELETE FROM "mysql/innodb_table_stats" WHERE
database_name = :database_name AND
table_name = :table_name;
END;

dict_table_open_on_name: dict_table_open_on_name: table: 'mysql/innodb_table_stats'
que_eval_sql: ib_que: Execute 9 (QUERY THREAD) at 0x629000632150
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x6290006321f8
que_eval_sql: ib_que: Execute 4 (UPDATE) at 0x6290006315d8
que_eval_sql: ib_que: Execute 6 (SELECT) at 0x629000631c20
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locking
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locked
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) unlocking
que_eval_sql: ib_que: Execute 4 (UPDATE) at 0x6290006315d8
row_upd: row_upd: table: mysql/innodb_table_stats
row_upd: row_upd: info bits in update vector: 0x0
row_upd: row_upd: foreign_id: NULL
row_upd: mutex: mutex (0x69a4520) locking
row_upd: mutex: mutex (0x69a4520) locked
row_upd: mutex: mutex (0x69a4520) unlocking
row_upd: mutex: mutex (0x69533c0) locking
row_upd: mutex: mutex (0x69533c0) locked
row_upd: mutex: mutex (0x69533c0) unlocking
