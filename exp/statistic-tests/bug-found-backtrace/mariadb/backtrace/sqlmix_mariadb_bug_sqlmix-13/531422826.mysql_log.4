  FETCH fkf INTO fk;
  IF (SQL % NOTFOUND) THEN EXIT; END IF;
  IF TO_BINARY(SUBSTR(fk, 0, LENGTH(:db)))<>TO_BINARY(:db) THEN EXIT; END IF;
  DELETE FROM SYS_FOREIGN_COLS WHERE TO_BINARY(ID)=TO_BINARY(fk);
  DELETE FROM SYS_FOREIGN WHERE CURRENT OF fkf;
END LOOP;
CLOSE fkf;
OPEN fkr;
FETCH fkr INTO fk_report();
CLOSE fkr;
OPEN tab;
WHILE 1 = 1 LOOP
  FETCH tab INTO tid,name;
  IF (SQL % NOTFOUND) THEN EXIT; END IF;
  IF SUBSTR(name, 0, LENGTH(:db)) <> :db THEN EXIT; END IF;
  DELETE FROM SYS_COLUMNS WHERE TABLE_ID=tid;
  D
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_FOREIGN'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_FOREIGN'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_TABLES'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_INDEXES'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_FOREIGN_COLS'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_FOREIGN'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_COLUMNS'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_TABLES'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_FIELDS'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_INDEXES'
que_eval_sql: ib_que: Execute 9 (QUERY THREAD) at 0x6250001e3be0
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x6250001e3c88
que_eval_sql: ib_que: Execute 25 (OPEN) at 0x62900273b888
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x6250001e3c88
que_eval_sql: ib_que: Execute 1046 (WHILE) at 0x6250001cd3c8
que_eval_sql: ib_que: Execute 24 (FETCH) at 0x62900273bd10
que_eval_sql: ib_que: Execute 6 (SELECT) at 0x629002738fe0
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locking
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locked
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) unlocking
que_eval_sql: ib_que: Execute 24 (FETCH) at 0x62900273bd10
que_eval_sql: ib_que: Execute 1046 (WHILE) at 0x6250001cd3c8
que_eval_sql: ib_que: Execute 1045 (IF) at 0x62900273bf10
que_eval_sql: ib_que: Execute 32 (EXIT) at 0x62900273bed0
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x6250001e3c88
que_eval_sql: ib_que: Execute 25 (OPEN) at 0x6250001cd508
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x6250001e3c88
que_eval_sql: ib_que: Execute 25 (OPEN) at 0x6250001cd648
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x6250001e3c88
que_eval_sql: ib_que: Execute 24 (FETCH) at 0x6250001cd880
que_eval_sql: ib_que: Execute 6 (SELECT) at 0x629002739a50
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locking
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locked
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) unlocking
que_eval_sql: ib_que: Execute 24 (FETCH) at 0x6250001cd880
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x6250001e3c88
que_eval_sql: ib_que: Execute 25 (OPEN) at 0x6250001cd9c8
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x6250001e3c88
que_eval_sql: ib_que: Execute 25 (OPEN) at 0x6250001cdb08
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x6250001e3c88
que_eval_sql: ib_que: Execute 1046 (WHILE) at 0x6250001e3998
que_eval_sql: ib_que: Execute 24 (FETCH) at 0x6250001ce080
que_eval_sql: ib_que: Execute 6 (SELECT) at 0x62900273a670
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locking
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locked
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) unlocking
que_eval_sql: ib_que: Execute 24 (FETCH) at 0x6250001ce080
que_eval_sql: ib_que: Execute 1046 (WHILE) at 0x6250001e3998
que_eval_sql: ib_que: Execute 1045 (IF) at 0x6250001e0348
que_eval_sql: ib_que: Execute 1046 (WHILE) at 0x6250001e3998
que_eval_sql: ib_que: Execute 1045 (IF) at 0x6250001e08f0
que_eval_sql: ib_que: Execute 32 (EXIT) at 0x6250001e08b0
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x6250001e3c88
que_eval_sql: ib_que: Execute 25 (OPEN) at 0x6250001e3ad8
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x6250001e3c88
que_eval_sql: ib_que: Execute 9 (QUERY THREAD) at 0x6250001e3be0
que_graph_free_recursive: que_graph_free_recursive: node: 0x629002738fe0, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x629002739a50, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x62900273a670, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x62900273afe8, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x6250001e3b28, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x6250001e3be0, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x6250001e3c88, type: 1044
que_graph_free_recursive: que_graph_free_recursive: node: 0x62900273b888, type: 25
que_graph_free_recursive: que_graph_free_recursive: node: 0x6250001cd3c8, type: 1046
que_graph_free_recursive: que_graph_free_recursive: node: 0x62900273bd10, type: 24
que_graph_free_recursive: que_graph_free_recursive: node: 0x62900273bf10, type: 1045
que_graph_free_recursive: que_graph_free_recursive: node: 0x62900273bed0, type: 32
que_graph_free_recursive: que_graph_free_recursive: node: 0x6250001cc6e8, type: 1045
que_graph_free_recursive: que_graph_free_recursive: node: 0x6250001cc6a8, type: 32
que_graph_free_recursive: que_graph_free_recursive: node: 0x6250001cc848, type: 4
que_graph_free_recursive: que_graph_free_recursive: node: 0x6250001cccc0, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x6250001cd1a8, type: 4
que_graph_free_recursive: que_graph_free_recursive: node: 0x629002738fe0, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x6250001cd508, type: 25
que_graph_free_recursive: que_graph_free_recursive: node: 0x6250001cd648, type: 25
que_graph_free_recursive: que_graph_free_recursive: node: 0x6250001cd880, type: 24
que_graph_free_recursive: que_graph_free_recursive: node: 0x6250001cd9c8, type: 25
que_graph_free_recursive: que_graph_free_recursive: node: 0x6250001cdb08, type: 25
que_graph_free_recursive: que_graph_free_recursive: node: 0x6250001e3998, type: 1046
que_graph_free_recursive: que_graph_free_recursive: node: 0x6250001ce080, type: 24
que_graph_free_recursive: que_graph_free_recursive: node: 0x6250001e0348, type: 1045
que_graph_free_recursive: que_graph_free_recursive: node: 0x6250001e0308, type: 32
