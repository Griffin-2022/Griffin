alloc_root: exit: ptr: 0x7f80f82b7650
alloc_root: enter: root: 0x7f80f8120bd8
alloc_root: exit: ptr: 0x7f80f82b7730
alloc_root: enter: root: 0x7f80f8120bd8
my_malloc: my: size: 1016 flags: 4112
my_malloc: info: global thd memory_used: 116736  size: 1040
my_malloc: exit: ptr: 0x7f80f8250c48
alloc_root: exit: ptr: 0x7f80f8250c60
alloc_root: enter: root: 0x7f80f8120bd8
alloc_root: exit: ptr: 0x7f80f8250d40
alloc_root: enter: root: 0x7f80f8120bd8
alloc_root: exit: ptr: 0x7f80f8250e20
alloc_root: enter: root: 0x7f80f8120bd8
alloc_root: exit: ptr: 0x7f80f8250f00
alloc_root: enter: root: 0x7f80f8120bd8
my_malloc: my: size: 1016 flags: 4112
my_malloc: info: global thd memory_used: 117776  size: 1040
my_malloc: exit: ptr: 0x7f80f8458f38
alloc_root: exit: ptr: 0x7f80f8458f50
alloc_root: enter: root: 0x7f80f8120bd8
alloc_root: exit: ptr: 0x7f80f8459020
alloc_root: enter: root: 0x7f80f8120bd8
alloc_root: exit: ptr: 0x7f80f8459100
alloc_root: enter: root: 0x7f80f8120bd8
alloc_root: exit: ptr: 0x7f80f84591e0
plugin_lock: mutex: LOCK_plugin (0x24aba48) locking
plugin_lock: mutex: LOCK_plugin (0x24aba48) locked
my_malloc: my: size: 8 flags: 16
my_malloc: info: global thd memory_used: 118816  size: 32
my_malloc: exit: ptr: 0x7f80f81a08a8
intern_plugin_lock: lock: thd: 0x7f80f8000db8  plugin: "MEMORY" LOCK ref_count: 1
plugin_lock: mutex: LOCK_plugin (0x24aba48) unlocking
get_new_handler: enter: alloc: 0x7f80f8120bd8
alloc_root: enter: root: 0x7f80f8120bd8
my_malloc: my: size: 2040 flags: 4112
my_malloc: info: global thd memory_used: 118848  size: 2064
my_malloc: exit: ptr: 0x7f80f826ad38
alloc_root: exit: ptr: 0x7f80f826ad50
get_new_handler: info: handler created F_UNLCK 2 F_RDLCK 0 F_WRLCK 1
alloc_root: enter: root: 0x7f80f8120bd8
my_malloc: my: size: 13968 flags: 4112
my_malloc: info: global thd memory_used: 120912  size: 13992
my_malloc: exit: ptr: 0x7f80f846b4d8
alloc_root: exit: ptr: 0x7f80f846b4f0
alloc_root: enter: root: 0x7f80f8006cd8
alloc_root: exit: ptr: 0x7f80f8015f80
open_tables: THD::enter_stage: After opening tables at /root/mariadb/sql/sql_base.cc:4505
open_tables: THD::enter_stage: (null) at /root/mariadb/sql/sql_base.cc:4506
open_tables: open_tables: returning: 0
alloc_root: enter: root: 0x7f80f8006cd8
alloc_root: exit: ptr: 0x7f80f8015f88
get_lock_data: info: count 0
alloc_root: enter: root: 0x7f80f8006cd8
alloc_root: exit: ptr: 0x7f80f8015f88
get_lock_data: info: sql_lock->table_count 0 sql_lock->lock_count 0
mysql_lock_tables(sql_lock): THD::enter_stage: System lock at /root/mariadb/sql/lock.cc:337
mysql_lock_tables(sql_lock): THD::enter_stage: table lock at /root/mariadb/sql/lock.cc:342
mysql_lock_tables(sql_lock): THD::enter_stage: (null) at /root/mariadb/sql/lock.cc:357
THD::decide_logging_format: info: Query: select CONSTRAINT_NAME from information_schema.KEY_COLUMN_USAGE
    where table_schema='vfqqsrjl'
THD::decide_logging_format: info: binlog_format: 0
THD::decide_logging_format: info: current_stmt_binlog_format: 1
THD::decide_logging_format: info: lex->get_stmt_unsafe_flags(): 0x0
THD::decide_logging_format: info: decision: no logging since mysql_bin_log.is_open() = 0 and (options & OPTION_BIN_LOG) = 0x40000 and binlog_format = 0 and binlog_filter->db_ok(db) = 1
mysql_handle_derived: enter: phases: 0x1
alloc_root: enter: root: 0x7f80f8006cd8
alloc_root: exit: ptr: 0x7f80f8015fa8
Query_cache::store_query: qcache: Query cache not ready
alloc_root: enter: root: 0x7f80f8006cd8
alloc_root: exit: ptr: 0x7f80f8015fd0
TMP_TABLE_PARAM::init: enter: this: 0x7f80f80161f0
TMP_TABLE_PARAM::init: enter: this: 0x7f80f80161f0
mysql_select: THD::enter_stage: init at /root/mariadb/sql/sql_select.cc:4966
JOIN::prepare: info: select 0x7f80f8013fa8 (1) = JOIN 0x7f80f8015fd0
alloc_root: enter: root: 0x7f80f8006cd8
alloc_root: exit: ptr: 0x7f80f8016588
alloc_root: enter: root: 0x7f80f8006cd8
alloc_root: exit: ptr: 0x7f80f8016598
setup_fields: enter: ref_pointer_array: 0x7f80f8016598
setup_fields: info: thd->column_usage: 2
alloc_root: enter: root: 0x7f80f8006cd8
alloc_root: exit: ptr: 0x7f80f8016638
find_field_in_table_ref: enter: table: 'KEY_COLUMN_USAGE'  field name: 'CONSTRAINT_NAME'  item name: 'CONSTRAINT_NAME'  ref 0x7f80f8014550
find_field_in_table: enter: table: 'KEY_COLUMN_USAGE', field name: 'CONSTRAINT_NAME'
setup_fields: info: thd->column_usage: 2
setup_conds: info: thd->column_usage: 2

WHERE:(WHERE in setup_conds) 0x7f80f8014e80 "table_schema" = 'vfqqsrjl'
find_field_in_table_ref: enter: table: 'KEY_COLUMN_USAGE'  field name: 'table_schema'  item name: 'table_schema'  ref 0x7f80f8014ef8
find_field_in_table: enter: table: 'KEY_COLUMN_USAGE', field name: 'table_schema'
alloc_root: enter: root: 0x7f80f8006cd8
alloc_root: exit: ptr: 0x7f80f8016648
my_malloc: my: size: 32 flags: 16
my_malloc: info: global thd memory_used: 134904  size: 56
my_malloc: exit: ptr: 0x7f80f8248028
alloc_root: enter: root: 0x7f80f8006cd8
alloc_root: exit: ptr: 0x7f80f80166b8
THD::change_item_tree: enter: Register: 0x7f80f8014df0 (0x7f80f8014f00) <- 0x7f80f8016648
alloc_root: enter: root: 0x7f80f8006cd8
alloc_root: exit: ptr: 0x7f80f80166d8
