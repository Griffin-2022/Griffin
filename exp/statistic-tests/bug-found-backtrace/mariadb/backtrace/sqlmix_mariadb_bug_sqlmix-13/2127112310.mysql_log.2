btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) unlocking
que_eval_sql: ib_que: Execute 4 (UPDATE) at 0x629000753ec8
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x629000754800
que_eval_sql: ib_que: Execute 9 (QUERY THREAD) at 0x629000754758
que_graph_free_recursive: que_graph_free_recursive: node: 0x6290007546a0, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x629000754758, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x629000754800, type: 1044
que_graph_free_recursive: que_graph_free_recursive: node: 0x6290007535e8, type: 4
que_graph_free_recursive: que_graph_free_recursive: node: 0x629000753968, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x629000753ec8, type: 4
que_graph_free_recursive: que_graph_free_recursive: node: 0x629000754248, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170000e3a18, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b00016a520, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170000e3920, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170000e3d98, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b00016ac20, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170000e3ca0, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170000e4118, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b00016b320, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170000e4020, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170000e4498, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b00016ba20, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170000e43a0, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170000e4818, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b00016c120, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170000e4720, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170000e4b98, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b00016c820, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170000e4aa0, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170000e4f18, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b00016cf20, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170000e4e20, type: 6
que_eval_sql: que_eval_sql: query: PROCEDURE DROP_DATABASE_PROC () IS
fk CHAR;
name CHAR;
tid CHAR;
iid CHAR;
DECLARE FUNCTION fk_report;
DECLARE CURSOR fkf IS
SELECT ID FROM SYS_FOREIGN WHERE ID >= :db FOR UPDATE;
DECLARE CURSOR fkr IS
SELECT REF_NAME,ID FROM SYS_FOREIGN WHERE REF_NAME >= :db FOR UPDATE
ORDER BY REF_NAME;
DECLARE CURSOR tab IS
SELECT ID,NAME FROM SYS_TABLES WHERE NAME >= :db FOR UPDATE;
DECLARE CURSOR idx IS
SELECT ID FROM SYS_INDEXES WHERE TABLE_ID = tid FOR UPDATE;
BEGIN
OPEN fkf;
WHILE 1 = 1 LOOP
  FETCH fkf INTO fk;
  IF (SQL % NOTFOUND) THEN EXIT; END IF;
  IF TO_BINARY(SUBSTR(fk, 0, LENGTH(:db)))<>TO_BINARY(:db) THEN EXIT; END IF;
  DELETE FROM SYS_FOREIGN_COLS WHERE TO_BINARY(ID)=TO_BINARY(fk);
  DELETE FROM SYS_FOREIGN WHERE CURRENT OF fkf;
END LOOP;
CLOSE fkf;
OPEN fkr;
FETCH fkr INTO fk_report();
CLOSE fkr;
OPEN tab;
WHILE 1 = 1 LOOP
  FETCH tab INTO tid,name;
  IF (SQL % NOTFOUND) THEN EXIT; END IF;
  IF SUBSTR(name, 0, LENGTH(:db)) <> :db THEN EXIT; END IF;
  DELETE FROM SYS_COLUMNS WHERE TABLE_ID=tid;
  D
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_FOREIGN'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_FOREIGN'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_TABLES'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_INDEXES'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_FOREIGN_COLS'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_FOREIGN'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_COLUMNS'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_TABLES'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_FIELDS'
dict_table_open_on_name: dict_table_open_on_name: table: 'SYS_INDEXES'
que_eval_sql: ib_que: Execute 9 (QUERY THREAD) at 0x62500013c3e0
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x62500013c488
que_eval_sql: ib_que: Execute 25 (OPEN) at 0x62900075b888
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x62500013c488
que_eval_sql: ib_que: Execute 1046 (WHILE) at 0x6250001373c8
que_eval_sql: ib_que: Execute 24 (FETCH) at 0x62900075bd10
que_eval_sql: ib_que: Execute 6 (SELECT) at 0x629000758fe0
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locking
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locked
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) unlocking
que_eval_sql: ib_que: Execute 24 (FETCH) at 0x62900075bd10
que_eval_sql: ib_que: Execute 1046 (WHILE) at 0x6250001373c8
que_eval_sql: ib_que: Execute 1045 (IF) at 0x62900075bf10
que_eval_sql: ib_que: Execute 32 (EXIT) at 0x62900075bed0
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x62500013c488
que_eval_sql: ib_que: Execute 25 (OPEN) at 0x625000137508
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x62500013c488
que_eval_sql: ib_que: Execute 25 (OPEN) at 0x625000137648
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x62500013c488
que_eval_sql: ib_que: Execute 24 (FETCH) at 0x625000137880
que_eval_sql: ib_que: Execute 6 (SELECT) at 0x629000759a50
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locking
btr_cur_search_to_nth_level: mutex: 