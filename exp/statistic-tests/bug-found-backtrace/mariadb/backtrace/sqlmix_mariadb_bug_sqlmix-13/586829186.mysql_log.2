que_graph_free_recursive: que_graph_free_recursive: node: 0x6290011f09a0, type: 25
que_graph_free_recursive: que_graph_free_recursive: node: 0x6290011f0be8, type: 24
que_graph_free_recursive: que_graph_free_recursive: node: 0x6290011f0f30, type: 1045
que_graph_free_recursive: que_graph_free_recursive: node: 0x6290011f0ea0, type: 25
que_graph_free_recursive: que_graph_free_recursive: node: 0x6290011f0ef0, type: 28
que_graph_free_recursive: que_graph_free_recursive: node: 0x6290011f1088, type: 25
que_graph_free_recursive: que_graph_free_recursive: node: 0x6290011f11d0, type: 25
que_graph_free_recursive: que_graph_free_recursive: node: 0x6290011f1400, type: 23
que_graph_free_recursive: que_graph_free_recursive: node: 0x6290011f1cf0, type: 1046
que_graph_free_recursive: que_graph_free_recursive: node: 0x6290011f18a0, type: 24
que_graph_free_recursive: que_graph_free_recursive: node: 0x6290011f1c90, type: 1045
que_graph_free_recursive: que_graph_free_recursive: node: 0x6290011f1c40, type: 23
que_graph_free_recursive: que_graph_free_recursive: node: 0x6290011f1e38, type: 25
info: mutex: mutex (0x6130000e0100) locking
info: mutex: mutex (0x6130000e0100) locked
info: mutex: mutex (0x6130000e0100) unlocking
info: trx: Commit in memory: 0x7f3eeb4bab80
info: mutex: mutex (0x52b5200) locking
info: mutex: mutex (0x52b5200) locked
info: mutex: mutex (0x52b5200) unlocking
info: mutex: mutex (0x6120000012a0) locking
info: mutex: mutex (0x6120000012a0) locked
info: mutex: mutex (0x6120000012a0) unlocking
dirname_part: enter: '././zxfhtjuh/bug13510739.frm'
dirname_part: enter: '././zxfhtjuh/'
cleanup_dirname: enter: from: '././zxfhtjuh/'
cleanup_dirname: exit: to: './zxfhtjuh/'
alloc_root: enter: root: 0x6190000d5aa0
alloc_root: exit: ptr: 0x61a0002eb898
open_table_from_share: mutex: share->LOCK_share (0x61b0004a93e8) locking
open_table_from_share: mutex: share->LOCK_share (0x61b0004a93e8) locked
open_table_from_share: mutex: share->LOCK_share (0x61b0004a93e8) unlocking
build_table_filename: enter: db: 'zxfhtjuh'  table_name: 'bug13510739'  ext: '.TRG'  flags: 0
tablename_to_filename: enter: from 'zxfhtjuh'
tablename_to_filename: exit: to 'zxfhtjuh'
tablename_to_filename: enter: from 'bug13510739'
tablename_to_filename: exit: to 'bug13510739'
build_table_filename: exit: buff: './zxfhtjuh/bug13510739.TRG'
open_table: mutex: element->LOCK_table_share (0x61b0003efbc0) locking
open_table: mutex: element->LOCK_table_share (0x61b0003efbc0) locked
open_table: mutex: element->LOCK_table_share (0x61b0003efbc0) unlocking
open_table: mutex: LOCK_table_cache (0x61e000000c88) locking
open_table: mutex: LOCK_table_cache (0x61e000000c88) locked
open_table: mutex: LOCK_table_cache (0x61e000000c88) unlocking
MDL_context::acquire_lock: enter: lock_type: MDL_BACKUP_TRANS_DML  timeout: 86400.000000
MDL_context::acquire_lock: info: Got lock without waiting
my_malloc: my: size: 16 flags: 16
my_malloc: info: global thd memory_used: 15560  size: 40
my_malloc: exit: ptr: 0x60e00014f2c8
open_table: mutex: LOCK_thd_data (0x62b00015ffe8) locking
open_table: mutex: LOCK_thd_data (0x62b00015ffe8) locked
open_table: mutex: LOCK_thd_data (0x62b00015ffe8) unlocking
handle_table: info: table: 0x6290000e63f8  name: bug13510739  db: zxfhtjuh  flags: 1
open_tables: THD::enter_stage: After opening tables at /root/mariadb/sql/sql_base.cc:4505
open_tables: THD::enter_stage: (null) at /root/mariadb/sql/sql_base.cc:4506
open_tables: open_tables: returning: 0
alloc_root: enter: root: 0x62b0001641a8
alloc_root: exit: ptr: 0x6290000e7a80
lock_tables_check: info: Adding mdl lock MDL_SHARED_WRITE to MDL_SHARED_WRITE
get_lock_data: info: count 1
alloc_root: enter: root: 0x62b0001641a8
alloc_root: exit: ptr: 0x6290000e7a90
get_lock_data: info: sql_lock->table_count 1 sql_lock->lock_count 0
mysql_lock_tables(sql_lock): THD::enter_stage: System lock at /root/mariadb/sql/lock.cc:337
lock_external: info: count 1
ha_innobase::external_lock: enter: lock_type: 1
ha_innobase::update_thd: ha_innobase::update_thd: user_thd: 0x62b00015e288 -> 0x62b00015e288
trans_register_ha: enter: stmt
trans_register_ha: enter: all
trans_register_ha: info: setting SERVER_STATUS_IN_TRANS
mysql_lock_tables(sql_lock): THD::enter_stage: table lock at /root/mariadb/sql/lock.cc:342
mysql_lock_tables(sql_lock): THD::enter_stage: (null) at /root/mariadb/sql/lock.cc:357
THD::decide_logging_format: info: Query: INSERT INTO bug13510739 VALUES(NULL)
THD::decide_logging_format: info: binlog_format: 0
THD::decide_logging_format: info: current_stmt_binlog_format: 1
THD::decide_logging_format: info: lex->get_stmt_unsafe_flags(): 0x0
THD::decide_logging_format: info: decision: no logging since mysql_bin_log.is_open() = 0 and (options & OPTION_BIN_LOG) = 0x40000 and binlog_format = 0 and binlog_filter->db_ok(db) = 1
init_alloc_root: enter: root: 0x7f3edbf995e8  prealloc: 0
open_and_lock_tables: enter: derived handling: 0
open_tables: THD::enter_stage: Opening tables at /root/mariadb/sql/sql_base.cc:4222
lock_table_names: info: mdl_request.type: 3  open_type: 0
lock_table_names: info: mdl_request.type: 3  open_type: 0
lock_table_names: info: mdl_request.type: 3  open_type: 0
open_and_process_table: tcache: opening table: 'mysql'.'table_stats'  item: 0x7f3edbf96e80
MDL_context::acquire_lock: enter: lock_type: MDL_SHARED_READ  timeout: 31536000.000000
MDL_context::acquire_lock: info: Got lock without waiting
tdc_acquire_share: mutex: LOCK_table_cache (0x61e000000c88) locking
tdc_acquire_share: mutex: LOCK_table_cache (0x61e000000c88) locked
maria_extra: enter: function: 45
tdc_acquire_share: mutex: LOCK_table_cache (0x61e000000c88) unlocking
column_bitmaps_signal: info: read_set: 0x619000070f38  write_set: 0x619000070f50
maria_extra: enter: function: 45
open_table: mutex: LOCK_thd_data (0x62b00015ffe8) locking
open_table: mutex: LOCK_thd_data (0x62b00015ffe8) locked
open_table: mutex: LOCK_thd_data (0x62b00015ffe8) unlocking
maria_extra: enter: function: 43
open_and_process_table: tcache: opening table: 'mysql'.'column_stats'  item: 0x7f3edbf97560
MDL_context::acquire_lock: enter: lock_type: MDL_SHARED_READ  timeout: 31536000.000000
MDL_context::acquire_lock: info: Got lock without waiting
tdc_acquire_share: mutex: 