my_free: info: global thd memory_used: -2008  size: -56
alloc_root: enter: root: 0x7fe414bb9c08
my_malloc: my: size: 1016 flags: 4112
my_malloc: info: global thd memory_used: -2064  size: 1040
my_malloc: exit: ptr: 0x61a000c6df08
alloc_root: exit: ptr: 0x61a000c6df28
plugin_lock: mutex: LOCK_plugin (0x6022f20) locking
plugin_lock: mutex: LOCK_plugin (0x6022f20) locked
my_malloc: my: size: 8 flags: 16
my_malloc: info: global thd memory_used: -1024  size: 32
my_malloc: exit: ptr: 0x60e0000d4748
intern_plugin_lock: lock: thd: 0x62b00015e288  plugin: "InnoDB" LOCK ref_count: 36
plugin_lock: mutex: LOCK_plugin (0x6022f20) unlocking
plugin_lock: mutex: LOCK_plugin (0x6022f20) locking
plugin_lock: mutex: LOCK_plugin (0x6022f20) locked
my_malloc: my: size: 8 flags: 16
my_malloc: info: global thd memory_used: -992  size: 32
my_malloc: exit: ptr: 0x60e0000d4128
intern_plugin_lock: lock: thd: 0x62b00015e288  plugin: "InnoDB" LOCK ref_count: 37
plugin_lock: mutex: LOCK_plugin (0x6022f20) unlocking
TABLE_SHARE::init_from_binary_frm_image: info: extra segment size is 16 bytes
alloc_root: enter: root: 0x7fe414bb9c08
alloc_root: exit: ptr: 0x61a000c6df40
plugin_lock_by_name: mutex: LOCK_plugin (0x6022f20) locking
plugin_lock_by_name: mutex: LOCK_plugin (0x6022f20) locked
my_hash_first_from_hash_value: exit: found key at 8
my_malloc: my: size: 8 flags: 16
my_malloc: info: global thd memory_used: -960  size: 32
my_malloc: exit: ptr: 0x60e0000d3f68
intern_plugin_lock: lock: thd: 0x62b00015e288  plugin: "InnoDB" LOCK ref_count: 38
plugin_lock_by_name: mutex: LOCK_plugin (0x6022f20) unlocking
alloc_root: enter: root: 0x7fe414bb9c08
alloc_root: exit: ptr: 0x61a000c6df50
alloc_root: enter: root: 0x7fe414bb9c08
alloc_root: exit: ptr: 0x61a000c6df60
alloc_root: enter: root: 0x7fe414bb9c08
alloc_root: exit: ptr: 0x61a000c6df70
TABLE_SHARE::init_from_binary_frm_image: info: i_count: 2  i_parts: 8  index: 0  n_length: 7  int_length: 67  com_length: 0  vcol_screen_length: 0
alloc_root: enter: root: 0x7fe414bb9c08
alloc_root: exit: ptr: 0x61a000c6df80
get_new_handler: enter: alloc: 0x7fe414bb9c08
alloc_root: enter: root: 0x7fe414bb9c08
my_malloc: my: size: 1992 flags: 4112
my_malloc: info: global thd memory_used: -928  size: 2016
my_malloc: exit: ptr: 0x61d00041dd08
alloc_root: exit: ptr: 0x61d00041dd28
get_new_handler: info: handler created F_UNLCK 2 F_RDLCK 0 F_WRLCK 1
TABLE_SHARE::init_from_binary_frm_image: debug: field_type: set, field_length: 29, interval: 0x61a000c6df98, pack_flag: FIELDFLAG_PACK 
alloc_root: enter: root: 0x7fe414bb9c08
alloc_root: exit: ptr: 0x61a000c6e108
TABLE_SHARE::init_from_binary_frm_image: debug: field_type: set, field_length: 32, interval: 0x61a000c6dfb8, pack_flag: FIELDFLAG_BINARY FIELDFLAG_PACK 
alloc_root: enter: root: 0x7fe414bb9c08
alloc_root: exit: ptr: 0x61a000c6e1f8
parse_option_list: enter: struct: 0x0 list: 0x0 rules: 0x51c2aa0 suppress_warning: 1 root: 0x7fe414bb9c08
alloc_root: enter: root: 0x7fe414bb9c08
my_malloc: my: size: 1016 flags: 4112
my_malloc: info: global thd memory_used: 1088  size: 1040
my_malloc: exit: ptr: 0x61a000c6e508
alloc_root: exit: ptr: 0x61a000c6e528
set_one_value: enter: opt: 0x51c2aa0 type: 3 name 'PAGE_COMPRESSED' value: '<DEFAULT>'
set_one_value: enter: opt: 0x51c2af0 type: 0 name 'PAGE_COMPRESSION_LEVEL' value: '<DEFAULT>'
set_one_value: enter: opt: 0x51c2b40 type: 2 name 'ENCRYPTED' value: '<DEFAULT>'
set_one_value: enter: opt: 0x51c2b90 type: 0 name 'ENCRYPTION_KEY_ID' value: '<DEFAULT>'
parse_option_list: enter: struct: 0x0 list: 0x0 rules: 0x0 suppress_warning: 1 root: 0x7fe414bb9c08
parse_option_list: enter: struct: 0x0 list: 0x0 rules: 0x0 suppress_warning: 1 root: 0x7fe414bb9c08
alloc_root: enter: root: 0x7fe414bb9c08
alloc_root: exit: ptr: 0x61a000c6e550
open_table_from_share: enter: name: 'ecsdvtco.bug13510739'  form: 0x7fe414bb9520
init_alloc_root: enter: root: 0x7fe414bb97b8  prealloc: 0
alloc_root: enter: root: 0x7fe414bb97b8
my_malloc: my: size: 1016 flags: 4112
my_malloc: info: global thd memory_used: 2128  size: 1040
my_malloc: exit: ptr: 0x61a000c6eb08
alloc_root: exit: ptr: 0x61a000c6eb28
get_new_handler: enter: alloc: 0x7fe414bb97b8
alloc_root: enter: root: 0x7fe414bb97b8
my_malloc: my: size: 1992 flags: 4112
my_malloc: info: global thd memory_used: 3168  size: 2016
my_malloc: exit: ptr: 0x61d00041e708
alloc_root: exit: ptr: 0x61d00041e728
get_new_handler: info: handler created F_UNLCK 2 F_RDLCK 0 F_WRLCK 1
alloc_root: enter: root: 0x7fe414bb97b8
alloc_root: exit: ptr: 0x61a000c6eb38
alloc_root: enter: root: 0x7fe414bb97b8
alloc_root: exit: ptr: 0x61a000c6eb48
alloc_root: enter: root: 0x7fe414bb97b8
alloc_root: exit: ptr: 0x61a000c6eb68
alloc_root: enter: root: 0x7fe414bb97b8
alloc_root: exit: ptr: 0x61a000c6eb70
alloc_root: enter: root: 0x7fe414bb97b8
alloc_root: exit: ptr: 0x61a000c6ec60
alloc_root: enter: root: 0x7fe414bb97b8
alloc_root: exit: ptr: 0x61a000c6ed50
innobase_trx_allocate: mutex: mutex (0x611000001480) locking
innobase_trx_allocate: mutex: mutex (0x611000001480) locked
innobase_trx_allocate: mutex: mutex (0x611000001480) unlocking
innobase_trx_allocate: mutex: mutex (0x6120000012a0) locking
innobase_trx_allocate: mutex: mutex (0x6120000012a0) locked
innobase_trx_allocate: mutex: mutex (0x6120000012a0) unlocking
innobase_trx_allocate: trx: Create: 0x7fe4240dcb80
