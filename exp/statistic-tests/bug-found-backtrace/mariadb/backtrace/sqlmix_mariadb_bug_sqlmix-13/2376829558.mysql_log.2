alloc_root: exit: ptr: 0x61a0006c6270
alloc_root: enter: root: 0x7fe9c0aa97b8
alloc_root: exit: ptr: 0x61a0006c6348
alloc_root: enter: root: 0x7fe9c0aa97b8
alloc_root: exit: ptr: 0x61a0006c6420
alloc_root: enter: root: 0x7fe9c0aa97b8
my_malloc: my: size: 1016 flags: 4112
my_malloc: info: global thd memory_used: -11216  size: 1040
my_malloc: exit: ptr: 0x61a0006c6708
alloc_root: exit: ptr: 0x61a0006c6728
alloc_root: enter: root: 0x7fe9c0aa97b8
alloc_root: exit: ptr: 0x61a0006c6750
alloc_root: enter: root: 0x7fe9c0aa97b8
alloc_root: exit: ptr: 0x61a0006c6778
LEX::start: info: This: 0x7fe9c0aa6b00 thd_arg->lex: 0x7fe9c0aa6b00
st_select_lex_node::set_linkage: info: node: 0x7fe9c0aa73d0  linkage: 0->0
st_select_lex_node::set_linkage: info: node: 0x7fe9c0aa6bd8  linkage: 0->0
st_select_lex_node::set_linkage: info: node: 0x7fe9c0aa6bd8  linkage: 0->4
alloc_root: enter: root: 0x7fe9c0aa97b8
alloc_root: exit: ptr: 0x61a0006c67a0
add_table_to_list: enter: Table 'bug13510739' (0x61a0006c67a0)  Select 0x7fe9c0aa73d0 (1)
alloc_root: enter: root: 0x7fe9c0aa97b8
alloc_root: exit: ptr: 0x61a0006c67d0
alloc_root: enter: root: 0x7fe9c0aa97b8
my_malloc: my: size: 1792 flags: 4112
my_malloc: info: global thd memory_used: -10176  size: 1816
my_malloc: exit: ptr: 0x61d000b04b08
alloc_root: exit: ptr: 0x61d000b04b28
LEX::main_select_push: info: service: 0
LEX::push_select: info: Top Select was 0x0 (0)  depth: 0  pushed: 0x7fe9c0aa73d0 (1)
LEX::push_context: info: Context: 0x7fe9c0aa7418 Select: 0x7fe9c0aa73d0 (1)
alloc_root: enter: root: 0x7fe9c0aa97b8
alloc_root: exit: ptr: 0x61a0006c67e8
alloc_root: enter: root: 0x7fe9c0aa97b8
alloc_root: exit: ptr: 0x61a0006c6800
alloc_root: enter: root: 0x7fe9c0aa97b8
alloc_root: exit: ptr: 0x61a0006c6810
alloc_root: enter: root: 0x7fe9c0aa97b8
alloc_root: exit: ptr: 0x61a0006c6820
alloc_root: enter: root: 0x7fe9c0aa97b8
alloc_root: exit: ptr: 0x61a0006c6940
alloc_root: enter: root: 0x7fe9c0aa97b8
alloc_root: exit: ptr: 0x61a0006c6950
alloc_root: enter: root: 0x7fe9c0aa97b8
alloc_root: exit: ptr: 0x61a0006c6960
alloc_root: enter: root: 0x7fe9c0aa97b8
my_malloc: my: size: 2040 flags: 4112
my_malloc: info: global thd memory_used: -8360  size: 2064
my_malloc: exit: ptr: 0x61d000b05508
alloc_root: exit: ptr: 0x61d000b05528
alloc_root: enter: root: 0x7fe9c0aa97b8
alloc_root: exit: ptr: 0x61a0006c6a80
LEX::pop_select: info: Top Select is 0x0 (0)  depth: 0  poped: 0x7fe9c0aa73d0 (1)
LEX::pop_context: info: Context: 0x7fe9c0aa7418 Select: 0x7fe9c0aa73d0 (1)
LEX::pop_select: info: Top Select is empty -> sel builtin: 0x7fe9c0aa73d0  service: 0
fix_and_check_vcol_expr: info: vcol: 0x61a0006c6a80
find_field_in_table_ref: enter: table: 'bug13510739'  field name: 't1'  item name: 't1'  ref 0x61d000b055a0
find_field_in_table: enter: table: '', field name: 't1'
find_field_in_table_ref: enter: table: 'bug13510739'  field name: 'f6'  item name: 'f6'  ref 0x61d000b055a8
find_field_in_table: enter: table: '', field name: 'f6'
Item_func_plus::fix_length_and_dec: info: name +
Item_func_plus::fix_length_and_dec: info: Type: bigint
check_vcol_func_processor returns TRUE: unsupported function: info: check_vcol_func_processor returns TRUE: unsupported function
check_vcol_func_processor returns TRUE: unsupported function: info: check_vcol_func_processor returns TRUE: unsupported function
lex_end: enter: lex: 0x7fe9c0aa6b00
my_hash_free: enter: hash:0x7fe9c0aa6b28  elements: 0
alloc_root: enter: root: 0x7fe9c0aa97b8
alloc_root: exit: ptr: 0x61a0006c6ab8
innobase_trx_allocate: mutex: mutex (0x611000001480) locking
innobase_trx_allocate: mutex: mutex (0x611000001480) locked
innobase_trx_allocate: mutex: mutex (0x611000001480) unlocking
innobase_trx_allocate: mutex: mutex (0x6120000012a0) locking
innobase_trx_allocate: mutex: mutex (0x6120000012a0) locked
innobase_trx_allocate: mutex: mutex (0x6120000012a0) unlocking
innobase_trx_allocate: trx: Create: 0x7fe9cffccb80
innobase_trx_allocate: mutex: mutex (0x52b5200) locking
innobase_trx_allocate: mutex: mutex (0x52b5200) locked
innobase_trx_allocate: mutex: mutex (0x52b5200) unlocking
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170007a9398, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b00096e320, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170007a92a0, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170007a9718, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b00096ea20, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170007a9620, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170007a9a98, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b00096f120, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170007a99a0, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170007a9e18, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b00096ff20, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170007a9d20, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170007aa198, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b000970620, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170007aa0a0, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170007aa518, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b000970d20, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170007aa420, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170007aa898, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b000971420, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170007aa7a0, type: 6
create_table_def: enter: table_name: sjpbugfv/bug13510739
