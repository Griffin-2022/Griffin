| | | | | | | | | <que_graph_free_recursive
| | | | | | | | <que_graph_free_recursive
| | | | | | | | >que_graph_free_recursive
| | | | | | | | | que_graph_free_recursive: node: 0x617000ef4b18, type: 8
| | | | | | | | | >que_graph_free_recursive
| | | | | | | | | | que_graph_free_recursive: node: 0x61b00101aa20, type: 9
| | | | | | | | | | >que_graph_free_recursive
| | | | | | | | | | | que_graph_free_recursive: node: 0x617000ef4a20, type: 6
| | | | | | | | | | <que_graph_free_recursive
| | | | | | | | | <que_graph_free_recursive
| | | | | | | | <que_graph_free_recursive
| | | | | | | | >que_graph_free_recursive
| | | | | | | | | que_graph_free_recursive: node: 0x617000ef4798, type: 8
| | | | | | | | | >que_graph_free_recursive
| | | | | | | | | | que_graph_free_recursive: node: 0x61b00101b120, type: 9
| | | | | | | | | | >que_graph_free_recursive
| | | | | | | | | | | que_graph_free_recursive: node: 0x617000ef46a0, type: 6
| | | | | | | | | | <que_graph_free_recursive
| | | | | | | | | <que_graph_free_recursive
| | | | | | | | <que_graph_free_recursive
| | | | | | | | >que_graph_free_recursive
| | | | | | | | | que_graph_free_recursive: node: 0x617000ef4418, type: 8
| | | | | | | | | >que_graph_free_recursive
| | | | | | | | | | que_graph_free_recursive: node: 0x61b00101b820, type: 9
| | | | | | | | | | >que_graph_free_recursive
| | | | | | | | | | | que_graph_free_recursive: node: 0x617000ef4320, type: 6
| | | | | | | | | | <que_graph_free_recursive
| | | | | | | | | <que_graph_free_recursive
| | | | | | | | <que_graph_free_recursive
| | | | | | | | >que_graph_free_recursive
| | | | | | | | | que_graph_free_recursive: node: 0x617000ef4e98, type: 8
| | | | | | | | | >que_graph_free_recursive
| | | | | | | | | | que_graph_free_recursive: node: 0x61b000fb6720, type: 9
| | | | | | | | | | >que_graph_free_recursive
| | | | | | | | | | | que_graph_free_recursive: node: 0x617000ef4da0, type: 6
| | | | | | | | | | <que_graph_free_recursive
| | | | | | | | | <que_graph_free_recursive
| | | | | | | | <que_graph_free_recursive
| | | | | | | | >que_graph_free_recursive
| | | | | | | | | que_graph_free_recursive: node: 0x617000ef5598, type: 8
| | | | | | | | | >que_graph_free_recursive
| | | | | | | | | | que_graph_free_recursive: node: 0x61b00027a720, type: 9
| | | | | | | | | | >que_graph_free_recursive
| | | | | | | | | | | que_graph_free_recursive: node: 0x617000ef54a0, type: 6
| | | | | | | | | | <que_graph_free_recursive
| | | | | | | | | <que_graph_free_recursive
| | | | | | | | <que_graph_free_recursive
| | | | | | | | >que_graph_free_recursive
| | | | | | | | | que_graph_free_recursive: node: 0x617000ef3998, type: 8
| | | | | | | | | >que_graph_free_recursive
| | | | | | | | | | que_graph_free_recursive: node: 0x61b00027a020, type: 9
| | | | | | | | | | >que_graph_free_recursive
| | | | | | | | | | | que_graph_free_recursive: node: 0x617000ef38a0, type: 6
| | | | | | | | | | <que_graph_free_recursive
| | | | | | | | | <que_graph_free_recursive
| | | | | | | | <que_graph_free_recursive
| | | | | | | | >que_graph_free_recursive
| | | | | | | | | que_graph_free_recursive: node: 0x617000ef5918, type: 8
| | | | | | | | | >que_graph_free_recursive
| | | | | | | | | | que_graph_free_recursive: node: 0x61b000279920, type: 9
| | | | | | | | | | >que_graph_free_recursive
| | | | | | | | | | | que_graph_free_recursive: node: 0x617000ef5820, type: 6
| | | | | | | | | | <que_graph_free_recursive
| | | | | | | | | <que_graph_free_recursive
| | | | | | | | <que_graph_free_recursive
| | | | | | | | >que_graph_free_recursive
| | | | | | | | | que_graph_free_recursive: node: 0x617000ef5c98, type: 8
| | | | | | | | | >que_graph_free_recursive
| | | | | | | | | | que_graph_free_recursive: node: 0x61b000279220, type: 9
| | | | | | | | | | >que_graph_free_recursive
| | | | | | | | | | | que_graph_free_recursive: node: 0x617000ef5ba0, type: 6
| | | | | | | | | | <que_graph_free_recursive
| | | | | | | | | <que_graph_free_recursive
| | | | | | | | <que_graph_free_recursive
| | | | | | | | >que_eval_sql
| | | | | | | | | que_eval_sql: query: PROCEDURE DROP_FOREIGN() IS
fid CHAR;
DECLARE CURSOR fk IS
SELECT ID FROM SYS_FOREIGN
WHERE FOR_NAME=:name
AND TO_BINARY(FOR_NAME)=TO_BINARY(:name)
FOR UPDATE;
BEGIN
OPEN fk;
WHILE 1=1 LOOP
  FETCH fk INTO fid;
  IF (SQL % NOTFOUND)THEN RETURN;END IF;
  DELETE FROM SYS_FOREIGN_COLS WHERE ID=fid;
  DELETE FROM SYS_FOREIGN WHERE ID=fid;
END LOOP;
CLOSE fk;
END;

| | | | | | | | | >dict_table_open_on_name
| | | | | | | | | | dict_table_open_on_name: table: 'SYS_FOREIGN'
| | | | | | | | | <dict_table_open_on_name
| | | | | | | | | >dict_table_open_on_name
| | | | | | | | | | dict_table_open_on_name: table: 'SYS_FOREIGN_COLS'
| | | | | | | | | <dict_table_open_on_name
| | | | | | | | |