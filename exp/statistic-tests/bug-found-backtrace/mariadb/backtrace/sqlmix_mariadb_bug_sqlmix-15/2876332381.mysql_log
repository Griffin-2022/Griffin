| | | | | | | | | >que_graph_free_recursive
| | | | | | | | | | que_graph_free_recursive: node: 0x6170012c9598, type: 8
| | | | | | | | | | >que_graph_free_recursive
| | | | | | | | | | | que_graph_free_recursive: node: 0x61b000169e20, type: 9
| | | | | | | | | | | >que_graph_free_recursive
| | | | | | | | | | | | que_graph_free_recursive: node: 0x6170012c94a0, type: 6
| | | | | | | | | | | <que_graph_free_recursive
| | | | | | | | | | <que_graph_free_recursive
| | | | | | | | | <que_graph_free_recursive
| | | | | | | | | >que_graph_free_recursive
| | | | | | | | | | que_graph_free_recursive: node: 0x6170006dea98, type: 8
| | | | | | | | | | >que_graph_free_recursive
| | | | | | | | | | | que_graph_free_recursive: node: 0x61b00101a320, type: 9
| | | | | | | | | | | >que_graph_free_recursive
| | | | | | | | | | | | que_graph_free_recursive: node: 0x6170006de9a0, type: 6
| | | | | | | | | | | <que_graph_free_recursive
| | | | | | | | | | <que_graph_free_recursive
| | | | | | | | | <que_graph_free_recursive
| | | | | | | | | >que_graph_free_recursive
| | | | | | | | | | que_graph_free_recursive: node: 0x617001166f98, type: 8
| | | | | | | | | | >que_graph_free_recursive
| | | | | | | | | | | que_graph_free_recursive: node: 0x61b001625320, type: 9
| | | | | | | | | | | >que_graph_free_recursive
| | | | | | | | | | | | que_graph_free_recursive: node: 0x617001166ea0, type: 6
| | | | | | | | | | | <que_graph_free_recursive
| | | | | | | | | | <que_graph_free_recursive
| | | | | | | | | <que_graph_free_recursive
| | | | | | | | | >que_graph_free_recursive
| | | | | | | | | | que_graph_free_recursive: node: 0x6170001e2098, type: 8
| | | | | | | | | | >que_graph_free_recursive
| | | | | | | | | | | que_graph_free_recursive: node: 0x61b001310620, type: 9
| | | | | | | | | | | >que_graph_free_recursive
| | | | | | | | | | | | que_graph_free_recursive: node: 0x6170001e1fa0, type: 6
| | | | | | | | | | | <que_graph_free_recursive
| | | | | | | | | | <que_graph_free_recursive
| | | | | | | | | <que_graph_free_recursive
??:0(start_thread)[0x7f6eb8317609]
??:0(clone)[0x7f6eb802d133]

Trying to get some variables.
Some pointers may be invalid and cause the dump to abort.
Query (0x629000f7d2a8): alter table t2 drop system versioning

Connection ID (thread ID): 10
Status: NOT_KILLED

Optimizer switch: index_merge=on,index_merge_union=on,index_merge_sort_union=on,index_merge_intersection=on,index_merge_sort_intersection=off,engine_condition_pushdown=off,index_condition_pushdown=on,derived_merge=on,derived_with_keys=on,firstmatch=on,loosescan=on,materialization=on,in_to_exists=on,semijoin=on,partial_match_rowid_merge=on,partial_match_table_scan=on,subquery_cache=on,mrr=off,mrr_cost_based=off,mrr_sort_keys=off,outer_join_with_cache=on,semijoin_with_cache=on,join_cache_incremental=on,join_cache_hashed=on,join_cache_bka=on,optimize_join_buffer_size=on,table_elimination=on,extended_keys=on,exists_to_in=on,orderby_uses_equalities=on,condition_pushdown_for_derived=on,split_materialized=on,condition_pushdown_for_subquery=on,rowid_filter=on,condition_pushdown_from_having=on,not_null_range_scan=off

The manual page at https://mariadb.com/kb/en/how-to-produce-a-full-stack-trace-for-mysqld/ contains
information that should help you find out what is causing the crash.
Writing a core file...
Working directory at /dev/shm/out/mysql_client_dir_2000
| | | | | | | | >my_open
| | | | | | | | | my: Name: '/proc/self/limits'  Flags: 0  MyFlags: 8196
| | | | | | | | | >my_register_filename
| | | | | | | | | <my_register_filename
| | | | | | | | <my_open
Resource Limits:
| | | | | | | | >my_read
| | | | | | | | | my: fd: 188  Buffer: 0x7f6e93db06e0  Count: 4096  MyFlags: 0
| | | | | | | | | warning: Read only 1323 bytes off 4096 from 188, errno: 0
| | | | | | | | <my_read
Limit                     Soft Limit           Hard Limit           Units     
Max cpu time              unlimited            unlimited            seconds   
Max file size             unlimited            unlimited            bytes     
Max data size             unlimited            unlimited            bytes     
Max stack size            8388608              unlimited            bytes     
Max core file size        0                    0                    bytes     
Max resident set          unlimited            unlimited            bytes     
Max processes             unlimited            unlimited            processes 
Max open files            1048576              1048576              files     
Max locked memory         65536                65536                bytes     
Max address space         unlimited            unlimited            bytes     
Max file locks            unlimited            unlimited            locks     
Max pending signals       2062354              2062354              signals   
Max msgqueue size         819200               819200               bytes     
Max nice priority         0                    0                    
Max realtime priority     0                    0                    
Max realtime timeout      unlimited            unlimited            us        
| | | | | | | | >my_read
| | | | | | | | | my: fd: 188  Buffer: 0x7f6e93db06e0  Count: 4096  MyFlags: 0
| | | | | | | | | warning: Read only 0 bytes off 4096 from 188, errno: 0
| | | | | | | | <my_read
| | | | | | | | >my_close
| | | | | | | | | my: fd: 188  MyFlags: 0
| | | | | | | | <my_close
| | | | | | | | >my_open
| | | | | | | | | my: Name: '/proc/sys/kernel/core_pattern'  Flags: 0  MyFlags: 8196
| | | | | | | | | >my_register_filename
| | | | | | | | | <my_register_filename
| | | | | | | | <my_open
| | | | | | | | >my_read
| | | | | | | | | my: fd: 188  Buffer: 0x7f6e93db06e0  Count: 4096  MyFlags: 0
| | | | | | | | | warning: Read only 5 bytes off 4096 from 188, errno: 0
| | | | | | | | <my_read
Core pattern: core

| | | | | | | | >my_close
| | | | | | | | | my: fd: 188  MyFlags: 0
| | | | | | | | <my_close
