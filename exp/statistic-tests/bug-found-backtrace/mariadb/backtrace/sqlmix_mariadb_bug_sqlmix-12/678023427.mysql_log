2022-08-06  6:41:39 21 [ERROR] InnoDB: Column stat_description in table mysql.innodb_index_stats is VARCHAR(3072) but should be VARCHAR(3072) NOT NULL
2022-08-06  6:41:39 21 [ERROR] InnoDB: Column stat_description in table mysql.innodb_index_stats is VARCHAR(3072) but should be VARCHAR(3072) NOT NULL
2022-08-06  6:41:39 21 [ERROR] InnoDB: Column stat_description in table mysql.innodb_index_stats is VARCHAR(3072) but should be VARCHAR(3072) NOT NULL
2022-08-06  6:41:39 21 [ERROR] InnoDB: Fetch of persistent statistics requested for table `nabfqicm`.`gis_polygon` but the required system tables mysql.innodb_table_stats and mysql.innodb_index_stats are not present or have unexpected structure. Using transient stats instead.
2022-08-06  6:41:39 21 [ERROR] InnoDB: Column stat_description in table mysql.innodb_index_stats is VARCHAR(3072) but should be VARCHAR(3072) NOT NULL
2022-08-06  6:41:39 21 [ERROR] InnoDB: Column stat_description in table mysql.innodb_index_stats is VARCHAR(3072) but should be VARCHAR(3072) NOT NULL
2022-08-06  6:41:39 21 [ERROR] InnoDB: Column stat_description in table mysql.innodb_index_stats is VARCHAR(3072) but should be VARCHAR(3072) NOT NULL
2022-08-06  6:41:39 21 [ERROR] InnoDB: Column stat_description in table mysql.innodb_index_stats is VARCHAR(3072) but should be VARCHAR(3072) NOT NULL
2022-08-06  6:41:39 21 [ERROR] InnoDB: Column stat_description in table mysql.innodb_index_stats is VARCHAR(3072) but should be VARCHAR(3072) NOT NULL
my_2000: /root/mariadb/storage/innobase/row/row0mysql.cc:2255: dberr_t row_create_index_for_mysql(dict_index_t *, trx_t *, const ulint *, fil_encryption_t, uint32_t): Assertion `!index == (err != DB_SUCCESS)' failed.
220806  6:41:40 [ERROR] mysqld got signal 6 ;
This could be because you hit a bug. It is also possible that this binary
or one of the libraries it was linked against is corrupt, improperly built,
or misconfigured. This error can also be caused by malfunctioning hardware.

To report this bug, see https://mariadb.com/kb/en/reporting-bugs

We will try our best to scrape up some info that will hopefully help
diagnose the problem, but since we have already crashed, 
something is definitely wrong and this may fail.

Server version: 10.7.1-MariaDB-debug
key_buffer_size=134217728
read_buffer_size=131072
max_used_connections=1
max_threads=153
thread_count=2
It is possible that mysqld could use up to 
key_buffer_size + (read_buffer_size + sort_buffer_size)*max_threads = 468119 K  bytes of memory
Hope that's ok; if not, decrease some variables in the equation.

Thread pointer: 0x62b00015e288
Attempting backtrace. You can use the following information to find out
where mysqld died. If you see no messages after this, something went
terribly wrong...
stack_bottom = 0x7ff775b03a80 thread_stack 0x100000
??:0(__interceptor_backtrace)[0x77602b]
mysys/stacktrace.c:212(my_print_stacktrace)[0x3586647]
sql/signal_handler.cc:0(handle_fatal_signal)[0x187c05b]
??:0(__restore_rt)[0x7ff79ad45420]
??:0(gsignal)[0x7ff79a97300b]
??:0(abort)[0x7ff79a952859]
/lib/x86_64-linux-gnu/libc.so.6(+0x22729)[0x7ff79a952729]
??:0(__assert_fail)[0x7ff79a963fd6]
include/mem0mem.ic:386(mem_heap_create_func(unsigned long, char const*, unsigned int, unsigned long))[0x2c00548]
handler/ha_innodb.cc:10977(create_index(trx_t*, TABLE const*, dict_table_t*, unsigned int))[0x26d104d]
handler/ha_innodb.cc:12713(create_table_info_t::create_table(bool))[0x26ca3ff]
:0(ha_innobase::create(char const*, TABLE*, HA_CREATE_INFO*, bool, trx_t*))[0x26d6715]
??:0(handler::ha_create(char const*, TABLE*, HA_CREATE_INFO*))[0x18bb9e9]
??:0(ha_create_table(THD*, char const*, char const*, char const*, HA_CREATE_INFO*, st_mysql_const_unsigned_lex_string*, bool))[0x18c1569]
sql/sql_table.cc:4546(create_table_impl(THD*, st_ddl_log_state*, st_ddl_log_state*, st_mysql_const_lex_string const&, st_mysql_const_lex_string const&, st_mysql_const_lex_string const&, st_mysql_const_lex_string const&, st_mysql_const_lex_string const&, DDL_options_st, HA_CREATE_INFO*, Alter_info*, int, bool*, st_key**, unsigned int*, st_mysql_const_unsigned_lex_string*))[0x10c72d2]
sql/sql_table.cc:4645(mysql_create_table_no_lock(THD*, st_ddl_log_state*, st_ddl_log_state*, st_mysql_const_lex_string const*, st_mysql_const_lex_string const*, Table_specification_st*, Alter_info*, bool*, int, TABLE_LIST*))[0x10ca8a3]
sql/sql_table.cc:4757(mysql_create_table(THD*, TABLE_LIST*, Table_specification_st*, Alter_info*))[0x10cb424]
sql/sql_table.cc:11870(Sql_cmd_create_table_like::execute(THD*))[0x1117580]
??:0(mysql_execute_command(THD*, bool))[0xd2fd44]
sql/sql_parse.cc:8028(mysql_parse(THD*, char*, unsigned int, Parser_state*))[0xd1155c]
sql/sql_parse.cc:1894(dispatch_command(enum_server_command, THD*, char*, unsigned int, bool))[0xd06f4c]
??:0(do_command(THD*, bool))[0xd137aa]
sql/sql_connect.cc:1418(do_handle_one_connection(CONNECT*, bool))[0x131b0a3]
sql/sql_connect.cc:0(handle_one_connection)[0x131a831]
perfschema/pfs.cc:2203(pfs_spawn_thread)[0x23fd89f]
??:0(start_thread)[0x7ff79ad39609]
??:0(clone)[0x7ff79aa4f133]

Trying to get some variables.
Some pointers may be invalid and cause the dump to abort.
Query (0x6290000e62a8): CREATE TABLE gis_point (
 g INT PRIMARY KEY, fid INT DEFAULT 1, gis_linestring TEXT,
 INDEX(fid))
ENGINE=InnoDB

Connection ID (thread ID): 21
Status: NOT_KILLED

Optimizer switch: index_merge=on,index_merge_union=on,index_merge_sort_union=on,index_merge_intersection=on,index_merge_sort_intersection=off,engine_condition_pushdown=off,index_condition_pushdown=on,derived_merge=on,derived_with_keys=on,firstmatch=on,loosescan=on,materialization=on,in_to_exists=on,semijoin=on,partial_match_rowid_merge=on,partial_match_table_scan=on,subquery_cache=on,mrr=off,mrr_cost_based=off,mrr_sort_keys=off,outer_join_with_cache=on,semijoin_with_cache=on,join_cache_incremental=on,join_cache_hashed=on,join_cache_bka=on,optimize_join_buffer_size=on,table_elimination=on,extended_keys=on,exists_to_in=on,orderby_uses_equalities=on,condition_pushdown_for_derived=on,split_materialized=on,condition_pushdown_for_subquery=on,rowid_filter=on,condition_pushdown_from_having=on,not_null_range_scan=off

The manual page at https://mariadb.com/kb/en/how-to-produce-a-full-stack-trace-for-mysqld/ contains
information that should help you find out what is causing the crash.
Writing a core file...
Working directory at /dev/shm/out/mysql_client_dir_2000
Resource Limits:
Limit                     Soft Limit           Hard Limit           Units     
Max cpu time              unlimited            unlimited            seconds   
Max file size             unlimited            unlimited            bytes     
Max data size             unlimited            unlimited            bytes     
Max stack size            8388608              unlimited            bytes     
Max core file size        0                    0                    bytes     
Max resident set          unlimited            unlimited            bytes     
Max processes             unlimited            unlimited            processes 
Max open files            1048576              1048576              files     
Max locked memory         65536                65536                bytes     
Max address space         unlimited            unlimited            bytes     
Max file locks            unlimited            unlimited            locks     
Max pending signals       2062354              2062354              signals   
Max msgqueue size         819200               819200               bytes     
Max nice priority         0                    0                    
Max realtime priority     0                    0                    
Max realtime timeout      unlimited            unlimited            us        
Core pattern: core

