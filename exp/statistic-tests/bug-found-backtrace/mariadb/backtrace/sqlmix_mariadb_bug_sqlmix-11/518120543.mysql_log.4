my_malloc: exit: ptr: 0x61d000a7d108
alloc_root: exit: ptr: 0x61d000a7d128
alloc_root: enter: root: 0x7fb5b140f7b8
alloc_root: exit: ptr: 0x61d000a7d200
alloc_root: enter: root: 0x7fb5b140f7b8
alloc_root: exit: ptr: 0x61a000e1eea8
alloc_root: enter: root: 0x7fb5b140f7b8
alloc_root: exit: ptr: 0x61a000e1eed0
alloc_root: enter: root: 0x7fb5b140f7b8
alloc_root: exit: ptr: 0x61a000a9fcb8
LEX::start: info: This: 0x7fb5b140cb00 thd_arg->lex: 0x7fb5b140cb00
st_select_lex_node::set_linkage: info: node: 0x7fb5b140d3d0  linkage: 0->0
st_select_lex_node::set_linkage: info: node: 0x7fb5b140cbd8  linkage: 0->0
st_select_lex_node::set_linkage: info: node: 0x7fb5b140cbd8  linkage: 0->4
alloc_root: enter: root: 0x7fb5b140f7b8
alloc_root: exit: ptr: 0x61a000235038
add_table_to_list: enter: Table 'f2_2' (0x61a000235038)  Select 0x7fb5b140d3d0 (1)
alloc_root: enter: root: 0x7fb5b140f7b8
alloc_root: exit: ptr: 0x61a000235068
alloc_root: enter: root: 0x7fb5b140f7b8
my_malloc: my: size: 2040 flags: 4112
my_malloc: info: global thd memory_used: 12464  size: 2064
my_malloc: exit: ptr: 0x61d000780b08
alloc_root: exit: ptr: 0x61d000780b28
LEX::main_select_push: info: service: 0
LEX::push_select: info: Top Select was 0x0 (0)  depth: 0  pushed: 0x7fb5b140d3d0 (1)
LEX::push_context: info: Context: 0x7fb5b140d418 Select: 0x7fb5b140d3d0 (1)
alloc_root: enter: root: 0x7fb5b140f7b8
alloc_root: exit: ptr: 0x61a000235078
alloc_root: enter: root: 0x7fb5b140f7b8
alloc_root: exit: ptr: 0x61a000235090
alloc_root: enter: root: 0x7fb5b140f7b8
alloc_root: exit: ptr: 0x61d000a7d3c8
alloc_root: enter: root: 0x7fb5b140f7b8
alloc_root: exit: ptr: 0x61a0002350a0
LEX::pop_select: info: Top Select is 0x0 (0)  depth: 0  poped: 0x7fb5b140d3d0 (1)
LEX::pop_context: info: Context: 0x7fb5b140d418 Select: 0x7fb5b140d3d0 (1)
LEX::pop_select: info: Top Select is empty -> sel builtin: 0x7fb5b140d3d0  service: 0
fix_and_check_vcol_expr: info: vcol: 0x61a0002350a0
alloc_root: enter: root: 0x7fb5b140f7b8
alloc_root: exit: ptr: 0x61a0002350d8
check_vcol_func_processor returns TRUE: unsupported function: info: check_vcol_func_processor returns TRUE: unsupported function
lex_end: enter: lex: 0x7fb5b140cb00
my_hash_free: enter: hash:0x7fb5b140cb28  elements: 0
alloc_root: enter: root: 0x7fb5b140f7b8
alloc_root: exit: ptr: 0x61d000a7d4a8
innobase_trx_allocate: mutex: mutex (0x611000001480) locking
innobase_trx_allocate: mutex: mutex (0x611000001480) locked
innobase_trx_allocate: mutex: mutex (0x611000001480) unlocking
innobase_trx_allocate: mutex: mutex (0x6120000012a0) locking
innobase_trx_allocate: mutex: mutex (0x6120000012a0) locked
innobase_trx_allocate: mutex: mutex (0x6120000012a0) unlocking
innobase_trx_allocate: trx: Create: 0x7fb5c29739d0
innobase_trx_allocate: mutex: mutex (0x52b5200) locking
innobase_trx_allocate: mutex: mutex (0x52b5200) locked
innobase_trx_allocate: mutex: mutex (0x52b5200) unlocking
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000b18298, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b001071b20, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000b181a0, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170002c4a98, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b001118d20, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170002c49a0, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170008f6618, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b0009ca820, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170008f6520, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000725f98, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b0013ef120, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000725ea0, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170008f6d18, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b0009c9a20, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170008f6c20, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x61700085c298, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b000b60120, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x61700085c1a0, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170002aa318, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b000007120, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170002aa220, type: 6
create_table_def: enter: table_name: timtaphg/f2_2
create_table_def: ib_que: Execute 9 (QUERY THREAD) at 0x61b000d8d278
create_table_def: ib_que: Execute 14 (CREATE TABLE) at 0x6170006d3720
create_table_def: mutex: mutex (0x69a4520) locking
create_table_def: mutex: mutex (0x69a4520) locked
create_table_def: mutex: mutex (0x69a4520) unlocking
create_table_def: mutex: mutex (0x69533c0) locking
create_table_def: mutex: mutex (0x69533c0) locked
create_table_def: mutex: mutex (0x69533c0) unlocking
create_table_def: mutex: mutex (0x69a4520) locking
create_table_def: mutex: mutex (0x69a4520) locked
create_table_def: mutex: mutex (0x69a4520) unlocking
create_table_def: mutex: mutex (0x69a4520) locking
create_table_def: mutex: mutex (0x69a4520) locked
create_table_def: mutex: mutex (0x69a4520) unlocking
create_table_def: mutex: mutex (0x69533c0) locking
create_table_def: mutex: mutex (0x69533c0) locked
create_table_def: mutex: mutex (0x69533c0) unlocking
create_table_def: ib_que: Execute 2 (INSERT) at 0x6170006d37a0
row_ins: row_ins: table: SYS_TABLES
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locking
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locked
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) unlocking
