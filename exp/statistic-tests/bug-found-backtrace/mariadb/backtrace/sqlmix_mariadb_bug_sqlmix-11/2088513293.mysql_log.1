row_upd: exit: delete-mark clust `SYS_COLUMNS` (2) by 0x6a4: RECORD(info_bits=32, 9 fields): {[8]        (0x000000000000010B),[4]    (0x00000000),[6]      (0x000000000690),[7]    8  (0x86000001381087),[1]f(0x66),[4]    (0x00000006),[4]    (0x00000503),[4]    (0x00000004),[4]    (0x00000000)}
row_upd: mutex: mutex (0x69533c0) locking
row_upd: mutex: mutex (0x69533c0) locked
row_upd: mutex: mutex (0x69533c0) unlocking
que_eval_sql: ib_que: Execute 6 (SELECT) at 0x629003c60de0
que_eval_sql: ib_que: Execute 4 (UPDATE) at 0x629003c60a60
row_upd: row_upd: table: SYS_COLUMNS
row_upd: row_upd: info bits in update vector: 0x0
row_upd: row_upd: foreign_id: NULL
row_upd: mutex: mutex (0x69a4520) locking
row_upd: mutex: mutex (0x69a4520) locked
row_upd: mutex: mutex (0x69a4520) unlocking
row_upd: mutex: mutex (0x69533c0) locking
row_upd: mutex: mutex (0x69533c0) locked
row_upd: mutex: mutex (0x69533c0) unlocking
explain_filename: enter: from 'SYS_COLUMNS'
add_identifier: info: conv 'SYS_COLUMNS' -> 'SYS_COLUMNS'
explain_filename: exit: to '`SYS_COLUMNS`'
row_upd: exit: delete-mark clust `SYS_COLUMNS` (2) by 0x6a4: RECORD(info_bits=32, 9 fields): {[8]        (0x000000000000010B),[4]    (0x00000001),[6]      (0x000000000690),[7]    8  (0x8600000138109C),[1]n(0x6E),[4]    (0x00000006),[4]    (0x00000403),[4]    (0x00000004),[4]    (0x00000000)}
row_upd: mutex: mutex (0x69533c0) locking
row_upd: mutex: mutex (0x69533c0) locked
row_upd: mutex: mutex (0x69533c0) unlocking
que_eval_sql: ib_que: Execute 6 (SELECT) at 0x629003c60de0
que_eval_sql: ib_que: Execute 4 (UPDATE) at 0x629003c60a60
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x629003c628f8
que_eval_sql: ib_que: Execute 25 (OPEN) at 0x629003c61328
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x629003c628f8
que_eval_sql: ib_que: Execute 1046 (WHILE) at 0x629003c62608
que_eval_sql: ib_que: Execute 24 (FETCH) at 0x629003c617b0
que_eval_sql: ib_que: Execute 6 (SELECT) at 0x629003c5f898
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locking
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locked
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) unlocking
que_eval_sql: ib_que: Execute 24 (FETCH) at 0x629003c617b0
que_eval_sql: ib_que: Execute 1046 (WHILE) at 0x629003c62608
que_eval_sql: ib_que: Execute 1045 (IF) at 0x629003c619b0
que_eval_sql: ib_que: Execute 1046 (WHILE) at 0x629003c62608
que_eval_sql: ib_que: Execute 4 (UPDATE) at 0x629003c61b08
row_upd: row_upd: table: SYS_INDEXES
row_upd: row_upd: info bits in update vector: 0x0
row_upd: row_upd: foreign_id: NULL
row_upd: mutex: mutex (0x69a4520) locking
row_upd: mutex: mutex (0x69a4520) locked
row_upd: mutex: mutex (0x69a4520) unlocking
row_upd: mutex: mutex (0x69533c0) locking
row_upd: mutex: mutex (0x69533c0) locked
row_upd: mutex: mutex (0x69533c0) unlocking
explain_filename: enter: from 'SYS_INDEXES'
add_identifier: info: conv 'SYS_INDEXES' -> 'SYS_INDEXES'
explain_filename: exit: to '`SYS_INDEXES`'
row_upd: exit: delete-mark clust `SYS_INDEXES` (3) by 0x6a4: RECORD(info_bits=32, 10 fields): {[8]        (0x000000000000010B),[8]       P(0x0000000000000150),[6]      (0x000000000690),[7]    8  (0x860000013810B1),[7]PRIMARY(0x5052494D415259),[4]    (0x00000001),[4]    (0x00000003),[4]    (0x000000FE),[4]    (0x00000003),[4]   2(0x00000032)}
row_upd: mutex: mutex (0x69533c0) locking
row_upd: mutex: mutex (0x69533c0) locked
row_upd: mutex: mutex (0x69533c0) unlocking
que_eval_sql: ib_que: Execute 1046 (WHILE) at 0x629003c62608
que_eval_sql: ib_que: Execute 4 (UPDATE) at 0x629003c61e20
que_eval_sql: ib_que: Execute 6 (SELECT) at 0x629003c621b0
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locking
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locked
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) unlocking
que_eval_sql: ib_que: Execute 4 (UPDATE) at 0x629003c61e20
row_upd: row_upd: table: SYS_FIELDS
row_upd: row_upd: info bits in update vector: 0x0
row_upd: row_upd: foreign_id: NULL
row_upd: mutex: mutex (0x69a4520) locking
row_upd: mutex: mutex (0x69a4520) locked
row_upd: mutex: mutex (0x69a4520) unlocking
row_upd: mutex: mutex (0x69533c0) locking
row_upd: mutex: mutex (0x69533c0) locked
row_upd: mutex: mutex (0x69533c0) unlocking
explain_filename: enter: from 'SYS_FIELDS'
add_identifier: info: conv 'SYS_FIELDS' -> 'SYS_FIELDS'
explain_filename: exit: to '`SYS_FIELDS`'
row_upd: exit: delete-mark clust `SYS_FIELDS` (4) by 0x6a4: RECORD(info_bits=32, 5 fields): {[8]       P(0x0000000000000150),[4]    (0x00000000),[6]      (0x000000000690),[7]    8  (0x860000013810CA),[1]f(0x66)}
row_upd: mutex: mutex (0x69533c0) locking
row_upd: mutex: mutex (0x69533c0) locked
row_upd: mutex: mutex (0x69533c0) unlocking
que_eval_sql: ib_que: Execute 6 (SELECT) at 0x629003c621b0
que_eval_sql: ib_que: Execute 4 (UPDATE) at 0x629003c61e20
que_eval_sql: ib_que: Execute 1046 (WHILE) at 0x629003c62608
que_eval_sql: ib_que: Execute 24 (FETCH) at 0x629003c617b0
que_eval_sql: ib_que: Execute 6 (SELECT) at 0x629003c5f898
que_eval_sql: ib_que: Execute 24 (FETCH) at 0x629003c617b0
que_eval_sql: ib_que: Execute 1046 (WHILE) at 0x629003c62608
que_eval_sql: ib_que: Execute 1045 (IF) at 0x629003c619b0
que_eval_sql: ib_que: Execute 32 (EXIT) at 0x629003c61970
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x629003c628f8
que_eval_sql: ib_que: Execute 25 (OPEN) at 0x629003c62748
que_eval_sql: ib_que: Execute 1044 (STORED PROCEDURE) at 0x629003c628f8
que_eval_sql: ib_que: Execute 9 (QUERY THREAD) at 0x629003c62850
que_graph_free_recursive: que_graph_free_recursive: node: 0x629003c5f898, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x629003c62798, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x629003c62850, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x629003c628f8, type: 1044
que_graph_free_recursive: que_graph_free_recursive: node: 0x629003c60130, type: 4
que_graph_free_recursive: que_graph_free_recursive: node: 0x629003c604a8, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x629003c60a60, type: 4
que_graph_free_recursive: que_graph_free_recursive: node: 0x629003c60de0, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x629003c61328, type: 25
que_graph_free_recursive: que_graph_free_recursive: node: 0x629003c62608, type: 1046
