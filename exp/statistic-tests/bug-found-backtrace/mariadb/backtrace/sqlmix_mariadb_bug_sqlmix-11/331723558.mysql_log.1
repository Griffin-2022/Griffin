close_thread_table: tcache: table: 'mysql'.'proc' 0x6190004e8008
close_thread_table: info: Adding mdl lock MDL_SHARED to MDL_SHARED_WRITE
close_thread_table: mutex: LOCK_thd_data (0x62b000189fe8) locking
close_thread_table: mutex: LOCK_thd_data (0x62b000189fe8) locked
close_thread_table: mutex: LOCK_thd_data (0x62b000189fe8) unlocking
maria_extra: enter: function: 46
tc_release_table: mutex: LOCK_table_cache (0x61e000000c88) locking
tc_release_table: mutex: LOCK_table_cache (0x61e000000c88) locked
tc_release_table: mutex: LOCK_table_cache (0x61e000000c88) unlocking
MDL_context::release_locks_stored_before: info: found lock to release ticket=0x6070000e8750
MDL_context::release_lock: enter: db: 'mysql' name: 'proc'
Events::drop_schema_events: enter: dropping events from qficlgaj
Event_queue::lock_data: enter: func=drop_schema_events line=393
Event_queue::lock_data: mutex: LOCK_event_queue (0x6130000057c0) locking
Event_queue::lock_data: mutex: LOCK_event_queue (0x6130000057c0) locked
Event_queue::drop_matching_events: enter: pattern: qficlgaj
Event_queue::unlock_data: enter: func=drop_schema_events line=395
Event_queue::unlock_data: mutex: LOCK_event_queue (0x6130000057c0) unlocking
Event_db_repository::drop_schema_events: enter: field: 0  schema: qficlgaj
init_alloc_root: enter: root: 0x7fe726c497e8  prealloc: 0
open_and_lock_tables: enter: derived handling: 0
open_tables: THD::enter_stage: Opening tables at /root/mariadb/sql/sql_base.cc:4222
lock_table_names: info: mdl_request.type: 4  open_type: 0
open_and_process_table: tcache: opening table: 'mysql'.'event'  item: 0x7fe726c47cc0
MDL_context::acquire_lock: enter: lock_type: MDL_SHARED_WRITE  timeout: 31536000.000000
MDL_context::acquire_lock: info: Got lock without waiting
tdc_acquire_share: mutex: LOCK_table_cache (0x61e000000c88) locking
tdc_acquire_share: mutex: LOCK_table_cache (0x61e000000c88) locked
maria_extra: enter: function: 45
tdc_acquire_share: mutex: LOCK_table_cache (0x61e000000c88) unlocking
MDL_context::acquire_lock: enter: lock_type: MDL_BACKUP_SYS_DML  timeout: 31536000.000000
MDL_context::acquire_lock: info: Adding mdl lock MDL_BACKUP_SYS_DML to MDL_BACKUP_DDL
MDL_context::acquire_lock: info: Got lock without waiting
column_bitmaps_signal: info: read_set: 0x6190001c8638  write_set: 0x6190001c8650
maria_extra: enter: function: 45
open_table: mutex: LOCK_thd_data (0x62b000189fe8) locking
open_table: mutex: LOCK_thd_data (0x62b000189fe8) locked
open_table: mutex: LOCK_thd_data (0x62b000189fe8) unlocking
handle_table: info: table: 0x7fe726c47cc0  name: event  db: mysql  flags: 0
maria_extra: enter: function: 43
open_tables: THD::enter_stage: After opening tables at /root/mariadb/sql/sql_base.cc:4505
open_tables: THD::enter_stage: (null) at /root/mariadb/sql/sql_base.cc:4506
open_tables: open_tables: returning: 0
alloc_root: enter: root: 0x62b00018e1a8
alloc_root: exit: ptr: 0x62900334dbd0
lock_tables_check: info: Adding mdl lock MDL_SHARED_WRITE to MDL_SHARED_WRITE
get_lock_data: info: count 1
alloc_root: enter: root: 0x62b00018e1a8
alloc_root: exit: ptr: 0x62900334dbe0
get_lock_data: info: sql_lock->table_count 1 sql_lock->lock_count 1
mysql_lock_tables(sql_lock): THD::enter_stage: System lock at /root/mariadb/sql/lock.cc:337
lock_external: info: count 1
maria_lock_database: enter: lock_type: 1  old lock 2  r_locks: 0  w_locks: 0 global_changed:  0  open_count: 0  name: './mysql/event.MAI'
maria_lock_database: mutex: share->intern_lock (0x6220002b4288) locking
maria_lock_database: mutex: share->intern_lock (0x6220002b4288) locked
maria_lock_database: mutex: share->intern_lock (0x6220002b4288) unlocking
mysql_lock_tables(sql_lock): THD::enter_stage: table lock at /root/mariadb/sql/lock.cc:342
mysql_lock_tables(sql_lock): mutex: lock->mutex (0x6220002b4138) locking
mysql_lock_tables(sql_lock): mutex: lock->mutex (0x6220002b4138) locked
_ma_block_get_status: enter: concurrent_insert 0
mysql_lock_tables(sql_lock): mutex: lock->mutex (0x6220002b4138) unlocking
_ma_setup_live_state: enter: info: 0x62a0001aa288
trnman_new_trn: info: mysql_mutex_lock LOCK_trn_list
trnman_new_trn: mutex: LOCK_trn_list (0x6084cc0) locking
trnman_new_trn: mutex: LOCK_trn_list (0x6084cc0) locked
new_trid: info: mysql_mutex_assert_owner LOCK_trn_list
trnman_new_trn: info: mysql_mutex_unlock LOCK_trn_list
trnman_new_trn: mutex: LOCK_trn_list (0x6084cc0) unlocking
trnman_new_trn: mutex: trn->state_lock (0x61400000a8d8) locking
trnman_new_trn: mutex: trn->state_lock (0x61400000a8d8) locked
trnman_new_trn: mutex: trn->state_lock (0x61400000a8d8) unlocking
trnman_new_trn: exit: trn: 0x61400000a8c8  trid: 0x11969  min_read_from: 0x11970
maria_create_trn_for_mysql: mutex: LOCK_thd_data (0x62b000189fe8) locking
maria_create_trn_for_mysql: mutex: LOCK_thd_data (0x62b000189fe8) locked
maria_create_trn_for_mysql: mutex: LOCK_thd_data (0x62b000189fe8) unlocking
plugin_lock: mutex: LOCK_plugin (0x6022f20) locking
plugin_lock: mutex: LOCK_plugin (0x6022f20) locked
my_malloc: my: size: 8 flags: 16
my_malloc: info: global thd memory_used: 18488  size: 32
my_malloc: exit: ptr: 0x60e00012ee88
intern_plugin_lock: lock: thd: 0x62b000188288  plugin: "Aria" LOCK ref_count: 6
plugin_lock: mutex: LOCK_plugin (0x6022f20) unlocking
maria_create_trn_for_mysql: info: table: 0x62a0001aa288  trn: 0x0 -> 0x61400000a8c8
trans_register_ha: enter: stmt
my_malloc: my: size: 136 flags: 48
my_malloc: info: global thd memory_used: 18520  size: 160
my_malloc: exit: ptr: 0x6120005c01c8
_ma_setup_live_state: mutex: share->intern_lock (0x6220002b4288) locking
_ma_setup_live_state: mutex: share->intern_lock (0x6220002b4288) locked
_ma_setup_live_state: info: share: 0x6220002b3988  in_trans: 1
_ma_setup_live_state: mutex: share->intern_lock (0x6220002b4288) unlocking
_ma_setup_live_state: info: records: 0
_ma_setup_live_state: exit: tables: 0x6120005c01c8  info->state: 0x6120005c01d8
mysql_lock_tables(sql_lock): THD::enter_stage: (null) at /root/mariadb/sql/lock.cc:357
THD::decide_logging_format: info: Query: drop database if exists qficlgaj
THD::decide_logging_format: info: binlog_format: 1
THD::decide_logging_format: info: current_stmt_binlog_format: 1
THD::decide_logging_format: info: lex->get_stmt_unsafe_flags(): 0x0
THD::decide_logging_format: info: decision: no logging since mysql_bin_log.is_open() = 0 and (options & OPTION_BIN_LOG) = 0x0 and binlog_format = 1 and binlog_filter->db_ok(db) = 1
column_bitmaps_signal: info: read_set: 0x61b0009a5f78  write_set: 0x61b0009a5f78
