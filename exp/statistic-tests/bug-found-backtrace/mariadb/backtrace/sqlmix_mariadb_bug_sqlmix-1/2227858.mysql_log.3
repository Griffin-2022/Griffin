alloc_root: enter: root: 0x7f8eb266dc08
my_malloc: my: size: 1992 flags: 4112
my_malloc: info: global thd memory_used: -2032  size: 2016
my_malloc: exit: ptr: 0x61d000c11708
alloc_root: exit: ptr: 0x61d000c11728
get_new_handler: info: handler created F_UNLCK 2 F_RDLCK 0 F_WRLCK 1
TABLE_SHARE::init_from_binary_frm_image: debug: field_type: tinyint, field_length: 4, interval: 0x0, pack_flag: FIELDFLAG_BINARY FIELDFLAG_NUMBER FIELDFLAG_PACK 
alloc_root: enter: root: 0x7f8eb266dc08
alloc_root: exit: ptr: 0x61a000303dd8
parse_option_list: enter: struct: 0x0 list: 0x0 rules: 0x51c2aa0 suppress_warning: 1 root: 0x7f8eb266dc08
alloc_root: enter: root: 0x7f8eb266dc08
alloc_root: exit: ptr: 0x61a000303eb0
set_one_value: enter: opt: 0x51c2aa0 type: 3 name 'PAGE_COMPRESSED' value: '<DEFAULT>'
set_one_value: enter: opt: 0x51c2af0 type: 0 name 'PAGE_COMPRESSION_LEVEL' value: '<DEFAULT>'
set_one_value: enter: opt: 0x51c2b40 type: 2 name 'ENCRYPTED' value: '<DEFAULT>'
set_one_value: enter: opt: 0x51c2b90 type: 0 name 'ENCRYPTION_KEY_ID' value: '<DEFAULT>'
parse_option_list: enter: struct: 0x0 list: 0x0 rules: 0x0 suppress_warning: 1 root: 0x7f8eb266dc08
alloc_root: enter: root: 0x7f8eb266dc08
alloc_root: exit: ptr: 0x61a000303ed8
open_table_from_share: enter: name: 'foudktcx.t1'  form: 0x7f8eb266d520
init_alloc_root: enter: root: 0x7f8eb266d7b8  prealloc: 0
alloc_root: enter: root: 0x7f8eb266d7b8
my_malloc: my: size: 1016 flags: 4112
my_malloc: info: global thd memory_used: -16  size: 1040
my_malloc: exit: ptr: 0x61a000865308
alloc_root: exit: ptr: 0x61a000865328
get_new_handler: enter: alloc: 0x7f8eb266d7b8
alloc_root: enter: root: 0x7f8eb266d7b8
my_malloc: my: size: 1992 flags: 4112
my_malloc: info: global thd memory_used: 1024  size: 2016
my_malloc: exit: ptr: 0x61d000f9cf08
alloc_root: exit: ptr: 0x61d000f9cf28
get_new_handler: info: handler created F_UNLCK 2 F_RDLCK 0 F_WRLCK 1
alloc_root: enter: root: 0x7f8eb266d7b8
alloc_root: exit: ptr: 0x61a000865338
alloc_root: enter: root: 0x7f8eb266d7b8
alloc_root: exit: ptr: 0x61a000865348
alloc_root: enter: root: 0x7f8eb266d7b8
alloc_root: exit: ptr: 0x61a000865360
alloc_root: enter: root: 0x7f8eb266d7b8
alloc_root: exit: ptr: 0x61a000865368
alloc_root: enter: root: 0x7f8eb266d7b8
alloc_root: exit: ptr: 0x61a000865440
innobase_trx_allocate: mutex: mutex (0x611000001480) locking
innobase_trx_allocate: mutex: mutex (0x611000001480) locked
innobase_trx_allocate: mutex: mutex (0x611000001480) unlocking
innobase_trx_allocate: mutex: mutex (0x6120000012a0) locking
innobase_trx_allocate: mutex: mutex (0x6120000012a0) locked
innobase_trx_allocate: mutex: mutex (0x6120000012a0) unlocking
innobase_trx_allocate: trx: Create: 0x7f8ec1b90b80
innobase_trx_allocate: mutex: mutex (0x52b5200) locking
innobase_trx_allocate: mutex: mutex (0x52b5200) locked
innobase_trx_allocate: mutex: mutex (0x52b5200) unlocking
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170003f6098, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b00031fd20, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170003f5fa0, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x61700061bf98, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b000547820, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x61700061bea0, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x61700087b718, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b000197d20, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x61700087b620, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x61700087f998, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b000196f20, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x61700087f8a0, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x61700087f618, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b00039b320, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x61700087f520, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000688418, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b000719e20, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000688320, type: 6
que_graph_free_recursive: que_graph_free_recursive: node: 0x617000369998, type: 8
que_graph_free_recursive: que_graph_free_recursive: node: 0x61b00037ec20, type: 9
que_graph_free_recursive: que_graph_free_recursive: node: 0x6170003698a0, type: 6
create_table_def: enter: table_name: foudktcx/t1
create_table_def: ib_que: Execute 9 (QUERY THREAD) at 0x61b000556178
create_table_def: ib_que: Execute 14 (CREATE TABLE) at 0x61700087e3a0
create_table_def: mutex: mutex (0x69a4520) locking
create_table_def: mutex: mutex (0x69a4520) locked
create_table_def: mutex: mutex (0x69a4520) unlocking
create_table_def: mutex: mutex (0x69533c0) locking
create_table_def: mutex: mutex (0x69533c0) locked
create_table_def: mutex: mutex (0x69533c0) unlocking
create_table_def: mutex: mutex (0x69a4520) locking
create_table_def: mutex: mutex (0x69a4520) locked
create_table_def: mutex: mutex (0x69a4520) unlocking
create_table_def: mutex: mutex (0x69a4520) locking
create_table_def: mutex: mutex (0x69a4520) locked
create_table_def: mutex: mutex (0x69a4520) unlocking
create_table_def: mutex: mutex (0x69533c0) locking
create_table_def: mutex: mutex (0x69533c0) locked
create_table_def: mutex: mutex (0x69533c0) unlocking
create_table_def: ib_que: Execute 2 (INSERT) at 0x61700087e420
row_ins: row_ins: table: SYS_TABLES
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locking
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locked
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) unlocking
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locking
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) locked
btr_cur_search_to_nth_level: mutex: mutex (0x69a4520) unlocking
