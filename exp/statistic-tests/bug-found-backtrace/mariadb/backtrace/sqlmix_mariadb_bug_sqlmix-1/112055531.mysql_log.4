| | | | | | | | | | | my: ptr: 0x60e0001e4b08
| | | | | | | | | | | info: global thd memory_used: 39128  size: -32
| | | | | | | | | | <my_free
| | | | | | | | | | lock: thd: 0x62b00026f288  plugin: "InnoDB" UNLOCK ref_count: 36
| | | | | | | | | <intern_plugin_unlock
| | | | | | | | | >intern_plugin_unlock
| | | | | | | | | | >my_free
| | | | | | | | | | | my: ptr: 0x60e0008007a8
| | | | | | | | | | | info: global thd memory_used: 39096  size: -32
| | | | | | | | | | <my_free
| | | | | | | | | | lock: thd: 0x62b00026f288  plugin: "SQL_SEQUENCE" UNLOCK ref_count: 0
| | | | | | | | | <intern_plugin_unlock
| | | | | | | | | >intern_plugin_unlock
| | | | | | | | | | >my_free
| | | | | | | | | | | my: ptr: 0x60e000308fe8
| | | | | | | | | | | info: global thd memory_used: 39064  size: -32
| | | | | | | | | | <my_free
| | | | | | | | | | lock: thd: 0x62b00026f288  plugin: "PERFORMANCE_SCHEMA" UNLOCK ref_count: 45
| | | | | | | | | <intern_plugin_unlock
| | | | | | | | | mutex: LOCK_plugin (0x6022f20) unlocking
| | | | | | | | <plugin_unlock_list
| | | | | | | <plugin_foreach_with_mask
| | | | | | <ha_discover_table_names
| | | | | | >alloc_root
| | | | | | | enter: root: 0x62b0002751a8
| | | | | | | exit: ptr: 0x629004853458
| | | | | | <alloc_root
| | | | | | info: Examining: db.opt
| | | | | | >find_type_eol
| | | | | | | enter: x: '.opt'  lib: 0x4e7c240
| | | | | | <find_type_eol
| | | | | | >fn_format
| | | | | | | enter: name: ./dtmipaig//db.opt  dir:   extension:   flag: 260
| | | | | | | >dirname_part
| | | | | | | | enter: './dtmipaig//db.opt'
| | | | | | | | >convert_dirname
| | | | | | | | <convert_dirname
| | | | | | | <dirname_part
| | | | | | | >unpack_dirname
| | | | | | | | >normalize_dirname
| | | | | | | | | >dirname_part
| | | | | | | | | | enter: './dtmipaig//'
| | | | | | | | | | >convert_dirname
| | | | | | | | | | <convert_dirname
| | | | | | | | | <dirname_part
| | | | | | | | | >cleanup_dirname
| | | | | | | | | | enter: from: './dtmipaig//'
| | | | | | | | | | exit: to: './dtmipaig/'
| | | | | | | | | <cleanup_dirname
| | | | | | | | <normalize_dirname
| | | | | | | <unpack_dirname
| | | | | | | >strlength
| | | | | | | <strlength
| | | | | | <fn_format
| | | | | | >my_handler_delete_with_symlink
| | | | | | | >my_delete
| | | | | | | | my: name ./dtmipaig/db.opt MyFlags 0
| | | | | | | <my_delete
| | | | | | <my_handler_delete_with_symlink
| | | | | | >my_free
| | | | | | | my: ptr: 0x611000338448
| | | | | | | info: global thd memory_used: 39032  size: -88
| | | | | | <my_free
| | | | | <find_db_tables_and_rm_known_files
| | | | | >lock_table_names
| | | | | | info: mdl_request.type: 9  open_type: 2
| | | | | | >alloc_root
| | | | | | | enter: root: 0x62b0002751a8
| | | | | | | exit: ptr: 0x629004853b40
| | | | | | <alloc_root
| | | | | | >MDL_context::acquire_locks
| | | | | | | >my_malloc
| | | | | | | | my: size: 16 flags: 16
| | | | | | | | info: global thd memory_used: 38944  size: 40
| | | | | | | | exit: ptr: 0x60e00042f528
| | | | | | | <my_malloc
| | | | | | | >MDL_context::acquire_lock
| | | | | | | | enter: lock_type: MDL_INTENTION_EXCLUSIVE  timeout: 86400.000000
| | | | | | | | info: Adding mdl lock MDL_INTENTION_EXCLUSIVE to MDL_EXCLUSIVE
| | | | | | | | info: Got lock without waiting
| | | | | | | <MDL_context::acquire_lock
| | | | | | | >MDL_context::acquire_lock
| | | | | | | | enter: lock_type: MDL_EXCLUSIVE  timeout: 86400.000000
| | | | | | | | info: Got lock without waiting
| | | | | | | <MDL_context::acquire_lock
| | | | | | | >my_free
| | | | | | | | my: ptr: 0x60e00042f528
| | | | | | | | info: global thd memory_used: 38984  size: -40
| | | | | | | <my_free
| | | | | | <MDL_context::acquire_locks
| | | | | | >upgrade_lock_if_not_exists
| | | | | | <upgrade_lock_if_not_exists
| | | | | | info: Adding mdl lock MDL_BACKUP_DDL to MDL_BACKUP_DDL
| | | | | <lock_table_names
| | | | | >lock_db_routines
| | | | | | >init_alloc_root
| | | | | | | enter: root: 0x7f115e1fe908  prealloc: 0
| | | | | | <init_alloc_root
| | | | | | >reset_n_backup_open_tables_state
| | | | | | <reset_n_backup_open_tables_state
