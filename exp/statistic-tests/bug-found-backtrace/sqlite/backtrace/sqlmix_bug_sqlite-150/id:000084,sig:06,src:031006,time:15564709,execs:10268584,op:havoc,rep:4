GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < /root/crashes/id:000084,sig:06,src:031006,time:15564709,execs:10268584,op:havoc,rep:4
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;SELECT t1aa FROM t1 ORDER BY t1aa,t1aa DESC LIMIT 10 OFFSET 26;]
VDBE Trace:
   0 Init             0   36    0               00 Start at 36
  36 Transaction      0    0    0 2             01 usesStmtJournal=0
  37 Goto             0    1    0               00 
   1 OpenEphemeral    1    2    0 k(1,-B)       00 nColumn=2
   2 Integer         10    1    0               00 r[1]=10; LIMIT counter
R[1] =  i:10
   3 Integer         26    2    0               00 r[2]=26
R[2] =  i:26
   4 MustBeInt        2    0    0               00 OFFSET counter
R[2] =  i:26
   5 OffsetLimit      1    3    2               00 if r[1]>0 then r[3]=r[1]+max(0,r[2]) else r[3]=(-1); LIMIT+OFFSET
R[1] =  i:10
R[2] =  i:26
R[3] =  i:36
   6 OpenRead         2    4    0 k(1,)         00 root=4 iDb=0; sqlite_autoindex_t1_1
   7 Explain          7    0    0 SCAN t1       00 
   8 Rewind           2   26    4 0             00 
  26 Explain         26    0    0 USE TEMP B-TREE FOR RIGHT PART OF ORDER BY 00 
  27 Gosub           10   29    0               00 
R[10] =  i:27
  29 Sort             1   35    0               00 
  35 Halt             0    0    0               00 
SQL: [;SELECT b FROM t1 ORDER BY b,b DESC LIMIT 10 OFFSET 41;]
VDBE Trace:
   0 Init             0   26    0               00 Start at 26
  26 Transaction      0    0    0 2             01 usesStmtJournal=0
  27 Goto             0    1    0               00 
   1 OpenEphemeral    1    4    0 k(2,B,-B)     00 nColumn=4
   2 Integer         10    1    0               00 r[1]=10; LIMIT counter
R[1] =  i:10
   3 Integer         41    2    0               00 r[2]=41
R[2] =  i:41
   4 MustBeInt        2    0    0               00 OFFSET counter
R[2] =  i:41
   5 OffsetLimit      1    3    2               00 if r[1]>0 then r[3]=r[1]+max(0,r[2]) else r[3]=(-1); LIMIT+OFFSET
R[1] =  i:10
R[2] =  i:41
R[3] =  i:51
   6 OpenRead         2    4    0 k(1,)         00 root=4 iDb=0; sqlite_autoindex_t1_1
   7 Explain          7    0    0 SCAN t1       00 
   8 Rewind           2   19    4 0             00 
  19 Explain         19    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  20 Sort             1   25    0               00 
  25 Halt             0    0    0               00 
SQL: [;SELECT t1aa FROM t1 ORDER BY t1aa,t1aa DESC LIMIT 27 OFFSET 49;]
VDBE Trace:
   0 Init             0   36    0               00 Start at 36
  36 Transaction      0    0    0 2             01 usesStmtJournal=0
  37 Goto             0    1    0               00 
   1 OpenEphemeral    1    2    0 k(1,-B)       00 nColumn=2
   2 Integer         27    1    0               00 r[1]=27; LIMIT counter
R[1] =  i:27
   3 Integer         49    2    0               00 r[2]=49
R[2] =  i:49
   4 MustBeInt        2    0    0               00 OFFSET counter
R[2] =  i:49
   5 OffsetLimit      1    3    2               00 if r[1]>0 then r[3]=r[1]+max(0,r[2]) else r[3]=(-1); LIMIT+OFFSET
R[1] =  i:27
R[2] =  i:49
R[3] =  i:76
   6 OpenRead         2    4    0 k(1,)         00 root=4 iDb=0; sqlite_autoindex_t1_1
   7 Explain          7    0    0 SCAN t1       00 
   8 Rewind           2   26    4 0             00 
  26 Explain         26    0    0 USE TEMP B-TREE FOR RIGHT PART OF ORDER BY 00 
  27 Gosub           10   29    0               00 
R[10] =  i:27
  29 Sort             1   35    0               00 
  35 Halt             0    0    0               00 
SQL: [;SELECT t1r1 FROM x ORDER BY t1r1 DESC,t1r1 DESC LIMIT 10 OFFSET 25;]
VDBE Trace:
   0 Init             0   26    0               00 Start at 26
  26 Transaction      1    0    1 2             01 usesStmtJournal=0
  27 Goto             0    1    0               00 
   1 OpenEphemeral    1    4    0 k(2,-B,-B)    00 nColumn=4
   2 Integer         10    1    0               00 r[1]=10; LIMIT counter
R[1] =  i:10
   3 Integer         25    2    0               00 r[2]=25
R[2] =  i:25
   4 MustBeInt        2    0    0               00 OFFSET counter
R[2] =  i:25
   5 OffsetLimit      1    3    2               00 if r[1]>0 then r[3]=r[1]+max(0,r[2]) else r[3]=(-1); LIMIT+OFFSET
R[1] =  i:10
R[2] =  i:25
R[3] =  i:35
   6 OpenRead         0    2    1 1             00 root=2 iDb=1; x
   7 Explain          7    0    0 SCAN x        00 
   8 Rewind           0   19    0               00 
   9 Column           0    0    4               00 r[4]=x.t1r1
R[4] =  i:2
  10 Column           0    0    5               00 r[5]=x.t1r1
R[5] =  i:2
  11 Sequence         1    6    0               00 r[6]=cursor[1].ctr++
R[6] =  i:0
  12 IfNotZero        3   16    0               00 if r[3]!=0 then r[3]--, goto 16
R[3] =  i:35
  16 MakeRecord       4    3    8               00 r[8]=mkrec(r[4..6])
R[8] =  sx[040101080202|......]
  17 IdxInsert        1    8    4 3             00 key=r[8]
R[8] =  sx[040101080202|......]
  18 Next             0    9    0               01 
  19 Explain         19    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  20 Sort             1   25    0               00 
  21 IfPos            2   24    1               00 if r[2]>0 then r[2]-=1, goto 24; OFFSET
R[2] =  i:25
  24 Next             1   21    0               00 
  25 Halt             0    0    0               00 
SQL: [;
;SELECT b FROM t1 ORDER BY b,b,+b,+b,+b;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    0    0 2             01 usesStmtJournal=0
  22 Goto             0    1    0               00 
   1 SorterOpen       1    7    0 k(5,B,B,B,B,B) 00 
   2 OpenRead         2    4    0 k(1,)         00 root=4 iDb=0; sqlite_autoindex_t1_1
   3 Explain          3    0    0 SCAN t1       00 
   4 Rewind           2   13    1 0             00 
  13 Explain         13    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  14 OpenPseudo       3    8    7               00 7 columns in r[8]
  15 SorterSort       1   20    0               00 
  20 Halt             0    0    0               00 
SQL: [;
;SELECT t1aa FROM t1 ORDER BY +t1aa DESC,+t1aa DESC,+t1aa,+t1aa,+t1aa LIMIT 31
;]
VDBE Trace:
   0 Init             0   26    0               00 Start at 26
  26 Transaction      0    0    0 2             01 usesStmtJournal=0
  27 Goto             0    1    0               00 
   1 OpenEphemeral    1    7    0 k(5,-B,-B,B,B,B) 00 nColumn=7
   2 Integer         31    1    0               00 r[1]=31; LIMIT counter
R[1] =  i:31
   3 OpenRead         2    4    0 k(1,)         00 root=4 iDb=0; sqlite_autoindex_t1_1
   4 Explain          4    0    0 SCAN t1       00 
   5 Rewind           2   20    2 0             00 
  20 Explain         20    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  21 Sort             1   25    0               00 
  25 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f660cc3a859 in __GI_abort () at abort.c:79
#2  0x00007f660cc3a729 in __assert_fail_base (fmt=0x7f660cdd0588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x565ea5 "pPk->tnum==pTab->tnum", file=0x549ad6 "sqlite3.c", line=124037, function=<optimized out>)
    at assert.c:92
#3  0x00007f660cc4bfd6 in __GI___assert_fail (assertion=0x565ea5 "pPk->tnum==pTab->tnum", file=0x549ad6 "sqlite3.c", line=124037, function=0x565e2a "void sqlite3OpenTable(Parse *, int, int, Table *, int)") at assert.c:101
#4  0x00000000004c5ecf in sqlite3OpenTable (pParse=0x7ffe9efd7638, iCur=1, iDb=0, pTab=0x1bbbf00, opcode=100) at sqlite3.c:124037
#5  0x00000000004e6e03 in sqlite3RefillIndex (pParse=0x7ffe9efd7638, pIndex=0x1bc3490, memRootPage=1) at sqlite3.c:116785
#6  0x00000000004ac19d in sqlite3CreateIndex (pParse=0x7ffe9efd7638, pName1=0x7ffe9efd6ce0, pName2=0x7ffe9efd6cf8, pTblName=0x1ba8450, pList=0x1bc14e0, onError=0, pStart=0x7ffe9efd6c80, pPIWhere=0x0, sortOrder=0, 
    ifNotExist=0, idxType=0 '\000') at sqlite3.c:117443
#7  0x00000000004a518d in yy_reduce (yypParser=0x7ffe9efd6c38, yyruleno=234, yyLookahead=1, yyLookaheadToken=..., pParse=0x7ffe9efd7638) at sqlite3.c:163999
#8  0x00000000004a107e in sqlite3Parser (yyp=0x7ffe9efd6c38, yymajor=1, yyminor=...) at sqlite3.c:164670
#9  0x000000000041f407 in sqlite3RunParser (pParse=0x7ffe9efd7638, 
    zSql=0x1bb95ec ";\n;CREATE INDEX t1c ON t1(c);\n;CREATE INDEX t1d ON t1(d\377\377\n;CREATE TABLE t2(x,y);\n;CREATE INDEX t2y ON t2(y);\n;INSERT INTO t1 VALUES(1,2,3,4);\n;INSERT INTO t1 VALUES(5,6,7,8);\n;INSERT INTO t2 VALBES(1,"..., pzErrMsg=0x7ffe9efd77d0) at sqlite3.c:165966
#10 0x0000000000494805 in sqlite3Prepare (db=0x1ba94a0, 
    zSql=0x1bac14a ";\n;CREATE INDEX t1b ON t1(b);\n;CREATE INDEX t1c ON t1(c);\n;CREATE INDEX t1d ON t1(d\377\377\n;CREATE TABLE t2(x,y);\n;CREATE INDEX t2y ON t2(y);\n;INSERT INTO t1 VALUES(1,2,3,4);\n;INSERT INTO t1 VALUES(5,6,7,8"..., nBytes=1878, prepFlags=128, pReprepare=0x0, ppStmt=0x7ffe9efd7918, pzTail=0x7ffe9efd7900) at sqlite3.c:132924
#11 0x000000000041dc7c in sqlite3LockAndPrepare (db=0x1ba94a0, 
    zSql=0x1bac14a ";\n;CREATE INDEX t1b ON t1(b);\n;CREATE INDEX t1c ON t1(c);\n;CREATE INDEX t1d ON t1(d\377\377\n;CREATE TABLE t2(x,y);\n;CREATE INDEX t2y ON t2(y);\n;INSERT INTO t1 VALUES(1,2,3,4);\n;INSERT INTO t1 VALUES(5,6,7,8"..., nBytes=1878, prepFlags=128, pOld=0x0, ppStmt=0x7ffe9efd7918, pzTail=0x7ffe9efd7900) at sqlite3.c:133006
#12 0x000000000040e16f in sqlite3_prepare_v2 (db=0x1ba94a0, 
    zSql=0x1bac14a ";\n;CREATE INDEX t1b ON t1(b);\n;CREATE INDEX t1c ON t1(c);\n;CREATE INDEX t1d ON t1(d\377\377\n;CREATE TABLE t2(x,y);\n;CREATE INDEX t2y ON t2(y);\n;INSERT INTO t1 VALUES(1,2,3,4);\n;INSERT INTO t1 VALUES(5,6,7,8"..., nBytes=1878, ppStmt=0x7ffe9efd7918, pzTail=0x7ffe9efd7900) at sqlite3.c:133091
#13 0x0000000000404ed9 in main (argc=1, argv=0x7ffe9efd7ac8) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 34831] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
