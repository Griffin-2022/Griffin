GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < /root/crashes/id:000148,sig:06,src:026323+034052,time:38295235,execs:22736989,op:splice,rep:4
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;PRAGMA sql_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
SQL-trace: ;PRAGMA sql_trace=on;
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;PRAGMA vdbe_listing=off;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
SQL-trace: ;PRAGMA vdbe_listing=off;
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;PRAGMA sql_trace=off;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    0 0             00 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN main.sqlite_master 00 
   4 Rewind           0   12    0               00 
  12 Halt             0    0    0               00 
SQL: [CREATE TABLE t1(a INT, b TEXT, after BLOB, tx REAL);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    0 0             01 usesStmtJournal=1
  31 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
R[3] =  i:0
   2 If               3    5    0               00 
R[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
R[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
R[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
R[3] =  tx[060000000000|......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
R[3] =  tx[060000000000|......]
R[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
R[4] =  NULL
  13 Noop             2    0    4               00 
  14 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  15 Explain         15    0    0 SEARCH main.sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  16 ReleaseReg      11    1    0               00 release r[11] mask 0
  17 SeekRowid        1   19    1               00 intkey=r[1]
R[1] =  i:1
  18 Rowid            1    5    0               00 r[5]=rowid
R[5] =  i:1
  19 IsNull           5   27    0               00 if r[5]==NULL goto 27
R[5] =  i:1
  20 String8          0    6    0 table         00 r[6]='table'
R[6] =   t5[table](8)
  21 String8          0    7    0 t1            00 r[7]='t1'
R[7] =   t2[t1](8)
  22 String8          0    8    0 t1            00 r[8]='t1'
R[8] =   t2[t1](8)
  23 SCopy            2    9    0               00 r[9]=r[2]
R[9] =  i:2 <== R[2]
  24 String8          0   10    0 CREATE TABLE t1(a INT, b TEXT, after BLOB, tx REAL) 00 r[10]='CREATE TABLE t1(a INT, b TEXT, after BLOB, tx REAL)'
R[10] =   t51[CREATE TABLE t1(a INT, b ](8)
  25 MakeRecord       6    5    4 BBBDB         00 r[4]=mkrec(r[6..10])
R[6] =   t5[table](8)
R[7] =   t2[t1](8)
R[8] =   t2[t1](8)
R[9] =  i:2 <== R[2]
R[10] =   t51[CREATE TABLE t1(a INT, b ](8)
R[4] =  sx[0617111101737461626C657431743102435245415445205441|.....stablet1t1.CREATE TA]
  26 Insert           1    4    5               00 intkey=r[5] data=r[4]
R[4] =  sx[0617111101737461626C657431743102435245415445205441|.....stablet1t1.CREATE TA]
R[5] =  i:1
  27 SetCookie        0    1    1               00 
  28 ParseSchema      0    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    1 0             00 usesStmtJournal=0
  20 String8          0    2    0 t1            00 r[2]='t1'
R[2] =   t2[t1](8)
  21 String8          0    3    0 trigger       00 r[3]='trigger'
R[3] =   t7[trigger](8)
  22 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN main.sqlite_master 00 
   4 Rewind           0   18    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
R[1] =   s2[t1](8)
   6 Ne               2   17    1 BINARY-8      52 if r[1]!=r[2] goto 17
R[2] =   t2[t1](8)
R[1] =   s2[t1](8)
   7 ReleaseReg       1    1    0               00 release r[1] mask 0
   8 Column           0    0    1               00 r[1]=sqlite_master.type
R[1] =   s5[table](8)
   9 Eq               3   17    1 BINARY-8      52 if r[1]==r[3] goto 17
R[3] =   t7[trigger](8)
R[1] =   s5[table](8)
  10 ReleaseReg       1    1    0               00 release r[1] mask 0
  11 Column           0    0    4               00 r[4]=sqlite_master.type
R[4] =   s5[table](8)
  12 Column           0    1    5               00 r[5]=sqlite_master.name
R[5] =   s2[t1](8)
  13 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
R[6] =   s2[t1](8)
  14 Column           0    3    7               00 r[7]=sqlite_master.rootpage
R[7] =  i:2
  15 Column           0    4    8               00 r[8]=sqlite_master.sql
R[8] =   s51[CREATE TABLE t1(a INT, b ](8)
  16 ResultRow        4    5    0               00 output=r[4..8]
R[4] =   s5[table](8)
R[5] =   s2[t1](8)
R[6] =   s2[t1](8)
R[7] =  i:2
R[8] =   s51[CREATE TABLE t1(a INT, b ](8)
  17 Next             0    5    0               01 
  18 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [ 
;;PRAGMA journal_mode = off;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 JournalMode      0    1    2               00 
R[1] =   t3[off](8)
   2 ResultRow        1    1    0               00 output=r[1]
R[1] =   t3[off](8)
   3 Halt             0    0    0               00 
SQL: [;;PRAGMA incremental_vacuum;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    1    1 0             01 usesStmtJournal=0
   8 Goto             0    1    0               00 
   1 Integer       2147483647    1    0               00 r[1]=2147483647
R[1] =  i:2147483647
   2 IncrVacuum       0    6    0               00 
   6 Halt             0    0    0               00 
SQL: [;CREATE TABLE after(tx, x1);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    1 0             01 usesStmtJournal=1
  31 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
R[3] =  i:4
   2 If               3    5    0               00 
R[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
R[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
R[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
R[3] =  tx[060000000000|......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
R[3] =  tx[060000000000|......]
R[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
R[4] =  NULL
  13 Noop             2    0    4               00 
  14 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  15 Explain         15    0    0 SEARCH main.sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  16 ReleaseReg      11    1    0               00 release r[11] mask 0
  17 SeekRowid        1   19    1               00 intkey=r[1]
R[1] =  i:2
  18 Rowid            1    5    0               00 r[5]=rowid
R[5] =  i:2
  19 IsNull           5   27    0               00 if r[5]==NULL goto 27
R[5] =  i:2
  20 String8          0    6    0 table         00 r[6]='table'
R[6] =   t5[table](8)
  21 String8          0    7    0 after         00 r[7]='after'
R[7] =   t5[after](8)
  22 String8          0    8    0 after         00 r[8]='after'
R[8] =   t5[after](8)
  23 SCopy            2    9    0               00 r[9]=r[2]
R[9] =  i:3 <== R[2]
  24 String8          0   10    0 CREATE TABLE after(tx, x1) 00 r[10]='CREATE TABLE after(tx, x1)'
R[10] =   t26[CREATE TABLE after(tx, x1](8)
  25 MakeRecord       6    5    4 BBBDB         00 r[4]=mkrec(r[6..10])
R[6] =   t5[table](8)
R[7] =   t5[after](8)
R[8] =   t5[after](8)
R[9] =  i:3 <== R[2]
R[10] =   t26[CREATE TABLE after(tx, x1](8)
R[4] =  sx[0617171701417461626C656166746572616674657203435245|.....Atableafterafter.CRE]
  26 Insert           1    4    5               00 intkey=r[5] data=r[4]
R[4] =  sx[0617171701417461626C656166746572616674657203435245|.....Atableafterafter.CRE]
R[5] =  i:2
  27 SetCookie        0    1    2               00 
  28 ParseSchema      0    0    0 tbl_name='after' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    2 0             00 usesStmtJournal=0
  20 String8          0    2    0 after         00 r[2]='after'
R[2] =   t5[after](8)
  21 String8          0    3    0 trigger       00 r[3]='trigger'
R[3] =   t7[trigger](8)
  22 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN main.sqlite_master 00 
   4 Rewind           0   18    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
R[1] =   s2[t1](8)
   6 Ne               2   17    1 BINARY-8      52 if r[1]!=r[2] goto 17
R[2] =   t5[after](8)
R[1] =   s2[t1](8)
  17 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
R[1] =   s5[after](8)
   6 Ne               2   17    1 BINARY-8      52 if r[1]!=r[2] goto 17
R[2] =   t5[after](8)
R[1] =   s5[after](8)
   7 ReleaseReg       1    1    0               00 release r[1] mask 0
   8 Column           0    0    1               00 r[1]=sqlite_master.type
R[1] =   s5[table](8)
   9 Eq               3   17    1 BINARY-8      52 if r[1]==r[3] goto 17
R[3] =   t7[trigger](8)
R[1] =   s5[table](8)
  10 ReleaseReg       1    1    0               00 release r[1] mask 0
  11 Column           0    0    4               00 r[4]=sqlite_master.type
R[4] =   s5[table](8)
  12 Column           0    1    5               00 r[5]=sqlite_master.name
R[5] =   s5[after](8)
  13 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
R[6] =   s5[after](8)
  14 Column           0    3    7               00 r[7]=sqlite_master.rootpage
R[7] =  i:3
  15 Column           0    4    8               00 r[8]=sqlite_master.sql
R[8] =   s26[CREATE TABLE after(tx, x1](8)
  16 ResultRow        4    5    0               00 output=r[4..8]
R[4] =   s5[table](8)
R[5] =   s5[after](8)
R[6] =   s5[after](8)
R[7] =  i:3
R[8] =   s26[CREATE TABLE after(tx, x1](8)
  17 Next             0    5    0               01 
  18 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;BEGIN;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
SQL: [ SELECT randomblob(1000), randomblob(1000) FROM t1;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    2 0             01 usesStmtJournal=0
  10 Integer       1000    3    0               00 r[3]=1000
R[3] =  i:1000
  11 Integer       1000    4    0               00 r[4]=1000
R[4] =  i:1000
  12 Goto             0    1    0               00 
   1 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN t1       00 
   3 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [
;
;SELECT count(*) FROM t1;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    0    2 0             01 usesStmtJournal=0
   8 Goto             0    1    0               00 
   1 OpenRead         1    2    0 1             00 root=2 iDb=0
   2 Count            1    1    0               00 r[1]=count()
R[1] =  i:0
   3 Close            1    0    0               00 
   4 Copy             1    2    0               00 r[2]=r[1]
R[2] =  i:0
   5 ResultRow        2    1    0               00 output=r[2]
R[2] =  i:0
   6 Halt             0    0    0               00 
SQL: [;PRAGMA max_page_count = 2 
;]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 Transaction      0    0    2 0             01 usesStmtJournal=0
   5 Goto             0    1    0               00 
   1 MaxPgcnt         0    3    2               00 
R[3] =  i:3
   2 ResultRow        3    1    0               00 output=r[3]
R[3] =  i:3
   3 Halt             0    0    0               00 
SQL: [;
;PRAGMA auto_vacuum = incremental
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [;;
;BEGIN;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
ABORT-due-to-error (rc=1): ;;
;BEGIN;
SQL: [;UPDATE t1 SET a=a*2;]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    1    2 0             01 usesStmtJournal=0
  20 Integer          2    8    0               00 r[8]=2
R[8] =  i:2
  21 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
R[1] =  NULL
   2 Noop             1    0    1               00 
   3 OpenWrite        0    2    0 4             00 root=2 iDb=0; t1
   4 Explain          4    0    0 SCAN t1       00 
   5 Rewind           0   18    0               00 
  18 Halt             0    0    0               00 
SQL: [;
;BEGIN;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
ABORT-due-to-error (rc=1): ;
;BEGIN;
SQL: [;
;BEGIN;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
ABORT-due-to-error (rc=1): ;
;BEGIN;
SQL: [COMMIT 
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    0    0               00 
SQL: [;COMMIT
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    0    0               00 
ABORT-due-to-error (rc=1): ;COMMIT
;
SQL: [VACUUM
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Vacuum           0    0    0               00 
SQL: [ATTACH '' AS vacuum_db]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 String8          0    1    0               00 r[1]=''
R[1] =   t0[](8)
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
R[2] =   t9[vacuum_db](8)
   3 Null             0    3    0               00 r[3]=NULL
R[3] =  NULL
   4 Function         0    1    4 sqlite_attach(3) 00 r[4]=func(r[1..3])
R[1] =   t0[](8)
R[2] =   t9[vacuum_db](8)
R[3] =  NULL
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      2    0    0 0             00 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          3    0    0 SCAN vacuum_db.sqlite_master 00 
   4 Rewind           0   12    0               00 
  12 Halt             0    0    0               00 
R[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [BEGIN]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
SQL: [SELECT sql FROM "main".sqlite_schema WHERE type='table'AND name<>'sqlite_sequence' AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    2 0             01 usesStmtJournal=0
  20 String8          0    2    0 table         00 r[2]='table'
R[2] =   t5[table](8)
  21 String8          0    3    0 sqlite_sequence 00 r[3]='sqlite_sequence'
R[3] =   t15[sqlite_sequence](8)
  22 Integer          0    4    0               00 r[4]=0
R[4] =  i:0
  23 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          2    0    0 SCAN main.sqlite_schema 00 
   3 Rewind           0   18    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
R[1] =   s5[table](8)
   5 Ne               2   17    1 BINARY-8      52 if r[1]!=r[2] goto 17
R[2] =   t5[table](8)
R[1] =   s5[table](8)
   6 ReleaseReg       1    1    0               00 release r[1] mask 0
   7 Column           0    1    1               00 r[1]=sqlite_master.name
R[1] =   s2[t1](8)
   8 Eq               3   17    1 BINARY-8      52 if r[1]==r[3] goto 17
R[3] =   t15[sqlite_sequence](8)
R[1] =   s2[t1](8)
   9 ReleaseReg       1    1    0               00 release r[1] mask 0
  10 Column           0    3    1               00 r[1]=sqlite_master.rootpage
R[1] =  i:2
  11 NotNull          1   13    0               00 if r[1]!=NULL goto 13
R[1] =  i:2
  13 Le               4   17    1               50 if r[1]<=r[4] goto 17
R[4] =  i:0
R[1] =  i:2
  14 ReleaseReg       1    1    0               00 release r[1] mask 0
  15 Column           0    4    5               00 r[5]=sqlite_master.sql
R[5] =   s51[CREATE TABLE t1(a INT, b ](8)
  16 ResultRow        5    1    0               00 output=r[5]
R[5] =   s51[CREATE TABLE t1(a INT, b ](8)
SQL: [CREATE TABLE t1(a INT, b TEXT, after BLOB, tx REAL)]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      2    1    0 0             01 usesStmtJournal=1
  31 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
R[3] =  i:0
   2 If               3    5    0               00 
R[3] =  i:0
   3 SetCookie        2    2    4               00 
   4 SetCookie        2    5    1               00 
   5 CreateBtree      2    2    1               00 r[2]=root iDb=2 flags=1
R[2] =  i:3
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
R[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
R[3] =  tx[060000000000|......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
R[3] =  tx[060000000000|......]
R[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
R[4] =  NULL
  13 Noop             2    0    4               00 
  14 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  15 Explain         15    0    0 SEARCH vacuum_db.sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  16 ReleaseReg      11    1    0               00 release r[11] mask 0
  17 SeekRowid        1   19    1               00 intkey=r[1]
R[1] =  i:1
  18 Rowid            1    5    0               00 r[5]=rowid
R[5] =  i:1
  19 IsNull           5   27    0               00 if r[5]==NULL goto 27
R[5] =  i:1
  20 String8          0    6    0 table         00 r[6]='table'
R[6] =   t5[table](8)
  21 String8          0    7    0 t1            00 r[7]='t1'
R[7] =   t2[t1](8)
  22 String8          0    8    0 t1            00 r[8]='t1'
R[8] =   t2[t1](8)
  23 SCopy            2    9    0               00 r[9]=r[2]
R[9] =  i:3 <== R[2]
  24 String8          0   10    0 CREATE TABLE t1(a INT, b TEXT, after BLOB, tx REAL) 00 r[10]='CREATE TABLE t1(a INT, b TEXT, after BLOB, tx REAL)'
R[10] =   t51[CREATE TABLE t1(a INT, b ](8)
  25 MakeRecord       6    5    4 BBBDB         00 r[4]=mkrec(r[6..10])
R[6] =   t5[table](8)
R[7] =   t2[t1](8)
R[8] =   t2[t1](8)
R[9] =  i:3 <== R[2]
R[10] =   t51[CREATE TABLE t1(a INT, b ](8)
R[4] =  sx[0617111101737461626C657431743103435245415445205441|.....stablet1t1.CREATE TA]
  26 Insert           1    4    5               00 intkey=r[5] data=r[4]
R[4] =  sx[0617111101737461626C657431743103435245415445205441|.....stablet1t1.CREATE TA]
R[5] =  i:1
  27 SetCookie        2    1    1               00 
  28 ParseSchema      2    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      2    0    1 0             00 usesStmtJournal=0
  20 String8          0    2    0 t1            00 r[2]='t1'
R[2] =   t2[t1](8)
  21 String8          0    3    0 trigger       00 r[3]='trigger'
R[3] =   t7[trigger](8)
  22 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          3    0    0 SCAN vacuum_db.sqlite_master 00 
   4 Rewind           0   18    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
R[1] =   s2[t1](8)
   6 Ne               2   17    1 BINARY-8      52 if r[1]!=r[2] goto 17
R[2] =   t2[t1](8)
R[1] =   s2[t1](8)
   7 ReleaseReg       1    1    0               00 release r[1] mask 0
   8 Column           0    0    1               00 r[1]=sqlite_master.type
R[1] =   s5[table](8)
   9 Eq               3   17    1 BINARY-8      52 if r[1]==r[3] goto 17
R[3] =   t7[trigger](8)
R[1] =   s5[table](8)
  10 ReleaseReg       1    1    0               00 release r[1] mask 0
  11 Column           0    0    4               00 r[4]=sqlite_master.type
R[4] =   s5[table](8)
  12 Column           0    1    5               00 r[5]=sqlite_master.name
R[5] =   s2[t1](8)
  13 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
R[6] =   s2[t1](8)
  14 Column           0    3    7               00 r[7]=sqlite_master.rootpage
R[7] =  i:3
  15 Column           0    4    8               00 r[8]=sqlite_master.sql
R[8] =   s51[CREATE TABLE t1(a INT, b ](8)
  16 ResultRow        4    5    0               00 output=r[4..8]
R[4] =   s5[table](8)
R[5] =   s2[t1](8)
R[6] =   s2[t1](8)
R[7] =  i:3
R[8] =   s51[CREATE TABLE t1(a INT, b ](8)
  17 Next             0    5    0               01 
  18 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
  17 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
R[1] =   s5[table](8)
   5 Ne               2   17    1 BINARY-8      52 if r[1]!=r[2] goto 17
R[2] =   t5[table](8)
R[1] =   s5[table](8)
   6 ReleaseReg       1    1    0               00 release r[1] mask 0
   7 Column           0    1    1               00 r[1]=sqlite_master.name
R[1] =   s5[after](8)
   8 Eq               3   17    1 BINARY-8      52 if r[1]==r[3] goto 17
R[3] =   t15[sqlite_sequence](8)
R[1] =   s5[after](8)
   9 ReleaseReg       1    1    0               00 release r[1] mask 0
  10 Column           0    3    1               00 r[1]=sqlite_master.rootpage
R[1] =  i:3
  11 NotNull          1   13    0               00 if r[1]!=NULL goto 13
R[1] =  i:3
  13 Le               4   17    1               50 if r[1]<=r[4] goto 17
R[4] =  i:0
R[1] =  i:3
  14 ReleaseReg       1    1    0               00 release r[1] mask 0
  15 Column           0    4    5               00 r[5]=sqlite_master.sql
R[5] =   s26[CREATE TABLE after(tx, x1](8)
  16 ResultRow        5    1    0               00 output=r[5]
R[5] =   s26[CREATE TABLE after(tx, x1](8)
SQL: [CREATE TABLE after(tx, x1)]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      2    1    1 0             01 usesStmtJournal=1
  31 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
R[3] =  i:4
   2 If               3    5    0               00 
R[3] =  i:4
   5 CreateBtree      2    2    1               00 r[2]=root iDb=2 flags=1
R[2] =  i:4
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
R[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
R[3] =  tx[060000000000|......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
R[3] =  tx[060000000000|......]
R[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
R[4] =  NULL
  13 Noop             2    0    4               00 
  14 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  15 Explain         15    0    0 SEARCH vacuum_db.sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  16 ReleaseReg      11    1    0               00 release r[11] mask 0
  17 SeekRowid        1   19    1               00 intkey=r[1]
R[1] =  i:2
  18 Rowid            1    5    0               00 r[5]=rowid
R[5] =  i:2
  19 IsNull           5   27    0               00 if r[5]==NULL goto 27
R[5] =  i:2
  20 String8          0    6    0 table         00 r[6]='table'
R[6] =   t5[table](8)
  21 String8          0    7    0 after         00 r[7]='after'
R[7] =   t5[after](8)
  22 String8          0    8    0 after         00 r[8]='after'
R[8] =   t5[after](8)
  23 SCopy            2    9    0               00 r[9]=r[2]
R[9] =  i:4 <== R[2]
  24 String8          0   10    0 CREATE TABLE after(tx, x1) 00 r[10]='CREATE TABLE after(tx, x1)'
R[10] =   t26[CREATE TABLE after(tx, x1](8)
  25 MakeRecord       6    5    4 BBBDB         00 r[4]=mkrec(r[6..10])
R[6] =   t5[table](8)
R[7] =   t5[after](8)
R[8] =   t5[after](8)
R[9] =  i:4 <== R[2]
R[10] =   t26[CREATE TABLE after(tx, x1](8)
R[4] =  sx[0617171701417461626C656166746572616674657204435245|.....Atableafterafter.CRE]
  26 Insert           1    4    5               00 intkey=r[5] data=r[4]
R[4] =  sx[0617171701417461626C656166746572616674657204435245|.....Atableafterafter.CRE]
R[5] =  i:2
  27 SetCookie        2    1    2               00 
  28 ParseSchema      2    0    0 tbl_name='after' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      2    0    2 0             00 usesStmtJournal=0
  20 String8          0    2    0 after         00 r[2]='after'
R[2] =   t5[after](8)
  21 String8          0    3    0 trigger       00 r[3]='trigger'
R[3] =   t7[trigger](8)
  22 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          3    0    0 SCAN vacuum_db.sqlite_master 00 
   4 Rewind           0   18    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
R[1] =   s2[t1](8)
   6 Ne               2   17    1 BINARY-8      52 if r[1]!=r[2] goto 17
R[2] =   t5[after](8)
R[1] =   s2[t1](8)
  17 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
R[1] =   s5[after](8)
   6 Ne               2   17    1 BINARY-8      52 if r[1]!=r[2] goto 17
R[2] =   t5[after](8)
R[1] =   s5[after](8)
   7 ReleaseReg       1    1    0               00 release r[1] mask 0
   8 Column           0    0    1               00 r[1]=sqlite_master.type
R[1] =   s5[table](8)
   9 Eq               3   17    1 BINARY-8      52 if r[1]==r[3] goto 17
R[3] =   t7[trigger](8)
R[1] =   s5[table](8)
  10 ReleaseReg       1    1    0               00 release r[1] mask 0
  11 Column           0    0    4               00 r[4]=sqlite_master.type
R[4] =   s5[table](8)
  12 Column           0    1    5               00 r[5]=sqlite_master.name
R[5] =   s5[after](8)
  13 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
R[6] =   s5[after](8)
  14 Column           0    3    7               00 r[7]=sqlite_master.rootpage
R[7] =  i:4
  15 Column           0    4    8               00 r[8]=sqlite_master.sql
R[8] =   s26[CREATE TABLE after(tx, x1](8)
  16 ResultRow        4    5    0               00 output=r[4..8]
R[4] =   s5[table](8)
R[5] =   s5[after](8)
R[6] =   s5[after](8)
R[7] =  i:4
R[8] =   s26[CREATE TABLE after(tx, x1](8)
  17 Next             0    5    0               01 
  18 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
  17 Next             0    4    0               01 
  18 Halt             0    0    0               00 
SQL: [SELECT sql FROM "main".sqlite_schema WHERE type='index']
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 0             01 usesStmtJournal=0
  12 String8          0    2    0 index         00 r[2]='index'
R[2] =   t5[index](8)
  13 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          2    0    0 SCAN main.sqlite_schema 00 
   3 Rewind           0   10    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
R[1] =   s5[table](8)
   5 Ne               2    9    1 BINARY-8      52 if r[1]!=r[2] goto 9
R[2] =   t5[index](8)
R[1] =   s5[table](8)
   9 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
R[1] =   s5[table](8)
   5 Ne               2    9    1 BINARY-8      52 if r[1]!=r[2] goto 9
R[2] =   t5[index](8)
R[1] =   s5[table](8)
   9 Next             0    4    0               01 
  10 Halt             0    0    0               00 
SQL: [SELECT'INSERT INTO vacuum_db.'||quote(name)||' SELECT*FROM"main".'||quote(name)FROM vacuum_db.sqlite_schema WHERE type='table'AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      2    0    2 0             01 usesStmtJournal=0
  29 String8          0    2    0 table         00 r[2]='table'
R[2] =   t5[table](8)
  30 Integer          0    3    0               00 r[3]=0
R[3] =  i:0
  31 String8          0    6    0 INSERT INTO vacuum_db. 00 r[6]='INSERT INTO vacuum_db.'
R[6] =   t22[INSERT INTO vacuum_db.](8)
  32 String8          0    9    0  SELECT*FROM"main". 00 r[9]=' SELECT*FROM"main".'
R[9] =   t19[ SELECT*FROM"main".](8)
  33 Goto             0    1    0               00 
   1 OpenRead         0    1    2 4             00 root=1 iDb=2; sqlite_master
   2 Explain          2    0    0 SCAN vacuum_db.sqlite_schema 00 
   3 Rewind           0   27    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
R[1] =   s5[table](8)
   5 Ne               2   26    1 BINARY-8      52 if r[1]!=r[2] goto 26
R[2] =   t5[table](8)
R[1] =   s5[table](8)
   6 ReleaseReg       1    1    0               00 release r[1] mask 0
   7 Column           0    3    1               00 r[1]=sqlite_master.rootpage
R[1] =  i:3
   8 NotNull          1   10    0               00 if r[1]!=NULL goto 10
R[1] =  i:3
  10 Le               3   26    1               50 if r[1]<=r[3] goto 26
R[3] =  i:0
R[1] =  i:3
  11 ReleaseReg       1    1    0               00 release r[1] mask 0
  12 Column           0    1    8               00 r[8]=sqlite_master.name
R[8] =   s2[t1](8)
  13 Function         0    8    7 quote(1)      00 r[7]=func(r[8])
R[8] =   s2[t1](8)
R[7] =   z4['t1'](8)
  14 ReleaseReg       8    1    0               00 release r[8] mask 0
  15 Concat           7    6    5               00 r[5]=r[6]+r[7]
R[7] =   z4['t1'](8)
R[6] =   t22[INSERT INTO vacuum_db.](8)
R[5] =   s26[INSERT INTO vacuum_db.'t1](8)
  16 ReleaseReg       7    1    0               00 release r[7] mask 0
  17 Concat           9    5    1               00 r[1]=r[5]+r[9]
R[9] =   t19[ SELECT*FROM"main".](8)
R[5] =   s26[INSERT INTO vacuum_db.'t1](8)
R[1] =   s45[INSERT INTO vacuum_db.'t1](8)
  18 ReleaseReg       5    1    0               00 release r[5] mask 0
  19 Column           0    1    7               00 r[7]=sqlite_master.name
R[7] =   s2[t1](8)
  20 Function         0    7    5 quote(1)      00 r[5]=func(r[7])
R[7] =   s2[t1](8)
R[5] =   z4['t1'](8)
  21 ReleaseReg       7    1    0               00 release r[7] mask 0
  22 Concat           5    1    4               00 r[4]=r[1]+r[5]
R[5] =   z4['t1'](8)
R[1] =   s45[INSERT INTO vacuum_db.'t1](8)
R[4] =   s49[INSERT INTO vacuum_db.'t1](8)
  23 ReleaseReg       1    1    0               00 release r[1] mask 0
  24 ReleaseReg       5    1    0               00 release r[5] mask 0
  25 ResultRow        4    1    0               00 output=r[4]
R[4] =   s49[INSERT INTO vacuum_db.'t1](8)
SQL: [INSERT INTO vacuum_db.'t1' SELECT*FROM"main".'t1']
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 0             01 usesStmtJournal=0
  16 Transaction      2    1    2 0             01 usesStmtJournal=0
  17 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
R[1] =  NULL
   2 OpenWrite        1    3    2 4             00 root=3 iDb=2; t1
   3 OpenRead         0    2    0 4             00 root=2 iDb=0; t1
   4 Rewind           0   12    0               00 
  12 ReleaseReg       2    1    0               00 release r[2] mask 0
  13 ReleaseReg       1    1    0               00 release r[1] mask 0
  14 Halt             0    0    0               00 
  26 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
R[1] =   s5[table](8)
   5 Ne               2   26    1 BINARY-8      52 if r[1]!=r[2] goto 26
R[2] =   t5[table](8)
R[1] =   s5[table](8)
   6 ReleaseReg       1    1    0               00 release r[1] mask 0
   7 Column           0    3    1               00 r[1]=sqlite_master.rootpage
R[1] =  i:4
   8 NotNull          1   10    0               00 if r[1]!=NULL goto 10
R[1] =  i:4
  10 Le               3   26    1               50 if r[1]<=r[3] goto 26
R[3] =  i:0
R[1] =  i:4
  11 ReleaseReg       1    1    0               00 release r[1] mask 0
  12 Column           0    1    8               00 r[8]=sqlite_master.name
R[8] =   s5[after](8)
  13 Function         0    8    7 quote(1)      00 r[7]=func(r[8])
R[8] =   s5[after](8)
R[7] =   z7['after'](8)
  14 ReleaseReg       8    1    0               00 release r[8] mask 0
  15 Concat           7    6    5               00 r[5]=r[6]+r[7]
R[7] =   z7['after'](8)
R[6] =   t22[INSERT INTO vacuum_db.](8)
R[5] =   s29[INSERT INTO vacuum_db.'af](8)
  16 ReleaseReg       7    1    0               00 release r[7] mask 0
  17 Concat           9    5    1               00 r[1]=r[5]+r[9]
R[9] =   t19[ SELECT*FROM"main".](8)
R[5] =   s29[INSERT INTO vacuum_db.'af](8)
R[1] =   s48[INSERT INTO vacuum_db.'af](8)
  18 ReleaseReg       5    1    0               00 release r[5] mask 0
  19 Column           0    1    7               00 r[7]=sqlite_master.name
R[7] =   s5[after](8)
  20 Function         0    7    5 quote(1)      00 r[5]=func(r[7])
R[7] =   s5[after](8)
R[5] =   z7['after'](8)
  21 ReleaseReg       7    1    0               00 release r[7] mask 0
  22 Concat           5    1    4               00 r[4]=r[1]+r[5]
R[5] =   z7['after'](8)
R[1] =   s48[INSERT INTO vacuum_db.'af](8)
R[4] =   s55[INSERT INTO vacuum_db.'af](8)
  23 ReleaseReg       1    1    0               00 release r[1] mask 0
  24 ReleaseReg       5    1    0               00 release r[5] mask 0
  25 ResultRow        4    1    0               00 output=r[4]
R[4] =   s55[INSERT INTO vacuum_db.'af](8)
SQL: [INSERT INTO vacuum_db.'after' SELECT*FROM"main".'after']
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 0             01 usesStmtJournal=0
  16 Transaction      2    1    2 0             01 usesStmtJournal=0
  17 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
R[1] =  NULL
   2 OpenWrite        1    4    2 2             00 root=4 iDb=2; after
   3 OpenRead         0    3    0 2             00 root=3 iDb=0; after
   4 Rewind           0   12    0               00 
  12 ReleaseReg       2    1    0               00 release r[2] mask 0
  13 ReleaseReg       1    1    0               00 release r[1] mask 0
  14 Halt             0    0    0               00 
  26 Next             0    4    0               01 
  27 Halt             0    0    0               00 
SQL: [INSERT INTO vacuum_db.sqlite_schema SELECT*FROM "main".sqlite_schema WHERE type IN('view','trigger') OR(type='table'AND rootpage=0)]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      0    0    2 0             01 usesStmtJournal=0
  33 Transaction      2    1    2 0             01 usesStmtJournal=0
  34 String8          0    9    0 view          00 r[9]='view'
R[9] =   t4[view](8)
  35 String8          0   10    0 trigger       00 r[10]='trigger'
R[10] =   t7[trigger](8)
  36 String8          0   12    0 table         00 r[12]='table'
R[12] =   t5[table](8)
  37 Integer          0   13    0               00 r[13]=0
R[13] =  i:0
  38 Goto             0    1    0               00 
   1 InitCoroutine    7   24    2               00 
  24 OpenWrite        2    1    2 5             00 root=1 iDb=2; sqlite_master
  25 ReleaseReg       2    5    0               00 release r[2..6] mask 0
  26 Yield            7   31    0               00 
R[7] =  i:1
R[7] =  i:26
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN main.sqlite_schema 00 
   4 Rewind           0   23    0               00 
   5 Noop             0    0    0               00 begin IN expr
   6 Column           0    0    8               00 r[8]=sqlite_master.type
R[8] =   s5[table](8)
   7 Eq               8    9    9 BINARY-8      42 if r[9]==r[8] goto 9
R[8] =   s5[table](8)
R[9] =   t4[view](8)
   8 Ne               8   10   10 BINARY-8      52 if r[10]!=r[8] goto 10; end IN expr
R[8] =   s5[table](8)
R[10] =   t7[trigger](8)
  10 Column           0    0   11               00 r[11]=sqlite_master.type
R[11] =   s5[table](8)
  11 Ne              12   22   11 BINARY-8      52 if r[11]!=r[12] goto 22
R[12] =   t5[table](8)
R[11] =   s5[table](8)
  12 ReleaseReg      11    1    0               00 release r[11] mask 0
  13 Column           0    3   11               00 r[11]=sqlite_master.rootpage
R[11] =  i:2
  14 Ne              13   22   11 BINARY-8      54 if r[11]!=r[13] goto 22
R[13] =  i:0
R[11] =  i:2
  22 Next             0    5    0               01 
   5 Noop             0    0    0               00 begin IN expr
   6 Column           0    0    8               00 r[8]=sqlite_master.type
R[8] =   s5[table](8)
   7 Eq               8    9    9 BINARY-8      42 if r[9]==r[8] goto 9
R[8] =   s5[table](8)
R[9] =   t4[view](8)
   8 Ne               8   10   10 BINARY-8      52 if r[10]!=r[8] goto 10; end IN expr
R[8] =   s5[table](8)
R[10] =   t7[trigger](8)
  10 Column           0    0   11               00 r[11]=sqlite_master.type
R[11] =   s5[table](8)
  11 Ne              12   22   11 BINARY-8      52 if r[11]!=r[12] goto 22
R[12] =   t5[table](8)
R[11] =   s5[table](8)
  12 ReleaseReg      11    1    0               00 release r[11] mask 0
  13 Column           0    3   11               00 r[11]=sqlite_master.rootpage
R[11] =  i:3
  14 Ne              13   22   11 BINARY-8      54 if r[11]!=r[13] goto 22
R[13] =  i:0
R[11] =  i:3
  22 Next             0    5    0               01 
  23 EndCoroutine     7    0    0               00 
R[7] =  i:26
  31 Halt             0    0    0               00 
ABORT-due-to-error (rc=13): VACUUM
;
SQL: [;;COMMIT;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    0    0               00 
ABORT-due-to-error (rc=1): ;;COMMIT;
SQL: [;;COMMIT;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    0    0               00 
ABORT-due-to-error (rc=1): ;;COMMIT;
SQL: [;PRAGMA reversePunordered_selects = ON;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [ATTACH '' AS vacuum_db
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 String8          0    1    0               00 r[1]=''
R[1] =   t0[](8)
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
R[2] =   t9[vacuum_db](8)
   3 Null             0    3    0               00 r[3]=NULL
R[3] =  NULL
   4 Function         0    1    4 sqlite_attach(3) 00 r[4]=func(r[1..3])
R[1] =   t0[](8)
R[2] =   t9[vacuum_db](8)
R[3] =  NULL
ABORT-due-to-error (rc=11): ATTACH '' AS vacuum_db
;
SQL: [;;PRAGMA writable_schema = 1;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;COMMIT
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    0    0               00 
ABORT-due-to-error (rc=1): ;COMMIT
;
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    3 1             00 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN main.sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
R[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
R[2] =   s2[t1](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
R[3] =   s2[t1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
R[4] =  i:3
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
R[5] =   s51[CREATE TABLE t1(a INT, b ](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
R[1] =   s5[table](8)
R[2] =   s2[t1](8)
R[3] =   s2[t1](8)
R[4] =  i:3
R[5] =   s51[CREATE TABLE t1(a INT, b ](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
R[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
R[2] =   s5[after](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
R[3] =   s5[after](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
R[4] =  i:4
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
R[5] =   s26[CREATE TABLE after(tx, x1](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
R[1] =   s5[table](8)
R[2] =   s5[after](8)
R[3] =   s5[after](8)
R[4] =  i:4
R[5] =   s26[CREATE TABLE after(tx, x1](8)
  11 Next             0    5    0               01 
  12 Halt             0    0    0               00 
SQL: [ ;
        VALUES(1,'a23456789_b23456789_c23456789_d23456789_e23456789_');]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer          1    1    0               00 r[1]=1
R[1] =  i:1
   3 String8          0    2    0 a23456789_b23456789_c23456789_d23456789_e23456789_ 00 r[2]='a23456789_b23456789_c23456789_d23456789_e23456789_'
R[2] =   t50[a23456789_b23456789_c2345](8)
   4 ResultRow        1    2    0               00 output=r[1..2]
R[1] =  i:1
R[2] =   t50[a23456789_b23456789_c2345](8)
   5 Halt             0    0    0               00 
SQL: [;PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0   52   49               00 Start at 52
  52 Transaction      0    0    3 1             01 usesStmtJournal=0
  53 Transaction      1    0    0 1             01 usesStmtJournal=0
  54 Goto             0    1    0               00 
   1 Integer         99    1    0               00 r[1]=99
R[1] =  i:99
   2 IntegrityCk      2    3    1 [4,3,1]       00 
   3 IsNull           2    9    0               00 if r[2]==NULL goto 9
R[2] =   z45[Page 4: unable to get the](8)
   4 String8          0    3    0 *** in database main ***
 00 r[3]='*** in database main ***
'
R[3] =   t25[*** in database main ***.](8)
   5 Concat           2    3    3               00 r[3]=r[3]+r[2]
R[2] =   z45[Page 4: unable to get the](8)
R[3] =   t25[*** in database main ***.](8)
R[3] =   s70[*** in database main ***.](8)
   6 ResultRow        3    1    0               00 output=r[3]
R[3] =   s70[*** in database main ***.](8)
   7 IfPos            1    9    1               00 if r[1]>0 then r[1]-=1, goto 9
R[1] =  i:99
   9 OpenRead         1    4    0 2             00 root=4 iDb=0; after
  10 Integer          0    7    0               00 r[7]=0
R[7] =  i:0
  11 Rewind           1   15    0               00 
ABORT-due-to-error (rc=13): ;PRAGMA integrity_check;
SQL: [;;DROP TABLE IF EXISTS t3y;]
VDBE Trace:
   0 Init             0    3    0               00 Start at 3
   3 Transaction      0    0    3 1             01 usesStmtJournal=0
   4 Transaction      1    0    0 1             01 usesStmtJournal=0
   5 Goto             0    1    0               00 
   1 JournalMode      0    1   -1               00 
R[1] =   t3[off](8)
   2 Halt             0    0    0               00 
SQL: [;;
;DELETE FROM t1;]
VDBE Trace:
   0 Init             0    3    0               00 Start at 3
   3 Transaction      0    1    3 1             01 usesStmtJournal=0
   4 Goto             0    1    0               00 
   1 Clear            3    0   -1 t1            00 
   2 Halt             0    0    0               00 
SQL: [;
;pragma auto_vacuum = 'incremental';]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Transaction      0    1    0               00 
   2 ReadCookie       0    1    4               00 
R[1] =  i:4
   3 If               1    5    0               00 
R[1] =  i:4
   5 SetCookie        0    7    1               00 
   6 Halt             0    0    0               00 
SQL: [PRAGMA max_page_count = 2 
;]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 Transaction      0    0    3 1             01 usesStmtJournal=0
   5 Goto             0    1    0               00 
   1 MaxPgcnt         0    3    2               00 
R[3] =  i:4
   2 ResultRow        3    1    0               00 output=r[3]
R[3] =  i:4
   3 Halt             0    0    0               00 
SQL: [;;
;PRAGMA auto_vacuum = 1;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Transaction      0    1    0               00 
   2 ReadCookie       0    1    4               00 
R[1] =  i:4
   3 If               1    5    0               00 
R[1] =  i:4
   5 SetCookie        0    7    0               00 
   6 Halt             0    0    0               00 
SQL: [;
;BEGIN;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
SQL: [;
;BEGIN;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
ABORT-due-to-error (rc=1): ;
;BEGIN;
SQL: [;
;PRAGMA auto_vacuum = 2;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Transaction      0    1    0               00 
   2 ReadCookie       0    1    4               00 
R[1] =  i:4
   3 If               1    5    0               00 
R[1] =  i:4
   5 SetCookie        0    7    1               00 
   6 Halt             0    0    0               00 
SQL: [COMMIT 
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    0    0               00 
SQL: [;;
;DELETE FROM t1;]
VDBE Trace:
   0 Init             0    3    0               00 Start at 3
   3 Transaction      0    1    3 1             01 usesStmtJournal=0
   4 Goto             0    1    0               00 
   1 Clear            3    0   -1 t1            00 
   2 Halt             0    0    0               00 
SQL: [;DROP TABLE t1;]
VDBE Trace:
   0 Init             0   45    0               00 Start at 45
  45 Transaction      0    1    3 1             01 usesStmtJournal=1
  46 String8          0    3    0 t1            00 r[3]='t1'
R[3] =   t2[t1](8)
  47 String8          0    4    0 trigger       00 r[4]='trigger'
R[4] =   t7[trigger](8)
  48 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
R[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN main.sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
R[2] =   s2[t1](8)
   6 Ne               3   13    2 BINARY-8      52 if r[2]!=r[3] goto 13
R[3] =   t2[t1](8)
R[2] =   s2[t1](8)
   7 ReleaseReg       2    1    0               00 release r[2] mask 0
   8 Column           0    0    2               00 r[2]=sqlite_master.type
R[2] =   s5[table](8)
   9 Eq               4   13    2 BINARY-8      52 if r[2]==r[4] goto 13
R[4] =   t7[trigger](8)
R[2] =   s5[table](8)
  10 ReleaseReg       2    1    0               00 release r[2] mask 0
  11 Rowid            0    5    0               00 r[5]=rowid
R[5] =  i:1
  12 Delete           0    0    0               02 
  13 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
R[2] =   s5[after](8)
   6 Ne               3   13    2 BINARY-8      52 if r[2]!=r[3] goto 13
R[3] =   t2[t1](8)
R[2] =   s5[after](8)
  13 Next             0    5    0               01 
  14 Destroy          3    2    0               00 
ABORT-due-to-error (rc=11): ;DROP TABLE t1;
SQL: [;PRAGMA incremental_vacuum;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    1    3 1             01 usesStmtJournal=0
   8 Goto             0    1    0               00 
   1 Integer       2147483647    1    0               00 r[1]=2147483647
R[1] =  i:2147483647
   2 IncrVacuum       0    6    0               00 
   6 Halt             0    0    0               00 
SQL: [;COMMIT;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    0    0               00 
ABORT-due-to-error (rc=1): ;COMMIT;
SQL: [;
;BEGIN;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
SQL: [;-- this is a no-op.
    COMMIT;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    0    0               00 
SQL: [;
;BEGIN;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
SQL: [;
;BEGIN;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
ABORT-due-to-error (rc=1): ;
;BEGIN;
SQL: [;;COMMIT;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    0    0               00 
SQL: [;;PRAGMA incremental_vacuum;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    1    3 1             01 usesStmtJournal=0
   8 Goto             0    1    0               00 
   1 Integer       2147483647    1    0               00 r[1]=2147483647
R[1] =  i:2147483647
   2 IncrVacuum       0    6    0               00 
   6 Halt             0    0    0               00 
SQL: [;BEGIN;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
SQL: [DROP TABLE IF EXISTS tbl1;]
VDBE Trace:
   0 Init             0    3    0               00 Start at 3
   3 Transaction      0    0    3 1             01 usesStmtJournal=0
   4 Transaction      1    0    0 1             01 usesStmtJournal=0
   5 Goto             0    1    0               00 
   1 JournalMode      0    1   -1               00 
R[1] =   t3[off](8)
   2 Halt             0    0    0               00 
SQL: [;BEGIN;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
ABORT-due-to-error (rc=1): ;BEGIN;
SQL: [;COMMIT;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    0    0               00 
SQL: [PRAGMA incremental_vacuum
;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    1    3 1             01 usesStmtJournal=0
   8 Goto             0    1    0               00 
   1 Integer       2147483647    1    0               00 r[1]=2147483647
R[1] =  i:2147483647
   2 IncrVacuum       0    6    0               00 
   6 Halt             0    0    0               00 
SQL: [;;COMMIT;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    0    0               00 
ABORT-due-to-error (rc=1): ;;COMMIT;
SQL: [;BEGIN;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
SQL: [;COMMIT;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    0    0               00 
SQL: [ VALUES(1.2);]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Real             0    1    0 1.2           00 r[1]=1.2
R[1] =  r:1.2
   3 ResultRow        1    1    0               00 output=r[1]
R[1] =  r:1.2
   4 Halt             0    0    0               00 
SQL: [
;INSERT INTO t1(b) VALUES(x'313233');]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    1    3 1             01 usesStmtJournal=0
   8 Null             0    2    0               00 r[2]=NULL
R[2] =  NULL
   9 Null             0    4    0               00 r[4]=NULL
R[4] =  NULL
  10 Null             0    5    0               00 r[5]=NULL
R[5] =  NULL
  11 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 4             00 root=3 iDb=0; t1
   2 Blob             3    3    0 123           00 r[3]=123 (len=3)
R[3] =  tx[313233|123]
   3 NewRowid         0    1    0               00 r[1]=rowid
ABORT-due-to-error (rc=11): 
;INSERT INTO t1(b) VALUES(x'313233');
SQL: [
;DELETE FROM t1;]
VDBE Trace:
   0 Init             0    3    0               00 Start at 3
   3 Transaction      0    1    3 1             01 usesStmtJournal=0
   4 Goto             0    1    0               00 
   1 Clear            3    0   -1 t1            00 
ABORT-due-to-error (rc=11): 
;DELETE FROM t1;
SQL: [ VALUES('xyz'),(4),(5.5),(NULL);]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN 4 CONSTANT ROWS 00 
   2 String8          0    1    0 xyz           00 r[1]='xyz'
R[1] =   t3[xyz](8)
   3 ResultRow        1    1    0               00 output=r[1]
R[1] =   t3[xyz](8)
   4 Integer          4    1    0               00 r[1]=4
R[1] =  i:4
   5 ResultRow        1    1    0               00 output=r[1]
R[1] =  i:4
   6 Real             0    1    0 5.5           00 r[1]=5.5
R[1] =  r:5.5
   7 ResultRow        1    1    0               00 output=r[1]
R[1] =  r:5.5
   8 Null             0    1    0               00 r[1]=NULL
R[1] =  NULL
   9 ResultRow        1    1    0               00 output=r[1]
R[1] =  NULL
  10 Halt             0    0    0               00 
SQL: [;;BEGIN;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
SQL: [;COMMIT;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    0    0               00 
SQL: [DROP TABLE IF EXISTS tbl1;]
VDBE Trace:
   0 Init             0    3    0               00 Start at 3
   3 Transaction      0    0    3 1             01 usesStmtJournal=0
   4 Transaction      1    0    0 1             01 usesStmtJournal=0
   5 Goto             0    1    0               00 
   1 JournalMode      0    1   -1               00 
R[1] =   t3[off](8)
   2 Halt             0    0    0               00 
SQL: [;;BEGIN;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
SQL: [;COMMIT;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    0    0               00 
SQL: [;DROP TABLE after;]
VDBE Trace:
   0 Init             0   45    0               00 Start at 45
  45 Transaction      0    1    3 1             01 usesStmtJournal=1
  46 String8          0    3    0 after         00 r[3]='after'
R[3] =   t5[after](8)
  47 String8          0    4    0 trigger       00 r[4]='trigger'
R[4] =   t7[trigger](8)
  48 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
R[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN main.sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
R[2] =   s5[after](8)
   6 Ne               3   13    2 BINARY-8      52 if r[2]!=r[3] goto 13
R[3] =   t5[after](8)
R[2] =   s5[after](8)
   7 ReleaseReg       2    1    0               00 release r[2] mask 0
   8 Column           0    0    2               00 r[2]=sqlite_master.type
R[2] =   s5[table](8)
   9 Eq               4   13    2 BINARY-8      52 if r[2]==r[4] goto 13
R[4] =   t7[trigger](8)
R[2] =   s5[table](8)
  10 ReleaseReg       2    1    0               00 release r[2] mask 0
  11 Rowid            0    5    0               00 r[5]=rowid
R[5] =  i:2
  12 Delete           0    0    0               02 
  13 Next             0    5    0               01 
  14 Destroy          4    2    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f500f6b8859 in __GI_abort () at abort.c:79
#2  0x00007f500f6b8729 in __assert_fail_base (fmt=0x7f500f84e588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x55a393 "(*ppPage)->pgno==pgno", file=0x549ad6 "sqlite3.c", line=67791, function=<optimized out>)
    at assert.c:92
#3  0x00007f500f6c9fd6 in __GI___assert_fail (assertion=0x55a393 "(*ppPage)->pgno==pgno", file=0x549ad6 "sqlite3.c", line=67791, function=0x55a2ee "int getAndInitPage(BtShared *, Pgno, MemPage **, BtCursor *, int)")
    at assert.c:101
#4  0x0000000000482781 in getAndInitPage (pBt=0x21b37d0, pgno=4, ppPage=0x7ffce67ae188, pCur=0x0, bReadOnly=0) at sqlite3.c:67791
#5  0x00000000004833ee in clearDatabasePage (pBt=0x21b37d0, pgno=4, freePageFlag=0, pnChange=0x0) at sqlite3.c:75149
#6  0x00000000004756c9 in sqlite3BtreeClearTable (p=0x21b3770, iTable=4, pnChange=0x0) at sqlite3.c:75214
#7  0x00000000004931a9 in btreeDropTable (p=0x21b3770, iTable=4, piMoved=0x7ffce67ae75c) at sqlite3.c:75261
#8  0x000000000047bf0c in sqlite3BtreeDropTable (p=0x21b3770, iTable=4, piMoved=0x7ffce67ae75c) at sqlite3.c:75337
#9  0x000000000046b308 in sqlite3VdbeExec (p=0x21bef60) at sqlite3.c:93063
#10 0x0000000000416374 in sqlite3Step (p=0x21bef60) at sqlite3.c:85145
#11 0x000000000040e242 in sqlite3_step (pStmt=0x21bef60) at sqlite3.c:85202
#12 0x000000000040556f in main (argc=1, argv=0x7ffce67af198) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 26782] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
