GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000210,sig:06,src:022309+012462,time:7231447,execs:1190927,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;CREATE TRIGGER t2i1 AFTER INSERT ON ex BEGIN
    UPDATE ex 
       SET (i1,i2)=((WITH cte1(a) AS (SELECT 1 FROM y) SELECT y.i1 FROM y, cte1),1);
  END;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    1    4 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   3 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   4 String8          0    3    0 t2i1          00 r[3]='t2i1'
REG[3] =   t4[t2i1](8)
   5 String8          0    4    0 ex            00 r[4]='ex'
REG[4] =   t2[ex](8)
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 String8          0    6    0 CREATE TRIGGER t2i1 AFTER INSERT ON ex BEGIN
    UPDATE ex 
       SET (i1,i2)=((WITH cte1(a) AS (SELECT 1 FROM y) SELECT y.i1 FROM y, cte1),1);
  END 00 r[6]='CREATE TRIGGER t2i1 AFTER INSERT ON ex BEGIN
    UPDATE ex 
       SET (i1,i2)=((WITH cte1(a)
REG[6] =   t150[CREATE TRIGGER t2i1 AFTER](8)
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
REG[2] =   t7[trigger](8)
REG[3] =   t4[t2i1](8)
REG[4] =   t2[ex](8)
REG[5] =  i:0
REG[6] =   t150[CREATE TRIGGER t2i1 AFTER](8)
REG[7] =  sx170[071B1511088239747269676765727432693165784352454154|......9triggert2i1exCREAT]
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
REG[7] =  sx170[071B1511088239747269676765727432693165784352454154|......9triggert2i1exCREAT]
REG[1] =  i:5
  10 SetCookie        0    1    5               00 
  11 ParseSchema      0    0    0 type='trigger' AND name='t2i1' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    5 0             00 usesStmtJournal=0
  18 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  19 String8          0    3    0 t2i1          00 r[3]='t2i1'
REG[3] =   t4[t2i1](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  15 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  15 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  15 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s4[view](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[trigger](8)
REG[1] =   s4[view](8)
  15 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t2i1](8)
   8 Ne               3   15    1 (BINARY)      52 if r[1]!=r[3] goto 15
REG[3] =   t4[t2i1](8)
REG[1] =   s4[t2i1](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s7[trigger](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s4[t2i1](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s2[ex](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:0
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s150[CREATE TRIGGER t2i1 AFTER](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s7[trigger](8)
REG[5] =   s4[t2i1](8)
REG[6] =   s2[ex](8)
REG[7] =  i:0
REG[8] =   s150[CREATE TRIGGER t2i1 AFTER](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;INSERT INTO ex(i1, i1) VALUES(100,200), (300,400), (200,300);]
VDBE Trace:
   0 Init             0   29    0               00 Start at 29
  29 Transaction      0    1    5 0             01 usesStmtJournal=0
  30 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  31 Goto             0    1    0               00 
   1 InitCoroutine    4   13    2               00 
  13 OpenEphemeral    0    2    0               00 nColumn=2
  14 Yield            4   19    0               00 
REG[4] =  i:1
REG[4] =  i:14
   2 Explain          2    0    0 SCAN 3 CONSTANT ROWS 00 
   3 Integer        100    5    0               00 r[5]=100
REG[5] =  i:100
   4 Integer        200    6    0               00 r[6]=200
REG[6] =  i:200
   5 Yield            4    0    0               00 
REG[4] =  i:14
REG[4] =  i:5
  15 MakeRecord       5    2    9               00 r[9]=mkrec(r[5..6])
REG[9] =  sx6[0301026400C8|...d..]
  16 NewRowid         0   10    0               00 r[10]=rowid
REG[10] =  i:1
  17 Insert           0    9   10               00 intkey=r[10] data=r[9]
REG[9] =  sx6[0301026400C8|...d..]
REG[10] =  i:1
  18 Goto             0   14    0               00 
  14 Yield            4   19    0               00 
REG[4] =  i:5
REG[4] =  i:14
   6 Integer        300    5    0               00 r[5]=300
REG[5] =  i:300
   7 Integer        400    6    0               00 r[6]=400
REG[6] =  i:400
   8 Yield            4    0    0               00 
REG[4] =  i:14
REG[4] =  i:8
  15 MakeRecord       5    2    9               00 r[9]=mkrec(r[5..6])
REG[9] =  sx7[030202012C0190|....,..]
  16 NewRowid         0   10    0               00 r[10]=rowid
REG[10] =  i:2
  17 Insert           0    9   10               00 intkey=r[10] data=r[9]
REG[9] =  sx7[030202012C0190|....,..]
REG[10] =  i:2
  18 Goto             0   14    0               00 
  14 Yield            4   19    0               00 
REG[4] =  i:8
REG[4] =  i:14
   9 Integer        200    5    0               00 r[5]=200
REG[5] =  i:200
  10 Integer        300    6    0               00 r[6]=300
REG[6] =  i:300
  11 Yield            4    0    0               00 
REG[4] =  i:14
REG[4] =  i:11
  15 MakeRecord       5    2    9               00 r[9]=mkrec(r[5..6])
REG[9] =  sx7[03020200C8012C|......,]
  16 NewRowid         0   10    0               00 r[10]=rowid
REG[10] =  i:3
  17 Insert           0    9   10               00 intkey=r[10] data=r[9]
REG[9] =  sx7[03020200C8012C|......,]
REG[10] =  i:3
  18 Goto             0   14    0               00 
  14 Yield            4   19    0               00 
REG[4] =  i:11
REG[4] =  i:14
  12 EndCoroutine     4    0    0               00 
REG[4] =  i:14
  19 OpenWrite        1    3    0 2             00 root=3 iDb=0; ex
  20 Rewind           0   27    0               00 
  21 NewRowid         1    1    0               00 r[1]=rowid
REG[1] =  i:1
  22 Column           0    0    2               00 r[2]=
REG[2] =  i:100
  23 MakeRecord       2    2   11               00 r[11]=mkrec(r[2..3])
REG[11] =  sx4[03010064|...d]
  24 Insert           1   11    1 ex            39 intkey=r[1] data=r[11]
REG[11] =  sx4[03010064|...d]
REG[1] =  i:1
  25 Program         -2   26   12 program       01 Call: t2i1.default
   0 Init             0    1    0 -- TRIGGER t2i1 00 Start at 1; Start: t2i1.default (AFTER INSERT ON ex)
   1 Trace         2147483647    1    0 -- UPDATE ex         SET (i1,i2)=((WITH cte1(a) AS (SELECT 1 FROM y) SELECT y.i1 FROM y, cte1),1) 00 
   2 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   3 OpenWrite        0    3    0 2             00 root=3 iDb=0; ex
   4 Explain          4    0    0 SCAN TABLE ex 00 
   5 Rewind           0   29    0               00 
   6 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   7 IsNull           2   29    0               00 if r[2]==NULL goto 29
REG[2] =  i:1
   8 Integer         23    5    0               00 r[5]=23; return address
REG[5] =  i:23
   9 Once             0   23    0               00 
  10 Explain         10    0    0 SCALAR SUBQUERY 2 00 
  11 Null             0    6    6               00 r[6..6]=NULL; Init subquery result
REG[6] =  NULL
  12 Integer          1    7    0               00 r[7]=1; LIMIT counter
REG[7] =  i:1
  13 OpenRead         3    3    0 2             00 root=3 iDb=0; ex
  14 OpenRead         5    3    0 2             00 root=3 iDb=0; ex
  15 Explain         15   10    0 SCAN TABLE ex 00 
  16 Rewind           3   23    0               00 
  17 Explain         17   10    0 SCAN TABLE ex 00 
  18 Rewind           5   23    0               00 
  19 Column           3    0    6               00 r[6]=ex.i1
REG[6] =  i:100
  20 DecrJumpZero     7   23    0               00 if (--r[7])==0 goto 23
REG[7] =  i:1
  23 Return           5    0    0               00 
REG[5] =  i:23
  24 SCopy            6    3    0               00 r[3]=r[6]
REG[3] =  i:100
  25 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  26 MakeRecord       3    2    1               00 r[1]=mkrec(r[3..4])
REG[1] =  sx4[03010964|...d]
  27 Insert           0    1    2 ex            07 intkey=r[2] data=r[1]
REG[1] =  sx4[03010964|...d]
REG[2] =  i:1
  28 Next             0    6    0               01 
  29 ResetCount       0    0    0               00 
  30 Halt             0    0    0               00 End: t2i1.default
  26 Next             0   21    0               00 
  21 NewRowid         1    1    0               00 r[1]=rowid
REG[1] =  i:2
  22 Column           0    0    2               00 r[2]=
REG[2] =  i:300
  23 MakeRecord       2    2   11               00 r[11]=mkrec(r[2..3])
REG[11] =  sx5[030200012C|....,]
  24 Insert           1   11    1 ex            39 intkey=r[1] data=r[11]
REG[11] =  sx5[030200012C|....,]
REG[1] =  i:2
  25 Program         -2   26   12 program       01 Call: t2i1.default
   0 Init             1    1    0 -- TRIGGER t2i1 00 Start at 1; Start: t2i1.default (AFTER INSERT ON ex)
   1 Trace         2147483647    1    0 -- UPDATE ex         SET (i1,i2)=((WITH cte1(a) AS (SELECT 1 FROM y) SELECT y.i1 FROM y, cte1),1) 00 
   2 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   3 OpenWrite        0    3    0 2             00 root=3 iDb=0; ex
   4 Explain          4    0    0 SCAN TABLE ex 00 
   5 Rewind           0   29    0               00 
   6 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   7 IsNull           2   29    0               00 if r[2]==NULL goto 29
REG[2] =  i:1
   8 Integer         23    5    0               00 r[5]=23; return address
REG[5] =  i:23
   9 Once             1   23    0               00 
  10 Explain         10    0    0 SCALAR SUBQUERY 2 00 
  11 Null             0    6    6               00 r[6..6]=NULL; Init subquery result
REG[6] =  NULL
  12 Integer          1    7    0               00 r[7]=1; LIMIT counter
REG[7] =  i:1
  13 OpenRead         3    3    0 2             00 root=3 iDb=0; ex
  14 OpenRead         5    3    0 2             00 root=3 iDb=0; ex
  15 Explain         15   10    0 SCAN TABLE ex 00 
  16 Rewind           3   23    0               00 
  17 Explain         17   10    0 SCAN TABLE ex 00 
  18 Rewind           5   23    0               00 
  19 Column           3    0    6               00 r[6]=ex.i1
REG[6] =  i:100
  20 DecrJumpZero     7   23    0               00 if (--r[7])==0 goto 23
REG[7] =  i:1
  23 Return           5    0    0               00 
REG[5] =  i:23
  24 SCopy            6    3    0               00 r[3]=r[6]
REG[3] =  i:100
  25 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  26 MakeRecord       3    2    1               00 r[1]=mkrec(r[3..4])
REG[1] =  sx4[03010964|...d]
  27 Insert           0    1    2 ex            07 intkey=r[2] data=r[1]
REG[1] =  sx4[03010964|...d]
REG[2] =  i:1
  28 Next             0    6    0               01 
   6 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
   7 IsNull           2   29    0               00 if r[2]==NULL goto 29
REG[2] =  i:2
   8 Integer         23    5    0               00 r[5]=23; return address
REG[5] =  i:23
   9 Once             2   23    0               00 
  23 Return           5    0    0               00 
REG[5] =  i:23
  24 SCopy            6    3    0               00 r[3]=r[6]
REG[3] =  i:100
  25 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  26 MakeRecord       3    2    1               00 r[1]=mkrec(r[3..4])
REG[1] =  sx4[03010964|...d]
  27 Insert           0    1    2 ex            07 intkey=r[2] data=r[1]
REG[1] =  sx4[03010964|...d]
REG[2] =  i:2
  28 Next             0    6    0               01 
  29 ResetCount       0    0    0               00 
  30 Halt             0    0    0               00 End: t2i1.default
  26 Next             0   21    0               00 
  21 NewRowid         1    1    0               00 r[1]=rowid
REG[1] =  i:3
  22 Column           0    0    2               00 r[2]=
REG[2] =  i:200
  23 MakeRecord       2    2   11               00 r[11]=mkrec(r[2..3])
REG[11] =  sx5[03020000C8|.....]
  24 Insert           1   11    1 ex            39 intkey=r[1] data=r[11]
REG[11] =  sx5[03020000C8|.....]
REG[1] =  i:3
  25 Program         -2   26   12 program       01 Call: t2i1.default
   0 Init             2    1    0 -- TRIGGER t2i1 00 Start at 1; Start: t2i1.default (AFTER INSERT ON ex)
   1 Trace         2147483647    1    0 -- UPDATE ex         SET (i1,i2)=((WITH cte1(a) AS (SELECT 1 FROM y) SELECT y.i1 FROM y, cte1),1) 00 
   2 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   3 OpenWrite        0    3    0 2             00 root=3 iDb=0; ex
   4 Explain          4    0    0 SCAN TABLE ex 00 
   5 Rewind           0   29    0               00 
   6 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   7 IsNull           2   29    0               00 if r[2]==NULL goto 29
REG[2] =  i:1
   8 Integer         23    5    0               00 r[5]=23; return address
REG[5] =  i:23
   9 Once             2   23    0               00 
  10 Explain         10    0    0 SCALAR SUBQUERY 2 00 
  11 Null             0    6    6               00 r[6..6]=NULL; Init subquery result
REG[6] =  NULL
  12 Integer          1    7    0               00 r[7]=1; LIMIT counter
REG[7] =  i:1
  13 OpenRead         3    3    0 2             00 root=3 iDb=0; ex
  14 OpenRead         5    3    0 2             00 root=3 iDb=0; ex
  15 Explain         15   10    0 SCAN TABLE ex 00 
  16 Rewind           3   23    0               00 
  17 Explain         17   10    0 SCAN TABLE ex 00 
  18 Rewind           5   23    0               00 
  19 Column           3    0    6               00 r[6]=ex.i1
REG[6] =  i:100
  20 DecrJumpZero     7   23    0               00 if (--r[7])==0 goto 23
REG[7] =  i:1
  23 Return           5    0    0               00 
REG[5] =  i:23
  24 SCopy            6    3    0               00 r[3]=r[6]
REG[3] =  i:100
  25 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  26 MakeRecord       3    2    1               00 r[1]=mkrec(r[3..4])
REG[1] =  sx4[03010964|...d]
  27 Insert           0    1    2 ex            07 intkey=r[2] data=r[1]
REG[1] =  sx4[03010964|...d]
REG[2] =  i:1
  28 Next             0    6    0               01 
   6 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
   7 IsNull           2   29    0               00 if r[2]==NULL goto 29
REG[2] =  i:2
   8 Integer         23    5    0               00 r[5]=23; return address
REG[5] =  i:23
   9 Once             3   23    0               00 
  23 Return           5    0    0               00 
REG[5] =  i:23
  24 SCopy            6    3    0               00 r[3]=r[6]
REG[3] =  i:100
  25 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  26 MakeRecord       3    2    1               00 r[1]=mkrec(r[3..4])
REG[1] =  sx4[03010964|...d]
  27 Insert           0    1    2 ex            07 intkey=r[2] data=r[1]
REG[1] =  sx4[03010964|...d]
REG[2] =  i:2
  28 Next             0    6    0               01 
   6 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:3
   7 IsNull           2   29    0               00 if r[2]==NULL goto 29
REG[2] =  i:3
   8 Integer         23    5    0               00 r[5]=23; return address
REG[5] =  i:23
   9 Once             3   23    0               00 
  23 Return           5    0    0               00 
REG[5] =  i:23
  24 SCopy            6    3    0               00 r[3]=r[6]
REG[3] =  i:100
  25 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  26 MakeRecord       3    2    1               00 r[1]=mkrec(r[3..4])
REG[1] =  sx4[03010964|...d]
  27 Insert           0    1    2 ex            07 intkey=r[2] data=r[1]
REG[1] =  sx4[03010964|...d]
REG[2] =  i:3
  28 Next             0    6    0               01 
  29 ResetCount       0    0    0               00 
  30 Halt             0    0    0               00 End: t2i1.default
  26 Next             0   21    0               00 
  27 Close            0    0    0               00 
  28 Halt             0    0    0               00 
SQL: [;ALTER TABLE t2 RENAME TO t1i1;]
VDBE Trace:
   0 Init             0  140    0               00 Start at 140
 140 Transaction      0    1    5 0             01 usesStmtJournal=1
 141 Transaction      1    1    0 0             01 usesStmtJournal=1
 142 String8          0    9    0 index         00 r[9]='index'
REG[9] =   t5[index](8)
 143 String8          0   10    0 t2            00 r[10]='t2'
REG[10] =   t2[t2](8)
 144 String8          0   11    0 sqliteX_%     00 r[11]='sqliteX_%'
REG[11] =   t9[sqliteX_%](8)
 145 String8          0   13    0 X             00 r[13]='X'
REG[13] =   t1[X](8)
 146 String8          0   15    0 main          00 r[15]='main'
REG[15] =   t4[main](8)
 147 String8          0   19    0 t2            00 r[19]='t2'
REG[19] =   t2[t2](8)
 148 String8          0   20    0 t1i1          00 r[20]='t1i1'
REG[20] =   t4[t1i1](8)
 149 Integer          0   21    0               00 r[21]=0
REG[21] =  i:0
 150 String8          0   29    0 table         00 r[29]='table'
REG[29] =   t5[table](8)
 151 String8          0   30    0 trigger       00 r[30]='trigger'
REG[30] =   t7[trigger](8)
 152 String8          0   32    0 sqliteX_autoindex% 00 r[32]='sqliteX_autoindex%'
REG[32] =   t18[sqliteX_autoindex%](8)
 153 String8          0   34    0 X             00 r[34]='X'
REG[34] =   t1[X](8)
 154 String8          0   47    0 sqlite_autoindex_ 00 r[47]='sqlite_autoindex_'
REG[47] =   t17[sqlite_autoindex_](8)
 155 String8          0   83    0 t1i1          00 r[83]='t1i1'
REG[83] =   t4[t1i1](8)
 156 Concat          83   47   35               00 r[35]=r[47]+r[83]
REG[83] =   t4[t1i1](8)
REG[47] =   t17[sqlite_autoindex_](8)
REG[35] =   s21[sqlite_autoindex_t1i1](8)
 157 Integer          2   83    0               00 r[83]=2
REG[83] =  i:2
 158 Integer         18   47    0               00 r[47]=18
REG[47] =  i:18
 159 Add             47   83   37               00 r[37]=r[47]+r[83]
REG[47] =  i:18
REG[83] =  i:2
REG[37] =  i:20
 160 String8          0   45    0 view          00 r[45]='view'
REG[45] =   t4[view](8)
 161 String8          0   48    0 main          00 r[48]='main'
REG[48] =   t4[main](8)
 162 Integer          1   52    0               00 r[52]=1
REG[52] =  i:1
 163 String8          0   53    0 main          00 r[53]='main'
REG[53] =   t4[main](8)
 164 String8          0   57    0 t2            00 r[57]='t2'
REG[57] =   t2[t2](8)
 165 String8          0   58    0 t1i1          00 r[58]='t1i1'
REG[58] =   t4[t1i1](8)
 166 Integer          1   59    0               00 r[59]=1
REG[59] =  i:1
 167 String8          0   60    0 sqliteX_%     00 r[60]='sqliteX_%'
REG[60] =   t9[sqliteX_%](8)
 168 String8          0   62    0 X             00 r[62]='X'
REG[62] =   t1[X](8)
 169 String8          0   63    0 create virtual% 00 r[63]='create virtual%'
REG[63] =   t15[create virtual%](8)
 170 String8          0   65    0 main          00 r[65]='main'
REG[65] =   t4[main](8)
 171 Integer          0   69    0               00 r[69]=0
REG[69] =  i:0
 172 Null             0   70    0               00 r[70]=NULL
REG[70] =  NULL
 173 String8          0   72    0 sqliteX_%     00 r[72]='sqliteX_%'
REG[72] =   t9[sqliteX_%](8)
 174 String8          0   74    0 X             00 r[74]='X'
REG[74] =   t1[X](8)
 175 String8          0   75    0 create virtual% 00 r[75]='create virtual%'
REG[75] =   t15[create virtual%](8)
 176 String8          0   77    0 main          00 r[77]='main'
REG[77] =   t4[main](8)
 177 Integer          1   81    0               00 r[81]=1
REG[81] =  i:1
 178 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    1    0 3             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   15    0               00 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Ne               9    9    8 (BINARY)      42 if r[8]!=r[9] goto 9
REG[9] =   t5[index](8)
REG[8] =   s5[table](8)
   9 Column           0    1   12               00 r[12]=sqlite_master.name
REG[12] =   s2[t1](8)
  10 Function0        5   11    8 like(3)       03 r[8]=func(r[11..13])
REG[11] =   t9[sqliteX_%](8)
REG[12] =   s2[t1](8)
REG[13] =   t1[X](8)
REG[8] =  i:0
  11 If               8   14    1               00 
REG[8] =  i:0
  12 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
  13 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
  14 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Ne               9    9    8 (BINARY)      42 if r[8]!=r[9] goto 9
REG[9] =   t5[index](8)
REG[8] =   s5[table](8)
   9 Column           0    1   12               00 r[12]=sqlite_master.name
REG[12] =   s2[ex](8)
  10 Function         5   11    8 like(3)       03 r[8]=func(r[11..13])
REG[11] =   t9[sqliteX_%](8)
REG[12] =   s2[ex](8)
REG[13] =   t1[X](8)
REG[8] =  i:0
  11 If               8   14    1               00 
REG[8] =  i:0
  12 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
  13 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:2
  14 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Ne               9    9    8 (BINARY)      42 if r[8]!=r[9] goto 9
REG[9] =   t5[index](8)
REG[8] =   s5[table](8)
   9 Column           0    1   12               00 r[12]=sqlite_master.name
REG[12] =   s2[t2](8)
  10 Function         5   11    8 like(3)       03 r[8]=func(r[11..13])
REG[11] =   t9[sqliteX_%](8)
REG[12] =   s2[t2](8)
REG[13] =   t1[X](8)
REG[8] =  i:0
  11 If               8   14    1               00 
REG[8] =  i:0
  12 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:3
  13 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:3
  14 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s4[view](8)
   6 Ne               9    9    8 (BINARY)      42 if r[8]!=r[9] goto 9
REG[9] =   t5[index](8)
REG[8] =   s4[view](8)
   9 Column           0    1   12               00 r[12]=sqlite_master.name
REG[12] =   s1[y](8)
  10 Function         5   11    8 like(3)       03 r[8]=func(r[11..13])
REG[11] =   t9[sqliteX_%](8)
REG[12] =   s1[y](8)
REG[13] =   t1[X](8)
REG[8] =  i:0
  11 If               8   14    1               00 
REG[8] =  i:0
  12 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:4
  13 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:4
  14 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s7[trigger](8)
   6 Ne               9    9    8 (BINARY)      42 if r[8]!=r[9] goto 9
REG[9] =   t5[index](8)
REG[8] =   s7[trigger](8)
   9 Column           0    1   12               00 r[12]=sqlite_master.name
REG[12] =   s4[t2i1](8)
  10 Function         5   11    8 like(3)       03 r[8]=func(r[11..13])
REG[11] =   t9[sqliteX_%](8)
REG[12] =   s4[t2i1](8)
REG[13] =   t1[X](8)
REG[8] =  i:0
  11 If               8   14    1               00 
REG[8] =  i:0
  12 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:5
  13 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:5
  14 Next             0    5    0               01 
  15 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
  16 RowSetRead       1   29    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  17 NotExists        0   16    2               00 intkey=r[2]
REG[2] =  i:1
  18 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
  19 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t1](8)
  20 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
REG[5] =   s2[t1](8)
  21 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  22 Column           0    0   16               00 r[16]=sqlite_master.type
REG[16] =   s5[table](8)
  23 Column           0    1   17               00 r[17]=sqlite_master.name
REG[17] =   s2[t1](8)
  24 Column           0    4   18               00 r[18]=sqlite_master.sql
REG[18] =   s20[CREATE TABLE t1(a,b)](8)
  25 Function0      113   15    7 sqlite_rename_table(7) 07 r[7]=func(r[15..21])
REG[15] =   t4[main](8)
REG[16] =   s5[table](8)
REG[17] =   s2[t1](8)
REG[18] =   s20[CREATE TABLE t1(a,b)](8)
REG[19] =   t2[t2](8)
REG[20] =   t4[t1i1](8)
REG[21] =  i:0
REG[7] =   s20[CREATE TABLE t1(a,b)](8)
  26 MakeRecord       3    5   14 BBBDB         00 r[14]=mkrec(r[3..7])
REG[3] =   s5[table](8)
REG[4] =   s2[t1](8)
REG[5] =   s2[t1](8)
REG[6] =  i:2
REG[7] =   s20[CREATE TABLE t1(a,b)](8)
REG[14] =  sx36[0617111101357461626C657431743102435245415445205441|.....5tablet1t1.CREATE TA]
  27 Insert           0   14    2               00 intkey=r[2] data=r[14]
REG[14] =  sx36[0617111101357461626C657431743102435245415445205441|.....5tablet1t1.CREATE TA]
REG[2] =  i:1
  28 Goto             0   16    0               00 
  16 RowSetRead       1   29    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  17 NotExists        0   16    2               00 intkey=r[2]
REG[2] =  i:2
  18 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
  19 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[ex](8)
  20 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
REG[5] =   s2[ex](8)
  21 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  22 Column           0    0   16               00 r[16]=sqlite_master.type
REG[16] =   s5[table](8)
  23 Column           0    1   17               00 r[17]=sqlite_master.name
REG[17] =   s2[ex](8)
  24 Column           0    4   18               00 r[18]=sqlite_master.sql
REG[18] =   s22[CREATE TABLE ex(i1,i2)](8)
  25 Function       113   15    7 sqlite_rename_table(7) 07 r[7]=func(r[15..21])
REG[15] =   t4[main](8)
REG[16] =   s5[table](8)
REG[17] =   s2[ex](8)
REG[18] =   s22[CREATE TABLE ex(i1,i2)](8)
REG[19] =   t2[t2](8)
REG[20] =   t4[t1i1](8)
REG[21] =  i:0
REG[7] =   s22[CREATE TABLE ex(i1,i2)](8)
  26 MakeRecord       3    5   14 BBBDB         00 r[14]=mkrec(r[3..7])
REG[3] =   s5[table](8)
REG[4] =   s2[ex](8)
REG[5] =   s2[ex](8)
REG[6] =  i:3
REG[7] =   s22[CREATE TABLE ex(i1,i2)](8)
REG[14] =  sx38[0617111101397461626C656578657803435245415445205441|.....9tableexex.CREATE TA]
  27 Insert           0   14    2               00 intkey=r[2] data=r[14]
REG[14] =  sx38[0617111101397461626C656578657803435245415445205441|.....9tableexex.CREATE TA]
REG[2] =  i:2
  28 Goto             0   16    0               00 
  16 RowSetRead       1   29    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:3
  17 NotExists        0   16    2               00 intkey=r[2]
REG[2] =  i:3
  18 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
  19 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t2](8)
  20 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
REG[5] =   s2[t2](8)
  21 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  22 Column           0    0   16               00 r[16]=sqlite_master.type
REG[16] =   s5[table](8)
  23 Column           0    1   17               00 r[17]=sqlite_master.name
REG[17] =   s2[t2](8)
  24 Column           0    4   18               00 r[18]=sqlite_master.sql
REG[18] =   s22[CREATE TABLE t2(t3, x)](8)
  25 Function       113   15    7 sqlite_rename_table(7) 07 r[7]=func(r[15..21])
REG[15] =   t4[main](8)
REG[16] =   s5[table](8)
REG[17] =   s2[t2](8)
REG[18] =   s22[CREATE TABLE t2(t3, x)](8)
REG[19] =   t2[t2](8)
REG[20] =   t4[t1i1](8)
REG[21] =  i:0
REG[7] =   s26[CREATE TABLE "t1i1"(t3, x](8)
  26 MakeRecord       3    5   14 BBBDB         00 r[14]=mkrec(r[3..7])
REG[3] =   s5[table](8)
REG[4] =   s2[t2](8)
REG[5] =   s2[t2](8)
REG[6] =  i:4
REG[7] =   s26[CREATE TABLE "t1i1"(t3, x](8)
REG[14] =  sx42[0617111101417461626C657432743204435245415445205441|.....Atablet2t2.CREATE TA]
  27 Insert           0   14    2               00 intkey=r[2] data=r[14]
REG[14] =  sx42[0617111101417461626C657432743204435245415445205441|.....Atablet2t2.CREATE TA]
REG[2] =  i:3
  28 Goto             0   16    0               00 
  16 RowSetRead       1   29    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:4
  17 NotExists        0   16    2               00 intkey=r[2]
REG[2] =  i:4
  18 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s4[view](8)
  19 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[y](8)
  20 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
REG[5] =   s1[y](8)
  21 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:0
  22 Column           0    0   16               00 r[16]=sqlite_master.type
REG[16] =   s4[view](8)
  23 Column           0    1   17               00 r[17]=sqlite_master.name
REG[17] =   s1[y](8)
  24 Column           0    4   18               00 r[18]=sqlite_master.sql
REG[18] =   s33[CREATE VIEW y AS SELECT *](8)
  25 Function       113   15    7 sqlite_rename_table(7) 07 r[7]=func(r[15..21])
REG[15] =   t4[main](8)
REG[16] =   s4[view](8)
REG[17] =   s1[y](8)
REG[18] =   s33[CREATE VIEW y AS SELECT *](8)
REG[19] =   t2[t2](8)
REG[20] =   t4[t1i1](8)
REG[21] =  i:0
REG[7] =   s33[CREATE VIEW y AS SELECT *](8)
  26 MakeRecord       3    5   14 BBBDB         00 r[14]=mkrec(r[3..7])
REG[3] =   s4[view](8)
REG[4] =   s1[y](8)
REG[5] =   s1[y](8)
REG[6] =  i:0
REG[7] =   s33[CREATE VIEW y AS SELECT *](8)
REG[14] =  sx45[06150F0F084F76696577797943524541544520564945572079|.....OviewyyCREATE VIEW y]
  27 Insert           0   14    2               00 intkey=r[2] data=r[14]
REG[14] =  sx45[06150F0F084F76696577797943524541544520564945572079|.....OviewyyCREATE VIEW y]
REG[2] =  i:4
  28 Goto             0   16    0               00 
  16 RowSetRead       1   29    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:5
  17 NotExists        0   16    2               00 intkey=r[2]
REG[2] =  i:5
  18 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s7[trigger](8)
  19 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t2i1](8)
  20 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
REG[5] =   s2[ex](8)
  21 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:0
  22 Column           0    0   16               00 r[16]=sqlite_master.type
REG[16] =   s7[trigger](8)
  23 Column           0    1   17               00 r[17]=sqlite_master.name
REG[17] =   s4[t2i1](8)
  24 Column           0    4   18               00 r[18]=sqlite_master.sql
REG[18] =   s150[CREATE TRIGGER t2i1 AFTER](8)
  25 Function       113   15    7 sqlite_rename_table(7) 07 r[7]=func(r[15..21])

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f2e36b61859 in __GI_abort () at abort.c:79
#2  0x00007f2e36b61729 in __assert_fail_base (fmt=0x7f2e36cf7588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x217a67 "p->p!=pPtr", file=0x2291f4 "sqlite3.c", line=103850, function=<optimized out>) at assert.c:92
#3  0x00007f2e36b72fd6 in __GI___assert_fail (assertion=0x217a67 "p->p!=pPtr", file=0x2291f4 "sqlite3.c", line=103850, function=0x226da1 "void renameTokenCheckAll(Parse *, void *)") at assert.c:101
#4  0x0000000000320f78 in renameTokenCheckAll (pParse=0x7fff2e1e87d0, pPtr=0x20fa6b0) at sqlite3.c:103850
#5  0x0000000000306280 in sqlite3RenameTokenMap (pParse=0x7fff2e1e87d0, pPtr=0x20fa6b0, pToken=0x7fff2e1e8070) at sqlite3.c:103875
#6  0x0000000000305043 in sqlite3ExprListSetName (pParse=0x7fff2e1e87d0, pList=0x20f95a0, pName=0x7fff2e1e8070, dequote=0) at sqlite3.c:99243
#7  0x000000000034166b in selectExpander (pWalker=0x7fff2e1e8310, p=0x20f9450) at sqlite3.c:130708
#8  0x00000000003203a6 in sqlite3WalkSelect (pWalker=0x7fff2e1e8310, p=0x20f9450) at sqlite3.c:95676
#9  0x00000000003404c3 in selectExpander (pWalker=0x7fff2e1e8310, p=0x2125d10) at sqlite3.c:130554
#10 0x00000000003203a6 in sqlite3WalkSelect (pWalker=0x7fff2e1e8310, p=0x2125d10) at sqlite3.c:95676
#11 0x000000000033573a in sqlite3SelectExpand (pParse=0x7fff2e1e87d0, pSelect=0x2125d10) at sqlite3.c:130806
#12 0x0000000000335550 in sqlite3SelectPrep (pParse=0x7fff2e1e87d0, p=0x2125d10, pOuterNC=0x7fff2e1e86f8) at sqlite3.c:130891
#13 0x0000000000337e46 in resolveSelectStep (pWalker=0x7fff2e1e85e0, p=0x2125d10) at sqlite3.c:97139
#14 0x00000000003203a6 in sqlite3WalkSelect (pWalker=0x7fff2e1e85e0, p=0x2125d10) at sqlite3.c:95676
#15 0x00000000003377e1 in resolveExprStep (pWalker=0x7fff2e1e85e0, pExpr=0x20f9170) at sqlite3.c:96660
#16 0x000000000031fe22 in walkExpr (pWalker=0x7fff2e1e85e0, pExpr=0x20f9170) at sqlite3.c:95554
#17 0x000000000031fdc8 in sqlite3WalkExpr (pWalker=0x7fff2e1e85e0, pExpr=0x20f9170) at sqlite3.c:95582
#18 0x0000000000339089 in sqlite3ResolveExprNames (pNC=0x7fff2e1e86f8, pExpr=0x20f9170) at sqlite3.c:97416
#19 0x00000000003391b5 in sqlite3ResolveExprListNames (pNC=0x7fff2e1e86f8, pList=0x2126460) at sqlite3.c:97441
#20 0x0000000000426b97 in renameResolveTrigger (pParse=0x7fff2e1e87d0, zDb=0x20e21a0 "main") at sqlite3.c:104332
#21 0x0000000000425a07 in renameTableFunc (context=0x20e0a30, NotUsed=7, argv=0x20e0a60) at sqlite3.c:104731
#22 0x00000000003e9e49 in sqlite3VdbeExec (p=0x20e8d70) at sqlite3.c:91482
#23 0x000000000041ba74 in sqlite3Step (p=0x20e8d70) at sqlite3.c:82300
#24 0x0000000000293d5d in sqlite3_step (pStmt=0x20e8d70) at sqlite3.c:82365
#25 0x0000000000258a39 in main (argc=1, argv=0x7fff2e1e9678) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 59013] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
