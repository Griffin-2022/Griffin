GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000199,sig:06,src:004986+008374,time:13426732,execs:1739414,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    0 0             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [PRAGMA auto_vacuum=2;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Transaction      0    1    0               00 
   2 ReadCookie       0    1    4               00 
REG[1] =  i:1
   3 If               1    5    0               00 
REG[1] =  i:1
   5 SetCookie        0    7    1               00 
   6 Halt             0    0    0               00 
SQL: [;
SELECT printf('%d,%d,%d',55,-11,3421);]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 String8          0    2    0 %d,%d,%d      00 r[2]='%d,%d,%d'
REG[2] =   t8[%d,%d,%d](8)
   5 Integer         55    3    0               00 r[3]=55
REG[3] =  i:55
   6 Integer        -11    4    0               00 r[4]=-11
REG[4] =  i:-11
   7 Integer       3421    5    0               00 r[5]=3421
REG[5] =  i:3421
   8 Goto             0    1    0               00 
   1 Function0       15    2    1 printf(-1)    04 r[1]=func(r[2..5])
REG[2] =   t8[%d,%d,%d](8)
REG[3] =  i:55
REG[4] =  i:-11
REG[5] =  i:3421
REG[1] =   s11[55,-11,3421](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s11[55,-11,3421](8)
   3 Halt             0    0    0               00 
SQL: [;
CREATE TABLE t1(x, y);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    0 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:1
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:1
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:1
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t1            00 r[7]='t1'
REG[7] =   t2[t1](8)
  21 String8          0    8    0 t1            00 r[8]='t1'
REG[8] =   t2[t1](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  23 String8          0   10    0 CREATE TABLE t1(x, y) 00 r[10]='CREATE TABLE t1(x, y)'
REG[10] =   t21[CREATE TABLE t1](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s37[0617111101377461626C657431743103.....7tablet1t1.](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s37[0617111101377461626C657431743103.....7tablet1t1.](8)
REG[5] =  i:1
  26 Close            1    0    0               00 
  27 SetCookie        0    1    1               00 
  28 ParseSchema      0    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    1 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s21[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:3
REG[7] =   s21[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;
DELETE FROM t1 WHERE x>6
  ;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    1    1 0             01 usesStmtJournal=0
  14 TableLock        0    3    1 t1            00 iDb=0 root=3 write=1
  15 Integer          6    3    0               00 r[3]=6
REG[3] =  i:6
  16 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    3    0 2             00 root=3 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0   11    0               00 
  11 Noop             0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [CREATE INDEX é1 ON t1(x,x)WHERE x in (10,12,20);]
VDBE Trace:
   0 Init             0   51    0               00 Start at 51
  51 Transaction      0    1    1 0             01 usesStmtJournal=0
  52 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  53 TableLock        0    3    1 t1            00 iDb=0 root=3 write=1
  54 Goto             0    1    0               00 
   1 Noop             0   50    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:4
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:2
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 é1            00 r[4]='é1'
REG[4] =   t2[.1](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:4
   9 String8          0    7    0 CREATE INDEX é1 ON t1(x,x)WHERE x in (10,12,20) 00 r[7]='CREATE INDEX é1 ON t1(x,x)WHERE x in (10,12,20)'
REG[7] =   t47[CREATE INDEX .1](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s63[06171111016B696E646578E931743104.....kindex.1t1.](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s63[06171111016B696E646578E931743104.....kindex.1t1.](8)
REG[2] =  i:2
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    2 k(3,,,)       00 
  14 OpenRead         1    3    0 2             00 root=3 iDb=0; t1
  15 Rewind           1   38    0               00 
  38 OpenWrite        2    1    0 k(3,,,)       11 root=1 iDb=0
  39 SorterSort       3   44    0               00 
  44 Close            1    0    0               00 
  45 Close            2    0    0               00 
  46 Close            3    0    0               00 
  47 SetCookie        0    1    2               00 
  48 ParseSchema      0    0    0 name='é1' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 é1            00 r[2]='é1'
REG[2] =   t2[.1](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[.1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[.1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[.1](8)
REG[1] =   s2[.1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s2[.1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s47[CREATE INDEX .1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[.1](8)
REG[6] =  i:4
REG[7] =   s47[CREATE INDEX .1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  49 Expire           0    0    0               00 
  50 Halt             0    0    0               00 
SQL: [;
VACUUM;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Vacuum           0    0    0               00 
SQL: [ATTACH '' AS vacuum_db;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0               00 r[1]=''
REG[1] =   t0[](8)
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
REG[2] =   t9[vacuum_db](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t0[](8)
REG[2] =   t9[vacuum_db](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      2    0    0 0             00 usesStmtJournal=0
  13 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [PRAGMA vacuum_db.synchronous=OFF]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [SELECT 'CREATE TABLE vacuum_db.' || substr(sql,14)   FROM sqlite_master WHERE type='table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    2 0             01 usesStmtJournal=0
  20 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  21 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  22 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  23 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  24 String8          0    8    0 CREATE TABLE vacuum_db. 00 r[8]='CREATE TABLE vacuum_db.'
REG[8] =   t23[CREATE TABLE va](8)
  25 Integer         14   10    0               00 r[10]=14
REG[10] =  i:14
  26 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   17    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t1](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[t1](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:3
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:3
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s21[CREATE TABLE t1](8)
  13 Function0        2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s21[CREATE TABLE t1](8)
REG[10] =  i:14
REG[5] =   s8[t1(x, y)](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s8[t1(x, y)](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s31[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s31[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.t1(x, y)]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      2    1    0 0             01 usesStmtJournal=0
  31 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        2    2    4               00 
   4 SetCookie        2    5    1               00 
   5 CreateTable      2    2    0               00 r[2]=root iDb=2
REG[2] =  i:3
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:1
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:1
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:1
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t1            00 r[7]='t1'
REG[7] =   t2[t1](8)
  21 String8          0    8    0 t1            00 r[8]='t1'
REG[8] =   t2[t1](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  23 String8          0   10    0 CREATE TABLE t1(x, y) 00 r[10]='CREATE TABLE t1(x, y)'
REG[10] =   t21[CREATE TABLE t1](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s37[0617111101377461626C657431743103.....7tablet1t1.](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s37[0617111101377461626C657431743103.....7tablet1t1.](8)
REG[5] =  i:1
  26 Close            1    0    0               00 
  27 SetCookie        2    1    1               00 
  28 ParseSchema      2    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    1 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s21[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:3
REG[7] =   s21[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  16 Next             0    4    0               01 
  17 Close            0    0    0               00 
  18 Halt             0    0    0               00 
SQL: [SELECT 'CREATE INDEX vacuum_db.' || substr(sql,14)  FROM sqlite_master WHERE sql LIKE 'CREATE INDEX %' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    2 0             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE INDEX % 00 r[2]='CREATE INDEX %'
REG[2] =   t14[CREATE INDEX %](8)
  17 String8          0    5    0 CREATE INDEX vacuum_db. 00 r[5]='CREATE INDEX vacuum_db.'
REG[5] =   t23[CREATE INDEX va](8)
  18 Integer         14    7    0               00 r[7]=14
REG[7] =  i:14
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s21[CREATE TABLE t1](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s21[CREATE TABLE t1](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s47[CREATE INDEX .1](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s47[CREATE INDEX .1](8)
REG[1] =  i:1
   6 IfNot            1   11    1               00 
REG[1] =  i:1
   7 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s47[CREATE INDEX .1](8)
   8 Function0        2    6    1 substr(2)     02 r[1]=func(r[6..7])
REG[6] =   s47[CREATE INDEX .1](8)
REG[7] =  i:14
REG[1] =   s34[.1 ON t1(x,x)WH](8)
   9 Concat           1    5    4               00 r[4]=r[5]+r[1]
REG[1] =   s34[.1 ON t1(x,x)WH](8)
REG[5] =   t23[CREATE INDEX va](8)
REG[4] =   s57[CREATE INDEX va](8)
  10 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s57[CREATE INDEX va](8)
SQL: [CREATE INDEX vacuum_db.é1 ON t1(x,x)WHERE x in (10,12,20)]
VDBE Trace:
   0 Init             0   51    0               00 Start at 51
  51 Transaction      2    1    1 0             01 usesStmtJournal=0
  52 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  53 TableLock        2    3    1 t1            00 iDb=2 root=3 write=1
  54 Goto             0    1    0               00 
   1 Noop             0   50    0               00 
   2 CreateIndex      2    1    0               00 r[1]=root iDb=2
REG[1] =  i:4
   3 OpenWrite        0    1    2 5             00 root=1 iDb=2; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:2
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 é1            00 r[4]='é1'
REG[4] =   t2[.1](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:4
   9 String8          0    7    0 CREATE INDEX é1 ON t1(x,x)WHERE x in (10,12,20) 00 r[7]='CREATE INDEX é1 ON t1(x,x)WHERE x in (10,12,20)'
REG[7] =   t47[CREATE INDEX .1](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s63[06171111016B696E646578E931743104.....kindex.1t1.](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s63[06171111016B696E646578E931743104.....kindex.1t1.](8)
REG[2] =  i:2
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    2 k(3,,,)       00 
  14 OpenRead         1    3    2 2             00 root=3 iDb=2; t1
  15 Rewind           1   38    0               00 
  38 OpenWrite        2    1    2 k(3,,,)       11 root=1 iDb=2
  39 SorterSort       3   44    0               00 
  44 Close            1    0    0               00 
  45 Close            2    0    0               00 
  46 Close            3    0    0               00 
  47 SetCookie        2    1    2               00 
  48 ParseSchema      2    0    0 name='é1' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    2 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 é1            00 r[2]='é1'
REG[2] =   t2[.1](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[.1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[.1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[.1](8)
REG[1] =   s2[.1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s2[.1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s47[CREATE INDEX .1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[.1](8)
REG[6] =  i:4
REG[7] =   s47[CREATE INDEX .1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  49 Expire           0    0    0               00 
  50 Halt             0    0    0               00 
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'CREATE UNIQUE INDEX vacuum_db.' || substr(sql,21)   FROM sqlite_master WHERE sql LIKE 'CREATE UNIQUE INDEX %']
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    2 0             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE UNIQUE INDEX % 00 r[2]='CREATE UNIQUE INDEX %'
REG[2] =   t21[CREATE UNIQUE I](8)
  17 String8          0    5    0 CREATE UNIQUE INDEX vacuum_db. 00 r[5]='CREATE UNIQUE INDEX vacuum_db.'
REG[5] =   t30[CREATE UNIQUE I](8)
  18 Integer         21    7    0               00 r[7]=21
REG[7] =  i:21
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s21[CREATE TABLE t1](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s21[CREATE TABLE t1](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s47[CREATE INDEX .1](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s47[CREATE INDEX .1](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';'FROM main.sqlite_master WHERE type = 'table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    0    2 0             01 usesStmtJournal=0
  25 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  26 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  27 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  28 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  29 String8          0   10    0 INSERT INTO vacuum_db. 00 r[10]='INSERT INTO vacuum_db.'
REG[10] =   t22[INSERT INTO vac](8)
  30 String8          0   13    0  SELECT * FROM main. 00 r[13]=' SELECT * FROM main.'
REG[13] =   t20[ SELECT * FROM ](8)
  31 String8          0   14    0 ;             00 r[14]=';'
REG[14] =   t1[;](8)
  32 Goto             0    1    0               00 
   1 OpenRead         0    1    0 4             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   22    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t1](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[t1](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:3
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:3
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[t1](8)
  13 Function0        0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s2[t1](8)
REG[11] =   z4['t1'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z4['t1'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s26[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s26[INSERT INTO vac](8)
REG[8] =   s46[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[t1](8)
  17 Function0        0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s2[t1](8)
REG[9] =   z4['t1'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z4['t1'](8)
REG[8] =   s46[INSERT INTO vac](8)
REG[5] =   s50[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s50[INSERT INTO vac](8)
REG[7] =   s51[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s51[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'t1' SELECT * FROM main.'t1';]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      0    0    2 0             01 usesStmtJournal=0
  21 Transaction      2    1    2 0             01 usesStmtJournal=0
  22 TableLock        2    3    1 t1            00 iDb=2 root=3 write=1
  23 TableLock        0    3    0 t1            00 iDb=0 root=3 write=0
  24 Goto             0    1    0               00 
   1 OpenWrite        1    3    2 2             00 root=3 iDb=2; t1
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; t1
   3 Rewind           0   19    0               00 
  19 Halt             0    0    0               00 
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  21 Next             0    4    0               01 
  22 Close            0    0    0               00 
  23 Halt             0    0    0               00 
SQL: [SELECT 'DELETE FROM vacuum_db.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name='sqlite_sequence' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      2    0    2 0             01 usesStmtJournal=0
  15 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  16 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  17 String8          0    5    0 DELETE FROM vacuum_db. 00 r[5]='DELETE FROM vacuum_db.'
REG[5] =   t22[DELETE FROM vac](8)
  18 String8          0    8    0 ;             00 r[8]=';'
REG[8] =   t1[;](8)
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  11 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[.1](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[.1](8)
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name=='sqlite_sequence';]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      2    0    2 0             01 usesStmtJournal=0
  19 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  20 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  21 String8          0    7    0 INSERT INTO vacuum_db. 00 r[7]='INSERT INTO vacuum_db.'
REG[7] =   t22[INSERT INTO vac](8)
  22 String8          0   10    0  SELECT * FROM main. 00 r[10]=' SELECT * FROM main.'
REG[10] =   t20[ SELECT * FROM ](8)
  23 String8          0   11    0 ;             00 r[11]=';'
REG[11] =   t1[;](8)
  24 Goto             0    1    0               00 
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   16    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  15 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[.1](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[.1](8)
  15 Next             0    4    0               01 
  16 Close            0    0    0               00 
  17 Halt             0    0    0               00 
SQL: [INSERT INTO vacuum_db.sqlite_master   SELECT type, name, tbl_name, rootpage, sql    FROM main.sqlite_master   WHERE type='view' OR type='trigger'      OR (type='table' AND rootpage=0)]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    0    2 0             01 usesStmtJournal=0
  29 Transaction      2    1    2 0             01 usesStmtJournal=0
  30 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  31 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  32 String8          0    9    0 view          00 r[9]='view'
REG[9] =   t4[view](8)
  33 String8          0   11    0 trigger       00 r[11]='trigger'
REG[11] =   t7[trigger](8)
  34 String8          0   12    0 table         00 r[12]='table'
REG[12] =   t5[table](8)
  35 Integer          0   13    0               00 r[13]=0
REG[13] =  i:0
  36 Goto             0    1    0               00 
   1 InitCoroutine    7   20    2               00 
  20 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  21 Yield            7   26    0               00 
REG[7] =  i:1
REG[7] =  i:21
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   18    0               00 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[table](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[table](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[table](8)
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
REG[10] =  i:3
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
REG[13] =  i:0
REG[10] =  i:3
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[index](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[index](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[index](8)
  17 Next             0    5    0               01 
  18 Close            0    0    0               00 
  19 EndCoroutine     7    0    0               00 
REG[7] =  i:21
  26 Noop             1    0    0               00 
  27 Halt             0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
SELECT printf('%*.*f',5,2,3.141592653);]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 String8          0    2    0 %*.*f         00 r[2]='%*.*f'
REG[2] =   t5[%*.*f](8)
   5 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
   6 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
   7 Real             0    5    0 3.141592653   00 r[5]=3.141592653
REG[5] =  r:3.14159
   8 Goto             0    1    0               00 
   1 Function0       15    2    1 printf(-1)    04 r[1]=func(r[2..5])
REG[2] =   t5[%*.*f](8)
REG[3] =  i:5
REG[4] =  i:2
REG[5] =  r:3.14159
REG[1] =   s5[ 3.14](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s5[ 3.14](8)
   3 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    3 1             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s21[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:3
REG[3] =   s21[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[.1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s47[CREATE INDEX .1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[.1](8)
REG[2] =  i:4
REG[3] =   s47[CREATE INDEX .1](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
INSERT INTO t1 VALUES(11, 12);]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      0    1    3 1             01 usesStmtJournal=0
  35 TableLock        0    3    1 t1            00 iDb=0 root=3 write=1
  36 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 2             00 root=3 iDb=0; t1
   2 OpenWrite        1    4    0 k(3,,,)       00 root=4 iDb=0; é1
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   4 Integer         11    2    0               00 r[2]=11
REG[2] =  i:11
   5 Integer         12    3    0               00 r[3]=12
REG[3] =  i:12
   6 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
   7 Noop             0    0    0               00 begin IN expr
   8 Once             0   19    0               00 
   9 OpenEphemeral    3    1    0 k(1,B)        00 nColumn=1
  10 Integer         10    5    0               00 r[5]=10
REG[5] =  i:10
  11 MakeRecord       5    1    6 A             00 r[6]=mkrec(r[5])
REG[6] =  s3[02010A...](8)
  12 IdxInsert        3    6    0               00 key=r[6]
REG[6] =  s3[02010A...](8)
  13 Integer         12    5    0               00 r[5]=12
REG[5] =  i:12
  14 MakeRecord       5    1    6 A             00 r[6]=mkrec(r[5])
REG[6] =  s3[02010C...](8)
  15 IdxInsert        3    6    0               00 key=r[6]
REG[6] =  s3[02010C...](8)
  16 Integer         20    5    0               00 r[5]=20
REG[5] =  i:20
  17 MakeRecord       5    1    6 A             00 r[6]=mkrec(r[5])
REG[6] =  s3[020114...](8)
  18 IdxInsert        3    6    0               00 key=r[6]
REG[6] =  s3[020114...](8)
  19 SCopy            2    6    0               00 r[6]=r[2]
REG[6] =  i:11
  20 IsNull           6   27    0               00 if r[6]==NULL goto 27
REG[6] =  i:11
  21 Affinity         6    1    0 A             00 affinity(r[6])
  22 NotFound         3   27    6 1             00 key=r[6]; end IN expr
REG[6] =  i:11
  27 IsNull           4   29    0               00 if r[4]==NULL goto 29
REG[4] =  NULL
  29 MakeRecord       2    2    6               00 r[6]=mkrec(r[2..3])
REG[6] =  s5[0301010B0C.....](8)
  30 Insert           0    6    1 t1            1B intkey=r[1] data=r[6]
REG[6] =  s5[0301010B0C.....](8)
REG[1] =  i:1
  31 Close            0    0    0               00 
  32 Noop             1    0    0               00 
  33 Halt             0    0    0               00 
SQL: [;
SELECT printf('%lld%n',314159.2653,'hi');]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 String8          0    2    0 %lld%n        00 r[2]='%lld%n'
REG[2] =   t6[%lld%n](8)
   5 Real             0    3    0 314159.2653   00 r[3]=314159.2653
REG[3] =  r:314159
   6 String8          0    4    0 hi            00 r[4]='hi'
REG[4] =   t2[hi](8)
   7 Goto             0    1    0               00 
   1 Function0        7    2    1 printf(-1)    03 r[1]=func(r[2..4])
REG[2] =   t6[%lld%n](8)
REG[3] =  r:314159
REG[4] =   t2[hi](8)
REG[1] =   s6[314159](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s6[314159](8)
   3 Halt             0    0    0               00 
SQL: [PRAGMA auto_vacuum=incremental;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Transaction      0    1    0               00 
   2 ReadCookie       0    1    4               00 
REG[1] =  i:4
   3 If               1    5    0               00 
REG[1] =  i:4
   5 SetCookie        0    7    1               00 
   6 Halt             0    0    0               00 
SQL: [CREATE TRIGGER i1y BEFORE INSERT ON t1 BEGIN
      UPDATE t1 SET y = new.y 
        WHERE y = new.y AND new.y < y AND new.y >= y;
  
      UPDATE t1 SET y = new.y 
        WHERE y = new.y AND new.y > y AND new.y <= y;
  
      SELECT RAISE(IGNORE) WHERE EXISTS (
        SELECT y FROM t1 
        WHERE y = new.y AND new.y >= y AND new.y <= y
      );
    END;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    1    3 1             01 usesStmtJournal=0
  15 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  16 Goto             0    1    0               00 
   1 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   3 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   4 String8          0    3    0 i1y           00 r[3]='i1y'
REG[3] =   t3[i1y](8)
   5 String8          0    4    0 t1            00 r[4]='t1'
REG[4] =   t2[t1](8)
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 String8          0    6    0 CREATE TRIGGER i1y BEFORE INSERT ON t1 BEGIN
      UPDATE t1 SET y = new.y 
        WHERE y = new.y AND new.y < y AND new.y >= y;
  
      UPDATE t1 SET y = new.y 
        WHERE y = new.y AND new.y > y AND new.y <= y;
  
      SELECT RAISE(IGNORE) WHERE EXISTS (
        SELECT y FROM t1 
        WHERE y = new.y AND new.y >= y AND new.y <= y
      );
    END 00 r[6]='CREATE TRIGGER i1y BEFORE INSERT ON t1 BEGIN
      UPDATE t1 SET y = new.y 
        WHERE y =
REG[6] =   t359[CREATE TRIGGER ](8)
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
REG[7] =  s378[071B131108855B747269676765726931......[triggeri1](8)
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
REG[7] =  s378[071B131108855B747269676765726931......[triggeri1](8)
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 SetCookie        0    1    4               00 
  12 ParseSchema      0    0    0 type='trigger' AND name='i1y' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  19 String8          0    4    0 i1y           00 r[4]='i1y'
REG[4] =   t3[i1y](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[index](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s3[i1y](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t3[i1y](8)
REG[3] =   s3[i1y](8)
   9 Copy             3    5    0               00 r[5]=r[3]
REG[5] =   s3[i1y](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:0
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s359[CREATE TRIGGER ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s3[i1y](8)
REG[6] =  i:0
REG[7] =   s359[CREATE TRIGGER ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [;
SELECT printf('|%8.8c|%-8.8c|','*','*');]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 String8          0    2    0 |%8.8c|%-8.8c| 00 r[2]='|%8.8c|%-8.8c|'
REG[2] =   t14[|%8.8c|%-8.8c|](8)
   5 String8          0    3    0 *             00 r[3]='*'
REG[3] =   t1[*](8)
   6 String8          0    4    0 *             00 r[4]='*'
REG[4] =   t1[*](8)
   7 Goto             0    1    0               00 
   1 Function0        7    2    1 printf(-1)    03 r[1]=func(r[2..4])
REG[2] =   t14[|%8.8c|%-8.8c|](8)
REG[3] =   t1[*](8)
REG[4] =   t1[*](8)
REG[1] =   s19[|********|*****](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s19[|********|*****](8)
   3 Halt             0    0    0               00 
SQL: [COMMIT;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       1    0    0               00 
SQL: [PRAGMA journal_mode = WAL;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 JournalMode      0    1    5               00 
REG[1] =   t6[memory](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t6[memory](8)
   3 Halt             0    0    0               00 
SQL: [;
INSERT INTO t1 VALUES(2, zeroblob(1200));]
VDBE Trace:
   0 Init             0   40    0               00 Start at 40
  40 Transaction      0    1    4 1             01 usesStmtJournal=0
  41 TableLock        0    3    1 t1            00 iDb=0 root=3 write=1
  42 Integer       1200    9    0               00 r[9]=1200
REG[9] =  i:1200
  43 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 2             00 root=3 iDb=0; t1
   2 OpenWrite        1    4    0 k(3,,,)       00 root=4 iDb=0; é1
   3 Integer         -1    5    0               00 r[5]=-1
REG[5] =  i:-1
   4 Integer          2    6    0               00 r[6]=2
REG[6] =  i:2
   5 Copy             6    8    0               00 r[8]=r[6]
REG[8] =  i:2
   6 Function0        1    9    7 zeroblob(1)   01 r[7]=func(r[9])
REG[9] =  i:1200
REG[7] =  s0[](8)+1200z
   7 Copy             7   10    0               00 r[10]=r[7]
REG[10] =  s1200[00000000000000000000000000000000................](8)
   8 Program          2   37   11 program       01 Call: i1y.default
   0 Init             0    0    0 -- TRIGGER i1y 00 Start at 0; Start: i1y.default (BEFORE INSERT ON t1)
   1 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0   15    0               00 
   5 Column           0    1    6               00 r[6]=t1.y
REG[6] =  i:12
   6 Param            5    7    0               00 new.y -> $7
REG[7] =  e0[](8)+1200z
   7 Ne               7   14    6 (BINARY)      51 if r[7]!=r[6] goto 14
REG[7] =  e0[](8)+1200z
REG[6] =  i:12
  14 Next             0    5    0               01 
  15 Close            0    0    0               00 
  16 OpenWrite        0    3    0 2             00 root=3 iDb=0; t1
  17 OpenWrite        1    4    0 k(3,,,)       00 root=4 iDb=0; é1
  18 RowSetRead       2   68    3               00 r[3]=rowset(2)
REG[2] =  NULL
REG[3] =  NULL
  68 Close            1    0    0               00 
  69 Close            0    0    0               00 
  70 ResetCount       0    0    0               00 
  71 Null             0   13   14               00 r[13..14]=NULL
REG[13] =  NULL
  72 OpenRead         6    3    0 2             00 root=3 iDb=0; t1
  73 Explain          0    0    0 SCAN TABLE t1 00 
  74 Rewind           6   85    0               00 
  75 Column           6    1    8               00 r[8]=t1.y
REG[8] =  i:12
  76 Param            5   17    0               00 new.y -> $17
REG[17] =  e0[](8)+1200z
  77 Ne              17   84    8 (BINARY)      51 if r[17]!=r[8] goto 84
REG[17] =  e0[](8)+1200z
REG[8] =  i:12
  84 Next             6   75    0               01 
  85 Close            6    0    0               00 
  86 OpenWrite        6    3    0 2             00 root=3 iDb=0; t1
  87 OpenWrite        7    4    0 k(3,,,)       00 root=4 iDb=0; é1
  88 RowSetRead      13  138   14               00 r[14]=rowset(13)
REG[13] =  NULL
REG[14] =  NULL
 138 Close            7    0    0               00 
 139 Close            6    0    0               00 
 140 ResetCount       0    0    0               00 
 141 Once             4  158    0               00 
 142 Integer          0   19    0               00 r[19]=0; Init EXISTS result
REG[19] =  i:0
 143 Integer          1   20    0               00 r[20]=1; LIMIT counter
REG[20] =  i:1
 144 OpenRead        12    3    0 2             00 root=3 iDb=0; t1
 145 Explain          1    0    0 SCAN TABLE t1 00 
 146 Rewind          12  157    0               00 
 147 Column          12    1   21               00 r[21]=t1.y
REG[21] =  i:12
 148 Param            5   22    0               00 new.y -> $22
REG[22] =  e0[](8)+1200z
 149 Ne              22  156   21 (BINARY)      51 if r[22]!=r[21] goto 156
REG[22] =  e0[](8)+1200z
REG[21] =  i:12
 156 Next            12  147    0               01 
 157 Close           12    0    0               00 
 158 IfNot           19  160    1               00 
REG[19] =  i:0
 160 Halt             0    0    0               00 End: i1y.default
   9 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
  10 Copy             8    2    0               00 r[2]=r[8]
REG[2] =  i:2
  11 Copy            10    3    0               00 r[3]=r[10]
REG[3] =  s1200[00000000000000000000000000000000................](8)
  12 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  13 Noop             0    0    0               00 begin IN expr
  14 Once             0   25    0               00 
  15 OpenEphemeral    3    1    0 k(1,B)        00 nColumn=1
  16 Integer         10   12    0               00 r[12]=10
REG[12] =  i:10
  17 MakeRecord      12    1   13 A             00 r[13]=mkrec(r[12])
REG[13] =  s3[02010A...](8)
  18 IdxInsert        3   13    0               00 key=r[13]
REG[13] =  s3[02010A...](8)
  19 Integer         12   12    0               00 r[12]=12
REG[12] =  i:12
  20 MakeRecord      12    1   13 A             00 r[13]=mkrec(r[12])
REG[13] =  s3[02010C...](8)
  21 IdxInsert        3   13    0               00 key=r[13]
REG[13] =  s3[02010C...](8)
  22 Integer         20   12    0               00 r[12]=20
REG[12] =  i:20
  23 MakeRecord      12    1   13 A             00 r[13]=mkrec(r[12])
REG[13] =  s3[020114...](8)
  24 IdxInsert        3   13    0               00 key=r[13]
REG[13] =  s3[020114...](8)
  25 SCopy            2   13    0               00 r[13]=r[2]
REG[13] =  i:2
  26 IsNull          13   33    0               00 if r[13]==NULL goto 33
REG[13] =  i:2
  27 Affinity        13    1    0 A             00 affinity(r[13])
  28 NotFound         3   33   13 1             00 key=r[13]; end IN expr
REG[13] =  i:2
  33 IsNull           4   35    0               00 if r[4]==NULL goto 35
REG[4] =  NULL
  35 MakeRecord       2    2   13               00 r[13]=mkrec(r[2..3])
REG[13] =  s1205[0401926C020000000000000000000000...l............](8)
  36 Insert           0   13    1 t1            1B intkey=r[1] data=r[13]
REG[13] =  s1205[0401926C020000000000000000000000...l............](8)
REG[1] =  i:2
  37 Close            0    0    0               00 
  38 Noop             1    0    0               00 
  39 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f44df52a859 in __GI_abort () at abort.c:79
#2  0x00007f44df52a729 in __assert_fail_base (fmt=0x7f44df6c0588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", 
    assertion=0x216480 "((p->szMalloc>0 && p->z==p->zMalloc)? 1 : 0) + ((p->flags&MEM_Dyn)!=0 ? 1 : 0) + ((p->flags&MEM_Ephem)!=0 ? 1 : 0) + ((p->flags&MEM_Static)!=0 ? 1 : 0) == 1", file=0x222c23 "sqlite3.c", line=68297, 
    function=<optimized out>) at assert.c:92
#3  0x00007f44df53bfd6 in __GI___assert_fail (
    assertion=0x216480 "((p->szMalloc>0 && p->z==p->zMalloc)? 1 : 0) + ((p->flags&MEM_Dyn)!=0 ? 1 : 0) + ((p->flags&MEM_Ephem)!=0 ? 1 : 0) + ((p->flags&MEM_Static)!=0 ? 1 : 0) == 1", file=0x222c23 "sqlite3.c", line=68297, 
    function=0x21e154 "int sqlite3VdbeCheckMemInvariants(Mem *)") at assert.c:101
#4  0x00000000002795e3 in sqlite3VdbeCheckMemInvariants (p=0x19b76e0) at sqlite3.c:68292
#5  0x00000000002c8632 in releaseMemArray (p=0x19b76e0, N=<optimized out>) at sqlite3.c:71417
#6  0x00000000002e366e in sqlite3VdbeHalt (p=0x19a5920) at sqlite3.c:71458
#7  0x00000000003e1666 in sqlite3VdbeExec (p=<optimized out>) at sqlite3.c:77673
#8  0x000000000028b140 in sqlite3_step (pStmt=<optimized out>) at sqlite3.c:75131
#9  0x000000000024b5e9 in main (argc=1, argv=0x7fff45156e38) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 120307] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
