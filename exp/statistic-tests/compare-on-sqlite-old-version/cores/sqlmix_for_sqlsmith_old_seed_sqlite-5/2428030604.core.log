GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000339,sig:06,src:009490+004964,time:35600511,execs:5717874,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT hex('¿') AS x;]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 String8          0    2    0 ¿             00 r[2]='¿'
REG[2] =   t2[..](16LE)
   5 Goto             0    1    0               00 
   1 Function0        1    2    1 hex(1)        01 r[1]=func(r[2])
REG[2] =   t2[..](16LE)
REG[1] =   s8[B.F.0.0.](16LE)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s8[B.F.0.0.](16LE)
   3 Halt             0    0    0               00 
SQL: [SELECT hex('¿') AS x;]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 String8          0    2    0 ¿             00 r[2]='¿'
REG[2] =   t2[..](16LE)
   5 Goto             0    1    0               00 
   1 Function0        1    2    1 hex(1)        01 r[1]=func(r[2])
REG[2] =   t2[..](16LE)
REG[1] =   s8[B.F.0.0.](16LE)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s8[B.F.0.0.](16LE)
   3 Halt             0    0    0               00 
SQL: [;
COMMIT;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       1    0    0               00 
SQL: [;
INSERT INTO t1 VALUES(1,2);]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    1    1 0             01 usesStmtJournal=0
  10 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  11 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   5 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s4[03090102....](8)
   6 Insert           0    4    1 t1            1B intkey=r[1] data=r[4]
REG[4] =  s4[03090102....](8)
REG[1] =  i:1
   7 Noop             0    0    0               00 
   8 Halt             0    0    0               00 
SQL: [SELECT hex('à') AS x;]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 String8          0    2    0 à             00 r[2]='à'
REG[2] =   t2[..](16LE)
   5 Goto             0    1    0               00 
   1 Function0        1    2    1 hex(1)        01 r[1]=func(r[2])
REG[2] =   t2[..](16LE)
REG[1] =   s8[F.D.F.F.](16LE)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s8[F.D.F.F.](16LE)
   3 Halt             0    0    0               00 
SQL: [CREATE TRIGGER t2 AFTER INSERT ON t1 WHEN new.y=1 BEGIN
       INSERT INTO t1(y) VALUES(new.y);
     END;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    1    1 0             01 usesStmtJournal=0
  15 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  16 Goto             0    1    0               00 
   1 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   3 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t14[t.r.i.g.g.e.r.](16LE)
   4 String8          0    3    0 t2            00 r[3]='t2'
REG[3] =   t4[t.2.](16LE)
   5 String8          0    4    0 t1            00 r[4]='t1'
REG[4] =   t4[t.1.](16LE)
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 String8          0    6    0 CREATE TRIGGER t2 AFTER INSERT ON t1 WHEN new.y=1 BEGIN
       INSERT INTO t1(y) VALUES(new.y);
     END 00 r[6]='CREATE TRIGGER t2 AFTER INSERT ON t1 WHEN new.y=1 BEGIN
       INSERT INTO t1(y) VALUES(new.y
REG[6] =   t208[C.R.E.A.T.E. .T](16LE)
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
REG[7] =  s237[0729151508832D740072006900670067.)....-t.r.i.g.g](8)
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
REG[7] =  s237[0729151508832D740072006900670067.)....-t.r.i.g.g](8)
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 SetCookie        0    1    2               00 
  12 ParseSchema      0    0    0 type='trigger' AND name='t2' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t14[t.r.i.g.g.e.r.](16LE)
  19 String8          0    4    0 t2            00 r[4]='t2'
REG[4] =   t4[t.2.](16LE)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s10[t.a.b.l.e.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t14[t.r.i.g.g.e.r.](16LE)
REG[1] =   s10[t.a.b.l.e.](16LE)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s14[t.r.i.g.g.e.r.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t14[t.r.i.g.g.e.r.](16LE)
REG[1] =   s14[t.r.i.g.g.e.r.](16LE)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s4[t.2.](16LE)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t4[t.2.](16LE)
REG[3] =   s4[t.2.](16LE)
   9 Copy             3    5    0               00 r[5]=r[3]
REG[5] =   s4[t.2.](16LE)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:0
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s208[C.R.E.A.T.E. .T](16LE)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s4[t.2.](16LE)
REG[6] =  i:0
REG[7] =   s208[C.R.E.A.T.E. .T](16LE)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [INSERT INTO t1 VALUES(0, 0) ;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    1    2 0             01 usesStmtJournal=0
  11 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  12 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   3 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   4 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
   5 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s3[030808...](8)
   6 Insert           0    4    1 t1            1B intkey=r[1] data=r[4]
REG[4] =  s3[030808...](8)
REG[1] =  i:2
   7 Program         -2    8    5 program       01 Call: t2.default
   0 Init             0    0    0 -- TRIGGER t2 00 Start at 0; Start: t2.default (AFTER INSERT ON t1)
   1 Param            5    1    0               00 new.y -> $1
REG[1] =  i:0
   2 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   3 Ne               2   13    1 (BINARY)      51 if r[2]!=r[1] goto 13
REG[2] =  i:1
REG[1] =  i:0
  13 Halt             0    0    0               00 End: t2.default
   8 Noop             0    0    0               00 
   9 Halt             0    0    0               00 
SQL: [;
SELECT printf('%.*f',2,3.141592653);]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 String8          0    2    0 %.*f          00 r[2]='%.*f'
REG[2] =   t8[%...*.f.](16LE)
   5 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   6 Real             0    4    0 3.141592653   00 r[4]=3.141592653
REG[4] =  r:3.14159
   7 Goto             0    1    0               00 
   1 Function0        7    2    1 printf(-1)    03 r[1]=func(r[2..4])
REG[2] =   t8[%...*.f.](16LE)
REG[3] =  i:2
REG[4] =  r:3.14159
REG[1] =   s8[3...1.4.](16LE)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s8[3...1.4.](16LE)
   3 Halt             0    0    0               00 
SQL: [WITH rows(i, j) AS (
        SELECT 1, 1 UNION ALL SELECT i+1, j+i FROM rows WHERE i<10
    )
    INSERT INTO t1 SELECT * FROM rows
  ;]
VDBE Trace:
   0 Init             0   54    0               00 Start at 54
  54 Transaction      0    1    2 0             01 usesStmtJournal=0
  55 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  56 Integer         10   13    0               00 r[13]=10
REG[13] =  i:10
  57 Integer          1   15    0               00 r[15]=1
REG[15] =  i:1
  58 Goto             0    1    0               00 
   1 InitCoroutine    4   36    2               00 
  36 OpenEphemeral    3    2    0               00 nColumn=2
  37 Yield            4   42    0               00 
REG[4] =  i:1
REG[4] =  i:37
   2 InitCoroutine    5   28    3               00 rows
  28 Explain          0    0    0 SCAN SUBQUERY 1 00 
  29 InitCoroutine    5    0    3               00 
  30 Yield            5   35    0               00 next row of "rows"
REG[5] =  i:2
REG[5] =  i:30
   3 OpenPseudo       1    6    2               00 2 columns in r[6]
   4 OpenEphemeral    2    2    0               00 nColumn=2; Queue table
   5 Integer          1    7    0               00 r[7]=1
REG[7] =  i:1
   6 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
   7 MakeRecord       7    2    9               00 r[9]=mkrec(r[7..8])
REG[9] =  s3[030909...](8)
   8 NewRowid         2   10    0               00 r[10]=rowid
REG[10] =  i:1
   9 Insert           2    9   10               08 intkey=r[10] data=r[9]
REG[9] =  s3[030909...](8)
REG[10] =  i:1
  10 Rewind           2   27    0               00 
  11 NullRow          1    0    0               00 
  12 RowData          2    6    0               00 r[6]=data
REG[6] =  s3[030909...](8)
  13 Delete           2    0    0               00 
  14 Column           1    0   11               00 r[11]=
REG[11] =  i:1
  15 Column           1    1   12               00 r[12]=
REG[12] =  i:1
  16 Yield            5    0    0               00 
REG[5] =  i:30
REG[5] =  i:16
  31 Copy            11    2    0               00 r[2]=r[11]; rows.i
REG[2] =  i:1
  32 Copy            12    3    0               00 r[3]=r[12]; rows.j
REG[3] =  i:1
  33 Yield            4    0    0               00 
REG[4] =  i:37
REG[4] =  i:33
  38 MakeRecord       2    2   17               00 r[17]=mkrec(r[2..3])
REG[17] =  s3[030909...](8)
  39 NewRowid         3   18    0               00 r[18]=rowid
REG[18] =  i:1
  40 Insert           3   17   18               00 intkey=r[18] data=r[17]
REG[17] =  s3[030909...](8)
REG[18] =  i:1
  41 Goto             0   37    0               00 
  37 Yield            4   42    0               00 
REG[4] =  i:33
REG[4] =  i:37
  34 Goto             0   30    0               00 
  30 Yield            5   35    0               00 next row of "rows"
REG[5] =  i:16
REG[5] =  i:30
  17 Explain          3    0    0 SCAN TABLE rows 00 
  18 Column           1    0   10               00 r[10]=rows.i
REG[10] =  i:1
  19 Ge              13   26   10 (BINARY)      51 if r[13]>=r[10] goto 26
REG[13] =  i:10
REG[10] =  i:1
  20 Add             15   10    7               00 r[7]=r[15]+r[10]
REG[15] =  i:1
REG[10] =  i:1
REG[7] =  i:2
  21 Column           1    1   14               00 r[14]=rows.j
REG[14] =  i:1
  22 Add             10   14    8               00 r[8]=r[10]+r[14]
REG[10] =  i:1
REG[14] =  i:1
REG[8] =  i:2
  23 MakeRecord       7    2    9               00 r[9]=mkrec(r[7..8])
REG[9] =  s5[0301010202.....](8)
  24 NewRowid         2   16    0               00 r[16]=rowid
REG[16] =  i:1
  25 Insert           2    9   16               08 intkey=r[16] data=r[9]
REG[9] =  s5[0301010202.....](8)
REG[16] =  i:1
  26 Goto             0   10    0               00 
  10 Rewind           2   27    0               00 
  11 NullRow          1    0    0               00 
  12 RowData          2    6    0               00 r[6]=data
REG[6] =  s5[0301010202.....](8)
  13 Delete           2    0    0               00 
  14 Column           1    0   11               00 r[11]=
REG[11] =  i:2
  15 Column           1    1   12               00 r[12]=
REG[12] =  i:2
  16 Yield            5    0    0               00 
REG[5] =  i:30
REG[5] =  i:16
  31 Copy            11    2    0               00 r[2]=r[11]; rows.i
REG[2] =  i:2
  32 Copy            12    3    0               00 r[3]=r[12]; rows.j
REG[3] =  i:2
  33 Yield            4    0    0               00 
REG[4] =  i:37
REG[4] =  i:33
  38 MakeRecord       2    2   17               00 r[17]=mkrec(r[2..3])
REG[17] =  s5[0301010202.....](8)
  39 NewRowid         3   18    0               00 r[18]=rowid
REG[18] =  i:2
  40 Insert           3   17   18               00 intkey=r[18] data=r[17]
REG[17] =  s5[0301010202.....](8)
REG[18] =  i:2
  41 Goto             0   37    0               00 
  37 Yield            4   42    0               00 
REG[4] =  i:33
REG[4] =  i:37
  34 Goto             0   30    0               00 
  30 Yield            5   35    0               00 next row of "rows"
REG[5] =  i:16
REG[5] =  i:30
  17 Explain          3    0    0 SCAN TABLE rows 00 
  18 Column           1    0   10               00 r[10]=rows.i
REG[10] =  i:2
  19 Ge              13   26   10 (BINARY)      51 if r[13]>=r[10] goto 26
REG[13] =  i:10
REG[10] =  i:2
  20 Add             15   10    7               00 r[7]=r[15]+r[10]
REG[15] =  i:1
REG[10] =  i:2
REG[7] =  i:3
  21 Column           1    1   14               00 r[14]=rows.j
REG[14] =  i:2
  22 Add             10   14    8               00 r[8]=r[10]+r[14]
REG[10] =  i:2
REG[14] =  i:2
REG[8] =  i:4
  23 MakeRecord       7    2    9               00 r[9]=mkrec(r[7..8])
REG[9] =  s5[0301010304.....](8)
  24 NewRowid         2   16    0               00 r[16]=rowid
REG[16] =  i:1
  25 Insert           2    9   16               08 intkey=r[16] data=r[9]
REG[9] =  s5[0301010304.....](8)
REG[16] =  i:1
  26 Goto             0   10    0               00 
  10 Rewind           2   27    0               00 
  11 NullRow          1    0    0               00 
  12 RowData          2    6    0               00 r[6]=data
REG[6] =  s5[0301010304.....](8)
  13 Delete           2    0    0               00 
  14 Column           1    0   11               00 r[11]=
REG[11] =  i:3
  15 Column           1    1   12               00 r[12]=
REG[12] =  i:4
  16 Yield            5    0    0               00 
REG[5] =  i:30
REG[5] =  i:16
  31 Copy            11    2    0               00 r[2]=r[11]; rows.i
REG[2] =  i:3
  32 Copy            12    3    0               00 r[3]=r[12]; rows.j
REG[3] =  i:4
  33 Yield            4    0    0               00 
REG[4] =  i:37
REG[4] =  i:33
  38 MakeRecord       2    2   17               00 r[17]=mkrec(r[2..3])
REG[17] =  s5[0301010304.....](8)
  39 NewRowid         3   18    0               00 r[18]=rowid
REG[18] =  i:3
  40 Insert           3   17   18               00 intkey=r[18] data=r[17]
REG[17] =  s5[0301010304.....](8)
REG[18] =  i:3
  41 Goto             0   37    0               00 
  37 Yield            4   42    0               00 
REG[4] =  i:33
REG[4] =  i:37
  34 Goto             0   30    0               00 
  30 Yield            5   35    0               00 next row of "rows"
REG[5] =  i:16
REG[5] =  i:30
  17 Explain          3    0    0 SCAN TABLE rows 00 
  18 Column           1    0   10               00 r[10]=rows.i
REG[10] =  i:3
  19 Ge              13   26   10 (BINARY)      51 if r[13]>=r[10] goto 26
REG[13] =  i:10
REG[10] =  i:3
  20 Add             15   10    7               00 r[7]=r[15]+r[10]
REG[15] =  i:1
REG[10] =  i:3
REG[7] =  i:4
  21 Column           1    1   14               00 r[14]=rows.j
REG[14] =  i:4
  22 Add             10   14    8               00 r[8]=r[10]+r[14]
REG[10] =  i:3
REG[14] =  i:4
REG[8] =  i:7
  23 MakeRecord       7    2    9               00 r[9]=mkrec(r[7..8])
REG[9] =  s5[0301010407.....](8)
  24 NewRowid         2   16    0               00 r[16]=rowid
REG[16] =  i:1
  25 Insert           2    9   16               08 intkey=r[16] data=r[9]
REG[9] =  s5[0301010407.....](8)
REG[16] =  i:1
  26 Goto             0   10    0               00 
  10 Rewind           2   27    0               00 
  11 NullRow          1    0    0               00 
  12 RowData          2    6    0               00 r[6]=data
REG[6] =  s5[0301010407.....](8)
  13 Delete           2    0    0               00 
  14 Column           1    0   11               00 r[11]=
REG[11] =  i:4
  15 Column           1    1   12               00 r[12]=
REG[12] =  i:7
  16 Yield            5    0    0               00 
REG[5] =  i:30
REG[5] =  i:16
  31 Copy            11    2    0               00 r[2]=r[11]; rows.i
REG[2] =  i:4
  32 Copy            12    3    0               00 r[3]=r[12]; rows.j
REG[3] =  i:7
  33 Yield            4    0    0               00 
REG[4] =  i:37
REG[4] =  i:33
  38 MakeRecord       2    2   17               00 r[17]=mkrec(r[2..3])
REG[17] =  s5[0301010407.....](8)
  39 NewRowid         3   18    0               00 r[18]=rowid
REG[18] =  i:4
  40 Insert           3   17   18               00 intkey=r[18] data=r[17]
REG[17] =  s5[0301010407.....](8)
REG[18] =  i:4
  41 Goto             0   37    0               00 
  37 Yield            4   42    0               00 
REG[4] =  i:33
REG[4] =  i:37
  34 Goto             0   30    0               00 
  30 Yield            5   35    0               00 next row of "rows"
REG[5] =  i:16
REG[5] =  i:30
  17 Explain          3    0    0 SCAN TABLE rows 00 
  18 Column           1    0   10               00 r[10]=rows.i
REG[10] =  i:4
  19 Ge              13   26   10 (BINARY)      51 if r[13]>=r[10] goto 26
REG[13] =  i:10
REG[10] =  i:4
  20 Add             15   10    7               00 r[7]=r[15]+r[10]
REG[15] =  i:1
REG[10] =  i:4
REG[7] =  i:5
  21 Column           1    1   14               00 r[14]=rows.j
REG[14] =  i:7
  22 Add             10   14    8               00 r[8]=r[10]+r[14]
REG[10] =  i:4
REG[14] =  i:7
REG[8] =  i:11
  23 MakeRecord       7    2    9               00 r[9]=mkrec(r[7..8])
REG[9] =  s5[030101050B.....](8)
  24 NewRowid         2   16    0               00 r[16]=rowid
REG[16] =  i:1
  25 Insert           2    9   16               08 intkey=r[16] data=r[9]
REG[9] =  s5[030101050B.....](8)
REG[16] =  i:1
  26 Goto             0   10    0               00 
  10 Rewind           2   27    0               00 
  11 NullRow          1    0    0               00 
  12 RowData          2    6    0               00 r[6]=data
REG[6] =  s5[030101050B.....](8)
  13 Delete           2    0    0               00 
  14 Column           1    0   11               00 r[11]=
REG[11] =  i:5
  15 Column           1    1   12               00 r[12]=
REG[12] =  i:11
  16 Yield            5    0    0               00 
REG[5] =  i:30
REG[5] =  i:16
  31 Copy            11    2    0               00 r[2]=r[11]; rows.i
REG[2] =  i:5
  32 Copy            12    3    0               00 r[3]=r[12]; rows.j
REG[3] =  i:11
  33 Yield            4    0    0               00 
REG[4] =  i:37
REG[4] =  i:33
  38 MakeRecord       2    2   17               00 r[17]=mkrec(r[2..3])
REG[17] =  s5[030101050B.....](8)
  39 NewRowid         3   18    0               00 r[18]=rowid
REG[18] =  i:5
  40 Insert           3   17   18               00 intkey=r[18] data=r[17]
REG[17] =  s5[030101050B.....](8)
REG[18] =  i:5
  41 Goto             0   37    0               00 
  37 Yield            4   42    0               00 
REG[4] =  i:33
REG[4] =  i:37
  34 Goto             0   30    0               00 
  30 Yield            5   35    0               00 next row of "rows"
REG[5] =  i:16
REG[5] =  i:30
  17 Explain          3    0    0 SCAN TABLE rows 00 
  18 Column           1    0   10               00 r[10]=rows.i
REG[10] =  i:5
  19 Ge              13   26   10 (BINARY)      51 if r[13]>=r[10] goto 26
REG[13] =  i:10
REG[10] =  i:5
  20 Add             15   10    7               00 r[7]=r[15]+r[10]
REG[15] =  i:1
REG[10] =  i:5
REG[7] =  i:6
  21 Column           1    1   14               00 r[14]=rows.j
REG[14] =  i:11
  22 Add             10   14    8               00 r[8]=r[10]+r[14]
REG[10] =  i:5
REG[14] =  i:11
REG[8] =  i:16
  23 MakeRecord       7    2    9               00 r[9]=mkrec(r[7..8])
REG[9] =  s5[0301010610.....](8)
  24 NewRowid         2   16    0               00 r[16]=rowid
REG[16] =  i:1
  25 Insert           2    9   16               08 intkey=r[16] data=r[9]
REG[9] =  s5[0301010610.....](8)
REG[16] =  i:1
  26 Goto             0   10    0               00 
  10 Rewind           2   27    0               00 
  11 NullRow          1    0    0               00 
  12 RowData          2    6    0               00 r[6]=data
REG[6] =  s5[0301010610.....](8)
  13 Delete           2    0    0               00 
  14 Column           1    0   11               00 r[11]=
REG[11] =  i:6
  15 Column           1    1   12               00 r[12]=
REG[12] =  i:16
  16 Yield            5    0    0               00 
REG[5] =  i:30
REG[5] =  i:16
  31 Copy            11    2    0               00 r[2]=r[11]; rows.i
REG[2] =  i:6
  32 Copy            12    3    0               00 r[3]=r[12]; rows.j
REG[3] =  i:16
  33 Yield            4    0    0               00 
REG[4] =  i:37
REG[4] =  i:33
  38 MakeRecord       2    2   17               00 r[17]=mkrec(r[2..3])
REG[17] =  s5[0301010610.....](8)
  39 NewRowid         3   18    0               00 r[18]=rowid
REG[18] =  i:6
  40 Insert           3   17   18               00 intkey=r[18] data=r[17]
REG[17] =  s5[0301010610.....](8)
REG[18] =  i:6
  41 Goto             0   37    0               00 
  37 Yield            4   42    0               00 
REG[4] =  i:33
REG[4] =  i:37
  34 Goto             0   30    0               00 
  30 Yield            5   35    0               00 next row of "rows"
REG[5] =  i:16
REG[5] =  i:30
  17 Explain          3    0    0 SCAN TABLE rows 00 
  18 Column           1    0   10               00 r[10]=rows.i
REG[10] =  i:6
  19 Ge              13   26   10 (BINARY)      51 if r[13]>=r[10] goto 26
REG[13] =  i:10
REG[10] =  i:6
  20 Add             15   10    7               00 r[7]=r[15]+r[10]
REG[15] =  i:1
REG[10] =  i:6
REG[7] =  i:7
  21 Column           1    1   14               00 r[14]=rows.j
REG[14] =  i:16
  22 Add             10   14    8               00 r[8]=r[10]+r[14]
REG[10] =  i:6
REG[14] =  i:16
REG[8] =  i:22
  23 MakeRecord       7    2    9               00 r[9]=mkrec(r[7..8])
REG[9] =  s5[0301010716.....](8)
  24 NewRowid         2   16    0               00 r[16]=rowid
REG[16] =  i:1
  25 Insert           2    9   16               08 intkey=r[16] data=r[9]
REG[9] =  s5[0301010716.....](8)
REG[16] =  i:1
  26 Goto             0   10    0               00 
  10 Rewind           2   27    0               00 
  11 NullRow          1    0    0               00 
  12 RowData          2    6    0               00 r[6]=data
REG[6] =  s5[0301010716.....](8)
  13 Delete           2    0    0               00 
  14 Column           1    0   11               00 r[11]=
REG[11] =  i:7
  15 Column           1    1   12               00 r[12]=
REG[12] =  i:22
  16 Yield            5    0    0               00 
REG[5] =  i:30
REG[5] =  i:16
  31 Copy            11    2    0               00 r[2]=r[11]; rows.i
REG[2] =  i:7
  32 Copy            12    3    0               00 r[3]=r[12]; rows.j
REG[3] =  i:22
  33 Yield            4    0    0               00 
REG[4] =  i:37
REG[4] =  i:33
  38 MakeRecord       2    2   17               00 r[17]=mkrec(r[2..3])
REG[17] =  s5[0301010716.....](8)
  39 NewRowid         3   18    0               00 r[18]=rowid
REG[18] =  i:7
  40 Insert           3   17   18               00 intkey=r[18] data=r[17]
REG[17] =  s5[0301010716.....](8)
REG[18] =  i:7
  41 Goto             0   37    0               00 
  37 Yield            4   42    0               00 
REG[4] =  i:33
REG[4] =  i:37
  34 Goto             0   30    0               00 
  30 Yield            5   35    0               00 next row of "rows"
REG[5] =  i:16
REG[5] =  i:30
  17 Explain          3    0    0 SCAN TABLE rows 00 
  18 Column           1    0   10               00 r[10]=rows.i
REG[10] =  i:7
  19 Ge              13   26   10 (BINARY)      51 if r[13]>=r[10] goto 26
REG[13] =  i:10
REG[10] =  i:7
  20 Add             15   10    7               00 r[7]=r[15]+r[10]
REG[15] =  i:1
REG[10] =  i:7
REG[7] =  i:8
  21 Column           1    1   14               00 r[14]=rows.j
REG[14] =  i:22
  22 Add             10   14    8               00 r[8]=r[10]+r[14]
REG[10] =  i:7
REG[14] =  i:22
REG[8] =  i:29
  23 MakeRecord       7    2    9               00 r[9]=mkrec(r[7..8])
REG[9] =  s5[030101081D.....](8)
  24 NewRowid         2   16    0               00 r[16]=rowid
REG[16] =  i:1
  25 Insert           2    9   16               08 intkey=r[16] data=r[9]
REG[9] =  s5[030101081D.....](8)
REG[16] =  i:1
  26 Goto             0   10    0               00 
  10 Rewind           2   27    0               00 
  11 NullRow          1    0    0               00 
  12 RowData          2    6    0               00 r[6]=data
REG[6] =  s5[030101081D.....](8)
  13 Delete           2    0    0               00 
  14 Column           1    0   11               00 r[11]=
REG[11] =  i:8
  15 Column           1    1   12               00 r[12]=
REG[12] =  i:29
  16 Yield            5    0    0               00 
REG[5] =  i:30
REG[5] =  i:16
  31 Copy            11    2    0               00 r[2]=r[11]; rows.i
REG[2] =  i:8
  32 Copy            12    3    0               00 r[3]=r[12]; rows.j
REG[3] =  i:29
  33 Yield            4    0    0               00 
REG[4] =  i:37
REG[4] =  i:33
  38 MakeRecord       2    2   17               00 r[17]=mkrec(r[2..3])
REG[17] =  s5[030101081D.....](8)
  39 NewRowid         3   18    0               00 r[18]=rowid
REG[18] =  i:8
  40 Insert           3   17   18               00 intkey=r[18] data=r[17]
REG[17] =  s5[030101081D.....](8)
REG[18] =  i:8
  41 Goto             0   37    0               00 
  37 Yield            4   42    0               00 
REG[4] =  i:33
REG[4] =  i:37
  34 Goto             0   30    0               00 
  30 Yield            5   35    0               00 next row of "rows"
REG[5] =  i:16
REG[5] =  i:30
  17 Explain          3    0    0 SCAN TABLE rows 00 
  18 Column           1    0   10               00 r[10]=rows.i
REG[10] =  i:8
  19 Ge              13   26   10 (BINARY)      51 if r[13]>=r[10] goto 26
REG[13] =  i:10
REG[10] =  i:8
  20 Add             15   10    7               00 r[7]=r[15]+r[10]
REG[15] =  i:1
REG[10] =  i:8
REG[7] =  i:9
  21 Column           1    1   14               00 r[14]=rows.j
REG[14] =  i:29
  22 Add             10   14    8               00 r[8]=r[10]+r[14]
REG[10] =  i:8
REG[14] =  i:29
REG[8] =  i:37
  23 MakeRecord       7    2    9               00 r[9]=mkrec(r[7..8])
REG[9] =  s5[0301010925....%](8)
  24 NewRowid         2   16    0               00 r[16]=rowid
REG[16] =  i:1
  25 Insert           2    9   16               08 intkey=r[16] data=r[9]
REG[9] =  s5[0301010925....%](8)
REG[16] =  i:1
  26 Goto             0   10    0               00 
  10 Rewind           2   27    0               00 
  11 NullRow          1    0    0               00 
  12 RowData          2    6    0               00 r[6]=data
REG[6] =  s5[0301010925....%](8)
  13 Delete           2    0    0               00 
  14 Column           1    0   11               00 r[11]=
REG[11] =  i:9
  15 Column           1    1   12               00 r[12]=
REG[12] =  i:37
  16 Yield            5    0    0               00 
REG[5] =  i:30
REG[5] =  i:16
  31 Copy            11    2    0               00 r[2]=r[11]; rows.i
REG[2] =  i:9
  32 Copy            12    3    0               00 r[3]=r[12]; rows.j
REG[3] =  i:37
  33 Yield            4    0    0               00 
REG[4] =  i:37
REG[4] =  i:33
  38 MakeRecord       2    2   17               00 r[17]=mkrec(r[2..3])
REG[17] =  s5[0301010925....%](8)
  39 NewRowid         3   18    0               00 r[18]=rowid
REG[18] =  i:9
  40 Insert           3   17   18               00 intkey=r[18] data=r[17]
REG[17] =  s5[0301010925....%](8)
REG[18] =  i:9
  41 Goto             0   37    0               00 
  37 Yield            4   42    0               00 
REG[4] =  i:33
REG[4] =  i:37
  34 Goto             0   30    0               00 
  30 Yield            5   35    0               00 next row of "rows"
REG[5] =  i:16
REG[5] =  i:30
  17 Explain          3    0    0 SCAN TABLE rows 00 
  18 Column           1    0   10               00 r[10]=rows.i
REG[10] =  i:9
  19 Ge              13   26   10 (BINARY)      51 if r[13]>=r[10] goto 26
REG[13] =  i:10
REG[10] =  i:9
  20 Add             15   10    7               00 r[7]=r[15]+r[10]
REG[15] =  i:1
REG[10] =  i:9
REG[7] =  i:10
  21 Column           1    1   14               00 r[14]=rows.j
REG[14] =  i:37
  22 Add             10   14    8               00 r[8]=r[10]+r[14]
REG[10] =  i:9
REG[14] =  i:37
REG[8] =  i:46
  23 MakeRecord       7    2    9               00 r[9]=mkrec(r[7..8])
REG[9] =  s5[0301010A2E.....](8)
  24 NewRowid         2   16    0               00 r[16]=rowid
REG[16] =  i:1
  25 Insert           2    9   16               08 intkey=r[16] data=r[9]
REG[9] =  s5[0301010A2E.....](8)
REG[16] =  i:1
  26 Goto             0   10    0               00 
  10 Rewind           2   27    0               00 
  11 NullRow          1    0    0               00 
  12 RowData          2    6    0               00 r[6]=data
REG[6] =  s5[0301010A2E.....](8)
  13 Delete           2    0    0               00 
  14 Column           1    0   11               00 r[11]=
REG[11] =  i:10
  15 Column           1    1   12               00 r[12]=
REG[12] =  i:46
  16 Yield            5    0    0               00 
REG[5] =  i:30
REG[5] =  i:16
  31 Copy            11    2    0               00 r[2]=r[11]; rows.i
REG[2] =  i:10
  32 Copy            12    3    0               00 r[3]=r[12]; rows.j
REG[3] =  i:46
  33 Yield            4    0    0               00 
REG[4] =  i:37
REG[4] =  i:33
  38 MakeRecord       2    2   17               00 r[17]=mkrec(r[2..3])
REG[17] =  s5[0301010A2E.....](8)
  39 NewRowid         3   18    0               00 r[18]=rowid
REG[18] =  i:10
  40 Insert           3   17   18               00 intkey=r[18] data=r[17]
REG[17] =  s5[0301010A2E.....](8)
REG[18] =  i:10
  41 Goto             0   37    0               00 
  37 Yield            4   42    0               00 
REG[4] =  i:33
REG[4] =  i:37
  34 Goto             0   30    0               00 
  30 Yield            5   35    0               00 next row of "rows"
REG[5] =  i:16
REG[5] =  i:30
  17 Explain          3    0    0 SCAN TABLE rows 00 
  18 Column           1    0   10               00 r[10]=rows.i
REG[10] =  i:10
  19 Ge              13   26   10 (BINARY)      51 if r[13]>=r[10] goto 26
REG[13] =  i:10
REG[10] =  i:10
  26 Goto             0   10    0               00 
  10 Rewind           2   27    0               00 
  27 EndCoroutine     5    0    0               00 
REG[5] =  i:30
  35 EndCoroutine     4    0    0               00 
REG[4] =  i:37
  42 OpenWrite        4    2    0 2             00 root=2 iDb=0; t1
  43 Rewind           3   51    0               00 
  44 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:3
  45 Column           3    0    2               00 r[2]=
REG[2] =  i:1
  46 Column           3    1    3               00 r[3]=
REG[3] =  i:1
  47 MakeRecord       2    2   18               00 r[18]=mkrec(r[2..3])
REG[18] =  s3[030909...](8)
  48 Insert           4   18    1 t1            1B intkey=r[1] data=r[18]
REG[18] =  s3[030909...](8)
REG[1] =  i:3
  49 Program         -2   50   19 program       01 Call: t2.default
   0 Init             0    0    0 -- TRIGGER t2 00 Start at 0; Start: t2.default (AFTER INSERT ON t1)
   1 Param            5    1    0               00 new.y -> $1
REG[1] =  i:1
   2 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   3 Ne               2   13    1 (BINARY)      51 if r[2]!=r[1] goto 13
REG[2] =  i:1
REG[1] =  i:1
   4 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   5 NewRowid         0    3    0               00 r[3]=rowid
REG[3] =  i:4
   6 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
   7 Param            5    5    0               00 new.y -> $5
REG[5] =  i:1
   8 MakeRecord       4    2    2               00 r[2]=mkrec(r[4..5])
REG[2] =  s3[030009...](8)
   9 Insert           0    2    3 t1            1B intkey=r[3] data=r[2]
REG[2] =  s3[030009...](8)
REG[3] =  i:4
  10 Program          0   11    6 program       01 Call: t2.default
  11 Close            0    0    0               00 
  12 ResetCount       0    0    0               00 
  13 Halt             0    0    0               00 End: t2.default
  50 Next             3   44    0               00 
  44 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:5
  45 Column           3    0    2               00 r[2]=
REG[2] =  i:2
  46 Column           3    1    3               00 r[3]=
REG[3] =  i:2
  47 MakeRecord       2    2   18               00 r[18]=mkrec(r[2..3])
REG[18] =  s5[0301010202.....](8)
  48 Insert           4   18    1 t1            1B intkey=r[1] data=r[18]
REG[18] =  s5[0301010202.....](8)
REG[1] =  i:5
  49 Program         -2   50   19 program       01 Call: t2.default
   0 Init             0    0    0 -- TRIGGER t2 00 Start at 0; Start: t2.default (AFTER INSERT ON t1)
   1 Param            5    1    0               00 new.y -> $1
REG[1] =  i:2
   2 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   3 Ne               2   13    1 (BINARY)      51 if r[2]!=r[1] goto 13
REG[2] =  i:1
REG[1] =  i:2
  13 Halt             0    0    0               00 End: t2.default
  50 Next             3   44    0               00 
  44 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:6
  45 Column           3    0    2               00 r[2]=
REG[2] =  i:3
  46 Column           3    1    3               00 r[3]=
REG[3] =  i:4
  47 MakeRecord       2    2   18               00 r[18]=mkrec(r[2..3])
REG[18] =  s5[0301010304.....](8)
  48 Insert           4   18    1 t1            1B intkey=r[1] data=r[18]
REG[18] =  s5[0301010304.....](8)
REG[1] =  i:6
  49 Program         -2   50   19 program       01 Call: t2.default
   0 Init             0    0    0 -- TRIGGER t2 00 Start at 0; Start: t2.default (AFTER INSERT ON t1)
   1 Param            5    1    0               00 new.y -> $1
REG[1] =  i:4
   2 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   3 Ne               2   13    1 (BINARY)      51 if r[2]!=r[1] goto 13
REG[2] =  i:1
REG[1] =  i:4
  13 Halt             0    0    0               00 End: t2.default
  50 Next             3   44    0               00 
  44 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:7
  45 Column           3    0    2               00 r[2]=
REG[2] =  i:4
  46 Column           3    1    3               00 r[3]=
REG[3] =  i:7
  47 MakeRecord       2    2   18               00 r[18]=mkrec(r[2..3])
REG[18] =  s5[0301010407.....](8)
  48 Insert           4   18    1 t1            1B intkey=r[1] data=r[18]
REG[18] =  s5[0301010407.....](8)
REG[1] =  i:7
  49 Program         -2   50   19 program       01 Call: t2.default
   0 Init             0    0    0 -- TRIGGER t2 00 Start at 0; Start: t2.default (AFTER INSERT ON t1)
   1 Param            5    1    0               00 new.y -> $1
REG[1] =  i:7
   2 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   3 Ne               2   13    1 (BINARY)      51 if r[2]!=r[1] goto 13
REG[2] =  i:1
REG[1] =  i:7
  13 Halt             0    0    0               00 End: t2.default
  50 Next             3   44    0               00 
  44 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:8
  45 Column           3    0    2               00 r[2]=
REG[2] =  i:5
  46 Column           3    1    3               00 r[3]=
REG[3] =  i:11
  47 MakeRecord       2    2   18               00 r[18]=mkrec(r[2..3])
REG[18] =  s5[030101050B.....](8)
  48 Insert           4   18    1 t1            1B intkey=r[1] data=r[18]
REG[18] =  s5[030101050B.....](8)
REG[1] =  i:8
  49 Program         -2   50   19 program       01 Call: t2.default
   0 Init             0    0    0 -- TRIGGER t2 00 Start at 0; Start: t2.default (AFTER INSERT ON t1)
   1 Param            5    1    0               00 new.y -> $1
REG[1] =  i:11
   2 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   3 Ne               2   13    1 (BINARY)      51 if r[2]!=r[1] goto 13
REG[2] =  i:1
REG[1] =  i:11
  13 Halt             0    0    0               00 End: t2.default
  50 Next             3   44    0               00 
  44 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:9
  45 Column           3    0    2               00 r[2]=
REG[2] =  i:6
  46 Column           3    1    3               00 r[3]=
REG[3] =  i:16
  47 MakeRecord       2    2   18               00 r[18]=mkrec(r[2..3])
REG[18] =  s5[0301010610.....](8)
  48 Insert           4   18    1 t1            1B intkey=r[1] data=r[18]
REG[18] =  s5[0301010610.....](8)
REG[1] =  i:9
  49 Program         -2   50   19 program       01 Call: t2.default
   0 Init             0    0    0 -- TRIGGER t2 00 Start at 0; Start: t2.default (AFTER INSERT ON t1)
   1 Param            5    1    0               00 new.y -> $1
REG[1] =  i:16
   2 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   3 Ne               2   13    1 (BINARY)      51 if r[2]!=r[1] goto 13
REG[2] =  i:1
REG[1] =  i:16
  13 Halt             0    0    0               00 End: t2.default
  50 Next             3   44    0               00 
  44 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:10
  45 Column           3    0    2               00 r[2]=
REG[2] =  i:7
  46 Column           3    1    3               00 r[3]=
REG[3] =  i:22
  47 MakeRecord       2    2   18               00 r[18]=mkrec(r[2..3])
REG[18] =  s5[0301010716.....](8)
  48 Insert           4   18    1 t1            1B intkey=r[1] data=r[18]
REG[18] =  s5[0301010716.....](8)
REG[1] =  i:10
  49 Program         -2   50   19 program       01 Call: t2.default
   0 Init             0    0    0 -- TRIGGER t2 00 Start at 0; Start: t2.default (AFTER INSERT ON t1)
   1 Param            5    1    0               00 new.y -> $1
REG[1] =  i:22
   2 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   3 Ne               2   13    1 (BINARY)      51 if r[2]!=r[1] goto 13
REG[2] =  i:1
REG[1] =  i:22
  13 Halt             0    0    0               00 End: t2.default
  50 Next             3   44    0               00 
  44 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:11
  45 Column           3    0    2               00 r[2]=
REG[2] =  i:8
  46 Column           3    1    3               00 r[3]=
REG[3] =  i:29
  47 MakeRecord       2    2   18               00 r[18]=mkrec(r[2..3])
REG[18] =  s5[030101081D.....](8)
  48 Insert           4   18    1 t1            1B intkey=r[1] data=r[18]
REG[18] =  s5[030101081D.....](8)
REG[1] =  i:11
  49 Program         -2   50   19 program       01 Call: t2.default
   0 Init             0    0    0 -- TRIGGER t2 00 Start at 0; Start: t2.default (AFTER INSERT ON t1)
   1 Param            5    1    0               00 new.y -> $1
REG[1] =  i:29
   2 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   3 Ne               2   13    1 (BINARY)      51 if r[2]!=r[1] goto 13
REG[2] =  i:1
REG[1] =  i:29
  13 Halt             0    0    0               00 End: t2.default
  50 Next             3   44    0               00 
  44 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:12
  45 Column           3    0    2               00 r[2]=
REG[2] =  i:9
  46 Column           3    1    3               00 r[3]=
REG[3] =  i:37
  47 MakeRecord       2    2   18               00 r[18]=mkrec(r[2..3])
REG[18] =  s5[0301010925....%](8)
  48 Insert           4   18    1 t1            1B intkey=r[1] data=r[18]
REG[18] =  s5[0301010925....%](8)
REG[1] =  i:12
  49 Program         -2   50   19 program       01 Call: t2.default
   0 Init             0    0    0 -- TRIGGER t2 00 Start at 0; Start: t2.default (AFTER INSERT ON t1)
   1 Param            5    1    0               00 new.y -> $1
REG[1] =  i:37
   2 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   3 Ne               2   13    1 (BINARY)      51 if r[2]!=r[1] goto 13
REG[2] =  i:1
REG[1] =  i:37
  13 Halt             0    0    0               00 End: t2.default
  50 Next             3   44    0               00 
  44 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:13
  45 Column           3    0    2               00 r[2]=
REG[2] =  i:10
  46 Column           3    1    3               00 r[3]=
REG[3] =  i:46
  47 MakeRecord       2    2   18               00 r[18]=mkrec(r[2..3])
REG[18] =  s5[0301010A2E.....](8)
  48 Insert           4   18    1 t1            1B intkey=r[1] data=r[18]
REG[18] =  s5[0301010A2E.....](8)
REG[1] =  i:13
  49 Program         -2   50   19 program       01 Call: t2.default
   0 Init             0    0    0 -- TRIGGER t2 00 Start at 0; Start: t2.default (AFTER INSERT ON t1)
   1 Param            5    1    0               00 new.y -> $1
REG[1] =  i:46
   2 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   3 Ne               2   13    1 (BINARY)      51 if r[2]!=r[1] goto 13
REG[2] =  i:1
REG[1] =  i:46
  13 Halt             0    0    0               00 End: t2.default
  50 Next             3   44    0               00 
  51 Close            3    0    0               00 
  52 Noop             4    0    0               00 
  53 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t4[t.1.](16LE)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t14[t.r.i.g.g.e.r.](16LE)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t.1.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t.1.](16LE)
REG[1] =   s4[t.1.](16LE)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s10[t.a.b.l.e.](16LE)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t14[t.r.i.g.g.e.r.](16LE)
REG[3] =   s10[t.a.b.l.e.](16LE)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s4[t.1.](16LE)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s42[C.R.E.A.T.E. .T](16LE)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s4[t.1.](16LE)
REG[6] =  i:2
REG[7] =   s42[C.R.E.A.T.E. .T](16LE)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t.1.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t.1.](16LE)
REG[1] =   s4[t.1.](16LE)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s14[t.r.i.g.g.e.r.](16LE)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t14[t.r.i.g.g.e.r.](16LE)
REG[3] =   s14[t.r.i.g.g.e.r.](16LE)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [SELECT hex('ð') AS x;]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 String8          0    2    0 ð             00 r[2]='ð'
REG[2] =   t2[..](16LE)
   5 Goto             0    1    0               00 
   1 Function0        1    2    1 hex(1)        01 r[1]=func(r[2])
REG[2] =   t2[..](16LE)
REG[1] =   s8[F.D.F.F.](16LE)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s8[F.D.F.F.](16LE)
   3 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='t1' AND type='table' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t4[t.1.](16LE)
  19 String8          0    4    0 table         00 r[4]='table'
REG[4] =   t10[t.a.b.l.e.](16LE)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t.1.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t.1.](16LE)
REG[1] =   s4[t.1.](16LE)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s10[t.a.b.l.e.](16LE)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t10[t.a.b.l.e.](16LE)
REG[3] =   s10[t.a.b.l.e.](16LE)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s4[t.1.](16LE)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s42[C.R.E.A.T.E. .T](16LE)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s4[t.1.](16LE)
REG[6] =  i:2
REG[7] =   s42[C.R.E.A.T.E. .T](16LE)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t.2.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t.1.](16LE)
REG[1] =   s4[t.2.](16LE)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [COMMIT;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       1    0    0               00 
SQL: [;
UPDATE t1 SET x = zeroblob(10000);]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    1    2 0             01 usesStmtJournal=0
  20 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  21 Integer       10000    5    0               00 r[5]=10000
REG[5] =  i:10000
  22 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:2
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:3
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:3
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:4
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:4
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:5
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:5
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:6
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:6
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:7
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:7
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:8
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:8
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:9
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:9
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:10
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:10
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:11
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:11
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:12
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:12
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:13
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:13
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
  10 RowSetRead       1   17    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:1
  12 Function0        1    5    3 zeroblob(1)   01 r[3]=func(r[5])
REG[5] =  i:10000
REG[3] =  s0[](8)+10000z
  13 Column           0    1    4               00 r[4]=t1.y
REG[4] =  i:2
  14 MakeRecord       3    2    6               00 r[6]=mkrec(r[3..4])
REG[6] =  s10006[05819C2C010000000000000000000000...,............](8)
  15 Insert           0    6    2 t1            05 intkey=r[2] data=r[6]
REG[6] =  s10006[05819C2C010000000000000000000000...,............](8)
REG[2] =  i:1
  16 Goto             0   10    0               00 
  10 RowSetRead       1   17    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:2
  12 Function         1    5    3 zeroblob(1)   01 r[3]=func(r[5])
REG[5] =  i:10000
REG[3] =  s0[](8)+10000z
  13 Column           0    1    4               00 r[4]=t1.y
REG[4] =  i:0
  14 MakeRecord       3    2    6               00 r[6]=mkrec(r[3..4])
REG[6] =  s5[05819C2C08...,.](8)+10000z
  15 Insert           0    6    2 t1            05 intkey=r[2] data=r[6]
REG[6] =  s5[05819C2C08...,.](8)+10000z
REG[2] =  i:2
  16 Goto             0   10    0               00 
  10 RowSetRead       1   17    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:3
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:3
  12 Function         1    5    3 zeroblob(1)   01 r[3]=func(r[5])
REG[5] =  i:10000
REG[3] =  s0[](8)+10000z
  13 Column           0    1    4               00 r[4]=t1.y
REG[4] =  i:1
  14 MakeRecord       3    2    6               00 r[6]=mkrec(r[3..4])
REG[6] =  s5[05819C2C09...,.](8)+10000z
  15 Insert           0    6    2 t1            05 intkey=r[2] data=r[6]
REG[6] =  s5[05819C2C09...,.](8)+10000z
REG[2] =  i:3
  16 Goto             0   10    0               00 
  10 RowSetRead       1   17    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:4
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:4
  12 Function         1    5    3 zeroblob(1)   01 r[3]=func(r[5])
REG[5] =  i:10000
REG[3] =  s0[](8)+10000z
  13 Column           0    1    4               00 r[4]=t1.y
REG[4] =  i:1
  14 MakeRecord       3    2    6               00 r[6]=mkrec(r[3..4])
REG[6] =  s5[05819C2C09...,.](8)+10000z
  15 Insert           0    6    2 t1            05 intkey=r[2] data=r[6]
REG[6] =  s5[05819C2C09...,.](8)+10000z
REG[2] =  i:4
  16 Goto             0   10    0               00 
  10 RowSetRead       1   17    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:5
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:5
  12 Function         1    5    3 zeroblob(1)   01 r[3]=func(r[5])
REG[5] =  i:10000
REG[3] =  s0[](8)+10000z
  13 Column           0    1    4               00 r[4]=t1.y
REG[4] =  i:2
  14 MakeRecord       3    2    6               00 r[6]=mkrec(r[3..4])
REG[6] =  s10006[05819C2C010000000000000000000000...,............](8)
  15 Insert           0    6    2 t1            05 intkey=r[2] data=r[6]
REG[6] =  s10006[05819C2C010000000000000000000000...,............](8)
REG[2] =  i:5
  16 Goto             0   10    0               00 
  10 RowSetRead       1   17    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:6
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:6
  12 Function         1    5    3 zeroblob(1)   01 r[3]=func(r[5])
REG[5] =  i:10000
REG[3] =  s0[](8)+10000z
  13 Column           0    1    4               00 r[4]=t1.y
REG[4] =  i:4
  14 MakeRecord       3    2    6               00 r[6]=mkrec(r[3..4])
REG[6] =  s10006[05819C2C010000000000000000000000...,............](8)
  15 Insert           0    6    2 t1            05 intkey=r[2] data=r[6]
REG[6] =  s10006[05819C2C010000000000000000000000...,............](8)
REG[2] =  i:6
  16 Goto             0   10    0               00 
  10 RowSetRead       1   17    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:7
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:7
  12 Function         1    5    3 zeroblob(1)   01 r[3]=func(r[5])
REG[5] =  i:10000
REG[3] =  s0[](8)+10000z
  13 Column           0    1    4               00 r[4]=t1.y
REG[4] =  i:7
  14 MakeRecord       3    2    6               00 r[6]=mkrec(r[3..4])
REG[6] =  s10006[05819C2C010000000000000000000000...,............](8)
  15 Insert           0    6    2 t1            05 intkey=r[2] data=r[6]
REG[6] =  s10006[05819C2C010000000000000000000000...,............](8)
REG[2] =  i:7
  16 Goto             0   10    0               00 
  10 RowSetRead       1   17    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:8
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:8
  12 Function         1    5    3 zeroblob(1)   01 r[3]=func(r[5])
REG[5] =  i:10000
REG[3] =  s0[](8)+10000z
  13 Column           0    1    4               00 r[4]=t1.y
REG[4] =  i:11
  14 MakeRecord       3    2    6               00 r[6]=mkrec(r[3..4])
REG[6] =  s10006[05819C2C010000000000000000000000...,............](8)
  15 Insert           0    6    2 t1            05 intkey=r[2] data=r[6]
REG[6] =  s10006[05819C2C010000000000000000000000...,............](8)
REG[2] =  i:8
  16 Goto             0   10    0               00 
  10 RowSetRead       1   17    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:9
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:9
  12 Function         1    5    3 zeroblob(1)   01 r[3]=func(r[5])
REG[5] =  i:10000
REG[3] =  s0[](8)+10000z
  13 Column           0    1    4               00 r[4]=t1.y
REG[4] =  i:16
  14 MakeRecord       3    2    6               00 r[6]=mkrec(r[3..4])
REG[6] =  s10006[05819C2C010000000000000000000000...,............](8)
  15 Insert           0    6    2 t1            05 intkey=r[2] data=r[6]
REG[6] =  s10006[05819C2C010000000000000000000000...,............](8)
REG[2] =  i:9
  16 Goto             0   10    0               00 
  10 RowSetRead       1   17    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:10
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:10
  12 Function         1    5    3 zeroblob(1)   01 r[3]=func(r[5])
REG[5] =  i:10000
REG[3] =  s0[](8)+10000z
  13 Column           0    1    4               00 r[4]=t1.y
REG[4] =  i:22
  14 MakeRecord       3    2    6               00 r[6]=mkrec(r[3..4])
REG[6] =  s10006[05819C2C010000000000000000000000...,............](8)
  15 Insert           0    6    2 t1            05 intkey=r[2] data=r[6]
REG[6] =  s10006[05819C2C010000000000000000000000...,............](8)
REG[2] =  i:10
  16 Goto             0   10    0               00 
  10 RowSetRead       1   17    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:11
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:11
  12 Function         1    5    3 zeroblob(1)   01 r[3]=func(r[5])
REG[5] =  i:10000
REG[3] =  s0[](8)+10000z
  13 Column           0    1    4               00 r[4]=t1.y
REG[4] =  i:29
  14 MakeRecord       3    2    6               00 r[6]=mkrec(r[3..4])
REG[6] =  s10006[05819C2C010000000000000000000000...,............](8)
  15 Insert           0    6    2 t1            05 intkey=r[2] data=r[6]
REG[6] =  s10006[05819C2C010000000000000000000000...,............](8)
REG[2] =  i:11
  16 Goto             0   10    0               00 
  10 RowSetRead       1   17    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:12
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:12
  12 Function         1    5    3 zeroblob(1)   01 r[3]=func(r[5])
REG[5] =  i:10000
REG[3] =  s0[](8)+10000z
  13 Column           0    1    4               00 r[4]=t1.y
REG[4] =  i:37
  14 MakeRecord       3    2    6               00 r[6]=mkrec(r[3..4])
REG[6] =  s10006[05819C2C010000000000000000000000...,............](8)
  15 Insert           0    6    2 t1            05 intkey=r[2] data=r[6]
REG[6] =  s10006[05819C2C010000000000000000000000...,............](8)
REG[2] =  i:12
  16 Goto             0   10    0               00 
  10 RowSetRead       1   17    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:13
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:13
  12 Function         1    5    3 zeroblob(1)   01 r[3]=func(r[5])
REG[5] =  i:10000
REG[3] =  s0[](8)+10000z
  13 Column           0    1    4               00 r[4]=t1.y
REG[4] =  i:46
  14 MakeRecord       3    2    6               00 r[6]=mkrec(r[3..4])
REG[6] =  s10006[05819C2C010000000000000000000000...,............](8)
  15 Insert           0    6    2 t1            05 intkey=r[2] data=r[6]
REG[6] =  s10006[05819C2C010000000000000000000000...,............](8)
REG[2] =  i:13
  16 Goto             0   10    0               00 
  10 RowSetRead       1   17    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:13
  17 Noop             0    0    0               00 
  18 Halt             0    0    0               00 
SQL: [;
PRAGMA auto_vacuum = off;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [;
insert into t1(x) values('btest');]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    1    2 0             01 usesStmtJournal=0
  10 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  11 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  12 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:14
   3 String8          0    2    0 btest         00 r[2]='btest'
REG[2] =   t10[b.t.e.s.t.](16LE)
   4 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s13[03210062007400650073007400.!.b.t.e.s.t.](8)
   5 Insert           0    4    1 t1            1B intkey=r[1] data=r[4]
REG[4] =  s13[03210062007400650073007400.!.b.t.e.s.t.](8)
REG[1] =  i:14
   6 Program         -2    7    5 program       01 Call: t2.default
   0 Init             0    0    0 -- TRIGGER t2 00 Start at 0; Start: t2.default (AFTER INSERT ON t1)
   1 Param            5    1    0               00 new.y -> $1
REG[1] =  NULL
   2 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   3 Ne               2   13    1 (BINARY)      51 if r[2]!=r[1] goto 13
REG[2] =  i:1
REG[1] =  NULL
  13 Halt             0    0    0               00 End: t2.default
   7 Noop             0    0    0               00 
   8 Halt             0    0    0               00 
SQL: [;
SELECT x, x+1 AS b_plus_one FROM t1 WHERE x=1 ;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    2 0             01 usesStmtJournal=0
  13 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  14 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  15 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   2 Explain          0    0    0 SCAN TABLE t1 00 
   3 Rewind           0   10    0               00 
   4 Column           0    0    1               00 r[1]=t1.x
REG[1] =  s10000[00000000000000000000000000000000................](16LE)
   5 Ne               2    9    1 (BINARY)      51 if r[2]!=r[1] goto 9
REG[2] =  i:1
REG[1] =  s10000[00000000000000000000000000000000................](16LE)
   9 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=t1.x
REG[1] =  s10000[00000000000000000000000000000000................](16LE)
   5 Ne               2    9    1 (BINARY)      51 if r[2]!=r[1] goto 9
REG[2] =  i:1
REG[1] =  s10000[00000000000000000000000000000000................](16LE)
   9 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=t1.x
REG[1] =  s10000[00000000000000000000000000000000................](16LE)
   5 Ne               2    9    1 (BINARY)      51 if r[2]!=r[1] goto 9
REG[2] =  i:1
REG[1] =  s10000[00000000000000000000000000000000................](16LE)
   9 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=t1.x
REG[1] =  s10000[00000000000000000000000000000000................](16LE)
   5 Ne               2    9    1 (BINARY)      51 if r[2]!=r[1] goto 9
REG[2] =  i:1
REG[1] =  s10000[00000000000000000000000000000000................](16LE)
   9 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=t1.x
REG[1] =  s10000[00000000000000000000000000000000................](16LE)
   5 Ne               2    9    1 (BINARY)      51 if r[2]!=r[1] goto 9
REG[2] =  i:1
REG[1] =  s10000[00000000000000000000000000000000................](16LE)
   9 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=t1.x
REG[1] =  s10000[00000000000000000000000000000000................](16LE)
   5 Ne               2    9    1 (BINARY)      51 if r[2]!=r[1] goto 9
REG[2] =  i:1
REG[1] =  s10000[00000000000000000000000000000000................](16LE)
   9 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=t1.x
REG[1] =  s10000[00000000000000000000000000000000................](16LE)
   5 Ne               2    9    1 (BINARY)      51 if r[2]!=r[1] goto 9
REG[2] =  i:1
REG[1] =  s10000[00000000000000000000000000000000................](16LE)
   9 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=t1.x
REG[1] =  s10000[00000000000000000000000000000000................](16LE)
   5 Ne               2    9    1 (BINARY)      51 if r[2]!=r[1] goto 9
REG[2] =  i:1
REG[1] =  s10000[00000000000000000000000000000000................](16LE)
   9 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=t1.x
REG[1] =  s10000[00000000000000000000000000000000................](16LE)
   5 Ne               2    9    1 (BINARY)      51 if r[2]!=r[1] goto 9
REG[2] =  i:1
REG[1] =  s10000[00000000000000000000000000000000................](16LE)
   9 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=t1.x
REG[1] =  s10000[00000000000000000000000000000000................](16LE)
   5 Ne               2    9    1 (BINARY)      51 if r[2]!=r[1] goto 9
REG[2] =  i:1
REG[1] =  s10000[00000000000000000000000000000000................](16LE)
   9 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=t1.x
REG[1] =  s10000[00000000000000000000000000000000................](16LE)
   5 Ne               2    9    1 (BINARY)      51 if r[2]!=r[1] goto 9
REG[2] =  i:1
REG[1] =  s10000[00000000000000000000000000000000................](16LE)
   9 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=t1.x
REG[1] =  s10000[00000000000000000000000000000000................](16LE)
   5 Ne               2    9    1 (BINARY)      51 if r[2]!=r[1] goto 9
REG[2] =  i:1
REG[1] =  s10000[00000000000000000000000000000000................](16LE)
   9 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=t1.x
REG[1] =  s10000[00000000000000000000000000000000................](16LE)
   5 Ne               2    9    1 (BINARY)      51 if r[2]!=r[1] goto 9
REG[2] =  i:1
REG[1] =  s10000[00000000000000000000000000000000................](16LE)
   9 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=t1.x
REG[1] =   s10[b.t.e.s.t.](16LE)
   5 Ne               2    9    1 (BINARY)      51 if r[2]!=r[1] goto 9
REG[2] =  i:1
REG[1] =   s10[b.t.e.s.t.](16LE)
   9 Next             0    4    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
SELECT * FROM t1 ORDER BY y;]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      0    0    2 0             01 usesStmtJournal=0
  21 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  22 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0   11    0               00 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   6 Column           0    1    3               00 r[3]=t1.y
REG[3] =  i:2
   7 Copy             3    1    0               00 r[1]=r[3]
REG[1] =  i:2
   8 MakeRecord       1    3    4               00 r[4]=mkrec(r[1..3])
REG[4] =  s10008[0601819C2C0102000000000000000000....,...........](8)
   9 SorterInsert     1    4    0               00 
REG[4] =  s10008[0601819C2C0102000000000000000000....,...........](8)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   6 Column           0    1    3               00 r[3]=t1.y
REG[3] =  i:0
   7 Copy             3    1    0               00 r[1]=r[3]
REG[1] =  i:0
   8 MakeRecord       1    3    4               00 r[4]=mkrec(r[1..3])
REG[4] =  s10006[0608819C2C0800000000000000000000....,...........](8)
   9 SorterInsert     1    4    0               00 
REG[4] =  s10006[0608819C2C0800000000000000000000....,...........](8)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   6 Column           0    1    3               00 r[3]=t1.y
REG[3] =  i:1
   7 Copy             3    1    0               00 r[1]=r[3]
REG[1] =  i:1
   8 MakeRecord       1    3    4               00 r[4]=mkrec(r[1..3])
REG[4] =  s10006[0609819C2C0900000000000000000000....,...........](8)
   9 SorterInsert     1    4    0               00 
REG[4] =  s10006[0609819C2C0900000000000000000000....,...........](8)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   6 Column           0    1    3               00 r[3]=t1.y
REG[3] =  i:1
   7 Copy             3    1    0               00 r[1]=r[3]
REG[1] =  i:1
   8 MakeRecord       1    3    4               00 r[4]=mkrec(r[1..3])
REG[4] =  s10006[0609819C2C0900000000000000000000....,...........](8)
   9 SorterInsert     1    4    0               00 
REG[4] =  s10006[0609819C2C0900000000000000000000....,...........](8)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   6 Column           0    1    3               00 r[3]=t1.y
REG[3] =  i:2
   7 Copy             3    1    0               00 r[1]=r[3]
REG[1] =  i:2
   8 MakeRecord       1    3    4               00 r[4]=mkrec(r[1..3])
REG[4] =  s10008[0601819C2C0102000000000000000000....,...........](8)
   9 SorterInsert     1    4    0               00 
REG[4] =  s10008[0601819C2C0102000000000000000000....,...........](8)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   6 Column           0    1    3               00 r[3]=t1.y
REG[3] =  i:4
   7 Copy             3    1    0               00 r[1]=r[3]
REG[1] =  i:4
   8 MakeRecord       1    3    4               00 r[4]=mkrec(r[1..3])
REG[4] =  s10008[0601819C2C0104000000000000000000....,...........](8)
   9 SorterInsert     1    4    0               00 
REG[4] =  s10008[0601819C2C0104000000000000000000....,...........](8)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   6 Column           0    1    3               00 r[3]=t1.y
REG[3] =  i:7
   7 Copy             3    1    0               00 r[1]=r[3]
REG[1] =  i:7
   8 MakeRecord       1    3    4               00 r[4]=mkrec(r[1..3])
REG[4] =  s10008[0601819C2C0107000000000000000000....,...........](8)
   9 SorterInsert     1    4    0               00 
REG[4] =  s10008[0601819C2C0107000000000000000000....,...........](8)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   6 Column           0    1    3               00 r[3]=t1.y
REG[3] =  i:11
   7 Copy             3    1    0               00 r[1]=r[3]
REG[1] =  i:11
   8 MakeRecord       1    3    4               00 r[4]=mkrec(r[1..3])
REG[4] =  s10008[0601819C2C010B000000000000000000....,...........](8)
   9 SorterInsert     1    4    0               00 
REG[4] =  s10008[0601819C2C010B000000000000000000....,...........](8)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   6 Column           0    1    3               00 r[3]=t1.y
REG[3] =  i:16
   7 Copy             3    1    0               00 r[1]=r[3]
REG[1] =  i:16
   8 MakeRecord       1    3    4               00 r[4]=mkrec(r[1..3])
REG[4] =  s10008[0601819C2C0110000000000000000000....,...........](8)
   9 SorterInsert     1    4    0               00 
REG[4] =  s10008[0601819C2C0110000000000000000000....,...........](8)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   6 Column           0    1    3               00 r[3]=t1.y
REG[3] =  i:22
   7 Copy             3    1    0               00 r[1]=r[3]
REG[1] =  i:22
   8 MakeRecord       1    3    4               00 r[4]=mkrec(r[1..3])
REG[4] =  s10008[0601819C2C0116000000000000000000....,...........](8)
   9 SorterInsert     1    4    0               00 
REG[4] =  s10008[0601819C2C0116000000000000000000....,...........](8)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   6 Column           0    1    3               00 r[3]=t1.y
REG[3] =  i:29
   7 Copy             3    1    0               00 r[1]=r[3]
REG[1] =  i:29
   8 MakeRecord       1    3    4               00 r[4]=mkrec(r[1..3])
REG[4] =  s10008[0601819C2C011D000000000000000000....,...........](8)
   9 SorterInsert     1    4    0               00 
REG[4] =  s10008[0601819C2C011D000000000000000000....,...........](8)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   6 Column           0    1    3               00 r[3]=t1.y
REG[3] =  i:37
   7 Copy             3    1    0               00 r[1]=r[3]
REG[1] =  i:37
   8 MakeRecord       1    3    4               00 r[4]=mkrec(r[1..3])
REG[4] =  s10008[0601819C2C0125000000000000000000....,.%.........](8)
   9 SorterInsert     1    4    0               00 
REG[4] =  s10008[0601819C2C0125000000000000000000....,.%.........](8)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   6 Column           0    1    3               00 r[3]=t1.y
REG[3] =  i:46
   7 Copy             3    1    0               00 r[1]=r[3]
REG[1] =  i:46
   8 MakeRecord       1    3    4               00 r[4]=mkrec(r[1..3])
REG[4] =  s10008[0601819C2C012E000000000000000000....,...........](8)
   9 SorterInsert     1    4    0               00 
REG[4] =  s10008[0601819C2C012E000000000000000000....,...........](8)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =   s10[b.t.e.s.t.](16LE)
   6 Column           0    1    3               00 r[3]=t1.y
REG[3] =  NULL
   7 Copy             3    1    0               00 r[1]=r[3]
REG[1] =  NULL
   8 MakeRecord       1    3    4               00 r[4]=mkrec(r[1..3])
REG[4] =  s14[0400210062007400650073007400..!.b.t.e.s.t.](8)
   9 SorterInsert     1    4    0               00 
REG[4] =  s14[0400210062007400650073007400..!.b.t.e.s.t.](8)
  10 Next             0    5    0               01 
  11 Close            0    0    0               00 
  12 OpenPseudo       2    5    4               00 4 columns in r[5]
  13 SorterSort       1   19    0               00 
  14 SorterData       1    5    2               00 r[5]=data
  15 Column           2    1    2               00 r[2]=x
REG[2] =   s10[b.t.e.s.t.](16LE)
  16 Column           2    2    3               00 r[3]=y
REG[3] =  NULL
  17 ResultRow        2    2    0               00 output=r[2..3]
REG[2] =   s10[b.t.e.s.t.](16LE)
REG[3] =  NULL
  18 SorterNext       1   14    0               00 
  14 SorterData       1    5    2               00 r[5]=data
  15 Column           2    1    2               00 r[2]=x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  16 Column           2    2    3               00 r[3]=y
REG[3] =  i:0
  17 ResultRow        2    2    0               00 output=r[2..3]
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
REG[3] =  i:0
  18 SorterNext       1   14    0               00 
  14 SorterData       1    5    2               00 r[5]=data
  15 Column           2    1    2               00 r[2]=x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  16 Column           2    2    3               00 r[3]=y
REG[3] =  i:1
  17 ResultRow        2    2    0               00 output=r[2..3]
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
REG[3] =  i:1
  18 SorterNext       1   14    0               00 
  14 SorterData       1    5    2               00 r[5]=data
  15 Column           2    1    2               00 r[2]=x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  16 Column           2    2    3               00 r[3]=y
REG[3] =  i:1
  17 ResultRow        2    2    0               00 output=r[2..3]
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
REG[3] =  i:1
  18 SorterNext       1   14    0               00 
  14 SorterData       1    5    2               00 r[5]=data
  15 Column           2    1    2               00 r[2]=x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  16 Column           2    2    3               00 r[3]=y
REG[3] =  i:2
  17 ResultRow        2    2    0               00 output=r[2..3]
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
REG[3] =  i:2
  18 SorterNext       1   14    0               00 
  14 SorterData       1    5    2               00 r[5]=data
  15 Column           2    1    2               00 r[2]=x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  16 Column           2    2    3               00 r[3]=y
REG[3] =  i:2
  17 ResultRow        2    2    0               00 output=r[2..3]
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
REG[3] =  i:2
  18 SorterNext       1   14    0               00 
  14 SorterData       1    5    2               00 r[5]=data
  15 Column           2    1    2               00 r[2]=x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  16 Column           2    2    3               00 r[3]=y
REG[3] =  i:4
  17 ResultRow        2    2    0               00 output=r[2..3]
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
REG[3] =  i:4
  18 SorterNext       1   14    0               00 
  14 SorterData       1    5    2               00 r[5]=data
  15 Column           2    1    2               00 r[2]=x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  16 Column           2    2    3               00 r[3]=y
REG[3] =  i:7
  17 ResultRow        2    2    0               00 output=r[2..3]
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
REG[3] =  i:7
  18 SorterNext       1   14    0               00 
  14 SorterData       1    5    2               00 r[5]=data
  15 Column           2    1    2               00 r[2]=x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  16 Column           2    2    3               00 r[3]=y
REG[3] =  i:11
  17 ResultRow        2    2    0               00 output=r[2..3]
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
REG[3] =  i:11
  18 SorterNext       1   14    0               00 
  14 SorterData       1    5    2               00 r[5]=data
  15 Column           2    1    2               00 r[2]=x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  16 Column           2    2    3               00 r[3]=y
REG[3] =  i:16
  17 ResultRow        2    2    0               00 output=r[2..3]
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
REG[3] =  i:16
  18 SorterNext       1   14    0               00 
  14 SorterData       1    5    2               00 r[5]=data
  15 Column           2    1    2               00 r[2]=x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  16 Column           2    2    3               00 r[3]=y
REG[3] =  i:22
  17 ResultRow        2    2    0               00 output=r[2..3]
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
REG[3] =  i:22
  18 SorterNext       1   14    0               00 
  14 SorterData       1    5    2               00 r[5]=data
  15 Column           2    1    2               00 r[2]=x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  16 Column           2    2    3               00 r[3]=y
REG[3] =  i:29
  17 ResultRow        2    2    0               00 output=r[2..3]
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
REG[3] =  i:29
  18 SorterNext       1   14    0               00 
  14 SorterData       1    5    2               00 r[5]=data
  15 Column           2    1    2               00 r[2]=x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  16 Column           2    2    3               00 r[3]=y
REG[3] =  i:37
  17 ResultRow        2    2    0               00 output=r[2..3]
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
REG[3] =  i:37
  18 SorterNext       1   14    0               00 
  14 SorterData       1    5    2               00 r[5]=data
  15 Column           2    1    2               00 r[2]=x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  16 Column           2    2    3               00 r[3]=y
REG[3] =  i:46
  17 ResultRow        2    2    0               00 output=r[2..3]
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
REG[3] =  i:46
  18 SorterNext       1   14    0               00 
  19 Halt             0    0    0               00 
SQL: [;
DELETE FROM t1 WHERE x = 123;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    1    2 0             01 usesStmtJournal=0
  14 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  15 Integer        123    3    0               00 r[3]=123
REG[3] =  i:123
  16 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0   11    0               00 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   6 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =  i:123
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   6 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =  i:123
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   6 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =  i:123
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   6 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =  i:123
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   6 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =  i:123
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   6 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =  i:123
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   6 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =  i:123
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   6 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =  i:123
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   6 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =  i:123
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   6 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =  i:123
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   6 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =  i:123
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   6 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =  i:123
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   6 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =  i:123
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =   s10[b.t.e.s.t.](16LE)
   6 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =  i:123
REG[2] =   s10[b.t.e.s.t.](16LE)
  10 Next             0    5    0               01 
  11 Noop             0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;
SELECT x FROM (SELECT x FROM t1 ORDER BY x LIMIT 3) WHERE x=1;]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    0    2 0             01 usesStmtJournal=0
  32 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  33 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  34 Goto             0    1    0               00 
   1 InitCoroutine    1   22    2               00 sqlite_sq_20F3810
  22 Explain          0    0    0 SCAN SUBQUERY 1 00 
  23 InitCoroutine    1    0    2               00 
  24 Yield            1   30    0               00 next row of "sqlite_sq_20F3810"
REG[1] =  i:1
REG[1] =  i:24
   2 OpenEphemeral    2    3    0 k(1,B)        00 nColumn=3
   3 Integer          3    2    0               00 r[2]=3; LIMIT counter
REG[2] =  i:3
   4 OpenRead         1    2    0 1             00 root=2 iDb=0; t1
   5 Explain          1    0    0 SCAN TABLE t1 00 
   6 Rewind           1   16    0               00 
   7 Column           1    0    5               00 r[5]=t1.x
REG[5] =  s10000[00000000000000000000000000000000................](16LE)
   8 Copy             5    3    0               00 r[3]=r[5]
REG[3] =  s10000[00000000000000000000000000000000................](16LE)
   9 Sequence         2    4    0               00 r[4]=cursor[2].ctr++
REG[4] =  i:0
  10 MakeRecord       3    3    6               00 r[6]=mkrec(r[3..5])
REG[6] =  s20008[08819C2C08819C2C0000000000000000...,...,........](8)
  11 IdxInsert        2    6    0               00 key=r[6]
REG[6] =  s20008[08819C2C08819C2C0000000000000000...,...,........](8)
  12 IfNotZero        2   15    1               00 if r[2]!=0 then r[2]-=1, goto 15
REG[2] =  i:3
  15 Next             1    7    0               01 
   7 Column           1    0    5               00 r[5]=t1.x
REG[5] =  s10000[00000000000000000000000000000000................](16LE)
   8 Copy             5    3    0               00 r[3]=r[5]
REG[3] =  s10000[00000000000000000000000000000000................](16LE)
   9 Sequence         2    4    0               00 r[4]=cursor[2].ctr++
REG[4] =  i:1
  10 MakeRecord       3    3    6               00 r[6]=mkrec(r[3..5])
REG[6] =  s20008[08819C2C09819C2C0000000000000000...,...,........](8)
  11 IdxInsert        2    6    0               00 key=r[6]
REG[6] =  s20008[08819C2C09819C2C0000000000000000...,...,........](8)
  12 IfNotZero        2   15    1               00 if r[2]!=0 then r[2]-=1, goto 15
REG[2] =  i:2
  15 Next             1    7    0               01 
   7 Column           1    0    5               00 r[5]=t1.x
REG[5] =  s10000[00000000000000000000000000000000................](16LE)
   8 Copy             5    3    0               00 r[3]=r[5]
REG[3] =  s10000[00000000000000000000000000000000................](16LE)
   9 Sequence         2    4    0               00 r[4]=cursor[2].ctr++
REG[4] =  i:2
  10 MakeRecord       3    3    6               00 r[6]=mkrec(r[3..5])
REG[6] =  s20009[08819C2C01819C2C0000000000000000...,...,........](8)
  11 IdxInsert        2    6    0               00 key=r[6]
REG[6] =  s20009[08819C2C01819C2C0000000000000000...,...,........](8)
  12 IfNotZero        2   15    1               00 if r[2]!=0 then r[2]-=1, goto 15
REG[2] =  i:1
  15 Next             1    7    0               01 
   7 Column           1    0    5               00 r[5]=t1.x
REG[5] =  s10000[00000000000000000000000000000000................](16LE)
   8 Copy             5    3    0               00 r[3]=r[5]
REG[3] =  s10000[00000000000000000000000000000000................](16LE)
   9 Sequence         2    4    0               00 r[4]=cursor[2].ctr++
REG[4] =  i:3
  10 MakeRecord       3    3    6               00 r[6]=mkrec(r[3..5])
REG[6] =  s20009[08819C2C01819C2C0000000000000000...,...,........](8)
  11 IdxInsert        2    6    0               00 key=r[6]
REG[6] =  s20009[08819C2C01819C2C0000000000000000...,...,........](8)
  12 IfNotZero        2   15    1               00 if r[2]!=0 then r[2]-=1, goto 15
REG[2] =  i:0
  13 Last             2    0    0               00 
  14 Delete           2    0    0               00 
  15 Next             1    7    0               01 
   7 Column           1    0    5               00 r[5]=t1.x
REG[5] =  s10000[00000000000000000000000000000000................](16LE)
   8 Copy             5    3    0               00 r[3]=r[5]
REG[3] =  s10000[00000000000000000000000000000000................](16LE)
   9 Sequence         2    4    0               00 r[4]=cursor[2].ctr++
REG[4] =  i:4
  10 MakeRecord       3    3    6               00 r[6]=mkrec(r[3..5])
REG[6] =  s20009[08819C2C01819C2C0000000000000000...,...,........](8)
  11 IdxInsert        2    6    0               00 key=r[6]
REG[6] =  s20009[08819C2C01819C2C0000000000000000...,...,........](8)
  12 IfNotZero        2   15    1               00 if r[2]!=0 then r[2]-=1, goto 15
REG[2] =  i:0
  13 Last             2    0    0               00 
  14 Delete           2    0    0               00 
  15 Next             1    7    0               01 
   7 Column           1    0    5               00 r[5]=t1.x
REG[5] =  s10000[00000000000000000000000000000000................](16LE)
   8 Copy             5    3    0               00 r[3]=r[5]
REG[3] =  s10000[00000000000000000000000000000000................](16LE)
   9 Sequence         2    4    0               00 r[4]=cursor[2].ctr++
REG[4] =  i:5
  10 MakeRecord       3    3    6               00 r[6]=mkrec(r[3..5])
REG[6] =  s20009[08819C2C01819C2C0000000000000000...,...,........](8)
  11 IdxInsert        2    6    0               00 key=r[6]
REG[6] =  s20009[08819C2C01819C2C0000000000000000...,...,........](8)
  12 IfNotZero        2   15    1               00 if r[2]!=0 then r[2]-=1, goto 15
REG[2] =  i:0
  13 Last             2    0    0               00 
  14 Delete           2    0    0               00 
  15 Next             1    7    0               01 
   7 Column           1    0    5               00 r[5]=t1.x
REG[5] =  s10000[00000000000000000000000000000000................](16LE)
   8 Copy             5    3    0               00 r[3]=r[5]
REG[3] =  s10000[00000000000000000000000000000000................](16LE)
   9 Sequence         2    4    0               00 r[4]=cursor[2].ctr++
REG[4] =  i:6
  10 MakeRecord       3    3    6               00 r[6]=mkrec(r[3..5])
REG[6] =  s20009[08819C2C01819C2C0000000000000000...,...,........](8)
  11 IdxInsert        2    6    0               00 key=r[6]
REG[6] =  s20009[08819C2C01819C2C0000000000000000...,...,........](8)
  12 IfNotZero        2   15    1               00 if r[2]!=0 then r[2]-=1, goto 15
REG[2] =  i:0
  13 Last             2    0    0               00 
  14 Delete           2    0    0               00 
  15 Next             1    7    0               01 
   7 Column           1    0    5               00 r[5]=t1.x
REG[5] =  s10000[00000000000000000000000000000000................](16LE)
   8 Copy             5    3    0               00 r[3]=r[5]
REG[3] =  s10000[00000000000000000000000000000000................](16LE)
   9 Sequence         2    4    0               00 r[4]=cursor[2].ctr++
REG[4] =  i:7
  10 MakeRecord       3    3    6               00 r[6]=mkrec(r[3..5])
REG[6] =  s20009[08819C2C01819C2C0000000000000000...,...,........](8)
  11 IdxInsert        2    6    0               00 key=r[6]
REG[6] =  s20009[08819C2C01819C2C0000000000000000...,...,........](8)
  12 IfNotZero        2   15    1               00 if r[2]!=0 then r[2]-=1, goto 15
REG[2] =  i:0
  13 Last             2    0    0               00 
  14 Delete           2    0    0               00 
  15 Next             1    7    0               01 
   7 Column           1    0    5               00 r[5]=t1.x
REG[5] =  s10000[00000000000000000000000000000000................](16LE)
   8 Copy             5    3    0               00 r[3]=r[5]
REG[3] =  s10000[00000000000000000000000000000000................](16LE)
   9 Sequence         2    4    0               00 r[4]=cursor[2].ctr++
REG[4] =  i:8
  10 MakeRecord       3    3    6               00 r[6]=mkrec(r[3..5])
REG[6] =  s20009[08819C2C01819C2C0000000000000000...,...,........](8)
  11 IdxInsert        2    6    0               00 key=r[6]
REG[6] =  s20009[08819C2C01819C2C0000000000000000...,...,........](8)
  12 IfNotZero        2   15    1               00 if r[2]!=0 then r[2]-=1, goto 15
REG[2] =  i:0
  13 Last             2    0    0               00 
  14 Delete           2    0    0               00 
  15 Next             1    7    0               01 
   7 Column           1    0    5               00 r[5]=t1.x
REG[5] =  s10000[00000000000000000000000000000000................](16LE)
   8 Copy             5    3    0               00 r[3]=r[5]
REG[3] =  s10000[00000000000000000000000000000000................](16LE)
   9 Sequence         2    4    0               00 r[4]=cursor[2].ctr++
REG[4] =  i:9
  10 MakeRecord       3    3    6               00 r[6]=mkrec(r[3..5])
REG[6] =  s20009[08819C2C01819C2C0000000000000000...,...,........](8)
  11 IdxInsert        2    6    0               00 key=r[6]
REG[6] =  s20009[08819C2C01819C2C0000000000000000...,...,........](8)
  12 IfNotZero        2   15    1               00 if r[2]!=0 then r[2]-=1, goto 15
REG[2] =  i:0
  13 Last             2    0    0               00 
  14 Delete           2    0    0               00 
  15 Next             1    7    0               01 
   7 Column           1    0    5               00 r[5]=t1.x
REG[5] =  s10000[00000000000000000000000000000000................](16LE)
   8 Copy             5    3    0               00 r[3]=r[5]
REG[3] =  s10000[00000000000000000000000000000000................](16LE)
   9 Sequence         2    4    0               00 r[4]=cursor[2].ctr++
REG[4] =  i:10
  10 MakeRecord       3    3    6               00 r[6]=mkrec(r[3..5])
REG[6] =  s20009[08819C2C01819C2C0000000000000000...,...,........](8)
  11 IdxInsert        2    6    0               00 key=r[6]
REG[6] =  s20009[08819C2C01819C2C0000000000000000...,...,........](8)
  12 IfNotZero        2   15    1               00 if r[2]!=0 then r[2]-=1, goto 15
REG[2] =  i:0
  13 Last             2    0    0               00 
  14 Delete           2    0    0               00 
  15 Next             1    7    0               01 
   7 Column           1    0    5               00 r[5]=t1.x
REG[5] =  s10000[00000000000000000000000000000000................](16LE)
   8 Copy             5    3    0               00 r[3]=r[5]
REG[3] =  s10000[00000000000000000000000000000000................](16LE)
   9 Sequence         2    4    0               00 r[4]=cursor[2].ctr++
REG[4] =  i:11
  10 MakeRecord       3    3    6               00 r[6]=mkrec(r[3..5])
REG[6] =  s20009[08819C2C01819C2C0000000000000000...,...,........](8)
  11 IdxInsert        2    6    0               00 key=r[6]
REG[6] =  s20009[08819C2C01819C2C0000000000000000...,...,........](8)
  12 IfNotZero        2   15    1               00 if r[2]!=0 then r[2]-=1, goto 15
REG[2] =  i:0
  13 Last             2    0    0               00 
  14 Delete           2    0    0               00 
  15 Next             1    7    0               01 
   7 Column           1    0    5               00 r[5]=t1.x
REG[5] =  s10000[00000000000000000000000000000000................](16LE)
   8 Copy             5    3    0               00 r[3]=r[5]
REG[3] =  s10000[00000000000000000000000000000000................](16LE)
   9 Sequence         2    4    0               00 r[4]=cursor[2].ctr++
REG[4] =  i:12
  10 MakeRecord       3    3    6               00 r[6]=mkrec(r[3..5])
REG[6] =  s20009[08819C2C01819C2C0000000000000000...,...,........](8)
  11 IdxInsert        2    6    0               00 key=r[6]
REG[6] =  s20009[08819C2C01819C2C0000000000000000...,...,........](8)
  12 IfNotZero        2   15    1               00 if r[2]!=0 then r[2]-=1, goto 15
REG[2] =  i:0
  13 Last             2    0    0               00 
  14 Delete           2    0    0               00 
  15 Next             1    7    0               01 
   7 Column           1    0    5               00 r[5]=t1.x
REG[5] =   s10[b.t.e.s.t.](16LE)
   8 Copy             5    3    0               00 r[3]=r[5]
REG[3] =   s10[b.t.e.s.t.](16LE)
   9 Sequence         2    4    0               00 r[4]=cursor[2].ctr++
REG[4] =  i:13
  10 MakeRecord       3    3    6               00 r[6]=mkrec(r[3..5])
REG[6] =  s25[04210121620074006500730074000D62.!.!b.t.e.s.t..b](8)
  11 IdxInsert        2    6    0               00 key=r[6]
REG[6] =  s25[04210121620074006500730074000D62.!.!b.t.e.s.t..b](8)
  12 IfNotZero        2   15    1               00 if r[2]!=0 then r[2]-=1, goto 15
REG[2] =  i:0
  13 Last             2    0    0               00 
  14 Delete           2    0    0               00 
  15 Next             1    7    0               01 
  16 Close            1    0    0               00 
  17 Sort             2   21    0               00 
  18 Column           2    2    5               00 r[5]=x
REG[5] =   s10[b.t.e.s.t.](16LE)
  19 Yield            1    0    0               00 
REG[1] =  i:24
REG[1] =  i:19
  25 Copy             5    7    0               00 r[7]=r[5]; sqlite_sq_20F3810.x
REG[7] =   s10[b.t.e.s.t.](16LE)
  26 Ne               8   29    7 (BINARY)      51 if r[8]!=r[7] goto 29
REG[8] =  i:1
REG[7] =   s10[b.t.e.s.t.](16LE)
  29 Goto             0   24    0               00 
  24 Yield            1   30    0               00 next row of "sqlite_sq_20F3810"
REG[1] =  i:19
REG[1] =  i:24
  20 Next             2   18    0               00 
  18 Column           2    2    5               00 r[5]=x
REG[5] =  s10000[00000000000000000000000000000000................](16LE)
  19 Yield            1    0    0               00 
REG[1] =  i:24
REG[1] =  i:19
  25 Copy             5    7    0               00 r[7]=r[5]; sqlite_sq_20F3810.x
REG[7] =  s10000[00000000000000000000000000000000................](16LE)
  26 Ne               8   29    7 (BINARY)      51 if r[8]!=r[7] goto 29
REG[8] =  i:1
REG[7] =  s10000[00000000000000000000000000000000................](16LE)
  29 Goto             0   24    0               00 
  24 Yield            1   30    0               00 next row of "sqlite_sq_20F3810"
REG[1] =  i:19
REG[1] =  i:24
  20 Next             2   18    0               00 
  18 Column           2    2    5               00 r[5]=x
REG[5] =  s10000[00000000000000000000000000000000................](16LE)
  19 Yield            1    0    0               00 
REG[1] =  i:24
REG[1] =  i:19
  25 Copy             5    7    0               00 r[7]=r[5]; sqlite_sq_20F3810.x
REG[7] =  s10000[00000000000000000000000000000000................](16LE)
  26 Ne               8   29    7 (BINARY)      51 if r[8]!=r[7] goto 29
REG[8] =  i:1
REG[7] =  s10000[00000000000000000000000000000000................](16LE)
  29 Goto             0   24    0               00 
  24 Yield            1   30    0               00 next row of "sqlite_sq_20F3810"
REG[1] =  i:19
REG[1] =  i:24
  20 Next             2   18    0               00 
  21 EndCoroutine     1    0    0               00 
REG[1] =  i:24
  30 Halt             0    0    0               00 
SQL: [;
SELECT count(*) FROM (SELECT x FROM t1 ORDER BY x) WHERE x=1;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0    2 0             01 usesStmtJournal=0
  26 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  27 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  28 Goto             0    1    0               00 
   1 InitCoroutine    1   13    2               00 sqlite_sq_20F3410
  13 Null             0    5    5               00 r[5..5]=NULL
REG[5] =  NULL
  14 Explain          0    0    0 SCAN SUBQUERY 1 00 
  15 InitCoroutine    1    0    2               00 
  16 Yield            1   21    0               00 next row of "sqlite_sq_20F3410"
REG[1] =  i:1
REG[1] =  i:16
   2 Noop             2    3    0               00 
   3 OpenRead         1    2    0 1             00 root=2 iDb=0; t1
   4 Explain          1    0    0 SCAN TABLE t1 00 
   5 Rewind           1   11    0               00 
   6 Column           1    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   7 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =  i:1
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  10 Next             1    6    0               01 
   6 Column           1    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   7 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =  i:1
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  10 Next             1    6    0               01 
   6 Column           1    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   7 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =  i:1
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  10 Next             1    6    0               01 
   6 Column           1    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   7 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =  i:1
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  10 Next             1    6    0               01 
   6 Column           1    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   7 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =  i:1
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  10 Next             1    6    0               01 
   6 Column           1    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   7 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =  i:1
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  10 Next             1    6    0               01 
   6 Column           1    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   7 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =  i:1
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  10 Next             1    6    0               01 
   6 Column           1    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   7 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =  i:1
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  10 Next             1    6    0               01 
   6 Column           1    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   7 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =  i:1
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  10 Next             1    6    0               01 
   6 Column           1    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   7 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =  i:1
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  10 Next             1    6    0               01 
   6 Column           1    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   7 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =  i:1
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  10 Next             1    6    0               01 
   6 Column           1    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   7 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =  i:1
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  10 Next             1    6    0               01 
   6 Column           1    0    2               00 r[2]=t1.x
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
   7 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =  i:1
REG[2] =  s10000[00000000000000000000000000000000................](16LE)
  10 Next             1    6    0               01 
   6 Column           1    0    2               00 r[2]=t1.x
REG[2] =   s10[b.t.e.s.t.](16LE)
   7 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =  i:1
REG[2] =   s10[b.t.e.s.t.](16LE)
  10 Next             1    6    0               01 
  11 Close            1    0    0               00 
  12 EndCoroutine     1    0    0               00 
REG[1] =  i:16
  21 AggFinal         5    0    0 count(0)      00 accum=r[5] N=0
  22 Copy             5    7    0               00 r[7]=r[5]
REG[7] =  i:0
  23 ResultRow        7    1    0               00 output=r[7]
REG[7] =  i:0
  24 Halt             0    0    0               00 
SQL: [;
insert into t1(x) values('btest');]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    1    2 0             01 usesStmtJournal=0
  10 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  11 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  12 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:15
   3 String8          0    2    0 btest         00 r[2]='btest'
REG[2] =   t10[b.t.e.s.t.](16LE)
   4 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s13[03210062007400650073007400.!.b.t.e.s.t.](8)
   5 Insert           0    4    1 t1            1B intkey=r[1] data=r[4]
REG[4] =  s13[03210062007400650073007400.!.b.t.e.s.t.](8)
REG[1] =  i:15
   6 Program         -2    7    5 program       01 Call: t2.default
   0 Init             0    0    0 -- TRIGGER t2 00 Start at 0; Start: t2.default (AFTER INSERT ON t1)
   1 Param            5    1    0               00 new.y -> $1
REG[1] =  NULL
   2 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   3 Ne               2   13    1 (BINARY)      51 if r[2]!=r[1] goto 13
REG[2] =  i:1
REG[1] =  NULL
  13 Halt             0    0    0               00 End: t2.default
   7 Noop             0    0    0               00 
   8 Halt             0    0    0               00 
SQL: [;
INSERT INTO t1 VALUES(5, zeroblob(10240));]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    1    2 0             01 usesStmtJournal=0
  11 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  12 Integer       10240    4    0               00 r[4]=10240
REG[4] =  i:10240
  13 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:16
   3 Integer          5    2    0               00 r[2]=5
REG[2] =  i:5
   4 Function0        1    4    3 zeroblob(1)   01 r[3]=func(r[4])
REG[4] =  i:10240
REG[3] =  s0[](8)+10240z
   5 MakeRecord       2    2    5               00 r[5]=mkrec(r[2..3])
REG[5] =  s6[050181A00C05......](8)+10240z
   6 Insert           0    5    1 t1            1B intkey=r[1] data=r[5]
REG[5] =  s6[050181A00C05......](8)+10240z
REG[1] =  i:16
   7 Program         -2    8    6 program       01 Call: t2.default
   0 Init             0    0    0 -- TRIGGER t2 00 Start at 0; Start: t2.default (AFTER INSERT ON t1)
   1 Param            5    1    0               00 new.y -> $1
REG[1] =  e0[](8)+10240z
   2 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   3 Ne               2   13    1 (BINARY)      51 if r[2]!=r[1] goto 13
REG[2] =  i:1
REG[1] =  e0[](8)+10240z
  13 Halt             0    0    0               00 End: t2.default
   8 Noop             0    0    0               00 
   9 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f1858482859 in __GI_abort () at abort.c:79
#2  0x00007f1858482729 in __assert_fail_base (fmt=0x7f1858618588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", 
    assertion=0x216480 "((p->szMalloc>0 && p->z==p->zMalloc)? 1 : 0) + ((p->flags&MEM_Dyn)!=0 ? 1 : 0) + ((p->flags&MEM_Ephem)!=0 ? 1 : 0) + ((p->flags&MEM_Static)!=0 ? 1 : 0) == 1", file=0x222c23 "sqlite3.c", line=68297, 
    function=<optimized out>) at assert.c:92
#3  0x00007f1858493fd6 in __GI___assert_fail (
    assertion=0x216480 "((p->szMalloc>0 && p->z==p->zMalloc)? 1 : 0) + ((p->flags&MEM_Dyn)!=0 ? 1 : 0) + ((p->flags&MEM_Ephem)!=0 ? 1 : 0) + ((p->flags&MEM_Static)!=0 ? 1 : 0) == 1", file=0x222c23 "sqlite3.c", line=68297, 
    function=0x21e154 "int sqlite3VdbeCheckMemInvariants(Mem *)") at assert.c:101
#4  0x00000000002795e3 in sqlite3VdbeCheckMemInvariants (p=0x20f55b0) at sqlite3.c:68292
#5  0x00000000002c8632 in releaseMemArray (p=0x20f55b0, N=<optimized out>) at sqlite3.c:71417
#6  0x00000000002e366e in sqlite3VdbeHalt (p=0x20e0df0) at sqlite3.c:71458
#7  0x00000000003e1666 in sqlite3VdbeExec (p=<optimized out>) at sqlite3.c:77673
#8  0x000000000028b140 in sqlite3_step (pStmt=<optimized out>) at sqlite3.c:75131
#9  0x000000000024b5e9 in main (argc=1, argv=0x7ffc32b62828) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 121422] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
