GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000081,sig:06,src:008324+007407,time:6344934,execs:700549,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL-trace: ;
PRAGMA sql_trace=on;
SQL-trace: SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: CREATE TABLE t1(x, y, t2);
SQL-trace: ;
CREATE TEMP TABLE i1y(a, b, sqlsim0);
SQL-trace: ATTACH 'test.db' as db12;
SQL-trace: ;
CREATE TEMP TABLE IF NOT EXISTS sqlsim1(sqlsim2);
SQL-trace: SELECT count(*) FROM i1y;
SQL-trace: SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: ;
PRAGMA journal_mode = off;
SQL-trace: BEGIN EXCLUSIVE;
SQL-trace: ;
PRAGMA page_size;
SQL-trace: PRAGMA database_list;
SQL-trace: CREATE TEMP TRIGGER sqlsim3 AFTER INSERT ON i1y BEGIN
      INSERT INTO i1y VALUES(
           printf('INSERT i1y:  rowid=%sqlsim0, sqlsim0=%s, sqlsim0=%s, sqlsim0=%s, sqlsim0=%s',
                  new.rowid, quote(new.sqlsim0), quote(new.sqlsim0), quote(new.sqlsim0),
                  quote(new.sqlsim0)));
    END;
SQL-trace: ;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE type='trigger' AND name='i1y' ORDER BY rowid;
SQL-trace: CREATE TEMP TRIGGER sqlsim4 AFTER INSERT ON i1y BEGIN
      INSERT INTO i1y VALUES(
           printf('INSERT i1y:  rowid=%b, b=%s, b=%s, b=%s, b=%s',
                  new.rowid, quote(new.b), quote(new.b), quote(new.b),
                  quote(new.b)));
    END;
SQL-trace: ;
SELECT x FROM t1 WHERE x IN (SELECT x FROM t1 WHERE 1);
SQL-trace: ;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='f' AND type='table' ORDER BY rowid;
SQL-trace: ;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='f' AND type='table' ORDER BY rowid;
SQL-trace: ;
SELECT y, typeof(y) FROM t1;
SQL-trace: ;
INSERT INTO sqlsim1 VALUES(0.5);
SQL-trace: ;
      ;select b from i1y order by rowid
      ;
SQL-trace: INSERT INTO sqlsim1 VALUES(-9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999.0);
SQL-trace: SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: ;
PRAGMA page_size=2048;
SQL-trace: SELECT * FROM t1;
SQL-trace: ;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: ;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='i1y' AND type!='trigger' ORDER BY rowid;
SQL-trace: SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: ;
INSERT INTO t1(y,y,y) VALUES('m','',96);
SQL-trace: ;
BEGIN;
SQL-trace: SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: SELECT randomblob($pgsz);
SQL-trace: ;
INSERT INTO t1(x,x,x) VALUES('','t1',100);
SQL-trace: SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: ;
INSERT INTO sqlsim1 VALUES('alwyn');
SQL-trace: SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='i1' AND type='index' ORDER BY rowid;
SQL-trace: SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: ;
INSERT INTO sqlsim1 VALUES('barson');
SQL-trace: ;
INSERT INTO sqlsim1 VALUES('brandybuck');
SQL-trace: ;
INSERT INTO sqlsim1 VALUES('canopy');
SQL-trace: ;
INSERT INTO sqlsim1 VALUES('garrison');
SQL-trace: ;
INSERT INTO sqlsim1 VALUES('gibbon terrace');
SQL-trace: ;
INSERT INTO sqlsim1 VALUES('golden pond');
SQL-trace: ;
INSERT INTO sqlsim1 VALUES('liberty bell');
SQL-trace: ;
INSERT INTO sqlsim1 VALUES('madison park');
SQL-trace: ;
INSERT INTO sqlsim1 VALUES('mallard grove');
SQL-trace: ;
INSERT INTO sqlsim1 VALUES('marathon hill');
SQL-trace: ;
INSERT INTO sqlsim1 VALUES('perkins');
SQL-trace: ;
INSERT INTO sqlsim1 VALUES('pierpoint');
SQL-trace: ;
INSERT INTO sqlsim1 VALUES('polk and white');
SQL-trace: ;
INSERT INTO sqlsim1 VALUES('powatan');
SQL-trace: ;
INSERT INTO sqlsim1 VALUES('ruth polk');
SQL-trace: ;
INSERT INTO sqlsim1 VALUES('sunwalk');
SQL-trace: ;
INSERT INTO sqlsim1 VALUES('towhee');
SQL-trace: ;
INSERT INTO sqlsim1 VALUES('woodard');
SQL-trace: ;
INSERT INTO sqlsim1 VALUES('yandem');
SQL-trace: SELECT name, rootpage, sql FROM "temp".sqlite_temp_master ORDER BY rowid;
SQL-trace: CREATE INDEX id ON i1y(a);
SQL-trace: ;
CREATE VIRTUAL TABLE x3 USING fuzzer(i1y);
SQL-trace: ;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='x3' AND type='table' ORDER BY rowid;
SQL-trace: SELECT 0x2000000;
SQL-trace: SELECT 0x8000000;
SQL-trace: SELECT 0X1000000000000000;
SQL-trace: SELECT 0x009;
SQL-trace: SELECT 0x00e;
SQL-trace: ;
DROP TABLE IF EXISTS t1;
[Inferior 1 (process 119347) exited normally]
(gdb) (gdb) quit
