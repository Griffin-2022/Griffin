GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000213,sig:06,src:008220+006682,time:16201255,execs:2237106,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT typeof( 
  CAST(X'002D0031003100320035003800390039003900300036003800340032003600320034' AS INTEGER) 
),  
  CAST(X'002D0031003100320035003800390039003900300036003800340032003600320034' AS INTEGER) 
;]
VDBE Trace:
   0 Init             0    6    0               00 Start at 6
   6 Blob            34    3    0               00 r[3]= (len=34)
REG[3] =  t34[002D0031003100320035003800390039.-.1.1.2.5.8.9.9](8)
   7 Cast             3   68    0               00 affinity(r[3])
REG[3] =  t34[002D0031003100320035003800390039.-.1.1.2.5.8.9.9](8)
   8 Goto             0    1    0               00 
   1 Function0        1    3    1 typeof(1)     01 r[1]=func(r[3])
REG[3] =  i:0
REG[1] =   t7[integer](8)
   2 Blob            34    2    0               00 r[2]= (len=34)
REG[2] =  t34[002D0031003100320035003800390039.-.1.1.2.5.8.9.9](8)
   3 Cast             2   68    0               00 affinity(r[2])
REG[2] =  t34[002D0031003100320035003800390039.-.1.1.2.5.8.9.9](8)
   4 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =   t7[integer](8)
REG[2] =  i:0
   5 Halt             0    0    0               00 
SQL: [PRAGMA page_size;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Int64            0    1    0 1024          00 r[1]=1024
REG[1] =  i:1024
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1024
   3 Halt             0    0    0               00 
SQL: [INSERT INTO t1 VALUES(15,32768);]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    1    1 1             01 usesStmtJournal=0
  15 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  16 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 Integer         15    1    0               00 r[1]=15
REG[1] =  i:15
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  i:15
   5 MustBeInt        1    0    0               00 
REG[1] =  i:15
   6 SoftNull         2    0    0               00 r[2]=NULL
   7 Integer       32768    3    0               00 r[3]=32768
REG[3] =  i:32768
   8 NotExists        0   10    1               00 intkey=r[1]
REG[1] =  i:15
  10 MakeRecord       2    2    4 D             00 r[4]=mkrec(r[2..3])
REG[4] =  s6[030003008000......](8)
  11 Insert           0    4    1 t1            13 intkey=r[1] data=r[4]
REG[4] =  s6[030003008000......](8)
REG[1] =  i:15
  12 Noop             0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    1 1             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s47[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s47[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
PRAGMA error;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [PRAGMA auto_vacuum = 0;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [;
pragma cache_size=16;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [;
INSERT INTO t1 VALUES(5, '.125e+3');]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    1    1 1             01 usesStmtJournal=0
  15 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  16 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 Integer          5    1    0               00 r[1]=5
REG[1] =  i:5
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  i:5
   5 MustBeInt        1    0    0               00 
REG[1] =  i:5
   6 SoftNull         2    0    0               00 r[2]=NULL
   7 String8          0    3    0 .125e+3       00 r[3]='.125e+3'
REG[3] =   t7[.125e+3](8)
   8 NotExists        0   10    1               00 intkey=r[1]
REG[1] =  i:5
  10 MakeRecord       2    2    4 D             00 r[4]=mkrec(r[2..3])
REG[4] =  s10[03001B2E313235652B33....125e+3](8)
  11 Insert           0    4    1 t1            13 intkey=r[1] data=r[4]
REG[4] =  s10[03001B2E313235652B33....125e+3](8)
REG[1] =  i:5
  12 Noop             0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [;
INSERT INTO t1 VALUES(12, '  .125');]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    1    1 1             01 usesStmtJournal=0
  15 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  16 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 Integer         12    1    0               00 r[1]=12
REG[1] =  i:12
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  i:12
   5 MustBeInt        1    0    0               00 
REG[1] =  i:12
   6 SoftNull         2    0    0               00 r[2]=NULL
   7 String8          0    3    0   .125        00 r[3]='  .125'
REG[3] =   t6[  .125](8)
   8 NotExists        0   10    1               00 intkey=r[1]
REG[1] =  i:12
  10 MakeRecord       2    2    4 D             00 r[4]=mkrec(r[2..3])
REG[4] =  s9[03001920202E313235...  .125](8)
  11 Insert           0    4    1 t1            13 intkey=r[1] data=r[4]
REG[4] =  s9[03001920202E313235...  .125](8)
REG[1] =  i:12
  12 Noop             0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [PRAGMA journal_mode=OFF;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 JournalMode      2    1    2               00 
REG[1] =   t3[off](8)
   2 JournalMode      0    1    2               00 
REG[1] =   t3[off](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t3[off](8)
   4 Halt             0    0    0               00 
SQL: [;
insert into t1(x, x) values(1,'Test3');]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    1    1 1             01 usesStmtJournal=0
  10 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  11 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:16
   3 SoftNull         2    0    0               00 r[2]=NULL
   4 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   5 MakeRecord       2    2    4 D             00 r[4]=mkrec(r[2..3])
REG[4] =  s3[030009...](8)
   6 Insert           0    4    1 t1            1B intkey=r[1] data=r[4]
REG[4] =  s3[030009...](8)
REG[1] =  i:16
   7 Noop             0    0    0               00 
   8 Halt             0    0    0               00 
SQL: [pragma page_size=512;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [SELECT y FROM t1 WHERE y=0 AND y<0 ORDER BY y;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    1 1             01 usesStmtJournal=0
  13 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  14 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  15 Goto             0    1    0               00 
   1 Noop             1    3    0               00 
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SEARCH TABLE t1 USING INTEGER PRIMARY KEY (rowid=?) 00 
   4 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   5 MustBeInt        1   10    0               00 
REG[1] =  i:0
   6 NotExists        0   10    1               00 intkey=r[1]; pk
REG[1] =  i:0
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [SELECT count(*) FROM t1;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    0    1 1             01 usesStmtJournal=0
   8 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
   9 Goto             0    1    0               00 
   1 OpenRead         1    2    0 1             00 root=2 iDb=0
   2 Count            1    1    0               00 r[1]=count()
REG[1] =  i:4
   3 Close            1    0    0               00 
   4 Copy             1    2    0               00 r[2]=r[1]
REG[2] =  i:4
   5 ResultRow        2    1    0               00 output=r[2]
REG[2] =  i:4
   6 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    1 1             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s47[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s47[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    1 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s47[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:2
REG[7] =   s47[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [PRAGMA journal_mode=WAL;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 JournalMode      2    1    5               00 
REG[1] =   t3[wal](8)
   2 JournalMode      0    1    5               00 
REG[1] =   t3[off](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t3[off](8)
   4 Halt             0    0    0               00 
SQL: [;
PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    0    1 1             01 usesStmtJournal=0
  32 Transaction      1    0    0 1             01 usesStmtJournal=0
  33 Transaction      2    0   13 1             01 usesStmtJournal=0
  34 Goto             0    1    0               00 
   1 Integer        100    1    0               00 r[1]=100
REG[1] =  i:100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
REG[1] =  i:100
   4 IntegrityCk      2    2    1 [1]           00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
REG[2] =  NULL
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
REG[1] =  i:100
  12 IntegrityCk      2    1    1 ]             01 
  13 IsNull           2   18    0               00 if r[2]==NULL goto 18
REG[2] =  NULL
  18 IfPos            1   20    0               00 if r[1]>0 then r[1]-=0, goto 20
REG[1] =  i:100
  20 IntegrityCk      2    2    1 [1]           02 
  21 IsNull           2   26    0               00 if r[2]==NULL goto 26
REG[2] =  NULL
  26 AddImm           1 -100    0               00 r[1]=r[1]+-100
REG[1] =  i:100
  27 If               1   30    0               00 
REG[1] =  i:0
  28 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
  29 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
  30 Halt             0    0    0               00 
SQL: [PRAGMA journal_mode=DELETE;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 JournalMode      2    1    0               00 
REG[1] =   t6[delete](8)
   2 JournalMode      1    1    0               00 
REG[1] =   t6[delete](8)
   3 JournalMode      0    1    0               00 
REG[1] =   t3[off](8)
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t3[off](8)
   5 Halt             0    0    0               00 
SQL: [PRAGMA encoding=UTF8;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [CREATE TABLE t2(i1y INT NOT NULL REFERENCES sqlsim5(t4), a INT NOT NULL);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    1 1             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:2
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:2
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:2
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t2            00 r[7]='t2'
REG[7] =   t2[t2](8)
  21 String8          0    8    0 t2            00 r[8]='t2'
REG[8] =   t2[t2](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  23 String8          0   10    0 CREATE TABLE t2(i1y INT NOT NULL REFERENCES sqlsim5(t4), a INT NOT NULL) 00 r[10]='CREATE TABLE t2(i1y INT NOT NULL REFERENCES sqlsim5(t4), a INT NOT NULL)'
REG[10] =   t72[CREATE TABLE t2](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s89[0717111101811D7461626C6574327432.......tablet2t2](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s89[0717111101811D7461626C6574327432.......tablet2t2](8)
REG[5] =  i:2
  26 Close            1    0    0               00 
  27 SetCookie        0    1    2               00 
  28 ParseSchema      0    0    0 tbl_name='t2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t2            00 r[2]='t2'
REG[2] =   t2[t2](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t2](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t2](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s72[CREATE TABLE t2](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t2](8)
REG[6] =  i:3
REG[7] =   s72[CREATE TABLE t2](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t2' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t2            00 r[2]='t2'
REG[2] =   t2[t2](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t2](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t2](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s72[CREATE TABLE t2](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t2](8)
REG[6] =  i:3
REG[7] =   s72[CREATE TABLE t2](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
SELECT y, y FROM t1 WHERE y = 2 AND y IN (2, 4, 5) ORDER BY y ASC, y DESC;]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    0    2 1             01 usesStmtJournal=0
  28 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  29 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SEARCH TABLE t1 USING INTEGER PRIMARY KEY (rowid=?) 00 
   4 Integer          2    1    0               00 r[1]=2
REG[1] =  i:2
   5 MustBeInt        1   25    0               00 
REG[1] =  i:2
   6 NotExists        0   25    1               00 intkey=r[1]; pk
REG[1] =  i:2
  25 Close            0    0    0               00 
  26 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t5' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t5            00 r[2]='t5'
REG[2] =   t2[t5](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [SELECT x, x+1, x+2, x+3, x+4, x+5 FROM t1 ORDER BY x LIMIT -1;]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    0    2 1             01 usesStmtJournal=0
  32 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  33 Integer          1   11    0               00 r[11]=1
REG[11] =  i:1
  34 Integer          2   12    0               00 r[12]=2
REG[12] =  i:2
  35 Integer          3   13    0               00 r[13]=3
REG[13] =  i:3
  36 Integer          4   14    0               00 r[14]=4
REG[14] =  i:4
  37 Integer          5   15    0               00 r[15]=5
REG[15] =  i:5
  38 Goto             0    1    0               00 
   1 OpenEphemeral    1    8    0 k(1,B)        00 nColumn=8
   2 Integer         -1    1    0               00 r[1]=-1; LIMIT counter
REG[1] =  i:-1
   3 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   4 Explain          0    0    0 SCAN TABLE t1 00 
   5 Rewind           0   20    0               00 
   6 Column           0    1    4               00 r[4]=t1.x
REG[4] =   s7[.125e+3](8)
   7 Add             11    4    5               00 r[5]=r[11]+r[4]
REG[11] =  i:1
REG[4] =   s7[.125e+3](8)
REG[5] =  r:126
   8 Add             12    4    6               00 r[6]=r[12]+r[4]
REG[12] =  i:2
REG[4] =   s7[.125e+3](8)
REG[6] =  r:127
   9 Add             13    4    7               00 r[7]=r[13]+r[4]
REG[13] =  i:3
REG[4] =   s7[.125e+3](8)
REG[7] =  r:128
  10 Add             14    4    8               00 r[8]=r[14]+r[4]
REG[14] =  i:4
REG[4] =   s7[.125e+3](8)
REG[8] =  r:129
  11 Add             15    4    9               00 r[9]=r[15]+r[4]
REG[15] =  i:5
REG[4] =   s7[.125e+3](8)
REG[9] =  r:130
  12 Copy             4    2    0               00 r[2]=r[4]
REG[2] =   s7[.125e+3](8)
  13 Sequence         1    3    0               00 r[3]=cursor[1].ctr++
REG[3] =  i:0
  14 MakeRecord       2    8   16               00 r[16]=mkrec(r[2..9])
REG[16] =  s63[091B081B07070707072E313235652B33..........125e+3](8)
  15 IdxInsert        1   16    0               00 key=r[16]
REG[16] =  s63[091B081B07070707072E313235652B33..........125e+3](8)
  16 IfNotZero        1   19    1               00 if r[1]!=0 then r[1]-=1, goto 19
REG[1] =  i:-1
  19 Next             0    6    0               01 
   6 Column           0    1    4               00 r[4]=t1.x
REG[4] =   s6[  .125](8)
   7 Add             11    4    5               00 r[5]=r[11]+r[4]
REG[11] =  i:1
REG[4] =   s6[  .125](8)
REG[5] =  r:1.125
   8 Add             12    4    6               00 r[6]=r[12]+r[4]
REG[12] =  i:2
REG[4] =   s6[  .125](8)
REG[6] =  r:2.125
   9 Add             13    4    7               00 r[7]=r[13]+r[4]
REG[13] =  i:3
REG[4] =   s6[  .125](8)
REG[7] =  r:3.125
  10 Add             14    4    8               00 r[8]=r[14]+r[4]
REG[14] =  i:4
REG[4] =   s6[  .125](8)
REG[8] =  r:4.125
  11 Add             15    4    9               00 r[9]=r[15]+r[4]
REG[15] =  i:5
REG[4] =   s6[  .125](8)
REG[9] =  r:5.125
  12 Copy             4    2    0               00 r[2]=r[4]
REG[2] =   s6[  .125](8)
  13 Sequence         1    3    0               00 r[3]=cursor[1].ctr++
REG[3] =  i:1
  14 MakeRecord       2    8   16               00 r[16]=mkrec(r[2..9])
REG[16] =  s61[09190919070707070720202E31323520.........  .125 ](8)
  15 IdxInsert        1   16    0               00 key=r[16]
REG[16] =  s61[09190919070707070720202E31323520.........  .125 ](8)
  16 IfNotZero        1   19    1               00 if r[1]!=0 then r[1]-=1, goto 19
REG[1] =  i:-2
  19 Next             0    6    0               01 
   6 Column           0    1    4               00 r[4]=t1.x
REG[4] =  i:32768
   7 Add             11    4    5               00 r[5]=r[11]+r[4]
REG[11] =  i:1
REG[4] =  i:32768
REG[5] =  i:32769
   8 Add             12    4    6               00 r[6]=r[12]+r[4]
REG[12] =  i:2
REG[4] =  i:32768
REG[6] =  i:32770
   9 Add             13    4    7               00 r[7]=r[13]+r[4]
REG[13] =  i:3
REG[4] =  i:32768
REG[7] =  i:32771
  10 Add             14    4    8               00 r[8]=r[14]+r[4]
REG[14] =  i:4
REG[4] =  i:32768
REG[8] =  i:32772
  11 Add             15    4    9               00 r[9]=r[15]+r[4]
REG[15] =  i:5
REG[4] =  i:32768
REG[9] =  i:32773
  12 Copy             4    2    0               00 r[2]=r[4]
REG[2] =  i:32768
  13 Sequence         1    3    0               00 r[3]=cursor[1].ctr++
REG[3] =  i:2
  14 MakeRecord       2    8   16               00 r[16]=mkrec(r[2..9])
REG[16] =  s31[09030103030303030300800002008000................](8)
  15 IdxInsert        1   16    0               00 key=r[16]
REG[16] =  s31[09030103030303030300800002008000................](8)
  16 IfNotZero        1   19    1               00 if r[1]!=0 then r[1]-=1, goto 19
REG[1] =  i:-3
  19 Next             0    6    0               01 
   6 Column           0    1    4               00 r[4]=t1.x
REG[4] =  i:1
   7 Add             11    4    5               00 r[5]=r[11]+r[4]
REG[11] =  i:1
REG[4] =  i:1
REG[5] =  i:2
   8 Add             12    4    6               00 r[6]=r[12]+r[4]
REG[12] =  i:2
REG[4] =  i:1
REG[6] =  i:3
   9 Add             13    4    7               00 r[7]=r[13]+r[4]
REG[13] =  i:3
REG[4] =  i:1
REG[7] =  i:4
  10 Add             14    4    8               00 r[8]=r[14]+r[4]
REG[14] =  i:4
REG[4] =  i:1
REG[8] =  i:5
  11 Add             15    4    9               00 r[9]=r[15]+r[4]
REG[15] =  i:5
REG[4] =  i:1
REG[9] =  i:6
  12 Copy             4    2    0               00 r[2]=r[4]
REG[2] =  i:1
  13 Sequence         1    3    0               00 r[3]=cursor[1].ctr++
REG[3] =  i:3
  14 MakeRecord       2    8   16               00 r[16]=mkrec(r[2..9])
REG[16] =  s15[090901090101010101030203040506...............](8)
  15 IdxInsert        1   16    0               00 key=r[16]
REG[16] =  s15[090901090101010101030203040506...............](8)
  16 IfNotZero        1   19    1               00 if r[1]!=0 then r[1]-=1, goto 19
REG[1] =  i:-4
  19 Next             0    6    0               01 
  20 Close            0    0    0               00 
  21 Sort             1   30    0               00 
  22 Column           1    2    4               00 r[4]=x
REG[4] =  i:1
  23 Column           1    3    5               00 r[5]=x+1
REG[5] =  i:2
  24 Column           1    4    6               00 r[6]=x+2
REG[6] =  i:3
  25 Column           1    5    7               00 r[7]=x+3
REG[7] =  i:4
  26 Column           1    6    8               00 r[8]=x+4
REG[8] =  i:5
  27 Column           1    7    9               00 r[9]=x+5
REG[9] =  i:6
  28 ResultRow        4    6    0               00 output=r[4..9]
REG[4] =  i:1
REG[5] =  i:2
REG[6] =  i:3
REG[7] =  i:4
REG[8] =  i:5
REG[9] =  i:6
  29 Next             1   22    0               00 
  22 Column           1    2    4               00 r[4]=x
REG[4] =  i:32768
  23 Column           1    3    5               00 r[5]=x+1
REG[5] =  i:32769
  24 Column           1    4    6               00 r[6]=x+2
REG[6] =  i:32770
  25 Column           1    5    7               00 r[7]=x+3
REG[7] =  i:32771
  26 Column           1    6    8               00 r[8]=x+4
REG[8] =  i:32772
  27 Column           1    7    9               00 r[9]=x+5
REG[9] =  i:32773
  28 ResultRow        4    6    0               00 output=r[4..9]
REG[4] =  i:32768
REG[5] =  i:32769
REG[6] =  i:32770
REG[7] =  i:32771
REG[8] =  i:32772
REG[9] =  i:32773
  29 Next             1   22    0               00 
  22 Column           1    2    4               00 r[4]=x
REG[4] =   s6[  .125](8)
  23 Column           1    3    5               00 r[5]=x+1
REG[5] =  r:1.125
  24 Column           1    4    6               00 r[6]=x+2
REG[6] =  r:2.125
  25 Column           1    5    7               00 r[7]=x+3
REG[7] =  r:3.125
  26 Column           1    6    8               00 r[8]=x+4
REG[8] =  r:4.125
  27 Column           1    7    9               00 r[9]=x+5
REG[9] =  r:5.125
  28 ResultRow        4    6    0               00 output=r[4..9]
REG[4] =   s6[  .125](8)
REG[5] =  r:1.125
REG[6] =  r:2.125
REG[7] =  r:3.125
REG[8] =  r:4.125
REG[9] =  r:5.125
  29 Next             1   22    0               00 
  22 Column           1    2    4               00 r[4]=x
REG[4] =   s7[.125e+3](8)
  23 Column           1    3    5               00 r[5]=x+1
REG[5] =  r:126
  24 Column           1    4    6               00 r[6]=x+2
REG[6] =  r:127
  25 Column           1    5    7               00 r[7]=x+3
REG[7] =  r:128
  26 Column           1    6    8               00 r[8]=x+4
REG[8] =  r:129
  27 Column           1    7    9               00 r[9]=x+5
REG[9] =  r:130
  28 ResultRow        4    6    0               00 output=r[4..9]
REG[4] =   s7[.125e+3](8)
REG[5] =  r:126
REG[6] =  r:127
REG[7] =  r:128
REG[8] =  r:129
REG[9] =  r:130
  29 Next             1   22    0               00 
  30 Halt             0    0    0               00 
SQL: [SELECT x, x+1, x+2, x+3, x+4, x+5, x+6, x+7, x+8, x+9, x+10 FROM t1 ORDER BY x LIMIT -1;]
VDBE Trace:
   0 Init             0   41    0               00 Start at 41
  41 Transaction      0    0    2 1             01 usesStmtJournal=0
  42 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  43 Integer          1   16    0               00 r[16]=1
REG[16] =  i:1
  44 Integer          2   17    0               00 r[17]=2
REG[17] =  i:2
  45 Integer          3   18    0               00 r[18]=3
REG[18] =  i:3
  46 Integer          4   19    0               00 r[19]=4
REG[19] =  i:4
  47 Integer          5   20    0               00 r[20]=5
REG[20] =  i:5
  48 Integer          6   21    0               00 r[21]=6
REG[21] =  i:6
  49 Integer          7   22    0               00 r[22]=7
REG[22] =  i:7
  50 Integer          8   23    0               00 r[23]=8
REG[23] =  i:8
  51 Integer          9   24    0               00 r[24]=9
REG[24] =  i:9
  52 Integer         10   25    0               00 r[25]=10
REG[25] =  i:10
  53 Goto             0    1    0               00 
   1 OpenEphemeral    1   13    0 k(1,B)        00 nColumn=13
   2 Integer         -1    1    0               00 r[1]=-1; LIMIT counter
REG[1] =  i:-1
   3 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   4 Explain          0    0    0 SCAN TABLE t1 00 
   5 Rewind           0   25    0               00 
   6 Column           0    1    4               00 r[4]=t1.x
REG[4] =   s7[.125e+3](8)
   7 Add             16    4    5               00 r[5]=r[16]+r[4]
REG[16] =  i:1
REG[4] =   s7[.125e+3](8)
REG[5] =  r:126
   8 Add             17    4    6               00 r[6]=r[17]+r[4]
REG[17] =  i:2
REG[4] =   s7[.125e+3](8)
REG[6] =  r:127
   9 Add             18    4    7               00 r[7]=r[18]+r[4]
REG[18] =  i:3
REG[4] =   s7[.125e+3](8)
REG[7] =  r:128
  10 Add             19    4    8               00 r[8]=r[19]+r[4]
REG[19] =  i:4
REG[4] =   s7[.125e+3](8)
REG[8] =  r:129
  11 Add             20    4    9               00 r[9]=r[20]+r[4]
REG[20] =  i:5
REG[4] =   s7[.125e+3](8)
REG[9] =  r:130
  12 Add             21    4   10               00 r[10]=r[21]+r[4]
REG[21] =  i:6
REG[4] =   s7[.125e+3](8)
REG[10] =  r:131
  13 Add             22    4   11               00 r[11]=r[22]+r[4]
REG[22] =  i:7
REG[4] =   s7[.125e+3](8)
REG[11] =  r:132
  14 Add             23    4   12               00 r[12]=r[23]+r[4]
REG[23] =  i:8
REG[4] =   s7[.125e+3](8)
REG[12] =  r:133
  15 Add             24    4   13               00 r[13]=r[24]+r[4]
REG[24] =  i:9
REG[4] =   s7[.125e+3](8)
REG[13] =  r:134
  16 Add             25    4   14               00 r[14]=r[25]+r[4]
REG[25] =  i:10
REG[4] =   s7[.125e+3](8)
REG[14] =  r:135
  17 Copy             4    2    0               00 r[2]=r[4]
REG[2] =   s7[.125e+3](8)
  18 Sequence         1    3    0               00 r[3]=cursor[1].ctr++
REG[3] =  i:0
  19 MakeRecord       2   13   26               00 r[26]=mkrec(r[2..14])
REG[26] =  s108[0E1B081B070707070707070707072E31...............1](8)
  20 IdxInsert        1   26    0               00 key=r[26]
REG[26] =  s108[0E1B081B070707070707070707072E31...............1](8)
  21 IfNotZero        1   24    1               00 if r[1]!=0 then r[1]-=1, goto 24
REG[1] =  i:-1
  24 Next             0    6    0               01 
   6 Column           0    1    4               00 r[4]=t1.x
REG[4] =   s6[  .125](8)
   7 Add             16    4    5               00 r[5]=r[16]+r[4]
REG[16] =  i:1
REG[4] =   s6[  .125](8)
REG[5] =  r:1.125
   8 Add             17    4    6               00 r[6]=r[17]+r[4]
REG[17] =  i:2
REG[4] =   s6[  .125](8)
REG[6] =  r:2.125
   9 Add             18    4    7               00 r[7]=r[18]+r[4]
REG[18] =  i:3
REG[4] =   s6[  .125](8)
REG[7] =  r:3.125
  10 Add             19    4    8               00 r[8]=r[19]+r[4]
REG[19] =  i:4
REG[4] =   s6[  .125](8)
REG[8] =  r:4.125
  11 Add             20    4    9               00 r[9]=r[20]+r[4]
REG[20] =  i:5
REG[4] =   s6[  .125](8)
REG[9] =  r:5.125
  12 Add             21    4   10               00 r[10]=r[21]+r[4]
REG[21] =  i:6
REG[4] =   s6[  .125](8)
REG[10] =  r:6.125
  13 Add             22    4   11               00 r[11]=r[22]+r[4]
REG[22] =  i:7
REG[4] =   s6[  .125](8)
REG[11] =  r:7.125
  14 Add             23    4   12               00 r[12]=r[23]+r[4]
REG[23] =  i:8
REG[4] =   s6[  .125](8)
REG[12] =  r:8.125
  15 Add             24    4   13               00 r[13]=r[24]+r[4]
REG[24] =  i:9
REG[4] =   s6[  .125](8)
REG[13] =  r:9.125
  16 Add             25    4   14               00 r[14]=r[25]+r[4]
REG[25] =  i:10
REG[4] =   s6[  .125](8)
REG[14] =  r:10.125
  17 Copy             4    2    0               00 r[2]=r[4]
REG[2] =   s6[  .125](8)
  18 Sequence         1    3    0               00 r[3]=cursor[1].ctr++
REG[3] =  i:1
  19 MakeRecord       2   13   26               00 r[26]=mkrec(r[2..14])
REG[26] =  s106[0E190919070707070707070707072020..............  ](8)
  20 IdxInsert        1   26    0               00 key=r[26]
REG[26] =  s106[0E190919070707070707070707072020..............  ](8)
  21 IfNotZero        1   24    1               00 if r[1]!=0 then r[1]-=1, goto 24
REG[1] =  i:-2
  24 Next             0    6    0               01 
   6 Column           0    1    4               00 r[4]=t1.x
REG[4] =  i:32768
   7 Add             16    4    5               00 r[5]=r[16]+r[4]
REG[16] =  i:1
REG[4] =  i:32768
REG[5] =  i:32769
   8 Add             17    4    6               00 r[6]=r[17]+r[4]
REG[17] =  i:2
REG[4] =  i:32768
REG[6] =  i:32770
   9 Add             18    4    7               00 r[7]=r[18]+r[4]
REG[18] =  i:3
REG[4] =  i:32768
REG[7] =  i:32771
  10 Add             19    4    8               00 r[8]=r[19]+r[4]
REG[19] =  i:4
REG[4] =  i:32768
REG[8] =  i:32772
  11 Add             20    4    9               00 r[9]=r[20]+r[4]
REG[20] =  i:5
REG[4] =  i:32768
REG[9] =  i:32773
  12 Add             21    4   10               00 r[10]=r[21]+r[4]
REG[21] =  i:6
REG[4] =  i:32768
REG[10] =  i:32774
  13 Add             22    4   11               00 r[11]=r[22]+r[4]
REG[22] =  i:7
REG[4] =  i:32768
REG[11] =  i:32775
  14 Add             23    4   12               00 r[12]=r[23]+r[4]
REG[23] =  i:8
REG[4] =  i:32768
REG[12] =  i:32776
  15 Add             24    4   13               00 r[13]=r[24]+r[4]
REG[24] =  i:9
REG[4] =  i:32768
REG[13] =  i:32777
  16 Add             25    4   14               00 r[14]=r[25]+r[4]
REG[25] =  i:10
REG[4] =  i:32768
REG[14] =  i:32778
  17 Copy             4    2    0               00 r[2]=r[4]
REG[2] =  i:32768
  18 Sequence         1    3    0               00 r[3]=cursor[1].ctr++
REG[3] =  i:2
  19 MakeRecord       2   13   26               00 r[26]=mkrec(r[2..14])
REG[26] =  s51[0E030103030303030303030303030080................](8)
  20 IdxInsert        1   26    0               00 key=r[26]
REG[26] =  s51[0E030103030303030303030303030080................](8)
  21 IfNotZero        1   24    1               00 if r[1]!=0 then r[1]-=1, goto 24
REG[1] =  i:-3
  24 Next             0    6    0               01 
   6 Column           0    1    4               00 r[4]=t1.x
REG[4] =  i:1
   7 Add             16    4    5               00 r[5]=r[16]+r[4]
REG[16] =  i:1
REG[4] =  i:1
REG[5] =  i:2
   8 Add             17    4    6               00 r[6]=r[17]+r[4]
REG[17] =  i:2
REG[4] =  i:1
REG[6] =  i:3
   9 Add             18    4    7               00 r[7]=r[18]+r[4]
REG[18] =  i:3
REG[4] =  i:1
REG[7] =  i:4
  10 Add             19    4    8               00 r[8]=r[19]+r[4]
REG[19] =  i:4
REG[4] =  i:1
REG[8] =  i:5
  11 Add             20    4    9               00 r[9]=r[20]+r[4]
REG[20] =  i:5
REG[4] =  i:1
REG[9] =  i:6
  12 Add             21    4   10               00 r[10]=r[21]+r[4]
REG[21] =  i:6
REG[4] =  i:1
REG[10] =  i:7
  13 Add             22    4   11               00 r[11]=r[22]+r[4]
REG[22] =  i:7
REG[4] =  i:1
REG[11] =  i:8
  14 Add             23    4   12               00 r[12]=r[23]+r[4]
REG[23] =  i:8
REG[4] =  i:1
REG[12] =  i:9
  15 Add             24    4   13               00 r[13]=r[24]+r[4]
REG[24] =  i:9
REG[4] =  i:1
REG[13] =  i:10
  16 Add             25    4   14               00 r[14]=r[25]+r[4]
REG[25] =  i:10
REG[4] =  i:1
REG[14] =  i:11
  17 Copy             4    2    0               00 r[2]=r[4]
REG[2] =  i:1
  18 Sequence         1    3    0               00 r[3]=cursor[1].ctr++
REG[3] =  i:3
  19 MakeRecord       2   13   26               00 r[26]=mkrec(r[2..14])
REG[26] =  s25[0E090109010101010101010101010302................](8)
  20 IdxInsert        1   26    0               00 key=r[26]
REG[26] =  s25[0E090109010101010101010101010302................](8)
  21 IfNotZero        1   24    1               00 if r[1]!=0 then r[1]-=1, goto 24
REG[1] =  i:-4
  24 Next             0    6    0               01 
  25 Close            0    0    0               00 
  26 Sort             1   40    0               00 
  27 Column           1    2    4               00 r[4]=x
REG[4] =  i:1
  28 Column           1    3    5               00 r[5]=x+1
REG[5] =  i:2
  29 Column           1    4    6               00 r[6]=x+2
REG[6] =  i:3
  30 Column           1    5    7               00 r[7]=x+3
REG[7] =  i:4
  31 Column           1    6    8               00 r[8]=x+4
REG[8] =  i:5
  32 Column           1    7    9               00 r[9]=x+5
REG[9] =  i:6
  33 Column           1    8   10               00 r[10]=x+6
REG[10] =  i:7
  34 Column           1    9   11               00 r[11]=x+7
REG[11] =  i:8
  35 Column           1   10   12               00 r[12]=x+8
REG[12] =  i:9
  36 Column           1   11   13               00 r[13]=x+9
REG[13] =  i:10
  37 Column           1   12   14               00 r[14]=x+10
REG[14] =  i:11
  38 ResultRow        4   11    0               00 output=r[4..14]
REG[4] =  i:1
REG[5] =  i:2
REG[6] =  i:3
REG[7] =  i:4
REG[8] =  i:5
REG[9] =  i:6
REG[10] =  i:7
REG[11] =  i:8
REG[12] =  i:9
REG[13] =  i:10
REG[14] =  i:11
  39 Next             1   27    0               00 
  27 Column           1    2    4               00 r[4]=x
REG[4] =  i:32768
  28 Column           1    3    5               00 r[5]=x+1
REG[5] =  i:32769
  29 Column           1    4    6               00 r[6]=x+2
REG[6] =  i:32770
  30 Column           1    5    7               00 r[7]=x+3
REG[7] =  i:32771
  31 Column           1    6    8               00 r[8]=x+4
REG[8] =  i:32772
  32 Column           1    7    9               00 r[9]=x+5
REG[9] =  i:32773
  33 Column           1    8   10               00 r[10]=x+6
REG[10] =  i:32774
  34 Column           1    9   11               00 r[11]=x+7
REG[11] =  i:32775
  35 Column           1   10   12               00 r[12]=x+8
REG[12] =  i:32776
  36 Column           1   11   13               00 r[13]=x+9
REG[13] =  i:32777
  37 Column           1   12   14               00 r[14]=x+10
REG[14] =  i:32778
  38 ResultRow        4   11    0               00 output=r[4..14]
REG[4] =  i:32768
REG[5] =  i:32769
REG[6] =  i:32770
REG[7] =  i:32771
REG[8] =  i:32772
REG[9] =  i:32773
REG[10] =  i:32774
REG[11] =  i:32775
REG[12] =  i:32776
REG[13] =  i:32777
REG[14] =  i:32778
  39 Next             1   27    0               00 
  27 Column           1    2    4               00 r[4]=x
REG[4] =   s6[  .125](8)
  28 Column           1    3    5               00 r[5]=x+1
REG[5] =  r:1.125
  29 Column           1    4    6               00 r[6]=x+2
REG[6] =  r:2.125
  30 Column           1    5    7               00 r[7]=x+3
REG[7] =  r:3.125
  31 Column           1    6    8               00 r[8]=x+4
REG[8] =  r:4.125
  32 Column           1    7    9               00 r[9]=x+5
REG[9] =  r:5.125
  33 Column           1    8   10               00 r[10]=x+6
REG[10] =  r:6.125
  34 Column           1    9   11               00 r[11]=x+7
REG[11] =  r:7.125
  35 Column           1   10   12               00 r[12]=x+8
REG[12] =  r:8.125
  36 Column           1   11   13               00 r[13]=x+9
REG[13] =  r:9.125
  37 Column           1   12   14               00 r[14]=x+10
REG[14] =  r:10.125
  38 ResultRow        4   11    0               00 output=r[4..14]
REG[4] =   s6[  .125](8)
REG[5] =  r:1.125
REG[6] =  r:2.125
REG[7] =  r:3.125
REG[8] =  r:4.125
REG[9] =  r:5.125
REG[10] =  r:6.125
REG[11] =  r:7.125
REG[12] =  r:8.125
REG[13] =  r:9.125
REG[14] =  r:10.125
  39 Next             1   27    0               00 
  27 Column           1    2    4               00 r[4]=x
REG[4] =   s7[.125e+3](8)
  28 Column           1    3    5               00 r[5]=x+1
REG[5] =  r:126
  29 Column           1    4    6               00 r[6]=x+2
REG[6] =  r:127
  30 Column           1    5    7               00 r[7]=x+3
REG[7] =  r:128
  31 Column           1    6    8               00 r[8]=x+4
REG[8] =  r:129
  32 Column           1    7    9               00 r[9]=x+5
REG[9] =  r:130
  33 Column           1    8   10               00 r[10]=x+6
REG[10] =  r:131
  34 Column           1    9   11               00 r[11]=x+7
REG[11] =  r:132
  35 Column           1   10   12               00 r[12]=x+8
REG[12] =  r:133
  36 Column           1   11   13               00 r[13]=x+9
REG[13] =  r:134
  37 Column           1   12   14               00 r[14]=x+10
REG[14] =  r:135
  38 ResultRow        4   11    0               00 output=r[4..14]
REG[4] =   s7[.125e+3](8)
REG[5] =  r:126
REG[6] =  r:127
REG[7] =  r:128
REG[8] =  r:129
REG[9] =  r:130
REG[10] =  r:131
REG[11] =  r:132
REG[12] =  r:133
REG[13] =  r:134
REG[14] =  r:135
  39 Next             1   27    0               00 
  40 Halt             0    0    0               00 
SQL: [;
SELECT y, y FROM t1 WHERE y = 3 AND y IN (2, 4, 5) ORDER BY y DESC, y ASC;]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    0    2 1             01 usesStmtJournal=0
  28 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  29 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SEARCH TABLE t1 USING INTEGER PRIMARY KEY (rowid=?) 00 
   4 Integer          3    1    0               00 r[1]=3
REG[1] =  i:3
   5 MustBeInt        1   25    0               00 
REG[1] =  i:3
   6 NotExists        0   25    1               00 intkey=r[1]; pk
REG[1] =  i:3
  25 Close            0    0    0               00 
  26 Halt             0    0    0               00 
SQL: [;
SELECT x, x FROM t1 WHERE x = 2 AND x IN (2, 4, 5) ORDER BY x ASC, x DESC;]
VDBE Trace:
   0 Init             0   29    0               00 Start at 29
  29 Transaction      0    0    2 1             01 usesStmtJournal=0
  30 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  31 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
  32 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0   27    0               00 
   5 Column           0    1    1               00 r[1]=t1.x
REG[1] =   s7[.125e+3](8)
   6 Ne               2   26    1 (BINARY)      51 if r[2]!=r[1] goto 26
REG[2] =  i:2
REG[1] =   s7[.125e+3](8)
  26 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=t1.x
REG[1] =   s6[  .125](8)
   6 Ne               2   26    1 (BINARY)      51 if r[2]!=r[1] goto 26
REG[2] =  i:2
REG[1] =   s6[  .125](8)
  26 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=t1.x
REG[1] =  i:32768
   6 Ne               2   26    1 (BINARY)      51 if r[2]!=r[1] goto 26
REG[2] =  i:2
REG[1] =  i:32768
  26 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=t1.x
REG[1] =  i:1
   6 Ne               2   26    1 (BINARY)      51 if r[2]!=r[1] goto 26
REG[2] =  i:2
REG[1] =  i:1
  26 Next             0    5    0               01 
  27 Close            0    0    0               00 
  28 Halt             0    0    0               00 
SQL: [CREATE TRIGGER b AFTER INSERT ON t1 BEGIN
    SELECT * FROM t1 WHERE abc.x = 1;
  END;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    1    2 1             01 usesStmtJournal=0
  15 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  16 Goto             0    1    0               00 
   1 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   3 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   4 String8          0    3    0 b             00 r[3]='b'
REG[3] =   t1[b](8)
   5 String8          0    4    0 t1            00 r[4]='t1'
REG[4] =   t2[t1](8)
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 String8          0    6    0 CREATE TRIGGER b AFTER INSERT ON t1 BEGIN
    SELECT * FROM t1 WHERE abc.x = 1;
  END 00 r[6]='CREATE TRIGGER b AFTER INSERT ON t1 BEGIN
    SELECT * FROM t1 WHERE abc.x = 1;
  END'
REG[6] =   t85[CREATE TRIGGER ](8)
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
REG[7] =  s102[071B0F11088137747269676765726274......7triggerbt](8)
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
REG[7] =  s102[071B0F11088137747269676765726274......7triggerbt](8)
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 SetCookie        0    1    3               00 
  12 ParseSchema      0    0    0 type='trigger' AND name='b' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  19 String8          0    4    0 b             00 r[4]='b'
REG[4] =   t1[b](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s1[b](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t1[b](8)
REG[3] =   s1[b](8)
   9 Copy             3    5    0               00 r[5]=r[3]
REG[5] =   s1[b](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:0
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s85[CREATE TRIGGER ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[b](8)
REG[6] =  i:0
REG[7] =   s85[CREATE TRIGGER ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [END;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       1    0    0               00 
[Inferior 1 (process 120405) exited normally]
(gdb) (gdb) quit
