GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000301,sig:06,src:005584+007600,time:25081765,execs:3828214,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL-trace: ;
PRAGMA sql_trace=on;
SQL-trace: PRAGMA auto_vacuum=NoNe;
SQL-trace: CREATE TRIGGER t2 AFTER INSERT ON t1 WHEN new.y=1 BEGIN
       INSERT INTO t1(y) VALUES(new.y);
     END;
SQL-trace: ;
PRAGMA auto_vacuum;
SQL-trace: ;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;
SQL-trace: SAVEPOINT _tcl_transaction;
SQL-trace: SAVEPOINT _tcl_transaction;
SQL-trace: COMMIT;
SQL-trace: ;
PRAGMA temp_store=2;
SQL-trace: ;
SELECT rowid, * FROM t1 WHERE rowid>1000;
SQL-trace: ;
PRAGMA temp_store;
SQL-trace: ;
ATTACH DATABASE ? AS ?
  ;
SQL-trace: PRAGMA page_count;
SQL-trace: SELECT x, x, x FROM t1 ORDER BY x;
SQL-trace: ;
insert into t1(x, x) values(1,'Test3');
SQL-trace: -- TRIGGER t2
SQL-trace: ;
insert into t1(y) values('btest');
SQL-trace: -- TRIGGER t2
SQL-trace: SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='idxt1' AND type='index' ORDER BY rowid;
SQL-trace: CREATE INDEX i1y ON t1(y);
SQL-trace: SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='i1y' AND type='index' ORDER BY rowid;
SQL-trace: ;
UPDATE t1 SET y=32, y=-9223372036854775808;
SQL-trace: ATTACH 'test.db4' AS aux4;
SQL-trace: ;
PRAGMA page_size = 1024;
SQL-trace: SELECT name, rootpage, sql FROM "aux4".sqlite_master ORDER BY rowid;
SQL-trace: ;
COMMIT;
SQL-trace: ;
UPDATE t1 SET y=32, y=-3;
SQL-trace: ATTACH 'test.db6' AS aux6;
SQL-trace: ;
SELECT y FROM t1 ORDER BY y;
SQL-trace: SELECT 
        (SELECT sum(y) FROM t1)==(SELECT sum(y*5-10) FROM t1 WHERE (y%5)==0)
    ;
SQL-trace: ;
SELECT rowid, * FROM t1;
SQL-trace: SELECT * FROM t1 WHERE x==123.000
  ;
SQL-trace: SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: ;
SELECT coalesce(x!=x,99) FROM t1;
SQL-trace: SELECT * FROM t1 WHERE y>'xyz';
SQL-trace: ;
SELECT * FROM t1 WHERE x<'xyz';
SQL-trace: ;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;
SQL-trace: ;
SELECT rowid, y FROM t1 WHERE rowid>=5.5;
SQL-trace: SELECT rowid, y FROM t1 WHERE rowid>5.0 ORDER BY rowid DESC;
SQL-trace: ;
SELECT rowid, x FROM t1 WHERE rowid>=-5.5;
SQL-trace: SELECT name FROM sqlite_temp_master;
SQL-trace: SELECT rowid, x FROM t1 WHERE rowid<-5.5 ORDER BY rowid DESC;
SQL-trace: SELECT rowid, y FROM t1 WHERE -5.5>rowid ORDER BY rowid DESC;
SQL-trace: END;
SQL-trace: ;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: ;
SELECT x, x FROM t1 ORDER BY x;
SQL-trace: ;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;
SQL-trace: SELECT x FROM t1 WHERE NOT x<>8 OR x==1024 ORDER BY x;
SQL-trace: INSERT INTO t1(rowid,y) VALUES(1234,5);
SQL-trace: -- TRIGGER t2
SQL-trace: ;
SAVEPOINT sp1;
SQL-trace: SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='i2' AND type='index' ORDER BY rowid;
SQL-trace: ROLLBACK TO sp1;
SQL-trace: ;
ROLLBACK TO SAVEPOINT sp3;
SQL-trace: ;
ROLLBACK TRANSACTION TO SAVEPOINT sp1;
SQL-trace: SELECT name, rootpage, sql FROM 'temp'.sqlite_temp_master WHERE name='i1' AND type='index' ORDER BY rowid;
SQL-trace: ROLLBACK TO one;
SQL-trace: PRAGMA full_column_names=on;
SQL-trace: ;
COMMIT;
SQL-trace: ROLLBACK;
SQL-trace: SELECT x FROM t1 WHERE x LIKE '2_' OR x==8 ORDER BY x;
SQL-trace: ;
RELEASE two;
SQL-trace: ATTACH $::attachfilename AS test1;
SQL-trace: ;
ROLLBACK;
SQL-trace: RELEASE "transaction" ;
SQL-trace: SELECT x FROM t1 WHERE (x=0 AND x<0) AND x IS NULL ORDER BY x;
SQL-trace: SELECT y FROM t1 WHERE ((y in (1,2) OR 0) AND 1) OR 0 ORDER BY y;
SQL-trace: DETACH DATABASE test1;
SQL-trace: ;
SELECT * FROM t1;
SQL-trace: SELECT y FROM t1 WHERE (y||'')<='1' ORDER BY y;
SQL-trace: ;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: ;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;
SQL-trace: ROLLBACK;
SQL-trace: ;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;
SQL-trace: SELECT count(*) FROM sqlite_stat1;
SQL-trace: SELECT x FROM t1 WHERE x = abs(+-+-2) ORDER BY x;
SQL-trace: ;
SELECT '' <= "";
SQL-trace: ;
DELETE FROM t1;
SQL-trace: ;
SELECT * FROM t1;
SQL-trace: ;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: ;
COMMIT;
SQL-trace: SAVEPOINT abc;
SQL-trace: INSERT INTO t1 VALUES(2, zeroblob(1024*900)) ;
SQL-trace: -- TRIGGER t2

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f479ed15859 in __GI_abort () at abort.c:79
#2  0x00007f479ed15729 in __assert_fail_base (fmt=0x7f479eeab588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", 
    assertion=0x216480 "((p->szMalloc>0 && p->z==p->zMalloc)? 1 : 0) + ((p->flags&MEM_Dyn)!=0 ? 1 : 0) + ((p->flags&MEM_Ephem)!=0 ? 1 : 0) + ((p->flags&MEM_Static)!=0 ? 1 : 0) == 1", file=0x222c23 "sqlite3.c", line=68297, 
    function=<optimized out>) at assert.c:92
#3  0x00007f479ed26fd6 in __GI___assert_fail (
    assertion=0x216480 "((p->szMalloc>0 && p->z==p->zMalloc)? 1 : 0) + ((p->flags&MEM_Dyn)!=0 ? 1 : 0) + ((p->flags&MEM_Ephem)!=0 ? 1 : 0) + ((p->flags&MEM_Static)!=0 ? 1 : 0) == 1", file=0x222c23 "sqlite3.c", line=68297, 
    function=0x21e154 "int sqlite3VdbeCheckMemInvariants(Mem *)") at assert.c:101
#4  0x00000000002795e3 in sqlite3VdbeCheckMemInvariants (p=0x17d3550) at sqlite3.c:68292
#5  0x00000000002c8632 in releaseMemArray (p=0x17d3550, N=<optimized out>) at sqlite3.c:71417
#6  0x00000000002e366e in sqlite3VdbeHalt (p=0x17e9be0) at sqlite3.c:71458
#7  0x00000000003e1666 in sqlite3VdbeExec (p=<optimized out>) at sqlite3.c:77673
#8  0x000000000028b140 in sqlite3_step (pStmt=<optimized out>) at sqlite3.c:75131
#9  0x000000000024b5e9 in main (argc=1, argv=0x7ffece3d0d08) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 121156] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
