GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000118,sig:06,src:021008+012652,time:2514042,execs:391315,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT (1, 2, 3) != (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               61 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               3    1    3               69 r[1] = (r[3]!=r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 If               1    7    0               00 
REG[1] =  i:0
   6 Ne               4    1    4               69 r[1] = (r[4]!=r[4])
REG[4] =  i:3
REG[4] =  i:3
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT rowid, a, a FROM t1 ORDER BY rowid DESC
  
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 0             01 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Last             0   10    0               00 
   5 Rowid            0    1    0               00 r[1]=rowid
REG[1] =  i:1
   6 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   7 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:1
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =  i:1
REG[2] =  i:1
REG[3] =  i:1
   9 Prev             0    5    0               01 
  10 Halt             0    0    0               00 
SQL: [SELECT (1, 2, 3) IS (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               E1 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               3    1    3               E9 r[1] = (r[3]==r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 IfNot            1    7    0               00 
REG[1] =  i:1
   6 Eq               4    1    4               E9 r[1] = (r[4]==r[4])
REG[4] =  i:3
REG[4] =  i:3
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, 3) IS NOT (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               E1 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               3    1    3               E9 r[1] = (r[3]!=r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 If               1    7    0               00 
REG[1] =  i:0
   6 Ne               4    1    4               E9 r[1] = (r[4]!=r[4])
REG[4] =  i:3
REG[4] =  i:3
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 2, 3) == (SELECT 1, 2, 3)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  10 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Integer          3   10    0               00 r[10]=3
REG[10] =  i:3
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Eq               8    1    3               61 r[1] = (r[3]==r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:1
  25 IfNot            1   29    0               00 
REG[1] =  i:1
  26 Eq               9    1    4               69 r[1] = (r[4]==r[9])
REG[9] =  i:2
REG[4] =  i:2
  27 IfNot            1   29    0               00 
REG[1] =  i:1
  28 Eq              10    1    5               69 r[1] = (r[5]==r[10])
REG[10] =  i:3
REG[5] =  i:3
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  30 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 0, 3) != (SELECT 1, 2, 3)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  10 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Integer          3   10    0               00 r[10]=3
REG[10] =  i:3
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Ne               8    1    3               61 r[1] = (r[3]!=r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  25 If               1   29    0               00 
REG[1] =  i:0
  26 Ne               9    1    4               69 r[1] = (r[4]!=r[9])
REG[9] =  i:2
REG[4] =  i:0
REG[1] =  i:1
  27 If               1   29    0               00 
REG[1] =  i:1
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  30 Halt             0    0    0               00 
SQL: [SELECT (1, 2, NULL) == (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               61 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               3    1    3               69 r[1] = (r[3]==r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 IfNot            1    7    0               00 
REG[1] =  i:1
   6 Eq               5    1    4               69 r[1] = (r[4]==r[5])
REG[5] =  i:3
REG[4] =  NULL
REG[1] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, NULL) != (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               61 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               3    1    3               69 r[1] = (r[3]!=r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 If               1    7    0               00 
REG[1] =  i:0
   6 Ne               5    1    4               69 r[1] = (r[4]!=r[5])
REG[5] =  i:3
REG[4] =  NULL
REG[1] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, NULL) IS (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               E1 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               3    1    3               E9 r[1] = (r[3]==r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 IfNot            1    7    0               00 
REG[1] =  i:1
   6 Eq               5    1    4               E9 r[1] = (r[4]==r[5])
REG[5] =  i:3
REG[4] =  NULL
REG[1] =  i:0
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 2, NULL) != (SELECT 1, 2, 3)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  10 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Integer          3   10    0               00 r[10]=3
REG[10] =  i:3
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Ne               8    1    3               61 r[1] = (r[3]!=r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  25 If               1   29    0               00 
REG[1] =  i:0
  26 Ne               9    1    4               69 r[1] = (r[4]!=r[9])
REG[9] =  i:2
REG[4] =  i:2
  27 If               1   29    0               00 
REG[1] =  i:0
  28 Ne              10    1    5               69 r[1] = (r[5]!=r[10])
REG[10] =  i:3
REG[5] =  NULL
REG[1] =  NULL
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (1, 2, NULL) != (1, 2, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               61 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               3    1    3               69 r[1] = (r[3]!=r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 If               1    7    0               00 
REG[1] =  i:0
   6 Ne               4    1    4               69 r[1] = (r[4]!=r[4])
REG[4] =  NULL
REG[4] =  NULL
REG[1] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, NULL) IS (1, 2, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               E1 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               3    1    3               E9 r[1] = (r[3]==r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 IfNot            1    7    0               00 
REG[1] =  i:1
   6 Eq               4    1    4               E9 r[1] = (r[4]==r[4])
REG[4] =  NULL
REG[4] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (NULL, NULL, NULL) == (NULL, NULL, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  10 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               61 r[1] = (r[2]==r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   3 IfNot            1    7    0               00 
REG[1] =  NULL
   4 Eq               2    1    2               69 r[1] = (r[2]==r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   5 IfNot            1    7    0               00 
REG[1] =  NULL
   6 Eq               2    1    2               69 r[1] = (r[2]==r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (NULL, NULL, NULL) != (NULL, NULL, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  10 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               61 r[1] = (r[2]!=r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   3 If               1    7    0               00 
REG[1] =  NULL
   4 Ne               2    1    2               69 r[1] = (r[2]!=r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   5 If               1    7    0               00 
REG[1] =  NULL
   6 Ne               2    1    2               69 r[1] = (r[2]!=r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT NULL, NULL, NULL) == (SELECT NULL, NULL, NULL)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   9 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  10 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Null             0    8    0               00 r[8]=NULL
REG[8] =  NULL
  20 Null             0    9    0               00 r[9]=NULL
REG[9] =  NULL
  21 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Eq               8    1    3               61 r[1] = (r[3]==r[8])
REG[8] =  NULL
REG[3] =  NULL
REG[1] =  NULL
  25 IfNot            1   29    0               00 
REG[1] =  NULL
  26 Eq               9    1    4               69 r[1] = (r[4]==r[9])
REG[9] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  27 IfNot            1   29    0               00 
REG[1] =  NULL
  28 Eq              10    1    5               69 r[1] = (r[5]==r[10])
REG[10] =  NULL
REG[5] =  NULL
REG[1] =  NULL
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 1) IS NOT (1, 1, 1)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               E1 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               2    1    3               E9 r[1] = (r[3]!=r[2])
REG[2] =  i:1
REG[3] =  NULL
REG[1] =  i:1
   5 If               1    7    0               00 
REG[1] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, NULL, 1) == (SELECT 1, 1, 1)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  10 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  21 Integer          1   10    0               00 r[10]=1
REG[10] =  i:1
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Eq               8    1    3               61 r[1] = (r[3]==r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:1
  25 IfNot            1   29    0               00 
REG[1] =  i:1
  26 Eq               9    1    4               69 r[1] = (r[4]==r[9])
REG[9] =  i:1
REG[4] =  NULL
REG[1] =  NULL
  27 IfNot            1   29    0               00 
REG[1] =  NULL
  28 Eq              10    1    5               69 r[1] = (r[5]==r[10])
REG[10] =  i:1
REG[5] =  i:1
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, NULL, 1) != (SELECT 1, 1, 1)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  10 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  21 Integer          1   10    0               00 r[10]=1
REG[10] =  i:1
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Ne               8    1    3               61 r[1] = (r[3]!=r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  25 If               1   29    0               00 
REG[1] =  i:0
  26 Ne               9    1    4               69 r[1] = (r[4]!=r[9])
REG[9] =  i:1
REG[4] =  NULL
REG[1] =  NULL
  27 If               1   29    0               00 
REG[1] =  NULL
  28 Ne              10    1    5               69 r[1] = (r[5]!=r[10])
REG[10] =  i:1
REG[5] =  i:1
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT * FROM c WHERE NOT (1, 1, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 0             01 usesStmtJournal=0
  12 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  13 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  14 Lt               6    1    5               61 r[1] = (r[5]<r[6])
REG[6] =  i:1
REG[5] =  i:1
REG[1] =  i:0
  15 ElseNotEq        0   23    0               00 
  16 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  17 Integer          2    5    0               00 r[5]=2
REG[5] =  i:2
  18 Lt               5    1    6               61 r[1] = (r[6]<r[5])
REG[5] =  i:2
REG[6] =  i:1
REG[1] =  i:1
  19 ElseNotEq        0   23    0               00 
  23 Goto             0    1    0               00 
   1 If               1   10    1               00 
REG[1] =  i:1
  10 Halt             0    0    0               00 
SQL: [SELECT (1, 1, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               3    1    2               61 r[1] = (r[2]>r[3])
REG[3] =  i:2
REG[2] =  i:1
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM c WHERE (1, 1, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 0             01 usesStmtJournal=0
  12 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  13 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  14 Gt               6    1    5               61 r[1] = (r[5]>r[6])
REG[6] =  i:1
REG[5] =  i:1
REG[1] =  i:0
  15 ElseNotEq        0   23    0               00 
  16 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  17 Integer          2    5    0               00 r[5]=2
REG[5] =  i:2
  18 Gt               5    1    6               61 r[1] = (r[6]>r[5])
REG[5] =  i:2
REG[6] =  i:1
REG[1] =  i:0
  19 ElseNotEq        0   23    0               00 
  23 Goto             0    1    0               00 
   1 IfNot            1   10    1               00 
REG[1] =  i:0
  10 Halt             0    0    0               00 
SQL: [SELECT * FROM c WHERE NOT (1, 1, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 0             01 usesStmtJournal=0
  12 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  13 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  14 Gt               6    1    5               61 r[1] = (r[5]>r[6])
REG[6] =  i:1
REG[5] =  i:1
REG[1] =  i:0
  15 ElseNotEq        0   23    0               00 
  16 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  17 Integer          2    5    0               00 r[5]=2
REG[5] =  i:2
  18 Gt               5    1    6               61 r[1] = (r[6]>r[5])
REG[5] =  i:2
REG[6] =  i:1
REG[1] =  i:0
  19 ElseNotEq        0   23    0               00 
  23 Goto             0    1    0               00 
   1 If               1   10    1               00 
REG[1] =  i:0
   2 OpenRead         0    3    0 3             00 root=3 iDb=0; c
   3 Explain          3    0    0 SCAN TABLE c  00 
   4 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
SQL: [SELECT (1, 1, 3) <= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               3    1    2               61 r[1] = (r[2]<r[3])
REG[3] =  i:2
REG[2] =  i:1
REG[1] =  i:1
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 1, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               3    1    2               61 r[1] = (r[2]>r[3])
REG[3] =  i:2
REG[2] =  i:1
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               3    1    3               61 r[1] = (r[3]<r[3])
REG[3] =  i:2
REG[3] =  i:2
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   6 Lt               4    1    4               61 r[1] = (r[4]<r[4])
REG[4] =  i:3
REG[4] =  i:3
REG[1] =  i:0
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               3    1    3               61 r[1] = (r[3]>r[3])
REG[3] =  i:2
REG[3] =  i:2
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   6 Gt               4    1    4               61 r[1] = (r[4]>r[4])
REG[4] =  i:3
REG[4] =  i:3
REG[1] =  i:0
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM c WHERE (1, 2, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 0             01 usesStmtJournal=0
  12 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  13 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  14 Gt               6    1    5               61 r[1] = (r[5]>r[6])
REG[6] =  i:1
REG[5] =  i:1
REG[1] =  i:0
  15 ElseNotEq        0   23    0               00 
  16 Integer          2    6    0               00 r[6]=2
REG[6] =  i:2
  17 Integer          2    5    0               00 r[5]=2
REG[5] =  i:2
  18 Gt               5    1    6               61 r[1] = (r[6]>r[5])
REG[5] =  i:2
REG[6] =  i:2
REG[1] =  i:0
  19 ElseNotEq        0   23    0               00 
  20 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  21 Integer          3    6    0               00 r[6]=3
REG[6] =  i:3
  22 Gt               6    1    5               61 r[1] = (r[5]>r[6])
REG[6] =  i:3
REG[5] =  i:3
REG[1] =  i:0
  23 Goto             0    1    0               00 
   1 IfNot            1   10    1               00 
REG[1] =  i:0
  10 Halt             0    0    0               00 
SQL: [SELECT (1, 2, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               3    1    3               61 r[1] = (r[3]>r[3])
REG[3] =  i:2
REG[3] =  i:2
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   6 Ge               4    1    4               61 r[1] = (r[4]>=r[4])
REG[4] =  i:3
REG[4] =  i:3
REG[1] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (1, 2, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    2 0             01 usesStmtJournal=0
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  13 Gt               5    1    4               61 r[1] = (r[4]>r[5])
REG[5] =  i:1
REG[4] =  i:1
REG[1] =  i:0
  14 ElseNotEq        0   22    0               00 
  15 Integer          2    5    0               00 r[5]=2
REG[5] =  i:2
  16 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  17 Gt               4    1    5               61 r[1] = (r[5]>r[4])
REG[4] =  i:2
REG[5] =  i:2
REG[1] =  i:0
  18 ElseNotEq        0   22    0               00 
  19 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  20 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  21 Ge               5    1    4               61 r[1] = (r[4]>=r[5])
REG[5] =  i:3
REG[4] =  i:3
REG[1] =  i:1
  22 Goto             0    1    0               00 
   1 IfNot            1    9    1               00 
REG[1] =  i:1
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0    9    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 Column           0    1    3               00 r[3]=t1.b
REG[3] =  i:9223372036854775807
   7 ResultRow        2    2    0               00 output=r[2..3]
REG[2] =  i:1
REG[3] =  i:9223372036854775807
   8 Next             0    5    0               01 
   9 Halt             0    0    0               00 
SQL: [SELECT * FROM c WHERE (1, 3, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 0             01 usesStmtJournal=0
  12 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  13 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  14 Gt               6    1    5               61 r[1] = (r[5]>r[6])
REG[6] =  i:1
REG[5] =  i:1
REG[1] =  i:0
  15 ElseNotEq        0   23    0               00 
  16 Integer          3    6    0               00 r[6]=3
REG[6] =  i:3
  17 Integer          2    5    0               00 r[5]=2
REG[5] =  i:2
  18 Gt               5    1    6               61 r[1] = (r[6]>r[5])
REG[5] =  i:2
REG[6] =  i:3
REG[1] =  i:1
  19 ElseNotEq        0   23    0               00 
  23 Goto             0    1    0               00 
   1 IfNot            1   10    1               00 
REG[1] =  i:1
   2 OpenRead         0    3    0 3             00 root=3 iDb=0; c
   3 Explain          3    0    0 SCAN TABLE c  00 
   4 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
SQL: [SELECT (1, 3, 3) <= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:2
REG[3] =  i:3
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM c WHERE (1, 3, 3) <= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 0             01 usesStmtJournal=0
  12 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  13 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  14 Lt               6    1    5               61 r[1] = (r[5]<r[6])
REG[6] =  i:1
REG[5] =  i:1
REG[1] =  i:0
  15 ElseNotEq        0   23    0               00 
  16 Integer          3    6    0               00 r[6]=3
REG[6] =  i:3
  17 Integer          2    5    0               00 r[5]=2
REG[5] =  i:2
  18 Lt               5    1    6               61 r[1] = (r[6]<r[5])
REG[5] =  i:2
REG[6] =  i:3
REG[1] =  i:0
  19 ElseNotEq        0   23    0               00 
  23 Goto             0    1    0               00 
   1 IfNot            1   10    1               00 
REG[1] =  i:0
  10 Halt             0    0    0               00 
SQL: [SELECT * FROM c WHERE NOT (1, 3, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 0             01 usesStmtJournal=0
  12 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  13 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  14 Gt               6    1    5               61 r[1] = (r[5]>r[6])
REG[6] =  i:1
REG[5] =  i:1
REG[1] =  i:0
  15 ElseNotEq        0   23    0               00 
  16 Integer          3    6    0               00 r[6]=3
REG[6] =  i:3
  17 Integer          2    5    0               00 r[5]=2
REG[5] =  i:2
  18 Gt               5    1    6               61 r[1] = (r[6]>r[5])
REG[5] =  i:2
REG[6] =  i:3
REG[1] =  i:1
  19 ElseNotEq        0   23    0               00 
  23 Goto             0    1    0               00 
   1 If               1   10    1               00 
REG[1] =  i:1
  10 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:2
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) <= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:2
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (1, NULL, 3) <= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    2 0             01 usesStmtJournal=0
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  13 Lt               5    1    4               61 r[1] = (r[4]<r[5])
REG[5] =  i:1
REG[4] =  i:1
REG[1] =  i:0
  14 ElseNotEq        0   22    0               00 
  15 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  16 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  17 Lt               4    1    5               61 r[1] = (r[5]<r[4])
REG[4] =  i:2
REG[5] =  NULL
REG[1] =  NULL
  18 ElseNotEq        0   22    0               00 
  22 Goto             0    1    0               00 
   1 IfNot            1    9    1               00 
REG[1] =  NULL
   9 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE NOT (1, NULL, 3) <= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    2 0             01 usesStmtJournal=0
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  13 Lt               5    1    4               61 r[1] = (r[4]<r[5])
REG[5] =  i:1
REG[4] =  i:1
REG[1] =  i:0
  14 ElseNotEq        0   22    0               00 
  15 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  16 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  17 Lt               4    1    5               61 r[1] = (r[5]<r[4])
REG[4] =  i:2
REG[5] =  NULL
REG[1] =  NULL
  18 ElseNotEq        0   22    0               00 
  22 Goto             0    1    0               00 
   1 If               1    9    1               00 
REG[1] =  NULL
   9 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:2
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM c WHERE NOT (1, 3, 3) < (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 0             01 usesStmtJournal=0
  12 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  13 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  14 Lt               6    1    5               61 r[1] = (r[5]<r[6])
REG[6] =  i:1
REG[5] =  i:1
REG[1] =  i:0
  15 ElseNotEq        0   23    0               00 
  16 Integer          3    6    0               00 r[6]=3
REG[6] =  i:3
  17 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  18 Lt               5    1    6               61 r[1] = (r[6]<r[5])
REG[5] =  NULL
REG[6] =  i:3
REG[1] =  NULL
  19 ElseNotEq        0   23    0               00 
  23 Goto             0    1    0               00 
   1 If               1   10    1               00 
REG[1] =  NULL
  10 Halt             0    0    0               00 
SQL: [SELECT * FROM c WHERE (1, 3, 3) > (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 0             01 usesStmtJournal=0
  12 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  13 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  14 Gt               6    1    5               61 r[1] = (r[5]>r[6])
REG[6] =  i:1
REG[5] =  i:1
REG[1] =  i:0
  15 ElseNotEq        0   23    0               00 
  16 Integer          3    6    0               00 r[6]=3
REG[6] =  i:3
  17 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  18 Gt               5    1    6               61 r[1] = (r[6]>r[5])
REG[5] =  NULL
REG[6] =  i:3
REG[1] =  NULL
  19 ElseNotEq        0   23    0               00 
  23 Goto             0    1    0               00 
   1 IfNot            1   10    1               00 
REG[1] =  NULL
  10 Halt             0    0    0               00 
SQL: [SELECT * FROM c WHERE NOT (1, 3, 3) > (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 0             01 usesStmtJournal=0
  12 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  13 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  14 Gt               6    1    5               61 r[1] = (r[5]>r[6])
REG[6] =  i:1
REG[5] =  i:1
REG[1] =  i:0
  15 ElseNotEq        0   23    0               00 
  16 Integer          3    6    0               00 r[6]=3
REG[6] =  i:3
  17 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  18 Gt               5    1    6               61 r[1] = (r[6]>r[5])
REG[5] =  NULL
REG[6] =  i:3
REG[1] =  NULL
  19 ElseNotEq        0   23    0               00 
  23 Goto             0    1    0               00 
   1 If               1   10    1               00 
REG[1] =  NULL
  10 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE NOT (1, 3, 3) <= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    2 0             01 usesStmtJournal=0
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  13 Lt               5    1    4               61 r[1] = (r[4]<r[5])
REG[5] =  i:1
REG[4] =  i:1
REG[1] =  i:0
  14 ElseNotEq        0   22    0               00 
  15 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  16 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  17 Lt               4    1    5               61 r[1] = (r[5]<r[4])
REG[4] =  NULL
REG[5] =  i:3
REG[1] =  NULL
  18 ElseNotEq        0   22    0               00 
  22 Goto             0    1    0               00 
   1 If               1    9    1               00 
REG[1] =  NULL
   9 Halt             0    0    0               00 
SQL: [SELECT (1, 3, 3) >= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  NULL
REG[3] =  i:3
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM c WHERE NOT (1, 3, 3) >= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 0             01 usesStmtJournal=0
  12 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  13 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  14 Gt               6    1    5               61 r[1] = (r[5]>r[6])
REG[6] =  i:1
REG[5] =  i:1
REG[1] =  i:0
  15 ElseNotEq        0   23    0               00 
  16 Integer          3    6    0               00 r[6]=3
REG[6] =  i:3
  17 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  18 Gt               5    1    6               61 r[1] = (r[6]>r[5])
REG[5] =  NULL
REG[6] =  i:3
REG[1] =  NULL
  19 ElseNotEq        0   23    0               00 
  23 Goto             0    1    0               00 
   1 If               1   10    1               00 
REG[1] =  NULL
  10 Halt             0    0    0               00 
SQL: [SELECT * FROM c WHERE (1, NULL, 3) < (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 0             01 usesStmtJournal=0
  12 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  13 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  14 Lt               6    1    5               61 r[1] = (r[5]<r[6])
REG[6] =  i:1
REG[5] =  i:1
REG[1] =  i:0
  15 ElseNotEq        0   23    0               00 
  16 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  17 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  18 Lt               5    1    6               61 r[1] = (r[6]<r[5])
REG[5] =  NULL
REG[6] =  NULL
REG[1] =  NULL
  19 ElseNotEq        0   23    0               00 
  23 Goto             0    1    0               00 
   1 IfNot            1   10    1               00 
REG[1] =  NULL
  10 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) > (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               3    1    3               61 r[1] = (r[3]>r[3])
REG[3] =  NULL
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (1, NULL, 3) > (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    2 0             01 usesStmtJournal=0
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  13 Gt               5    1    4               61 r[1] = (r[4]>r[5])
REG[5] =  i:1
REG[4] =  i:1
REG[1] =  i:0
  14 ElseNotEq        0   22    0               00 
  15 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  16 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  17 Gt               4    1    5               61 r[1] = (r[5]>r[4])
REG[4] =  NULL
REG[5] =  NULL
REG[1] =  NULL
  18 ElseNotEq        0   22    0               00 
  22 Goto             0    1    0               00 
   1 IfNot            1    9    1               00 
REG[1] =  NULL
   9 Halt             0    0    0               00 
SQL: [SELECT * FROM c WHERE NOT (1, NULL, 3) > (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 0             01 usesStmtJournal=0
  12 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  13 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  14 Gt               6    1    5               61 r[1] = (r[5]>r[6])
REG[6] =  i:1
REG[5] =  i:1
REG[1] =  i:0
  15 ElseNotEq        0   23    0               00 
  16 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  17 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  18 Gt               5    1    6               61 r[1] = (r[6]>r[5])
REG[5] =  NULL
REG[6] =  NULL
REG[1] =  NULL
  19 ElseNotEq        0   23    0               00 
  23 Goto             0    1    0               00 
   1 If               1   10    1               00 
REG[1] =  NULL
  10 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) <= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               3    1    3               61 r[1] = (r[3]<r[3])
REG[3] =  NULL
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM c WHERE (1, NULL, 3) <= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 0             01 usesStmtJournal=0
  12 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  13 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  14 Lt               6    1    5               61 r[1] = (r[5]<r[6])
REG[6] =  i:1
REG[5] =  i:1
REG[1] =  i:0
  15 ElseNotEq        0   23    0               00 
  16 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  17 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  18 Lt               5    1    6               61 r[1] = (r[6]<r[5])
REG[5] =  NULL
REG[6] =  NULL
REG[1] =  NULL
  19 ElseNotEq        0   23    0               00 
  23 Goto             0    1    0               00 
   1 IfNot            1   10    1               00 
REG[1] =  NULL
  10 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) >= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               3    1    3               61 r[1] = (r[3]>r[3])
REG[3] =  NULL
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM c WHERE (1, NULL, 3) >= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 0             01 usesStmtJournal=0
  12 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  13 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  14 Gt               6    1    5               61 r[1] = (r[5]>r[6])
REG[6] =  i:1
REG[5] =  i:1
REG[1] =  i:0
  15 ElseNotEq        0   23    0               00 
  16 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  17 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  18 Gt               5    1    6               61 r[1] = (r[6]>r[5])
REG[5] =  NULL
REG[6] =  NULL
REG[1] =  NULL
  19 ElseNotEq        0   23    0               00 
  23 Goto             0    1    0               00 
   1 IfNot            1   10    1               00 
REG[1] =  NULL
  10 Halt             0    0    0               00 
SQL: [SELECT * FROM c WHERE NOT (1, NULL, 3) >= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 0             01 usesStmtJournal=0
  12 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  13 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  14 Gt               6    1    5               61 r[1] = (r[5]>r[6])
REG[6] =  i:1
REG[5] =  i:1
REG[1] =  i:0
  15 ElseNotEq        0   23    0               00 
  16 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  17 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  18 Gt               5    1    6               61 r[1] = (r[6]>r[5])
REG[5] =  NULL
REG[6] =  NULL
REG[1] =  NULL
  19 ElseNotEq        0   23    0               00 
  23 Goto             0    1    0               00 
   1 If               1   10    1               00 
REG[1] =  NULL
  10 Halt             0    0    0               00 
SQL: [SELECT (1, 1) == (SELECT * FROM t1 ORDER BY b)
;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    0    2 0             01 usesStmtJournal=0
  34 Integer          1   10    0               00 r[10]=1
REG[10] =  i:1
  35 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         27    2    0               00 r[2]=27; return address
REG[2] =  i:27
   3 Once             0   27    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 OpenEphemeral    1    4    0 k(1,B)        00 nColumn=4
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   9 Explain          9    4    0 SCAN TABLE t1 00 
  10 Rewind           0   22    0               00 
  11 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:1
  12 Column           0    1    6               00 r[6]=t1.b
REG[6] =  i:9223372036854775807
  13 Sequence         1    7    0               00 r[7]=cursor[1].ctr++
REG[7] =  i:0
  14 Move             3    8    1               00 r[8]=r[3]
REG[8] =  i:1
  15 IfNotZero        5   19    0               00 if r[5]!=0 then r[5]--, goto 19
REG[5] =  i:1
  19 MakeRecord       6    3    9               00 r[9]=mkrec(r[6..8])
REG[9] =  s12[040608097FFFFFFFFFFFFFFF............]
  20 IdxInsert        1    9    6 3             00 key=r[9]
REG[9] =  s12[040608097FFFFFFFFFFFFFFF............]
  21 Next             0   11    0               01 
  22 Explain         22    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  23 Sort             1   27    0               00 
  24 Column           1    0    4               00 r[4]=b
REG[4] =  i:9223372036854775807
  25 Column           1    2    3               00 r[3]=a
REG[3] =  i:1
  26 Next             1   24    0               00 
  27 Return           2    0    0               00 
REG[2] =  i:27
  28 Eq               3    1   10               64 r[1] = (r[10]==r[3])
REG[3] =  i:1
REG[10] =  i:1
REG[1] =  i:1
  29 IfNot            1   31    0               00 
REG[1] =  i:1
  30 Eq               4    1   10 (BINARY)      69 r[1] = (r[10]==r[4])
REG[4] =  i:9223372036854775807
REG[10] =  i:1
REG[1] =  i:0
  31 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  32 Halt             0    0    0               00 
SQL: [SELECT (SELECT * FROM t1 ORDER BY a) == (SELECT * FROM t1 ORDER BY a)
  
;]
VDBE Trace:
   0 Init             0   35    0               00 Start at 35
  35 Transaction      0    0    2 0             01 usesStmtJournal=0
  36 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         15    2    0               00 r[2]=15; return address
REG[2] =  i:15
   3 Once             0   15    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 Noop             2    4    0               00 
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   9 Explain          9    4    0 SCAN TABLE t1 00 
  10 Rewind           0   15    0               00 
  11 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:1
  12 Column           0    1    4               00 r[4]=t1.b
REG[4] =  i:9223372036854775807
  13 DecrJumpZero     5   15    0               00 if (--r[5])==0 goto 15
REG[5] =  i:1
  15 Return           2    0    0               00 
REG[2] =  i:15
  16 Integer         29    6    0               00 r[6]=29; return address
REG[6] =  i:29
  17 Once             0   29    0               00 
  18 Explain         18    0    0 SCALAR SUBQUERY 2 00 
  19 Null             0    7    8               00 r[7..8]=NULL; Init subquery result
REG[7] =  NULL
  20 Noop             3    4    0               00 
  21 Integer          1    9    0               00 r[9]=1; LIMIT counter
REG[9] =  i:1
  22 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  23 Explain         23   18    0 SCAN TABLE t1 00 
  24 Rewind           1   29    0               00 
  25 Rowid            1    7    0               00 r[7]=rowid
REG[7] =  i:1
  26 Column           1    1    8               00 r[8]=t1.b
REG[8] =  i:9223372036854775807
  27 DecrJumpZero     9   29    0               00 if (--r[9])==0 goto 29
REG[9] =  i:1
  29 Return           6    0    0               00 
REG[6] =  i:29
  30 Eq               7    1    3               63 r[1] = (r[3]==r[7])
REG[7] =  i:1
REG[3] =  i:1
REG[1] =  i:1
  31 IfNot            1   33    0               00 
REG[1] =  i:1
  32 Eq               8    1    4 (BINARY)      69 r[1] = (r[4]==r[8])
REG[8] =  i:9223372036854775807
REG[4] =  i:9223372036854775807
  33 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  34 Halt             0    0    0               00 
SQL: [SELECT (SELECT 0, 0) == (SELECT * FROM t1 ORDER BY b)
  
;]
VDBE Trace:
   0 Init             0   43    0               00 Start at 43
  43 Transaction      0    0    2 0             01 usesStmtJournal=0
  44 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         11    2    0               00 r[2]=11; return address
REG[2] =  i:11
   3 Once             0   11    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
   9 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  10 DecrJumpZero     5   11    0               00 if (--r[5])==0 goto 11
REG[5] =  i:1
  11 Return           2    0    0               00 
REG[2] =  i:11
  12 Integer         37    6    0               00 r[6]=37; return address
REG[6] =  i:37
  13 Once             0   37    0               00 
  14 Explain         14    0    0 SCALAR SUBQUERY 2 00 
  15 Null             0    7    8               00 r[7..8]=NULL; Init subquery result
REG[7] =  NULL
  16 OpenEphemeral    1    4    0 k(1,B)        00 nColumn=4
  17 Integer          1    9    0               00 r[9]=1; LIMIT counter
REG[9] =  i:1
  18 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
  19 Explain         19   14    0 SCAN TABLE t1 00 
  20 Rewind           0   32    0               00 
  21 Rowid            0    7    0               00 r[7]=rowid
REG[7] =  i:1
  22 Column           0    1   10               00 r[10]=t1.b
REG[10] =  i:9223372036854775807
  23 Sequence         1   11    0               00 r[11]=cursor[1].ctr++
REG[11] =  i:0
  24 Move             7   12    1               00 r[12]=r[7]
REG[12] =  i:1
  25 IfNotZero        9   29    0               00 if r[9]!=0 then r[9]--, goto 29
REG[9] =  i:1
  29 MakeRecord      10    3   13               00 r[13]=mkrec(r[10..12])
REG[13] =  s12[040608097FFFFFFFFFFFFFFF............]
  30 IdxInsert        1   13   10 3             00 key=r[13]
REG[13] =  s12[040608097FFFFFFFFFFFFFFF............]
  31 Next             0   21    0               01 
  32 Explain         32   14    0 USE TEMP B-TREE FOR ORDER BY 00 
  33 Sort             1   37    0               00 
  34 Column           1    0    8               00 r[8]=b
REG[8] =  i:9223372036854775807
  35 Column           1    2    7               00 r[7]=a
REG[7] =  i:1
  36 Next             1   34    0               00 
  37 Return           6    0    0               00 
REG[6] =  i:37
  38 Eq               7    1    3               64 r[1] = (r[3]==r[7])
REG[7] =  i:1
REG[3] =  i:0
REG[1] =  i:0
  39 IfNot            1   41    0               00 
REG[1] =  i:0
  41 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  42 Halt             0    0    0               00 
SQL: [SELECT (1, 1) == (SELECT a,a FROM t1 ORDER BY a, a)
;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    0    2 0             01 usesStmtJournal=0
  22 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  23 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         15    2    0               00 r[2]=15; return address
REG[2] =  i:15
   3 Once             0   15    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 Noop             1    5    0               00 
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   9 Explain          9    4    0 SCAN TABLE t1 00 
  10 Rewind           0   15    0               00 
  11 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:1
  12 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:1
  13 DecrJumpZero     5   15    0               00 if (--r[5])==0 goto 15
REG[5] =  i:1
  15 Return           2    0    0               00 
REG[2] =  i:15
  16 Eq               3    1    6               64 r[1] = (r[6]==r[3])
REG[3] =  i:1
REG[6] =  i:1
REG[1] =  i:1
  17 IfNot            1   19    0               00 
REG[1] =  i:1
  18 Eq               4    1    6               6C r[1] = (r[6]==r[4])
REG[4] =  i:1
REG[6] =  i:1
  19 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  20 Halt             0    0    0               00 
SQL: [SELECT (SELECT * FROM t1 ORDER BY a, a) == (SELECT * FROM t1 ORDER BY a, a)
  
;]
VDBE Trace:
   0 Init             0   35    0               00 Start at 35
  35 Transaction      0    0    2 0             01 usesStmtJournal=0
  36 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         15    2    0               00 r[2]=15; return address
REG[2] =  i:15
   3 Once             0   15    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 Noop             2    5    0               00 
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   9 Explain          9    4    0 SCAN TABLE t1 00 
  10 Rewind           0   15    0               00 
  11 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:1
  12 Column           0    1    4               00 r[4]=t1.b
REG[4] =  i:9223372036854775807
  13 DecrJumpZero     5   15    0               00 if (--r[5])==0 goto 15
REG[5] =  i:1
  15 Return           2    0    0               00 
REG[2] =  i:15
  16 Integer         29    6    0               00 r[6]=29; return address
REG[6] =  i:29
  17 Once             0   29    0               00 
  18 Explain         18    0    0 SCALAR SUBQUERY 2 00 
  19 Null             0    7    8               00 r[7..8]=NULL; Init subquery result
REG[7] =  NULL
  20 Noop             3    5    0               00 
  21 Integer          1    9    0               00 r[9]=1; LIMIT counter
REG[9] =  i:1
  22 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  23 Explain         23   18    0 SCAN TABLE t1 00 
  24 Rewind           1   29    0               00 
  25 Rowid            1    7    0               00 r[7]=rowid
REG[7] =  i:1
  26 Column           1    1    8               00 r[8]=t1.b
REG[8] =  i:9223372036854775807
  27 DecrJumpZero     9   29    0               00 if (--r[9])==0 goto 29
REG[9] =  i:1
  29 Return           6    0    0               00 
REG[6] =  i:29
  30 Eq               7    1    3               63 r[1] = (r[3]==r[7])
REG[7] =  i:1
REG[3] =  i:1
REG[1] =  i:1
  31 IfNot            1   33    0               00 
REG[1] =  i:1
  32 Eq               8    1    4 (BINARY)      69 r[1] = (r[4]==r[8])
REG[8] =  i:9223372036854775807
REG[4] =  i:9223372036854775807
  33 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  34 Halt             0    0    0               00 
SQL: [SELECT (SELECT 0, 0) == (SELECT * FROM t1 ORDER BY a, b)
  
;]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    0    2 0             01 usesStmtJournal=0
  32 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         11    2    0               00 r[2]=11; return address
REG[2] =  i:11
   3 Once             0   11    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
   9 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  10 DecrJumpZero     5   11    0               00 if (--r[5])==0 goto 11
REG[5] =  i:1
  11 Return           2    0    0               00 
REG[2] =  i:11
  12 Integer         25    6    0               00 r[6]=25; return address
REG[6] =  i:25
  13 Once             0   25    0               00 
  14 Explain         14    0    0 SCALAR SUBQUERY 2 00 
  15 Null             0    7    8               00 r[7..8]=NULL; Init subquery result
REG[7] =  NULL
  16 Noop             1    5    0               00 
  17 Integer          1    9    0               00 r[9]=1; LIMIT counter
REG[9] =  i:1
  18 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
  19 Explain         19   14    0 SCAN TABLE t1 00 
  20 Rewind           0   25    0               00 
  21 Rowid            0    7    0               00 r[7]=rowid
REG[7] =  i:1
  22 Column           0    1    8               00 r[8]=t1.b
REG[8] =  i:9223372036854775807
  23 DecrJumpZero     9   25    0               00 if (--r[9])==0 goto 25
REG[9] =  i:1
  25 Return           6    0    0               00 
REG[6] =  i:25
  26 Eq               7    1    3               64 r[1] = (r[3]==r[7])
REG[7] =  i:1
REG[3] =  i:0
REG[1] =  i:0
  27 IfNot            1   29    0               00 
REG[1] =  i:0
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  30 Halt             0    0    0               00 
SQL: [SELECT (SELECT 0, 0) == (SELECT * FROM t1 ORDER BY b, b DESC)
  
;]
VDBE Trace:
   0 Init             0   44    0               00 Start at 44
  44 Transaction      0    0    2 0             01 usesStmtJournal=0
  45 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         11    2    0               00 r[2]=11; return address
REG[2] =  i:11
   3 Once             0   11    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
   9 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  10 DecrJumpZero     5   11    0               00 if (--r[5])==0 goto 11
REG[5] =  i:1
  11 Return           2    0    0               00 
REG[2] =  i:11
  12 Integer         38    6    0               00 r[6]=38; return address
REG[6] =  i:38
  13 Once             0   38    0               00 
  14 Explain         14    0    0 SCALAR SUBQUERY 2 00 
  15 Null             0    7    8               00 r[7..8]=NULL; Init subquery result
REG[7] =  NULL
  16 OpenEphemeral    1    5    0 k(2,B,-B)     00 nColumn=5
  17 Integer          1    9    0               00 r[9]=1; LIMIT counter
REG[9] =  i:1
  18 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
  19 Explain         19   14    0 SCAN TABLE t1 00 
  20 Rewind           0   33    0               00 
  21 Rowid            0    7    0               00 r[7]=rowid
REG[7] =  i:1
  22 Column           0    1   10               00 r[10]=t1.b
REG[10] =  i:9223372036854775807
  23 Column           0    1   11               00 r[11]=t1.b
REG[11] =  i:9223372036854775807
  24 Sequence         1   12    0               00 r[12]=cursor[1].ctr++
REG[12] =  i:0
  25 Move             7   13    1               00 r[13]=r[7]
REG[13] =  i:1
  26 IfNotZero        9   30    0               00 if r[9]!=0 then r[9]--, goto 30
REG[9] =  i:1
  30 MakeRecord      10    4   14               00 r[14]=mkrec(r[10..13])
REG[14] =  s21[05060608097FFFFFFFFFFFFFFF7FFFFF................]
  31 IdxInsert        1   14   10 4             00 key=r[14]
REG[14] =  s21[05060608097FFFFFFFFFFFFFFF7FFFFF................]
  32 Next             0   21    0               01 
  33 Explain         33   14    0 USE TEMP B-TREE FOR ORDER BY 00 
  34 Sort             1   38    0               00 
  35 Column           1    1    8               00 r[8]=b
REG[8] =  i:9223372036854775807
  36 Column           1    3    7               00 r[7]=a
REG[7] =  i:1
  37 Next             1   35    0               00 
  38 Return           6    0    0               00 
REG[6] =  i:38
  39 Eq               7    1    3               64 r[1] = (r[3]==r[7])
REG[7] =  i:1
REG[3] =  i:0
REG[1] =  i:0
  40 IfNot            1   42    0               00 
REG[1] =  i:0
  42 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  43 Halt             0    0    0               00 
SQL: [SELECT (3, 6) == (SELECT b,a FROM t1 ORDER BY b DESC, a DESC)
;]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      0    0    2 0             01 usesStmtJournal=0
  33 Integer          3   10    0               00 r[10]=3
REG[10] =  i:3
  34 Integer          6   11    0               00 r[11]=6
REG[11] =  i:6
  35 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         26    2    0               00 r[2]=26; return address
REG[2] =  i:26
   3 Once             0   26    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 OpenEphemeral    1    5    0 k(2,-B,-B)    00 nColumn=5
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   9 Explain          9    4    0 SCAN TABLE t1 00 
  10 Rewind           0   21    0               00 
  11 Column           0    1    6               00 r[6]=t1.b
REG[6] =  i:9223372036854775807
  12 Rowid            0    7    0               00 r[7]=rowid
REG[7] =  i:1
  13 Sequence         1    8    0               00 r[8]=cursor[1].ctr++
REG[8] =  i:0
  14 IfNotZero        5   18    0               00 if r[5]!=0 then r[5]--, goto 18
REG[5] =  i:1
  18 MakeRecord       6    3    9               00 r[9]=mkrec(r[6..8])
REG[9] =  s12[040609087FFFFFFFFFFFFFFF............]
  19 IdxInsert        1    9    6 3             00 key=r[9]
REG[9] =  s12[040609087FFFFFFFFFFFFFFF............]
  20 Next             0   11    0               01 
  21 Explain         21    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  22 Sort             1   26    0               00 
  23 Column           1    1    4               00 r[4]=a
REG[4] =  i:1
  24 Column           1    0    3               00 r[3]=b
REG[3] =  i:9223372036854775807
  25 Next             1   23    0               00 
  26 Return           2    0    0               00 
REG[2] =  i:26
  27 Eq               3    1   10 (BINARY)      61 r[1] = (r[10]==r[3])
REG[3] =  i:9223372036854775807
REG[10] =  i:3
REG[1] =  i:0
  28 IfNot            1   30    0               00 
REG[1] =  i:0
  30 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  31 Halt             0    0    0               00 
SQL: [SELECT (SELECT * FROM t1 ORDER BY b DESC, a DESC) == (SELECT * FROM t1 ORDER BY b DESC, a DESC)
  
;]
VDBE Trace:
   0 Init             0   57    0               00 Start at 57
  57 Transaction      0    0    2 0             01 usesStmtJournal=0
  58 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         26    2    0               00 r[2]=26; return address
REG[2] =  i:26
   3 Once             0   26    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 OpenEphemeral    2    5    0 k(2,-B,-B)    00 nColumn=5
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   9 Explain          9    4    0 SCAN TABLE t1 00 
  10 Rewind           0   21    0               00 
  11 Column           0    1    6               00 r[6]=t1.b
REG[6] =  i:9223372036854775807
  12 Rowid            0    7    0               00 r[7]=rowid
REG[7] =  i:1
  13 Sequence         2    8    0               00 r[8]=cursor[2].ctr++
REG[8] =  i:0
  14 IfNotZero        5   18    0               00 if r[5]!=0 then r[5]--, goto 18
REG[5] =  i:1
  18 MakeRecord       6    3    9               00 r[9]=mkrec(r[6..8])
REG[9] =  s12[040609087FFFFFFFFFFFFFFF............]
  19 IdxInsert        2    9    6 3             00 key=r[9]
REG[9] =  s12[040609087FFFFFFFFFFFFFFF............]
  20 Next             0   11    0               01 
  21 Explain         21    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  22 Sort             2   26    0               00 
  23 Column           2    0    4               00 r[4]=b
REG[4] =  i:9223372036854775807
  24 Column           2    1    3               00 r[3]=a
REG[3] =  i:1
  25 Next             2   23    0               00 
  26 Return           2    0    0               00 
REG[2] =  i:26
  27 Integer         51   10    0               00 r[10]=51; return address
REG[10] =  i:51
  28 Once             0   51    0               00 
  29 Explain         29    0    0 SCALAR SUBQUERY 2 00 
  30 Null             0   11   12               00 r[11..12]=NULL; Init subquery result
REG[11] =  NULL
  31 OpenEphemeral    3    5    0 k(2,-B,-B)    00 nColumn=5
  32 Integer          1   13    0               00 r[13]=1; LIMIT counter
REG[13] =  i:1
  33 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  34 Explain         34   29    0 SCAN TABLE t1 00 
  35 Rewind           1   46    0               00 
  36 Column           1    1   14               00 r[14]=t1.b
REG[14] =  i:9223372036854775807
  37 Rowid            1   15    0               00 r[15]=rowid
REG[15] =  i:1
  38 Sequence         3   16    0               00 r[16]=cursor[3].ctr++
REG[16] =  i:0
  39 IfNotZero       13   43    0               00 if r[13]!=0 then r[13]--, goto 43
REG[13] =  i:1
  43 MakeRecord      14    3   17               00 r[17]=mkrec(r[14..16])
REG[17] =  s12[040609087FFFFFFFFFFFFFFF............]
  44 IdxInsert        3   17   14 3             00 key=r[17]
REG[17] =  s12[040609087FFFFFFFFFFFFFFF............]
  45 Next             1   36    0               01 
  46 Explain         46   29    0 USE TEMP B-TREE FOR ORDER BY 00 
  47 Sort             3   51    0               00 
  48 Column           3    0   12               00 r[12]=b
REG[12] =  i:9223372036854775807
  49 Column           3    1   11               00 r[11]=a
REG[11] =  i:1
  50 Next             3   48    0               00 
  51 Return          10    0    0               00 
REG[10] =  i:51
  52 Eq              11    1    3               63 r[1] = (r[3]==r[11])
REG[11] =  i:1
REG[3] =  i:1
REG[1] =  i:1
  53 IfNot            1   55    0               00 
REG[1] =  i:1
  54 Eq              12    1    4 (BINARY)      69 r[1] = (r[4]==r[12])
REG[12] =  i:9223372036854775807
REG[4] =  i:9223372036854775807
  55 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  56 Halt             0    0    0               00 
SQL: [SELECT (SELECT 0, 0) == (SELECT * FROM t1 ORDER BY a DESC, b DESC)
  
;]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    0    2 0             01 usesStmtJournal=0
  32 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         11    2    0               00 r[2]=11; return address
REG[2] =  i:11
   3 Once             0   11    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
   9 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  10 DecrJumpZero     5   11    0               00 if (--r[5])==0 goto 11
REG[5] =  i:1
  11 Return           2    0    0               00 
REG[2] =  i:11
  12 Integer         25    6    0               00 r[6]=25; return address
REG[6] =  i:25
  13 Once             0   25    0               00 
  14 Explain         14    0    0 SCALAR SUBQUERY 2 00 
  15 Null             0    7    8               00 r[7..8]=NULL; Init subquery result
REG[7] =  NULL
  16 Noop             1    5    0               00 
  17 Integer          1    9    0               00 r[9]=1; LIMIT counter
REG[9] =  i:1
  18 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
  19 Explain         19   14    0 SCAN TABLE t1 00 
  20 Last             0   25    0               00 
  21 Rowid            0    7    0               00 r[7]=rowid
REG[7] =  i:1
  22 Column           0    1    8               00 r[8]=t1.b
REG[8] =  i:9223372036854775807
  23 DecrJumpZero     9   25    0               00 if (--r[9])==0 goto 25
REG[9] =  i:1
  25 Return           6    0    0               00 
REG[6] =  i:25
  26 Eq               7    1    3               64 r[1] = (r[3]==r[7])
REG[7] =  i:1
REG[3] =  i:0
REG[1] =  i:0
  27 IfNot            1   29    0               00 
REG[1] =  i:0
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  30 Halt             0    0    0               00 
SQL: [SELECT ((3, 5)) == (SELECT * FROM t1 ORDER BY b DESC, a)
;]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      0    0    2 0             01 usesStmtJournal=0
  33 Integer          3   10    0               00 r[10]=3
REG[10] =  i:3
  34 Integer          5   11    0               00 r[11]=5
REG[11] =  i:5
  35 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         26    2    0               00 r[2]=26; return address
REG[2] =  i:26
   3 Once             0   26    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 OpenEphemeral    1    5    0 k(2,-B,B)     00 nColumn=5
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   9 Explain          9    4    0 SCAN TABLE t1 00 
  10 Rewind           0   21    0               00 
  11 Column           0    1    6               00 r[6]=t1.b
REG[6] =  i:9223372036854775807
  12 Rowid            0    7    0               00 r[7]=rowid
REG[7] =  i:1
  13 Sequence         1    8    0               00 r[8]=cursor[1].ctr++
REG[8] =  i:0
  14 IfNotZero        5   18    0               00 if r[5]!=0 then r[5]--, goto 18
REG[5] =  i:1
  18 MakeRecord       6    3    9               00 r[9]=mkrec(r[6..8])
REG[9] =  s12[040609087FFFFFFFFFFFFFFF............]
  19 IdxInsert        1    9    6 3             00 key=r[9]
REG[9] =  s12[040609087FFFFFFFFFFFFFFF............]
  20 Next             0   11    0               01 
  21 Explain         21    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  22 Sort             1   26    0               00 
  23 Column           1    0    4               00 r[4]=b
REG[4] =  i:9223372036854775807
  24 Column           1    1    3               00 r[3]=a
REG[3] =  i:1
  25 Next             1   23    0               00 
  26 Return           2    0    0               00 
REG[2] =  i:26
  27 Eq               3    1   10               64 r[1] = (r[10]==r[3])
REG[3] =  i:1
REG[10] =  i:3
REG[1] =  i:0
  28 IfNot            1   30    0               00 
REG[1] =  i:0
  30 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  31 Halt             0    0    0               00 
SQL: [SELECT (SELECT 3, 5) == (SELECT b,b FROM t1 ORDER BY b DESC, b)
;]
VDBE Trace:
   0 Init             0   44    0               00 Start at 44
  44 Transaction      0    0    2 0             01 usesStmtJournal=0
  45 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         11    2    0               00 r[2]=11; return address
REG[2] =  i:11
   3 Once             0   11    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
   9 Integer          5    4    0               00 r[4]=5
REG[4] =  i:5
  10 DecrJumpZero     5   11    0               00 if (--r[5])==0 goto 11
REG[5] =  i:1
  11 Return           2    0    0               00 
REG[2] =  i:11
  12 Integer         38    6    0               00 r[6]=38; return address
REG[6] =  i:38
  13 Once             0   38    0               00 
  14 Explain         14    0    0 SCALAR SUBQUERY 2 00 
  15 Null             0    7    8               00 r[7..8]=NULL; Init subquery result
REG[7] =  NULL
  16 OpenEphemeral    1    5    0 k(2,-B,B)     00 nColumn=5
  17 Integer          1    9    0               00 r[9]=1; LIMIT counter
REG[9] =  i:1
  18 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
  19 Explain         19   14    0 SCAN TABLE t1 00 
  20 Rewind           0   33    0               00 
  21 Column           0    1    7               00 r[7]=t1.b
REG[7] =  i:9223372036854775807
  22 Column           0    1   10               00 r[10]=t1.b
REG[10] =  i:9223372036854775807
  23 Column           0    1   11               00 r[11]=t1.b
REG[11] =  i:9223372036854775807
  24 Sequence         1   12    0               00 r[12]=cursor[1].ctr++
REG[12] =  i:0
  25 Move             7   13    1               00 r[13]=r[7]
REG[13] =  i:9223372036854775807
  26 IfNotZero        9   30    0               00 if r[9]!=0 then r[9]--, goto 30
REG[9] =  i:1
  30 MakeRecord      10    4   14               00 r[14]=mkrec(r[10..13])
REG[14] =  s29[05060608067FFFFFFFFFFFFFFF7FFFFF................]
  31 IdxInsert        1   14   10 4             00 key=r[14]
REG[14] =  s29[05060608067FFFFFFFFFFFFFFF7FFFFF................]
  32 Next             0   21    0               01 
  33 Explain         33   14    0 USE TEMP B-TREE FOR ORDER BY 00 
  34 Sort             1   38    0               00 
  35 Column           1    1    8               00 r[8]=b
REG[8] =  i:9223372036854775807
  36 Column           1    3    7               00 r[7]=b
REG[7] =  i:9223372036854775807
  37 Next             1   35    0               00 
  38 Return           6    0    0               00 
REG[6] =  i:38
  39 Eq               7    1    3 (BINARY)      61 r[1] = (r[3]==r[7])
REG[7] =  i:9223372036854775807
REG[3] =  i:3
REG[1] =  i:0
  40 IfNot            1   42    0               00 
REG[1] =  i:0
  42 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  43 Halt             0    0    0               00 
SQL: [SELECT (SELECT 3, 5) == (SELECT * FROM t1 ORDER BY b DESC, b)
;]
VDBE Trace:
   0 Init             0   44    0               00 Start at 44
  44 Transaction      0    0    2 0             01 usesStmtJournal=0
  45 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         11    2    0               00 r[2]=11; return address
REG[2] =  i:11
   3 Once             0   11    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
   9 Integer          5    4    0               00 r[4]=5
REG[4] =  i:5
  10 DecrJumpZero     5   11    0               00 if (--r[5])==0 goto 11
REG[5] =  i:1
  11 Return           2    0    0               00 
REG[2] =  i:11
  12 Integer         38    6    0               00 r[6]=38; return address
REG[6] =  i:38
  13 Once             0   38    0               00 
  14 Explain         14    0    0 SCALAR SUBQUERY 2 00 
  15 Null             0    7    8               00 r[7..8]=NULL; Init subquery result
REG[7] =  NULL
  16 OpenEphemeral    1    5    0 k(2,-B,B)     00 nColumn=5
  17 Integer          1    9    0               00 r[9]=1; LIMIT counter
REG[9] =  i:1
  18 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
  19 Explain         19   14    0 SCAN TABLE t1 00 
  20 Rewind           0   33    0               00 
  21 Rowid            0    7    0               00 r[7]=rowid
REG[7] =  i:1
  22 Column           0    1   10               00 r[10]=t1.b
REG[10] =  i:9223372036854775807
  23 Column           0    1   11               00 r[11]=t1.b
REG[11] =  i:9223372036854775807
  24 Sequence         1   12    0               00 r[12]=cursor[1].ctr++
REG[12] =  i:0
  25 Move             7   13    1               00 r[13]=r[7]
REG[13] =  i:1
  26 IfNotZero        9   30    0               00 if r[9]!=0 then r[9]--, goto 30
REG[9] =  i:1
  30 MakeRecord      10    4   14               00 r[14]=mkrec(r[10..13])
REG[14] =  s21[05060608097FFFFFFFFFFFFFFF7FFFFF................]
  31 IdxInsert        1   14   10 4             00 key=r[14]
REG[14] =  s21[05060608097FFFFFFFFFFFFFFF7FFFFF................]
  32 Next             0   21    0               01 
  33 Explain         33   14    0 USE TEMP B-TREE FOR ORDER BY 00 
  34 Sort             1   38    0               00 
  35 Column           1    1    8               00 r[8]=b
REG[8] =  i:9223372036854775807
  36 Column           1    3    7               00 r[7]=a
REG[7] =  i:1
  37 Next             1   35    0               00 
  38 Return           6    0    0               00 
REG[6] =  i:38
  39 Eq               7    1    3               64 r[1] = (r[3]==r[7])
REG[7] =  i:1
REG[3] =  i:3
REG[1] =  i:0
  40 IfNot            1   42    0               00 
REG[1] =  i:0
  42 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  43 Halt             0    0    0               00 
SQL: [SELECT (SELECT 0, 0) == (SELECT * FROM t1 ORDER BY a DESC, b)
  
;]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    0    2 0             01 usesStmtJournal=0
  32 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         11    2    0               00 r[2]=11; return address
REG[2] =  i:11
   3 Once             0   11    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
   9 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  10 DecrJumpZero     5   11    0               00 if (--r[5])==0 goto 11
REG[5] =  i:1
  11 Return           2    0    0               00 
REG[2] =  i:11
  12 Integer         25    6    0               00 r[6]=25; return address
REG[6] =  i:25
  13 Once             0   25    0               00 
  14 Explain         14    0    0 SCALAR SUBQUERY 2 00 
  15 Null             0    7    8               00 r[7..8]=NULL; Init subquery result
REG[7] =  NULL
  16 Noop             1    5    0               00 
  17 Integer          1    9    0               00 r[9]=1; LIMIT counter
REG[9] =  i:1
  18 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
  19 Explain         19   14    0 SCAN TABLE t1 00 
  20 Last             0   25    0               00 
  21 Rowid            0    7    0               00 r[7]=rowid
REG[7] =  i:1
  22 Column           0    1    8               00 r[8]=t1.b
REG[8] =  i:9223372036854775807
  23 DecrJumpZero     9   25    0               00 if (--r[9])==0 goto 25
REG[9] =  i:1
  25 Return           6    0    0               00 
REG[6] =  i:25
  26 Eq               7    1    3               64 r[1] = (r[3]==r[7])
REG[7] =  i:1
REG[3] =  i:0
REG[1] =  i:0
  27 IfNot            1   29    0               00 
REG[1] =  i:0
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  30 Halt             0    0    0               00 
SQL: [SELECT (2, 2) BETWEEN (2, 2) AND (3, 3)
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
  12 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  13 Integer          2    5    0               00 r[5]=2
REG[5] =  i:2
  14 Integer          3    7    0               00 r[7]=3
REG[7] =  i:3
  15 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               5    4    2               61 r[4] = (r[2]>r[5])
REG[5] =  i:2
REG[2] =  i:2
REG[4] =  i:0
   3 ElseNotEq        0    5    0               00 
   4 Ge               5    4    3               61 r[4] = (r[3]>=r[5])
REG[5] =  i:2
REG[3] =  i:2
REG[4] =  i:1
   5 Lt               7    6    2               61 r[6] = (r[2]<r[7])
REG[7] =  i:3
REG[2] =  i:2
REG[6] =  i:1
   6 ElseNotEq        0    8    0               00 
   8 And              6    4    1               00 r[1]=(r[6] && r[4])
REG[6] =  i:1
REG[4] =  i:1
REG[1] =  i:1
   9 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  10 Halt             0    0    0               00 
SQL: [SELECT (2, 2) BETWEEN (2, NULL) AND (3, 3)
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
  12 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  13 Integer          2    5    0               00 r[5]=2
REG[5] =  i:2
  14 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  15 Integer          3    8    0               00 r[8]=3
REG[8] =  i:3
  16 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               5    4    2               61 r[4] = (r[2]>r[5])
REG[5] =  i:2
REG[2] =  i:2
REG[4] =  i:0
   3 ElseNotEq        0    5    0               00 
   4 Ge               6    4    3               61 r[4] = (r[3]>=r[6])
REG[6] =  NULL
REG[3] =  i:2
REG[4] =  NULL
   5 Lt               8    7    2               61 r[7] = (r[2]<r[8])
REG[8] =  i:3
REG[2] =  i:2
REG[7] =  i:1
   6 ElseNotEq        0    8    0               00 
   8 And              7    4    1               00 r[1]=(r[7] && r[4])
REG[7] =  i:1
REG[4] =  NULL
REG[1] =  NULL
   9 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  10 Halt             0    0    0               00 
SQL: [SELECT (NULL, 0) IN (SELECT * FROM t1)
;]
VDBE Trace:
   0 Init             0   35    0               00 Start at 35
  35 Transaction      0    0    2 0             01 usesStmtJournal=0
  36 Null             0    7    0               00 r[7]=NULL
REG[7] =  NULL
  37 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  38 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   3 Noop             0    0    0               00 begin IN expr
   4 Integer         16    3    0               00 r[3]=16; return address
REG[3] =  i:16
   5 Once             0   16    0               00 
   6 OpenEphemeral    1    2    0 k(2,,B)       00 nColumn=2; Result of SELECT 1
   7 Explain          7    0    0 LIST SUBQUERY 1 00 
   8 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   9 Explain          9    7    0 SCAN TABLE t1 00 
  10 Rewind           0   16    0               00 
  11 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:1
  12 Column           0    1    5               00 r[5]=t1.b
REG[5] =  i:9223372036854775807
  13 MakeRecord       4    2    6 DA            00 r[6]=mkrec(r[4..5])
REG[6] =  s11[0309067FFFFFFFFFFFFFFF...........]
  14 IdxInsert        1    6    4 2             00 key=r[6]
REG[6] =  s11[0309067FFFFFFFFFFFFFFF...........]
  15 Next             0   11    0               01 
  16 Return           3    0    0               00 
REG[3] =  i:16
  17 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
  18 Rewind           1   20    0               00 
  19 Column           1    0    2               80 r[2]=first_entry_in(1)
REG[2] =  i:1
  20 IsNull           7   23    0               00 if r[7]==NULL goto 23
REG[7] =  NULL
  23 Rewind           1   32    0               00 
  24 Column           1    0    6               00 r[6]=
REG[6] =  i:1
  25 Ne               7   29    6               00 if r[6]!=r[7] goto 29
REG[7] =  NULL
REG[6] =  i:1
  26 Column           1    1    6               00 r[6]=
REG[6] =  i:9223372036854775807
  27 Ne               8   29    6               00 if r[6]!=r[8] goto 29
REG[8] =  i:0
REG[6] =  i:9223372036854775807
  29 Next             1   24    0               00 
  30 Goto             0   32    0               00 end IN expr
  32 AddImm           1    0    0               00 r[1]=r[1]+0
REG[1] =  NULL
  33 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  34 Halt             0    0    0               00 
SQL: [;INSERT INTO c VALUES('ABC', 1, 'ii');]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    1    2 0             01 usesStmtJournal=0
  10 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 3             00 root=3 iDb=0; c
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 String8          0    2    0 ABC           00 r[2]='ABC'
REG[2] =   t3[ABC](8)
   4 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   5 String8          0    4    0 ii            00 r[4]='ii'
REG[4] =   t2[ii](8)
   6 MakeRecord       2    3    5               00 r[5]=mkrec(r[2..4])
REG[5] =  s9[041309114142436969....ABCii]
   7 Insert           0    5    1 c             39 intkey=r[1] data=r[5]
REG[5] =  s9[041309114142436969....ABCii]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [;INSERT INTO c VALUES('def', 2, 'iii');]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    1    2 0             01 usesStmtJournal=0
  10 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 3             00 root=3 iDb=0; c
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   3 String8          0    2    0 def           00 r[2]='def'
REG[2] =   t3[def](8)
   4 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   5 String8          0    4    0 iii           00 r[4]='iii'
REG[4] =   t3[iii](8)
   6 MakeRecord       2    3    5               00 r[5]=mkrec(r[2..4])
REG[5] =  s11[0413011364656602696969....def.iii]
   7 Insert           0    5    1 c             39 intkey=r[1] data=r[5]
REG[5] =  s11[0413011364656602696969....def.iii]
REG[1] =  i:2
   8 Halt             0    0    0               00 
SQL: [;
;SELECT b FROM t1 WHERE (a, a) = (SELECT 'abc', 1);]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    2 0             01 usesStmtJournal=0
  20 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SEARCH TABLE t1 USING INTEGER PRIMARY KEY (rowid=?) 00 
   3 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   4 Once             0   12    0               00 
   5 Explain          5    0    0 SCALAR SUBQUERY 1 00 
   6 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 Explain          8    5    0 SCAN CONSTANT ROW 00 
   9 String8          0    3    0 abc           00 r[3]='abc'
REG[3] =   t3[abc](8)
  10 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  11 DecrJumpZero     5   12    0               00 if (--r[5])==0 goto 12
REG[5] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 SeekRowid        0   18    3               00 intkey=r[3]
REG[3] =   t3[abc](8)
  18 Halt             0    0    0               00 
SQL: [;
;SELECT a FROM t1 WHERE a = (SELECT 'abc' COLLATE nocase) AND a = (SELECT 1);]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    0    2 0             01 usesStmtJournal=0
  28 Goto             0    1    0               00 
   1 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SEARCH TABLE t1 USING INTEGER PRIMARY KEY (rowid=?) 00 
   3 Integer         11    2    0               00 r[2]=11; return address
REG[2] =  i:11
   4 Once             0   11    0               00 
   5 Explain          5    0    0 SCALAR SUBQUERY 1 00 
   6 Null             0    3    3               00 r[3..3]=NULL; Init subquery result
REG[3] =  NULL
   7 Integer          1    4    0               00 r[4]=1; LIMIT counter
REG[4] =  i:1
   8 Explain          8    5    0 SCAN CONSTANT ROW 00 
   9 String8          0    3    0 abc           00 r[3]='abc'
REG[3] =   t3[abc](8)
  10 DecrJumpZero     4   11    0               00 if (--r[4])==0 goto 11
REG[4] =  i:1
  11 Return           2    0    0               00 
REG[2] =  i:11
  12 SeekRowid        0   26    3               00 intkey=r[3]
REG[3] =   t3[abc](8)
  26 Halt             0    0    0               00 
SQL: [;
;SELECT b FROM t1 WHERE a = (SELECT 'abc') COLLATE nocase AND b = (SELECT 1);]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    0    2 0             01 usesStmtJournal=0
  28 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SEARCH TABLE t1 USING INTEGER PRIMARY KEY (rowid=?) 00 
   3 Integer         11    2    0               00 r[2]=11; return address
REG[2] =  i:11
   4 Once             0   11    0               00 
   5 Explain          5    0    0 SCALAR SUBQUERY 1 00 
   6 Null             0    3    3               00 r[3..3]=NULL; Init subquery result
REG[3] =  NULL
   7 Integer          1    4    0               00 r[4]=1; LIMIT counter
REG[4] =  i:1
   8 Explain          8    5    0 SCAN CONSTANT ROW 00 
   9 String8          0    3    0 abc           00 r[3]='abc'
REG[3] =   t3[abc](8)
  10 DecrJumpZero     4   11    0               00 if (--r[4])==0 goto 11
REG[4] =  i:1
  11 Return           2    0    0               00 
REG[2] =  i:11
  12 SeekRowid        0   26    3               00 intkey=r[3]
REG[3] =   t3[abc](8)
  26 Halt             0    0    0               00 
SQL: [;
;SELECT a FROM t1 WHERE (a, b) = (SELECT 2, 'def');]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    2 0             01 usesStmtJournal=0
  20 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SEARCH TABLE t1 USING INTEGER PRIMARY KEY (rowid=?) 00 
   3 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   4 Once             0   12    0               00 
   5 Explain          5    0    0 SCALAR SUBQUERY 1 00 
   6 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 Explain          8    5    0 SCAN CONSTANT ROW 00 
   9 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  10 String8          0    4    0 def           00 r[4]='def'
REG[4] =   t3[def](8)
  11 DecrJumpZero     5   12    0               00 if (--r[5])==0 goto 12
REG[5] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 SeekRowid        0   18    3               00 intkey=r[3]
REG[3] =  i:2
  18 Halt             0    0    0               00 
SQL: [;INSERT INTO c VALUES(2, 2, 2);]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    1    2 0             01 usesStmtJournal=0
  10 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 3             00 root=3 iDb=0; c
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   3 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
   4 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   5 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
   6 MakeRecord       2    3    5               00 r[5]=mkrec(r[2..4])
REG[5] =  s7[04010101020202.......]
   7 Insert           0    5    1 c             39 intkey=r[1] data=r[5]
REG[5] =  s7[04010101020202.......]
REG[1] =  i:3
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (b, a) IS (2, 2)
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 0             01 usesStmtJournal=0
  12 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  13 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SEARCH TABLE t1 USING INTEGER PRIMARY KEY (rowid=?) 00 
   3 Integer          2    1    0               00 r[1]=2
REG[1] =  i:2
   4 SeekRowid        0   10    1               00 intkey=r[1]
REG[1] =  i:2
  10 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (b, b) < (2, 3)
;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 0             01 usesStmtJournal=0
  16 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  17 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  18 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   14    0               00 
   4 Column           0    1    2               00 r[2]=t1.b
REG[2] =  i:9223372036854775807
   5 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:2
REG[2] =  i:9223372036854775807
REG[1] =  i:0
   6 ElseNotEq        0    9    0               00 
   9 IfNot            1   13    1               00 
REG[1] =  i:0
  13 Next             0    4    0               01 
  14 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (a, a) > ('2', 1)
;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             01 usesStmtJournal=0
  17 String8          0    3    0 2             00 r[3]='2'
REG[3] =   t1[2](8)
  18 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  19 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SEARCH TABLE t1 USING INTEGER PRIMARY KEY (rowid>?) 00 
   3 String8          0    1    0 2             00 r[1]='2'
REG[1] =   t1[2](8)
   4 SeekGE           0   15    1               00 key=r[1]; pk
REG[1] =   t1[2](8)
  15 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t1 WHERE (select min(b) FROM t1) IN (?, ?, ?)

;]
VDBE Trace:
   0 Init             0   43    0               00 Start at 43
  43 Transaction      0    0    2 0             01 usesStmtJournal=0
  44 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   42    0               00 
   4 Noop             0    0    0               00 begin IN expr
   5 Integer         17    1    0               00 r[1]=17; return address
REG[1] =  i:17
   6 Once             0   17    0               00 
   7 OpenEphemeral    2    1    0 k(1,)         00 nColumn=1; RHS of IN operator
   8 Variable         1    2    0               00 r[2]=parameter(1,)
REG[2] =  NULL
   9 MakeRecord       2    1    3 A             00 r[3]=mkrec(r[2])
REG[3] =  s2[0200..]
  10 IdxInsert        2    3    2 1             00 key=r[3]
REG[3] =  s2[0200..]
  11 Variable         2    2    0               00 r[2]=parameter(2,)
REG[2] =  NULL
  12 MakeRecord       2    1    3 A             00 r[3]=mkrec(r[2])
REG[3] =  s2[0200..]
  13 IdxInsert        2    3    2 1             00 key=r[3]
REG[3] =  s2[0200..]
  14 Variable         3    2    0               00 r[2]=parameter(3,)
REG[2] =  NULL
  15 MakeRecord       2    1    3 A             00 r[3]=mkrec(r[2])
REG[3] =  s2[0200..]
  16 IdxInsert        2    3    2 1             00 key=r[3]
REG[3] =  s2[0200..]
  17 Return           1    0    0               00 
REG[1] =  i:17
  18 Integer         34    4    0               00 r[4]=34; return address
REG[4] =  i:34
  19 Once             0   34    0               00 
  20 Explain         20    0    0 SCALAR SUBQUERY 1 00 
  21 Null             0    5    5               00 r[5..5]=NULL; Init subquery result
REG[5] =  NULL
  22 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
  23 Null             0    7    8               00 r[7..8]=NULL
REG[7] =  NULL
  24 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  25 Explain         25   20    0 SEARCH TABLE t1 00 
  26 Rewind           1   31    0               00 
  27 Column           1    1    2               00 r[2]=t1.b
REG[2] =  i:9223372036854775807
  28 CollSeq          0    0    0 (BINARY)      00 
  29 AggStep          0    2    7 min(1)        01 accum=r[7] step(r[2])
REG[2] =  i:9223372036854775807
  30 Next             1   27    0               01 
  31 AggFinal         7    1    0 min(1)        00 accum=r[7] N=1
  32 Copy             7    5    0               00 r[5]=r[7]
REG[5] =  i:9223372036854775807
  33 DecrJumpZero     6   34    0               00 if (--r[6])==0 goto 34
REG[6] =  i:1
  34 Return           4    0    0               00 
REG[4] =  i:34
  35 IsNull           5   41    0               00 if r[5]==NULL goto 41
REG[5] =  i:9223372036854775807
  36 Affinity         5    1    0               00 affinity(r[5])
  37 NotFound         2   41    5 1             00 key=r[5]; end IN expr
REG[5] =  i:9223372036854775807
  41 Next             0    4    0               01 
  42 Halt             0    0    0               00 
SQL: [;INSERT INTO c VALUES(2, 2, 2);]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    1    2 0             01 usesStmtJournal=0
  10 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 3             00 root=3 iDb=0; c
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   3 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
   4 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   5 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
   6 MakeRecord       2    3    5               00 r[5]=mkrec(r[2..4])
REG[5] =  s7[04010101020202.......]
   7 Insert           0    5    1 c             39 intkey=r[1] data=r[5]
REG[5] =  s7[04010101020202.......]
REG[1] =  i:4
   8 Halt             0    0    0               00 
SQL: [SELECT b FROM t1 WHERE (b, b) > (2, 2)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    2 0             01 usesStmtJournal=0
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   13    0               00 
   4 Column           0    1    2               00 r[2]=t1.b
REG[2] =  i:9223372036854775807
   5 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:2
REG[2] =  i:9223372036854775807
REG[1] =  i:1
   6 ElseNotEq        0    9    0               00 
   9 IfNot            1   12    1               00 
REG[1] =  i:1
  10 Column           0    1    4               00 r[4]=t1.b
REG[4] =  i:9223372036854775807
  11 ResultRow        4    1    0               00 output=r[4]
REG[4] =  i:9223372036854775807
  12 Next             0    4    0               01 
  13 Halt             0    0    0               00 
SQL: [SELECT b FROM t1 WHERE (a, b) < (4, 5)
;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    2 0             01 usesStmtJournal=0
  18 Integer          4    5    0               00 r[5]=4
REG[5] =  i:4
  19 Integer          5    6    0               00 r[6]=5
REG[6] =  i:5
  20 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SEARCH TABLE t1 USING INTEGER PRIMARY KEY (rowid<?) 00 
   3 Rewind           0   16    0               00 
   4 Integer          4    1    0               00 r[1]=4
REG[1] =  i:4
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 Gt               1   16    2               53 if r[2]>r[1] goto 16
REG[1] =  i:4
REG[2] =  i:1
   7 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:1
   8 Lt               5    3    4               64 r[3] = (r[4]<r[5])
REG[5] =  i:4
REG[4] =  i:1
REG[3] =  i:1
   9 ElseNotEq        0   12    0               00 
  12 IfNot            3   15    1               00 
REG[3] =  i:1
  13 Column           0    1    7               00 r[7]=t1.b
REG[7] =  i:9223372036854775807
  14 ResultRow        7    1    0               00 output=r[7]
REG[7] =  i:9223372036854775807
  15 Next             0    5    0               00 
  16 Halt             0    0    0               00 
SQL: [SELECT b FROM t1 WHERE (a, b) < (4, 3)
;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    2 0             01 usesStmtJournal=0
  18 Integer          4    5    0               00 r[5]=4
REG[5] =  i:4
  19 Integer          3    6    0               00 r[6]=3
REG[6] =  i:3
  20 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SEARCH TABLE t1 USING INTEGER PRIMARY KEY (rowid<?) 00 
   3 Rewind           0   16    0               00 
   4 Integer          4    1    0               00 r[1]=4
REG[1] =  i:4
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 Gt               1   16    2               53 if r[2]>r[1] goto 16
REG[1] =  i:4
REG[2] =  i:1
   7 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:1
   8 Lt               5    3    4               64 r[3] = (r[4]<r[5])
REG[5] =  i:4
REG[4] =  i:1
REG[3] =  i:1
   9 ElseNotEq        0   12    0               00 
  12 IfNot            3   15    1               00 
REG[3] =  i:1
  13 Column           0    1    7               00 r[7]=t1.b
REG[7] =  i:9223372036854775807
  14 ResultRow        7    1    0               00 output=r[7]
REG[7] =  i:9223372036854775807
  15 Next             0    5    0               00 
  16 Halt             0    0    0               00 
SQL: [CREATE TABLE tr1(t2);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    2 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:3
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:3
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 tr1           00 r[7]='tr1'
REG[7] =   t3[tr1](8)
  20 String8          0    8    0 tr1           00 r[8]='tr1'
REG[8] =   t3[tr1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  22 String8          0   10    0 CREATE TABLE tr1(t2) 00 r[10]='CREATE TABLE tr1(t2)'
REG[10] =   t20[CREATE TABLE tr](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s38[0617131301357461626C657472317472.....5tabletr1tr]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s38[0617131301357461626C657472317472.....5tabletr1tr]
REG[5] =  i:3
  25 SetCookie        0    1    3               00 
  26 ParseSchema      0    0    0 tbl_name='tr1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 0             00 usesStmtJournal=0
  16 String8          0    2    0 tr1           00 r[2]='tr1'
REG[2] =   t3[tr1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s3[tr1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[tr1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s20[CREATE TABLE tr](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[tr1](8)
REG[5] =  i:4
REG[6] =   s20[CREATE TABLE tr](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO t1(a) VALUES('X');]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    1    3 0             01 usesStmtJournal=0
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 String8          0    1    0 X             00 r[1]='X'
REG[1] =   t1[X](8)
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =   t1[X](8)
   5 MustBeInt        1    0    0               00 
REG[1] =   t1[X](8)
SQL: [;CREATE TABLE tr2(x TEXT,t1i1 TEXT,t2i1 TEXT,t0 TEXT,c0 TEXT,c1 TEXT);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    3 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:4
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:4
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 tr2           00 r[7]='tr2'
REG[7] =   t3[tr2](8)
  20 String8          0    8    0 tr2           00 r[8]='tr2'
REG[8] =   t3[tr2](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  22 String8          0   10    0 CREATE TABLE tr2(x TEXT,t1i1 TEXT,t2i1 TEXT,t0 TEXT,c0 TEXT,c1 TEXT) 00 r[10]='CREATE TABLE tr2(x TEXT,t1i1 TEXT,t2i1 TEXT,t0 TEXT,c0 TEXT,c1 TEXT)'
REG[10] =   t68[CREATE TABLE tr](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s87[071713130181157461626C6574723274.......tabletr2t]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s87[071713130181157461626C6574723274.......tabletr2t]
REG[5] =  i:4
  25 SetCookie        0    1    4               00 
  26 ParseSchema      0    0    0 tbl_name='tr2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    4 0             00 usesStmtJournal=0
  16 String8          0    2    0 tr2           00 r[2]='tr2'
REG[2] =   t3[tr2](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s3[tr2](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[tr2](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:5
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s68[CREATE TABLE tr](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[tr2](8)
REG[5] =  i:5
REG[6] =   s68[CREATE TABLE tr](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;CREATE INDEX v2 ON t1(b,a,a,a,b);]
VDBE Trace:
   0 Init             0   37    0               00 Start at 37
  37 Transaction      0    1    4 0             01 usesStmtJournal=0
  38 Goto             0    1    0               00 
   1 Noop             0   36    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:6
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:5
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 v2            00 r[4]='v2'
REG[4] =   t2[v2](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:6
   9 String8          0    7    0 CREATE INDEX v2 ON t1(b,a,a,a,b) 00 r[7]='CREATE INDEX v2 ON t1(b,a,a,a,b)'
REG[7] =   t32[CREATE INDEX v2](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s48[06171111014D696E6465787632743106.....Mindexv2t1.]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s48[06171111014D696E6465787632743106.....Mindexv2t1.]
REG[2] =  i:5
  12 SorterOpen       3    0    5 k(6,,,,,,)    00 
  13 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  14 Rewind           1   24    0               00 
  15 Column           1    1   10               00 r[10]=t1.b
REG[10] =  i:9223372036854775807
  16 Rowid            1   11    0               00 r[11]=rowid; t1.a
REG[11] =  i:1
  17 Rowid            1   12    0               00 r[12]=rowid; t1.a
REG[12] =  i:1
  18 Rowid            1   13    0               00 r[13]=rowid; t1.a
REG[13] =  i:1
  19 Column           1    1   14               00 r[14]=t1.b
REG[14] =  i:9223372036854775807
  20 Rowid            1   15    0               00 r[15]=rowid
REG[15] =  i:1
  21 MakeRecord      10    6    9               00 r[9]=mkrec(r[10..15])
REG[9] =  s23[070609090906097FFFFFFFFFFFFFFF7F................]
  22 SorterInsert     3    9    0               00 key=r[9]
REG[9] =  s23[070609090906097FFFFFFFFFFFFFFF7F................]
  23 Next             1   15    0               00 
  24 OpenWrite        2    1    0 k(6,,,,,,)    11 root=1 iDb=0
  25 SorterSort       3   30    0               00 
  26 SorterData       3    9    2               00 r[9]=data
  27 SeekEnd          2    0    0               00 
  28 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s23[070609090906097FFFFFFFFFFFFFFF7F................]
  29 SorterNext       3   26    0               00 
  30 Close            1    0    0               00 
  31 Close            2    0    0               00 
  32 Close            3    0    0               00 
  33 SetCookie        0    1    5               00 
  34 ParseSchema      0    0    0 name='v2' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    5 0             00 usesStmtJournal=0
  16 String8          0    2    0 v2            00 r[2]='v2'
REG[2] =   t2[v2](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[v2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[v2](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[v2](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[v2](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[v2](8)
REG[1] =   s2[v2](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[v2](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:6
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s32[CREATE INDEX v2](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[v2](8)
REG[5] =  i:6
REG[6] =   s32[CREATE INDEX v2](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  35 Expire           0    1    0               00 
  36 Halt             0    0    0               00 
SQL: [;CREATE TABLE d(t1abc,t1abd);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    5 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:7
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:6
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:6
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:6
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:6
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 d             00 r[7]='d'
REG[7] =   t1[d](8)
  20 String8          0    8    0 d             00 r[8]='d'
REG[8] =   t1[d](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:7
  22 String8          0   10    0 CREATE TABLE d(t1abc,t1abd) 00 r[10]='CREATE TABLE d(t1abc,t1abd)'
REG[10] =   t27[CREATE TABLE d(](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s41[06170F0F01437461626C656464074352.....Ctabledd.CR]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s41[06170F0F01437461626C656464074352.....Ctabledd.CR]
REG[5] =  i:6
  25 SetCookie        0    1    6               00 
  26 ParseSchema      0    0    0 tbl_name='d' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    6 0             00 usesStmtJournal=0
  16 String8          0    2    0 d             00 r[2]='d'
REG[2] =   t1[d](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[d](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[d](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[d](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[d](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[d](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[d](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[d](8)
REG[1] =   s1[d](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[d](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:7
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s27[CREATE TABLE d(](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[d](8)
REG[5] =  i:7
REG[6] =   s27[CREATE TABLE d(](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO tr1 VALUES(2), (4);]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    1    6 0             01 usesStmtJournal=0
  16 Goto             0    1    0               00 
   1 InitCoroutine    3    8    2               00 
   8 OpenWrite        0    4    0 1             00 root=4 iDb=0; tr1
   9 Yield            3   14    0               00 
REG[3] =  i:1
REG[3] =  i:9
   2 Explain          2    0    0 SCAN 2 CONSTANT ROWS 00 
   3 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
   4 Yield            3    0    0               00 
REG[3] =  i:9
REG[3] =  i:4
  10 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
  11 MakeRecord       2    1    4               00 r[4]=mkrec(r[2])
REG[4] =  s3[020102...]
  12 Insert           0    4    1 tr1           39 intkey=r[1] data=r[4]
REG[4] =  s3[020102...]
REG[1] =  i:1
  13 Goto             0    9    0               00 
   9 Yield            3   14    0               00 
REG[3] =  i:4
REG[3] =  i:9
   5 Integer          4    2    0               00 r[2]=4
REG[2] =  i:4
   6 Yield            3    0    0               00 
REG[3] =  i:9
REG[3] =  i:6
  10 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
  11 MakeRecord       2    1    4               00 r[4]=mkrec(r[2])
REG[4] =  s3[020104...]
  12 Insert           0    4    1 tr1           39 intkey=r[1] data=r[4]
REG[4] =  s3[020104...]
REG[1] =  i:2
  13 Goto             0    9    0               00 
   9 Yield            3   14    0               00 
REG[3] =  i:6
REG[3] =  i:9
   7 EndCoroutine     3    0    0               00 
REG[3] =  i:9
  14 Halt             0    0    0               00 
SQL: [;
;SELECT 1 WHERE (2,2) BETWEEN (1,1) AND (3,3)
;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Integer          2    1    0               00 r[1]=2
REG[1] =  i:2
  14 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
  15 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  16 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  17 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               4    3    1               61 r[3] = (r[1]>r[4])
REG[4] =  i:1
REG[1] =  i:2
REG[3] =  i:1
   3 ElseNotEq        0    5    0               00 
   5 IfNot            3   12    1               00 
REG[3] =  i:1
   6 Lt               5    3    1               61 r[3] = (r[1]<r[5])
REG[5] =  i:3
REG[1] =  i:2
REG[3] =  i:1
   7 ElseNotEq        0    9    0               00 
   9 IfNot            3   12    1               00 
REG[3] =  i:1
  10 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  11 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:1
  12 Halt             0    0    0               00 
SQL: [SELECT 1 WHERE (SELECT 2,2) BETWEEN (1,1) AND (3,3)
;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  24 Integer          3    7    0               00 r[7]=3
REG[7] =  i:3
  25 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         11    1    0               00 r[1]=11; return address
REG[1] =  i:11
   3 Once             0   11    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    2    3               00 r[2..3]=NULL; Init subquery result
REG[2] =  NULL
   6 Integer          1    4    0               00 r[4]=1; LIMIT counter
REG[4] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
   9 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  10 DecrJumpZero     4   11    0               00 if (--r[4])==0 goto 11
REG[4] =  i:1
  11 Return           1    0    0               00 
REG[1] =  i:11
  12 Gt               6    5    2               61 r[5] = (r[2]>r[6])
REG[6] =  i:1
REG[2] =  i:2
REG[5] =  i:1
  13 ElseNotEq        0   15    0               00 
  15 IfNot            5   22    1               00 
REG[5] =  i:1
  16 Lt               7    5    2               61 r[5] = (r[2]<r[7])
REG[7] =  i:3
REG[2] =  i:2
REG[5] =  i:1
  17 ElseNotEq        0   19    0               00 
  19 IfNot            5   22    1               00 
REG[5] =  i:1
  20 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  21 ResultRow        8    1    0               00 output=r[8]
REG[8] =  i:1
  22 Halt             0    0    0               00 
SQL: [SELECT 1 FROM c WHERE (1,v1) BETWEEN (1,1) AND (3,3)

;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    6 0             01 usesStmtJournal=0
  18 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  19 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  20 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  21 Goto             0    1    0               00 
   1 OpenRead         0    3    0 1             00 root=3 iDb=0; c
   2 Explain          2    0    0 SCAN TABLE c  00 
   3 Rewind           0   16    0               00 
   4 Column           0    0    2               00 r[2]=c.v1
REG[2] =   s3[ABC](8)
   5 Gt               4    3    1               61 r[3] = (r[1]>r[4])
REG[4] =  i:1
REG[1] =  i:1
REG[3] =  i:0
   6 ElseNotEq        0    8    0               00 
   7 Ge               4    3    2 (BINARY)      61 r[3] = (r[2]>=r[4])
REG[4] =  i:1
REG[2] =   s3[ABC](8)
REG[3] =  i:1
   8 IfNot            3   15    1               00 
REG[3] =  i:1
   9 Lt               5    3    1               61 r[3] = (r[1]<r[5])
REG[5] =  i:3
REG[1] =  i:1
REG[3] =  i:1
  10 ElseNotEq        0   12    0               00 
  12 IfNot            3   15    1               00 
REG[3] =  i:1
  13 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  14 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:1
  15 Next             0    4    0               01 
   4 Column           0    0    2               00 r[2]=c.v1
REG[2] =   s3[def](8)
   5 Gt               4    3    1               61 r[3] = (r[1]>r[4])
REG[4] =  i:1
REG[1] =  i:1
REG[3] =  i:0
   6 ElseNotEq        0    8    0               00 
   7 Ge               4    3    2 (BINARY)      61 r[3] = (r[2]>=r[4])
REG[4] =  i:1
REG[2] =   s3[def](8)
REG[3] =  i:1
   8 IfNot            3   15    1               00 
REG[3] =  i:1
   9 Lt               5    3    1               61 r[3] = (r[1]<r[5])
REG[5] =  i:3
REG[1] =  i:1
REG[3] =  i:1
  10 ElseNotEq        0   12    0               00 
  12 IfNot            3   15    1               00 
REG[3] =  i:1
  13 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  14 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:1
  15 Next             0    4    0               01 
   4 Column           0    0    2               00 r[2]=c.v1
REG[2] =  i:2
   5 Gt               4    3    1               61 r[3] = (r[1]>r[4])
REG[4] =  i:1
REG[1] =  i:1
REG[3] =  i:0
   6 ElseNotEq        0    8    0               00 
   7 Ge               4    3    2 (BINARY)      61 r[3] = (r[2]>=r[4])
REG[4] =  i:1
REG[2] =  i:2
REG[3] =  i:1
   8 IfNot            3   15    1               00 
REG[3] =  i:1
   9 Lt               5    3    1               61 r[3] = (r[1]<r[5])
REG[5] =  i:3
REG[1] =  i:1
REG[3] =  i:1
  10 ElseNotEq        0   12    0               00 
  12 IfNot            3   15    1               00 
REG[3] =  i:1
  13 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  14 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:1
  15 Next             0    4    0               01 
   4 Column           0    0    2               00 r[2]=c.v1
REG[2] =  i:2
   5 Gt               4    3    1               61 r[3] = (r[1]>r[4])
REG[4] =  i:1
REG[1] =  i:1
REG[3] =  i:0
   6 ElseNotEq        0    8    0               00 
   7 Ge               4    3    2 (BINARY)      61 r[3] = (r[2]>=r[4])
REG[4] =  i:1
REG[2] =  i:2
REG[3] =  i:1
   8 IfNot            3   15    1               00 
REG[3] =  i:1
   9 Lt               5    3    1               61 r[3] = (r[1]<r[5])
REG[5] =  i:3
REG[1] =  i:1
REG[3] =  i:1
  10 ElseNotEq        0   12    0               00 
  12 IfNot            3   15    1               00 
REG[3] =  i:1
  13 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  14 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:1
  15 Next             0    4    0               01 
  16 Halt             0    0    0               00 
SQL: [CREATE TABLE t3(m PRIMARY KEY, rins);]
VDBE Trace:
   0 Init             0   39    0               00 Start at 39
  39 Transaction      0    1    6 0             01 usesStmtJournal=0
  40 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:8
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:7
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:7
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      0    4    2               00 r[4]=root iDb=0 flags=2
REG[4] =  i:9
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:8
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_t3_1 00 r[7]='sqlite_autoindex_t3_1'
REG[7] =   t21[sqlite_autoinde](8)
  17 String8          0    8    0 t3            00 r[8]='t3'
REG[8] =   t2[t3](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:9
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s35[061737110100696E64657873716C6974..7...indexsqlit]
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  s35[061737110100696E64657873716C6974..7...indexsqlit]
REG[5] =  i:8
  22 Close            0    0    0               00 
  23 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  24 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  25 Explain         25    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  26 SeekRowid        2   28    1               00 intkey=r[1]
REG[1] =  i:7
  27 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:7
  28 IsNull          13   36    0               00 if r[13]==NULL goto 36
REG[13] =  i:7
  29 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  30 String8          0   15    0 t3            00 r[15]='t3'
REG[15] =   t2[t3](8)
  31 String8          0   16    0 t3            00 r[16]='t3'
REG[16] =   t2[t3](8)
  32 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:8
  33 String8          0   18    0 CREATE TABLE t3(m PRIMARY KEY, rins) 00 r[18]='CREATE TABLE t3(m PRIMARY KEY, rins)'
REG[18] =   t36[CREATE TABLE t3](8)
  34 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s52[0617111101557461626C657433743308.....Utablet3t3.]
  35 Insert           2   19   13               00 intkey=r[13] data=r[19]
REG[19] =  s52[0617111101557461626C657433743308.....Utablet3t3.]
REG[13] =  i:7
  36 SetCookie        0    1    7               00 
  37 ParseSchema      0    0    0 tbl_name='t3' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    7 0             00 usesStmtJournal=0
  16 String8          0    2    0 t3            00 r[2]='t3'
REG[2] =   t2[t3](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t3](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t3](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t3](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t3](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t3](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[d](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t3](8)
REG[1] =   s1[d](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t3](8)
REG[1] =   s2[t3](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t3](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:8
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s36[CREATE TABLE t3](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t3](8)
REG[5] =  i:8
REG[6] =   s36[CREATE TABLE t3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t3](8)
REG[1] =   s2[t3](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s21[sqlite_autoinde](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:9
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =  NULL
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s21[sqlite_autoinde](8)
REG[5] =  i:9
REG[6] =  NULL
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  38 Halt             0    0    0               00 
SQL: [;INSERT INTO c(xyz) VALUES(1);]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    1    7 0             01 usesStmtJournal=0
   8 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
   9 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  10 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 3             00 root=3 iDb=0; c
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   3 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   4 MakeRecord       2    3    5               00 r[5]=mkrec(r[2..4])
REG[5] =  s4[04000900....]
   5 Insert           0    5    1 c             39 intkey=r[1] data=r[5]
REG[5] =  s4[04000900....]
REG[1] =  i:5
   6 Halt             0    0    0               00 
SQL: [;UPDATE tr2 SET t2i1=7;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    1    7 0             01 usesStmtJournal=0
  18 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenWrite        0    5    0 6             00 root=5 iDb=0; tr2
   3 Explain          3    0    0 SCAN TABLE tr2 00 
   4 Rewind           0   16    0               00 
  16 Halt             0    0    0               00 
SQL: [;SELECT * FROM t3;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    7 0             01 usesStmtJournal=0
  10 Goto             0    1    0               00 
   1 OpenRead         0    8    0 2             00 root=8 iDb=0; t3
   2 Explain          2    0    0 SCAN TABLE t3 00 
   3 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [;
;UPDATE c SET xyz=97;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    1    7 0             01 usesStmtJournal=0
  15 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenWrite        0    3    0 3             00 root=3 iDb=0; c
   3 Explain          3    0    0 SCAN TABLE c  00 
   4 Rewind           0   13    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 IsNull           2   13    0               00 if r[2]==NULL goto 13
REG[2] =  i:1
   7 Column           0    0    3               00 r[3]=c.v1
REG[3] =   s3[ABC](8)
   8 Integer         97    4    0               00 r[4]=97
REG[4] =  i:97
   9 Column           0    2    5               00 r[5]=c.tt1
REG[5] =   s2[ii](8)
  10 MakeRecord       3    3    6               00 r[6]=mkrec(r[3..5])
REG[6] =  s10[04130111414243616969....ABCaii]
  11 Insert           0    6    2 c             07 intkey=r[2] data=r[6]
REG[6] =  s10[04130111414243616969....ABCaii]
REG[2] =  i:1
  12 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
   6 IsNull           2   13    0               00 if r[2]==NULL goto 13
REG[2] =  i:2
   7 Column           0    0    3               00 r[3]=c.v1
REG[3] =   s3[def](8)
   8 Integer         97    4    0               00 r[4]=97
REG[4] =  i:97
   9 Column           0    2    5               00 r[5]=c.tt1
REG[5] =   s3[iii](8)
  10 MakeRecord       3    3    6               00 r[6]=mkrec(r[3..5])
REG[6] =  s11[0413011364656661696969....defaiii]
  11 Insert           0    6    2 c             07 intkey=r[2] data=r[6]
REG[6] =  s11[0413011364656661696969....defaiii]
REG[2] =  i:2
  12 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:3
   6 IsNull           2   13    0               00 if r[2]==NULL goto 13
REG[2] =  i:3
   7 Column           0    0    3               00 r[3]=c.v1
REG[3] =  i:2
   8 Integer         97    4    0               00 r[4]=97
REG[4] =  i:97
   9 Column           0    2    5               00 r[5]=c.tt1
REG[5] =  i:2
  10 MakeRecord       3    3    6               00 r[6]=mkrec(r[3..5])
REG[6] =  s7[04010101026102.....a.]
  11 Insert           0    6    2 c             07 intkey=r[2] data=r[6]
REG[6] =  s7[04010101026102.....a.]
REG[2] =  i:3
  12 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:4
   6 IsNull           2   13    0               00 if r[2]==NULL goto 13
REG[2] =  i:4
   7 Column           0    0    3               00 r[3]=c.v1
REG[3] =  i:2
   8 Integer         97    4    0               00 r[4]=97
REG[4] =  i:97
   9 Column           0    2    5               00 r[5]=c.tt1
REG[5] =  i:2
  10 MakeRecord       3    3    6               00 r[6]=mkrec(r[3..5])
REG[6] =  s7[04010101026102.....a.]
  11 Insert           0    6    2 c             07 intkey=r[2] data=r[6]
REG[6] =  s7[04010101026102.....a.]
REG[2] =  i:4
  12 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:5
   6 IsNull           2   13    0               00 if r[2]==NULL goto 13
REG[2] =  i:5
   7 Column           0    0    3               00 r[3]=c.v1
REG[3] =  NULL
   8 Integer         97    4    0               00 r[4]=97
REG[4] =  i:97
   9 Column           0    2    5               00 r[5]=c.tt1
REG[5] =  NULL
  10 MakeRecord       3    3    6               00 r[6]=mkrec(r[3..5])
REG[6] =  s5[0400010061....a]
  11 Insert           0    6    2 c             07 intkey=r[2] data=r[6]
REG[6] =  s5[0400010061....a]
REG[2] =  i:5
  12 Next             0    5    0               01 
  13 Halt             0    0    0               00 
SQL: [;PRAGMA recursive_triggers = 1;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;CREATE TRIGGER rins2 AFTER UPDATE ON d WHEN new.t1abc>1 BEGIN
    UPDATE d SET (t1abd, t1abd) = (
      SELECT t1abc, t1abc FROM d WHERE t1abc = new.t1abc-1
    ), (t1abc, t1abc) = (
      SELECT t1abd, t1abd FROM d WHERE t1abc = new.t1abc-1
    ) WHERE t1abc = new.t1abc-1;
  END;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    1    7 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:9
   3 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   4 String8          0    3    0 rins2         00 r[3]='rins2'
REG[3] =   t5[rins2](8)
   5 String8          0    4    0 d             00 r[4]='d'
REG[4] =   t1[d](8)
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 String8          0    6    0 CREATE TRIGGER rins2 AFTER UPDATE ON d WHEN new.t1abc>1 BEGIN
    UPDATE d SET (t1abd, t1abd) = (
      SELECT t1abc, t1abc FROM d WHERE t1abc = new.t1abc-1
    ), (t1abc, t1abc) = (
      SELECT t1abd, t1abd FROM d WHERE t1abc = new.t1abc-1
    ) WHERE t1abc = new.t1abc-1;
  END 00 r[6]='CREATE TRIGGER rins2 AFTER UPDATE ON d WHEN new.t1abc>1 BEGIN
    UPDATE d SET (t1abd, t1abd)
REG[6] =   t280[CREATE TRIGGER ](8)
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
REG[7] =  s300[071B170F08843D747269676765727269......=triggerri]
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
REG[7] =  s300[071B170F08843D747269676765727269......=triggerri]
REG[1] =  i:9
  10 SetCookie        0    1    8               00 
  11 ParseSchema      0    0    0 type='trigger' AND name='rins2' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    8 0             00 usesStmtJournal=0
  16 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  17 String8          0    3    0 rins2         00 r[3]='rins2'
REG[3] =   t5[rins2](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[index](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[index](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s5[rins2](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[rins2](8)
REG[1] =   s5[rins2](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s5[rins2](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:0
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s280[CREATE TRIGGER ](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s5[rins2](8)
REG[5] =  i:0
REG[6] =   s280[CREATE TRIGGER ](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;
;CREATE TABLE aaa(bbb, aa);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    8 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:10
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:10
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:10
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:10
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:10
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:10
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 aaa           00 r[7]='aaa'
REG[7] =   t3[aaa](8)
  20 String8          0    8    0 aaa           00 r[8]='aaa'
REG[8] =   t3[aaa](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:10
  22 String8          0   10    0 CREATE TABLE aaa(bbb, aa) 00 r[10]='CREATE TABLE aaa(bbb, aa)'
REG[10] =   t25[CREATE TABLE aa](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s43[06171313013F7461626C656161616161.....?tableaaaaa]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s43[06171313013F7461626C656161616161.....?tableaaaaa]
REG[5] =  i:10
  25 SetCookie        0    1    9               00 
  26 ParseSchema      0    0    0 tbl_name='aaa' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    9 0             00 usesStmtJournal=0
  16 String8          0    2    0 aaa           00 r[2]='aaa'
REG[2] =   t3[aaa](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[aaa](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[aaa](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[aaa](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[aaa](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[aaa](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[d](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[aaa](8)
REG[1] =   s1[d](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[aaa](8)
REG[1] =   s2[t3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[aaa](8)
REG[1] =   s2[t3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[d](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[aaa](8)
REG[1] =   s1[d](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[aaa](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[aaa](8)
REG[1] =   s3[aaa](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[aaa](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:10
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s25[CREATE TABLE aa](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[aaa](8)
REG[5] =  i:10
REG[6] =   s25[CREATE TABLE aa](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;
;CREATE TABLE bb ( cc, xx, PRIMARY KEY (cc, xx) );]
VDBE Trace:
   0 Init             0   39    0               00 Start at 39
  39 Transaction      0    1    9 0             01 usesStmtJournal=0
  40 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:11
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:11
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:11
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      0    4    2               00 r[4]=root iDb=0 flags=2
REG[4] =  i:12
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:12
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_bb_1 00 r[7]='sqlite_autoindex_bb_1'
REG[7] =   t21[sqlite_autoinde](8)
  17 String8          0    8    0 bb            00 r[8]='bb'
REG[8] =   t2[bb](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:12
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s35[061737110100696E64657873716C6974..7...indexsqlit]
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  s35[061737110100696E64657873716C6974..7...indexsqlit]
REG[5] =  i:12
  22 Close            0    0    0               00 
  23 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  24 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  25 Explain         25    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  26 SeekRowid        2   28    1               00 intkey=r[1]
REG[1] =  i:11
  27 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:11
  28 IsNull          13   36    0               00 if r[13]==NULL goto 36
REG[13] =  i:11
  29 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  30 String8          0   15    0 bb            00 r[15]='bb'
REG[15] =   t2[bb](8)
  31 String8          0   16    0 bb            00 r[16]='bb'
REG[16] =   t2[bb](8)
  32 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:11
  33 String8          0   18    0 CREATE TABLE bb ( cc, xx, PRIMARY KEY (cc, xx) ) 00 r[18]='CREATE TABLE bb ( cc, xx, PRIMARY KEY (cc, xx) )'
REG[18] =   t48[CREATE TABLE bb](8)
  34 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s64[06171111016D7461626C65626262620B.....mtablebbbb.]
  35 Insert           2   19   13               00 intkey=r[13] data=r[19]
REG[19] =  s64[06171111016D7461626C65626262620B.....mtablebbbb.]
REG[13] =  i:11
  36 SetCookie        0    1   10               00 
  37 ParseSchema      0    0    0 tbl_name='bb' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   10 0             00 usesStmtJournal=0
  16 String8          0    2    0 bb            00 r[2]='bb'
REG[2] =   t2[bb](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[bb](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[bb](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[bb](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[bb](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[bb](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[d](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[bb](8)
REG[1] =   s1[d](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[bb](8)
REG[1] =   s2[t3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[bb](8)
REG[1] =   s2[t3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[d](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[bb](8)
REG[1] =   s1[d](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[aaa](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[bb](8)
REG[1] =   s3[aaa](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[bb](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[bb](8)
REG[1] =   s2[bb](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[bb](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:11
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s48[CREATE TABLE bb](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[bb](8)
REG[5] =  i:11
REG[6] =   s48[CREATE TABLE bb](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[bb](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[bb](8)
REG[1] =   s2[bb](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s21[sqlite_autoinde](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:12
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =  NULL
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s21[sqlite_autoinde](8)
REG[5] =  i:12
REG[6] =  NULL
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  38 Halt             0    0    0               00 
SQL: [;CREATE TABLE yy ( zz );]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   10 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:13
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:13
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:13
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:13
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:13
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:13
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 yy            00 r[7]='yy'
REG[7] =   t2[yy](8)
  20 String8          0    8    0 yy            00 r[8]='yy'
REG[8] =   t2[yy](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:13
  22 String8          0   10    0 CREATE TABLE yy ( zz ) 00 r[10]='CREATE TABLE yy ( zz )'
REG[10] =   t22[CREATE TABLE yy](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s38[0617111101397461626C65797979790D.....9tableyyyy.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s38[0617111101397461626C65797979790D.....9tableyyyy.]
REG[5] =  i:13
  25 SetCookie        0    1   11               00 
  26 ParseSchema      0    0    0 tbl_name='yy' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   11 0             00 usesStmtJournal=0
  16 String8          0    2    0 yy            00 r[2]='yy'
REG[2] =   t2[yy](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[yy](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[yy](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[yy](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[yy](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[yy](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[d](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[yy](8)
REG[1] =   s1[d](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[yy](8)
REG[1] =   s2[t3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[yy](8)
REG[1] =   s2[t3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[d](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[yy](8)
REG[1] =   s1[d](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[aaa](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[yy](8)
REG[1] =   s3[aaa](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[bb](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[yy](8)
REG[1] =   s2[bb](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[bb](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[yy](8)
REG[1] =   s2[bb](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[yy](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[yy](8)
REG[1] =   s2[yy](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[yy](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:13
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s22[CREATE TABLE yy](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[yy](8)
REG[5] =  i:13
REG[6] =   s22[CREATE TABLE yy](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;CREATE TABLE y ( dual, dummy );]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   11 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:14
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:14
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:14
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:14
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:14
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:14
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 y             00 r[7]='y'
REG[7] =   t1[y](8)
  20 String8          0    8    0 y             00 r[8]='y'
REG[8] =   t1[y](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:14
  22 String8          0   10    0 CREATE TABLE y ( dual, dummy ) 00 r[10]='CREATE TABLE y ( dual, dummy )'
REG[10] =   t30[CREATE TABLE y ](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s44[06170F0F01497461626C6579790E4352.....Itableyy.CR]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s44[06170F0F01497461626C6579790E4352.....Itableyy.CR]
REG[5] =  i:14
  25 SetCookie        0    1   12               00 
  26 ParseSchema      0    0    0 tbl_name='y' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   12 0             00 usesStmtJournal=0
  16 String8          0    2    0 y             00 r[2]='y'
REG[2] =   t1[y](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[y](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[y](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[y](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[y](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[y](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[d](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[y](8)
REG[1] =   s1[d](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[y](8)
REG[1] =   s2[t3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[y](8)
REG[1] =   s2[t3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[d](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[y](8)
REG[1] =   s1[d](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[aaa](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[y](8)
REG[1] =   s3[aaa](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[bb](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[y](8)
REG[1] =   s2[bb](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[bb](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[y](8)
REG[1] =   s2[bb](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[yy](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[y](8)
REG[1] =   s2[yy](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[y](8)
REG[1] =   s1[y](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[y](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:14
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s30[CREATE TABLE y ](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[y](8)
REG[5] =  i:14
REG[6] =   s30[CREATE TABLE y ](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO y VALUES (1, 1), (1, 2);]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    1   12 0             01 usesStmtJournal=0
  18 Goto             0    1    0               00 
   1 InitCoroutine    4   10    2               00 
  10 OpenWrite        0   14    0 2             00 root=14 iDb=0; y
  11 Yield            4   16    0               00 
REG[4] =  i:1
REG[4] =  i:11
   2 Explain          2    0    0 SCAN 2 CONSTANT ROWS 00 
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   5 Yield            4    0    0               00 
REG[4] =  i:11
REG[4] =  i:5
  12 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
  13 MakeRecord       2    2    5               00 r[5]=mkrec(r[2..3])
REG[5] =  s3[030909...]
  14 Insert           0    5    1 y             39 intkey=r[1] data=r[5]
REG[5] =  s3[030909...]
REG[1] =  i:1
  15 Goto             0   11    0               00 
  11 Yield            4   16    0               00 
REG[4] =  i:5
REG[4] =  i:11
   6 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   7 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   8 Yield            4    0    0               00 
REG[4] =  i:11
REG[4] =  i:8
  12 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
  13 MakeRecord       2    2    5               00 r[5]=mkrec(r[2..3])
REG[5] =  s4[03090102....]
  14 Insert           0    5    1 y             39 intkey=r[1] data=r[5]
REG[5] =  s4[03090102....]
REG[1] =  i:2
  15 Goto             0   11    0               00 
  11 Yield            4   16    0               00 
REG[4] =  i:8
REG[4] =  i:11
   9 EndCoroutine     4    0    0               00 
REG[4] =  i:11
  16 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (VALUES(t1.a, t1.b)) IN ( SELECT a, b FROM t1 );]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    0   12 0             01 usesStmtJournal=0
  34 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   32    0               00 
   4 Noop             0    0    0               00 begin IN expr
   5 Integer         17    1    0               00 r[1]=17; return address
REG[1] =  i:17
   6 Once             0   17    0               00 
   7 OpenEphemeral    2    2    0 k(2,,B)       00 nColumn=2; Result of SELECT 2
   8 Explain          8    0    0 LIST SUBQUERY 2 00 
   9 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  10 Explain         10    8    0 SCAN TABLE t1 00 
  11 Rewind           1   17    0               00 
  12 Rowid            1    2    0               00 r[2]=rowid
REG[2] =  i:1
  13 Column           1    1    3               00 r[3]=t1.b
REG[3] =  i:9223372036854775807
  14 MakeRecord       2    2    4 CA            00 r[4]=mkrec(r[2..3])
REG[4] =  s11[0309067FFFFFFFFFFFFFFF...........]
  15 IdxInsert        2    4    2 2             00 key=r[4]
REG[4] =  s11[0309067FFFFFFFFFFFFFFF...........]
  16 Next             1   12    0               01 
  17 Return           1    0    0               00 
REG[1] =  i:17
  18 Explain         18    0    0 CORRELATED SCALAR SUBQUERY 1 00 
  19 Null             0    5    6               00 r[5..6]=NULL; Init subquery result
REG[5] =  NULL
  20 Integer          1    7    0               00 r[7]=1; LIMIT counter
REG[7] =  i:1
  21 Explain         21   18    0 SCAN CONSTANT ROW 00 
  22 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:1
  23 Column           0    1    6               00 r[6]=t1.b
REG[6] =  i:9223372036854775807
  24 DecrJumpZero     7   25    0               00 if (--r[7])==0 goto 25
REG[7] =  i:1
  25 IsNull           6   31    0               00 if r[6]==NULL goto 31
REG[6] =  i:9223372036854775807
  26 Affinity         5    2    0 CA            00 affinity(r[5..6])
  27 NotFound         2   31    5 2             00 key=r[5..6]; end IN expr
REG[5] =  i:1
REG[6] =  i:9223372036854775807
  28 Rowid            0    8    0               00 r[8]=rowid
REG[8] =  i:1
  29 Column           0    1    9               00 r[9]=t1.b
REG[9] =  i:9223372036854775807
  30 ResultRow        8    2    0               00 output=r[8..9]
REG[8] =  i:1
REG[9] =  i:9223372036854775807
  31 Next             0    4    0               01 
  32 Halt             0    0    0               00 
SQL: [;CREATE TABLE t4(t5 INTEGER PRIMARY KEY,i);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   12 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:15
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:15
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:15
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:15
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:15
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:15
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t4            00 r[7]='t4'
REG[7] =   t2[t4](8)
  20 String8          0    8    0 t4            00 r[8]='t4'
REG[8] =   t2[t4](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:15
  22 String8          0   10    0 CREATE TABLE t4(t5 INTEGER PRIMARY KEY,i) 00 r[10]='CREATE TABLE t4(t5 INTEGER PRIMARY KEY,i)'
REG[10] =   t41[CREATE TABLE t4](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s57[06171111015F7461626C65743474340F....._tablet4t4.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s57[06171111015F7461626C65743474340F....._tablet4t4.]
REG[5] =  i:15
  25 SetCookie        0    1   13               00 
  26 ParseSchema      0    0    0 tbl_name='t4' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   13 0             00 usesStmtJournal=0
  16 String8          0    2    0 t4            00 r[2]='t4'
REG[2] =   t2[t4](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[d](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s1[d](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s2[t3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s2[t3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[d](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s1[d](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[aaa](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s3[aaa](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[bb](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s2[bb](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[bb](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s2[bb](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[yy](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s2[yy](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s2[t4](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t4](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:15
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s41[CREATE TABLE t4](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t4](8)
REG[5] =  i:15
REG[6] =   s41[CREATE TABLE t4](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM aaa WHERE (aa,aa)<=(5,0) ORDER BY aa DESC;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   13 0             01 usesStmtJournal=0
  26 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
  27 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  28 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,-B)       00 
   2 OpenRead         0   10    0 2             00 root=10 iDb=0; aaa
   3 Explain          3    0    0 SCAN TABLE aaa 00 
   4 Rewind           0   16    0               00 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    9    4               00 4 columns in r[9]
  18 SorterSort       1   24    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM bb WHERE (xx,xx)>=(3,0) ORDER BY xx;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   13 0             01 usesStmtJournal=0
  26 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  27 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  28 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 OpenRead         0   11    0 2             00 root=11 iDb=0; bb
   3 Explain          3    0    0 SCAN TABLE bb 00 
   4 Rewind           0   16    0               00 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    9    4               00 4 columns in r[9]
  18 SorterSort       1   24    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM yy WHERE (zz,zz)<(3,0) ORDER BY zz DESC;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   13 0             01 usesStmtJournal=0
  24 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  25 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,-B)       00 
   2 OpenRead         0   13    0 1             00 root=13 iDb=0; yy
   3 Explain          3    0    0 SCAN TABLE yy 00 
   4 Rewind           0   15    0               00 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t3 WHERE (m,rins)>(3,33) ORDER BY m;]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      0    0   13 0             01 usesStmtJournal=0
  21 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  22 Integer         33    5    0               00 r[5]=33
REG[5] =  i:33
  23 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 OpenRead         0    8    0 2             00 root=8 iDb=0; t3
   3 OpenRead         2    9    0 k(2,,)        00 root=9 iDb=0; sqlite_autoindex_t3_1
   4 Explain          4    0    0 SEARCH TABLE t3 USING INDEX sqlite_autoindex_t3_1 (m>?) 00 
   5 Integer          3    1    0               00 r[1]=3
REG[1] =  i:3
   6 IsNull           1   19    0               00 if r[1]==NULL goto 19
REG[1] =  i:3
   7 SeekGE           2   19    1 1             00 key=r[1]
REG[1] =  i:3
  19 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM yy WHERE (zz,zz)>=(3,34) ORDER BY zz;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   13 0             01 usesStmtJournal=0
  24 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  25 Integer         34    4    0               00 r[4]=34
REG[4] =  i:34
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0   13    0 1             00 root=13 iDb=0; yy
   3 Explain          3    0    0 SCAN TABLE yy 00 
   4 Rewind           0   15    0               00 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM aaa WHERE (0,0)<=(aa,bbb) ORDER BY aa;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   13 0             01 usesStmtJournal=0
  26 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  27 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 OpenRead         0   10    0 2             00 root=10 iDb=0; aaa
   3 Explain          3    0    0 SCAN TABLE aaa 00 
   4 Rewind           0   16    0               00 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    8    4               00 4 columns in r[8]
  18 SorterSort       1   24    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM yy WHERE (5,0)>(zz,zz) ORDER BY zz DESC;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   13 0             01 usesStmtJournal=0
  24 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
  25 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,-B)       00 
   2 OpenRead         0   13    0 1             00 root=13 iDb=0; yy
   3 Explain          3    0    0 SCAN TABLE yy 00 
   4 Rewind           0   15    0               00 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t1 WHERE (5,0)>=(b,b) ORDER BY b DESC;]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      0    0   13 0             01 usesStmtJournal=0
  21 Integer          5    4    0               00 r[4]=5
REG[4] =  i:5
  22 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
  23 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 OpenRead         2    6    0 k(6,,,,,,)    00 root=6 iDb=0; v2
   3 Explain          3    0    0 SEARCH TABLE t1 USING COVERING INDEX v2 (b<?) 00 
   4 Integer          5    1    0               00 r[1]=5
REG[1] =  i:5
   5 IsNull           1   19    0               00 if r[1]==NULL goto 19
REG[1] =  i:5
   6 SeekLE           2   19    1 1             00 key=r[1]
REG[1] =  i:5
  19 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM d WHERE (3,33)<(t1abd,t1abc) ORDER BY t1abd;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   13 0             01 usesStmtJournal=0
  26 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  27 Integer         33    4    0               00 r[4]=33
REG[4] =  i:33
  28 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 OpenRead         0    7    0 2             00 root=7 iDb=0; d
   3 Explain          3    0    0 SCAN TABLE d  00 
   4 Rewind           0   16    0               00 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    9    4               00 4 columns in r[9]
  18 SorterSort       1   24    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;SELECT 1 WHERE (2,(2,0)) IS (2,(2,0));]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Integer          2    1    0               00 r[1]=2
REG[1] =  i:2
   9 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
  10 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               1    7    1               C1 if r[1]!=r[1] goto 7
REG[1] =  i:2
REG[1] =  i:2
   3 Ne               1    7    1               C1 if r[1]!=r[1] goto 7
REG[1] =  i:2
REG[1] =  i:2
   4 Ne               2    7    2               C1 if r[2]!=r[2] goto 7
REG[2] =  i:0
REG[2] =  i:0
   5 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   6 ResultRow        3    1    0               00 output=r[3]
REG[3] =  i:1
   7 Halt             0    0    0               00 
SQL: [;
;DROP TABLE IF EXISTS bb;]
VDBE Trace:
   0 Init             0   60    0               00 Start at 60
  60 Transaction      0    1   13 0             01 usesStmtJournal=1
  61 String8          0    3    0 bb            00 r[3]='bb'
REG[3] =   t2[bb](8)
  62 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  63 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[bb](8)
REG[2] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[c](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[bb](8)
REG[2] =   s1[c](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s3[tr1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[bb](8)
REG[2] =   s3[tr1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s3[tr2](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[bb](8)
REG[2] =   s3[tr2](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[bb](8)
REG[2] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[d](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[bb](8)
REG[2] =   s1[d](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t3](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[bb](8)
REG[2] =   s2[t3](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t3](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[bb](8)
REG[2] =   s2[t3](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[d](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[bb](8)
REG[2] =   s1[d](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s3[aaa](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[bb](8)
REG[2] =   s3[aaa](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[bb](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[bb](8)
REG[2] =   s2[bb](8)
   7 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
   8 Eq               4   12    2 (BINARY)      52 if r[2]==r[4] goto 12
REG[4] =   t7[trigger](8)
REG[2] =   s5[table](8)
   9 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:11
  10 Once             0   11    0               00 
  11 Delete           0    0    0               02 
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[bb](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[bb](8)
REG[2] =   s2[bb](8)
   7 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[index](8)
   8 Eq               4   12    2 (BINARY)      52 if r[2]==r[4] goto 12
REG[4] =   t7[trigger](8)
REG[2] =   s5[index](8)
   9 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:12
  10 Once             1   11    0               00 
  11 Delete           0    0    0               02 
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[yy](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[bb](8)
REG[2] =   s2[yy](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[y](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[bb](8)
REG[2] =   s1[y](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t4](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[bb](8)
REG[2] =   s2[t4](8)
  12 Next             0    5    0               01 
  13 Destroy         12    2    0               00 
REG[2] =  i:0
  14 Null             0    6    7               00 r[6..7]=NULL
REG[6] =  NULL
  15 IfNot            2   24    1               00 
REG[2] =  i:0
  24 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  25 RowSetRead       6   35    7               00 r[7]=rowset(6)
REG[6] =  NULL
REG[7] =  NULL
  35 Destroy         11    2    0               00 
REG[2] =  i:0
  36 Null             0   15   16               00 r[15..16]=NULL
REG[15] =  NULL
  37 IfNot            2   46    1               00 
REG[2] =  i:0
  46 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  47 RowSetRead      15   57   16               00 r[16]=rowset(15)
REG[15] =  NULL
REG[16] =  NULL
  57 DropTable        0    0    0 bb            00 
  58 SetCookie        0    1   14               00 
  59 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f0050c9b859 in __GI_abort () at abort.c:79
#2  0x00007f0050c9b729 in __assert_fail_base (fmt=0x7f0050e31588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x2122b4 "pIn->nSdst==1 || pParse->nErr>0", file=0x22873d "sqlite3.c", line=127594, 
    function=<optimized out>) at assert.c:92
#3  0x00007f0050cacfd6 in __GI___assert_fail (assertion=0x2122b4 "pIn->nSdst==1 || pParse->nErr>0", file=0x22873d "sqlite3.c", line=127594, 
    function=0x213784 "int generateOutputSubroutine(Parse *, Select *, SelectDest *, SelectDest *, int, int, KeyInfo *, int)") at assert.c:101
#4  0x00000000003b5d8b in generateOutputSubroutine (pParse=0x7fff5dbdb460, p=0x15bba60, pIn=0x7fff5dbd9ae0, pDest=0x7fff5dbda038, regReturn=15, regPrev=9, pKeyInfo=0x15bb5b0, iBreak=-7) at sqlite3.c:127594
#5  0x00000000003b4e37 in multiSelectOrderBy (pParse=0x7fff5dbdb460, p=0x15bba60, pDest=0x7fff5dbda038) at sqlite3.c:127921
#6  0x00000000003a3d1c in multiSelect (pParse=0x7fff5dbdb460, p=0x15bba60, pDest=0x7fff5dbda038) at sqlite3.c:127207
#7  0x00000000002fccf5 in sqlite3Select (pParse=0x7fff5dbdb460, p=0x15bba60, pDest=0x7fff5dbda038) at sqlite3.c:130384
#8  0x000000000034f659 in sqlite3CodeSubselect (pParse=0x7fff5dbdb460, pExpr=0x15c6320) at sqlite3.c:99820
#9  0x0000000000350b1c in exprCodeVector (pParse=0x7fff5dbdb460, p=0x15c6320, piFreeable=0x7fff5dbda0fc) at sqlite3.c:100296
#10 0x000000000034fbdb in sqlite3ExprCodeIN (pParse=0x7fff5dbdb460, pExpr=0x15c59c0, destIfFalse=-3, destIfNull=-4) at sqlite3.c:99952
#11 0x000000000034be9e in sqlite3ExprCodeTarget (pParse=0x7fff5dbdb460, pExpr=0x15c59c0, target=1) at sqlite3.c:100792
#12 0x000000000034e9ee in sqlite3ExprCodeExprList (pParse=0x7fff5dbdb460, pList=0x15c5060, target=1, srcReg=0, flags=1 '\001') at sqlite3.c:101202
#13 0x00000000003addca in innerLoopLoadRow (pParse=0x7fff5dbdb460, pSelect=0x15c96b0, pInfo=0x7fff5dbda4a0) at sqlite3.c:125172
#14 0x00000000003a92ea in selectInnerLoop (pParse=0x7fff5dbdb460, p=0x15c96b0, srcTab=-1, pSort=0x0, pDistinct=0x7fff5dbda740, pDest=0x7fff5dbda850, iContinue=-2, iBreak=-2) at sqlite3.c:125624
#15 0x00000000002fe191 in sqlite3Select (pParse=0x7fff5dbdb460, p=0x15c96b0, pDest=0x7fff5dbda850) at sqlite3.c:130743
#16 0x00000000002ecaa8 in yy_reduce (yypParser=0x7fff5dbdaa80, yyruleno=79, yyLookahead=1, yyLookaheadToken=..., pParse=0x7fff5dbdb460) at sqlite3.c:151581
#17 0x00000000002e92f8 in sqlite3Parser (yyp=0x7fff5dbdaa80, yymajor=1, yyminor=...) at sqlite3.c:152877
#18 0x00000000002a68b3 in sqlite3RunParser (pParse=0x7fff5dbdb460, 
    zSql=0x15bfc40 ";;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1 DESC) IN (SELECT 3,4);;SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1 DESC) IN (SELECT 3,4);;SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1 DESC) IN (S"..., pzErrMsg=0x7fff5dbdb640) at sqlite3.c:154013
#19 0x00000000002a1683 in sqlite3Prepare (db=0x15ab790, 
    zSql=0x15ae76a ";SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1) IN (SELECT 3,4);;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1 DESC) IN (SELECT 3,4);;SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1 DESC) IN (SELECT "..., nBytes=788, prepFlags=128, pReprepare=0x0, ppStmt=0x7fff5dbdb778, pzTail=0x7fff5dbdb760) at sqlite3.c:124303
#20 0x00000000002a0d4e in sqlite3LockAndPrepare (db=0x15ab790, 
    zSql=0x15ae76a ";SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1) IN (SELECT 3,4);;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1 DESC) IN (SELECT 3,4);;SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1 DESC) IN (SELECT "..., nBytes=788, prepFlags=128, pOld=0x0, ppStmt=0x7fff5dbdb778, pzTail=0x7fff5dbdb760) at sqlite3.c:124403
#21 0x000000000029247f in sqlite3_prepare_v2 (db=0x15ab790, 
    zSql=0x15ae76a ";SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1) IN (SELECT 3,4);;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1 DESC) IN (SELECT 3,4);;SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1 DESC) IN (SELECT "..., nBytes=788, ppStmt=0x7fff5dbdb778, pzTail=0x7fff5dbdb760) at sqlite3.c:124487
#22 0x0000000000256bd0 in main (argc=1, argv=0x7fff5dbdb928) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 50965] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
