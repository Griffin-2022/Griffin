GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000521,sig:06,src:021035+012652,time:32133809,execs:11142525,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT group_concat(quote(name) || '.' || quote(type)) FROM pragma_table_info(?, ?)
;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    0    1 0             01 usesStmtJournal=0
  22 String8          0   12    0 .             00 r[12]='.'
REG[12] =   t1[.](8)
  23 Goto             0    1    0               00 
   1 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
   2 VOpen            0    0    0 vtab:14C28D0  00 
   3 Explain          3    0    0 SCAN TABLE pragma_table_info VIRTUAL TABLE INDEX 0: 00 
   4 Variable         1    6    0               00 r[6]=parameter(1,)
REG[6] =  NULL
   5 Variable         2    7    0               00 r[7]=parameter(2,)
REG[7] =  NULL
   6 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
   7 Integer          2    5    0               00 r[5]=2
REG[5] =  i:2
   8 VFilter          0   17    4               00 iplan=r[4] zplan=''
REG[4] =  i:0
SQL: [PRAGMA table_info]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
  17 AggFinal         1    1    0 group_concat(1) 00 accum=r[1] N=1
  18 Copy             1   13    0               00 r[13]=r[1]
REG[13] =  NULL
  19 ResultRow       13    1    0               00 output=r[13]
REG[13] =  NULL
  20 Halt             0    0    0               00 
SQL: [SELECT (1, 2, 3) != (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               61 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               3    1    3               69 r[1] = (r[3]!=r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 If               1    7    0               00 
REG[1] =  i:0
   6 Ne               4    1    4               69 r[1] = (r[4]!=r[4])
REG[4] =  i:3
REG[4] =  i:3
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 2, 3) == (SELECT 1, 2, 3)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  10 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Integer          3   10    0               00 r[10]=3
REG[10] =  i:3
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Eq               8    1    3               61 r[1] = (r[3]==r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:1
  25 IfNot            1   29    0               00 
REG[1] =  i:1
  26 Eq               9    1    4               69 r[1] = (r[4]==r[9])
REG[9] =  i:2
REG[4] =  i:2
  27 IfNot            1   29    0               00 
REG[1] =  i:1
  28 Eq              10    1    5               69 r[1] = (r[5]==r[10])
REG[10] =  i:3
REG[5] =  i:3
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  30 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 2, 3) != (SELECT 1, 2, 3)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  10 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Integer          3   10    0               00 r[10]=3
REG[10] =  i:3
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Ne               8    1    3               61 r[1] = (r[3]!=r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  25 If               1   29    0               00 
REG[1] =  i:0
  26 Ne               9    1    4               69 r[1] = (r[4]!=r[9])
REG[9] =  i:2
REG[4] =  i:2
  27 If               1   29    0               00 
REG[1] =  i:0
  28 Ne              10    1    5               69 r[1] = (r[5]!=r[10])
REG[10] =  i:3
REG[5] =  i:3
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  30 Halt             0    0    0               00 
SQL: [SELECT (1, 0, 3) == (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               61 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               4    1    3               69 r[1] = (r[3]==r[4])
REG[4] =  i:2
REG[3] =  i:0
REG[1] =  i:0
   5 IfNot            1    7    0               00 
REG[1] =  i:0
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 0, 3) != (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               61 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               4    1    3               69 r[1] = (r[3]!=r[4])
REG[4] =  i:2
REG[3] =  i:0
REG[1] =  i:1
   5 If               1    7    0               00 
REG[1] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 0, 3) IS (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               E1 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               4    1    3               E9 r[1] = (r[3]==r[4])
REG[4] =  i:2
REG[3] =  i:0
REG[1] =  i:0
   5 IfNot            1    7    0               00 
REG[1] =  i:0
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 0, 3) == (SELECT 1, 2, 3)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  10 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Integer          3   10    0               00 r[10]=3
REG[10] =  i:3
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Eq               8    1    3               61 r[1] = (r[3]==r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:1
  25 IfNot            1   29    0               00 
REG[1] =  i:1
  26 Eq               9    1    4               69 r[1] = (r[4]==r[9])
REG[9] =  i:2
REG[4] =  i:0
REG[1] =  i:0
  27 IfNot            1   29    0               00 
REG[1] =  i:0
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  30 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 0, 3) != (SELECT 1, 2, 3)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  10 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Integer          3   10    0               00 r[10]=3
REG[10] =  i:3
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Ne               8    1    3               61 r[1] = (r[3]!=r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  25 If               1   29    0               00 
REG[1] =  i:0
  26 Ne               9    1    4               69 r[1] = (r[4]!=r[9])
REG[9] =  i:2
REG[4] =  i:0
REG[1] =  i:1
  27 If               1   29    0               00 
REG[1] =  i:1
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  30 Halt             0    0    0               00 
SQL: [SELECT (1, 2, NULL) != (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               61 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               3    1    3               69 r[1] = (r[3]!=r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 If               1    7    0               00 
REG[1] =  i:0
   6 Ne               5    1    4               69 r[1] = (r[4]!=r[5])
REG[5] =  i:3
REG[4] =  NULL
REG[1] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, NULL) IS (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               E1 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               3    1    3               E9 r[1] = (r[3]==r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 IfNot            1    7    0               00 
REG[1] =  i:1
   6 Eq               5    1    4               E9 r[1] = (r[4]==r[5])
REG[5] =  i:3
REG[4] =  NULL
REG[1] =  i:0
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 2, NULL) == (SELECT 1, 2, 3)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  10 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Integer          3   10    0               00 r[10]=3
REG[10] =  i:3
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Eq               8    1    3               61 r[1] = (r[3]==r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:1
  25 IfNot            1   29    0               00 
REG[1] =  i:1
  26 Eq               9    1    4               69 r[1] = (r[4]==r[9])
REG[9] =  i:2
REG[4] =  i:2
  27 IfNot            1   29    0               00 
REG[1] =  i:1
  28 Eq              10    1    5               69 r[1] = (r[5]==r[10])
REG[10] =  i:3
REG[5] =  NULL
REG[1] =  NULL
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 2, NULL) != (SELECT 1, 2, 3)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  10 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Integer          3   10    0               00 r[10]=3
REG[10] =  i:3
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Ne               8    1    3               61 r[1] = (r[3]!=r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  25 If               1   29    0               00 
REG[1] =  i:0
  26 Ne               9    1    4               69 r[1] = (r[4]!=r[9])
REG[9] =  i:2
REG[4] =  i:2
  27 If               1   29    0               00 
REG[1] =  i:0
  28 Ne              10    1    5               69 r[1] = (r[5]!=r[10])
REG[10] =  i:3
REG[5] =  NULL
REG[1] =  NULL
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (1, 2, NULL) == (1, 2, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               61 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               3    1    3               69 r[1] = (r[3]==r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 IfNot            1    7    0               00 
REG[1] =  i:1
   6 Eq               4    1    4               69 r[1] = (r[4]==r[4])
REG[4] =  NULL
REG[4] =  NULL
REG[1] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, NULL) != (1, 2, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               61 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               3    1    3               69 r[1] = (r[3]!=r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 If               1    7    0               00 
REG[1] =  i:0
   6 Ne               4    1    4               69 r[1] = (r[4]!=r[4])
REG[4] =  NULL
REG[4] =  NULL
REG[1] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, NULL) IS NOT (1, 2, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               E1 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               3    1    3               E9 r[1] = (r[3]!=r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 If               1    7    0               00 
REG[1] =  i:0
   6 Ne               4    1    4               E9 r[1] = (r[4]!=r[4])
REG[4] =  NULL
REG[4] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 2, NULL) == (SELECT 1, 2, NULL)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  10 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Eq               8    1    3               61 r[1] = (r[3]==r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:1
  25 IfNot            1   29    0               00 
REG[1] =  i:1
  26 Eq               9    1    4               69 r[1] = (r[4]==r[9])
REG[9] =  i:2
REG[4] =  i:2
  27 IfNot            1   29    0               00 
REG[1] =  i:1
  28 Eq              10    1    5               69 r[1] = (r[5]==r[10])
REG[10] =  NULL
REG[5] =  NULL
REG[1] =  NULL
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 2, NULL) != (SELECT 1, 2, NULL)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  10 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Ne               8    1    3               61 r[1] = (r[3]!=r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  25 If               1   29    0               00 
REG[1] =  i:0
  26 Ne               9    1    4               69 r[1] = (r[4]!=r[9])
REG[9] =  i:2
REG[4] =  i:2
  27 If               1   29    0               00 
REG[1] =  i:0
  28 Ne              10    1    5               69 r[1] = (r[5]!=r[10])
REG[10] =  NULL
REG[5] =  NULL
REG[1] =  NULL
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (NULL, NULL, NULL) == (NULL, NULL, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  10 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               61 r[1] = (r[2]==r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   3 IfNot            1    7    0               00 
REG[1] =  NULL
   4 Eq               2    1    2               69 r[1] = (r[2]==r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   5 IfNot            1    7    0               00 
REG[1] =  NULL
   6 Eq               2    1    2               69 r[1] = (r[2]==r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (NULL, NULL, NULL) IS NOT (NULL, NULL, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  10 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               E1 r[1] = (r[2]!=r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               2    1    2               E9 r[1] = (r[2]!=r[2])
REG[2] =  NULL
REG[2] =  NULL
   5 If               1    7    0               00 
REG[1] =  i:0
   6 Ne               2    1    2               E9 r[1] = (r[2]!=r[2])
REG[2] =  NULL
REG[2] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT NULL, NULL, NULL) != (SELECT NULL, NULL, NULL)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   9 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  10 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Null             0    8    0               00 r[8]=NULL
REG[8] =  NULL
  20 Null             0    9    0               00 r[9]=NULL
REG[9] =  NULL
  21 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Ne               8    1    3               61 r[1] = (r[3]!=r[8])
REG[8] =  NULL
REG[3] =  NULL
REG[1] =  NULL
  25 If               1   29    0               00 
REG[1] =  NULL
  26 Ne               9    1    4               69 r[1] = (r[4]!=r[9])
REG[9] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  27 If               1   29    0               00 
REG[1] =  NULL
  28 Ne              10    1    5               69 r[1] = (r[5]!=r[10])
REG[10] =  NULL
REG[5] =  NULL
REG[1] =  NULL
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 1) IS (1, 1, 1)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               E1 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               2    1    3               E9 r[1] = (r[3]==r[2])
REG[2] =  i:1
REG[3] =  NULL
REG[1] =  i:0
   5 IfNot            1    7    0               00 
REG[1] =  i:0
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 1) IS NOT (1, 1, 1)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               E1 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               2    1    3               E9 r[1] = (r[3]!=r[2])
REG[2] =  i:1
REG[3] =  NULL
REG[1] =  i:1
   5 If               1    7    0               00 
REG[1] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, NULL, 1) == (SELECT 1, 1, 2)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  10 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  21 Integer          2   10    0               00 r[10]=2
REG[10] =  i:2
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Eq               8    1    3               61 r[1] = (r[3]==r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:1
  25 IfNot            1   29    0               00 
REG[1] =  i:1
  26 Eq               9    1    4               69 r[1] = (r[4]==r[9])
REG[9] =  i:1
REG[4] =  NULL
REG[1] =  NULL
  27 IfNot            1   29    0               00 
REG[1] =  NULL
  28 Eq              10    1    5               69 r[1] = (r[5]==r[10])
REG[10] =  i:2
REG[5] =  i:1
REG[1] =  i:0
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  30 Halt             0    0    0               00 
SQL: [SELECT (1, 1, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               3    1    2               61 r[1] = (r[2]<r[3])
REG[3] =  i:2
REG[2] =  i:1
REG[1] =  i:1
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (1, 1, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  i:1
REG[1] =  i:1
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  i:1
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE NOT (1, 1, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  i:1
REG[1] =  i:1
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE NOT (1, 1, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  i:1
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  i:0
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               3    1    3               61 r[1] = (r[3]>r[3])
REG[3] =  i:2
REG[3] =  i:2
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   6 Gt               4    1    4               61 r[1] = (r[4]>r[4])
REG[4] =  i:3
REG[4] =  i:3
REG[1] =  i:0
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, 3) <= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               3    1    3               61 r[1] = (r[3]<r[3])
REG[3] =  i:2
REG[3] =  i:2
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   6 Le               4    1    4               61 r[1] = (r[4]<=r[4])
REG[4] =  i:3
REG[4] =  i:3
REG[1] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE NOT (1, 2, 3) <= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  i:2
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  18 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  19 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  20 Le               4    1    3               61 r[1] = (r[3]<=r[4])
REG[4] =  i:3
REG[3] =  i:3
REG[1] =  i:1
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               3    1    3               61 r[1] = (r[3]>r[3])
REG[3] =  i:2
REG[3] =  i:2
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   6 Ge               4    1    4               61 r[1] = (r[4]>=r[4])
REG[4] =  i:3
REG[4] =  i:3
REG[1] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (1, 2, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  i:2
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  18 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  19 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  20 Ge               4    1    3               61 r[1] = (r[3]>=r[4])
REG[4] =  i:3
REG[3] =  i:3
REG[1] =  i:1
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  i:1
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 3, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:2
REG[3] =  i:3
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE NOT (1, 3, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  i:3
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  i:0
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (1, 3, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  i:3
REG[1] =  i:1
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  i:1
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE NOT (1, 3, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  i:3
REG[1] =  i:1
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 3, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:2
REG[3] =  i:3
REG[1] =  i:1
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (1, 3, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  i:3
REG[1] =  i:1
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  i:1
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE NOT (1, 3, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  i:3
REG[1] =  i:1
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:2
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE NOT (1, NULL, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:2
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE NOT (1, NULL, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (1, NULL, 3) <= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:2
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (1, NULL, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE NOT (1, 3, 3) < (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  NULL
REG[4] =  i:3
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 3, 3) > (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  NULL
REG[3] =  i:3
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE NOT (1, 3, 3) > (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  NULL
REG[4] =  i:3
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 3, 3) <= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  NULL
REG[3] =  i:3
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (1, 3, 3) <= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  NULL
REG[4] =  i:3
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 3, 3) >= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  NULL
REG[3] =  i:3
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) < (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               3    1    3               61 r[1] = (r[3]<r[3])
REG[3] =  NULL
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) > (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               3    1    3               61 r[1] = (r[3]>r[3])
REG[3] =  NULL
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (1, NULL, 3) > (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (1, NULL, 3) <= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [;
;SELECT (1, 1) == (SELECT a,a FROM t1 ORDER BY a)
;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    0    1 0             01 usesStmtJournal=0
  34 Integer          1   10    0               00 r[10]=1
REG[10] =  i:1
  35 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         27    2    0               00 r[2]=27; return address
REG[2] =  i:27
   3 Once             0   27    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 OpenEphemeral    1    4    0 k(1,B)        00 nColumn=4
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   9 Explain          9    4    0 SCAN TABLE t1 00 
  10 Rewind           0   22    0               00 
  22 Explain         22    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  23 Sort             1   27    0               00 
  27 Return           2    0    0               00 
REG[2] =  i:27
  28 Eq               3    1   10 (BINARY)      61 r[1] = (r[10]==r[3])
REG[3] =  NULL
REG[10] =  i:1
REG[1] =  NULL
  29 IfNot            1   31    0               00 
REG[1] =  NULL
  30 Eq               4    1   10 (BINARY)      69 r[1] = (r[10]==r[4])
REG[4] =  NULL
REG[10] =  i:1
REG[1] =  NULL
  31 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  32 Halt             0    0    0               00 
SQL: [SELECT (SELECT * FROM t1 ORDER BY a) == (SELECT * FROM t1 ORDER BY a)
  
;]
VDBE Trace:
   0 Init             0   51    0               00 Start at 51
  51 Transaction      0    0    1 0             01 usesStmtJournal=0
  52 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         24    3    0               00 r[3]=24; return address
REG[3] =  i:24
   3 Once             0   24    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    4    4               00 r[4..4]=NULL; Init subquery result
REG[4] =  NULL
   6 OpenEphemeral    2    3    0 k(1,B)        00 nColumn=3
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   9 Explain          9    4    0 SCAN TABLE t1 00 
  10 Rewind           0   20    0               00 
  20 Explain         20    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  21 Sort             2   24    0               00 
  24 Return           3    0    0               00 
REG[3] =  i:24
  25 Integer         47    9    0               00 r[9]=47; return address
REG[9] =  i:47
  26 Once             0   47    0               00 
  27 Explain         27    0    0 SCALAR SUBQUERY 2 00 
  28 Null             0   10   10               00 r[10..10]=NULL; Init subquery result
REG[10] =  NULL
  29 OpenEphemeral    3    3    0 k(1,B)        00 nColumn=3
  30 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  31 OpenRead         1    2    0 1             00 root=2 iDb=0; t1
  32 Explain         32   27    0 SCAN TABLE t1 00 
  33 Rewind           1   43    0               00 
  43 Explain         43   27    0 USE TEMP B-TREE FOR ORDER BY 00 
  44 Sort             3   47    0               00 
  47 Return           9    0    0               00 
REG[9] =  i:47
  48 Eq              10    1    4               61 r[1] = (r[4]==r[10])
REG[10] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  49 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  50 Halt             0    0    0               00 
SQL: [SELECT (3, 6) == (SELECT a,a FROM t1 ORDER BY a DESC, a DESC)
;]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      0    0    1 0             01 usesStmtJournal=0
  35 Integer          3   11    0               00 r[11]=3
REG[11] =  i:3
  36 Integer          6   12    0               00 r[12]=6
REG[12] =  i:6
  37 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         28    2    0               00 r[2]=28; return address
REG[2] =  i:28
   3 Once             0   28    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 OpenEphemeral    1    5    0 k(2,-B,-B)    00 nColumn=5
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   9 Explain          9    4    0 SCAN TABLE t1 00 
  10 Rewind           0   23    0               00 
  23 Explain         23    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  24 Sort             1   28    0               00 
  28 Return           2    0    0               00 
REG[2] =  i:28
  29 Eq               3    1   11 (BINARY)      61 r[1] = (r[11]==r[3])
REG[3] =  NULL
REG[11] =  i:3
REG[1] =  NULL
  30 IfNot            1   32    0               00 
REG[1] =  NULL
  31 Eq               4    1   12 (BINARY)      69 r[1] = (r[12]==r[4])
REG[4] =  NULL
REG[12] =  i:6
REG[1] =  NULL
  32 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  33 Halt             0    0    0               00 
SQL: [SELECT (SELECT * FROM t1 ORDER BY a DESC, a DESC) == (SELECT * FROM t1 ORDER BY a DESC, a DESC)
  
;]
VDBE Trace:
   0 Init             0   53    0               00 Start at 53
  53 Transaction      0    0    1 0             01 usesStmtJournal=0
  54 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         25    3    0               00 r[3]=25; return address
REG[3] =  i:25
   3 Once             0   25    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    4    4               00 r[4..4]=NULL; Init subquery result
REG[4] =  NULL
   6 OpenEphemeral    2    4    0 k(2,-B,-B)    00 nColumn=4
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   9 Explain          9    4    0 SCAN TABLE t1 00 
  10 Rewind           0   21    0               00 
  21 Explain         21    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  22 Sort             2   25    0               00 
  25 Return           3    0    0               00 
REG[3] =  i:25
  26 Integer         49   10    0               00 r[10]=49; return address
REG[10] =  i:49
  27 Once             0   49    0               00 
  28 Explain         28    0    0 SCALAR SUBQUERY 2 00 
  29 Null             0   11   11               00 r[11..11]=NULL; Init subquery result
REG[11] =  NULL
  30 OpenEphemeral    3    4    0 k(2,-B,-B)    00 nColumn=4
  31 Integer          1   12    0               00 r[12]=1; LIMIT counter
REG[12] =  i:1
  32 OpenRead         1    2    0 1             00 root=2 iDb=0; t1
  33 Explain         33   28    0 SCAN TABLE t1 00 
  34 Rewind           1   45    0               00 
  45 Explain         45   28    0 USE TEMP B-TREE FOR ORDER BY 00 
  46 Sort             3   49    0               00 
  49 Return          10    0    0               00 
REG[10] =  i:49
  50 Eq              11    1    4               61 r[1] = (r[4]==r[11])
REG[11] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  51 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  52 Halt             0    0    0               00 
SQL: [SELECT ((3, 5)) == (SELECT a,a FROM t1 ORDER BY a DESC, a)
;]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      0    0    1 0             01 usesStmtJournal=0
  35 Integer          3   11    0               00 r[11]=3
REG[11] =  i:3
  36 Integer          5   12    0               00 r[12]=5
REG[12] =  i:5
  37 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         28    2    0               00 r[2]=28; return address
REG[2] =  i:28
   3 Once             0   28    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 OpenEphemeral    1    5    0 k(2,-B,B)     00 nColumn=5
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   9 Explain          9    4    0 SCAN TABLE t1 00 
  10 Rewind           0   23    0               00 
  23 Explain         23    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  24 Sort             1   28    0               00 
  28 Return           2    0    0               00 
REG[2] =  i:28
  29 Eq               3    1   11 (BINARY)      61 r[1] = (r[11]==r[3])
REG[3] =  NULL
REG[11] =  i:3
REG[1] =  NULL
  30 IfNot            1   32    0               00 
REG[1] =  NULL
  31 Eq               4    1   12 (BINARY)      69 r[1] = (r[12]==r[4])
REG[4] =  NULL
REG[12] =  i:5
REG[1] =  NULL
  32 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  33 Halt             0    0    0               00 
SQL: [SELECT (SELECT * FROM t1 ORDER BY a DESC, a) == (SELECT * FROM t1 ORDER BY a DESC, a)
  
;]
VDBE Trace:
   0 Init             0   53    0               00 Start at 53
  53 Transaction      0    0    1 0             01 usesStmtJournal=0
  54 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         25    3    0               00 r[3]=25; return address
REG[3] =  i:25
   3 Once             0   25    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    4    4               00 r[4..4]=NULL; Init subquery result
REG[4] =  NULL
   6 OpenEphemeral    2    4    0 k(2,-B,B)     00 nColumn=4
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   9 Explain          9    4    0 SCAN TABLE t1 00 
  10 Rewind           0   21    0               00 
  21 Explain         21    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  22 Sort             2   25    0               00 
  25 Return           3    0    0               00 
REG[3] =  i:25
  26 Integer         49   10    0               00 r[10]=49; return address
REG[10] =  i:49
  27 Once             0   49    0               00 
  28 Explain         28    0    0 SCALAR SUBQUERY 2 00 
  29 Null             0   11   11               00 r[11..11]=NULL; Init subquery result
REG[11] =  NULL
  30 OpenEphemeral    3    4    0 k(2,-B,B)     00 nColumn=4
  31 Integer          1   12    0               00 r[12]=1; LIMIT counter
REG[12] =  i:1
  32 OpenRead         1    2    0 1             00 root=2 iDb=0; t1
  33 Explain         33   28    0 SCAN TABLE t1 00 
  34 Rewind           1   45    0               00 
  45 Explain         45   28    0 USE TEMP B-TREE FOR ORDER BY 00 
  46 Sort             3   49    0               00 
  49 Return          10    0    0               00 
REG[10] =  i:49
  50 Eq              11    1    4               61 r[1] = (r[4]==r[11])
REG[11] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  51 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  52 Halt             0    0    0               00 
SQL: [SELECT (SELECT 3, 5) == (SELECT a,a FROM t1 ORDER BY a DESC, a)
;]
VDBE Trace:
   0 Init             0   44    0               00 Start at 44
  44 Transaction      0    0    1 0             01 usesStmtJournal=0
  45 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         11    2    0               00 r[2]=11; return address
REG[2] =  i:11
   3 Once             0   11    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
   9 Integer          5    4    0               00 r[4]=5
REG[4] =  i:5
  10 DecrJumpZero     5   11    0               00 if (--r[5])==0 goto 11
REG[5] =  i:1
  11 Return           2    0    0               00 
REG[2] =  i:11
  12 Integer         38    6    0               00 r[6]=38; return address
REG[6] =  i:38
  13 Once             0   38    0               00 
  14 Explain         14    0    0 SCALAR SUBQUERY 2 00 
  15 Null             0    7    8               00 r[7..8]=NULL; Init subquery result
REG[7] =  NULL
  16 OpenEphemeral    1    5    0 k(2,-B,B)     00 nColumn=5
  17 Integer          1    9    0               00 r[9]=1; LIMIT counter
REG[9] =  i:1
  18 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
  19 Explain         19   14    0 SCAN TABLE t1 00 
  20 Rewind           0   33    0               00 
  33 Explain         33   14    0 USE TEMP B-TREE FOR ORDER BY 00 
  34 Sort             1   38    0               00 
  38 Return           6    0    0               00 
REG[6] =  i:38
  39 Eq               7    1    3 (BINARY)      61 r[1] = (r[3]==r[7])
REG[7] =  NULL
REG[3] =  i:3
REG[1] =  NULL
  40 IfNot            1   42    0               00 
REG[1] =  NULL
  41 Eq               8    1    4 (BINARY)      69 r[1] = (r[4]==r[8])
REG[8] =  NULL
REG[4] =  i:5
REG[1] =  NULL
  42 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  43 Halt             0    0    0               00 
SQL: [SELECT (SELECT * FROM t1 ORDER BY a DESC, a) == (SELECT * FROM t1 ORDER BY a DESC, a)
  
;]
VDBE Trace:
   0 Init             0   53    0               00 Start at 53
  53 Transaction      0    0    1 0             01 usesStmtJournal=0
  54 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         25    3    0               00 r[3]=25; return address
REG[3] =  i:25
   3 Once             0   25    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    4    4               00 r[4..4]=NULL; Init subquery result
REG[4] =  NULL
   6 OpenEphemeral    2    4    0 k(2,-B,B)     00 nColumn=4
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   9 Explain          9    4    0 SCAN TABLE t1 00 
  10 Rewind           0   21    0               00 
  21 Explain         21    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  22 Sort             2   25    0               00 
  25 Return           3    0    0               00 
REG[3] =  i:25
  26 Integer         49   10    0               00 r[10]=49; return address
REG[10] =  i:49
  27 Once             0   49    0               00 
  28 Explain         28    0    0 SCALAR SUBQUERY 2 00 
  29 Null             0   11   11               00 r[11..11]=NULL; Init subquery result
REG[11] =  NULL
  30 OpenEphemeral    3    4    0 k(2,-B,B)     00 nColumn=4
  31 Integer          1   12    0               00 r[12]=1; LIMIT counter
REG[12] =  i:1
  32 OpenRead         1    2    0 1             00 root=2 iDb=0; t1
  33 Explain         33   28    0 SCAN TABLE t1 00 
  34 Rewind           1   45    0               00 
  45 Explain         45   28    0 USE TEMP B-TREE FOR ORDER BY 00 
  46 Sort             3   49    0               00 
  49 Return          10    0    0               00 
REG[10] =  i:49
  50 Eq              11    1    4               61 r[1] = (r[4]==r[11])
REG[11] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  51 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  52 Halt             0    0    0               00 
SQL: [;
;SELECT a FROM t1 WHERE a = (SELECT 'abc' COLLATE nocase) AND a = (SELECT 1);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    0    1 0             01 usesStmtJournal=0
  31 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   29    0               00 
  29 Halt             0    0    0               00 
SQL: [;
;SELECT a FROM t1 WHERE a = (SELECT 'abc') COLLATE nocase AND a = (SELECT 1);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    0    1 0             01 usesStmtJournal=0
  31 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   29    0               00 
  29 Halt             0    0    0               00 
SQL: [
;SELECT a FROM t1 WHERE (a COLLATE nocase, a) = (SELECT 'def', 2);]
VDBE Trace:
   0 Init             0   22    0               00 Start at 22
  22 Transaction      0    0    1 0             01 usesStmtJournal=0
  23 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   21    0               00 
  21 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (a, a) < (2, 3)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    1 0             01 usesStmtJournal=0
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  17 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   13    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (a, a) < (2, 3)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    1 0             01 usesStmtJournal=0
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  17 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   13    0               00 
  13 Halt             0    0    0               00 
SQL: [CREATE TABLE b(c);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    1 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:2
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:2
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 b             00 r[7]='b'
REG[7] =   t1[b](8)
  20 String8          0    8    0 b             00 r[8]='b'
REG[8] =   t1[b](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  22 String8          0   10    0 CREATE TABLE b(c) 00 r[10]='CREATE TABLE b(c)'
REG[10] =   t17[CREATE TABLE b(](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s31[06170F0F012F7461626C656262034352...../tablebb.CR]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s31[06170F0F012F7461626C656262034352...../tablebb.CR]
REG[5] =  i:2
  25 SetCookie        0    1    2               00 
  26 ParseSchema      0    0    0 tbl_name='b' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 0             00 usesStmtJournal=0
  16 String8          0    2    0 b             00 r[2]='b'
REG[2] =   t1[b](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[b](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[b](8)
REG[1] =   s1[b](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[b](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s17[CREATE TABLE b(](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[b](8)
REG[5] =  i:3
REG[6] =   s17[CREATE TABLE b(](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t1 WHERE (select min(a) FROM t1) IN (?, ?, ?)

;]
VDBE Trace:
   0 Init             0   42    0               00 Start at 42
  42 Transaction      0    0    2 0             01 usesStmtJournal=0
  43 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   41    0               00 
  41 Halt             0    0    0               00 
SQL: [CREATE TABLE v1(xyz INTEGER PRIMARY KEY, tt1, tr1);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    2 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:3
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:3
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 v1            00 r[7]='v1'
REG[7] =   t2[v1](8)
  20 String8          0    8    0 v1            00 r[8]='v1'
REG[8] =   t2[v1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  22 String8          0   10    0 CREATE TABLE v1(xyz INTEGER PRIMARY KEY, tt1, tr1) 00 r[10]='CREATE TABLE v1(xyz INTEGER PRIMARY KEY, tt1, tr1)'
REG[10] =   t50[CREATE TABLE v1](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s66[0617111101717461626C657631763104.....qtablev1v1.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s66[0617111101717461626C657631763104.....qtablev1v1.]
REG[5] =  i:3
  25 SetCookie        0    1    3               00 
  26 ParseSchema      0    0    0 tbl_name='v1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 0             00 usesStmtJournal=0
  16 String8          0    2    0 v1            00 r[2]='v1'
REG[2] =   t2[v1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[v1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[v1](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[v1](8)
REG[1] =   s2[v1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[v1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s50[CREATE TABLE v1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[v1](8)
REG[5] =  i:4
REG[6] =   s50[CREATE TABLE v1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO v1 VALUES(1, 1, 1);]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1    3 0             01 usesStmtJournal=0
  17 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 3             00 root=4 iDb=0; v1
   2 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  i:1
   5 MustBeInt        1    0    0               00 
REG[1] =  i:1
   6 SoftNull         2    0    0               00 r[2]=NULL
   7 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   8 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
   9 Noop             0    0    0               00 uniqueness check for ROWID
  10 Abortable        0    0    0               00 
  11 NotExists        0   13    1               00 intkey=r[1]
REG[1] =  i:1
  13 MakeRecord       2    3    5 D             00 r[5]=mkrec(r[2..4])
REG[5] =  s4[04000909....]
  14 Insert           0    5    1 v1            31 intkey=r[1] data=r[5]
REG[5] =  s4[04000909....]
REG[1] =  i:1
  15 Halt             0    0    0               00 
SQL: [;INSERT INTO v1 VALUES(3, 3, 3);]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1    3 0             01 usesStmtJournal=0
  17 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 3             00 root=4 iDb=0; v1
   2 Integer          3    1    0               00 r[1]=3
REG[1] =  i:3
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  i:3
   5 MustBeInt        1    0    0               00 
REG[1] =  i:3
   6 SoftNull         2    0    0               00 r[2]=NULL
   7 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
   8 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
   9 Noop             0    0    0               00 uniqueness check for ROWID
  10 Abortable        0    0    0               00 
  11 NotExists        0   13    1               00 intkey=r[1]
REG[1] =  i:3
  13 MakeRecord       2    3    5 D             00 r[5]=mkrec(r[2..4])
REG[5] =  s6[040001010303......]
  14 Insert           0    5    1 v1            31 intkey=r[1] data=r[5]
REG[5] =  s6[040001010303......]
REG[1] =  i:3
  15 Halt             0    0    0               00 
SQL: [;INSERT INTO v1 VALUES(5, 5, 5);]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1    3 0             01 usesStmtJournal=0
  17 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 3             00 root=4 iDb=0; v1
   2 Integer          5    1    0               00 r[1]=5
REG[1] =  i:5
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  i:5
   5 MustBeInt        1    0    0               00 
REG[1] =  i:5
   6 SoftNull         2    0    0               00 r[2]=NULL
   7 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
   8 Integer          5    4    0               00 r[4]=5
REG[4] =  i:5
   9 Noop             0    0    0               00 uniqueness check for ROWID
  10 Abortable        0    0    0               00 
  11 NotExists        0   13    1               00 intkey=r[1]
REG[1] =  i:5
  13 MakeRecord       2    3    5 D             00 r[5]=mkrec(r[2..4])
REG[5] =  s6[040001010505......]
  14 Insert           0    5    1 v1            31 intkey=r[1] data=r[5]
REG[5] =  s6[040001010505......]
REG[1] =  i:5
  15 Halt             0    0    0               00 
SQL: [SELECT a FROM t1 WHERE (a, a) < (4, 5)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    3 0             01 usesStmtJournal=0
  15 Integer          4    3    0               00 r[3]=4
REG[3] =  i:4
  16 Integer          5    4    0               00 r[4]=5
REG[4] =  i:5
  17 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   13    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT c FROM b WHERE (c, c) < (4, 3)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    3 0             01 usesStmtJournal=0
  15 Integer          4    3    0               00 r[3]=4
REG[3] =  i:4
  16 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  17 Goto             0    1    0               00 
   1 OpenRead         0    3    0 1             00 root=3 iDb=0; b
   2 Explain          2    0    0 SCAN TABLE b  00 
   3 Rewind           0   13    0               00 
  13 Halt             0    0    0               00 
SQL: [CREATE TABLE t2(tr2);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    3 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:4
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:4
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t2            00 r[7]='t2'
REG[7] =   t2[t2](8)
  20 String8          0    8    0 t2            00 r[8]='t2'
REG[8] =   t2[t2](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  22 String8          0   10    0 CREATE TABLE t2(tr2) 00 r[10]='CREATE TABLE t2(tr2)'
REG[10] =   t20[CREATE TABLE t2](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s36[0617111101357461626C657432743205.....5tablet2t2.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s36[0617111101357461626C657432743205.....5tablet2t2.]
REG[5] =  i:4
  25 SetCookie        0    1    4               00 
  26 ParseSchema      0    0    0 tbl_name='t2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    4 0             00 usesStmtJournal=0
  16 String8          0    2    0 t2            00 r[2]='t2'
REG[2] =   t2[t2](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[v1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t2](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t2](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:5
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s20[CREATE TABLE t2](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t2](8)
REG[5] =  i:5
REG[6] =   s20[CREATE TABLE t2](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO b(c) VALUES('X');]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    1    4 0             01 usesStmtJournal=0
   8 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 1             00 root=3 iDb=0; b
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 String8          0    2    0 X             00 r[2]='X'
REG[2] =   t1[X](8)
   4 MakeRecord       2    1    3               00 r[3]=mkrec(r[2])
REG[3] =  s3[020F58..X]
   5 Insert           0    3    1 b             39 intkey=r[1] data=r[3]
REG[3] =  s3[020F58..X]
REG[1] =  i:1
   6 Halt             0    0    0               00 
SQL: [;CREATE INDEX x ON b(c,c,c,c,c);]
VDBE Trace:
   0 Init             0   37    0               00 Start at 37
  37 Transaction      0    1    4 0             01 usesStmtJournal=0
  38 Goto             0    1    0               00 
   1 Noop             0   36    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:6
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:5
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 x             00 r[4]='x'
REG[4] =   t1[x](8)
   7 String8          0    5    0 b             00 r[5]='b'
REG[5] =   t1[b](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:6
   9 String8          0    7    0 CREATE INDEX x ON b(c,c,c,c,c) 00 r[7]='CREATE INDEX x ON b(c,c,c,c,c)'
REG[7] =   t30[CREATE INDEX x ](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s44[06170F0F0149696E6465787862064352.....Iindexxb.CR]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s44[06170F0F0149696E6465787862064352.....Iindexxb.CR]
REG[2] =  i:5
  12 SorterOpen       3    0    5 k(6,,,,,,)    00 
  13 OpenRead         1    3    0 1             00 root=3 iDb=0; b
  14 Rewind           1   24    0               00 
  15 Column           1    0   10               00 r[10]=b.c
REG[10] =   s1[X](8)
  16 Column           1    0   11               00 r[11]=b.c
REG[11] =   s1[X](8)
  17 Column           1    0   12               00 r[12]=b.c
REG[12] =   s1[X](8)
  18 Column           1    0   13               00 r[13]=b.c
REG[13] =   s1[X](8)
  19 Column           1    0   14               00 r[14]=b.c
REG[14] =   s1[X](8)
  20 Rowid            1   15    0               00 r[15]=rowid
REG[15] =  i:1
  21 MakeRecord      10    6    9               00 r[9]=mkrec(r[10..15])
REG[9] =  s12[070F0F0F0F0F095858585858.......XXXXX]
  22 SorterInsert     3    9    0               00 key=r[9]
REG[9] =  s12[070F0F0F0F0F095858585858.......XXXXX]
  23 Next             1   15    0               00 
  24 OpenWrite        2    1    0 k(6,,,,,,)    11 root=1 iDb=0
  25 SorterSort       3   30    0               00 
  26 SorterData       3    9    2               00 r[9]=data
  27 SeekEnd          2    0    0               00 
  28 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s12[070F0F0F0F0F095858585858.......XXXXX]
  29 SorterNext       3   26    0               00 
  30 Close            1    0    0               00 
  31 Close            2    0    0               00 
  32 Close            3    0    0               00 
  33 SetCookie        0    1    5               00 
  34 ParseSchema      0    0    0 name='x' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    5 0             00 usesStmtJournal=0
  16 String8          0    2    0 x             00 r[2]='x'
REG[2] =   t1[x](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[x](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[x](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[x](8)
REG[1] =   s2[v1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[x](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[x](8)
REG[1] =   s1[x](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[x](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:6
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s30[CREATE INDEX x ](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[x](8)
REG[5] =  i:6
REG[6] =   s30[CREATE INDEX x ](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  35 Expire           0    1    0               00 
  36 Halt             0    0    0               00 
SQL: [;SELECT a FROM t1
    WHERE (a,a) IN (SELECT 'a','a' FROM t2)
    AND (a,a,a) IN (SELECT 'a','a','a' FROM t2);]
VDBE Trace:
   0 Init             0   51    0               00 Start at 51
  51 Transaction      0    0    5 0             01 usesStmtJournal=0
  52 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   50    0               00 
  50 Halt             0    0    0               00 
SQL: [;DROP TABLE IF EXISTS t2;]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      0    1    5 0             01 usesStmtJournal=1
  39 String8          0    3    0 t2            00 r[3]='t2'
REG[3] =   t2[t2](8)
  40 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  41 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[t2](8)
REG[2] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[b](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[t2](8)
REG[2] =   s1[b](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[v1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[t2](8)
REG[2] =   s2[v1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t2](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[t2](8)
REG[2] =   s2[t2](8)
   7 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
   8 Eq               4   12    2 (BINARY)      52 if r[2]==r[4] goto 12
REG[4] =   t7[trigger](8)
REG[2] =   s5[table](8)
   9 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:4
  10 Once             0   11    0               00 
  11 Delete           0    0    0               02 
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[b](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[t2](8)
REG[2] =   s1[b](8)
  12 Next             0    5    0               01 
  13 Destroy          5    2    0               00 
REG[2] =  i:0
  14 Null             0    6    7               00 r[6..7]=NULL
REG[6] =  NULL
  15 IfNot            2   24    1               00 
REG[2] =  i:0
  24 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  25 RowSetRead       6   35    7               00 r[7]=rowset(6)
REG[6] =  NULL
REG[7] =  NULL
  35 DropTable        0    0    0 t2            00 
  36 SetCookie        0    1    6               00 
  37 Halt             0    0    0               00 
SQL: [;CREATE TABLE t1i1(t2i1,t0);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    6 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:6
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:6
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:6
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:6
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t1i1          00 r[7]='t1i1'
REG[7] =   t4[t1i1](8)
  20 String8          0    8    0 t1i1          00 r[8]='t1i1'
REG[8] =   t4[t1i1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  22 String8          0   10    0 CREATE TABLE t1i1(t2i1,t0) 00 r[10]='CREATE TABLE t1i1(t2i1,t0)'
REG[10] =   t26[CREATE TABLE t1](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s46[0617151501417461626C657431693174.....Atablet1i1t]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s46[0617151501417461626C657431693174.....Atablet1i1t]
REG[5] =  i:6
  25 SetCookie        0    1    7               00 
  26 ParseSchema      0    0    0 tbl_name='t1i1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    7 0             00 usesStmtJournal=0
  16 String8          0    2    0 t1i1          00 r[2]='t1i1'
REG[2] =   t4[t1i1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t1i1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t1i1](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t1i1](8)
REG[1] =   s2[v1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t1i1](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t1i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t1i1](8)
REG[1] =   s4[t1i1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t1i1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:5
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s26[CREATE TABLE t1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t1i1](8)
REG[5] =  i:5
REG[6] =   s26[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;SELECT *,'a' FROM b LEFT JOIN t1 ON (c,c)=(a,a);]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    0    7 0             01 usesStmtJournal=0
  34 Goto             0    1    0               00 
   1 OpenRead         0    3    0 1             00 root=3 iDb=0; b
   2 OpenRead         1    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE b  00 
   4 Rewind           0   32    0               00 
   5 Once             0   13    0               00 
   6 OpenAutoindex    2    2    0 k(2,B,)       00 nColumn=2; for t1
   7 Rewind           1   13    0               00 
  13 Explain         13    0    0 SEARCH TABLE t1 USING AUTOMATIC COVERING INDEX (a=?) 00 
  14 Integer          0    4    0               00 r[4]=0; init LEFT JOIN no-match flag
REG[4] =  i:0
  15 Column           0    0    5               00 r[5]=b.c
REG[5] =   s1[X](8)
  16 IsNull           5   28    0               00 if r[5]==NULL goto 28
REG[5] =   s1[X](8)
  17 SeekGE           2   28    5 1             00 key=r[5]
REG[5] =   s1[X](8)
  28 IfPos            4   31    0               00 if r[4]>0 then r[4]-=0, goto 31
REG[4] =  i:0
  29 NullRow          2    0    0               00 
  30 Goto             0   22    0               00 
  22 Integer          1    4    0               00 r[4]=1; record LEFT JOIN hit
REG[4] =  i:1
  23 Column           0    0    7               00 r[7]=b.c
REG[7] =   s1[X](8)
  24 Column           2    0    8               00 r[8]=t1.a
REG[8] =  NULL
  25 String8          0    9    0 a             00 r[9]='a'
REG[9] =   t1[a](8)
  26 ResultRow        7    3    0               00 output=r[7..9]
REG[7] =   s1[X](8)
REG[8] =  NULL
REG[9] =   t1[a](8)
  27 Next             2   18    0               00 
  28 IfPos            4   31    0               00 if r[4]>0 then r[4]-=0, goto 31
REG[4] =  i:1
  31 Next             0    5    0               01 
  32 Halt             0    0    0               00 
SQL: [CREATE TABLE c0(c1);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    7 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:7
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:7
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:7
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:7
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:7
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:7
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 c0            00 r[7]='c0'
REG[7] =   t2[c0](8)
  20 String8          0    8    0 c0            00 r[8]='c0'
REG[8] =   t2[c0](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:7
  22 String8          0   10    0 CREATE TABLE c0(c1) 00 r[10]='CREATE TABLE c0(c1)'
REG[10] =   t19[CREATE TABLE c0](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s35[0617111101337461626C656330633007.....3tablec0c0.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s35[0617111101337461626C656330633007.....3tablec0c0.]
REG[5] =  i:7
  25 SetCookie        0    1    8               00 
  26 ParseSchema      0    0    0 tbl_name='c0' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    8 0             00 usesStmtJournal=0
  16 String8          0    2    0 c0            00 r[2]='c0'
REG[2] =   t2[c0](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s2[v1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t1i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s4[t1i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[c0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s2[c0](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[c0](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:7
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s19[CREATE TABLE c0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[c0](8)
REG[5] =  i:7
REG[6] =   s19[CREATE TABLE c0](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [SELECT CASE (2,2) WHEN (1, 1) THEN 2 ELSE 1 END
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
  12 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  13 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  14 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               5    4    2               61 r[4] = (r[2]==r[5])
REG[5] =  i:1
REG[2] =  i:2
REG[4] =  i:0
   3 IfNot            4    5    0               00 
REG[4] =  i:0
   5 IfNot            4    8    1               00 
REG[4] =  i:0
   8 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
   9 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  10 Halt             0    0    0               00 
SQL: [SELECT CASE (SELECT 2,2) WHEN (1, 1) THEN 2 ELSE 1 END
;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Integer          1    7    0               00 r[7]=1
REG[7] =  i:1
  22 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         11    2    0               00 r[2]=11; return address
REG[2] =  i:11
   3 Once             0   11    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   9 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  10 DecrJumpZero     5   11    0               00 if (--r[5])==0 goto 11
REG[5] =  i:1
  11 Return           2    0    0               00 
REG[2] =  i:11
  12 Eq               7    6    3               61 r[6] = (r[3]==r[7])
REG[7] =  i:1
REG[3] =  i:2
REG[6] =  i:0
  13 IfNot            6   15    0               00 
REG[6] =  i:0
  15 IfNot            6   18    1               00 
REG[6] =  i:0
  18 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  19 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  20 Halt             0    0    0               00 
SQL: [SELECT 1 WHERE (SELECT 2,2) BETWEEN (1,1) AND (3,3)
;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  24 Integer          3    7    0               00 r[7]=3
REG[7] =  i:3
  25 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         11    1    0               00 r[1]=11; return address
REG[1] =  i:11
   3 Once             0   11    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    2    3               00 r[2..3]=NULL; Init subquery result
REG[2] =  NULL
   6 Integer          1    4    0               00 r[4]=1; LIMIT counter
REG[4] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
   9 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  10 DecrJumpZero     4   11    0               00 if (--r[4])==0 goto 11
REG[4] =  i:1
  11 Return           1    0    0               00 
REG[1] =  i:11
  12 Gt               6    5    2               61 r[5] = (r[2]>r[6])
REG[6] =  i:1
REG[2] =  i:2
REG[5] =  i:1
  13 ElseNotEq        0   15    0               00 
  15 IfNot            5   22    1               00 
REG[5] =  i:1
  16 Lt               7    5    2               61 r[5] = (r[2]<r[7])
REG[7] =  i:3
REG[2] =  i:2
REG[5] =  i:1
  17 ElseNotEq        0   19    0               00 
  19 IfNot            5   22    1               00 
REG[5] =  i:1
  20 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  21 ResultRow        8    1    0               00 output=r[8]
REG[8] =  i:1
  22 Halt             0    0    0               00 
SQL: [SELECT 1 FROM v1 WHERE (1,xyz) BETWEEN (1,1) AND (3,3)

;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    8 0             01 usesStmtJournal=0
  18 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  19 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  20 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  21 Goto             0    1    0               00 
   1 OpenRead         0    4    0 0             00 root=4 iDb=0; v1
   2 Explain          2    0    0 SCAN TABLE v1 00 
   3 Rewind           0   16    0               00 
   4 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   5 Gt               4    3    1               61 r[3] = (r[1]>r[4])
REG[4] =  i:1
REG[1] =  i:1
REG[3] =  i:0
   6 ElseNotEq        0    8    0               00 
   7 Ge               4    3    2               64 r[3] = (r[2]>=r[4])
REG[4] =  i:1
REG[2] =  i:1
REG[3] =  i:1
   8 IfNot            3   15    1               00 
REG[3] =  i:1
   9 Lt               5    3    1               61 r[3] = (r[1]<r[5])
REG[5] =  i:3
REG[1] =  i:1
REG[3] =  i:1
  10 ElseNotEq        0   12    0               00 
  12 IfNot            3   15    1               00 
REG[3] =  i:1
  13 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  14 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:1
  15 Next             0    4    0               01 
   4 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:3
   5 Gt               4    3    1               61 r[3] = (r[1]>r[4])
REG[4] =  i:1
REG[1] =  i:1
REG[3] =  i:0
   6 ElseNotEq        0    8    0               00 
   7 Ge               4    3    2               64 r[3] = (r[2]>=r[4])
REG[4] =  i:1
REG[2] =  i:3
REG[3] =  i:1
   8 IfNot            3   15    1               00 
REG[3] =  i:1
   9 Lt               5    3    1               61 r[3] = (r[1]<r[5])
REG[5] =  i:3
REG[1] =  i:1
REG[3] =  i:1
  10 ElseNotEq        0   12    0               00 
  12 IfNot            3   15    1               00 
REG[3] =  i:1
  13 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  14 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:1
  15 Next             0    4    0               01 
   4 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:5
   5 Gt               4    3    1               61 r[3] = (r[1]>r[4])
REG[4] =  i:1
REG[1] =  i:1
REG[3] =  i:0
   6 ElseNotEq        0    8    0               00 
   7 Ge               4    3    2               64 r[3] = (r[2]>=r[4])
REG[4] =  i:1
REG[2] =  i:5
REG[3] =  i:1
   8 IfNot            3   15    1               00 
REG[3] =  i:1
   9 Lt               5    3    1               61 r[3] = (r[1]<r[5])
REG[5] =  i:3
REG[1] =  i:1
REG[3] =  i:1
  10 ElseNotEq        0   12    0               00 
  12 IfNot            3   15    1               00 
REG[3] =  i:1
  13 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  14 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:1
  15 Next             0    4    0               01 
  16 Halt             0    0    0               00 
SQL: [CREATE TABLE v2(d PRIMARY KEY, t1abc);]
VDBE Trace:
   0 Init             0   39    0               00 Start at 39
  39 Transaction      0    1    8 0             01 usesStmtJournal=0
  40 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:8
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:8
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:8
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      0    4    2               00 r[4]=root iDb=0 flags=2
REG[4] =  i:9
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:9
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_v2_1 00 r[7]='sqlite_autoindex_v2_1'
REG[7] =   t21[sqlite_autoinde](8)
  17 String8          0    8    0 v2            00 r[8]='v2'
REG[8] =   t2[v2](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:9
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s35[061737110100696E64657873716C6974..7...indexsqlit]
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  s35[061737110100696E64657873716C6974..7...indexsqlit]
REG[5] =  i:9
  22 Close            0    0    0               00 
  23 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  24 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  25 Explain         25    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  26 SeekRowid        2   28    1               00 intkey=r[1]
REG[1] =  i:8
  27 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:8
  28 IsNull          13   36    0               00 if r[13]==NULL goto 36
REG[13] =  i:8
  29 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  30 String8          0   15    0 v2            00 r[15]='v2'
REG[15] =   t2[v2](8)
  31 String8          0   16    0 v2            00 r[16]='v2'
REG[16] =   t2[v2](8)
  32 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:8
  33 String8          0   18    0 CREATE TABLE v2(d PRIMARY KEY, t1abc) 00 r[18]='CREATE TABLE v2(d PRIMARY KEY, t1abc)'
REG[18] =   t37[CREATE TABLE v2](8)
  34 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s53[0617111101577461626C657632763208.....Wtablev2v2.]
  35 Insert           2   19   13               00 intkey=r[13] data=r[19]
REG[19] =  s53[0617111101577461626C657632763208.....Wtablev2v2.]
REG[13] =  i:8
  36 SetCookie        0    1    9               00 
  37 ParseSchema      0    0    0 tbl_name='v2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    9 0             00 usesStmtJournal=0
  16 String8          0    2    0 v2            00 r[2]='v2'
REG[2] =   t2[v2](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[v2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[v2](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[v2](8)
REG[1] =   s2[v1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[v2](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t1i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[v2](8)
REG[1] =   s4[t1i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[c0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[v2](8)
REG[1] =   s2[c0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[v2](8)
REG[1] =   s2[v2](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[v2](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:8
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s37[CREATE TABLE v2](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[v2](8)
REG[5] =  i:8
REG[6] =   s37[CREATE TABLE v2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[v2](8)
REG[1] =   s2[v2](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s21[sqlite_autoinde](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:9
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =  NULL
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s21[sqlite_autoinde](8)
REG[5] =  i:9
REG[6] =  NULL
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  38 Halt             0    0    0               00 
SQL: [;CREATE TABLE t1abd(t3 INTEGER PRIMARY KEY, m);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    9 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:10
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:10
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:10
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:10
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:10
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:10
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t1abd         00 r[7]='t1abd'
REG[7] =   t5[t1abd](8)
  20 String8          0    8    0 t1abd         00 r[8]='t1abd'
REG[8] =   t5[t1abd](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:10
  22 String8          0   10    0 CREATE TABLE t1abd(t3 INTEGER PRIMARY KEY, m) 00 r[10]='CREATE TABLE t1abd(t3 INTEGER PRIMARY KEY, m)'
REG[10] =   t45[CREATE TABLE t1](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s67[0617171701677461626C657431616264.....gtablet1abd]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s67[0617171701677461626C657431616264.....gtablet1abd]
REG[5] =  i:10
  25 SetCookie        0    1   10               00 
  26 ParseSchema      0    0    0 tbl_name='t1abd' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   10 0             00 usesStmtJournal=0
  16 String8          0    2    0 t1abd         00 r[2]='t1abd'
REG[2] =   t5[t1abd](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abd](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abd](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abd](8)
REG[1] =   s2[v1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abd](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t1i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abd](8)
REG[1] =   s4[t1i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[c0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abd](8)
REG[1] =   s2[c0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abd](8)
REG[1] =   s2[v2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abd](8)
REG[1] =   s2[v2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[t1abd](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abd](8)
REG[1] =   s5[t1abd](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s5[t1abd](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:10
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s45[CREATE TABLE t1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s5[t1abd](8)
REG[5] =  i:10
REG[6] =   s45[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [
;CREATE TABLE rins(rins2,aaa,bbb);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   10 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:11
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:11
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:11
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:11
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:11
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:11
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 rins          00 r[7]='rins'
REG[7] =   t4[rins](8)
  20 String8          0    8    0 rins          00 r[8]='rins'
REG[8] =   t4[rins](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:11
  22 String8          0   10    0 CREATE TABLE rins(rins2,aaa,bbb) 00 r[10]='CREATE TABLE rins(rins2,aaa,bbb)'
REG[10] =   t32[CREATE TABLE ri](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s52[06171515014D7461626C6572696E7372.....Mtablerinsr]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s52[06171515014D7461626C6572696E7372.....Mtablerinsr]
REG[5] =  i:11
  25 SetCookie        0    1   11               00 
  26 ParseSchema      0    0    0 tbl_name='rins' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   11 0             00 usesStmtJournal=0
  16 String8          0    2    0 rins          00 r[2]='rins'
REG[2] =   t4[rins](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[rins](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[rins](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[rins](8)
REG[1] =   s2[v1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[rins](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t1i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[rins](8)
REG[1] =   s4[t1i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[c0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[rins](8)
REG[1] =   s2[c0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[rins](8)
REG[1] =   s2[v2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[rins](8)
REG[1] =   s2[v2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[t1abd](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[rins](8)
REG[1] =   s5[t1abd](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[rins](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[rins](8)
REG[1] =   s4[rins](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[rins](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:11
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s32[CREATE TABLE ri](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[rins](8)
REG[5] =  i:11
REG[6] =   s32[CREATE TABLE ri](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;CREATE TABLE aa(bb);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   11 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:12
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:12
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:12
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:12
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:12
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:12
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 aa            00 r[7]='aa'
REG[7] =   t2[aa](8)
  20 String8          0    8    0 aa            00 r[8]='aa'
REG[8] =   t2[aa](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:12
  22 String8          0   10    0 CREATE TABLE aa(bb) 00 r[10]='CREATE TABLE aa(bb)'
REG[10] =   t19[CREATE TABLE aa](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s35[0617111101337461626C65616161610C.....3tableaaaa.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s35[0617111101337461626C65616161610C.....3tableaaaa.]
REG[5] =  i:12
  25 SetCookie        0    1   12               00 
  26 ParseSchema      0    0    0 tbl_name='aa' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   12 0             00 usesStmtJournal=0
  16 String8          0    2    0 aa            00 r[2]='aa'
REG[2] =   t2[aa](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[aa](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[aa](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[aa](8)
REG[1] =   s2[v1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[aa](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t1i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[aa](8)
REG[1] =   s4[t1i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[c0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[aa](8)
REG[1] =   s2[c0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[aa](8)
REG[1] =   s2[v2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[aa](8)
REG[1] =   s2[v2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[t1abd](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[aa](8)
REG[1] =   s5[t1abd](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[rins](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[aa](8)
REG[1] =   s4[rins](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[aa](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[aa](8)
REG[1] =   s2[aa](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[aa](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:12
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s19[CREATE TABLE aa](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[aa](8)
REG[5] =  i:12
REG[6] =   s19[CREATE TABLE aa](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO b(c) VALUES(1);]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    1   12 0             01 usesStmtJournal=0
  18 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 1             00 root=3 iDb=0; b
   2 OpenWrite        1    6    0 k(6,,,,,,)    00 root=6 iDb=0; x
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   4 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   5 Noop             0    0    0               00 uniqueness check for x
   6 SCopy            2    4    0               00 r[4]=r[2]; c
REG[4] =  i:1
   7 SCopy            2    5    0               00 r[5]=r[2]; c
REG[5] =  i:1
   8 SCopy            2    6    0               00 r[6]=r[2]; c
REG[6] =  i:1
   9 SCopy            2    7    0               00 r[7]=r[2]; c
REG[7] =  i:1
  10 SCopy            2    8    0               00 r[8]=r[2]; c
REG[8] =  i:1
  11 IntCopy          1    9    0               00 r[9]=r[1]; rowid
REG[9] =  i:2
  12 MakeRecord       4    6    3               00 r[3]=mkrec(r[4..9]); for x
REG[3] =  s8[0709090909090102........]
  13 IdxInsert        1    3    4 6             10 key=r[3]
REG[3] =  s8[0709090909090102........]
  14 MakeRecord       2    1   10               00 r[10]=mkrec(r[2])
REG[10] =  s2[0209..]
  15 Insert           0   10    1 b             39 intkey=r[1] data=r[10]
REG[10] =  s2[0209..]
REG[1] =  i:2
  16 Halt             0    0    0               00 
SQL: [;UPDATE c0 SET c1=7;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    1   12 0             01 usesStmtJournal=0
  13 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenWrite        0    7    0 1             00 root=7 iDb=0; c0
   3 Explain          3    0    0 SCAN TABLE c0 00 
   4 Rewind           0   11    0               00 
  11 Halt             0    0    0               00 
SQL: [;PRAGMA recursive_triggers = 1;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;UPDATE c0 SET c1=c1 WHERE c1=3;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    1   12 0             01 usesStmtJournal=0
  15 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  16 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenWrite        0    7    0 1             00 root=7 iDb=0; c0
   3 Explain          3    0    0 SCAN TABLE c0 00 
   4 Rewind           0   13    0               00 
  13 Halt             0    0    0               00 
SQL: [;SELECT * FROM t1abd;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0   12 0             01 usesStmtJournal=0
  10 Goto             0    1    0               00 
   1 OpenRead         0   10    0 2             00 root=10 iDb=0; t1abd
   2 Explain          2    0    0 SCAN TABLE t1abd 00 
   3 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [;
;CREATE TABLE cc(xx, yy);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   12 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:13
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:13
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:13
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:13
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:13
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:13
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 cc            00 r[7]='cc'
REG[7] =   t2[cc](8)
  20 String8          0    8    0 cc            00 r[8]='cc'
REG[8] =   t2[cc](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:13
  22 String8          0   10    0 CREATE TABLE cc(xx, yy) 00 r[10]='CREATE TABLE cc(xx, yy)'
REG[10] =   t23[CREATE TABLE cc](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s39[06171111013B7461626C65636363630D.....;tablecccc.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s39[06171111013B7461626C65636363630D.....;tablecccc.]
REG[5] =  i:13
  25 SetCookie        0    1   13               00 
  26 ParseSchema      0    0    0 tbl_name='cc' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   13 0             00 usesStmtJournal=0
  16 String8          0    2    0 cc            00 r[2]='cc'
REG[2] =   t2[cc](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[cc](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[cc](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[cc](8)
REG[1] =   s2[v1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[cc](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t1i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[cc](8)
REG[1] =   s4[t1i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[c0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[cc](8)
REG[1] =   s2[c0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[cc](8)
REG[1] =   s2[v2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[cc](8)
REG[1] =   s2[v2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[t1abd](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[cc](8)
REG[1] =   s5[t1abd](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[rins](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[cc](8)
REG[1] =   s4[rins](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[aa](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[cc](8)
REG[1] =   s2[aa](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[cc](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[cc](8)
REG[1] =   s2[cc](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[cc](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:13
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s23[CREATE TABLE cc](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[cc](8)
REG[5] =  i:13
REG[6] =   s23[CREATE TABLE cc](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;CREATE TABLE zz(y);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   13 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:14
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:14
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:14
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:14
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:14
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:14
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 zz            00 r[7]='zz'
REG[7] =   t2[zz](8)
  20 String8          0    8    0 zz            00 r[8]='zz'
REG[8] =   t2[zz](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:14
  22 String8          0   10    0 CREATE TABLE zz(y) 00 r[10]='CREATE TABLE zz(y)'
REG[10] =   t18[CREATE TABLE zz](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s34[0617111101317461626C657A7A7A7A0E.....1tablezzzz.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s34[0617111101317461626C657A7A7A7A0E.....1tablezzzz.]
REG[5] =  i:14
  25 SetCookie        0    1   14               00 
  26 ParseSchema      0    0    0 tbl_name='zz' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   14 0             00 usesStmtJournal=0
  16 String8          0    2    0 zz            00 r[2]='zz'
REG[2] =   t2[zz](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[zz](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[zz](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[zz](8)
REG[1] =   s2[v1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[zz](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t1i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[zz](8)
REG[1] =   s4[t1i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[c0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[zz](8)
REG[1] =   s2[c0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[zz](8)
REG[1] =   s2[v2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[zz](8)
REG[1] =   s2[v2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[t1abd](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[zz](8)
REG[1] =   s5[t1abd](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[rins](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[zz](8)
REG[1] =   s4[rins](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[aa](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[zz](8)
REG[1] =   s2[aa](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[cc](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[zz](8)
REG[1] =   s2[cc](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[zz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[zz](8)
REG[1] =   s2[zz](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[zz](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:14
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s18[CREATE TABLE zz](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[zz](8)
REG[5] =  i:14
REG[6] =   s18[CREATE TABLE zz](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;
;CREATE TABLE dual ( dummy, t4, PRIMARY KEY (dummy, t4) );]
VDBE Trace:
   0 Init             0   39    0               00 Start at 39
  39 Transaction      0    1   14 0             01 usesStmtJournal=0
  40 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:15
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:15
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:15
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      0    4    2               00 r[4]=root iDb=0 flags=2
REG[4] =  i:16
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:16
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_dual_1 00 r[7]='sqlite_autoindex_dual_1'
REG[7] =   t23[sqlite_autoinde](8)
  17 String8          0    8    0 dual          00 r[8]='dual'
REG[8] =   t4[dual](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:16
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s39[06173B150100696E64657873716C6974..;...indexsqlit]
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  s39[06173B150100696E64657873716C6974..;...indexsqlit]
REG[5] =  i:16
  22 Close            0    0    0               00 
  23 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  24 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  25 Explain         25    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  26 SeekRowid        2   28    1               00 intkey=r[1]
REG[1] =  i:15
  27 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:15
  28 IsNull          13   36    0               00 if r[13]==NULL goto 36
REG[13] =  i:15
  29 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  30 String8          0   15    0 dual          00 r[15]='dual'
REG[15] =   t4[dual](8)
  31 String8          0   16    0 dual          00 r[16]='dual'
REG[16] =   t4[dual](8)
  32 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:15
  33 String8          0   18    0 CREATE TABLE dual ( dummy, t4, PRIMARY KEY (dummy, t4) ) 00 r[18]='CREATE TABLE dual ( dummy, t4, PRIMARY KEY (dummy, t4) )'
REG[18] =   t56[CREATE TABLE du](8)
  34 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s76[06171515017D7461626C656475616C64.....}tableduald]
  35 Insert           2   19   13               00 intkey=r[13] data=r[19]
REG[19] =  s76[06171515017D7461626C656475616C64.....}tableduald]
REG[13] =  i:15
  36 SetCookie        0    1   15               00 
  37 ParseSchema      0    0    0 tbl_name='dual' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   15 0             00 usesStmtJournal=0
  16 String8          0    2    0 dual          00 r[2]='dual'
REG[2] =   t4[dual](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[dual](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[dual](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[dual](8)
REG[1] =   s2[v1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[dual](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t1i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[dual](8)
REG[1] =   s4[t1i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[c0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[dual](8)
REG[1] =   s2[c0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[dual](8)
REG[1] =   s2[v2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[dual](8)
REG[1] =   s2[v2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[t1abd](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[dual](8)
REG[1] =   s5[t1abd](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[rins](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[dual](8)
REG[1] =   s4[rins](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[aa](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[dual](8)
REG[1] =   s2[aa](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[cc](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[dual](8)
REG[1] =   s2[cc](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[zz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[dual](8)
REG[1] =   s2[zz](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[dual](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[dual](8)
REG[1] =   s4[dual](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[dual](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:15
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s56[CREATE TABLE du](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[dual](8)
REG[5] =  i:15
REG[6] =   s56[CREATE TABLE du](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[dual](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[dual](8)
REG[1] =   s4[dual](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s23[sqlite_autoinde](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:16
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =  NULL
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s23[sqlite_autoinde](8)
REG[5] =  i:16
REG[6] =  NULL
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  38 Halt             0    0    0               00 
SQL: [;CREATE TABLE t5 ( i );]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   15 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:17
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:17
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:17
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:17
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:17
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:17
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t5            00 r[7]='t5'
REG[7] =   t2[t5](8)
  20 String8          0    8    0 t5            00 r[8]='t5'
REG[8] =   t2[t5](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:17
  22 String8          0   10    0 CREATE TABLE t5 ( i ) 00 r[10]='CREATE TABLE t5 ( i )'
REG[10] =   t21[CREATE TABLE t5](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s37[0617111101377461626C657435743511.....7tablet5t5.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s37[0617111101377461626C657435743511.....7tablet5t5.]
REG[5] =  i:17
  25 SetCookie        0    1   16               00 
  26 ParseSchema      0    0    0 tbl_name='t5' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   16 0             00 usesStmtJournal=0
  16 String8          0    2    0 t5            00 r[2]='t5'
REG[2] =   t2[t5](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s2[v1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t1i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s4[t1i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[c0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s2[c0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s2[v2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s2[v2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[t1abd](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s5[t1abd](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[rins](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s4[rins](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[aa](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s2[aa](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[cc](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s2[cc](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[zz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s2[zz](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[dual](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s4[dual](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[dual](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s4[dual](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t5](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s2[t5](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t5](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:17
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s21[CREATE TABLE t5](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t5](8)
REG[5] =  i:17
REG[6] =   s21[CREATE TABLE t5](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO v2 VALUES (1, 1), (1, 2);]
VDBE Trace:
   0 Init             0   26    0               00 Start at 26
  26 Transaction      0    1   16 0             01 usesStmtJournal=1
  27 Goto             0    1    0               00 
   1 InitCoroutine    4   10    2               00 
  10 OpenWrite        0    8    0 2             00 root=8 iDb=0; v2
  11 OpenWrite        1    9    0 k(2,,)        00 root=9 iDb=0; sqlite_autoindex_v2_1
  12 Yield            4   25    0               00 
REG[4] =  i:1
REG[4] =  i:12
   2 Explain          2    0    0 SCAN 2 CONSTANT ROWS 00 
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   5 Yield            4    0    0               00 
REG[4] =  i:12
REG[4] =  i:5
  13 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
  14 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_v2_1
  15 SCopy            2    6    0               00 r[6]=r[2]; d
REG[6] =  i:1
  16 IntCopy          1    7    0               00 r[7]=r[1]; rowid
REG[7] =  i:1
  17 MakeRecord       6    2    5               00 r[5]=mkrec(r[6..7]); for sqlite_autoindex_v2_1
REG[5] =  s3[030909...]
  18 Abortable        0    0    0               00 
  19 NoConflict       1   21    6 1             00 key=r[6]
REG[6] =  i:1
  21 IdxInsert        1    5    6 2             10 key=r[5]
REG[5] =  s3[030909...]
  22 MakeRecord       2    2    8               00 r[8]=mkrec(r[2..3])
REG[8] =  s3[030909...]
  23 Insert           0    8    1 v2            39 intkey=r[1] data=r[8]
REG[8] =  s3[030909...]
REG[1] =  i:1
  24 Goto             0   12    0               00 
  12 Yield            4   25    0               00 
REG[4] =  i:5
REG[4] =  i:12
   6 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   7 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   8 Yield            4    0    0               00 
REG[4] =  i:12
REG[4] =  i:8
  13 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
  14 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_v2_1
  15 SCopy            2    6    0               00 r[6]=r[2]; d
REG[6] =  i:1
  16 IntCopy          1    7    0               00 r[7]=r[1]; rowid
REG[7] =  i:2
  17 MakeRecord       6    2    5               00 r[5]=mkrec(r[6..7]); for sqlite_autoindex_v2_1
REG[5] =  s4[03090102....]
  18 Abortable        0    0    0               00 
  19 NoConflict       1   21    6 1             00 key=r[6]
REG[6] =  i:1
  20 Halt          1555    2    0 v2.d          02 
SQL: [;CREATE TABLE t(u1 INTEGER PRIMARY KEY,z);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   16 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:18
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:18
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:18
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:18
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:18
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:18
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t             00 r[7]='t'
REG[7] =   t1[t](8)
  20 String8          0    8    0 t             00 r[8]='t'
REG[8] =   t1[t](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:18
  22 String8          0   10    0 CREATE TABLE t(u1 INTEGER PRIMARY KEY,z) 00 r[10]='CREATE TABLE t(u1 INTEGER PRIMARY KEY,z)'
REG[10] =   t40[CREATE TABLE t(](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s54[06170F0F015D7461626C657474124352.....]tablett.CR]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s54[06170F0F015D7461626C657474124352.....]tablett.CR]
REG[5] =  i:18
  25 SetCookie        0    1   17               00 
  26 ParseSchema      0    0    0 tbl_name='t' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   17 0             00 usesStmtJournal=0
  16 String8          0    2    0 t             00 r[2]='t'
REG[2] =   t1[t](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[t](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[t](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[t](8)
REG[1] =   s2[v1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[t](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t1i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[t](8)
REG[1] =   s4[t1i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[c0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[t](8)
REG[1] =   s2[c0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[t](8)
REG[1] =   s2[v2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[t](8)
REG[1] =   s2[v2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[t1abd](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[t](8)
REG[1] =   s5[t1abd](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[rins](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[t](8)
REG[1] =   s4[rins](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[aa](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[t](8)
REG[1] =   s2[aa](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[cc](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[t](8)
REG[1] =   s2[cc](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[zz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[t](8)
REG[1] =   s2[zz](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[dual](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[t](8)
REG[1] =   s4[dual](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[dual](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[t](8)
REG[1] =   s4[dual](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t5](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[t](8)
REG[1] =   s2[t5](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[t](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[t](8)
REG[1] =   s1[t](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[t](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:18
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s40[CREATE TABLE t(](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[t](8)
REG[5] =  i:18
REG[6] =   s40[CREATE TABLE t(](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO t1i1(t2i1,t0) VALUES(1,11),(2,22),(3,33),(4,44);]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    1   17 0             01 usesStmtJournal=0
  24 Goto             0    1    0               00 
   1 InitCoroutine    4   16    2               00 
  16 OpenWrite        0    5    0 2             00 root=5 iDb=0; t1i1
  17 Yield            4   22    0               00 
REG[4] =  i:1
REG[4] =  i:17
   2 Explain          2    0    0 SCAN 4 CONSTANT ROWS 00 
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 Integer         11    3    0               00 r[3]=11
REG[3] =  i:11
   5 Yield            4    0    0               00 
REG[4] =  i:17
REG[4] =  i:5
  18 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
  19 MakeRecord       2    2    5               00 r[5]=mkrec(r[2..3])
REG[5] =  s4[0309010B....]
  20 Insert           0    5    1 t1i1          39 intkey=r[1] data=r[5]
REG[5] =  s4[0309010B....]
REG[1] =  i:1
  21 Goto             0   17    0               00 
  17 Yield            4   22    0               00 
REG[4] =  i:5
REG[4] =  i:17
   6 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
   7 Integer         22    3    0               00 r[3]=22
REG[3] =  i:22
   8 Yield            4    0    0               00 
REG[4] =  i:17
REG[4] =  i:8
  18 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
  19 MakeRecord       2    2    5               00 r[5]=mkrec(r[2..3])
REG[5] =  s5[0301010216.....]
  20 Insert           0    5    1 t1i1          39 intkey=r[1] data=r[5]
REG[5] =  s5[0301010216.....]
REG[1] =  i:2
  21 Goto             0   17    0               00 
  17 Yield            4   22    0               00 
REG[4] =  i:8
REG[4] =  i:17
   9 Integer          3    2    0               00 r[2]=3
REG[2] =  i:3
  10 Integer         33    3    0               00 r[3]=33
REG[3] =  i:33
  11 Yield            4    0    0               00 
REG[4] =  i:17
REG[4] =  i:11
  18 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
  19 MakeRecord       2    2    5               00 r[5]=mkrec(r[2..3])
REG[5] =  s5[0301010321....!]
  20 Insert           0    5    1 t1i1          39 intkey=r[1] data=r[5]
REG[5] =  s5[0301010321....!]
REG[1] =  i:3
  21 Goto             0   17    0               00 
  17 Yield            4   22    0               00 
REG[4] =  i:11
REG[4] =  i:17
  12 Integer          4    2    0               00 r[2]=4
REG[2] =  i:4
  13 Integer         44    3    0               00 r[3]=44
REG[3] =  i:44
  14 Yield            4    0    0               00 
REG[4] =  i:17
REG[4] =  i:14
  18 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
  19 MakeRecord       2    2    5               00 r[5]=mkrec(r[2..3])
REG[5] =  s5[030101042C....,]
  20 Insert           0    5    1 t1i1          39 intkey=r[1] data=r[5]
REG[5] =  s5[030101042C....,]
REG[1] =  i:4
  21 Goto             0   17    0               00 
  17 Yield            4   22    0               00 
REG[4] =  i:14
REG[4] =  i:17
  15 EndCoroutine     4    0    0               00 
REG[4] =  i:17
  22 Halt             0    0    0               00 
SQL: [;SELECT * FROM t1i1 WHERE (t0,t0)>(0,0) ORDER BY t0;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   17 0             01 usesStmtJournal=0
  26 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  27 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 OpenRead         0    5    0 2             00 root=5 iDb=0; t1i1
   3 Explain          3    0    0 SCAN TABLE t1i1 00 
   4 Rewind           0   16    0               00 
   5 Column           0    1    2               00 r[2]=t1i1.t0
REG[2] =  i:11
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:0
REG[2] =  i:11
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    0    5               00 r[5]=t1i1.t2i1
REG[5] =  i:1
  12 Column           0    1    4               00 r[4]=t1i1.t0
REG[4] =  i:11
  13 MakeRecord       4    2    7               00 r[7]=mkrec(r[4..5])
REG[7] =  s4[0301090B....]
  14 SorterInsert     1    7    4 2             00 key=r[7]
REG[7] =  s4[0301090B....]
  15 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=t1i1.t0
REG[2] =  i:22
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:0
REG[2] =  i:22
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    0    5               00 r[5]=t1i1.t2i1
REG[5] =  i:2
  12 Column           0    1    4               00 r[4]=t1i1.t0
REG[4] =  i:22
  13 MakeRecord       4    2    7               00 r[7]=mkrec(r[4..5])
REG[7] =  s5[0301011602.....]
  14 SorterInsert     1    7    4 2             00 key=r[7]
REG[7] =  s5[0301011602.....]
  15 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=t1i1.t0
REG[2] =  i:33
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:0
REG[2] =  i:33
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    0    5               00 r[5]=t1i1.t2i1
REG[5] =  i:3
  12 Column           0    1    4               00 r[4]=t1i1.t0
REG[4] =  i:33
  13 MakeRecord       4    2    7               00 r[7]=mkrec(r[4..5])
REG[7] =  s5[0301012103...!.]
  14 SorterInsert     1    7    4 2             00 key=r[7]
REG[7] =  s5[0301012103...!.]
  15 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=t1i1.t0
REG[2] =  i:44
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:0
REG[2] =  i:44
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    0    5               00 r[5]=t1i1.t2i1
REG[5] =  i:4
  12 Column           0    1    4               00 r[4]=t1i1.t0
REG[4] =  i:44
  13 MakeRecord       4    2    7               00 r[7]=mkrec(r[4..5])
REG[7] =  s5[0301012C04...,.]
  14 SorterInsert     1    7    4 2             00 key=r[7]
REG[7] =  s5[0301012C04...,.]
  15 Next             0    5    0               01 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    8    4               00 4 columns in r[8]
  18 SorterSort       1   24    0               00 
  19 SorterData       1    8    2               00 r[8]=data
  20 Column           2    0    6               00 r[6]=t0
REG[6] =  i:11
  21 Column           2    1    5               00 r[5]=t2i1
REG[5] =  i:1
  22 ResultRow        5    2    0               00 output=r[5..6]
REG[5] =  i:1
REG[6] =  i:11
  23 SorterNext       1   19    0               00 
  19 SorterData       1    8    2               00 r[8]=data
  20 Column           2    0    6               00 r[6]=t0
REG[6] =  i:22
  21 Column           2    1    5               00 r[5]=t2i1
REG[5] =  i:2
  22 ResultRow        5    2    0               00 output=r[5..6]
REG[5] =  i:2
REG[6] =  i:22
  23 SorterNext       1   19    0               00 
  19 SorterData       1    8    2               00 r[8]=data
  20 Column           2    0    6               00 r[6]=t0
REG[6] =  i:33
  21 Column           2    1    5               00 r[5]=t2i1
REG[5] =  i:3
  22 ResultRow        5    2    0               00 output=r[5..6]
REG[5] =  i:3
REG[6] =  i:33
  23 SorterNext       1   19    0               00 
  19 SorterData       1    8    2               00 r[8]=data
  20 Column           2    0    6               00 r[6]=t0
REG[6] =  i:44
  21 Column           2    1    5               00 r[5]=t2i1
REG[5] =  i:4
  22 ResultRow        5    2    0               00 output=r[5..6]
REG[5] =  i:4
REG[6] =  i:44
  23 SorterNext       1   19    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM rins WHERE (aaa,rins2)<(5,0) ORDER BY aaa DESC;]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    0   17 0             01 usesStmtJournal=0
  28 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
  29 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  30 Goto             0    1    0               00 
   1 SorterOpen       1    5    0 k(1,-B)       00 
   2 OpenRead         0   11    0 3             00 root=11 iDb=0; rins
   3 Explain          3    0    0 SCAN TABLE rins 00 
   4 Rewind           0   17    0               00 
  17 Explain         17    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  18 OpenPseudo       2   10    5               00 5 columns in r[10]
  19 SorterSort       1   26    0               00 
  26 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t1i1 WHERE (t2i1,t2i1)>(3,32) ORDER BY t2i1;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   17 0             01 usesStmtJournal=0
  26 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  27 Integer         32    4    0               00 r[4]=32
REG[4] =  i:32
  28 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 OpenRead         0    5    0 2             00 root=5 iDb=0; t1i1
   3 Explain          3    0    0 SCAN TABLE t1i1 00 
   4 Rewind           0   16    0               00 
   5 Column           0    0    2               00 r[2]=t1i1.t2i1
REG[2] =  i:1
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:1
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:0
  15 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1i1.t2i1
REG[2] =  i:2
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:2
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:0
  15 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1i1.t2i1
REG[2] =  i:3
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:3
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
   8 Column           0    0    2               00 r[2]=t1i1.t2i1
REG[2] =  i:3
   9 Gt               4    1    2 (BINARY)      61 r[1] = (r[2]>r[4])
REG[4] =  i:32
REG[2] =  i:3
REG[1] =  i:0
  10 IfNot            1   15    1               00 
REG[1] =  i:0
  15 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1i1.t2i1
REG[2] =  i:4
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:4
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    1    6               00 r[6]=t1i1.t0
REG[6] =  i:44
  12 Column           0    0    5               00 r[5]=t1i1.t2i1
REG[5] =  i:4
  13 MakeRecord       5    2    8               00 r[8]=mkrec(r[5..6])
REG[8] =  s5[030101042C....,]
  14 SorterInsert     1    8    5 2             00 key=r[8]
REG[8] =  s5[030101042C....,]
  15 Next             0    5    0               01 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    9    4               00 4 columns in r[9]
  18 SorterSort       1   24    0               00 
  19 SorterData       1    9    2               00 r[9]=data
  20 Column           2    1    7               00 r[7]=t0
REG[7] =  i:44
  21 Column           2    0    6               00 r[6]=t2i1
REG[6] =  i:4
  22 ResultRow        6    2    0               00 output=r[6..7]
REG[6] =  i:4
REG[7] =  i:44
  23 SorterNext       1   19    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t1abd WHERE (m,t3)>(3,33) ORDER BY m;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   17 0             01 usesStmtJournal=0
  26 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  27 Integer         33    4    0               00 r[4]=33
REG[4] =  i:33
  28 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 OpenRead         0   10    0 2             00 root=10 iDb=0; t1abd
   3 Explain          3    0    0 SCAN TABLE t1abd 00 
   4 Rewind           0   16    0               00 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    9    4               00 4 columns in r[9]
  18 SorterSort       1   24    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t1abd WHERE (t3,m)>=(3,33) ORDER BY t3;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0   17 0             01 usesStmtJournal=0
  18 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  19 Integer         33    4    0               00 r[4]=33
REG[4] =  i:33
  20 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 OpenRead         0   10    0 2             00 root=10 iDb=0; t1abd
   3 Explain          3    0    0 SEARCH TABLE t1abd USING INTEGER PRIMARY KEY (rowid>?) 00 
   4 Integer          3    1    0               00 r[1]=3
REG[1] =  i:3
   5 SeekGE           0   16    1               00 key=r[1]; pk
REG[1] =  i:3
  16 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t1abd WHERE (m,t3)>=(3,34) ORDER BY m;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   17 0             01 usesStmtJournal=0
  26 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  27 Integer         34    4    0               00 r[4]=34
REG[4] =  i:34
  28 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 OpenRead         0   10    0 2             00 root=10 iDb=0; t1abd
   3 Explain          3    0    0 SCAN TABLE t1abd 00 
   4 Rewind           0   16    0               00 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    9    4               00 4 columns in r[9]
  18 SorterSort       1   24    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t1 WHERE (a,a)<(3,33) ORDER BY a DESC;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   17 0             01 usesStmtJournal=0
  24 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  25 Integer         33    4    0               00 r[4]=33
REG[4] =  i:33
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,-B)       00 
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   15    0               00 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t1i1 WHERE (t0,t2i1)<=(3,32) ORDER BY t0 DESC;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   17 0             01 usesStmtJournal=0
  26 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  27 Integer         32    4    0               00 r[4]=32
REG[4] =  i:32
  28 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,-B)       00 
   2 OpenRead         0    5    0 2             00 root=5 iDb=0; t1i1
   3 Explain          3    0    0 SCAN TABLE t1i1 00 
   4 Rewind           0   16    0               00 
   5 Column           0    1    2               00 r[2]=t1i1.t0
REG[2] =  i:11
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:11
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:0
  15 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=t1i1.t0
REG[2] =  i:22
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:22
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:0
  15 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=t1i1.t0
REG[2] =  i:33
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:33
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:0
  15 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=t1i1.t0
REG[2] =  i:44
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:44
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:0
  15 Next             0    5    0               01 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    9    4               00 4 columns in r[9]
  18 SorterSort       1   24    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM c0 WHERE (0,0)<(c1,c1) ORDER BY c1;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   17 0             01 usesStmtJournal=0
  24 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  25 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0    7    0 1             00 root=7 iDb=0; c0
   3 Explain          3    0    0 SCAN TABLE c0 00 
   4 Rewind           0   15    0               00 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    7    3               00 3 columns in r[7]
  17 SorterSort       1   22    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM b WHERE (0,0)<=(c,c) ORDER BY c;]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      0    0   17 0             01 usesStmtJournal=0
  19 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
  20 Goto             0    1    0               00 
   1 Noop             1    3    0               00 
   2 OpenRead         2    6    0 k(6,,,,,,)    00 root=6 iDb=0; x
   3 Explain          3    0    0 SEARCH TABLE b USING COVERING INDEX x ((c,c)>(?,?)) 00 
   4 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   5 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   6 IsNull           1   17    0               00 if r[1]==NULL goto 17
REG[1] =  i:0
   7 SeekGE           2   17    1 2             00 key=r[1..2]
REG[1] =  i:0
   8 Column           2    0    4               00 r[4]=b.c
REG[4] =  i:1
   9 Gt               5    3    4 (BINARY)      61 r[3] = (r[4]>r[5])
REG[5] =  i:0
REG[4] =  i:1
REG[3] =  i:1
  10 ElseNotEq        0   13    0               00 
  13 IfNot            3   16    1               00 
REG[3] =  i:1
  14 Column           2    0    6               00 r[6]=b.c
REG[6] =  i:1
  15 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:1
  16 Next             2    8    0               00 
   8 Column           2    0    4               00 r[4]=b.c
REG[4] =   s1[X](8)
   9 Gt               5    3    4 (BINARY)      61 r[3] = (r[4]>r[5])
REG[5] =  i:0
REG[4] =   s1[X](8)
REG[3] =  i:1
  10 ElseNotEq        0   13    0               00 
  13 IfNot            3   16    1               00 
REG[3] =  i:1
  14 Column           2    0    6               00 r[6]=b.c
REG[6] =   s1[X](8)
  15 ResultRow        6    1    0               00 output=r[6]
REG[6] =   s1[X](8)
  16 Next             2    8    0               00 
  17 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t1 WHERE (5,0)>(a,a) ORDER BY a DESC;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   17 0             01 usesStmtJournal=0
  24 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
  25 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,-B)       00 
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   15    0               00 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM v1 WHERE (5,0)>=(xyz,xyz) ORDER BY xyz DESC;]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      0    0   17 0             01 usesStmtJournal=0
  19 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
  20 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  21 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    4    0 3             00 root=4 iDb=0; v1
   3 Explain          3    0    0 SEARCH TABLE v1 USING INTEGER PRIMARY KEY (rowid<?) 00 
   4 Integer          5    1    0               00 r[1]=5
REG[1] =  i:5
   5 SeekLE           0   17    1               00 key=r[1]; pk
REG[1] =  i:5
   6 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:5
   7 Lt               3    1    2               64 r[1] = (r[2]<r[3])
REG[3] =  i:5
REG[2] =  i:5
REG[1] =  i:0
   8 ElseNotEq        0   11    0               00 
   9 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:5
  10 Le               4    1    2               64 r[1] = (r[2]<=r[4])
REG[4] =  i:0
REG[2] =  i:5
REG[1] =  i:0
  11 IfNot            1   16    1               00 
REG[1] =  i:0
  16 Prev             0    6    0               00 
   6 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:3
   7 Lt               3    1    2               64 r[1] = (r[2]<r[3])
REG[3] =  i:5
REG[2] =  i:3
REG[1] =  i:1
   8 ElseNotEq        0   11    0               00 
  11 IfNot            1   16    1               00 
REG[1] =  i:1
  12 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:3
  13 Column           0    1    6               00 r[6]=v1.tt1
REG[6] =  i:3
  14 Column           0    2    7               00 r[7]=v1.tr1
REG[7] =  i:3
  15 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =  i:3
REG[6] =  i:3
REG[7] =  i:3
  16 Prev             0    6    0               00 
   6 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   7 Lt               3    1    2               64 r[1] = (r[2]<r[3])
REG[3] =  i:5
REG[2] =  i:1
REG[1] =  i:1
   8 ElseNotEq        0   11    0               00 
  11 IfNot            1   16    1               00 
REG[1] =  i:1
  12 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:1
  13 Column           0    1    6               00 r[6]=v1.tt1
REG[6] =  i:1
  14 Column           0    2    7               00 r[7]=v1.tr1
REG[7] =  i:1
  15 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =  i:1
REG[6] =  i:1
REG[7] =  i:1
  16 Prev             0    6    0               00 
  17 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t1i1 WHERE (3,0)<(t2i1,t2i1) ORDER BY t2i1;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   17 0             01 usesStmtJournal=0
  26 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  27 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  28 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 OpenRead         0    5    0 2             00 root=5 iDb=0; t1i1
   3 Explain          3    0    0 SCAN TABLE t1i1 00 
   4 Rewind           0   16    0               00 
   5 Column           0    0    2               00 r[2]=t1i1.t2i1
REG[2] =  i:1
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:1
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:0
  15 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1i1.t2i1
REG[2] =  i:2
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:2
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:0
  15 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1i1.t2i1
REG[2] =  i:3
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:3
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
   8 Column           0    0    2               00 r[2]=t1i1.t2i1
REG[2] =  i:3
   9 Gt               4    1    2 (BINARY)      61 r[1] = (r[2]>r[4])
REG[4] =  i:0
REG[2] =  i:3
REG[1] =  i:1
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    1    6               00 r[6]=t1i1.t0
REG[6] =  i:33
  12 Column           0    0    5               00 r[5]=t1i1.t2i1
REG[5] =  i:3
  13 MakeRecord       5    2    8               00 r[8]=mkrec(r[5..6])
REG[8] =  s5[0301010321....!]
  14 SorterInsert     1    8    5 2             00 key=r[8]
REG[8] =  s5[0301010321....!]
  15 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1i1.t2i1
REG[2] =  i:4
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:4
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    1    6               00 r[6]=t1i1.t0
REG[6] =  i:44
  12 Column           0    0    5               00 r[5]=t1i1.t2i1
REG[5] =  i:4
  13 MakeRecord       5    2    8               00 r[8]=mkrec(r[5..6])
REG[8] =  s5[030101042C....,]
  14 SorterInsert     1    8    5 2             00 key=r[8]
REG[8] =  s5[030101042C....,]
  15 Next             0    5    0               01 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    9    4               00 4 columns in r[9]
  18 SorterSort       1   24    0               00 
  19 SorterData       1    9    2               00 r[9]=data
  20 Column           2    1    7               00 r[7]=t0
REG[7] =  i:33
  21 Column           2    0    6               00 r[6]=t2i1
REG[6] =  i:3
  22 ResultRow        6    2    0               00 output=r[6..7]
REG[6] =  i:3
REG[7] =  i:33
  23 SorterNext       1   19    0               00 
  19 SorterData       1    9    2               00 r[9]=data
  20 Column           2    1    7               00 r[7]=t0
REG[7] =  i:44
  21 Column           2    0    6               00 r[6]=t2i1
REG[6] =  i:4
  22 ResultRow        6    2    0               00 output=r[6..7]
REG[6] =  i:4
REG[7] =  i:44
  23 SorterNext       1   19    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t1i1 WHERE (3,0)<=(t0,t0) ORDER BY t0;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   17 0             01 usesStmtJournal=0
  26 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  27 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  28 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 OpenRead         0    5    0 2             00 root=5 iDb=0; t1i1
   3 Explain          3    0    0 SCAN TABLE t1i1 00 
   4 Rewind           0   16    0               00 
   5 Column           0    1    2               00 r[2]=t1i1.t0
REG[2] =  i:11
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:11
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    0    6               00 r[6]=t1i1.t2i1
REG[6] =  i:1
  12 Column           0    1    5               00 r[5]=t1i1.t0
REG[5] =  i:11
  13 MakeRecord       5    2    8               00 r[8]=mkrec(r[5..6])
REG[8] =  s4[0301090B....]
  14 SorterInsert     1    8    5 2             00 key=r[8]
REG[8] =  s4[0301090B....]
  15 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=t1i1.t0
REG[2] =  i:22
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:22
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    0    6               00 r[6]=t1i1.t2i1
REG[6] =  i:2
  12 Column           0    1    5               00 r[5]=t1i1.t0
REG[5] =  i:22
  13 MakeRecord       5    2    8               00 r[8]=mkrec(r[5..6])
REG[8] =  s5[0301011602.....]
  14 SorterInsert     1    8    5 2             00 key=r[8]
REG[8] =  s5[0301011602.....]
  15 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=t1i1.t0
REG[2] =  i:33
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:33
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    0    6               00 r[6]=t1i1.t2i1
REG[6] =  i:3
  12 Column           0    1    5               00 r[5]=t1i1.t0
REG[5] =  i:33
  13 MakeRecord       5    2    8               00 r[8]=mkrec(r[5..6])
REG[8] =  s5[0301012103...!.]
  14 SorterInsert     1    8    5 2             00 key=r[8]
REG[8] =  s5[0301012103...!.]
  15 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=t1i1.t0
REG[2] =  i:44
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:44
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    0    6               00 r[6]=t1i1.t2i1
REG[6] =  i:4
  12 Column           0    1    5               00 r[5]=t1i1.t0
REG[5] =  i:44
  13 MakeRecord       5    2    8               00 r[8]=mkrec(r[5..6])
REG[8] =  s5[0301012C04...,.]
  14 SorterInsert     1    8    5 2             00 key=r[8]
REG[8] =  s5[0301012C04...,.]
  15 Next             0    5    0               01 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    9    4               00 4 columns in r[9]
  18 SorterSort       1   24    0               00 
  19 SorterData       1    9    2               00 r[9]=data
  20 Column           2    0    7               00 r[7]=t0
REG[7] =  i:11
  21 Column           2    1    6               00 r[6]=t2i1
REG[6] =  i:1
  22 ResultRow        6    2    0               00 output=r[6..7]
REG[6] =  i:1
REG[7] =  i:11
  23 SorterNext       1   19    0               00 
  19 SorterData       1    9    2               00 r[9]=data
  20 Column           2    0    7               00 r[7]=t0
REG[7] =  i:22
  21 Column           2    1    6               00 r[6]=t2i1
REG[6] =  i:2
  22 ResultRow        6    2    0               00 output=r[6..7]
REG[6] =  i:2
REG[7] =  i:22
  23 SorterNext       1   19    0               00 
  19 SorterData       1    9    2               00 r[9]=data
  20 Column           2    0    7               00 r[7]=t0
REG[7] =  i:33
  21 Column           2    1    6               00 r[6]=t2i1
REG[6] =  i:3
  22 ResultRow        6    2    0               00 output=r[6..7]
REG[6] =  i:3
REG[7] =  i:33
  23 SorterNext       1   19    0               00 
  19 SorterData       1    9    2               00 r[9]=data
  20 Column           2    0    7               00 r[7]=t0
REG[7] =  i:44
  21 Column           2    1    6               00 r[6]=t2i1
REG[6] =  i:4
  22 ResultRow        6    2    0               00 output=r[6..7]
REG[6] =  i:4
REG[7] =  i:44
  23 SorterNext       1   19    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM b WHERE (3,0)>(c,c) ORDER BY c DESC;]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      0    0   17 0             01 usesStmtJournal=0
  21 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  22 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  23 Goto             0    1    0               00 
   1 Noop             1    3    0               00 
   2 OpenRead         2    6    0 k(6,,,,,,)    00 root=6 iDb=0; x
   3 Explain          3    0    0 SEARCH TABLE b USING COVERING INDEX x ((c,c)<(?,?)) 00 
   4 Integer          3    1    0               00 r[1]=3
REG[1] =  i:3
   5 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   6 IsNull           1   19    0               00 if r[1]==NULL goto 19
REG[1] =  i:3
   7 SeekLE           2   19    1 2             00 key=r[1..2]
REG[1] =  i:3
   8 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   9 IdxLE            2   19    1 1             00 key=r[1]
REG[1] =  NULL
  10 Column           2    0    4               00 r[4]=b.c
REG[4] =  i:1
  11 Lt               5    3    4 (BINARY)      61 r[3] = (r[4]<r[5])
REG[5] =  i:3
REG[4] =  i:1
REG[3] =  i:1
  12 ElseNotEq        0   15    0               00 
  15 IfNot            3   18    1               00 
REG[3] =  i:1
  16 Column           2    0    7               00 r[7]=b.c
REG[7] =  i:1
  17 ResultRow        7    1    0               00 output=r[7]
REG[7] =  i:1
  18 Prev             2    9    0               00 
  19 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t1i1 WHERE (3,33)<(t2i1,t2i1) ORDER BY t2i1;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   17 0             01 usesStmtJournal=0
  26 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  27 Integer         33    4    0               00 r[4]=33
REG[4] =  i:33
  28 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 OpenRead         0    5    0 2             00 root=5 iDb=0; t1i1
   3 Explain          3    0    0 SCAN TABLE t1i1 00 
   4 Rewind           0   16    0               00 
   5 Column           0    0    2               00 r[2]=t1i1.t2i1
REG[2] =  i:1
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:1
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:0
  15 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1i1.t2i1
REG[2] =  i:2
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:2
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:0
  15 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1i1.t2i1
REG[2] =  i:3
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:3
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
   8 Column           0    0    2               00 r[2]=t1i1.t2i1
REG[2] =  i:3
   9 Gt               4    1    2 (BINARY)      61 r[1] = (r[2]>r[4])
REG[4] =  i:33
REG[2] =  i:3
REG[1] =  i:0
  10 IfNot            1   15    1               00 
REG[1] =  i:0
  15 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1i1.t2i1
REG[2] =  i:4
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:4
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    1    6               00 r[6]=t1i1.t0
REG[6] =  i:44
  12 Column           0    0    5               00 r[5]=t1i1.t2i1
REG[5] =  i:4
  13 MakeRecord       5    2    8               00 r[8]=mkrec(r[5..6])
REG[8] =  s5[030101042C....,]
  14 SorterInsert     1    8    5 2             00 key=r[8]
REG[8] =  s5[030101042C....,]
  15 Next             0    5    0               01 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    9    4               00 4 columns in r[9]
  18 SorterSort       1   24    0               00 
  19 SorterData       1    9    2               00 r[9]=data
  20 Column           2    1    7               00 r[7]=t0
REG[7] =  i:44
  21 Column           2    0    6               00 r[6]=t2i1
REG[6] =  i:4
  22 ResultRow        6    2    0               00 output=r[6..7]
REG[6] =  i:4
REG[7] =  i:44
  23 SorterNext       1   19    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t1i1 WHERE (3,34)<=(t2i1,t0) ORDER BY t2i1;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   17 0             01 usesStmtJournal=0
  26 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  27 Integer         34    4    0               00 r[4]=34
REG[4] =  i:34
  28 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 OpenRead         0    5    0 2             00 root=5 iDb=0; t1i1
   3 Explain          3    0    0 SCAN TABLE t1i1 00 
   4 Rewind           0   16    0               00 
   5 Column           0    0    2               00 r[2]=t1i1.t2i1
REG[2] =  i:1
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:1
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:0
  15 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1i1.t2i1
REG[2] =  i:2
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:2
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:0
  15 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1i1.t2i1
REG[2] =  i:3
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:3
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
   8 Column           0    1    2               00 r[2]=t1i1.t0
REG[2] =  i:33
   9 Ge               4    1    2 (BINARY)      61 r[1] = (r[2]>=r[4])
REG[4] =  i:34
REG[2] =  i:33
REG[1] =  i:0
  10 IfNot            1   15    1               00 
REG[1] =  i:0
  15 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1i1.t2i1
REG[2] =  i:4
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:4
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    1    6               00 r[6]=t1i1.t0
REG[6] =  i:44
  12 Column           0    0    5               00 r[5]=t1i1.t2i1
REG[5] =  i:4
  13 MakeRecord       5    2    8               00 r[8]=mkrec(r[5..6])
REG[8] =  s5[030101042C....,]
  14 SorterInsert     1    8    5 2             00 key=r[8]
REG[8] =  s5[030101042C....,]
  15 Next             0    5    0               01 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    9    4               00 4 columns in r[9]
  18 SorterSort       1   24    0               00 
  19 SorterData       1    9    2               00 r[9]=data
  20 Column           2    1    7               00 r[7]=t0
REG[7] =  i:44
  21 Column           2    0    6               00 r[6]=t2i1
REG[6] =  i:4
  22 ResultRow        6    2    0               00 output=r[6..7]
REG[6] =  i:4
REG[7] =  i:44
  23 SorterNext       1   19    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t1abd WHERE (3,34)>(t3,t3) ORDER BY t3 DESC;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0   17 0             01 usesStmtJournal=0
  18 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  19 Integer         34    4    0               00 r[4]=34
REG[4] =  i:34
  20 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 OpenRead         0   10    0 2             00 root=10 iDb=0; t1abd
   3 Explain          3    0    0 SEARCH TABLE t1abd USING INTEGER PRIMARY KEY (rowid<?) 00 
   4 Integer          3    1    0               00 r[1]=3
REG[1] =  i:3
   5 SeekLE           0   16    1               00 key=r[1]; pk
REG[1] =  i:3
  16 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM c0 WHERE (3,33)>(c1,c1) ORDER BY c1 DESC;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   17 0             01 usesStmtJournal=0
  24 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  25 Integer         33    4    0               00 r[4]=33
REG[4] =  i:33
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,-B)       00 
   2 OpenRead         0    7    0 1             00 root=7 iDb=0; c0
   3 Explain          3    0    0 SCAN TABLE c0 00 
   4 Rewind           0   15    0               00 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM b WHERE (3,33)>=(c,c) ORDER BY c DESC;]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      0    0   17 0             01 usesStmtJournal=0
  21 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  22 Integer         33    6    0               00 r[6]=33
REG[6] =  i:33
  23 Goto             0    1    0               00 
   1 Noop             1    3    0               00 
   2 OpenRead         2    6    0 k(6,,,,,,)    00 root=6 iDb=0; x
   3 Explain          3    0    0 SEARCH TABLE b USING COVERING INDEX x ((c,c)<(?,?)) 00 
   4 Integer          3    1    0               00 r[1]=3
REG[1] =  i:3
   5 Integer         33    2    0               00 r[2]=33
REG[2] =  i:33
   6 IsNull           1   19    0               00 if r[1]==NULL goto 19
REG[1] =  i:3
   7 SeekLE           2   19    1 2             00 key=r[1..2]
REG[1] =  i:3
   8 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   9 IdxLE            2   19    1 1             00 key=r[1]
REG[1] =  NULL
  10 Column           2    0    4               00 r[4]=b.c
REG[4] =  i:1
  11 Lt               5    3    4 (BINARY)      61 r[3] = (r[4]<r[5])
REG[5] =  i:3
REG[4] =  i:1
REG[3] =  i:1
  12 ElseNotEq        0   15    0               00 
  15 IfNot            3   18    1               00 
REG[3] =  i:1
  16 Column           2    0    7               00 r[7]=b.c
REG[7] =  i:1
  17 ResultRow        7    1    0               00 output=r[7]
REG[7] =  i:1
  18 Prev             2    9    0               00 
  19 Halt             0    0    0               00 
SQL: [;
;SELECT 1 WHERE (2,(2,0)) IS (2,(2,0));]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Integer          2    1    0               00 r[1]=2
REG[1] =  i:2
   9 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
  10 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               1    7    1               C1 if r[1]!=r[1] goto 7
REG[1] =  i:2
REG[1] =  i:2
   3 Ne               1    7    1               C1 if r[1]!=r[1] goto 7
REG[1] =  i:2
REG[1] =  i:2
   4 Ne               2    7    2               C1 if r[2]!=r[2] goto 7
REG[2] =  i:0
REG[2] =  i:0
   5 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   6 ResultRow        3    1    0               00 output=r[3]
REG[3] =  i:1
   7 Halt             0    0    0               00 
SQL: [;CREATE TABLE i1(b1,b1x,PRIMARY KEY(b1x,b1x));]
VDBE Trace:
   0 Init             0   39    0               00 Start at 39
  39 Transaction      0    1   17 0             01 usesStmtJournal=0
  40 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:19
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:19
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:19
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      0    4    2               00 r[4]=root iDb=0 flags=2
REG[4] =  i:20
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:20
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_i1_1 00 r[7]='sqlite_autoindex_i1_1'
REG[7] =   t21[sqlite_autoinde](8)
  17 String8          0    8    0 i1            00 r[8]='i1'
REG[8] =   t2[i1](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:20
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s35[061737110100696E64657873716C6974..7...indexsqlit]
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  s35[061737110100696E64657873716C6974..7...indexsqlit]
REG[5] =  i:20
  22 Close            0    0    0               00 
  23 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  24 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  25 Explain         25    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  26 SeekRowid        2   28    1               00 intkey=r[1]
REG[1] =  i:19
  27 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:19
  28 IsNull          13   36    0               00 if r[13]==NULL goto 36
REG[13] =  i:19
  29 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  30 String8          0   15    0 i1            00 r[15]='i1'
REG[15] =   t2[i1](8)
  31 String8          0   16    0 i1            00 r[16]='i1'
REG[16] =   t2[i1](8)
  32 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:19
  33 String8          0   18    0 CREATE TABLE i1(b1,b1x,PRIMARY KEY(b1x,b1x)) 00 r[18]='CREATE TABLE i1(b1,b1x,PRIMARY KEY(b1x,b1x))'
REG[18] =   t44[CREATE TABLE i1](8)
  34 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s60[0617111101657461626C656931693113.....etablei1i1.]
  35 Insert           2   19   13               00 intkey=r[13] data=r[19]
REG[19] =  s60[0617111101657461626C656931693113.....etablei1i1.]
REG[13] =  i:19
  36 SetCookie        0    1   18               00 
  37 ParseSchema      0    0    0 tbl_name='i1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   18 0             00 usesStmtJournal=0
  16 String8          0    2    0 i1            00 r[2]='i1'
REG[2] =   t2[i1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s2[v1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t1i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s4[t1i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[c0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s2[c0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s2[v2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s2[v2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[t1abd](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s5[t1abd](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[rins](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s4[rins](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[aa](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s2[aa](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[cc](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s2[cc](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[zz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s2[zz](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[dual](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s4[dual](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[dual](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s4[dual](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t5](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s2[t5](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[t](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s1[t](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s2[i1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[i1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:19
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s44[CREATE TABLE i1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[i1](8)
REG[5] =  i:19
REG[6] =   s44[CREATE TABLE i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s2[i1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s21[sqlite_autoinde](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:20
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =  NULL
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s21[sqlite_autoinde](8)
REG[5] =  i:20
REG[6] =  NULL
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  38 Halt             0    0    0               00 
SQL: [;SELECT * FROM v2 WHERE (d,d) IN (VALUES(1,2));]
VDBE Trace:
   0 Init             0   42    0               00 Start at 42
  42 Transaction      0    0   18 0             01 usesStmtJournal=0
  43 Goto             0    1    0               00 
   1 OpenRead         0    8    0 2             00 root=8 iDb=0; v2
   2 OpenRead         1    9    0 k(2,,)        02 root=9 iDb=0; sqlite_autoindex_v2_1
   3 Explain          3    0    0 SEARCH TABLE v2 USING INDEX sqlite_autoindex_v2_1 (d=?) 00 
   4 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   5 Once             0   12    0               00 
   6 OpenEphemeral    2    1    0 k(1,B)        00 nColumn=1; Result of SELECT 1
   7 Explain          7    0    0 LIST SUBQUERY 1 00 
   8 Explain          8    7    0 SCAN CONSTANT ROW 00 
   9 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  10 MakeRecord       3    1    4 A             00 r[4]=mkrec(r[3])
REG[4] =  s2[0209..]
  11 IdxInsert        2    4    3 1             00 key=r[4]
REG[4] =  s2[0209..]
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Rewind           2   41    0               00 
  14 Column           2    0    1               00 r[1]=
REG[1] =  i:1
  15 IsNull           1   40    0               00 if r[1]==NULL goto 40
REG[1] =  i:1
  16 SeekGE           1   40    1 1             00 key=r[1]
REG[1] =  i:1
  40 Next             2   14    0               00 
  41 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f250950a859 in __GI_abort () at abort.c:79
#2  0x00007f250950a729 in __assert_fail_base (fmt=0x7f25096a0588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x2122b4 "pIn->nSdst==1 || pParse->nErr>0", file=0x22873d "sqlite3.c", line=127594, 
    function=<optimized out>) at assert.c:92
#3  0x00007f250951bfd6 in __GI___assert_fail (assertion=0x2122b4 "pIn->nSdst==1 || pParse->nErr>0", file=0x22873d "sqlite3.c", line=127594, 
    function=0x213784 "int generateOutputSubroutine(Parse *, Select *, SelectDest *, SelectDest *, int, int, KeyInfo *, int)") at assert.c:101
#4  0x00000000003b5d8b in generateOutputSubroutine (pParse=0x7ffea80add70, p=0x14b0f40, pIn=0x7ffea80ac3f0, pDest=0x7ffea80ac948, regReturn=15, regPrev=9, pKeyInfo=0x14bcf70, iBreak=-7) at sqlite3.c:127594
#5  0x00000000003b4e37 in multiSelectOrderBy (pParse=0x7ffea80add70, p=0x14b0f40, pDest=0x7ffea80ac948) at sqlite3.c:127921
#6  0x00000000003a3d1c in multiSelect (pParse=0x7ffea80add70, p=0x14b0f40, pDest=0x7ffea80ac948) at sqlite3.c:127207
#7  0x00000000002fccf5 in sqlite3Select (pParse=0x7ffea80add70, p=0x14b0f40, pDest=0x7ffea80ac948) at sqlite3.c:130384
#8  0x000000000034f659 in sqlite3CodeSubselect (pParse=0x7ffea80add70, pExpr=0x14b7660) at sqlite3.c:99820
#9  0x0000000000350b1c in exprCodeVector (pParse=0x7ffea80add70, p=0x14b7660, piFreeable=0x7ffea80aca0c) at sqlite3.c:100296
#10 0x000000000034fbdb in sqlite3ExprCodeIN (pParse=0x7ffea80add70, pExpr=0x14ae510, destIfFalse=-3, destIfNull=-4) at sqlite3.c:99952
#11 0x000000000034be9e in sqlite3ExprCodeTarget (pParse=0x7ffea80add70, pExpr=0x14ae510, target=1) at sqlite3.c:100792
#12 0x000000000034e9ee in sqlite3ExprCodeExprList (pParse=0x7ffea80add70, pList=0x14b63a0, target=1, srcReg=0, flags=1 '\001') at sqlite3.c:101202
#13 0x00000000003addca in innerLoopLoadRow (pParse=0x7ffea80add70, pSelect=0x14be6e0, pInfo=0x7ffea80acdb0) at sqlite3.c:125172
#14 0x00000000003a92ea in selectInnerLoop (pParse=0x7ffea80add70, p=0x14be6e0, srcTab=-1, pSort=0x0, pDistinct=0x7ffea80ad050, pDest=0x7ffea80ad160, iContinue=-2, iBreak=-2) at sqlite3.c:125624
#15 0x00000000002fe191 in sqlite3Select (pParse=0x7ffea80add70, p=0x14be6e0, pDest=0x7ffea80ad160) at sqlite3.c:130743
#16 0x00000000002ecaa8 in yy_reduce (yypParser=0x7ffea80ad390, yyruleno=79, yyLookahead=1, yyLookaheadToken=..., pParse=0x7ffea80add70) at sqlite3.c:151581
#17 0x00000000002e92f8 in sqlite3Parser (yyp=0x7ffea80ad390, yymajor=1, yyminor=...) at sqlite3.c:152877
#18 0x00000000002a68b3 in sqlite3RunParser (pParse=0x7ffea80add70, 
    zSql=0x14ad290 ";;SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1) IN (SELECT 5,6);;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1 DESC) IN (SELECT 3,4);;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1 DESC) IN (SELECT"..., pzErrMsg=0x7ffea80adf50) at sqlite3.c:154013
#19 0x00000000002a1683 in sqlite3Prepare (db=0x149a2b0, 
    zSql=0x14a1d10 ";SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1) IN (SELECT 3,4);;SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1) IN (SELECT 5,6);;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1 DESC) IN (SELECT 3,4);"..., nBytes=925, prepFlags=128, pReprepare=0x0, ppStmt=0x7ffea80ae088, pzTail=0x7ffea80ae070) at sqlite3.c:124303
#20 0x00000000002a0d4e in sqlite3LockAndPrepare (db=0x149a2b0, 
    zSql=0x14a1d10 ";SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1) IN (SELECT 3,4);;SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1) IN (SELECT 5,6);;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1 DESC) IN (SELECT 3,4);"..., nBytes=925, prepFlags=128, pOld=0x0, ppStmt=0x7ffea80ae088, pzTail=0x7ffea80ae070) at sqlite3.c:124403
#21 0x000000000029247f in sqlite3_prepare_v2 (db=0x149a2b0, 
    zSql=0x14a1d10 ";SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1) IN (SELECT 3,4);;SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1) IN (SELECT 5,6);;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1 DESC) IN (SELECT 3,4);"..., nBytes=925, ppStmt=0x7ffea80ae088, pzTail=0x7ffea80ae070) at sqlite3.c:124487
#22 0x0000000000256bd0 in main (argc=1, argv=0x7ffea80ae238) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 54663] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
