GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000589,sig:06,src:021042+012749,time:42271411,execs:13702402,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;SELECT a, a FROM t1
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    2 0             01 usesStmtJournal=0
  10 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [CREATE INDEX c ON t1(a)
  
;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    1    2 0             01 usesStmtJournal=0
  34 Goto             0    1    0               00 
   1 Noop             0   32    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:4
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:3
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t10[i.n.d.e.x.](16LE)
   6 String8          0    4    0 c             00 r[4]='c'
REG[4] =   t2[c.](16LE)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t4[t.1.](16LE)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:4
   9 String8          0    7    0 CREATE INDEX c ON t1(a)
  
 00 r[7]='CREATE INDEX c ON t1(a)
  
'
REG[7] =   t54[C.R.E.A.T.E. .I](16LE)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s77[06211115017969006E00640065007800.!...yi.n.d.e.x.]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s77[06211115017969006E00640065007800.!...yi.n.d.e.x.]
REG[2] =  i:3
  12 SorterOpen       3    0    1 k(2,,)        00 
  13 OpenRead         1    2    0 1             00 root=2 iDb=0; t1
  14 Rewind           1   20    0               00 
  20 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  21 SorterSort       3   26    0               00 
  26 Close            1    0    0               00 
  27 Close            2    0    0               00 
  28 Close            3    0    0               00 
  29 SetCookie        0    1    3               00 
  30 ParseSchema      0    0    0 name='c' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 0             00 usesStmtJournal=0
  16 String8          0    2    0 c             00 r[2]='c'
REG[2] =   t2[c.](16LE)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t10[i.n.d.e.x.](16LE)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t.1.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c.](16LE)
REG[1] =   s4[t.1.](16LE)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[b.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c.](16LE)
REG[1] =   s2[b.](16LE)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[c.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c.](16LE)
REG[1] =   s2[c.](16LE)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s10[i.n.d.e.x.](16LE)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t10[i.n.d.e.x.](16LE)
REG[1] =   s10[i.n.d.e.x.](16LE)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[c.](16LE)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s54[C.R.E.A.T.E. .I](16LE)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[c.](16LE)
REG[5] =  i:4
REG[6] =   s54[C.R.E.A.T.E. .I](16LE)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  31 Expire           0    1    0               00 
  32 Halt             0    0    0               00 
SQL: [;INSERT INTO t1(a,a,a) VALUES('one','abcdefghijklmnopqrstuvwxyz0123','hi');]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    1    3 0             01 usesStmtJournal=0
  24 Integer          0   10    0               00 r[10]=0
REG[10] =  i:0
  25 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 1             00 root=2 iDb=0; t1
   2 OpenWrite        1    4    0 k(2,,)        00 root=4 iDb=0; c
   3 OpenWrite        2    3    0 k(2,,)        00 root=3 iDb=0; b
   4 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   5 String8          0    2    0 one           00 r[2]='one'
REG[2] =   t6[o.n.e.](16LE)
   6 Affinity         2    1    0 B             00 affinity(r[2])
   7 Noop             0    0    0               00 uniqueness check for c
   8 SCopy            2    4    0               00 r[4]=r[2]; a
REG[4] =   t6[o.n.e.](16LE)
   9 IntCopy          1    5    0               00 r[5]=r[1]; rowid
REG[5] =  i:1
  10 MakeRecord       4    2    3               00 r[3]=mkrec(r[4..5]); for c
REG[3] =  s9[0319096F006E006500...o.n.e.]
  11 Noop             0    0    0               00 uniqueness check for b
  12 SCopy            2    9    0               00 r[9]=r[2]
REG[9] =   t6[o.n.e.](16LE)
  13 NotNull          9   15    0               00 if r[9]!=NULL goto 15
REG[9] =   t6[o.n.e.](16LE)
  15 PureFunc0        2    9    7 like(2)       02 b column 0
REG[9] =   t6[o.n.e.](16LE)
REG[10] =  i:0
REG[7] =  i:0
  16 IntCopy          1    8    0               00 r[8]=r[1]; rowid
REG[8] =  i:1
  17 MakeRecord       7    2    6               00 r[6]=mkrec(r[7..8]); for b
REG[6] =  s3[030809...]
  18 IdxInsert        1    3    4 2             10 key=r[3]
REG[3] =  s9[0319096F006E006500...o.n.e.]
  19 IdxInsert        2    6    7 2             10 key=r[6]
REG[6] =  s3[030809...]
  20 MakeRecord       2    1   11               00 r[11]=mkrec(r[2])
REG[11] =  s8[02196F006E006500..o.n.e.]
  21 Insert           0   11    1 t1            39 intkey=r[1] data=r[11]
REG[11] =  s8[02196F006E006500..o.n.e.]
REG[1] =  i:1
  22 Halt             0    0    0               00 
SQL: [UPDATE t1 SET a=a||'4'
;]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      0    1    3 0             01 usesStmtJournal=0
  39 String8          0   11    0 4             00 r[11]='4'
REG[11] =   t2[4.](16LE)
  40 Integer          0   13    0               00 r[13]=0
REG[13] =  i:0
  41 Integer          0   17    0               00 r[17]=0
REG[17] =  i:0
  42 Goto             0    1    0               00 
   1 Null             0    7    8               00 r[7..8]=NULL
REG[7] =  NULL
   2 OpenWrite        0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   37    0               00 
   5 Rowid            0    8    0               00 r[8]=rowid
REG[8] =  i:1
   6 Once             0    9    0               00 
   7 OpenWrite        1    4    0 k(2,,)        00 root=4 iDb=0; c
   8 OpenWrite        2    3    0 k(2,,)        00 root=3 iDb=0; b
   9 IsNull           8   37    0               00 if r[8]==NULL goto 37
REG[8] =  i:1
  10 Column           0    0   10               00 r[10]=t1.a
REG[10] =   s6[o.n.e.](16LE)
  11 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   t2[4.](16LE)
REG[10] =   s6[o.n.e.](16LE)
REG[9] =   s8[o.n.e.4.](16LE)
  12 Affinity         9    1    0 B             00 affinity(r[9])
  13 Noop             0    0    0               00 uniqueness check for c
  14 SCopy            9    2    0               00 r[2]=r[9]; a
REG[2] =   e8[o.n.e.4.](16LE)
  15 IntCopy          8    3    0               00 r[3]=r[8]; rowid
REG[3] =  i:1
  16 MakeRecord       2    2    1               00 r[1]=mkrec(r[2..3]); for c
REG[1] =  s11[031D096F006E0065003400...o.n.e.4.]
  17 Noop             0    0    0               00 uniqueness check for b
  18 SCopy            9   12    0               00 r[12]=r[9]
REG[12] =   e8[o.n.e.4.](16LE)
  19 NotNull         12   21    0               00 if r[12]!=NULL goto 21
REG[12] =   e8[o.n.e.4.](16LE)
  21 PureFunc0        2   12    5 like(2)       02 b column 0
REG[12] =   e8[o.n.e.4.](16LE)
REG[13] =  i:0
REG[5] =  i:0
  22 IntCopy          8    6    0               00 r[6]=r[8]; rowid
REG[6] =  i:1
  23 MakeRecord       5    2    4               00 r[4]=mkrec(r[5..6]); for b
REG[4] =  s3[030809...]
  24 Column           0    0   14               00 r[14]=t1.a
REG[14] =   s6[o.n.e.](16LE)
  25 Rowid            0   15    0               00 r[15]=rowid
REG[15] =  i:1
  26 IdxDelete        1   14    2               00 key=r[14..15]
  27 Column           0    0   16               00 r[16]=t1.a
REG[16] =   s6[o.n.e.](16LE)
  28 NotNull         16   30    0               00 if r[16]!=NULL goto 30
REG[16] =   s6[o.n.e.](16LE)
  30 PureFunc0        2   16   14 like(2)       02 
REG[16] =   s6[o.n.e.](16LE)
REG[17] =  i:0
REG[14] =  i:0
  31 IdxDelete        2   14    2               00 key=r[14..15]
  32 IdxInsert        1    1    2 2             00 key=r[1]
REG[1] =  s11[031D096F006E0065003400...o.n.e.4.]
  33 IdxInsert        2    4    5 2             00 key=r[4]
REG[4] =  s3[030809...]
  34 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s10[021D6F006E0065003400..o.n.e.4.]
  35 Insert           0   10    8 t1            07 intkey=r[8] data=r[10]
REG[10] =  s10[021D6F006E0065003400..o.n.e.4.]
REG[8] =  i:1
  36 Next             0    5    0               01 
  37 Halt             0    0    0               00 
SQL: [UPDATE t1 SET a=a||'7'
;]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      0    1    3 0             01 usesStmtJournal=0
  39 String8          0   11    0 7             00 r[11]='7'
REG[11] =   t2[7.](16LE)
  40 Integer          0   13    0               00 r[13]=0
REG[13] =  i:0
  41 Integer          0   17    0               00 r[17]=0
REG[17] =  i:0
  42 Goto             0    1    0               00 
   1 Null             0    7    8               00 r[7..8]=NULL
REG[7] =  NULL
   2 OpenWrite        0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   37    0               00 
   5 Rowid            0    8    0               00 r[8]=rowid
REG[8] =  i:1
   6 Once             0    9    0               00 
   7 OpenWrite        1    4    0 k(2,,)        00 root=4 iDb=0; c
   8 OpenWrite        2    3    0 k(2,,)        00 root=3 iDb=0; b
   9 IsNull           8   37    0               00 if r[8]==NULL goto 37
REG[8] =  i:1
  10 Column           0    0   10               00 r[10]=t1.a
REG[10] =   s8[o.n.e.4.](16LE)
  11 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   t2[7.](16LE)
REG[10] =   s8[o.n.e.4.](16LE)
REG[9] =   s10[o.n.e.4.7.](16LE)
  12 Affinity         9    1    0 B             00 affinity(r[9])
  13 Noop             0    0    0               00 uniqueness check for c
  14 SCopy            9    2    0               00 r[2]=r[9]; a
REG[2] =   e10[o.n.e.4.7.](16LE)
  15 IntCopy          8    3    0               00 r[3]=r[8]; rowid
REG[3] =  i:1
  16 MakeRecord       2    2    1               00 r[1]=mkrec(r[2..3]); for c
REG[1] =  s13[0321096F006E00650034003700.!.o.n.e.4.7.]
  17 Noop             0    0    0               00 uniqueness check for b
  18 SCopy            9   12    0               00 r[12]=r[9]
REG[12] =   e10[o.n.e.4.7.](16LE)
  19 NotNull         12   21    0               00 if r[12]!=NULL goto 21
REG[12] =   e10[o.n.e.4.7.](16LE)
  21 PureFunc0        2   12    5 like(2)       02 b column 0
REG[12] =   e10[o.n.e.4.7.](16LE)
REG[13] =  i:0
REG[5] =  i:0
  22 IntCopy          8    6    0               00 r[6]=r[8]; rowid
REG[6] =  i:1
  23 MakeRecord       5    2    4               00 r[4]=mkrec(r[5..6]); for b
REG[4] =  s3[030809...]
  24 Column           0    0   14               00 r[14]=t1.a
REG[14] =   s8[o.n.e.4.](16LE)
  25 Rowid            0   15    0               00 r[15]=rowid
REG[15] =  i:1
  26 IdxDelete        1   14    2               00 key=r[14..15]
  27 Column           0    0   16               00 r[16]=t1.a
REG[16] =   s8[o.n.e.4.](16LE)
  28 NotNull         16   30    0               00 if r[16]!=NULL goto 30
REG[16] =   s8[o.n.e.4.](16LE)
  30 PureFunc0        2   16   14 like(2)       02 
REG[16] =   s8[o.n.e.4.](16LE)
REG[17] =  i:0
REG[14] =  i:0
  31 IdxDelete        2   14    2               00 key=r[14..15]
  32 IdxInsert        1    1    2 2             00 key=r[1]
REG[1] =  s13[0321096F006E00650034003700.!.o.n.e.4.7.]
  33 IdxInsert        2    4    5 2             00 key=r[4]
REG[4] =  s3[030809...]
  34 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s12[02216F006E00650034003700.!o.n.e.4.7.]
  35 Insert           0   10    8 t1            07 intkey=r[8] data=r[10]
REG[10] =  s12[02216F006E00650034003700.!o.n.e.4.7.]
REG[8] =  i:1
  36 Next             0    5    0               01 
  37 Halt             0    0    0               00 
SQL: [;INSERT INTO t1(a,a,a) VALUES('one','abcdefghijklmnopqrstuvwxyz0123','hi');]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    1    3 0             01 usesStmtJournal=0
  24 Integer          0   10    0               00 r[10]=0
REG[10] =  i:0
  25 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 1             00 root=2 iDb=0; t1
   2 OpenWrite        1    4    0 k(2,,)        00 root=4 iDb=0; c
   3 OpenWrite        2    3    0 k(2,,)        00 root=3 iDb=0; b
   4 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   5 String8          0    2    0 one           00 r[2]='one'
REG[2] =   t6[o.n.e.](16LE)
   6 Affinity         2    1    0 B             00 affinity(r[2])
   7 Noop             0    0    0               00 uniqueness check for c
   8 SCopy            2    4    0               00 r[4]=r[2]; a
REG[4] =   t6[o.n.e.](16LE)
   9 IntCopy          1    5    0               00 r[5]=r[1]; rowid
REG[5] =  i:2
  10 MakeRecord       4    2    3               00 r[3]=mkrec(r[4..5]); for c
REG[3] =  s10[0319016F006E00650002...o.n.e..]
  11 Noop             0    0    0               00 uniqueness check for b
  12 SCopy            2    9    0               00 r[9]=r[2]
REG[9] =   t6[o.n.e.](16LE)
  13 NotNull          9   15    0               00 if r[9]!=NULL goto 15
REG[9] =   t6[o.n.e.](16LE)
  15 PureFunc0        2    9    7 like(2)       02 b column 0
REG[9] =   t6[o.n.e.](16LE)
REG[10] =  i:0
REG[7] =  i:0
  16 IntCopy          1    8    0               00 r[8]=r[1]; rowid
REG[8] =  i:2
  17 MakeRecord       7    2    6               00 r[6]=mkrec(r[7..8]); for b
REG[6] =  s4[03080102....]
  18 IdxInsert        1    3    4 2             10 key=r[3]
REG[3] =  s10[0319016F006E00650002...o.n.e..]
  19 IdxInsert        2    6    7 2             10 key=r[6]
REG[6] =  s4[03080102....]
  20 MakeRecord       2    1   11               00 r[11]=mkrec(r[2])
REG[11] =  s8[02196F006E006500..o.n.e.]
  21 Insert           0   11    1 t1            39 intkey=r[1] data=r[11]
REG[11] =  s8[02196F006E006500..o.n.e.]
REG[1] =  i:2
  22 Halt             0    0    0               00 
SQL: [;SELECT a,length(a),a FROM t1;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    3 0             01 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   10    0               00 
   4 Column           0    0    1               00 r[1]=t1.a
REG[1] =   s10[o.n.e.4.7.](16LE)
   5 Column           0    0    4               40 r[4]=t1.a
REG[4] =   s10[o.n.e.4.7.](16LE)
   6 Function0        0    4    2 length(1)     01 r[2]=func(r[4])
REG[4] =   s10[o.n.e.4.7.](16LE)
REG[2] =  i:5
   7 Column           0    0    3               00 r[3]=t1.a
REG[3] =   s10[o.n.e.4.7.](16LE)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s10[o.n.e.4.7.](16LE)
REG[2] =  i:5
REG[3] =   s10[o.n.e.4.7.](16LE)
   9 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=t1.a
REG[1] =   s6[o.n.e.](16LE)
   5 Column           0    0    4               40 r[4]=t1.a
REG[4] =   s6[o.n.e.](16LE)
   6 Function         0    4    2 length(1)     01 r[2]=func(r[4])
REG[4] =   s6[o.n.e.](16LE)
REG[2] =  i:3
   7 Column           0    0    3               00 r[3]=t1.a
REG[3] =   s6[o.n.e.](16LE)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s6[o.n.e.](16LE)
REG[2] =  i:3
REG[3] =   s6[o.n.e.](16LE)
   9 Next             0    4    0               01 
  10 Halt             0    0    0               00 
SQL: [;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;UPDATE t1 SET a=a||a
;]
VDBE Trace:
   0 Init             0   39    0               00 Start at 39
  39 Transaction      0    1    3 0             01 usesStmtJournal=0
  40 Integer          0   13    0               00 r[13]=0
REG[13] =  i:0
  41 Integer          0   17    0               00 r[17]=0
REG[17] =  i:0
  42 Goto             0    1    0               00 
   1 Null             0    7    8               00 r[7..8]=NULL
REG[7] =  NULL
   2 OpenWrite        0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   38    0               00 
   5 Rowid            0    8    0               00 r[8]=rowid
REG[8] =  i:1
   6 Once             0    9    0               00 
   7 OpenWrite        1    4    0 k(2,,)        00 root=4 iDb=0; c
   8 OpenWrite        2    3    0 k(2,,)        00 root=3 iDb=0; b
   9 IsNull           8   38    0               00 if r[8]==NULL goto 38
REG[8] =  i:1
  10 Column           0    0   10               00 r[10]=t1.a
REG[10] =   s10[o.n.e.4.7.](16LE)
  11 Column           0    0   11               00 r[11]=t1.a
REG[11] =   s10[o.n.e.4.7.](16LE)
  12 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   s10[o.n.e.4.7.](16LE)
REG[10] =   s10[o.n.e.4.7.](16LE)
REG[9] =   s20[o.n.e.4.7.o.n.e](16LE)
  13 Affinity         9    1    0 B             00 affinity(r[9])
  14 Noop             0    0    0               00 uniqueness check for c
  15 SCopy            9    2    0               00 r[2]=r[9]; a
REG[2] =   e20[o.n.e.4.7.o.n.e](16LE)
  16 IntCopy          8    3    0               00 r[3]=r[8]; rowid
REG[3] =  i:1
  17 MakeRecord       2    2    1               00 r[1]=mkrec(r[2..3]); for c
REG[1] =  s23[0335096F006E006500340037006F006E.5.o.n.e.4.7.o.n]
  18 Noop             0    0    0               00 uniqueness check for b
  19 SCopy            9   12    0               00 r[12]=r[9]
REG[12] =   e20[o.n.e.4.7.o.n.e](16LE)
  20 NotNull         12   22    0               00 if r[12]!=NULL goto 22
REG[12] =   e20[o.n.e.4.7.o.n.e](16LE)
  22 PureFunc0        2   12    5 like(2)       02 b column 0
REG[12] =   e20[o.n.e.4.7.o.n.e](16LE)
REG[13] =  i:0
REG[5] =  i:0
  23 IntCopy          8    6    0               00 r[6]=r[8]; rowid
REG[6] =  i:1
  24 MakeRecord       5    2    4               00 r[4]=mkrec(r[5..6]); for b
REG[4] =  s3[030809...]
  25 Column           0    0   14               00 r[14]=t1.a
REG[14] =   s10[o.n.e.4.7.](16LE)
  26 Rowid            0   15    0               00 r[15]=rowid
REG[15] =  i:1
  27 IdxDelete        1   14    2               00 key=r[14..15]
  28 Column           0    0   16               00 r[16]=t1.a
REG[16] =   s10[o.n.e.4.7.](16LE)
  29 NotNull         16   31    0               00 if r[16]!=NULL goto 31
REG[16] =   s10[o.n.e.4.7.](16LE)
  31 PureFunc0        2   16   14 like(2)       02 
REG[16] =   s10[o.n.e.4.7.](16LE)
REG[17] =  i:0
REG[14] =  i:0
  32 IdxDelete        2   14    2               00 key=r[14..15]
  33 IdxInsert        1    1    2 2             00 key=r[1]
REG[1] =  s23[0335096F006E006500340037006F006E.5.o.n.e.4.7.o.n]
  34 IdxInsert        2    4    5 2             00 key=r[4]
REG[4] =  s3[030809...]
  35 MakeRecord       9    1   11               00 r[11]=mkrec(r[9])
REG[11] =  s22[02356F006E006500340037006F006E00.5o.n.e.4.7.o.n.]
  36 Insert           0   11    8 t1            07 intkey=r[8] data=r[11]
REG[11] =  s22[02356F006E006500340037006F006E00.5o.n.e.4.7.o.n.]
REG[8] =  i:1
  37 Next             0    5    0               01 
   5 Rowid            0    8    0               00 r[8]=rowid
REG[8] =  i:2
   6 Once             1    9    0               00 
   9 IsNull           8   38    0               00 if r[8]==NULL goto 38
REG[8] =  i:2
  10 Column           0    0   10               00 r[10]=t1.a
REG[10] =   s6[o.n.e.](16LE)
  11 Column           0    0   11               00 r[11]=t1.a
REG[11] =   s6[o.n.e.](16LE)
  12 Concat          11   10    9               00 r[9]=r[10]+r[11]

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f6f48f9c859 in __GI_abort () at abort.c:79
#2  0x00007f6f48f9c729 in __assert_fail_base (fmt=0x7f6f49132588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x221a82 "(mFlags&MEM_Str)==0 || (pMem->n==pX->n && pMem->z==pX->z)", file=0x22873d "sqlite3.c", 
    line=75351, function=<optimized out>) at assert.c:92
#3  0x00007f6f48fadfd6 in __GI___assert_fail (assertion=0x221a82 "(mFlags&MEM_Str)==0 || (pMem->n==pX->n && pMem->z==pX->z)", file=0x22873d "sqlite3.c", line=75351, 
    function=0x208940 "void sqlite3VdbeMemAboutToChange(Vdbe *, Mem *)") at assert.c:101
#4  0x00000000003e1103 in sqlite3VdbeMemAboutToChange (pVdbe=0xc88d90, pMem=0xc95388) at sqlite3.c:75351
#5  0x00000000003c0454 in sqlite3VdbeExec (p=0xc88d90) at sqlite3.c:84334
#6  0x0000000000411104 in sqlite3Step (p=0xc88d90) at sqlite3.c:81930
#7  0x000000000029128d in sqlite3_step (pStmt=0xc88d90) at sqlite3.c:81995
#8  0x00000000002570b9 in main (argc=1, argv=0x7fffd401b498) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 55206] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
