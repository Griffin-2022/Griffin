GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000506,sig:11,src:022036+021630,time:27624121,execs:9374846,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;CREATE TABLE t1(a, b);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    0 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:1
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:1
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t1            00 r[7]='t1'
REG[7] =   t2[t1](8)
  20 String8          0    8    0 t1            00 r[8]='t1'
REG[8] =   t2[t1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  22 String8          0   10    0 CREATE TABLE t1(a, b) 00 r[10]='CREATE TABLE t1(a, b)'
REG[10] =   t21[CREATE TABLE t1](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s37[0617111101377461626C657431743102.....7tablet1t1.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s37[0617111101377461626C657431743102.....7tablet1t1.]
REG[5] =  i:1
  25 SetCookie        0    1    1               00 
  26 ParseSchema      0    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    1 0             00 usesStmtJournal=0
  16 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s21[CREATE TABLE t1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t1](8)
REG[5] =  i:2
REG[6] =   s21[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO t1(b) VALUES(zeroblob(300)),(zeroblob(300)),(zeroblob(300)),(zeroblob(300));]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      0    1    1 0             01 usesStmtJournal=0
  21 Integer        300    8    0               00 r[8]=300
REG[8] =  i:300
  22 Function0        1    8    6 zeroblob(1)   01 r[6]=func(r[8])
REG[8] =  i:300
REG[6] =  s0[]+300z
  23 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  24 Goto             0    1    0               00 
   1 InitCoroutine    4   12    2               00 
  12 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
  13 Yield            4   19    0               00 
REG[4] =  i:1
REG[4] =  i:13
   2 Explain          2    0    0 SCAN 4 CONSTANT ROWS 00 
   3 Copy             6    5    0               00 r[5]=r[6]
REG[5] =  s300[00000000000000000000000000000000................]
   4 Yield            4    0    0               00 
REG[4] =  i:13
REG[4] =  i:4
  14 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
  15 SCopy            5    3    0               00 r[3]=r[5]
REG[3] =  e300[00000000000000000000000000000000................]
  16 MakeRecord       2    2    7               00 r[7]=mkrec(r[2..3])
REG[7] =  s304[04008464000000000000000000000000...d............]
  17 Insert           0    7    1 t1            39 intkey=r[1] data=r[7]
REG[7] =  s304[04008464000000000000000000000000...d............]
REG[1] =  i:1
  18 Goto             0   13    0               00 
  13 Yield            4   19    0               00 
REG[4] =  i:4
REG[4] =  i:13
   5 Copy             6    5    0               00 r[5]=r[6]
REG[5] =  s300[00000000000000000000000000000000................]
   6 Yield            4    0    0               00 
REG[4] =  i:13
REG[4] =  i:6
  14 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
  15 SCopy            5    3    0               00 r[3]=r[5]
REG[3] =  e300[00000000000000000000000000000000................]
  16 MakeRecord       2    2    7               00 r[7]=mkrec(r[2..3])
REG[7] =  s304[04008464000000000000000000000000...d............]
  17 Insert           0    7    1 t1            39 intkey=r[1] data=r[7]
REG[7] =  s304[04008464000000000000000000000000...d............]
REG[1] =  i:2
  18 Goto             0   13    0               00 
  13 Yield            4   19    0               00 
REG[4] =  i:6
REG[4] =  i:13
   7 Copy             6    5    0               00 r[5]=r[6]
REG[5] =  s300[00000000000000000000000000000000................]
   8 Yield            4    0    0               00 
REG[4] =  i:13
REG[4] =  i:8
  14 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
  15 SCopy            5    3    0               00 r[3]=r[5]
REG[3] =  e300[00000000000000000000000000000000................]
  16 MakeRecord       2    2    7               00 r[7]=mkrec(r[2..3])
REG[7] =  s304[04008464000000000000000000000000...d............]
  17 Insert           0    7    1 t1            39 intkey=r[1] data=r[7]
REG[7] =  s304[04008464000000000000000000000000...d............]
REG[1] =  i:3
  18 Goto             0   13    0               00 
  13 Yield            4   19    0               00 
REG[4] =  i:8
REG[4] =  i:13
   9 Copy             6    5    0               00 r[5]=r[6]
REG[5] =  s300[00000000000000000000000000000000................]
  10 Yield            4    0    0               00 
REG[4] =  i:13
REG[4] =  i:10
  14 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
  15 SCopy            5    3    0               00 r[3]=r[5]
REG[3] =  e300[00000000000000000000000000000000................]
  16 MakeRecord       2    2    7               00 r[7]=mkrec(r[2..3])
REG[7] =  s304[04008464000000000000000000000000...d............]
  17 Insert           0    7    1 t1            39 intkey=r[1] data=r[7]
REG[7] =  s304[04008464000000000000000000000000...d............]
REG[1] =  i:4
  18 Goto             0   13    0               00 
  13 Yield            4   19    0               00 
REG[4] =  i:10
REG[4] =  i:13
  11 EndCoroutine     4    0    0               00 
REG[4] =  i:13
  19 Halt             0    0    0               00 
SQL: [;
;SELECT b FROM t1 WHERE b='abc' ORDER BY b;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    1 0             01 usesStmtJournal=0
  12 String8          0    2    0 abc           00 r[2]='abc'
REG[2] =   t3[abc](8)
  13 Goto             0    1    0               00 
   1 Noop             1    3    0               00 
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  s300[00000000000000000000000000000000................]
   6 Ne               2    9    1 (BINARY)      51 if r[1]!=r[2] goto 9
REG[2] =   t3[abc](8)
REG[1] =  s300[00000000000000000000000000000000................]
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  s300[00000000000000000000000000000000................]
   6 Ne               2    9    1 (BINARY)      51 if r[1]!=r[2] goto 9
REG[2] =   t3[abc](8)
REG[1] =  s300[00000000000000000000000000000000................]
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  s300[00000000000000000000000000000000................]
   6 Ne               2    9    1 (BINARY)      51 if r[1]!=r[2] goto 9
REG[2] =   t3[abc](8)
REG[1] =  s300[00000000000000000000000000000000................]
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  s300[00000000000000000000000000000000................]
   6 Ne               2    9    1 (BINARY)      51 if r[1]!=r[2] goto 9
REG[2] =   t3[abc](8)
REG[1] =  s300[00000000000000000000000000000000................]
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
SQL: [CREATE TRIGGER c  BEFORE INSERT ON t1 BEGIN 
      INSERT INTO t1 SELECT max(b) OVER(ORDER BY $1) FROM t1; END 
;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    1    1 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   3 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   4 String8          0    3    0 c             00 r[3]='c'
REG[3] =   t1[c](8)
   5 String8          0    4    0 t1            00 r[4]='t1'
REG[4] =   t2[t1](8)
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 String8          0    6    0 CREATE TRIGGER c  BEFORE INSERT ON t1 BEGIN 
      INSERT INTO t1 SELECT max(b) OVER(ORDER BY $1) FROM t1; END 00 r[6]='CREATE TRIGGER c  BEFORE INSERT ON t1 BEGIN 
      INSERT INTO t1 SELECT max(b) OVER(ORDER BY
REG[6] =   t110[CREATE TRIGGER ](8)
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
REG[7] =  s127[071B0F11088169747269676765726374......itriggerct]
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
REG[7] =  s127[071B0F11088169747269676765726374......itriggerct]
REG[1] =  i:2
  10 SetCookie        0    1    2               00 
  11 ParseSchema      0    0    0 type='trigger' AND name='c' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 0             00 usesStmtJournal=0
  16 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  17 String8          0    3    0 c             00 r[3]='c'
REG[3] =   t1[c](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t1[c](8)
REG[1] =   s1[c](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[c](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:0
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s110[CREATE TRIGGER ](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[c](8)
REG[5] =  i:0
REG[6] =   s110[CREATE TRIGGER ](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;SELECT * FROM t1 WHERE b = 1;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 0             01 usesStmtJournal=0
  12 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  13 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   10    0               00 
   4 Column           0    1    1               00 r[1]=t1.b
REG[1] =  s300[00000000000000000000000000000000................]
   5 Ne               2    9    1 (BINARY)      51 if r[1]!=r[2] goto 9
REG[2] =  i:1
REG[1] =  s300[00000000000000000000000000000000................]
   9 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=t1.b
REG[1] =  s300[00000000000000000000000000000000................]
   5 Ne               2    9    1 (BINARY)      51 if r[1]!=r[2] goto 9
REG[2] =  i:1
REG[1] =  s300[00000000000000000000000000000000................]
   9 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=t1.b
REG[1] =  s300[00000000000000000000000000000000................]
   5 Ne               2    9    1 (BINARY)      51 if r[1]!=r[2] goto 9
REG[2] =  i:1
REG[1] =  s300[00000000000000000000000000000000................]
   9 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=t1.b
REG[1] =  s300[00000000000000000000000000000000................]
   5 Ne               2    9    1 (BINARY)      51 if r[1]!=r[2] goto 9
REG[2] =  i:1
REG[1] =  s300[00000000000000000000000000000000................]
   9 Next             0    4    0               01 
  10 Halt             0    0    0               00 

Program received signal SIGSEGV, Segmentation fault.
__strcmp_avx2 () at ../sysdeps/x86_64/multiarch/strcmp-avx2.S:102
(gdb) #0  __strcmp_avx2 () at ../sysdeps/x86_64/multiarch/strcmp-avx2.S:102
#1  0x000000000034a642 in sqlite3ExprCodeTarget (pParse=0x1c12070, pExpr=0x1c0c760, target=8) at sqlite3.c:100443
#2  0x000000000034e9ee in sqlite3ExprCodeExprList (pParse=0x1c12070, pList=0x1c11260, target=8, srcReg=0, flags=1 '\001') at sqlite3.c:101202
#3  0x00000000003ae220 in pushOntoSorter (pParse=0x1c12070, pSort=0x7ffdf0b3bf88, pSelect=0x1c0a690, regData=9, regOrigData=0, nData=1, nPrefixReg=1) at sqlite3.c:125256
#4  0x00000000003a9edf in selectInnerLoop (pParse=0x1c12070, p=0x1c0a690, srcTab=-1, pSort=0x7ffdf0b3bf88, pDistinct=0x7ffdf0b3c040, pDest=0x7ffdf0b3c128, iContinue=-4, iBreak=-2) at sqlite3.c:125809
#5  0x00000000002fe191 in sqlite3Select (pParse=0x1c12070, p=0x1c0a690, pDest=0x7ffdf0b3c128) at sqlite3.c:130743
#6  0x00000000002fd24a in sqlite3Select (pParse=0x1c12070, p=0x1c0c2b0, pDest=0x7ffdf0b3c448) at sqlite3.c:130524
#7  0x0000000000309aa3 in sqlite3Insert (pParse=0x1c12070, pTabList=0x1c13330, pSelect=0x1c0c2b0, pColumn=0x0, onError=5, pUpsert=0x0) at sqlite3.c:117162
#8  0x00000000003949b6 in codeTriggerProgram (pParse=0x1c12070, pStepList=0x1c1a860, orconf=5) at sqlite3.c:132245
#9  0x0000000000394209 in codeRowTrigger (pParse=0x7ffdf0b3d640, pTrigger=0x1c1ab40, pTab=0x1bfb740, orconf=5) at sqlite3.c:132398
#10 0x000000000039393d in getRowTrigger (pParse=0x7ffdf0b3d640, pTrigger=0x1c1ab40, pTab=0x1bfb740, orconf=5) at sqlite3.c:132455
#11 0x0000000000393453 in sqlite3CodeRowTriggerDirect (pParse=0x7ffdf0b3d640, p=0x1c1ab40, pTab=0x1bfb740, reg=8, orconf=5, ignoreJump=-1) at sqlite3.c:132477
#12 0x0000000000363845 in sqlite3CodeRowTrigger (pParse=0x7ffdf0b3d640, pTrigger=0x1c1ab40, op=120, pChanges=0x0, tr_tm=1, pTab=0x1bfb740, reg=8, orconf=5, ignoreJump=-1) at sqlite3.c:132571
#13 0x000000000030ad90 in sqlite3Insert (pParse=0x7ffdf0b3d640, pTabList=0x1c14f50, pSelect=0x1c17e30, pColumn=0x1c0ece0, onError=5, pUpsert=0x0) at sqlite3.c:117389
#14 0x00000000002ee6c8 in yy_reduce (yypParser=0x7ffdf0b3cc60, yyruleno=150, yyLookahead=1, yyLookaheadToken=..., pParse=0x7ffdf0b3d640) at sqlite3.c:151937
#15 0x00000000002e92f8 in sqlite3Parser (yyp=0x7ffdf0b3cc60, yymajor=1, yyminor=...) at sqlite3.c:152877
#16 0x00000000002a68b3 in sqlite3RunParser (pParse=0x7ffdf0b3d640, 
    zSql=0x1c187ca ";INSERT INTO t1(a, a) VALUES('a', 'a')\n;;\n;UPDATE t1 SET b=zeroblob(299);;\n;ALTER TABLE t1 ADD COLUMN v1;;CREATE INDEX xyz ON t1(SUBSTR(v1, 27, 3)) WHERE v1>=29;INSERT INTO t1 SELECT * FROM t1 ORDER B"..., pzErrMsg=0x7ffdf0b3d820) at sqlite3.c:154013
#17 0x00000000002a1683 in sqlite3Prepare (db=0x1bf9df0, 
    zSql=0x1bf9ba5 "INSERT OR REPLACE  INTO main.t1 (b, b) VALUES(1, 2),(3,4)\n;INSERT INTO t1(a, a) VALUES('a', 'a')\n;;\n;UPDATE t1 SET b=zeroblob(299);;\n;ALTER TABLE t1 ADD COLUMN v1;;CREATE INDEX xyz ON t1(SUBSTR(v1, 27"..., nBytes=426, prepFlags=128, pReprepare=0x0, ppStmt=0x7ffdf0b3d958, pzTail=0x7ffdf0b3d940) at sqlite3.c:124303
#18 0x00000000002a0d4e in sqlite3LockAndPrepare (db=0x1bf9df0, 
    zSql=0x1bf9ba5 "INSERT OR REPLACE  INTO main.t1 (b, b) VALUES(1, 2),(3,4)\n;INSERT INTO t1(a, a) VALUES('a', 'a')\n;;\n;UPDATE t1 SET b=zeroblob(299);;\n;ALTER TABLE t1 ADD COLUMN v1;;CREATE INDEX xyz ON t1(SUBSTR(v1, 27"..., nBytes=426, prepFlags=128, pOld=0x0, ppStmt=0x7ffdf0b3d958, pzTail=0x7ffdf0b3d940) at sqlite3.c:124403
#19 0x000000000029247f in sqlite3_prepare_v2 (db=0x1bf9df0, 
    zSql=0x1bf9ba5 "INSERT OR REPLACE  INTO main.t1 (b, b) VALUES(1, 2),(3,4)\n;INSERT INTO t1(a, a) VALUES('a', 'a')\n;;\n;UPDATE t1 SET b=zeroblob(299);;\n;ALTER TABLE t1 ADD COLUMN v1;;CREATE INDEX xyz ON t1(SUBSTR(v1, 27"..., nBytes=426, ppStmt=0x7ffdf0b3d958, pzTail=0x7ffdf0b3d940) at sqlite3.c:124487
#20 0x0000000000256bd0 in main (argc=1, argv=0x7ffdf0b3db08) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 54558] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
