GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000421,sig:11,src:020980+021860,time:15627027,execs:4682055,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [PRAGMA auto_vacuum = 0;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [;CREATE TABLE t1(a, b);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    0 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:1
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:1
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t1            00 r[7]='t1'
REG[7] =   t2[t1](8)
  20 String8          0    8    0 t1            00 r[8]='t1'
REG[8] =   t2[t1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  22 String8          0   10    0 CREATE TABLE t1(a, b) 00 r[10]='CREATE TABLE t1(a, b)'
REG[10] =   t21[CREATE TABLE t1](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s37[0617111101377461626C657431743102.....7tablet1t1.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s37[0617111101377461626C657431743102.....7tablet1t1.]
REG[5] =  i:1
  25 SetCookie        0    1    1               00 
  26 ParseSchema      0    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    1 0             00 usesStmtJournal=0
  16 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s21[CREATE TABLE t1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t1](8)
REG[5] =  i:2
REG[6] =   s21[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [SELECT CAST('€' AS blob)=x'80' AS x
;]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    2    0 €             00 r[2]='€'
REG[2] =   t1[.](8)
   6 Cast             2   65    0               00 affinity(r[2])
REG[2] =   t1[.](8)
   7 Blob             1    3    0 €             00 r[3]=€ (len=1)
REG[3] =  t1[80.]
   8 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               3    1    2               61 r[1] = (r[2]==r[3])
REG[3] =  t1[80.]
REG[2] =  t1[80.]
REG[1] =  i:1
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   4 Halt             0    0    0               00 
SQL: [CREATE TRIGGER c  BEFORE INSERT ON t1 BEGIN 
      INSERT INTO t1 SELECT max(a) OVER(ORDER BY $1) FROM t1; END 
;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    1    1 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   3 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   4 String8          0    3    0 c             00 r[3]='c'
REG[3] =   t1[c](8)
   5 String8          0    4    0 t1            00 r[4]='t1'
REG[4] =   t2[t1](8)
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 String8          0    6    0 CREATE TRIGGER c  BEFORE INSERT ON t1 BEGIN 
      INSERT INTO t1 SELECT max(a) OVER(ORDER BY $1) FROM t1; END 00 r[6]='CREATE TRIGGER c  BEFORE INSERT ON t1 BEGIN 
      INSERT INTO t1 SELECT max(a) OVER(ORDER BY
REG[6] =   t110[CREATE TRIGGER ](8)
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
REG[7] =  s127[071B0F11088169747269676765726374......itriggerct]
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
REG[7] =  s127[071B0F11088169747269676765726374......itriggerct]
REG[1] =  i:2
  10 SetCookie        0    1    2               00 
  11 ParseSchema      0    0    0 type='trigger' AND name='c' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 0             00 usesStmtJournal=0
  16 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  17 String8          0    3    0 c             00 r[3]='c'
REG[3] =   t1[c](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t1[c](8)
REG[1] =   s1[c](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[c](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:0
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s110[CREATE TRIGGER ](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[c](8)
REG[5] =  i:0
REG[6] =   s110[CREATE TRIGGER ](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;CREATE INDEX v1 ON t1(a)
;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    1    2 0             01 usesStmtJournal=0
  34 Goto             0    1    0               00 
   1 Noop             0   32    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:3
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:3
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 v1            00 r[4]='v1'
REG[4] =   t2[v1](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:3
   9 String8          0    7    0 CREATE INDEX v1 ON t1(a)
 00 r[7]='CREATE INDEX v1 ON t1(a)
'
REG[7] =   t25[CREATE INDEX v1](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s41[06171111013F696E6465787631743103.....?indexv1t1.]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s41[06171111013F696E6465787631743103.....?indexv1t1.]
REG[2] =  i:3
  12 SorterOpen       3    0    1 k(2,,)        00 
  13 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  14 Rewind           1   20    0               00 
  20 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  21 SorterSort       3   26    0               00 
  26 Close            1    0    0               00 
  27 Close            2    0    0               00 
  28 Close            3    0    0               00 
  29 SetCookie        0    1    3               00 
  30 ParseSchema      0    0    0 name='v1' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 0             00 usesStmtJournal=0
  16 String8          0    2    0 v1            00 r[2]='v1'
REG[2] =   t2[v1](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[v1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[v1](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[v1](8)
REG[1] =   s2[v1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[v1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s25[CREATE INDEX v1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[v1](8)
REG[5] =  i:3
REG[6] =   s25[CREATE INDEX v1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  31 Expire           0    1    0               00 
  32 Halt             0    0    0               00 
SQL: [;PRAGMA writable_schema=RESET;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
;UPDATE t1 SET a=zeroblob(299);]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    1    3 0             01 usesStmtJournal=0
  24 Integer        299   12    0               00 r[12]=299
REG[12] =  i:299
  25 Function0        1   12    8 zeroblob(1)   01 r[8]=func(r[12])
REG[12] =  i:299
REG[8] =  s0[]+299z
  26 Goto             0    1    0               00 
   1 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
   2 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   22    0               00 
  22 Halt             0    0    0               00 
SQL: [CREATE INDEX xyz ON t1(a)
;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    1    3 0             01 usesStmtJournal=0
  34 Goto             0    1    0               00 
   1 Noop             0   32    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:4
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:4
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 xyz           00 r[4]='xyz'
REG[4] =   t3[xyz](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:4
   9 String8          0    7    0 CREATE INDEX xyz ON t1(a)
 00 r[7]='CREATE INDEX xyz ON t1(a)
'
REG[7] =   t26[CREATE INDEX xy](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s43[061713110141696E64657878797A7431.....Aindexxyzt1]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s43[061713110141696E64657878797A7431.....Aindexxyzt1]
REG[2] =  i:4
  12 SorterOpen       3    0    1 k(2,,)        00 
  13 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  14 Rewind           1   20    0               00 
  20 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  21 SorterSort       3   26    0               00 
  26 Close            1    0    0               00 
  27 Close            2    0    0               00 
  28 Close            3    0    0               00 
  29 SetCookie        0    1    4               00 
  30 ParseSchema      0    0    0 name='xyz' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    4 0             00 usesStmtJournal=0
  16 String8          0    2    0 xyz           00 r[2]='xyz'
REG[2] =   t3[xyz](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[xyz](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[xyz](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[xyz](8)
REG[1] =   s2[v1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[xyz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[xyz](8)
REG[1] =   s3[xyz](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[xyz](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s26[CREATE INDEX xy](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[xyz](8)
REG[5] =  i:4
REG[6] =   s26[CREATE INDEX xy](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  31 Expire           0    1    0               00 
  32 Halt             0    0    0               00 
SQL: [CREATE INDEX tt1 ON t1(b)
;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    1    4 0             01 usesStmtJournal=0
  34 Goto             0    1    0               00 
   1 Noop             0   32    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:5
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:5
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 tt1           00 r[4]='tt1'
REG[4] =   t3[tt1](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:5
   9 String8          0    7    0 CREATE INDEX tt1 ON t1(b)
 00 r[7]='CREATE INDEX tt1 ON t1(b)
'
REG[7] =   t26[CREATE INDEX tt](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s43[061713110141696E6465787474317431.....Aindextt1t1]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s43[061713110141696E6465787474317431.....Aindextt1t1]
REG[2] =  i:5
  12 SorterOpen       3    0    1 k(2,,)        00 
  13 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  14 Rewind           1   20    0               00 
  20 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  21 SorterSort       3   26    0               00 
  26 Close            1    0    0               00 
  27 Close            2    0    0               00 
  28 Close            3    0    0               00 
  29 SetCookie        0    1    5               00 
  30 ParseSchema      0    0    0 name='tt1' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    5 0             00 usesStmtJournal=0
  16 String8          0    2    0 tt1           00 r[2]='tt1'
REG[2] =   t3[tt1](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tt1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tt1](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tt1](8)
REG[1] =   s2[v1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[xyz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tt1](8)
REG[1] =   s3[xyz](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tt1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tt1](8)
REG[1] =   s3[tt1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[tt1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:5
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s26[CREATE INDEX tt](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[tt1](8)
REG[5] =  i:5
REG[6] =   s26[CREATE INDEX tt](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  31 Expire           0    1    0               00 
  32 Halt             0    0    0               00 
SQL: [;SELECT *, '|' FROM t1 ORDER BY +a;]
VDBE Trace:
   0 Init             0   22    0               00 Start at 22
  22 Transaction      0    0    5 0             01 usesStmtJournal=0
  23 Goto             0    1    0               00 
   1 SorterOpen       1    5    0 k(1,B)        00 
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   12    0               00 
  12 Explain         12    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  13 OpenPseudo       2    6    5               00 5 columns in r[6]
  14 SorterSort       1   21    0               00 
  21 Halt             0    0    0               00 
SQL: [CREATE INDEX tr1 ON t1(b)
;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    1    5 0             01 usesStmtJournal=0
  34 Goto             0    1    0               00 
   1 Noop             0   32    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:6
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:6
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 tr1           00 r[4]='tr1'
REG[4] =   t3[tr1](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:6
   9 String8          0    7    0 CREATE INDEX tr1 ON t1(b)
 00 r[7]='CREATE INDEX tr1 ON t1(b)
'
REG[7] =   t26[CREATE INDEX tr](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s43[061713110141696E6465787472317431.....Aindextr1t1]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s43[061713110141696E6465787472317431.....Aindextr1t1]
REG[2] =  i:6
  12 SorterOpen       3    0    1 k(2,,)        00 
  13 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  14 Rewind           1   20    0               00 
  20 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  21 SorterSort       3   26    0               00 
  26 Close            1    0    0               00 
  27 Close            2    0    0               00 
  28 Close            3    0    0               00 
  29 SetCookie        0    1    6               00 
  30 ParseSchema      0    0    0 name='tr1' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    6 0             00 usesStmtJournal=0
  16 String8          0    2    0 tr1           00 r[2]='tr1'
REG[2] =   t3[tr1](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s2[v1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[xyz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s3[xyz](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tt1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s3[tt1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s3[tr1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[tr1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:6
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s26[CREATE INDEX tr](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[tr1](8)
REG[5] =  i:6
REG[6] =   s26[CREATE INDEX tr](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  31 Expire           0    1    0               00 
  32 Halt             0    0    0               00 
SQL: [CREATE INDEX t2 ON t1(a)
;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    1    6 0             01 usesStmtJournal=0
  34 Goto             0    1    0               00 
   1 Noop             0   32    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:7
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:7
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 t2            00 r[4]='t2'
REG[4] =   t2[t2](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:7
   9 String8          0    7    0 CREATE INDEX t2 ON t1(a)
 00 r[7]='CREATE INDEX t2 ON t1(a)
'
REG[7] =   t25[CREATE INDEX t2](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s41[06171111013F696E6465787432743107.....?indext2t1.]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s41[06171111013F696E6465787432743107.....?indext2t1.]
REG[2] =  i:7
  12 SorterOpen       3    0    1 k(2,,)        00 
  13 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  14 Rewind           1   20    0               00 
  20 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  21 SorterSort       3   26    0               00 
  26 Close            1    0    0               00 
  27 Close            2    0    0               00 
  28 Close            3    0    0               00 
  29 SetCookie        0    1    7               00 
  30 ParseSchema      0    0    0 name='t2' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    7 0             00 usesStmtJournal=0
  16 String8          0    2    0 t2            00 r[2]='t2'
REG[2] =   t2[t2](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[v1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[xyz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s3[xyz](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tt1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s3[tt1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t2](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t2](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:7
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s25[CREATE INDEX t2](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t2](8)
REG[5] =  i:7
REG[6] =   s25[CREATE INDEX t2](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  31 Expire           0    1    0               00 
  32 Halt             0    0    0               00 
SQL: [CREATE INDEX tr2 ON t1(a)
;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    1    7 0             01 usesStmtJournal=0
  34 Goto             0    1    0               00 
   1 Noop             0   32    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:8
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:8
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 tr2           00 r[4]='tr2'
REG[4] =   t3[tr2](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:8
   9 String8          0    7    0 CREATE INDEX tr2 ON t1(a)
 00 r[7]='CREATE INDEX tr2 ON t1(a)
'
REG[7] =   t26[CREATE INDEX tr](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s43[061713110141696E6465787472327431.....Aindextr2t1]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s43[061713110141696E6465787472327431.....Aindextr2t1]
REG[2] =  i:8
  12 SorterOpen       3    0    1 k(2,,)        00 
  13 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  14 Rewind           1   20    0               00 
  20 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  21 SorterSort       3   26    0               00 
  26 Close            1    0    0               00 
  27 Close            2    0    0               00 
  28 Close            3    0    0               00 
  29 SetCookie        0    1    8               00 
  30 ParseSchema      0    0    0 name='tr2' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    8 0             00 usesStmtJournal=0
  16 String8          0    2    0 tr2           00 r[2]='tr2'
REG[2] =   t3[tr2](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s2[v1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[xyz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s3[xyz](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tt1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s3[tt1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s3[tr2](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[tr2](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:8
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s26[CREATE INDEX tr](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[tr2](8)
REG[5] =  i:8
REG[6] =   s26[CREATE INDEX tr](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  31 Expire           0    1    0               00 
  32 Halt             0    0    0               00 
SQL: [CREATE INDEX x ON t1(b)
;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    1    8 0             01 usesStmtJournal=0
  34 Goto             0    1    0               00 
   1 Noop             0   32    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:9
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:9
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 x             00 r[4]='x'
REG[4] =   t1[x](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:9
   9 String8          0    7    0 CREATE INDEX x ON t1(b)
 00 r[7]='CREATE INDEX x ON t1(b)
'
REG[7] =   t24[CREATE INDEX x ](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s39[06170F11013D696E6465787874310943.....=indexxt1.C]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s39[06170F11013D696E6465787874310943.....=indexxt1.C]
REG[2] =  i:9
  12 SorterOpen       3    0    1 k(2,,)        00 
  13 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  14 Rewind           1   20    0               00 
  20 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  21 SorterSort       3   26    0               00 
  26 Close            1    0    0               00 
  27 Close            2    0    0               00 
  28 Close            3    0    0               00 
  29 SetCookie        0    1    9               00 
  30 ParseSchema      0    0    0 name='x' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    9 0             00 usesStmtJournal=0
  16 String8          0    2    0 x             00 r[2]='x'
REG[2] =   t1[x](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[x](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[x](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[x](8)
REG[1] =   s2[v1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[xyz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[x](8)
REG[1] =   s3[xyz](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tt1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[x](8)
REG[1] =   s3[tt1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[x](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[x](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[x](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[x](8)
REG[1] =   s1[x](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[x](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:9
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s24[CREATE INDEX x ](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[x](8)
REG[5] =  i:9
REG[6] =   s24[CREATE INDEX x ](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  31 Expire           0    1    0               00 
  32 Halt             0    0    0               00 
SQL: [CREATE INDEX t1i1 ON t1(a)
;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    1    9 0             01 usesStmtJournal=0
  34 Goto             0    1    0               00 
   1 Noop             0   32    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:10
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:10
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 t1i1          00 r[4]='t1i1'
REG[4] =   t4[t1i1](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:10
   9 String8          0    7    0 CREATE INDEX t1i1 ON t1(a)
 00 r[7]='CREATE INDEX t1i1 ON t1(a)
'
REG[7] =   t27[CREATE INDEX t1](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s45[061715110143696E6465787431693174.....Cindext1i1t]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s45[061715110143696E6465787431693174.....Cindext1i1t]
REG[2] =  i:10
  12 SorterOpen       3    0    1 k(2,,)        00 
  13 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  14 Rewind           1   20    0               00 
  20 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  21 SorterSort       3   26    0               00 
  26 Close            1    0    0               00 
  27 Close            2    0    0               00 
  28 Close            3    0    0               00 
  29 SetCookie        0    1   10               00 
  30 ParseSchema      0    0    0 name='t1i1' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   10 0             00 usesStmtJournal=0
  16 String8          0    2    0 t1i1          00 r[2]='t1i1'
REG[2] =   t4[t1i1](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t1i1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t1i1](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t1i1](8)
REG[1] =   s2[v1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[xyz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t1i1](8)
REG[1] =   s3[xyz](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tt1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t1i1](8)
REG[1] =   s3[tt1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t1i1](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t1i1](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t1i1](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t1i1](8)
REG[1] =   s1[x](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t1i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t1i1](8)
REG[1] =   s4[t1i1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t1i1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:10
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s27[CREATE INDEX t1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t1i1](8)
REG[5] =  i:10
REG[6] =   s27[CREATE INDEX t1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  31 Expire           0    1    0               00 
  32 Halt             0    0    0               00 
SQL: [CREATE INDEX t2i1 ON t1(a)
;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    1   10 0             01 usesStmtJournal=0
  34 Goto             0    1    0               00 
   1 Noop             0   32    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:11
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:11
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 t2i1          00 r[4]='t2i1'
REG[4] =   t4[t2i1](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:11
   9 String8          0    7    0 CREATE INDEX t2i1 ON t1(a)
 00 r[7]='CREATE INDEX t2i1 ON t1(a)
'
REG[7] =   t27[CREATE INDEX t2](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s45[061715110143696E6465787432693174.....Cindext2i1t]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s45[061715110143696E6465787432693174.....Cindext2i1t]
REG[2] =  i:11
  12 SorterOpen       3    0    1 k(2,,)        00 
  13 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  14 Rewind           1   20    0               00 
  20 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  21 SorterSort       3   26    0               00 
  26 Close            1    0    0               00 
  27 Close            2    0    0               00 
  28 Close            3    0    0               00 
  29 SetCookie        0    1   11               00 
  30 ParseSchema      0    0    0 name='t2i1' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   11 0             00 usesStmtJournal=0
  16 String8          0    2    0 t2i1          00 r[2]='t2i1'
REG[2] =   t4[t2i1](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s2[v1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[xyz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s3[xyz](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tt1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s3[tt1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s1[x](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t1i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s4[t1i1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s4[t2i1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t2i1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:11
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s27[CREATE INDEX t2](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t2i1](8)
REG[5] =  i:11
REG[6] =   s27[CREATE INDEX t2](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  31 Expire           0    1    0               00 
  32 Halt             0    0    0               00 
SQL: [CREATE INDEX t0 ON t1(b)
;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    1   11 0             01 usesStmtJournal=0
  34 Goto             0    1    0               00 
   1 Noop             0   32    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:12
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:12
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 t0            00 r[4]='t0'
REG[4] =   t2[t0](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:12
   9 String8          0    7    0 CREATE INDEX t0 ON t1(b)
 00 r[7]='CREATE INDEX t0 ON t1(b)
'
REG[7] =   t25[CREATE INDEX t0](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s41[06171111013F696E646578743074310C.....?indext0t1.]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s41[06171111013F696E646578743074310C.....?indext0t1.]
REG[2] =  i:12
  12 SorterOpen       3    0    1 k(2,,)        00 
  13 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  14 Rewind           1   20    0               00 
  20 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  21 SorterSort       3   26    0               00 
  26 Close            1    0    0               00 
  27 Close            2    0    0               00 
  28 Close            3    0    0               00 
  29 SetCookie        0    1   12               00 
  30 ParseSchema      0    0    0 name='t0' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   12 0             00 usesStmtJournal=0
  16 String8          0    2    0 t0            00 r[2]='t0'
REG[2] =   t2[t0](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s2[v1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[xyz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s3[xyz](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tt1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s3[tt1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s1[x](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t1i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s4[t1i1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s2[t0](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t0](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:12
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s25[CREATE INDEX t0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t0](8)
REG[5] =  i:12
REG[6] =   s25[CREATE INDEX t0](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  31 Expire           0    1    0               00 
  32 Halt             0    0    0               00 
SQL: [CREATE INDEX c0 ON t1(a)
;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    1   12 0             01 usesStmtJournal=0
  34 Goto             0    1    0               00 
   1 Noop             0   32    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:13
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:13
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 c0            00 r[4]='c0'
REG[4] =   t2[c0](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:13
   9 String8          0    7    0 CREATE INDEX c0 ON t1(a)
 00 r[7]='CREATE INDEX c0 ON t1(a)
'
REG[7] =   t25[CREATE INDEX c0](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s41[06171111013F696E646578633074310D.....?indexc0t1.]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s41[06171111013F696E646578633074310D.....?indexc0t1.]
REG[2] =  i:13
  12 SorterOpen       3    0    1 k(2,,)        00 
  13 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  14 Rewind           1   20    0               00 
  20 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  21 SorterSort       3   26    0               00 
  26 Close            1    0    0               00 
  27 Close            2    0    0               00 
  28 Close            3    0    0               00 
  29 SetCookie        0    1   13               00 
  30 ParseSchema      0    0    0 name='c0' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   13 0             00 usesStmtJournal=0
  16 String8          0    2    0 c0            00 r[2]='c0'
REG[2] =   t2[c0](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s2[v1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[xyz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s3[xyz](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tt1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s3[tt1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s1[x](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t1i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s4[t1i1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[c0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s2[c0](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[c0](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:13
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s25[CREATE INDEX c0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[c0](8)
REG[5] =  i:13
REG[6] =   s25[CREATE INDEX c0](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  31 Expire           0    1    0               00 
  32 Halt             0    0    0               00 
SQL: [REINDEX
;]
VDBE Trace:
   0 Init             0  200    0               00 Start at 200
 200 Transaction      0    1   13 0             01 usesStmtJournal=0
 201 Goto             0    1    0               00 
   1 SorterOpen       2    0    1 k(2,,)        00 
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   3 Rewind           0    9    0               00 
   9 Clear           13    0    0               00 
  10 OpenWrite        1   13    0 k(2,,)        01 root=13 iDb=0
  11 SorterSort       2   16    0               00 
  16 Close            0    0    0               00 
  17 Close            1    0    0               00 
  18 Close            2    0    0               00 
  19 SorterOpen       5    0    1 k(2,,)        00 
  20 OpenRead         3    2    0 2             00 root=2 iDb=0; t1
  21 Rewind           3   27    0               00 
  27 Clear           12    0    0               00 
  28 OpenWrite        4   12    0 k(2,,)        01 root=12 iDb=0
  29 SorterSort       5   34    0               00 
  34 Close            3    0    0               00 
  35 Close            4    0    0               00 
  36 Close            5    0    0               00 
  37 SorterOpen       8    0    1 k(2,,)        00 
  38 OpenRead         6    2    0 2             00 root=2 iDb=0; t1
  39 Rewind           6   45    0               00 
  45 Clear           11    0    0               00 
  46 OpenWrite        7   11    0 k(2,,)        01 root=11 iDb=0
  47 SorterSort       8   52    0               00 
  52 Close            6    0    0               00 
  53 Close            7    0    0               00 
  54 Close            8    0    0               00 
  55 SorterOpen      11    0    1 k(2,,)        00 
  56 OpenRead         9    2    0 2             00 root=2 iDb=0; t1
  57 Rewind           9   63    0               00 
  63 Clear           10    0    0               00 
  64 OpenWrite       10   10    0 k(2,,)        01 root=10 iDb=0
  65 SorterSort      11   70    0               00 
  70 Close            9    0    0               00 
  71 Close           10    0    0               00 
  72 Close           11    0    0               00 
  73 SorterOpen      14    0    1 k(2,,)        00 
  74 OpenRead        12    2    0 2             00 root=2 iDb=0; t1
  75 Rewind          12   81    0               00 
  81 Clear            9    0    0               00 
  82 OpenWrite       13    9    0 k(2,,)        01 root=9 iDb=0
  83 SorterSort      14   88    0               00 
  88 Close           12    0    0               00 
  89 Close           13    0    0               00 
  90 Close           14    0    0               00 
  91 SorterOpen      17    0    1 k(2,,)        00 
  92 OpenRead        15    2    0 2             00 root=2 iDb=0; t1
  93 Rewind          15   99    0               00 
  99 Clear            8    0    0               00 
 100 OpenWrite       16    8    0 k(2,,)        01 root=8 iDb=0
 101 SorterSort      17  106    0               00 
 106 Close           15    0    0               00 
 107 Close           16    0    0               00 
 108 Close           17    0    0               00 
 109 SorterOpen      20    0    1 k(2,,)        00 
 110 OpenRead        18    2    0 2             00 root=2 iDb=0; t1
 111 Rewind          18  117    0               00 
 117 Clear            7    0    0               00 
 118 OpenWrite       19    7    0 k(2,,)        01 root=7 iDb=0
 119 SorterSort      20  124    0               00 
 124 Close           18    0    0               00 
 125 Close           19    0    0               00 
 126 Close           20    0    0               00 
 127 SorterOpen      23    0    1 k(2,,)        00 
 128 OpenRead        21    2    0 2             00 root=2 iDb=0; t1
 129 Rewind          21  135    0               00 
 135 Clear            6    0    0               00 
 136 OpenWrite       22    6    0 k(2,,)        01 root=6 iDb=0
 137 SorterSort      23  142    0               00 
 142 Close           21    0    0               00 
 143 Close           22    0    0               00 
 144 Close           23    0    0               00 
 145 SorterOpen      26    0    1 k(2,,)        00 
 146 OpenRead        24    2    0 2             00 root=2 iDb=0; t1
 147 Rewind          24  153    0               00 
 153 Clear            5    0    0               00 
 154 OpenWrite       25    5    0 k(2,,)        01 root=5 iDb=0
 155 SorterSort      26  160    0               00 
 160 Close           24    0    0               00 
 161 Close           25    0    0               00 
 162 Close           26    0    0               00 
 163 SorterOpen      29    0    1 k(2,,)        00 
 164 OpenRead        27    2    0 2             00 root=2 iDb=0; t1
 165 Rewind          27  171    0               00 
 171 Clear            4    0    0               00 
 172 OpenWrite       28    4    0 k(2,,)        01 root=4 iDb=0
 173 SorterSort      29  178    0               00 
 178 Close           27    0    0               00 
 179 Close           28    0    0               00 
 180 Close           29    0    0               00 
 181 SorterOpen      32    0    1 k(2,,)        00 
 182 OpenRead        30    2    0 2             00 root=2 iDb=0; t1
 183 Rewind          30  189    0               00 
 189 Clear            3    0    0               00 
 190 OpenWrite       31    3    0 k(2,,)        01 root=3 iDb=0
 191 SorterSort      32  196    0               00 
 196 Close           30    0    0               00 
 197 Close           31    0    0               00 
 198 Close           32    0    0               00 
 199 Halt             0    0    0               00 
SQL: [SELECT name FROM sqlite_master 
           WHERE type='index' AND tbl_name='test1'
           ORDER BY name
;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    0   13 0             01 usesStmtJournal=0
  22 String8          0    2    0 index         00 r[2]='index'
REG[2] =   t5[index](8)
  23 String8          0    3    0 test1         00 r[3]='test1'
REG[3] =   t5[test1](8)
  24 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0    1    0 3             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   12    1 (BINARY)      52 if r[1]!=r[2] goto 12
REG[2] =   t5[index](8)
REG[1] =   s5[table](8)
  12 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   12    1 (BINARY)      52 if r[1]!=r[2] goto 12
REG[2] =   t5[index](8)
REG[1] =   s7[trigger](8)
  12 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Ne               2   12    1 (BINARY)      52 if r[1]!=r[2] goto 12
REG[2] =   t5[index](8)
REG[1] =   s5[index](8)
   7 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   8 Ne               3   12    1 (BINARY)      52 if r[1]!=r[3] goto 12
REG[3] =   t5[test1](8)
REG[1] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Ne               2   12    1 (BINARY)      52 if r[1]!=r[2] goto 12
REG[2] =   t5[index](8)
REG[1] =   s5[index](8)
   7 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   8 Ne               3   12    1 (BINARY)      52 if r[1]!=r[3] goto 12
REG[3] =   t5[test1](8)
REG[1] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Ne               2   12    1 (BINARY)      52 if r[1]!=r[2] goto 12
REG[2] =   t5[index](8)
REG[1] =   s5[index](8)
   7 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   8 Ne               3   12    1 (BINARY)      52 if r[1]!=r[3] goto 12
REG[3] =   t5[test1](8)
REG[1] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Ne               2   12    1 (BINARY)      52 if r[1]!=r[2] goto 12
REG[2] =   t5[index](8)
REG[1] =   s5[index](8)
   7 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   8 Ne               3   12    1 (BINARY)      52 if r[1]!=r[3] goto 12
REG[3] =   t5[test1](8)
REG[1] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Ne               2   12    1 (BINARY)      52 if r[1]!=r[2] goto 12
REG[2] =   t5[index](8)
REG[1] =   s5[index](8)
   7 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   8 Ne               3   12    1 (BINARY)      52 if r[1]!=r[3] goto 12
REG[3] =   t5[test1](8)
REG[1] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Ne               2   12    1 (BINARY)      52 if r[1]!=r[2] goto 12
REG[2] =   t5[index](8)
REG[1] =   s5[index](8)
   7 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   8 Ne               3   12    1 (BINARY)      52 if r[1]!=r[3] goto 12
REG[3] =   t5[test1](8)
REG[1] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Ne               2   12    1 (BINARY)      52 if r[1]!=r[2] goto 12
REG[2] =   t5[index](8)
REG[1] =   s5[index](8)
   7 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   8 Ne               3   12    1 (BINARY)      52 if r[1]!=r[3] goto 12
REG[3] =   t5[test1](8)
REG[1] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Ne               2   12    1 (BINARY)      52 if r[1]!=r[2] goto 12
REG[2] =   t5[index](8)
REG[1] =   s5[index](8)
   7 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   8 Ne               3   12    1 (BINARY)      52 if r[1]!=r[3] goto 12
REG[3] =   t5[test1](8)
REG[1] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Ne               2   12    1 (BINARY)      52 if r[1]!=r[2] goto 12
REG[2] =   t5[index](8)
REG[1] =   s5[index](8)
   7 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   8 Ne               3   12    1 (BINARY)      52 if r[1]!=r[3] goto 12
REG[3] =   t5[test1](8)
REG[1] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Ne               2   12    1 (BINARY)      52 if r[1]!=r[2] goto 12
REG[2] =   t5[index](8)
REG[1] =   s5[index](8)
   7 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   8 Ne               3   12    1 (BINARY)      52 if r[1]!=r[3] goto 12
REG[3] =   t5[test1](8)
REG[1] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Ne               2   12    1 (BINARY)      52 if r[1]!=r[2] goto 12
REG[2] =   t5[index](8)
REG[1] =   s5[index](8)
   7 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   8 Ne               3   12    1 (BINARY)      52 if r[1]!=r[3] goto 12
REG[3] =   t5[test1](8)
REG[1] =   s2[t1](8)
  12 Next             0    5    0               01 
  13 Explain         13    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  14 OpenPseudo       2    7    3               00 3 columns in r[7]
  15 SorterSort       1   20    0               00 
  20 Halt             0    0    0               00 
SQL: [PRAGMA integrity_check
;]
VDBE Trace:
   0 Init             0  273  270               00 Start at 273
 273 Transaction      0    0   13 0             01 usesStmtJournal=0
 274 Transaction      1    0    0 0             01 usesStmtJournal=0
 275 Goto             0    1    0               00 
   1 Integer         99    1    0               00 r[1]=99
REG[1] =  i:99
   2 IntegrityCk      2   13    1 [2,13,12,11,10,9,8,7,6,5,4,3,1] 00 
   3 IsNull           2    9    0               00 if r[2]==NULL goto 9
REG[2] =  NULL
   9 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  10 OpenRead         2   13    0 k(2,,)        00 root=13 iDb=0; c0
  11 OpenRead         3   12    0 k(2,,)        00 root=12 iDb=0; t0
  12 OpenRead         4   11    0 k(2,,)        00 root=11 iDb=0; t2i1
  13 OpenRead         5   10    0 k(2,,)        00 root=10 iDb=0; t1i1
  14 OpenRead         6    9    0 k(2,,)        00 root=9 iDb=0; x
  15 OpenRead         7    8    0 k(2,,)        00 root=8 iDb=0; tr2
  16 OpenRead         8    7    0 k(2,,)        00 root=7 iDb=0; t2
  17 OpenRead         9    6    0 k(2,,)        00 root=6 iDb=0; tr1
  18 OpenRead        10    5    0 k(2,,)        00 root=5 iDb=0; tt1
  19 OpenRead        11    4    0 k(2,,)        00 root=4 iDb=0; xyz
  20 OpenRead        12    3    0 k(2,,)        00 root=3 iDb=0; v1
  21 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  22 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  23 Integer          0    9    0               00 r[9]=0
REG[9] =  i:0
  24 Integer          0   10    0               00 r[10]=0
REG[10] =  i:0
  25 Integer          0   11    0               00 r[11]=0
REG[11] =  i:0
  26 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  27 Integer          0   13    0               00 r[13]=0
REG[13] =  i:0
  28 Integer          0   14    0               00 r[14]=0
REG[14] =  i:0
  29 Integer          0   15    0               00 r[15]=0
REG[15] =  i:0
  30 Integer          0   16    0               00 r[16]=0
REG[16] =  i:0
  31 Integer          0   17    0               00 r[17]=0
REG[17] =  i:0
  32 Integer          0   18    0               00 r[18]=0
REG[18] =  i:0
  33 Rewind           1  166    0               00 
 166 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
 167 Count            2    3    0               00 r[3]=count()
REG[3] =  i:0
 168 Eq               8  174    3               90 if r[3]==r[8] goto 174
REG[8] =  i:0
REG[3] =  i:0
 174 Count            3    3    0               00 r[3]=count()
REG[3] =  i:0
 175 Eq               9  181    3               90 if r[3]==r[9] goto 181
REG[9] =  i:0
REG[3] =  i:0
 181 Count            4    3    0               00 r[3]=count()
REG[3] =  i:0
 182 Eq              10  188    3               90 if r[3]==r[10] goto 188
REG[10] =  i:0
REG[3] =  i:0
 188 Count            5    3    0               00 r[3]=count()
REG[3] =  i:0
 189 Eq              11  195    3               90 if r[3]==r[11] goto 195
REG[11] =  i:0
REG[3] =  i:0
 195 Count            6    3    0               00 r[3]=count()
REG[3] =  i:0
 196 Eq              12  202    3               90 if r[3]==r[12] goto 202
REG[12] =  i:0
REG[3] =  i:0
 202 Count            7    3    0               00 r[3]=count()
REG[3] =  i:0
 203 Eq              13  209    3               90 if r[3]==r[13] goto 209
REG[13] =  i:0
REG[3] =  i:0
 209 Count            8    3    0               00 r[3]=count()
REG[3] =  i:0
 210 Eq              14  216    3               90 if r[3]==r[14] goto 216
REG[14] =  i:0
REG[3] =  i:0
 216 Count            9    3    0               00 r[3]=count()
REG[3] =  i:0
 217 Eq              15  223    3               90 if r[3]==r[15] goto 223
REG[15] =  i:0
REG[3] =  i:0
 223 Count           10    3    0               00 r[3]=count()
REG[3] =  i:0
 224 Eq              16  230    3               90 if r[3]==r[16] goto 230
REG[16] =  i:0
REG[3] =  i:0
 230 Count           11    3    0               00 r[3]=count()
REG[3] =  i:0
 231 Eq              17  237    3               90 if r[3]==r[17] goto 237
REG[17] =  i:0
REG[3] =  i:0
 237 Count           12    3    0               00 r[3]=count()
REG[3] =  i:0
 238 Eq              18  244    3               90 if r[3]==r[18] goto 244
REG[18] =  i:0
REG[3] =  i:0
 244 OpenRead         1    1    0 5             00 root=1 iDb=0; sqlite_master
 245 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
 246 Rewind           1  250    0               00 
 247 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
 248 Column           1    4    3               80 r[3]=
REG[3] =   s21[CREATE TABLE t1](8)
 249 Next             1  247    0               00 
 247 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
 248 Column           1    4    3               80 r[3]=
REG[3] =   s110[CREATE TRIGGER ](8)
 249 Next             1  247    0               00 
 247 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:2
 248 Column           1    4    3               80 r[3]=
REG[3] =   s25[CREATE INDEX v1](8)
 249 Next             1  247    0               00 
 247 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:3
 248 Column           1    4    3               80 r[3]=
REG[3] =   s26[CREATE INDEX xy](8)
 249 Next             1  247    0               00 
 247 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:4
 248 Column           1    4    3               80 r[3]=
REG[3] =   s26[CREATE INDEX tt](8)
 249 Next             1  247    0               00 
 247 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:5
 248 Column           1    4    3               80 r[3]=
REG[3] =   s26[CREATE INDEX tr](8)
 249 Next             1  247    0               00 
 247 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:6
 248 Column           1    4    3               80 r[3]=
REG[3] =   s25[CREATE INDEX t2](8)
 249 Next             1  247    0               00 
 247 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:7
 248 Column           1    4    3               80 r[3]=
REG[3] =   s26[CREATE INDEX tr](8)
 249 Next             1  247    0               00 
 247 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:8
 248 Column           1    4    3               80 r[3]=
REG[3] =   s24[CREATE INDEX x ](8)
 249 Next             1  247    0               00 
 247 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:9
 248 Column           1    4    3               80 r[3]=
REG[3] =   s27[CREATE INDEX t1](8)
 249 Next             1  247    0               00 
 247 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:10
 248 Column           1    4    3               80 r[3]=
REG[3] =   s27[CREATE INDEX t2](8)
 249 Next             1  247    0               00 
 247 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:11
 248 Column           1    4    3               80 r[3]=
REG[3] =   s25[CREATE INDEX t0](8)
 249 Next             1  247    0               00 
 247 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:12
 248 Column           1    4    3               80 r[3]=
REG[3] =   s25[CREATE INDEX c0](8)
 249 Next             1  247    0               00 
 250 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
 251 IntegrityCk      2    1    1 [1]           01 
 252 IsNull           2  258    0               00 if r[2]==NULL goto 258
REG[2] =  NULL
 258 OpenRead         1    1    1 5             00 root=1 iDb=1; sqlite_temp_master
 259 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
 260 Rewind           1  264    0               00 
 264 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
 265 AddImm           1  -99    0               00 r[1]=r[1]+-99
REG[1] =  i:99
 266 IfNotZero        1  269    0               00 if r[1]!=0 then r[1]--, goto 269
REG[1] =  i:0
 267 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
 268 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
 269 Halt             0    0    0               00 
SQL: [CREATE TABLE c1(v2 real, d real)
;]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   13 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:14
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:14
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:14
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:14
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:14
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:14
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 c1            00 r[7]='c1'
REG[7] =   t2[c1](8)
  20 String8          0    8    0 c1            00 r[8]='c1'
REG[8] =   t2[c1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:14
  22 String8          0   10    0 CREATE TABLE c1(v2 real, d real) 00 r[10]='CREATE TABLE c1(v2 real, d real)'
REG[10] =   t32[CREATE TABLE c1](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s48[06171111014D7461626C65633163310E.....Mtablec1c1.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s48[06171111014D7461626C65633163310E.....Mtablec1c1.]
REG[5] =  i:14
  25 SetCookie        0    1   14               00 
  26 ParseSchema      0    0    0 tbl_name='c1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   14 0             00 usesStmtJournal=0
  16 String8          0    2    0 c1            00 r[2]='c1'
REG[2] =   t2[c1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[c1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c1](8)
REG[1] =   s2[c1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[c1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:14
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s32[CREATE TABLE c1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[c1](8)
REG[5] =  i:14
REG[6] =   s32[CREATE TABLE c1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;SELECT name FROM sqlite_master WHERE type!='meta' ORDER BY name;]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0   14 0             01 usesStmtJournal=0
  20 String8          0    2    0 meta          00 r[2]='meta'
REG[2] =   t4[meta](8)
  21 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0    1    0 2             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   11    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Eq               2   10    1 (BINARY)      52 if r[1]==r[2] goto 10
REG[2] =   t4[meta](8)
REG[1] =   s5[table](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t1](8)
   8 MakeRecord       3    1    5               00 r[5]=mkrec(r[3])
REG[5] =  s4[02117431..t1]
   9 SorterInsert     1    5    3 1             00 key=r[5]
REG[5] =  s4[02117431..t1]
  10 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Eq               2   10    1 (BINARY)      52 if r[1]==r[2] goto 10
REG[2] =   t4[meta](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s1[c](8)
   8 MakeRecord       3    1    5               00 r[5]=mkrec(r[3])
REG[5] =  s3[020F63..c]
   9 SorterInsert     1    5    3 1             00 key=r[5]
REG[5] =  s3[020F63..c]
  10 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Eq               2   10    1 (BINARY)      52 if r[1]==r[2] goto 10
REG[2] =   t4[meta](8)
REG[1] =   s5[index](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[v1](8)
   8 MakeRecord       3    1    5               00 r[5]=mkrec(r[3])
REG[5] =  s4[02117631..v1]
   9 SorterInsert     1    5    3 1             00 key=r[5]
REG[5] =  s4[02117631..v1]
  10 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Eq               2   10    1 (BINARY)      52 if r[1]==r[2] goto 10
REG[2] =   t4[meta](8)
REG[1] =   s5[index](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s3[xyz](8)
   8 MakeRecord       3    1    5               00 r[5]=mkrec(r[3])
REG[5] =  s5[021378797A..xyz]
   9 SorterInsert     1    5    3 1             00 key=r[5]
REG[5] =  s5[021378797A..xyz]
  10 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Eq               2   10    1 (BINARY)      52 if r[1]==r[2] goto 10
REG[2] =   t4[meta](8)
REG[1] =   s5[index](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s3[tt1](8)
   8 MakeRecord       3    1    5               00 r[5]=mkrec(r[3])
REG[5] =  s5[0213747431..tt1]
   9 SorterInsert     1    5    3 1             00 key=r[5]
REG[5] =  s5[0213747431..tt1]
  10 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Eq               2   10    1 (BINARY)      52 if r[1]==r[2] goto 10
REG[2] =   t4[meta](8)
REG[1] =   s5[index](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s3[tr1](8)
   8 MakeRecord       3    1    5               00 r[5]=mkrec(r[3])
REG[5] =  s5[0213747231..tr1]
   9 SorterInsert     1    5    3 1             00 key=r[5]
REG[5] =  s5[0213747231..tr1]
  10 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Eq               2   10    1 (BINARY)      52 if r[1]==r[2] goto 10
REG[2] =   t4[meta](8)
REG[1] =   s5[index](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t2](8)
   8 MakeRecord       3    1    5               00 r[5]=mkrec(r[3])
REG[5] =  s4[02117432..t2]
   9 SorterInsert     1    5    3 1             00 key=r[5]
REG[5] =  s4[02117432..t2]
  10 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Eq               2   10    1 (BINARY)      52 if r[1]==r[2] goto 10
REG[2] =   t4[meta](8)
REG[1] =   s5[index](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s3[tr2](8)
   8 MakeRecord       3    1    5               00 r[5]=mkrec(r[3])
REG[5] =  s5[0213747232..tr2]
   9 SorterInsert     1    5    3 1             00 key=r[5]
REG[5] =  s5[0213747232..tr2]
  10 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Eq               2   10    1 (BINARY)      52 if r[1]==r[2] goto 10
REG[2] =   t4[meta](8)
REG[1] =   s5[index](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s1[x](8)
   8 MakeRecord       3    1    5               00 r[5]=mkrec(r[3])
REG[5] =  s3[020F78..x]
   9 SorterInsert     1    5    3 1             00 key=r[5]
REG[5] =  s3[020F78..x]
  10 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Eq               2   10    1 (BINARY)      52 if r[1]==r[2] goto 10
REG[2] =   t4[meta](8)
REG[1] =   s5[index](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s4[t1i1](8)
   8 MakeRecord       3    1    5               00 r[5]=mkrec(r[3])
REG[5] =  s6[021574316931..t1i1]
   9 SorterInsert     1    5    3 1             00 key=r[5]
REG[5] =  s6[021574316931..t1i1]
  10 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Eq               2   10    1 (BINARY)      52 if r[1]==r[2] goto 10
REG[2] =   t4[meta](8)
REG[1] =   s5[index](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s4[t2i1](8)
   8 MakeRecord       3    1    5               00 r[5]=mkrec(r[3])
REG[5] =  s6[021574326931..t2i1]
   9 SorterInsert     1    5    3 1             00 key=r[5]
REG[5] =  s6[021574326931..t2i1]
  10 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Eq               2   10    1 (BINARY)      52 if r[1]==r[2] goto 10
REG[2] =   t4[meta](8)
REG[1] =   s5[index](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t0](8)
   8 MakeRecord       3    1    5               00 r[5]=mkrec(r[3])
REG[5] =  s4[02117430..t0]
   9 SorterInsert     1    5    3 1             00 key=r[5]
REG[5] =  s4[02117430..t0]
  10 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Eq               2   10    1 (BINARY)      52 if r[1]==r[2] goto 10
REG[2] =   t4[meta](8)
REG[1] =   s5[index](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[c0](8)
   8 MakeRecord       3    1    5               00 r[5]=mkrec(r[3])
REG[5] =  s4[02116330..c0]
   9 SorterInsert     1    5    3 1             00 key=r[5]
REG[5] =  s4[02116330..c0]
  10 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Eq               2   10    1 (BINARY)      52 if r[1]==r[2] goto 10
REG[2] =   t4[meta](8)
REG[1] =   s5[table](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[c1](8)
   8 MakeRecord       3    1    5               00 r[5]=mkrec(r[3])
REG[5] =  s4[02116331..c1]
   9 SorterInsert     1    5    3 1             00 key=r[5]
REG[5] =  s4[02116331..c1]
  10 Next             0    5    0               01 
  11 Explain         11    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  12 OpenPseudo       2    6    3               00 3 columns in r[6]
  13 SorterSort       1   18    0               00 
  14 SorterData       1    6    2               00 r[6]=data
  15 Column           2    0    4               00 r[4]=name
REG[4] =   s1[c](8)
  16 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s1[c](8)
  17 SorterNext       1   14    0               00 
  14 SorterData       1    6    2               00 r[6]=data
  15 Column           2    0    4               00 r[4]=name
REG[4] =   s2[c0](8)
  16 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s2[c0](8)
  17 SorterNext       1   14    0               00 
  14 SorterData       1    6    2               00 r[6]=data
  15 Column           2    0    4               00 r[4]=name
REG[4] =   s2[c1](8)
  16 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s2[c1](8)
  17 SorterNext       1   14    0               00 
  14 SorterData       1    6    2               00 r[6]=data
  15 Column           2    0    4               00 r[4]=name
REG[4] =   s2[t0](8)
  16 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s2[t0](8)
  17 SorterNext       1   14    0               00 
  14 SorterData       1    6    2               00 r[6]=data
  15 Column           2    0    4               00 r[4]=name
REG[4] =   s2[t1](8)
  16 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s2[t1](8)
  17 SorterNext       1   14    0               00 
  14 SorterData       1    6    2               00 r[6]=data
  15 Column           2    0    4               00 r[4]=name
REG[4] =   s4[t1i1](8)
  16 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s4[t1i1](8)
  17 SorterNext       1   14    0               00 
  14 SorterData       1    6    2               00 r[6]=data
  15 Column           2    0    4               00 r[4]=name
REG[4] =   s2[t2](8)
  16 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s2[t2](8)
  17 SorterNext       1   14    0               00 
  14 SorterData       1    6    2               00 r[6]=data
  15 Column           2    0    4               00 r[4]=name
REG[4] =   s4[t2i1](8)
  16 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s4[t2i1](8)
  17 SorterNext       1   14    0               00 
  14 SorterData       1    6    2               00 r[6]=data
  15 Column           2    0    4               00 r[4]=name
REG[4] =   s3[tr1](8)
  16 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s3[tr1](8)
  17 SorterNext       1   14    0               00 
  14 SorterData       1    6    2               00 r[6]=data
  15 Column           2    0    4               00 r[4]=name
REG[4] =   s3[tr2](8)
  16 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s3[tr2](8)
  17 SorterNext       1   14    0               00 
  14 SorterData       1    6    2               00 r[6]=data
  15 Column           2    0    4               00 r[4]=name
REG[4] =   s3[tt1](8)
  16 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s3[tt1](8)
  17 SorterNext       1   14    0               00 
  14 SorterData       1    6    2               00 r[6]=data
  15 Column           2    0    4               00 r[4]=name
REG[4] =   s2[v1](8)
  16 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s2[v1](8)
  17 SorterNext       1   14    0               00 
  14 SorterData       1    6    2               00 r[6]=data
  15 Column           2    0    4               00 r[4]=name
REG[4] =   s1[x](8)
  16 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s1[x](8)
  17 SorterNext       1   14    0               00 
  14 SorterData       1    6    2               00 r[6]=data
  15 Column           2    0    4               00 r[4]=name
REG[4] =   s3[xyz](8)
  16 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s3[xyz](8)
  17 SorterNext       1   14    0               00 
  18 Halt             0    0    0               00 
SQL: [SELECT name FROM sqlite_master WHERE type!='meta'
;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0   14 0             01 usesStmtJournal=0
  11 String8          0    2    0 meta          00 r[2]='meta'
REG[2] =   t4[meta](8)
  12 Goto             0    1    0               00 
   1 OpenRead         0    1    0 2             00 root=1 iDb=0; sqlite_master
   2 Explain          2    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Eq               2    8    1 (BINARY)      52 if r[1]==r[2] goto 8
REG[2] =   t4[meta](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t1](8)
   7 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s2[t1](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   5 Eq               2    8    1 (BINARY)      52 if r[1]==r[2] goto 8
REG[2] =   t4[meta](8)
REG[1] =   s7[trigger](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s1[c](8)
   7 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s1[c](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Eq               2    8    1 (BINARY)      52 if r[1]==r[2] goto 8
REG[2] =   t4[meta](8)
REG[1] =   s5[index](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[v1](8)
   7 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s2[v1](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Eq               2    8    1 (BINARY)      52 if r[1]==r[2] goto 8
REG[2] =   t4[meta](8)
REG[1] =   s5[index](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s3[xyz](8)
   7 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s3[xyz](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Eq               2    8    1 (BINARY)      52 if r[1]==r[2] goto 8
REG[2] =   t4[meta](8)
REG[1] =   s5[index](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s3[tt1](8)
   7 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s3[tt1](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Eq               2    8    1 (BINARY)      52 if r[1]==r[2] goto 8
REG[2] =   t4[meta](8)
REG[1] =   s5[index](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s3[tr1](8)
   7 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s3[tr1](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Eq               2    8    1 (BINARY)      52 if r[1]==r[2] goto 8
REG[2] =   t4[meta](8)
REG[1] =   s5[index](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t2](8)
   7 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s2[t2](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Eq               2    8    1 (BINARY)      52 if r[1]==r[2] goto 8
REG[2] =   t4[meta](8)
REG[1] =   s5[index](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s3[tr2](8)
   7 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s3[tr2](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Eq               2    8    1 (BINARY)      52 if r[1]==r[2] goto 8
REG[2] =   t4[meta](8)
REG[1] =   s5[index](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s1[x](8)
   7 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s1[x](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Eq               2    8    1 (BINARY)      52 if r[1]==r[2] goto 8
REG[2] =   t4[meta](8)
REG[1] =   s5[index](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s4[t1i1](8)
   7 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s4[t1i1](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Eq               2    8    1 (BINARY)      52 if r[1]==r[2] goto 8
REG[2] =   t4[meta](8)
REG[1] =   s5[index](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s4[t2i1](8)
   7 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s4[t2i1](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Eq               2    8    1 (BINARY)      52 if r[1]==r[2] goto 8
REG[2] =   t4[meta](8)
REG[1] =   s5[index](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t0](8)
   7 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s2[t0](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Eq               2    8    1 (BINARY)      52 if r[1]==r[2] goto 8
REG[2] =   t4[meta](8)
REG[1] =   s5[index](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[c0](8)
   7 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s2[c0](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Eq               2    8    1 (BINARY)      52 if r[1]==r[2] goto 8
REG[2] =   t4[meta](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[c1](8)
   7 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s2[c1](8)
   8 Next             0    4    0               01 
   9 Halt             0    0    0               00 
SQL: [SELECT name FROM sqlite_master WHERE tbl_name='c1'
;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0   14 0             01 usesStmtJournal=0
  11 String8          0    2    0 c1            00 r[2]='c1'
REG[2] =   t2[c1](8)
  12 Goto             0    1    0               00 
   1 OpenRead         0    1    0 3             00 root=1 iDb=0; sqlite_master
   2 Explain          2    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0    9    0               00 
   4 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =   t2[c1](8)
REG[1] =   s2[t1](8)
   8 Next             0    4    0               01 
   4 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =   t2[c1](8)
REG[1] =   s2[t1](8)
   8 Next             0    4    0               01 
   4 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =   t2[c1](8)
REG[1] =   s2[t1](8)
   8 Next             0    4    0               01 
   4 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =   t2[c1](8)
REG[1] =   s2[t1](8)
   8 Next             0    4    0               01 
   4 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =   t2[c1](8)
REG[1] =   s2[t1](8)
   8 Next             0    4    0               01 
   4 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =   t2[c1](8)
REG[1] =   s2[t1](8)
   8 Next             0    4    0               01 
   4 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =   t2[c1](8)
REG[1] =   s2[t1](8)
   8 Next             0    4    0               01 
   4 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =   t2[c1](8)
REG[1] =   s2[t1](8)
   8 Next             0    4    0               01 
   4 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =   t2[c1](8)
REG[1] =   s2[t1](8)
   8 Next             0    4    0               01 
   4 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =   t2[c1](8)
REG[1] =   s2[t1](8)
   8 Next             0    4    0               01 
   4 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =   t2[c1](8)
REG[1] =   s2[t1](8)
   8 Next             0    4    0               01 
   4 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =   t2[c1](8)
REG[1] =   s2[t1](8)
   8 Next             0    4    0               01 
   4 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =   t2[c1](8)
REG[1] =   s2[t1](8)
   8 Next             0    4    0               01 
   4 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[c1](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =   t2[c1](8)
REG[1] =   s2[c1](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[c1](8)
   7 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s2[c1](8)
   8 Next             0    4    0               01 
   9 Halt             0    0    0               00 
SQL: [CREATE INDEX t1abc ON t1(a)
;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    1   14 0             01 usesStmtJournal=0
  34 Goto             0    1    0               00 
   1 Noop             0   32    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:15
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:15
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 t1abc         00 r[4]='t1abc'
REG[4] =   t5[t1abc](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:15
   9 String8          0    7    0 CREATE INDEX t1abc ON t1(a)
 00 r[7]='CREATE INDEX t1abc ON t1(a)
'
REG[7] =   t28[CREATE INDEX t1](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s47[061717110145696E6465787431616263.....Eindext1abc]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s47[061717110145696E6465787431616263.....Eindext1abc]
REG[2] =  i:15
  12 SorterOpen       3    0    1 k(2,,)        00 
  13 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  14 Rewind           1   20    0               00 
  20 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  21 SorterSort       3   26    0               00 
  26 Close            1    0    0               00 
  27 Close            2    0    0               00 
  28 Close            3    0    0               00 
  29 SetCookie        0    1   15               00 
  30 ParseSchema      0    0    0 name='t1abc' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   15 0             00 usesStmtJournal=0
  16 String8          0    2    0 t1abc         00 r[2]='t1abc'
REG[2] =   t5[t1abc](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abc](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abc](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abc](8)
REG[1] =   s2[v1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[xyz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abc](8)
REG[1] =   s3[xyz](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tt1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abc](8)
REG[1] =   s3[tt1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abc](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abc](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abc](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abc](8)
REG[1] =   s1[x](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t1i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abc](8)
REG[1] =   s4[t1i1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abc](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abc](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[c0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abc](8)
REG[1] =   s2[c0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[c1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abc](8)
REG[1] =   s2[c1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s5[t1abc](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abc](8)
REG[1] =   s5[t1abc](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s5[t1abc](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:15
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s28[CREATE INDEX t1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s5[t1abc](8)
REG[5] =  i:15
REG[6] =   s28[CREATE INDEX t1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  31 Expire           0    1    0               00 
  32 Halt             0    0    0               00 
SQL: [;INSERT INTO c1 VALUES(1,2);]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    1   15 0             01 usesStmtJournal=0
   9 Goto             0    1    0               00 
   1 OpenWrite        0   14    0 2             00 root=14 iDb=0; c1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   5 MakeRecord       2    2    4 EE            00 r[4]=mkrec(r[2..3])
REG[4] =  s4[03090102....]
   6 Insert           0    4    1 c1            39 intkey=r[1] data=r[4]
REG[4] =  s4[03090102....]
REG[1] =  i:1
   7 Halt             0    0    0               00 
SQL: [;INSERT INTO c1 VALUES(3,8);]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    1   15 0             01 usesStmtJournal=0
   9 Goto             0    1    0               00 
   1 OpenWrite        0   14    0 2             00 root=14 iDb=0; c1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   3 Integer          3    2    0               00 r[2]=3
REG[2] =  i:3
   4 Integer          8    3    0               00 r[3]=8
REG[3] =  i:8
   5 MakeRecord       2    2    4 EE            00 r[4]=mkrec(r[2..3])
REG[4] =  s5[0301010308.....]
   6 Insert           0    4    1 c1            39 intkey=r[1] data=r[4]
REG[4] =  s5[0301010308.....]
REG[1] =  i:2
   7 Halt             0    0    0               00 
SQL: [;
;SELECT a FROM t1 WHERE a=2 ORDER BY a;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0   15 0             01 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    3    0               00 
   2 OpenRead         2   15    0 k(2,,)        02 root=15 iDb=0; t1abc
   3 Explain          3    0    0 SEARCH TABLE t1 USING COVERING INDEX t1abc (a=?) 00 
   4 Integer          2    1    0               00 r[1]=2
REG[1] =  i:2
   5 SeekGE           2   10    1 1             00 key=r[1]
REG[1] =  i:2
  10 Halt             0    0    0               00 
SQL: [;INSERT INTO c1 VALUES (1,8);]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    1   15 0             01 usesStmtJournal=0
   9 Goto             0    1    0               00 
   1 OpenWrite        0   14    0 2             00 root=14 iDb=0; c1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 Integer          8    3    0               00 r[3]=8
REG[3] =  i:8
   5 MakeRecord       2    2    4 EE            00 r[4]=mkrec(r[2..3])
REG[4] =  s4[03090108....]
   6 Insert           0    4    1 c1            39 intkey=r[1] data=r[4]
REG[4] =  s4[03090108....]
REG[1] =  i:3
   7 Halt             0    0    0               00 
SQL: [;SELECT a FROM t1 WHERE a=1 ORDER BY a;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0   15 0             01 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    3    0               00 
   2 OpenRead         2   15    0 k(2,,)        02 root=15 iDb=0; t1abc
   3 Explain          3    0    0 SEARCH TABLE t1 USING COVERING INDEX t1abc (a=?) 00 
   4 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
   5 SeekGE           2   10    1 1             00 key=r[1]
REG[1] =  i:1
  10 Halt             0    0    0               00 
SQL: [;
;DELETE FROM t1 WHERE a IN (2, 4, 6, 8);]
VDBE Trace:
   0 Init             0   65    0               00 Start at 65
  65 Transaction      0    1   15 0             01 usesStmtJournal=0
  66 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    2    0 2             08 root=2 iDb=0; t1
   3 OpenWrite        1   15    0 k(2,,)        02 root=15 iDb=0; t1abc
   4 Explain          4    0    0 SEARCH TABLE t1 USING INDEX t1abc (a=?) 00 
   5 Integer         20    3    0               00 r[3]=20; return address
REG[3] =  i:20
   6 Once             0   20    0               00 
   7 OpenEphemeral   13    1    0 k(1,B)        00 nColumn=1; RHS of IN operator
   8 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
   9 MakeRecord       4    1    5 A             00 r[5]=mkrec(r[4])
REG[5] =  s3[020102...]
  10 IdxInsert       13    5    4 1             00 key=r[5]
REG[5] =  s3[020102...]
  11 Integer          4    4    0               00 r[4]=4
REG[4] =  i:4
  12 MakeRecord       4    1    5 A             00 r[5]=mkrec(r[4])
REG[5] =  s3[020104...]
  13 IdxInsert       13    5    4 1             00 key=r[5]
REG[5] =  s3[020104...]
  14 Integer          6    4    0               00 r[4]=6
REG[4] =  i:6
  15 MakeRecord       4    1    5 A             00 r[5]=mkrec(r[4])
REG[5] =  s3[020106...]
  16 IdxInsert       13    5    4 1             00 key=r[5]
REG[5] =  s3[020106...]
  17 Integer          8    4    0               00 r[4]=8
REG[4] =  i:8
  18 MakeRecord       4    1    5 A             00 r[5]=mkrec(r[4])
REG[5] =  s3[020108...]
  19 IdxInsert       13    5    4 1             00 key=r[5]
REG[5] =  s3[020108...]
  20 Return           3    0    0               00 
REG[3] =  i:20
  21 Rewind          13   64    0               00 
  22 Column          13    0    2               00 r[2]=
REG[2] =  i:2
  23 IsNull           2   63    0               00 if r[2]==NULL goto 63
REG[2] =  i:2
  24 SeekGE           1   63    2 1             00 key=r[2]
REG[2] =  i:2
  63 Next            13   22    0               00 
  22 Column          13    0    2               00 r[2]=
REG[2] =  i:4
  23 IsNull           2   63    0               00 if r[2]==NULL goto 63
REG[2] =  i:4
  24 SeekGE           1   63    2 1             00 key=r[2]
REG[2] =  i:4
  63 Next            13   22    0               00 
  22 Column          13    0    2               00 r[2]=
REG[2] =  i:6
  23 IsNull           2   63    0               00 if r[2]==NULL goto 63
REG[2] =  i:6
  24 SeekGE           1   63    2 1             00 key=r[2]
REG[2] =  i:6
  63 Next            13   22    0               00 
  22 Column          13    0    2               00 r[2]=
REG[2] =  i:8
  23 IsNull           2   63    0               00 if r[2]==NULL goto 63
REG[2] =  i:8
  24 SeekGE           1   63    2 1             00 key=r[2]
REG[2] =  i:8
  63 Next            13   22    0               00 
  64 Halt             0    0    0               00 
SQL: [;
;DELETE FROM t1 WHERE a=1;]
VDBE Trace:
   0 Init             0   46    0               00 Start at 46
  46 Transaction      0    1   15 0             01 usesStmtJournal=0
  47 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    2    0 2             08 root=2 iDb=0; t1
   3 OpenWrite        1   15    0 k(2,,)        02 root=15 iDb=0; t1abc
   4 Explain          4    0    0 SEARCH TABLE t1 USING INDEX t1abc (a=?) 00 
   5 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   6 SeekGE           1   45    2 1             00 key=r[2]
REG[2] =  i:1
  45 Halt             0    0    0               00 
SQL: [;
;PRAGMA integrity_check
;]
VDBE Trace:
   0 Init             0  300  297               00 Start at 300
 300 Transaction      0    0   15 0             01 usesStmtJournal=0
 301 Transaction      1    0    0 0             01 usesStmtJournal=0
 302 Goto             0    1    0               00 
   1 Integer         99    1    0               00 r[1]=99
REG[1] =  i:99
   2 IntegrityCk      2   15    1 [14,2,15,13,12,11,10,9,8,7,6,5,4,3,1] 00 
   3 IsNull           2    9    0               00 if r[2]==NULL goto 9
REG[2] =  NULL
   9 OpenRead         1   14    0 2             00 root=14 iDb=0; c1
  10 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  11 Rewind           1   15    0               00 
  12 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  13 Column           1    1    3               80 r[3]=
REG[3] =  i:2
  14 Next             1   12    0               00 
  12 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
  13 Column           1    1    3               80 r[3]=
REG[3] =  i:8
  14 Next             1   12    0               00 
  12 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:2
  13 Column           1    1    3               80 r[3]=
REG[3] =  i:8
  14 Next             1   12    0               00 
  15 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  16 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  17 OpenRead         2   15    0 k(2,,)        00 root=15 iDb=0; t1abc
  18 OpenRead         3   13    0 k(2,,)        00 root=13 iDb=0; c0
  19 OpenRead         4   12    0 k(2,,)        00 root=12 iDb=0; t0
  20 OpenRead         5   11    0 k(2,,)        00 root=11 iDb=0; t2i1
  21 OpenRead         6   10    0 k(2,,)        00 root=10 iDb=0; t1i1
  22 OpenRead         7    9    0 k(2,,)        00 root=9 iDb=0; x
  23 OpenRead         8    8    0 k(2,,)        00 root=8 iDb=0; tr2
  24 OpenRead         9    7    0 k(2,,)        00 root=7 iDb=0; t2
  25 OpenRead        10    6    0 k(2,,)        00 root=6 iDb=0; tr1
  26 OpenRead        11    5    0 k(2,,)        00 root=5 iDb=0; tt1
  27 OpenRead        12    4    0 k(2,,)        00 root=4 iDb=0; xyz
  28 OpenRead        13    3    0 k(2,,)        00 root=3 iDb=0; v1
  29 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  30 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  31 Integer          0    9    0               00 r[9]=0
REG[9] =  i:0
  32 Integer          0   10    0               00 r[10]=0
REG[10] =  i:0
  33 Integer          0   11    0               00 r[11]=0
REG[11] =  i:0
  34 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  35 Integer          0   13    0               00 r[13]=0
REG[13] =  i:0
  36 Integer          0   14    0               00 r[14]=0
REG[14] =  i:0
  37 Integer          0   15    0               00 r[15]=0
REG[15] =  i:0
  38 Integer          0   16    0               00 r[16]=0
REG[16] =  i:0
  39 Integer          0   17    0               00 r[17]=0
REG[17] =  i:0
  40 Integer          0   18    0               00 r[18]=0
REG[18] =  i:0
  41 Integer          0   19    0               00 r[19]=0
REG[19] =  i:0
  42 Rewind           1  186    0               00 
 186 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
 187 Count            2    3    0               00 r[3]=count()
REG[3] =  i:0
 188 Eq               8  194    3               90 if r[3]==r[8] goto 194
REG[8] =  i:0
REG[3] =  i:0
 194 Count            3    3    0               00 r[3]=count()
REG[3] =  i:0
 195 Eq               9  201    3               90 if r[3]==r[9] goto 201
REG[9] =  i:0
REG[3] =  i:0
 201 Count            4    3    0               00 r[3]=count()
REG[3] =  i:0
 202 Eq              10  208    3               90 if r[3]==r[10] goto 208
REG[10] =  i:0
REG[3] =  i:0
 208 Count            5    3    0               00 r[3]=count()
REG[3] =  i:0
 209 Eq              11  215    3               90 if r[3]==r[11] goto 215
REG[11] =  i:0
REG[3] =  i:0
 215 Count            6    3    0               00 r[3]=count()
REG[3] =  i:0
 216 Eq              12  222    3               90 if r[3]==r[12] goto 222
REG[12] =  i:0
REG[3] =  i:0
 222 Count            7    3    0               00 r[3]=count()
REG[3] =  i:0
 223 Eq              13  229    3               90 if r[3]==r[13] goto 229
REG[13] =  i:0
REG[3] =  i:0
 229 Count            8    3    0               00 r[3]=count()
REG[3] =  i:0
 230 Eq              14  236    3               90 if r[3]==r[14] goto 236
REG[14] =  i:0
REG[3] =  i:0
 236 Count            9    3    0               00 r[3]=count()
REG[3] =  i:0
 237 Eq              15  243    3               90 if r[3]==r[15] goto 243
REG[15] =  i:0
REG[3] =  i:0
 243 Count           10    3    0               00 r[3]=count()
REG[3] =  i:0
 244 Eq              16  250    3               90 if r[3]==r[16] goto 250
REG[16] =  i:0
REG[3] =  i:0
 250 Count           11    3    0               00 r[3]=count()
REG[3] =  i:0
 251 Eq              17  257    3               90 if r[3]==r[17] goto 257
REG[17] =  i:0
REG[3] =  i:0
 257 Count           12    3    0               00 r[3]=count()
REG[3] =  i:0
 258 Eq              18  264    3               90 if r[3]==r[18] goto 264
REG[18] =  i:0
REG[3] =  i:0
 264 Count           13    3    0               00 r[3]=count()
REG[3] =  i:0
 265 Eq              19  271    3               90 if r[3]==r[19] goto 271
REG[19] =  i:0
REG[3] =  i:0
 271 OpenRead         1    1    0 5             00 root=1 iDb=0; sqlite_master
 272 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
 273 Rewind           1  277    0               00 
 274 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
 275 Column           1    4    3               80 r[3]=
REG[3] =   s21[CREATE TABLE t1](8)
 276 Next             1  274    0               00 
 274 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
 275 Column           1    4    3               80 r[3]=
REG[3] =   s110[CREATE TRIGGER ](8)
 276 Next             1  274    0               00 
 274 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:2
 275 Column           1    4    3               80 r[3]=
REG[3] =   s25[CREATE INDEX v1](8)
 276 Next             1  274    0               00 
 274 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:3
 275 Column           1    4    3               80 r[3]=
REG[3] =   s26[CREATE INDEX xy](8)
 276 Next             1  274    0               00 
 274 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:4
 275 Column           1    4    3               80 r[3]=
REG[3] =   s26[CREATE INDEX tt](8)
 276 Next             1  274    0               00 
 274 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:5
 275 Column           1    4    3               80 r[3]=
REG[3] =   s26[CREATE INDEX tr](8)
 276 Next             1  274    0               00 
 274 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:6
 275 Column           1    4    3               80 r[3]=
REG[3] =   s25[CREATE INDEX t2](8)
 276 Next             1  274    0               00 
 274 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:7
 275 Column           1    4    3               80 r[3]=
REG[3] =   s26[CREATE INDEX tr](8)
 276 Next             1  274    0               00 
 274 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:8
 275 Column           1    4    3               80 r[3]=
REG[3] =   s24[CREATE INDEX x ](8)
 276 Next             1  274    0               00 
 274 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:9
 275 Column           1    4    3               80 r[3]=
REG[3] =   s27[CREATE INDEX t1](8)
 276 Next             1  274    0               00 
 274 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:10
 275 Column           1    4    3               80 r[3]=
REG[3] =   s27[CREATE INDEX t2](8)
 276 Next             1  274    0               00 
 274 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:11
 275 Column           1    4    3               80 r[3]=
REG[3] =   s25[CREATE INDEX t0](8)
 276 Next             1  274    0               00 
 274 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:12
 275 Column           1    4    3               80 r[3]=
REG[3] =   s25[CREATE INDEX c0](8)
 276 Next             1  274    0               00 
 274 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:13
 275 Column           1    4    3               80 r[3]=
REG[3] =   s32[CREATE TABLE c1](8)
 276 Next             1  274    0               00 
 274 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:14
 275 Column           1    4    3               80 r[3]=
REG[3] =   s28[CREATE INDEX t1](8)
 276 Next             1  274    0               00 
 277 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
 278 IntegrityCk      2    1    1 [1]           01 
 279 IsNull           2  285    0               00 if r[2]==NULL goto 285
REG[2] =  NULL
 285 OpenRead         1    1    1 5             00 root=1 iDb=1; sqlite_temp_master
 286 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
 287 Rewind           1  291    0               00 
 291 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
 292 AddImm           1  -99    0               00 r[1]=r[1]+-99
REG[1] =  i:99
 293 IfNotZero        1  296    0               00 if r[1]!=0 then r[1]--, goto 296
REG[1] =  i:0
 294 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
 295 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
 296 Halt             0    0    0               00 
SQL: [SELECT b FROM t1 WHERE b==10
;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0   15 0             01 usesStmtJournal=0
  11 Goto             0    1    0               00 
   1 OpenRead         1   12    0 k(2,,)        02 root=12 iDb=0; t0
   2 Explain          2    0    0 SEARCH TABLE t1 USING COVERING INDEX t0 (b=?) 00 
   3 Integer         10    1    0               00 r[1]=10
REG[1] =  i:10
   4 SeekGE           1    9    1 1             00 key=r[1]
REG[1] =  i:10
   9 Halt             0    0    0               00 
SQL: [CREATE TABLE t1abd(t3 NUM,m);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   15 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:16
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:16
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:16
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:16
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:16
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:16
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t1abd         00 r[7]='t1abd'
REG[7] =   t5[t1abd](8)
  20 String8          0    8    0 t1abd         00 r[8]='t1abd'
REG[8] =   t5[t1abd](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:16
  22 String8          0   10    0 CREATE TABLE t1abd(t3 NUM,m) 00 r[10]='CREATE TABLE t1abd(t3 NUM,m)'
REG[10] =   t28[CREATE TABLE t1](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s50[0617171701457461626C657431616264.....Etablet1abd]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s50[0617171701457461626C657431616264.....Etablet1abd]
REG[5] =  i:16
  25 SetCookie        0    1   16               00 
  26 ParseSchema      0    0    0 tbl_name='t1abd' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   16 0             00 usesStmtJournal=0
  16 String8          0    2    0 t1abd         00 r[2]='t1abd'
REG[2] =   t5[t1abd](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abd](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abd](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abd](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abd](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abd](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abd](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abd](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abd](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abd](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abd](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abd](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abd](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abd](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[c1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abd](8)
REG[1] =   s2[c1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abd](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[t1abd](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[t1abd](8)
REG[1] =   s5[t1abd](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s5[t1abd](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:16
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s28[CREATE TABLE t1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s5[t1abd](8)
REG[5] =  i:16
REG[6] =   s28[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [SELECT d FROM c1 WHERE d<0.5 ORDER BY d
  
;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    0   16 0             01 usesStmtJournal=0
  22 Real             0    2    0 0.5           00 r[2]=0.5
REG[2] =  r:0.5
  23 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0   14    0 2             00 root=14 iDb=0; c1
   3 Explain          3    0    0 SCAN TABLE c1 00 
   4 Rewind           0   13    0               00 
   5 Column           0    1    1               00 r[1]=c1.d
REG[1] =  i:2
   6 RealAffinity     1    0    0               00 
REG[1] =  i:2
   7 Ge               2   12    1 (BINARY)      55 if r[1]>=r[2] goto 12
REG[2] =  r:0.5
REG[1] =  r:2
  12 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=c1.d
REG[1] =  i:8
   6 RealAffinity     1    0    0               00 
REG[1] =  i:8
   7 Ge               2   12    1 (BINARY)      55 if r[1]>=r[2] goto 12
REG[2] =  r:0.5
REG[1] =  r:8
  12 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=c1.d
REG[1] =  i:8
   6 RealAffinity     1    0    0               00 
REG[1] =  i:8
   7 Ge               2   12    1 (BINARY)      55 if r[1]>=r[2] goto 12
REG[2] =  r:0.5
REG[1] =  r:8
  12 Next             0    5    0               01 
  13 Explain         13    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  14 OpenPseudo       2    6    3               00 3 columns in r[6]
  15 SorterSort       1   20    0               00 
  20 Halt             0    0    0               00 
SQL: [SELECT v2 FROM c1 WHERE v2>-0.5 ORDER BY v2
  
;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    0   16 0             01 usesStmtJournal=0
  22 Real             0    2    0 -0.5          00 r[2]=-0.5
REG[2] =  r:-0.5
  23 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0   14    0 1             00 root=14 iDb=0; c1
   3 Explain          3    0    0 SCAN TABLE c1 00 
   4 Rewind           0   13    0               00 
   5 Column           0    0    1               00 r[1]=c1.v2
REG[1] =  i:1
   6 RealAffinity     1    0    0               00 
REG[1] =  i:1
   7 Le               2   12    1 (BINARY)      55 if r[1]<=r[2] goto 12
REG[2] =  r:-0.5
REG[1] =  r:1
   8 Column           0    0    3               00 r[3]=c1.v2
REG[3] =  i:1
   9 RealAffinity     3    0    0               00 
REG[3] =  i:1
  10 MakeRecord       3    1    5               00 r[5]=mkrec(r[3])
REG[5] =  s10[02073FF0000000000000..?.......]
  11 SorterInsert     1    5    3 1             00 key=r[5]
REG[5] =  s10[02073FF0000000000000..?.......]
  12 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=c1.v2
REG[1] =  i:3
   6 RealAffinity     1    0    0               00 
REG[1] =  i:3
   7 Le               2   12    1 (BINARY)      55 if r[1]<=r[2] goto 12
REG[2] =  r:-0.5
REG[1] =  r:3
   8 Column           0    0    3               00 r[3]=c1.v2
REG[3] =  i:3
   9 RealAffinity     3    0    0               00 
REG[3] =  i:3
  10 MakeRecord       3    1    5               00 r[5]=mkrec(r[3])
REG[5] =  s10[02074008000000000000..@.......]
  11 SorterInsert     1    5    3 1             00 key=r[5]
REG[5] =  s10[02074008000000000000..@.......]
  12 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=c1.v2
REG[1] =  i:1
   6 RealAffinity     1    0    0               00 
REG[1] =  i:1
   7 Le               2   12    1 (BINARY)      55 if r[1]<=r[2] goto 12
REG[2] =  r:-0.5
REG[1] =  r:1
   8 Column           0    0    3               00 r[3]=c1.v2
REG[3] =  i:1
   9 RealAffinity     3    0    0               00 
REG[3] =  i:1
  10 MakeRecord       3    1    5               00 r[5]=mkrec(r[3])
REG[5] =  s10[02073FF0000000000000..?.......]
  11 SorterInsert     1    5    3 1             00 key=r[5]
REG[5] =  s10[02073FF0000000000000..?.......]
  12 Next             0    5    0               01 
  13 Explain         13    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  14 OpenPseudo       2    6    3               00 3 columns in r[6]
  15 SorterSort       1   20    0               00 
  16 SorterData       1    6    2               00 r[6]=data
  17 Column           2    0    4               00 r[4]=v2
REG[4] =  r:1
  18 ResultRow        4    1    0               00 output=r[4]
REG[4] =  r:1
  19 SorterNext       1   16    0               00 
  16 SorterData       1    6    2               00 r[6]=data
  17 Column           2    0    4               00 r[4]=v2
REG[4] =  r:1
  18 ResultRow        4    1    0               00 output=r[4]
REG[4] =  r:1
  19 SorterNext       1   16    0               00 
  16 SorterData       1    6    2               00 r[6]=data
  17 Column           2    0    4               00 r[4]=v2
REG[4] =  r:3
  18 ResultRow        4    1    0               00 output=r[4]
REG[4] =  r:3
  19 SorterNext       1   16    0               00 
  20 Halt             0    0    0               00 
SQL: [;
;SELECT d FROM c1 WHERE d='';]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0   16 0             01 usesStmtJournal=0
  13 String8          0    2    0               00 r[2]=''
REG[2] =   t0[](8)
  14 Goto             0    1    0               00 
   1 OpenRead         0   14    0 2             00 root=14 iDb=0; c1
   2 Explain          2    0    0 SCAN TABLE c1 00 
   3 Rewind           0   11    0               00 
   4 Column           0    1    1               00 r[1]=c1.d
REG[1] =  i:2
   5 RealAffinity     1    0    0               00 
REG[1] =  i:2
   6 Ne               2   10    1 (BINARY)      55 if r[1]!=r[2] goto 10
REG[2] =   t0[](8)
REG[1] =  r:2
  10 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=c1.d
REG[1] =  i:8
   5 RealAffinity     1    0    0               00 
REG[1] =  i:8
   6 Ne               2   10    1 (BINARY)      55 if r[1]!=r[2] goto 10
REG[2] =   t0[](8)
REG[1] =  r:8
  10 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=c1.d
REG[1] =  i:8
   5 RealAffinity     1    0    0               00 
REG[1] =  i:8
   6 Ne               2   10    1 (BINARY)      55 if r[1]!=r[2] goto 10
REG[2] =   t0[](8)
REG[1] =  r:8
  10 Next             0    4    0               01 
  11 Halt             0    0    0               00 
SQL: [;
;SELECT v2 FROM c1 WHERE v2>=123;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0   16 0             01 usesStmtJournal=0
  13 Integer        123    2    0               00 r[2]=123
REG[2] =  i:123
  14 Goto             0    1    0               00 
   1 OpenRead         0   14    0 1             00 root=14 iDb=0; c1
   2 Explain          2    0    0 SCAN TABLE c1 00 
   3 Rewind           0   11    0               00 
   4 Column           0    0    1               00 r[1]=c1.v2
REG[1] =  i:1
   5 RealAffinity     1    0    0               00 
REG[1] =  i:1
   6 Lt               2   10    1 (BINARY)      55 if r[1]<r[2] goto 10
REG[2] =  i:123
REG[1] =  r:1
  10 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=c1.v2
REG[1] =  i:3
   5 RealAffinity     1    0    0               00 
REG[1] =  i:3
   6 Lt               2   10    1 (BINARY)      55 if r[1]<r[2] goto 10
REG[2] =  i:123
REG[1] =  r:3
  10 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=c1.v2
REG[1] =  i:1
   5 RealAffinity     1    0    0               00 
REG[1] =  i:1
   6 Lt               2   10    1 (BINARY)      55 if r[1]<r[2] goto 10
REG[2] =  i:123
REG[1] =  r:1
  10 Next             0    4    0               01 
  11 Halt             0    0    0               00 
SQL: [;
;SELECT b FROM t1 WHERE b<'abc';]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0   16 0             01 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 OpenRead         1   12    0 k(2,,)        00 root=12 iDb=0; t0
   2 Explain          2    0    0 SEARCH TABLE t1 USING COVERING INDEX t0 (b<?) 00 
   3 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   4 SeekGT           1   10    1 1             00 key=r[1]
REG[1] =  NULL
  10 Halt             0    0    0               00 
SQL: [;
;SELECT b FROM t1 WHERE b<='';]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0   16 0             01 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 OpenRead         1   12    0 k(2,,)        00 root=12 iDb=0; t0
   2 Explain          2    0    0 SEARCH TABLE t1 USING COVERING INDEX t0 (b<?) 00 
   3 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   4 SeekGT           1   10    1 1             00 key=r[1]
REG[1] =  NULL
  10 Halt             0    0    0               00 
SQL: [;
;SELECT b FROM t1 WHERE a<'';]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0   16 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 OpenRead         1   15    0 k(2,,)        00 root=15 iDb=0; t1abc
   3 Explain          3    0    0 SEARCH TABLE t1 USING INDEX t1abc (a<?) 00 
   4 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   5 SeekGT           1   12    1 1             00 key=r[1]
REG[1] =  NULL
  12 Halt             0    0    0               00 
SQL: [;INSERT INTO c1 VALUES('12.33e04',2);]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    1   16 0             01 usesStmtJournal=0
   9 Goto             0    1    0               00 
   1 OpenWrite        0   14    0 2             00 root=14 iDb=0; c1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   3 String8          0    2    0 12.33e04      00 r[2]='12.33e04'
REG[2] =   t8[12.33e04](8)
   4 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   5 MakeRecord       2    2    4 EE            00 r[4]=mkrec(r[2..3])
REG[4] =  s7[03030101E1A402.......]
   6 Insert           0    4    1 c1            39 intkey=r[1] data=r[4]
REG[4] =  s7[03030101E1A402.......]
REG[1] =  i:4
   7 Halt             0    0    0               00 

Program received signal SIGSEGV, Segmentation fault.
__strcmp_avx2 () at ../sysdeps/x86_64/multiarch/strcmp-avx2.S:102
(gdb) #0  __strcmp_avx2 () at ../sysdeps/x86_64/multiarch/strcmp-avx2.S:102
#1  0x000000000034a642 in sqlite3ExprCodeTarget (pParse=0x1432d70, pExpr=0x1427b50, target=8) at sqlite3.c:100443
#2  0x000000000034e9ee in sqlite3ExprCodeExprList (pParse=0x1432d70, pList=0x14292c0, target=8, srcReg=0, flags=1 '\001') at sqlite3.c:101202
#3  0x00000000003ae220 in pushOntoSorter (pParse=0x1432d70, pSort=0x7ffdcac92e58, pSelect=0x14263e0, regData=9, regOrigData=0, nData=1, nPrefixReg=1) at sqlite3.c:125256
#4  0x00000000003a9edf in selectInnerLoop (pParse=0x1432d70, p=0x14263e0, srcTab=-1, pSort=0x7ffdcac92e58, pDistinct=0x7ffdcac92f10, pDest=0x7ffdcac92ff8, iContinue=-4, iBreak=-2) at sqlite3.c:125809
#5  0x00000000002fe191 in sqlite3Select (pParse=0x1432d70, p=0x14263e0, pDest=0x7ffdcac92ff8) at sqlite3.c:130743
#6  0x00000000002fd24a in sqlite3Select (pParse=0x1432d70, p=0x143a2a0, pDest=0x7ffdcac93318) at sqlite3.c:130524
#7  0x0000000000309aa3 in sqlite3Insert (pParse=0x1432d70, pTabList=0x1431ab0, pSelect=0x143a2a0, pColumn=0x0, onError=11, pUpsert=0x0) at sqlite3.c:117162
#8  0x00000000003949b6 in codeTriggerProgram (pParse=0x1432d70, pStepList=0x143dbc0, orconf=11) at sqlite3.c:132245
#9  0x0000000000394209 in codeRowTrigger (pParse=0x7ffdcac94510, pTrigger=0x143e300, pTab=0x143d5f0, orconf=11) at sqlite3.c:132398
#10 0x000000000039393d in getRowTrigger (pParse=0x7ffdcac94510, pTrigger=0x143e300, pTab=0x143d5f0, orconf=11) at sqlite3.c:132455
#11 0x0000000000393453 in sqlite3CodeRowTriggerDirect (pParse=0x7ffdcac94510, p=0x143e300, pTab=0x143d5f0, reg=37, orconf=11, ignoreJump=-1) at sqlite3.c:132477
#12 0x0000000000363845 in sqlite3CodeRowTrigger (pParse=0x7ffdcac94510, pTrigger=0x143e300, op=120, pChanges=0x0, tr_tm=1, pTab=0x143d5f0, reg=37, orconf=11, ignoreJump=-1) at sqlite3.c:132571
#13 0x000000000030ad90 in sqlite3Insert (pParse=0x7ffdcac94510, pTabList=0x1431f60, pSelect=0x0, pColumn=0x0, onError=11, pUpsert=0x0) at sqlite3.c:117389
#14 0x00000000002ee6c8 in yy_reduce (yypParser=0x7ffdcac93b30, yyruleno=150, yyLookahead=1, yyLookaheadToken=..., pParse=0x7ffdcac94510) at sqlite3.c:151937
#15 0x00000000002e92f8 in sqlite3Parser (yyp=0x7ffdcac93b30, yymajor=1, yyminor=...) at sqlite3.c:152877
#16 0x00000000002a68b3 in sqlite3RunParser (pParse=0x7ffdcac94510, 
    zSql=0x143324c ";;INSERT INTO c1 VALUES('-.125E+04',13);;INSERT INTO c1 VALUES('.125E+0',14);;SELECT v2 FROM c1 ORDER BY v2, v2;;\n;CREATE TABLE rins(rins2 UNIQUE PRIMARY KEY);;CREATE TABLE aaa(bbb UNIQUE PRIMARY KEY "..., pzErrMsg=0x7ffdcac946f0) at sqlite3.c:154013
#17 0x00000000002a1683 in sqlite3Prepare (db=0x141a3f0, 
    zSql=0x141b252 ";INSERT INTO t1 VALUES('+123.10000E+0003',8);;INSERT INTO c1 VALUES('-.125E+04',13);;INSERT INTO c1 VALUES('.125E+0',14);;SELECT v2 FROM c1 ORDER BY v2, v2;;\n;CREATE TABLE rins(rins2 UNIQUE PRIMARY KE"..., nBytes=555, prepFlags=128, pReprepare=0x0, ppStmt=0x7ffdcac94828, pzTail=0x7ffdcac94810) at sqlite3.c:124303
#18 0x00000000002a0d4e in sqlite3LockAndPrepare (db=0x141a3f0, 
    zSql=0x141b252 ";INSERT INTO t1 VALUES('+123.10000E+0003',8);;INSERT INTO c1 VALUES('-.125E+04',13);;INSERT INTO c1 VALUES('.125E+0',14);;SELECT v2 FROM c1 ORDER BY v2, v2;;\n;CREATE TABLE rins(rins2 UNIQUE PRIMARY KE"..., nBytes=555, prepFlags=128, pOld=0x0, ppStmt=0x7ffdcac94828, pzTail=0x7ffdcac94810) at sqlite3.c:124403
#19 0x000000000029247f in sqlite3_prepare_v2 (db=0x141a3f0, 
    zSql=0x141b252 ";INSERT INTO t1 VALUES('+123.10000E+0003',8);;INSERT INTO c1 VALUES('-.125E+04',13);;INSERT INTO c1 VALUES('.125E+0',14);;SELECT v2 FROM c1 ORDER BY v2, v2;;\n;CREATE TABLE rins(rins2 UNIQUE PRIMARY KE"..., nBytes=555, ppStmt=0x7ffdcac94828, pzTail=0x7ffdcac94810) at sqlite3.c:124487
#20 0x0000000000256bd0 in main (argc=1, argv=0x7ffdcac949d8) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 53828] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
