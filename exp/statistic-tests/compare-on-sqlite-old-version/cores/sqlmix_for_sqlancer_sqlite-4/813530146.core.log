GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000553,sig:06,src:022248+013493,time:36145780,execs:12453169,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [CREATE TABLE t1(a int, b int);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    0 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:1
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:1
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t1            00 r[7]='t1'
REG[7] =   t2[t1](8)
  20 String8          0    8    0 t1            00 r[8]='t1'
REG[8] =   t2[t1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  22 String8          0   10    0 CREATE TABLE t1(a int, b int) 00 r[10]='CREATE TABLE t1(a int, b int)'
REG[10] =   t29[CREATE TABLE t1](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s45[0617111101477461626C657431743102.....Gtablet1t1.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s45[0617111101477461626C657431743102.....Gtablet1t1.]
REG[5] =  i:1
  25 SetCookie        0    1    1               00 
  26 ParseSchema      0    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    1 0             00 usesStmtJournal=0
  16 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s29[CREATE TABLE t1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t1](8)
REG[5] =  i:2
REG[6] =   s29[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;
;DELETE FROM t1 WHERE a=2;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    1    1 0             01 usesStmtJournal=0
  13 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  14 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   11    0               00 
  11 Halt             0    0    0               00 
SQL: [;INSERT INTO t1 VALUES (1,6);]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    1    1 0             01 usesStmtJournal=0
   9 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 Integer          6    3    0               00 r[3]=6
REG[3] =  i:6
   5 MakeRecord       2    2    4 DD            00 r[4]=mkrec(r[2..3])
REG[4] =  s4[03090106....]
   6 Insert           0    4    1 t1            39 intkey=r[1] data=r[4]
REG[4] =  s4[03090106....]
REG[1] =  i:1
   7 Halt             0    0    0               00 
SQL: [;INSERT INTO t1 VALUES (1,9);]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    1    1 0             01 usesStmtJournal=0
   9 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 Integer          9    3    0               00 r[3]=9
REG[3] =  i:9
   5 MakeRecord       2    2    4 DD            00 r[4]=mkrec(r[2..3])
REG[4] =  s4[03090109....]
   6 Insert           0    4    1 t1            39 intkey=r[1] data=r[4]
REG[4] =  s4[03090109....]
REG[1] =  i:2
   7 Halt             0    0    0               00 
SQL: [;
;SELECT a FROM t1 ORDER BY a;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    1 0             01 usesStmtJournal=0
  18 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0    9    0               00 
   5 Column           0    0    1               00 r[1]=t1.a
REG[1] =  i:1
   6 MakeRecord       1    1    3               00 r[3]=mkrec(r[1])
REG[3] =  s2[0209..]
   7 SorterInsert     1    3    1 1             00 key=r[3]
REG[3] =  s2[0209..]
   8 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=t1.a
REG[1] =  i:1
   6 MakeRecord       1    1    3               00 r[3]=mkrec(r[1])
REG[3] =  s2[0209..]
   7 SorterInsert     1    3    1 1             00 key=r[3]
REG[3] =  s2[0209..]
   8 Next             0    5    0               01 
   9 Explain          9    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  10 OpenPseudo       2    4    3               00 3 columns in r[4]
  11 SorterSort       1   16    0               00 
  12 SorterData       1    4    2               00 r[4]=data
  13 Column           2    0    2               00 r[2]=a
REG[2] =  i:1
  14 ResultRow        2    1    0               00 output=r[2]
REG[2] =  i:1
  15 SorterNext       1   12    0               00 
  12 SorterData       1    4    2               00 r[4]=data
  13 Column           2    0    2               00 r[2]=a
REG[2] =  i:1
  14 ResultRow        2    1    0               00 output=r[2]
REG[2] =  i:1
  15 SorterNext       1   12    0               00 
  16 Halt             0    0    0               00 
SQL: [;INSERT INTO t1 VALUES('+1.0',5);]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    1    1 0             01 usesStmtJournal=0
   9 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   3 String8          0    2    0 +1.0          00 r[2]='+1.0'
REG[2] =   t4[+1.0](8)
   4 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
   5 MakeRecord       2    2    4 DD            00 r[4]=mkrec(r[2..3])
REG[4] =  s4[03090105....]
   6 Insert           0    4    1 t1            39 intkey=r[1] data=r[4]
REG[4] =  s4[03090105....]
REG[1] =  i:3
   7 Halt             0    0    0               00 
SQL: [;
;SELECT a FROM t1 WHERE a==0 ORDER BY a
  
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    1 0             01 usesStmtJournal=0
  12 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
  13 Goto             0    1    0               00 
   1 Noop             1    3    0               00 
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   10    0               00 
   5 Column           0    0    1               00 r[1]=t1.a
REG[1] =  i:1
   6 Ne               2    9    1 (BINARY)      54 if r[1]!=r[2] goto 9
REG[2] =  i:0
REG[1] =  i:1
   9 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=t1.a
REG[1] =  i:1
   6 Ne               2    9    1 (BINARY)      54 if r[1]!=r[2] goto 9
REG[2] =  i:0
REG[1] =  i:1
   9 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=t1.a
REG[1] =  i:1
   6 Ne               2    9    1 (BINARY)      54 if r[1]!=r[2] goto 9
REG[2] =  i:0
REG[1] =  i:1
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
SQL: [;SELECT a FROM t1 WHERE a==0 ORDER BY a
  
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    1 0             01 usesStmtJournal=0
  12 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
  13 Goto             0    1    0               00 
   1 Noop             1    3    0               00 
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   10    0               00 
   5 Column           0    0    1               00 r[1]=t1.a
REG[1] =  i:1
   6 Ne               2    9    1 (BINARY)      54 if r[1]!=r[2] goto 9
REG[2] =  i:0
REG[1] =  i:1
   9 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=t1.a
REG[1] =  i:1
   6 Ne               2    9    1 (BINARY)      54 if r[1]!=r[2] goto 9
REG[2] =  i:0
REG[1] =  i:1
   9 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=t1.a
REG[1] =  i:1
   6 Ne               2    9    1 (BINARY)      54 if r[1]!=r[2] goto 9
REG[2] =  i:0
REG[1] =  i:1
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
SQL: [;
;PRAGMA integrity_check
;]
VDBE Trace:
   0 Init             0   45   42               00 Start at 45
  45 Transaction      0    0    1 0             01 usesStmtJournal=0
  46 Transaction      1    0    0 0             01 usesStmtJournal=0
  47 Goto             0    1    0               00 
   1 Integer         99    1    0               00 r[1]=99
REG[1] =  i:99
   2 IntegrityCk      2    2    1 [2,1]         00 
   3 IsNull           2    9    0               00 if r[2]==NULL goto 9
REG[2] =  NULL
   9 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  10 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  11 Rewind           1   15    0               00 
  12 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  13 Column           1    1    3               80 r[3]=
REG[3] =  i:6
  14 Next             1   12    0               00 
  12 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
  13 Column           1    1    3               80 r[3]=
REG[3] =  i:9
  14 Next             1   12    0               00 
  12 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:2
  13 Column           1    1    3               80 r[3]=
REG[3] =  i:5
  14 Next             1   12    0               00 
  15 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  16 OpenRead         1    1    0 5             00 root=1 iDb=0; sqlite_master
  17 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  18 Rewind           1   22    0               00 
  19 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  20 Column           1    4    3               80 r[3]=
REG[3] =   s29[CREATE TABLE t1](8)
  21 Next             1   19    0               00 
  22 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  23 IntegrityCk      2    1    1 [1]           01 
  24 IsNull           2   30    0               00 if r[2]==NULL goto 30
REG[2] =  NULL
  30 OpenRead         1    1    1 5             00 root=1 iDb=1; sqlite_temp_master
  31 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  32 Rewind           1   36    0               00 
  36 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  37 AddImm           1  -99    0               00 r[1]=r[1]+-99
REG[1] =  i:99
  38 IfNotZero        1   41    0               00 if r[1]!=0 then r[1]--, goto 41
REG[1] =  i:0
  39 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
  40 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
  41 Halt             0    0    0               00 
SQL: [;
;SELECT b FROM t1 WHERE a='';]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    1 0             01 usesStmtJournal=0
  11 String8          0    2    0               00 r[2]=''
REG[2] =   t0[](8)
  12 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=t1.a
REG[1] =  i:1
   5 Ne               2    8    1 (BINARY)      54 if r[1]!=r[2] goto 8
REG[2] =   t0[](8)
REG[1] =  i:1
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=t1.a
REG[1] =  i:1
   5 Ne               2    8    1 (BINARY)      54 if r[1]!=r[2] goto 8
REG[2] =   t0[](8)
REG[1] =  i:1
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=t1.a
REG[1] =  i:1
   5 Ne               2    8    1 (BINARY)      54 if r[1]!=r[2] goto 8
REG[2] =   t0[](8)
REG[1] =  i:1
   8 Next             0    4    0               01 
   9 Halt             0    0    0               00 
SQL: [;
;SELECT b FROM t1 WHERE a>'';]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    1 0             01 usesStmtJournal=0
  11 String8          0    2    0               00 r[2]=''
REG[2] =   t0[](8)
  12 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=t1.a
REG[1] =  i:1
   5 Le               2    8    1 (BINARY)      54 if r[1]<=r[2] goto 8
REG[2] =   t0[](8)
REG[1] =  i:1
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=t1.a
REG[1] =  i:1
   5 Le               2    8    1 (BINARY)      54 if r[1]<=r[2] goto 8
REG[2] =   t0[](8)
REG[1] =  i:1
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=t1.a
REG[1] =  i:1
   5 Le               2    8    1 (BINARY)      54 if r[1]<=r[2] goto 8
REG[2] =   t0[](8)
REG[1] =  i:1
   8 Next             0    4    0               01 
   9 Halt             0    0    0               00 
SQL: [;
;SELECT b FROM t1 WHERE b<='';]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    1 0             01 usesStmtJournal=0
  11 String8          0    2    0               00 r[2]=''
REG[2] =   t0[](8)
  12 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0    9    0               00 
   4 Column           0    1    1               00 r[1]=t1.b
REG[1] =  i:6
   5 Gt               2    8    1 (BINARY)      54 if r[1]>r[2] goto 8
REG[2] =   t0[](8)
REG[1] =  i:6
   6 Column           0    1    3               00 r[3]=t1.b
REG[3] =  i:6
   7 ResultRow        3    1    0               00 output=r[3]
REG[3] =  i:6
   8 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=t1.b
REG[1] =  i:9
   5 Gt               2    8    1 (BINARY)      54 if r[1]>r[2] goto 8
REG[2] =   t0[](8)
REG[1] =  i:9
   6 Column           0    1    3               00 r[3]=t1.b
REG[3] =  i:9
   7 ResultRow        3    1    0               00 output=r[3]
REG[3] =  i:9
   8 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=t1.b
REG[1] =  i:5
   5 Gt               2    8    1 (BINARY)      54 if r[1]>r[2] goto 8
REG[2] =   t0[](8)
REG[1] =  i:5
   6 Column           0    1    3               00 r[3]=t1.b
REG[3] =  i:5
   7 ResultRow        3    1    0               00 output=r[3]
REG[3] =  i:5
   8 Next             0    4    0               01 
   9 Halt             0    0    0               00 
SQL: [;SELECT b FROM t1 ORDER BY b, b;]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      0    0    1 0             01 usesStmtJournal=0
  19 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(2,B,B)      00 
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  i:6
   6 Column           0    1    2               00 r[2]=t1.b
REG[2] =  i:6
   7 MakeRecord       1    2    4               00 r[4]=mkrec(r[1..2])
REG[4] =  s5[0301010606.....]
   8 SorterInsert     1    4    1 2             00 key=r[4]
REG[4] =  s5[0301010606.....]
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  i:9
   6 Column           0    1    2               00 r[2]=t1.b
REG[2] =  i:9
   7 MakeRecord       1    2    4               00 r[4]=mkrec(r[1..2])
REG[4] =  s5[0301010909.....]
   8 SorterInsert     1    4    1 2             00 key=r[4]
REG[4] =  s5[0301010909.....]
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  i:5
   6 Column           0    1    2               00 r[2]=t1.b
REG[2] =  i:5
   7 MakeRecord       1    2    4               00 r[4]=mkrec(r[1..2])
REG[4] =  s5[0301010505.....]
   8 SorterInsert     1    4    1 2             00 key=r[4]
REG[4] =  s5[0301010505.....]
   9 Next             0    5    0               01 
  10 Explain         10    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  11 OpenPseudo       2    5    4               00 4 columns in r[5]
  12 SorterSort       1   17    0               00 
  13 SorterData       1    5    2               00 r[5]=data
  14 Column           2    1    3               00 r[3]=b
REG[3] =  i:5
  15 ResultRow        3    1    0               00 output=r[3]
REG[3] =  i:5
  16 SorterNext       1   13    0               00 
  13 SorterData       1    5    2               00 r[5]=data
  14 Column           2    1    3               00 r[3]=b
REG[3] =  i:6
  15 ResultRow        3    1    0               00 output=r[3]
REG[3] =  i:6
  16 SorterNext       1   13    0               00 
  13 SorterData       1    5    2               00 r[5]=data
  14 Column           2    1    3               00 r[3]=b
REG[3] =  i:9
  15 ResultRow        3    1    0               00 output=r[3]
REG[3] =  i:9
  16 SorterNext       1   13    0               00 
  17 Halt             0    0    0               00 
SQL: [;CREATE INDEX IF NOT EXISTS c ON t1(a || 0) WHERE a;]
VDBE Trace:
   0 Init             0   36    0               00 Start at 36
  36 Transaction      0    1    1 0             01 usesStmtJournal=0
  37 Integer          0   13    0               00 r[13]=0
REG[13] =  i:0
  38 Goto             0    1    0               00 
   1 Noop             0   35    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:3
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:2
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 c             00 r[4]='c'
REG[4] =   t1[c](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:3
   9 String8          0    7    0 CREATE INDEX c ON t1(a || 0) WHERE a 00 r[7]='CREATE INDEX c ON t1(a || 0) WHERE a'
REG[7] =   t36[CREATE INDEX c ](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s51[06170F110155696E6465786374310343.....Uindexct1.C]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s51[06170F110155696E6465786374310343.....Uindexct1.C]
REG[2] =  i:2
  12 SorterOpen       3    0    1 k(2,,)        00 
  13 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  14 Rewind           1   23    0               00 
  15 Column           1    0   10               00 r[10]=t1.a
REG[10] =  i:1
  16 IfNot           10   22    1               00 
REG[10] =  i:1
  17 Column           1    0   10               00 r[10]=t1.a
REG[10] =  i:1
  18 Concat          13   10   11               00 r[11]=r[10]+r[13]
REG[13] =  i:0
REG[10] =  i:1
REG[11] =   s2[10](8)
  19 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:1
  20 MakeRecord      11    2    9               00 r[9]=mkrec(r[11..12])
REG[9] =  s5[0311093130...10]
  21 SorterInsert     3    9    0               00 key=r[9]
REG[9] =  s5[0311093130...10]
  22 Next             1   15    0               00 
  15 Column           1    0   10               00 r[10]=t1.a
REG[10] =  i:1
  16 IfNot           10   22    1               00 
REG[10] =  i:1
  17 Column           1    0   10               00 r[10]=t1.a
REG[10] =  i:1
  18 Concat          13   10   11               00 r[11]=r[10]+r[13]
REG[13] =  si:0
REG[10] =  i:1
REG[11] =   s2[10](8)
  19 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:2
  20 MakeRecord      11    2    9               00 r[9]=mkrec(r[11..12])
REG[9] =  s6[031101313002...10.]
  21 SorterInsert     3    9    0               00 key=r[9]
REG[9] =  s6[031101313002...10.]
  22 Next             1   15    0               00 
  15 Column           1    0   10               00 r[10]=t1.a
REG[10] =  i:1
  16 IfNot           10   22    1               00 
REG[10] =  i:1
  17 Column           1    0   10               00 r[10]=t1.a
REG[10] =  i:1
  18 Concat          13   10   11               00 r[11]=r[10]+r[13]
REG[13] =  si:0
REG[10] =  i:1
REG[11] =   s2[10](8)
  19 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:3
  20 MakeRecord      11    2    9               00 r[9]=mkrec(r[11..12])
REG[9] =  s6[031101313003...10.]
  21 SorterInsert     3    9    0               00 key=r[9]
REG[9] =  s6[031101313003...10.]
  22 Next             1   15    0               00 
  23 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  24 SorterSort       3   29    0               00 
  25 SorterData       3    9    2               00 r[9]=data
  26 SeekEnd          2    0    0               00 
  27 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s5[0311093130...10]
  28 SorterNext       3   25    0               00 
  25 SorterData       3    9    2               00 r[9]=data
  26 SeekEnd          2    0    0               00 
  27 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s6[031101313002...10.]
  28 SorterNext       3   25    0               00 
  25 SorterData       3    9    2               00 r[9]=data
  26 SeekEnd          2    0    0               00 
  27 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s6[031101313003...10.]
  28 SorterNext       3   25    0               00 
  29 Close            1    0    0               00 
  30 Close            2    0    0               00 
  31 Close            3    0    0               00 
  32 SetCookie        0    1    2               00 
  33 ParseSchema      0    0    0 name='c' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 0             00 usesStmtJournal=0
  16 String8          0    2    0 c             00 r[2]='c'
REG[2] =   t1[c](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[c](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[c](8)
REG[1] =   s1[c](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[c](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s36[CREATE INDEX c ](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[c](8)
REG[5] =  i:3
REG[6] =   s36[CREATE INDEX c ](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  34 Expire           0    1    0               00 
  35 Halt             0    0    0               00 
SQL: [;;INSERT INTO t1(b,a) VALUES('0.0','1'),('1.0','1');]
VDBE Trace:
   0 Init             0   29    0               00 Start at 29
  29 Transaction      0    1    2 0             01 usesStmtJournal=0
  30 Integer          0   13    0               00 r[13]=0
REG[13] =  i:0
  31 Goto             0    1    0               00 
   1 InitCoroutine    4   10    2               00 
  10 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
  11 OpenWrite        1    3    0 k(2,,)        00 root=3 iDb=0; c
  12 Yield            4   28    0               00 
REG[4] =  i:1
REG[4] =  i:12
   2 Explain          2    0    0 SCAN 2 CONSTANT ROWS 00 
   3 String8          0    5    0 0.0           00 r[5]='0.0'
REG[5] =   t3[0.0](8)
   4 String8          0    6    0 1             00 r[6]='1'
REG[6] =   t1[1](8)
   5 Yield            4    0    0               00 
REG[4] =  i:12
REG[4] =  i:5
  13 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
  14 SCopy            6    2    0               00 r[2]=r[6]
REG[2] =   t1[1](8)
  15 SCopy            5    3    0               00 r[3]=r[5]
REG[3] =   t3[0.0](8)
  16 Affinity         2    2    0 DD            00 affinity(r[2..3])
  17 Noop             0    0    0               00 uniqueness check for c
  18 Null             0    9    0               00 r[9]=NULL
REG[9] =  NULL
  19 IfNot            2   23    1               00 
REG[2] =  i:1
  20 Concat          13    2   10               00 r[10]=r[2]+r[13]; c column 0
REG[13] =  i:0
REG[2] =  i:1
REG[10] =   s2[10](8)
  21 IntCopy          1   11    0               00 r[11]=r[1]; rowid
REG[11] =  i:4
  22 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11]); for c
REG[9] =  s6[031101313004...10.]
  23 IsNull           9   25    0               00 if r[9]==NULL goto 25
REG[9] =  s6[031101313004...10.]
  24 IdxInsert        1    9   10 2             10 key=r[9]
REG[9] =  s6[031101313004...10.]
  25 MakeRecord       2    2   12               00 r[12]=mkrec(r[2..3])
REG[12] =  s3[030908...]
  26 Insert           0   12    1 t1            39 intkey=r[1] data=r[12]
REG[12] =  s3[030908...]
REG[1] =  i:4
  27 Goto             0   12    0               00 
  12 Yield            4   28    0               00 
REG[4] =  i:5
REG[4] =  i:12
   6 String8          0    5    0 1.0           00 r[5]='1.0'
REG[5] =   t3[1.0](8)
   7 String8          0    6    0 1             00 r[6]='1'

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f74a47e4859 in __GI_abort () at abort.c:79
#2  0x00007f74a47e4729 in __assert_fail_base (fmt=0x7f74a497a588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x221a82 "(mFlags&MEM_Str)==0 || (pMem->n==pX->n && pMem->z==pX->z)", file=0x22873d "sqlite3.c", 
    line=75351, function=<optimized out>) at assert.c:92
#3  0x00007f74a47f5fd6 in __GI___assert_fail (assertion=0x221a82 "(mFlags&MEM_Str)==0 || (pMem->n==pX->n && pMem->z==pX->z)", file=0x22873d "sqlite3.c", line=75351, 
    function=0x208940 "void sqlite3VdbeMemAboutToChange(Vdbe *, Mem *)") at assert.c:101
#4  0x00000000003e1103 in sqlite3VdbeMemAboutToChange (pVdbe=0x21f4c80, pMem=0x2202120) at sqlite3.c:75351
#5  0x00000000003c031d in sqlite3VdbeExec (p=0x21f4c80) at sqlite3.c:84329
#6  0x0000000000411104 in sqlite3Step (p=0x21f4c80) at sqlite3.c:81930
#7  0x000000000029128d in sqlite3_step (pStmt=0x21f4c80) at sqlite3.c:81995
#8  0x00000000002570b9 in main (argc=1, argv=0x7ffcdc34fa28) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 54954] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
