GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000468,sig:11,src:022173+020327,time:20605254,execs:6638049,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
;pragma vdbe_listing=on;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;PRAGMA foreign_key_check='x'
;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [;ATTACH '' AS vacuum_db
;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 String8          0    1    0               00 r[1]=''
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
   3 Null             0    3    0               00 r[3]=NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
VDBE Program Listing:
   0 Init             0   11    0               00 Start at 11
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
   8 ResultRow        1    3    0               00 output=r[1..3]
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
  11 Transaction      2    0    0 0             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
SQL: [;SELECT *, '|'
      FROM pragma_foreign_key_check AS x
      ORDER BY x."table";]
VDBE Program Listing:
   0 Init             0   27    0               00 Start at 27
   1 SorterOpen       1    7    0 k(1,B)        00 
   2 VOpen            0    0    0 vtab:7E1130   00 
   3 Explain          3    0    0 SCAN TABLE pragma_foreign_key_check AS x VIRTUAL TABLE INDEX 0: 00 
   4 Integer          0    1    0               00 r[1]=0
   5 Integer          0    2    0               00 r[2]=0
   6 VFilter          0   15    1               00 iplan=r[1] zplan=''
   7 VColumn          0    1    4               00 r[4]=vcolumn(1); pragma_foreign_key_check.rowid
   8 VColumn          0    2    5               00 r[5]=vcolumn(2); pragma_foreign_key_check.parent
   9 VColumn          0    3    6               00 r[6]=vcolumn(3); pragma_foreign_key_check.fkid
  10 String8          0    7    0 |             00 r[7]='|'
  11 VColumn          0    0    3               00 r[3]=vcolumn(0); pragma_foreign_key_check.table
  12 MakeRecord       3    5    9               00 r[9]=mkrec(r[3..7])
  13 SorterInsert     1    9    3 5             00 key=r[9]
  14 VNext            0    7    0               00 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2   10    7               00 7 columns in r[10]
  17 SorterSort       1   26    0               00 
  18 SorterData       1   10    2               00 r[10]=data
  19 Column           2    4    8               00 r[8]='|'
  20 Column           2    3    7               00 r[7]=fkid
  21 Column           2    2    6               00 r[6]=parent
  22 Column           2    1    5               00 r[5]=rowid
  23 Column           2    0    4               00 r[4]=table
  24 ResultRow        4    5    0               00 output=r[4..8]
  25 SorterNext       1   18    0               00 
  26 Halt             0    0    0               00 
  27 Transaction      0    0    6 0             01 usesStmtJournal=0
  28 Goto             0    1    0               00 
SQL: [PRAGMA foreign_key_check]
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 OpenRead         0    4    0 2             00 root=4 iDb=0; c
   2 String8          0    3    0 c             00 r[3]='c'
   3 OpenRead         1    3    0 k(2,,)        00 root=3 iDb=0
   4 Rewind           0   14    0               00 
   5 Column           0    1    8               00 r[8]=c.v1
   6 IsNull           8   13    0               00 if r[8]==NULL goto 13
   7 MakeRecord       8    1    7 B             00 r[7]=mkrec(r[8])
   8 Found            1   13    7 0             00 key=r[7]
   9 Rowid            0    4    0               00 r[4]=rowid
  10 String8          0    5    0 t1            00 r[5]='t1'
  11 Integer          0    6    0               00 r[6]=0
  12 ResultRow        3    4    0               00 output=r[3..6]
  13 Next             0    5    0               00 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    6 0             01 usesStmtJournal=0
  16 Goto             0    1    0               00 

Program received signal SIGSEGV, Segmentation fault.
__strcmp_avx2 () at ../sysdeps/x86_64/multiarch/strcmp-avx2.S:102
(gdb) #0  __strcmp_avx2 () at ../sysdeps/x86_64/multiarch/strcmp-avx2.S:102
#1  0x000000000034a642 in sqlite3ExprCodeTarget (pParse=0x7b6f90, pExpr=0x7a97f0, target=8) at sqlite3.c:100443
#2  0x000000000034e9ee in sqlite3ExprCodeExprList (pParse=0x7b6f90, pList=0x7a9340, target=8, srcReg=0, flags=1 '\001') at sqlite3.c:101202
#3  0x00000000003ae220 in pushOntoSorter (pParse=0x7b6f90, pSort=0x7ffc8f880178, pSelect=0x7a8080, regData=9, regOrigData=0, nData=1, nPrefixReg=1) at sqlite3.c:125256
#4  0x00000000003a9edf in selectInnerLoop (pParse=0x7b6f90, p=0x7a8080, srcTab=-1, pSort=0x7ffc8f880178, pDistinct=0x7ffc8f880230, pDest=0x7ffc8f880318, iContinue=-4, iBreak=-2) at sqlite3.c:125809
#5  0x00000000002fe191 in sqlite3Select (pParse=0x7b6f90, p=0x7a8080, pDest=0x7ffc8f880318) at sqlite3.c:130743
#6  0x00000000002fd24a in sqlite3Select (pParse=0x7b6f90, p=0x7b3c00, pDest=0x7ffc8f880638) at sqlite3.c:130524
#7  0x0000000000309aa3 in sqlite3Insert (pParse=0x7b6f90, pTabList=0x7b1fe0, pSelect=0x7b3c00, pColumn=0x0, onError=11, pUpsert=0x0) at sqlite3.c:117162
#8  0x00000000003949b6 in codeTriggerProgram (pParse=0x7b6f90, pStepList=0x7bbef0, orconf=11) at sqlite3.c:132245
#9  0x0000000000394209 in codeRowTrigger (pParse=0x7ffc8f881830, pTrigger=0x7bb2c0, pTab=0x7bc630, orconf=11) at sqlite3.c:132398
#10 0x000000000039393d in getRowTrigger (pParse=0x7ffc8f881830, pTrigger=0x7bb2c0, pTab=0x7bc630, orconf=11) at sqlite3.c:132455
#11 0x0000000000393453 in sqlite3CodeRowTriggerDirect (pParse=0x7ffc8f881830, p=0x7bb2c0, pTab=0x7bc630, reg=6, orconf=11, ignoreJump=-5) at sqlite3.c:132477
#12 0x0000000000363845 in sqlite3CodeRowTrigger (pParse=0x7ffc8f881830, pTrigger=0x7bb2c0, op=120, pChanges=0x0, tr_tm=1, pTab=0x7bc630, reg=6, orconf=11, ignoreJump=-5) at sqlite3.c:132571
#13 0x000000000030ad90 in sqlite3Insert (pParse=0x7ffc8f881830, pTabList=0x7b8250, pSelect=0x7ac6d0, pColumn=0x0, onError=11, pUpsert=0x0) at sqlite3.c:117389
#14 0x00000000002ee6c8 in yy_reduce (yypParser=0x7ffc8f880e50, yyruleno=150, yyLookahead=1, yyLookaheadToken=..., pParse=0x7ffc8f881830) at sqlite3.c:151937
#15 0x00000000002e92f8 in sqlite3Parser (yyp=0x7ffc8f880e50, yymajor=1, yyminor=...) at sqlite3.c:152877
#16 0x00000000002a68b3 in sqlite3RunParser (pParse=0x7ffc8f881830, 
    zSql=0x7b24b5 ";;ANALYZE;;EXPLAIN QUERY PLAN SELECT * FROM c WHERE xyz=5 AND xyz IS NULL\n;SELECT idx, stat FROM sqlite_stat1 WHERE tbl='c' ORDER BY idx;;UPDATE t1 SET a=NULL;;SELECT tbl,idx,stat FROM 'main'.sqlite_s"..., pzErrMsg=0x7ffc8f881a10) at sqlite3.c:154013
#17 0x00000000002a1683 in sqlite3Prepare (db=0x7992b0, 
    zSql=0x79a128 ";INSERT INTO c SELECT v1+1, v1 FROM c;;ANALYZE;;EXPLAIN QUERY PLAN SELECT * FROM c WHERE xyz=5 AND xyz IS NULL\n;SELECT idx, stat FROM sqlite_stat1 WHERE tbl='c' ORDER BY idx;;UPDATE t1 SET a=NULL;;SEL"..., nBytes=432, prepFlags=128, pReprepare=0x0, ppStmt=0x7ffc8f881b48, pzTail=0x7ffc8f881b30) at sqlite3.c:124303
#18 0x00000000002a0d4e in sqlite3LockAndPrepare (db=0x7992b0, 
    zSql=0x79a128 ";INSERT INTO c SELECT v1+1, v1 FROM c;;ANALYZE;;EXPLAIN QUERY PLAN SELECT * FROM c WHERE xyz=5 AND xyz IS NULL\n;SELECT idx, stat FROM sqlite_stat1 WHERE tbl='c' ORDER BY idx;;UPDATE t1 SET a=NULL;;SEL"..., nBytes=432, prepFlags=128, pOld=0x0, ppStmt=0x7ffc8f881b48, pzTail=0x7ffc8f881b30) at sqlite3.c:124403
#19 0x000000000029247f in sqlite3_prepare_v2 (db=0x7992b0, 
    zSql=0x79a128 ";INSERT INTO c SELECT v1+1, v1 FROM c;;ANALYZE;;EXPLAIN QUERY PLAN SELECT * FROM c WHERE xyz=5 AND xyz IS NULL\n;SELECT idx, stat FROM sqlite_stat1 WHERE tbl='c' ORDER BY idx;;UPDATE t1 SET a=NULL;;SEL"..., nBytes=432, ppStmt=0x7ffc8f881b48, pzTail=0x7ffc8f881b30) at sqlite3.c:124487
#20 0x0000000000256bd0 in main (argc=1, argv=0x7ffc8f881cf8) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 54224] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
