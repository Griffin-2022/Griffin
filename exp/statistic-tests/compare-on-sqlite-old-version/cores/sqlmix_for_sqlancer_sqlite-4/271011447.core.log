GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000591,sig:06,src:023164+021777,time:42618351,execs:13772561,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;PRAGMA lock_status;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 String8          0    1    0 main          00 r[1]='main'
REG[1] =   t4[main](8)
   2 String8          0    2    0 unknown       00 r[2]='unknown'
REG[2] =   t7[unknown](8)
   3 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =   t4[main](8)
REG[2] =   t7[unknown](8)
   4 String8          0    1    0 temp          00 r[1]='temp'
REG[1] =   t4[temp](8)
   5 String8          0    2    0 closed        00 r[2]='closed'
REG[2] =   t6[closed](8)
   6 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =   t4[temp](8)
REG[2] =   t6[closed](8)
   7 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t1;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    2 0             01 usesStmtJournal=0
  10 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [;DROP TABLE t1;]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      0    1    2 0             01 usesStmtJournal=1
  39 String8          0    3    0 t1            00 r[3]='t1'
REG[3] =   t2[t1](8)
  40 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  41 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[t1](8)
REG[2] =   s2[t1](8)
   7 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
   8 Eq               4   12    2 (BINARY)      52 if r[2]==r[4] goto 12
REG[4] =   t7[trigger](8)
REG[2] =   s5[table](8)
   9 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:1
  10 Once             0   11    0               00 
  11 Delete           0    0    0               02 
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[c](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[t1](8)
REG[2] =   s1[c](8)
  12 Next             0    5    0               01 
  13 Destroy          2    2    0               00 
REG[2] =  i:0
  14 Null             0    6    7               00 r[6..7]=NULL
REG[6] =  NULL
  15 IfNot            2   24    1               00 
REG[2] =  i:0
  24 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  25 RowSetRead       6   35    7               00 r[7]=rowset(6)
REG[6] =  NULL
REG[7] =  NULL
  35 DropTable        0    0    0 t1            00 
  36 SetCookie        0    1    3               00 
  37 Halt             0    0    0               00 
SQL: [;CREATE TABLE v1(xyz TEXT, CHECK(xyz<>+xyz));]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    3 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:3
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:3
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 v1            00 r[7]='v1'
REG[7] =   t2[v1](8)
  20 String8          0    8    0 v1            00 r[8]='v1'
REG[8] =   t2[v1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  22 String8          0   10    0 CREATE TABLE v1(xyz TEXT, CHECK(xyz<>+xyz)) 00 r[10]='CREATE TABLE v1(xyz TEXT, CHECK(xyz<>+xyz))'
REG[10] =   t43[CREATE TABLE v1](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s59[0617111101637461626C657631763102.....ctablev1v1.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s59[0617111101637461626C657631763102.....ctablev1v1.]
REG[5] =  i:3
  25 SetCookie        0    1    4               00 
  26 ParseSchema      0    0    0 tbl_name='v1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    4 0             00 usesStmtJournal=0
  16 String8          0    2    0 v1            00 r[2]='v1'
REG[2] =   t2[v1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[v1](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[v1](8)
REG[1] =   s2[v1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[v1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s43[CREATE TABLE v1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[v1](8)
REG[5] =  i:2
REG[6] =   s43[CREATE TABLE v1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;WITH RECURSIVE c(xyz) AS (VALUES(1) UNION ALL SELECT xyz+1 FROM c WHERE xyz<100)
   INSERT INTO v1(xyz, xyz) SELECT xyz, randomblob(1000) FROM c;]
VDBE Trace:
   0 Init             0   48    0               00 Start at 48
  48 Transaction      0    1    4 0             01 usesStmtJournal=1
  49 Integer        100   10    0               00 r[10]=100
REG[10] =  i:100
  50 Integer          1   11    0               00 r[11]=1
REG[11] =  i:1
  51 Integer       1000   14    0               00 r[14]=1000
REG[14] =  i:1000
  52 Goto             0    1    0               00 
   1 InitCoroutine    3   37    2               00 
  37 OpenWrite        3    2    0 1             00 root=2 iDb=0; v1
  38 Yield            3   47    0               00 
REG[3] =  i:1
REG[3] =  i:38
   2 InitCoroutine    4   29    3               00 c
  29 Explain         29    0    0 SCAN SUBQUERY 2 00 
  30 InitCoroutine    4    0    3               00 
  31 Yield            4   36    0               00 next row of c
REG[4] =  i:2
REG[4] =  i:31
   3 Explain          3    0    0 CO-ROUTINE 2  00 
   4 OpenPseudo       1    5    1               00 1 columns in r[5]
   5 OpenEphemeral    2    1    0               00 nColumn=1; Queue table
   6 Explain          6    3    0 SETUP         00 
   7 Explain          7    6    0 SCAN CONSTANT ROW 00 
   8 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
   9 MakeRecord       6    1    7               00 r[7]=mkrec(r[6])
REG[7] =  s2[0209..]
  10 NewRowid         2    8    0               00 r[8]=rowid
REG[8] =  i:1
  11 Insert           2    7    8               08 intkey=r[8] data=r[7]
REG[7] =  s2[0209..]
REG[8] =  i:1
  12 Rewind           2   28    0               00 
  13 NullRow          1    0    0               00 
  14 RowData          2    5    0               00 r[5]=data
REG[5] =  s2[0209..]
  15 Delete           2    0    0               00 
  16 Column           1    0    9               00 r[9]=
REG[9] =  i:1
  17 Yield            4    0    0               00 
REG[4] =  i:31
REG[4] =  i:17
  32 Copy             9   12    0               00 r[12]=r[9]; c.xyz
REG[12] =  i:1
  33 Function0        1   14   13 randomblob(1) 01 r[13]=func(r[14])
REG[14] =  i:1000
REG[13] =  z1000[64C22591D006B3EFDB431FB57F172608d.%......C....&.]
  34 Yield            3    0    0               00 
REG[3] =  i:38
REG[3] =  i:34
  39 NewRowid         3    1    0               00 r[1]=rowid
REG[1] =  i:1
  40 SCopy           12    2    0               00 r[2]=r[12]
REG[2] =  i:1
  41 Abortable        0    0    0               00 
  42 Ne               2   44    2 (BINARY)      52 if r[2]!=r[2] goto 44

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fe1afc96859 in __GI_abort () at abort.c:79
#2  0x00007fe1afc96729 in __assert_fail_base (fmt=0x7fe1afe2c588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21d368 "pIn1!=pIn3", file=0x22873d "sqlite3.c", line=85580, function=<optimized out>) at assert.c:92
#3  0x00007fe1afca7fd6 in __GI___assert_fail (assertion=0x21d368 "pIn1!=pIn3", file=0x22873d "sqlite3.c", line=85580, function=0x216524 "int sqlite3VdbeExec(Vdbe *)") at assert.c:101
#4  0x00000000003c5c6a in sqlite3VdbeExec (p=0xcbfcd0) at sqlite3.c:85580
#5  0x0000000000411104 in sqlite3Step (p=0xcbfcd0) at sqlite3.c:81930
#6  0x000000000029128d in sqlite3_step (pStmt=0xcbfcd0) at sqlite3.c:81995
#7  0x00000000002570b9 in main (argc=1, argv=0x7ffc3a699198) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 55220] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
