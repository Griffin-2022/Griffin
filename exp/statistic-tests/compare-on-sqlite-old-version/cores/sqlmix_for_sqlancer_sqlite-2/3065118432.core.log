GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000292,sig:06,src:023269+020866,time:5281283,execs:930116,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;CREATE INDEX x ON t0(c0 in(0,1));]
VDBE Trace:
   0 Init             0   42    0               00 Start at 42
  42 Transaction      0    1    4 1             01 usesStmtJournal=0
  43 Integer          0   14    0               00 r[14]=0
REG[14] =  i:0
  44 Integer          1   15    0               00 r[15]=1
REG[15] =  i:1
  45 Goto             0    1    0               00 
   1 Noop             0   41    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:7
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:6
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 x             00 r[4]='x'
REG[4] =   t1[x](8)
   7 String8          0    5    0 t0            00 r[5]='t0'
REG[5] =   t2[t0](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:7
   9 String8          0    7    0 CREATE INDEX x ON t0(c0 in(0,1)) 00 r[7]='CREATE INDEX x ON t0(c0 in(0,1))'
REG[7] =   t32[CREATE INDEX x ](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s47[06170F11014D696E6465787874300743.....Mindexxt0.C]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s47[06170F11014D696E6465787874300743.....Mindexxt0.C]
REG[2] =  i:6
  12 SorterOpen       3    0    1 k(2,,)        00 
  13 OpenRead         1    2    0 1             00 root=2 iDb=0; t0
  14 Rewind           1   29    0               00 
  29 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  30 SorterSort       3   35    0               00 
  35 Close            1    0    0               00 
  36 Close            2    0    0               00 
  37 Close            3    0    0               00 
  38 SetCookie        0    1    5               00 
  39 ParseSchema      0    0    0 name='x' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    5 1             00 usesStmtJournal=0
  16 String8          0    2    0 x             00 r[2]='x'
REG[2] =   t1[x](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[x](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s21[sqlite_autoinde](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[x](8)
REG[1] =   s21[sqlite_autoinde](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s21[sqlite_autoinde](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[x](8)
REG[1] =   s21[sqlite_autoinde](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[x](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s9[preceding](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[x](8)
REG[1] =   s9[preceding](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[x](8)
REG[1] =   s1[x](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[x](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:7
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s32[CREATE INDEX x ](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[x](8)
REG[5] =  i:7
REG[6] =   s32[CREATE INDEX x ](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  40 Expire           0    1    0               00 
  41 Halt             0    0    0               00 
SQL: [SELECT * FROM pragma_index_list('t2') 
;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    5 1             01 usesStmtJournal=0
  16 Goto             0    1    0               00 
   1 VOpen            0    0    0 vtab:162B930  00 
   2 Explain          2    0    0 SCAN TABLE pragma_index_list VIRTUAL TABLE INDEX 0: 00 
   3 String8          0    3    0 t2            00 r[3]='t2'
REG[3] =   t2[t2](8)
   4 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   5 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   6 VFilter          0   14    1               00 iplan=r[1] zplan=''
REG[1] =  i:0
SQL: [PRAGMA index_list='t2']
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
  14 Halt             0    0    0               00 
SQL: [;VACUUM
    
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Vacuum           0    0    0               00 
SQL: [ATTACH '' AS vacuum_db]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 String8          0    1    0               00 r[1]=''
REG[1] =   t0[](8)
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
REG[2] =   t9[vacuum_db](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t0[](8)
REG[2] =   t9[vacuum_db](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      2    0    0 0             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [BEGIN]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
SQL: [SELECT sql FROM "main".sqlite_master WHERE type='table'AND name<>'sqlite_sequence' AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    5 1             01 usesStmtJournal=0
  17 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  18 String8          0    3    0 sqlite_sequence 00 r[3]='sqlite_sequence'
REG[3] =   t15[sqlite_sequence](8)
  19 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  20 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          2    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   15    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   14    1 (BINARY)      52 if r[1]!=r[2] goto 14
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t0](8)
   7 Eq               3   14    1 (BINARY)      52 if r[1]==r[3] goto 14
REG[3] =   t15[sqlite_sequence](8)
REG[1] =   s2[t0](8)
   8 Column           0    3    1               00 r[1]=sqlite_master.rootpage
REG[1] =  i:2
   9 NotNull          1   11    0               00 if r[1]!=NULL goto 11
REG[1] =  i:2
  11 Le               4   14    1               51 if r[1]<=r[4] goto 14
REG[4] =  i:0
REG[1] =  i:2
  12 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s97[CREATE TABLE t0](8)
  13 ResultRow        5    1    0               00 output=r[5]
REG[5] =   s97[CREATE TABLE t0](8)
SQL: [CREATE TABLE t0(
    c0 PRIMARY KEY,
    UNIQUE(c0,c0),
    UNIQUE(c0,c0) ON CONFLICT REPLACE
  )]
VDBE Trace:
   0 Init             0   50    0               00 Start at 50
  50 Transaction      2    1    0 0             01 usesStmtJournal=0
  51 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        2    2    4               00 
   4 SetCookie        2    5    1               00 
   5 CreateBtree      2    2    1               00 r[2]=root iDb=2 flags=1
REG[2] =  i:2
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      2    4    2               00 r[4]=root iDb=2 flags=2
REG[4] =  i:3
  13 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:2
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_t0_1 00 r[7]='sqlite_autoindex_t0_1'
REG[7] =   t21[sqlite_autoinde](8)
  17 String8          0    8    0 t0            00 r[8]='t0'
REG[8] =   t2[t0](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:3
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s35[061737110100696E64657873716C6974..7...indexsqlit]
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  s35[061737110100696E64657873716C6974..7...indexsqlit]
REG[5] =  i:2
  22 Noop             0   33    0               00 
  23 CreateBtree      2   12    2               00 r[12]=root iDb=2 flags=2
REG[12] =  i:4
  24 OpenWrite        2    1    2 5             00 root=1 iDb=2; sqlite_master
  25 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:3
  26 String8          0   14    0 index         00 r[14]='index'
REG[14] =   t5[index](8)
  27 String8          0   15    0 sqlite_autoindex_t0_2 00 r[15]='sqlite_autoindex_t0_2'
REG[15] =   t21[sqlite_autoinde](8)
  28 String8          0   16    0 t0            00 r[16]='t0'
REG[16] =   t2[t0](8)
  29 Copy            12   17    0               00 r[17]=r[12]
REG[17] =  i:4
  30 Null             0   18    0               00 r[18]=NULL
REG[18] =  NULL
  31 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s35[061737110100696E64657873716C6974..7...indexsqlit]
  32 Insert           2   19   13               18 intkey=r[13] data=r[19]
REG[19] =  s35[061737110100696E64657873716C6974..7...indexsqlit]
REG[13] =  i:3
  33 Close            0    0    0               00 
  34 Null             0   20   21               00 r[20..21]=NULL
REG[20] =  NULL
  35 OpenWrite        3    1    2 5             00 root=1 iDb=2; sqlite_master
  36 Explain         36    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  37 SeekRowid        3   39    1               00 intkey=r[1]
REG[1] =  i:1
  38 Rowid            3   21    0               00 r[21]=rowid
REG[21] =  i:1
  39 IsNull          21   47    0               00 if r[21]==NULL goto 47
REG[21] =  i:1
  40 String8          0   22    0 table         00 r[22]='table'
REG[22] =   t5[table](8)
  41 String8          0   23    0 t0            00 r[23]='t0'
REG[23] =   t2[t0](8)
  42 String8          0   24    0 t0            00 r[24]='t0'
REG[24] =   t2[t0](8)
  43 Copy             2   25    0               00 r[25]=r[2]
REG[25] =  i:2
  44 String8          0   26    0 CREATE TABLE t0(
    c0 PRIMARY KEY,
    UNIQUE(c0,c0),
    UNIQUE(c0,c0) ON CONFLICT REPLACE
  ) 00 r[26]='CREATE TABLE t0(
    c0 PRIMARY KEY,
    UNIQUE(c0,c0),
    UNIQUE(c0,c0) ON CONFLICT REPLAC
REG[26] =   t97[CREATE TABLE t0](8)
  45 MakeRecord      22    5   27 BBBDB         00 r[27]=mkrec(r[22..26])
REG[27] =  s114[0717111101814F7461626C6574307430......Otablet0t0]
  46 Insert           3   27   21               00 intkey=r[21] data=r[27]
REG[27] =  s114[0717111101814F7461626C6574307430......Otablet0t0]
REG[21] =  i:1
  47 SetCookie        2    1    1               00 
  48 ParseSchema      2    0    0 tbl_name='t0' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      2    0    1 0             00 usesStmtJournal=0
  16 String8          0    2    0 t0            00 r[2]='t0'
REG[2] =   t2[t0](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s2[t0](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t0](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s97[CREATE TABLE t0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t0](8)
REG[5] =  i:2
REG[6] =   s97[CREATE TABLE t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s2[t0](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s21[sqlite_autoinde](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =  NULL
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s21[sqlite_autoinde](8)
REG[5] =  i:3
REG[6] =  NULL
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s2[t0](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s21[sqlite_autoinde](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =  NULL
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s21[sqlite_autoinde](8)
REG[5] =  i:4
REG[6] =  NULL
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  49 Halt             0    0    0               00 
  14 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   14    1 (BINARY)      52 if r[1]!=r[2] goto 14
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  14 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   14    1 (BINARY)      52 if r[1]!=r[2] goto 14
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  14 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   14    1 (BINARY)      52 if r[1]!=r[2] goto 14
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v0](8)
   7 Eq               3   14    1 (BINARY)      52 if r[1]==r[3] goto 14
REG[3] =   t15[sqlite_sequence](8)
REG[1] =   s2[v0](8)
   8 Column           0    3    1               00 r[1]=sqlite_master.rootpage
REG[1] =  i:5
   9 NotNull          1   11    0               00 if r[1]!=NULL goto 11
REG[1] =  i:5
  11 Le               4   14    1               51 if r[1]<=r[4] goto 14
REG[4] =  i:0
REG[1] =  i:5
  12 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s66[CREATE TABLE v0](8)
  13 ResultRow        5    1    0               00 output=r[5]
REG[5] =   s66[CREATE TABLE v0](8)
SQL: [CREATE TABLE v0(following text, over blob, t1 TEXT DEFAULT -123.5)]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      2    1    1 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      2    2    1               00 r[2]=root iDb=2 flags=1
REG[2] =  i:5
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:4
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:4
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 v0            00 r[7]='v0'
REG[7] =   t2[v0](8)
  20 String8          0    8    0 v0            00 r[8]='v0'
REG[8] =   t2[v0](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  22 String8          0   10    0 CREATE TABLE v0(following text, over blob, t1 TEXT DEFAULT -123.5) 00 r[10]='CREATE TABLE v0(following text, over blob, t1 TEXT DEFAULT -123.5)'
REG[10] =   t66[CREATE TABLE v0](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s83[071711110181117461626C6576307630.......tablev0v0]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s83[071711110181117461626C6576307630.......tablev0v0]
REG[5] =  i:4
  25 SetCookie        2    1    2               00 
  26 ParseSchema      2    0    0 tbl_name='v0' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      2    0    2 0             00 usesStmtJournal=0
  16 String8          0    2    0 v0            00 r[2]='v0'
REG[2] =   t2[v0](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[v0](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[v0](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[v0](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[v0](8)
REG[1] =   s2[v0](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[v0](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:5
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s66[CREATE TABLE v0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[v0](8)
REG[5] =  i:5
REG[6] =   s66[CREATE TABLE v0](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
  14 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   14    1 (BINARY)      52 if r[1]!=r[2] goto 14
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  14 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   14    1 (BINARY)      52 if r[1]!=r[2] goto 14
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  14 Next             0    4    0               01 
  15 Halt             0    0    0               00 
SQL: [SELECT sql FROM "main".sqlite_master WHERE type='index']
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    5 1             01 usesStmtJournal=0
  11 String8          0    2    0 index         00 r[2]='index'
REG[2] =   t5[index](8)
  12 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          2    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =   t5[index](8)
REG[1] =   s5[table](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =   t5[index](8)
REG[1] =   s5[index](8)
   6 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   7 ResultRow        3    1    0               00 output=r[3]
REG[3] =  NULL
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =   t5[index](8)
REG[1] =   s5[index](8)
   6 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   7 ResultRow        3    1    0               00 output=r[3]
REG[3] =  NULL
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =   t5[index](8)
REG[1] =   s5[table](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =   t5[index](8)
REG[1] =   s5[index](8)
   6 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s35[CREATE INDEX pr](8)
   7 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s35[CREATE INDEX pr](8)
SQL: [CREATE INDEX preceding ON t0(c0+c0)]
VDBE Trace:
   0 Init             0   35    0               00 Start at 35
  35 Transaction      2    1    2 0             01 usesStmtJournal=0
  36 Goto             0    1    0               00 
   1 Noop             0   34    0               00 
   2 CreateBtree      2    1    2               00 r[1]=root iDb=2 flags=2
REG[1] =  i:6
   3 OpenWrite        0    1    2 5             00 root=1 iDb=2; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:5
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 preceding     00 r[4]='preceding'
REG[4] =   t9[preceding](8)
   7 String8          0    5    0 t0            00 r[5]='t0'
REG[5] =   t2[t0](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:6
   9 String8          0    7    0 CREATE INDEX preceding ON t0(c0+c0) 00 r[7]='CREATE INDEX preceding ON t0(c0+c0)'
REG[7] =   t35[CREATE INDEX pr](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s58[06171F110153696E6465787072656365.....Sindexprece]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s58[06171F110153696E6465787072656365.....Sindexprece]
REG[2] =  i:5
  12 SorterOpen       3    0    1 k(2,,)        00 
  13 OpenRead         1    2    2 1             00 root=2 iDb=2; t0
  14 Rewind           1   22    0               00 
  22 OpenWrite        2    1    2 k(2,,)        11 root=1 iDb=2
  23 SorterSort       3   28    0               00 
  28 Close            1    0    0               00 
  29 Close            2    0    0               00 
  30 Close            3    0    0               00 
  31 SetCookie        2    1    3               00 
  32 ParseSchema      2    0    0 name='preceding' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      2    0    3 0             00 usesStmtJournal=0
  16 String8          0    2    0 preceding     00 r[2]='preceding'
REG[2] =   t9[preceding](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[preceding](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s21[sqlite_autoinde](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[preceding](8)
REG[1] =   s21[sqlite_autoinde](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s21[sqlite_autoinde](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[preceding](8)
REG[1] =   s21[sqlite_autoinde](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[preceding](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s9[preceding](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[preceding](8)
REG[1] =   s9[preceding](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s9[preceding](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:6
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s35[CREATE INDEX pr](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s9[preceding](8)
REG[5] =  i:6
REG[6] =   s35[CREATE INDEX pr](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  33 Expire           0    1    0               00 
  34 Halt             0    0    0               00 
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =   t5[index](8)
REG[1] =   s5[index](8)
   6 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s32[CREATE INDEX x ](8)
   7 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s32[CREATE INDEX x ](8)
SQL: [CREATE INDEX x ON t0(c0 in(0,1))]
VDBE Trace:
   0 Init             0   42    0               00 Start at 42
  42 Transaction      2    1    3 0             01 usesStmtJournal=0
  43 Integer          0   14    0               00 r[14]=0
REG[14] =  i:0
  44 Integer          1   15    0               00 r[15]=1
REG[15] =  i:1
  45 Goto             0    1    0               00 
   1 Noop             0   41    0               00 
   2 CreateBtree      2    1    2               00 r[1]=root iDb=2 flags=2
REG[1] =  i:7
   3 OpenWrite        0    1    2 5             00 root=1 iDb=2; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:6
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 x             00 r[4]='x'
REG[4] =   t1[x](8)
   7 String8          0    5    0 t0            00 r[5]='t0'
REG[5] =   t2[t0](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:7
   9 String8          0    7    0 CREATE INDEX x ON t0(c0 in(0,1)) 00 r[7]='CREATE INDEX x ON t0(c0 in(0,1))'
REG[7] =   t32[CREATE INDEX x ](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s47[06170F11014D696E6465787874300743.....Mindexxt0.C]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s47[06170F11014D696E6465787874300743.....Mindexxt0.C]
REG[2] =  i:6
  12 SorterOpen       3    0    1 k(2,,)        00 
  13 OpenRead         1    2    2 1             00 root=2 iDb=2; t0
  14 Rewind           1   29    0               00 
  29 OpenWrite        2    1    2 k(2,,)        11 root=1 iDb=2
  30 SorterSort       3   35    0               00 
  35 Close            1    0    0               00 
  36 Close            2    0    0               00 
  37 Close            3    0    0               00 
  38 SetCookie        2    1    4               00 
  39 ParseSchema      2    0    0 name='x' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      2    0    4 0             00 usesStmtJournal=0
  16 String8          0    2    0 x             00 r[2]='x'
REG[2] =   t1[x](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[x](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s21[sqlite_autoinde](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[x](8)
REG[1] =   s21[sqlite_autoinde](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s21[sqlite_autoinde](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[x](8)
REG[1] =   s21[sqlite_autoinde](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[x](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s9[preceding](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[x](8)
REG[1] =   s9[preceding](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[x](8)
REG[1] =   s1[x](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[x](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:7
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s32[CREATE INDEX x ](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[x](8)
REG[5] =  i:7
REG[6] =   s32[CREATE INDEX x ](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  40 Expire           0    1    0               00 
  41 Halt             0    0    0               00 
   8 Next             0    4    0               01 
   9 Halt             0    0    0               00 
SQL: [SELECT'INSERT INTO vacuum_db.'||quote(name)||' SELECT*FROM"main".'||quote(name)FROM vacuum_db.sqlite_master WHERE type='table'AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      2    0    4 0             01 usesStmtJournal=0
  21 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  22 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  23 String8          0    6    0 INSERT INTO vacuum_db. 00 r[6]='INSERT INTO vacuum_db.'
REG[6] =   t22[INSERT INTO vac](8)
  24 String8          0    9    0  SELECT*FROM"main". 00 r[9]=' SELECT*FROM"main".'
REG[9] =   t19[ SELECT*FROM"ma](8)
  25 Goto             0    1    0               00 
   1 OpenRead         0    1    2 4             00 root=1 iDb=2; sqlite_master
   2 Explain          2    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   19    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   18    1 (BINARY)      52 if r[1]!=r[2] goto 18
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    3    1               00 r[1]=sqlite_master.rootpage
REG[1] =  i:2
   7 NotNull          1    9    0               00 if r[1]!=NULL goto 9
REG[1] =  i:2
   9 Le               3   18    1               51 if r[1]<=r[3] goto 18
REG[3] =  i:0
REG[1] =  i:2
  10 Column           0    1    8               00 r[8]=sqlite_master.name
REG[8] =   s2[t0](8)
  11 Function0        0    8    7 quote(1)      01 r[7]=func(r[8])
REG[8] =   s2[t0](8)
REG[7] =   z4['t0'](8)
  12 Concat           7    6    5               00 r[5]=r[6]+r[7]
REG[7] =   z4['t0'](8)
REG[6] =   t22[INSERT INTO vac](8)
REG[5] =   s26[INSERT INTO vac](8)
  13 Concat           9    5    1               00 r[1]=r[5]+r[9]
REG[9] =   t19[ SELECT*FROM"ma](8)
REG[5] =   s26[INSERT INTO vac](8)
REG[1] =   s45[INSERT INTO vac](8)
  14 Column           0    1    7               00 r[7]=sqlite_master.name
REG[7] =   s2[t0](8)
  15 Function0        0    7    5 quote(1)      01 r[5]=func(r[7])
REG[7] =   s2[t0](8)
REG[5] =   z4['t0'](8)
  16 Concat           5    1    4               00 r[4]=r[1]+r[5]
REG[5] =   z4['t0'](8)
REG[1] =   s45[INSERT INTO vac](8)
REG[4] =   s49[INSERT INTO vac](8)
  17 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s49[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'t0' SELECT*FROM"main".'t0']
VDBE Trace:
   0 Init             0   48    0               00 Start at 48
  48 Transaction      0    0    5 1             01 usesStmtJournal=0
  49 Transaction      2    1    4 0             01 usesStmtJournal=0
  50 Goto             0    1    0               00 
   1 OpenWrite        1    2    2 1             00 root=2 iDb=2; t0
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t0
   3 Rewind           0   47    0               00 
  47 Halt             0    0    0               00 
  18 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   18    1 (BINARY)      52 if r[1]!=r[2] goto 18
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  18 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   18    1 (BINARY)      52 if r[1]!=r[2] goto 18
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  18 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   18    1 (BINARY)      52 if r[1]!=r[2] goto 18
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    3    1               00 r[1]=sqlite_master.rootpage
REG[1] =  i:5
   7 NotNull          1    9    0               00 if r[1]!=NULL goto 9
REG[1] =  i:5
   9 Le               3   18    1               51 if r[1]<=r[3] goto 18
REG[3] =  i:0
REG[1] =  i:5
  10 Column           0    1    8               00 r[8]=sqlite_master.name
REG[8] =   s2[v0](8)
  11 Function         0    8    7 quote(1)      01 r[7]=func(r[8])
REG[8] =   s2[v0](8)
REG[7] =   z4['v0'](8)
  12 Concat           7    6    5               00 r[5]=r[6]+r[7]
REG[7] =   z4['v0'](8)
REG[6] =   t22[INSERT INTO vac](8)
REG[5] =   s26[INSERT INTO vac](8)
  13 Concat           9    5    1               00 r[1]=r[5]+r[9]
REG[9] =   t19[ SELECT*FROM"ma](8)
REG[5] =   s26[INSERT INTO vac](8)
REG[1] =   s45[INSERT INTO vac](8)
  14 Column           0    1    7               00 r[7]=sqlite_master.name
REG[7] =   s2[v0](8)
  15 Function         0    7    5 quote(1)      01 r[5]=func(r[7])
REG[7] =   s2[v0](8)
REG[5] =   z4['v0'](8)
  16 Concat           5    1    4               00 r[4]=r[1]+r[5]
REG[5] =   z4['v0'](8)
REG[1] =   s45[INSERT INTO vac](8)
REG[4] =   s49[INSERT INTO vac](8)
  17 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s49[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'v0' SELECT*FROM"main".'v0']
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    5 1             01 usesStmtJournal=0
  13 Transaction      2    1    4 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 OpenWrite        1    5    2 3             00 root=5 iDb=2; v0
   2 OpenRead         0    5    0 3             00 root=5 iDb=0; v0
   3 Rewind           0   11    0               00 
  11 Halt             0    0    0               00 
  18 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   18    1 (BINARY)      52 if r[1]!=r[2] goto 18
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  18 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   18    1 (BINARY)      52 if r[1]!=r[2] goto 18
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  18 Next             0    4    0               01 
  19 Halt             0    0    0               00 
SQL: [INSERT INTO vacuum_db.sqlite_master SELECT*FROM "main".sqlite_master WHERE type IN('view','trigger') OR(type='table'AND rootpage=0)]
VDBE Trace:
   0 Init             0   29    0               00 Start at 29
  29 Transaction      0    0    5 1             01 usesStmtJournal=0
  30 Transaction      2    1    4 0             01 usesStmtJournal=0
  31 String8          0    9    0 view          00 r[9]='view'
REG[9] =   t4[view](8)
  32 String8          0   10    0 trigger       00 r[10]='trigger'
REG[10] =   t7[trigger](8)
  33 String8          0   12    0 table         00 r[12]='table'
REG[12] =   t5[table](8)
  34 Integer          0   13    0               00 r[13]=0
REG[13] =  i:0
  35 Goto             0    1    0               00 
   1 InitCoroutine    7   22    2               00 
  22 OpenWrite        2    1    2 5             00 root=1 iDb=2; sqlite_master
  23 Yield            7   28    0               00 
REG[7] =  i:1
REG[7] =  i:23
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   21    0               00 
   5 Noop             0    0    0               00 begin IN expr
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   7 Eq               8    9    9 (BINARY)      42 if r[9]==r[8] goto 9
REG[8] =   s5[table](8)
REG[9] =   t4[view](8)
   8 Ne               8   10   10 (BINARY)      52 if r[10]!=r[8] goto 10; end IN expr
REG[8] =   s5[table](8)
REG[10] =   t7[trigger](8)
  10 Column           0    0   11               00 r[11]=sqlite_master.type
REG[11] =   s5[table](8)
  11 Ne              12   20   11 (BINARY)      52 if r[11]!=r[12] goto 20
REG[12] =   t5[table](8)
REG[11] =   s5[table](8)
  12 Column           0    3   11               00 r[11]=sqlite_master.rootpage
REG[11] =  i:2
  13 Ne              13   20   11 (BINARY)      54 if r[11]!=r[13] goto 20
REG[13] =  i:0
REG[11] =  i:2
  20 Next             0    5    0               01 
   5 Noop             0    0    0               00 begin IN expr
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   7 Eq               8    9    9 (BINARY)      42 if r[9]==r[8] goto 9
REG[8] =   s5[index](8)
REG[9] =   t4[view](8)
   8 Ne               8   10   10 (BINARY)      52 if r[10]!=r[8] goto 10; end IN expr
REG[8] =   s5[index](8)
REG[10] =   t7[trigger](8)
  10 Column           0    0   11               00 r[11]=sqlite_master.type
REG[11] =   s5[index](8)
  11 Ne              12   20   11 (BINARY)      52 if r[11]!=r[12] goto 20
REG[12] =   t5[table](8)
REG[11] =   s5[index](8)
  20 Next             0    5    0               01 
   5 Noop             0    0    0               00 begin IN expr
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   7 Eq               8    9    9 (BINARY)      42 if r[9]==r[8] goto 9
REG[8] =   s5[index](8)
REG[9] =   t4[view](8)
   8 Ne               8   10   10 (BINARY)      52 if r[10]!=r[8] goto 10; end IN expr
REG[8] =   s5[index](8)
REG[10] =   t7[trigger](8)
  10 Column           0    0   11               00 r[11]=sqlite_master.type
REG[11] =   s5[index](8)
  11 Ne              12   20   11 (BINARY)      52 if r[11]!=r[12] goto 20
REG[12] =   t5[table](8)
REG[11] =   s5[index](8)
  20 Next             0    5    0               01 
   5 Noop             0    0    0               00 begin IN expr
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   7 Eq               8    9    9 (BINARY)      42 if r[9]==r[8] goto 9
REG[8] =   s5[table](8)
REG[9] =   t4[view](8)
   8 Ne               8   10   10 (BINARY)      52 if r[10]!=r[8] goto 10; end IN expr
REG[8] =   s5[table](8)
REG[10] =   t7[trigger](8)
  10 Column           0    0   11               00 r[11]=sqlite_master.type
REG[11] =   s5[table](8)
  11 Ne              12   20   11 (BINARY)      52 if r[11]!=r[12] goto 20
REG[12] =   t5[table](8)
REG[11] =   s5[table](8)
  12 Column           0    3   11               00 r[11]=sqlite_master.rootpage
REG[11] =  i:5
  13 Ne              13   20   11 (BINARY)      54 if r[11]!=r[13] goto 20
REG[13] =  i:0
REG[11] =  i:5
  20 Next             0    5    0               01 
   5 Noop             0    0    0               00 begin IN expr
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   7 Eq               8    9    9 (BINARY)      42 if r[9]==r[8] goto 9
REG[8] =   s5[index](8)
REG[9] =   t4[view](8)
   8 Ne               8   10   10 (BINARY)      52 if r[10]!=r[8] goto 10; end IN expr
REG[8] =   s5[index](8)
REG[10] =   t7[trigger](8)
  10 Column           0    0   11               00 r[11]=sqlite_master.type
REG[11] =   s5[index](8)
  11 Ne              12   20   11 (BINARY)      52 if r[11]!=r[12] goto 20
REG[12] =   t5[table](8)
REG[11] =   s5[index](8)
  20 Next             0    5    0               01 
   5 Noop             0    0    0               00 begin IN expr
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   7 Eq               8    9    9 (BINARY)      42 if r[9]==r[8] goto 9
REG[8] =   s5[index](8)
REG[9] =   t4[view](8)
   8 Ne               8   10   10 (BINARY)      52 if r[10]!=r[8] goto 10; end IN expr
REG[8] =   s5[index](8)
REG[10] =   t7[trigger](8)
  10 Column           0    0   11               00 r[11]=sqlite_master.type
REG[11] =   s5[index](8)
  11 Ne              12   20   11 (BINARY)      52 if r[11]!=r[12] goto 20
REG[12] =   t5[table](8)
REG[11] =   s5[index](8)
  20 Next             0    5    0               01 
  21 EndCoroutine     7    0    0               00 
REG[7] =  i:23
  28 Halt             0    0    0               00 
   2 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    6 2             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t0](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s97[CREATE TABLE t0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t0](8)
REG[2] =  i:2
REG[3] =   s97[CREATE TABLE t0](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s21[sqlite_autoinde](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s21[sqlite_autoinde](8)
REG[2] =  i:3
REG[3] =  NULL
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s21[sqlite_autoinde](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s21[sqlite_autoinde](8)
REG[2] =  i:4
REG[3] =  NULL
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v0](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s66[CREATE TABLE v0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[v0](8)
REG[2] =  i:5
REG[3] =   s66[CREATE TABLE v0](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s9[preceding](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:6
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s35[CREATE INDEX pr](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s9[preceding](8)
REG[2] =  i:6
REG[3] =   s35[CREATE INDEX pr](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:7
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s32[CREATE INDEX x ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[x](8)
REG[2] =  i:7
REG[3] =   s32[CREATE INDEX x ](8)
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      1    0    0 2             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
SQL: [;INSERT INTO t0(c0) VALUES($string)
  
;]
VDBE Trace:
   0 Init             0   66    0               00 Start at 66
  66 Transaction      0    1    6 2             01 usesStmtJournal=0
  67 Integer          0   17    0               00 r[17]=0
REG[17] =  i:0
  68 Integer          1   18    0               00 r[18]=1
REG[18] =  i:1
  69 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 1             00 root=2 iDb=0; t0
   2 OpenWrite        1    7    0 k(2,,)        00 root=7 iDb=0; x
   3 OpenWrite        2    6    0 k(2,,)        00 root=6 iDb=0; preceding
   4 OpenWrite        3    4    0 k(3,,,)       00 root=4 iDb=0; sqlite_autoindex_t0_2
   5 OpenWrite        4    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t0_1
   6 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   7 Variable         1    2    0 $string       00 r[2]=parameter(1,$string)
REG[2] =  NULL
   8 Noop             0    0    0               00 uniqueness check for x
   9 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  10 Noop             0    0    0               00 begin IN expr
  11 BitAnd           2    2   16               00 r[16]=r[2]&r[2]
REG[2] =  NULL
REG[2] =  NULL
REG[16] =  NULL
  12 Eq               2   16   17 (BINARY)      41 if r[17]==r[2] goto 16
REG[2] =  NULL
REG[17] =  i:0
  13 Eq               2   16   18 (BINARY)      41 if r[18]==r[2] goto 16
REG[2] =  NULL
REG[18] =  i:1
  14 IsNull          16   18    0               00 if r[16]==NULL goto 18
REG[16] =  NULL
  18 IntCopy          1    5    0               00 r[5]=r[1]; rowid
REG[5] =  i:1
  19 MakeRecord       4    2    3               00 r[3]=mkrec(r[4..5]); for x
REG[3] =  s3[030009...]
  20 Noop             0    0    0               00 uniqueness check for preceding
  21 Add              2    2    7               00 r[7]=r[2]+r[2]; preceding column 0
REG[2] =  NULL
REG[2] =  NULL
REG[7] =  NULL
  22 IntCopy          1    8    0               00 r[8]=r[1]; rowid
REG[8] =  i:1
  23 MakeRecord       7    2    6               00 r[6]=mkrec(r[7..8]); for preceding
REG[6] =  s3[030009...]
  24 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t0_2
  25 SCopy            2   10    0               00 r[10]=r[2]; c0
REG[10] =  NULL
  26 SCopy            2   11    0               00 r[11]=r[2]; c0
REG[11] =  NULL
  27 IntCopy          1   12    0               00 r[12]=r[1]; rowid
REG[12] =  i:1
  28 MakeRecord      10    3    9               00 r[9]=mkrec(r[10..12]); for sqlite_autoindex_t0_2
REG[9] =  s4[04000009....]
  29 NoConflict       3   52   10 2             00 key=r[10..11]
REG[10] =  NULL
REG[11] =  NULL
  52 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t0_1
  53 SCopy            2   14    0               00 r[14]=r[2]; c0
REG[14] =  NULL
  54 IntCopy          1   15    0               00 r[15]=r[1]; rowid
REG[15] =  i:1
  55 MakeRecord      14    2   13               00 r[13]=mkrec(r[14..15]); for sqlite_autoindex_t0_1
REG[13] =  s3[030009...]
  56 Abortable        0    0    0               00 
  57 NoConflict       4   59   14 1             00 key=r[14]
REG[14] =  NULL
  59 IdxInsert        1    3    4 2             10 key=r[3]
REG[3] =  s3[030009...]
  60 IdxInsert        2    6    7 2             10 key=r[6]
REG[6] =  s3[030009...]
  61 IdxInsert        3    9   10 3             10 key=r[9]
REG[9] =  s4[04000009....]
  62 IdxInsert        4   13   14 2             10 key=r[13]
REG[13] =  s3[030009...]
  63 MakeRecord       2    1   16               00 r[16]=mkrec(r[2])
REG[16] =  s2[0200..]
  64 Insert           0   16    1 t0            39 intkey=r[1] data=r[16]
REG[16] =  s2[0200..]
REG[1] =  i:1
  65 Halt             0    0    0               00 
SQL: [SELECT DISTINCT c0,sum(c0) AS total      
    FROM t0      
    GROUP BY LOWER(c0)      
    LIMIT 2 OFFSET 1
  
;]
VDBE Trace:
   0 Init             0   56    0               00 Start at 56
  56 Transaction      0    0    6 2             01 usesStmtJournal=0
  57 Goto             0    1    0               00 
   1 Integer          2    1    0               00 r[1]=2; LIMIT counter
REG[1] =  i:2
   2 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   3 MustBeInt        2    0    0               00 OFFSET counter
REG[2] =  i:1
   4 OffsetLimit      1    3    2               00 if r[1]>0 then r[3]=r[1]+max(0,r[2]) else r[3]=(-1); LIMIT+OFFSET
REG[1] =  i:2
REG[2] =  i:1
REG[3] =  i:3
   5 OpenEphemeral    1    0    0 k(2,B,B)      08 nColumn=0
   6 SorterOpen       2    2    0 k(1,B)        00 
   7 Integer          0    7    0               00 r[7]=0; clear abort flag
REG[7] =  i:0
   8 Null             0   10   10               00 r[10..10]=NULL
REG[10] =  NULL
   9 Gosub            9   51    0               00 
REG[9] =  i:9
  51 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  52 Integer          0    6    0               00 r[6]=0; indicate accumulator empty
REG[6] =  i:0
  53 Return           9    0    0               00 
REG[9] =  i:9
  10 OpenRead         0    2    0 1             00 root=2 iDb=0; t0
  11 Explain         11    0    0 SCAN TABLE t0 00 
  12 Rewind           0   20    0               00 
  13 Explain         13    0    0 USE TEMP B-TREE FOR GROUP BY 00 
  14 Column           0    0   14               00 r[14]=t0.c0
REG[14] =  NULL
  15 Function0        0   14   12 lower(1)      01 r[12]=func(r[14])
REG[14] =  NULL
REG[12] =  NULL
  16 Column           0    0   13               00 r[13]=t0.c0
REG[13] =  NULL
  17 MakeRecord      12    2   14               00 r[14]=mkrec(r[12..13])
REG[14] =  s3[030000...]
  18 SorterInsert     2   14    0               00 key=r[14]
REG[14] =  s3[030000...]
  19 Next             0   13    0               01 
  20 OpenPseudo       3   14    2               00 2 columns in r[14]
  21 SorterSort       2   54    0               00 GROUP BY sort
  22 SorterData       2   14    3               00 r[14]=data
  23 Column           3    0   11               00 r[11]=
REG[11] =  NULL
  24 Compare         10   11    1 k(1,B)        00 r[10] <-> r[11]
REG[10] =  NULL
REG[11] =  NULL
  25 Jump            26   30   26               00 
  30 Column           3    1   15               00 r[15]=
REG[15] =  NULL
  31 AggStep          0   15    5 sum(1)        01 accum=r[5] step(r[15])
REG[15] =  NULL
  32 If               6   34    0               00 
REG[6] =  i:0
  33 Column           3    1    4               00 r[4]=
REG[4] =  NULL
  34 Integer          1    6    0               00 r[6]=1; indicate data in accumulator
REG[6] =  i:1
  35 SorterNext       2   22    0               00 
  36 Gosub            8   40    0               00 output final row
REG[8] =  i:36
  40 IfPos            6   42    0               00 if r[6]>0 then r[6]-=0, goto 42; Groupby result generator entry point
REG[6] =  i:1
  42 AggFinal         5    1    0 sum(1)        00 accum=r[5] N=1
  43 Copy             4   16    1               00 r[16..17]=r[4..5]
REG[16] =  NULL
REG[17] =  NULL
  44 Found            1   41   16 2             00 key=r[16..17]
REG[16] =  NULL
REG[17] =  NULL
  45 MakeRecord      16    2   15               00 r[15]=mkrec(r[16..17])
REG[15] =  s3[030000...]
  46 IdxInsert        1   15   16 2             10 key=r[15]
REG[15] =  s3[030000...]
  47 IfPos            2   41    1               00 if r[2]>0 then r[2]-=1, goto 41; OFFSET
REG[2] =  i:1
  41 Return           8    0    0               00 
REG[8] =  i:36
  37 Goto             0   54    0               00 
  54 Explain         54    0    0 USE TEMP B-TREE FOR DISTINCT 00 
  55 Halt             0    0    0               00 
SQL: [SELECT substr(c0, 5, -4) FROM t0
    
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    6 2             01 usesStmtJournal=0
  10 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
  11 Integer         -4    4    0               00 r[4]=-4
REG[4] =  i:-4
  12 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; t0
   2 Explain          2    0    0 SCAN TABLE t0 00 
   3 Rewind           0    8    0               00 
   4 Column           0    0    2               00 r[2]=t0.c0
REG[2] =  NULL
   5 Function0        6    2    1 substr(3)     03 r[1]=func(r[2..4])
REG[2] =  NULL
REG[3] =  i:5
REG[4] =  i:-4
REG[1] =  NULL
   6 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   7 Next             0    4    0               01 
   8 Halt             0    0    0               00 
SQL: [DELETE FROM t0;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    1    6 2             01 usesStmtJournal=0
   8 Goto             0    1    0               00 
   1 Clear            2    0   -1 t0            00 
   2 Clear            7    0    0               00 
   3 Clear            6    0    0               00 
   4 Clear            4    0    0               00 
   5 Clear            3    0    0               00 
   6 Halt             0    0    0               00 
SQL: [;INSERT INTO t0(c0) VALUES($string)
  
;]
VDBE Trace:
   0 Init             0   66    0               00 Start at 66
  66 Transaction      0    1    6 2             01 usesStmtJournal=0
  67 Integer          0   17    0               00 r[17]=0
REG[17] =  i:0
  68 Integer          1   18    0               00 r[18]=1
REG[18] =  i:1
  69 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 1             00 root=2 iDb=0; t0
   2 OpenWrite        1    7    0 k(2,,)        00 root=7 iDb=0; x
   3 OpenWrite        2    6    0 k(2,,)        00 root=6 iDb=0; preceding
   4 OpenWrite        3    4    0 k(3,,,)       00 root=4 iDb=0; sqlite_autoindex_t0_2
   5 OpenWrite        4    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t0_1
   6 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   7 Variable         1    2    0 $string       00 r[2]=parameter(1,$string)
REG[2] =  NULL
   8 Noop             0    0    0               00 uniqueness check for x
   9 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  10 Noop             0    0    0               00 begin IN expr
  11 BitAnd           2    2   16               00 r[16]=r[2]&r[2]
REG[2] =  NULL
REG[2] =  NULL
REG[16] =  NULL
  12 Eq               2   16   17 (BINARY)      41 if r[17]==r[2] goto 16
REG[2] =  NULL
REG[17] =  i:0
  13 Eq               2   16   18 (BINARY)      41 if r[18]==r[2] goto 16
REG[2] =  NULL
REG[18] =  i:1
  14 IsNull          16   18    0               00 if r[16]==NULL goto 18
REG[16] =  NULL
  18 IntCopy          1    5    0               00 r[5]=r[1]; rowid
REG[5] =  i:1
  19 MakeRecord       4    2    3               00 r[3]=mkrec(r[4..5]); for x
REG[3] =  s3[030009...]
  20 Noop             0    0    0               00 uniqueness check for preceding
  21 Add              2    2    7               00 r[7]=r[2]+r[2]; preceding column 0
REG[2] =  NULL
REG[2] =  NULL
REG[7] =  NULL
  22 IntCopy          1    8    0               00 r[8]=r[1]; rowid
REG[8] =  i:1
  23 MakeRecord       7    2    6               00 r[6]=mkrec(r[7..8]); for preceding
REG[6] =  s3[030009...]
  24 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t0_2
  25 SCopy            2   10    0               00 r[10]=r[2]; c0
REG[10] =  NULL
  26 SCopy            2   11    0               00 r[11]=r[2]; c0
REG[11] =  NULL
  27 IntCopy          1   12    0               00 r[12]=r[1]; rowid
REG[12] =  i:1
  28 MakeRecord      10    3    9               00 r[9]=mkrec(r[10..12]); for sqlite_autoindex_t0_2
REG[9] =  s4[04000009....]
  29 NoConflict       3   52   10 2             00 key=r[10..11]
REG[10] =  NULL
REG[11] =  NULL
  52 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t0_1
  53 SCopy            2   14    0               00 r[14]=r[2]; c0
REG[14] =  NULL
  54 IntCopy          1   15    0               00 r[15]=r[1]; rowid
REG[15] =  i:1
  55 MakeRecord      14    2   13               00 r[13]=mkrec(r[14..15]); for sqlite_autoindex_t0_1
REG[13] =  s3[030009...]
  56 Abortable        0    0    0               00 
  57 NoConflict       4   59   14 1             00 key=r[14]
REG[14] =  NULL
  59 IdxInsert        1    3    4 2             10 key=r[3]
REG[3] =  s3[030009...]
  60 IdxInsert        2    6    7 2             10 key=r[6]
REG[6] =  s3[030009...]
  61 IdxInsert        3    9   10 3             10 key=r[9]
REG[9] =  s4[04000009....]
  62 IdxInsert        4   13   14 2             10 key=r[13]
REG[13] =  s3[030009...]
  63 MakeRecord       2    1   16               00 r[16]=mkrec(r[2])
REG[16] =  s2[0200..]
  64 Insert           0   16    1 t0            39 intkey=r[1] data=r[16]
REG[16] =  s2[0200..]
REG[1] =  i:1
  65 Halt             0    0    0               00 
SQL: [;INSERT INTO t0(c0) VALUES($string)
  
;]
VDBE Trace:
   0 Init             0   66    0               00 Start at 66
  66 Transaction      0    1    6 2             01 usesStmtJournal=0
  67 Integer          0   17    0               00 r[17]=0
REG[17] =  i:0
  68 Integer          1   18    0               00 r[18]=1
REG[18] =  i:1
  69 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 1             00 root=2 iDb=0; t0
   2 OpenWrite        1    7    0 k(2,,)        00 root=7 iDb=0; x
   3 OpenWrite        2    6    0 k(2,,)        00 root=6 iDb=0; preceding
   4 OpenWrite        3    4    0 k(3,,,)       00 root=4 iDb=0; sqlite_autoindex_t0_2
   5 OpenWrite        4    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t0_1
   6 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   7 Variable         1    2    0 $string       00 r[2]=parameter(1,$string)
REG[2] =  NULL
   8 Noop             0    0    0               00 uniqueness check for x
   9 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  10 Noop             0    0    0               00 begin IN expr
  11 BitAnd           2    2   16               00 r[16]=r[2]&r[2]
REG[2] =  NULL
REG[2] =  NULL
REG[16] =  NULL
  12 Eq               2   16   17 (BINARY)      41 if r[17]==r[2] goto 16
REG[2] =  NULL
REG[17] =  i:0
  13 Eq               2   16   18 (BINARY)      41 if r[18]==r[2] goto 16
REG[2] =  NULL
REG[18] =  i:1
  14 IsNull          16   18    0               00 if r[16]==NULL goto 18
REG[16] =  NULL
  18 IntCopy          1    5    0               00 r[5]=r[1]; rowid
REG[5] =  i:2
  19 MakeRecord       4    2    3               00 r[3]=mkrec(r[4..5]); for x
REG[3] =  s4[03000102....]
  20 Noop             0    0    0               00 uniqueness check for preceding
  21 Add              2    2    7               00 r[7]=r[2]+r[2]; preceding column 0
REG[2] =  NULL
REG[2] =  NULL
REG[7] =  NULL
  22 IntCopy          1    8    0               00 r[8]=r[1]; rowid
REG[8] =  i:2
  23 MakeRecord       7    2    6               00 r[6]=mkrec(r[7..8]); for preceding
REG[6] =  s4[03000102....]
  24 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t0_2
  25 SCopy            2   10    0               00 r[10]=r[2]; c0
REG[10] =  NULL
  26 SCopy            2   11    0               00 r[11]=r[2]; c0
REG[11] =  NULL
  27 IntCopy          1   12    0               00 r[12]=r[1]; rowid
REG[12] =  i:2
  28 MakeRecord      10    3    9               00 r[9]=mkrec(r[10..12]); for sqlite_autoindex_t0_2
REG[9] =  s5[0400000102.....]
  29 NoConflict       3   52   10 2             00 key=r[10..11]
REG[10] =  NULL
REG[11] =  NULL
  52 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t0_1
  53 SCopy            2   14    0               00 r[14]=r[2]; c0
REG[14] =  NULL
  54 IntCopy          1   15    0               00 r[15]=r[1]; rowid
REG[15] =  i:2
  55 MakeRecord      14    2   13               00 r[13]=mkrec(r[14..15]); for sqlite_autoindex_t0_1
REG[13] =  s4[03000102....]
  56 Abortable        0    0    0               00 
  57 NoConflict       4   59   14 1             00 key=r[14]
REG[14] =  NULL
  59 IdxInsert        1    3    4 2             10 key=r[3]
REG[3] =  s4[03000102....]
  60 IdxInsert        2    6    7 2             10 key=r[6]
REG[6] =  s4[03000102....]
  61 IdxInsert        3    9   10 3             10 key=r[9]
REG[9] =  s5[0400000102.....]
  62 IdxInsert        4   13   14 2             10 key=r[13]
REG[13] =  s4[03000102....]
  63 MakeRecord       2    1   16               00 r[16]=mkrec(r[2])
REG[16] =  s2[0200..]
  64 Insert           0   16    1 t0            39 intkey=r[1] data=r[16]
REG[16] =  s2[0200..]
REG[1] =  i:2
  65 Halt             0    0    0               00 
SQL: [;INSERT INTO t0(c0) VALUES($string)
  
;]
VDBE Trace:
   0 Init             0   66    0               00 Start at 66
  66 Transaction      0    1    6 2             01 usesStmtJournal=0
  67 Integer          0   17    0               00 r[17]=0
REG[17] =  i:0
  68 Integer          1   18    0               00 r[18]=1
REG[18] =  i:1
  69 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 1             00 root=2 iDb=0; t0
   2 OpenWrite        1    7    0 k(2,,)        00 root=7 iDb=0; x
   3 OpenWrite        2    6    0 k(2,,)        00 root=6 iDb=0; preceding
   4 OpenWrite        3    4    0 k(3,,,)       00 root=4 iDb=0; sqlite_autoindex_t0_2
   5 OpenWrite        4    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t0_1
   6 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   7 Variable         1    2    0 $string       00 r[2]=parameter(1,$string)
REG[2] =  NULL
   8 Noop             0    0    0               00 uniqueness check for x
   9 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  10 Noop             0    0    0               00 begin IN expr
  11 BitAnd           2    2   16               00 r[16]=r[2]&r[2]
REG[2] =  NULL
REG[2] =  NULL
REG[16] =  NULL
  12 Eq               2   16   17 (BINARY)      41 if r[17]==r[2] goto 16
REG[2] =  NULL
REG[17] =  i:0
  13 Eq               2   16   18 (BINARY)      41 if r[18]==r[2] goto 16
REG[2] =  NULL
REG[18] =  i:1
  14 IsNull          16   18    0               00 if r[16]==NULL goto 18
REG[16] =  NULL
  18 IntCopy          1    5    0               00 r[5]=r[1]; rowid
REG[5] =  i:3
  19 MakeRecord       4    2    3               00 r[3]=mkrec(r[4..5]); for x
REG[3] =  s4[03000103....]
  20 Noop             0    0    0               00 uniqueness check for preceding
  21 Add              2    2    7               00 r[7]=r[2]+r[2]; preceding column 0
REG[2] =  NULL
REG[2] =  NULL
REG[7] =  NULL
  22 IntCopy          1    8    0               00 r[8]=r[1]; rowid
REG[8] =  i:3
  23 MakeRecord       7    2    6               00 r[6]=mkrec(r[7..8]); for preceding
REG[6] =  s4[03000103....]
  24 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t0_2
  25 SCopy            2   10    0               00 r[10]=r[2]; c0
REG[10] =  NULL
  26 SCopy            2   11    0               00 r[11]=r[2]; c0
REG[11] =  NULL
  27 IntCopy          1   12    0               00 r[12]=r[1]; rowid
REG[12] =  i:3
  28 MakeRecord      10    3    9               00 r[9]=mkrec(r[10..12]); for sqlite_autoindex_t0_2
REG[9] =  s5[0400000103.....]
  29 NoConflict       3   52   10 2             00 key=r[10..11]
REG[10] =  NULL
REG[11] =  NULL
  52 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t0_1
  53 SCopy            2   14    0               00 r[14]=r[2]; c0
REG[14] =  NULL
  54 IntCopy          1   15    0               00 r[15]=r[1]; rowid
REG[15] =  i:3
  55 MakeRecord      14    2   13               00 r[13]=mkrec(r[14..15]); for sqlite_autoindex_t0_1
REG[13] =  s4[03000103....]
  56 Abortable        0    0    0               00 
  57 NoConflict       4   59   14 1             00 key=r[14]
REG[14] =  NULL
  59 IdxInsert        1    3    4 2             10 key=r[3]
REG[3] =  s4[03000103....]
  60 IdxInsert        2    6    7 2             10 key=r[6]
REG[6] =  s4[03000103....]
  61 IdxInsert        3    9   10 3             10 key=r[9]
REG[9] =  s5[0400000103.....]
  62 IdxInsert        4   13   14 2             10 key=r[13]
REG[13] =  s4[03000103....]
  63 MakeRecord       2    1   16               00 r[16]=mkrec(r[2])
REG[16] =  s2[0200..]
  64 Insert           0   16    1 t0            39 intkey=r[1] data=r[16]
REG[16] =  s2[0200..]
REG[1] =  i:3
  65 Halt             0    0    0               00 
SQL: [DELETE FROM v0;]
VDBE Trace:
   0 Init             0    3    0               00 Start at 3
   3 Transaction      0    1    6 2             01 usesStmtJournal=0
   4 Goto             0    1    0               00 
   1 Clear            5    0   -1 v0            00 
   2 Halt             0    0    0               00 
SQL: [SELECT substr(c0, 200, 100) FROM t0
    
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    6 2             01 usesStmtJournal=0
  10 Integer        200    3    0               00 r[3]=200
REG[3] =  i:200
  11 Integer        100    4    0               00 r[4]=100
REG[4] =  i:100
  12 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; t0
   2 Explain          2    0    0 SCAN TABLE t0 00 
   3 Rewind           0    8    0               00 
   4 Column           0    0    2               00 r[2]=t0.c0
REG[2] =  NULL
   5 Function0        6    2    1 substr(3)     03 r[1]=func(r[2..4])
REG[2] =  NULL
REG[3] =  i:200
REG[4] =  i:100
REG[1] =  NULL
   6 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   7 Next             0    4    0               01 
   4 Column           0    0    2               00 r[2]=t0.c0
REG[2] =  NULL
   5 Function         6    2    1 substr(3)     03 r[1]=func(r[2..4])
REG[2] =  NULL
REG[3] =  i:200
REG[4] =  i:100
REG[1] =  NULL
   6 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   7 Next             0    4    0               01 
   4 Column           0    0    2               00 r[2]=t0.c0
REG[2] =  NULL
   5 Function         6    2    1 substr(3)     03 r[1]=func(r[2..4])
REG[2] =  NULL
REG[3] =  i:200
REG[4] =  i:100
REG[1] =  NULL
   6 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   7 Next             0    4    0               01 
   8 Halt             0    0    0               00 
SQL: [SELECT ifnull(substr('abcdefg',NULL,1),'nil')
;]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 abcdefg       00 r[3]='abcdefg'
REG[3] =   t7[abcdefg](8)
   6 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
   7 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
   8 Function0        7    3    2 substr(3)     03 r[2]=func(r[3..5])
REG[3] =   t7[abcdefg](8)
REG[4] =  NULL
REG[5] =  i:1
REG[2] =  NULL
   9 NotNull          2   11    0               00 if r[2]!=NULL goto 11
REG[2] =  NULL
  10 String8          0    2    0 nil           00 r[2]='nil'
REG[2] =   t3[nil](8)
  11 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   t3[nil](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t3[nil](8)
   4 Halt             0    0    0               00 
SQL: [SELECT substr(c0, 1, 1) FROM t0
    
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    6 2             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; t0
   2 Explain          2    0    0 SCAN TABLE t0 00 
   3 Rewind           0    8    0               00 
   4 Column           0    0    2               00 r[2]=t0.c0
REG[2] =  NULL
   5 Function0        6    2    1 substr(3)     03 r[1]=func(r[2..4])
REG[2] =  NULL
REG[3] =  i:1
REG[4] =  i:1
REG[1] =  NULL
   6 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   7 Next             0    4    0               01 
   4 Column           0    0    2               00 r[2]=t0.c0
REG[2] =  NULL
   5 Function         6    2    1 substr(3)     03 r[1]=func(r[2..4])
REG[2] =  NULL
REG[3] =  i:1
REG[4] =  i:1
REG[1] =  NULL
   6 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   7 Next             0    4    0               01 
   4 Column           0    0    2               00 r[2]=t0.c0
REG[2] =  NULL
   5 Function         6    2    1 substr(3)     03 r[1]=func(r[2..4])
REG[2] =  NULL
REG[3] =  i:1
REG[4] =  i:1
REG[1] =  NULL
   6 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   7 Next             0    4    0               01 
   8 Halt             0    0    0               00 
SQL: [;INSERT INTO t0(c0) VALUES(x'61626364656667')
  
;]
VDBE Trace:
   0 Init             0   66    0               00 Start at 66
  66 Transaction      0    1    6 2             01 usesStmtJournal=0
  67 Integer          0   17    0               00 r[17]=0
REG[17] =  i:0
  68 Integer          1   18    0               00 r[18]=1
REG[18] =  i:1
  69 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 1             00 root=2 iDb=0; t0
   2 OpenWrite        1    7    0 k(2,,)        00 root=7 iDb=0; x
   3 OpenWrite        2    6    0 k(2,,)        00 root=6 iDb=0; preceding
   4 OpenWrite        3    4    0 k(3,,,)       00 root=4 iDb=0; sqlite_autoindex_t0_2
   5 OpenWrite        4    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t0_1
   6 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   7 Blob             7    2    0 abcdefg       00 r[2]=abcdefg (len=7)
REG[2] =  t7[61626364656667abcdefg]
   8 Noop             0    0    0               00 uniqueness check for x
   9 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  10 Noop             0    0    0               00 begin IN expr
  11 BitAnd           2    2   16               00 r[16]=r[2]&r[2]
REG[2] =  t7[61626364656667abcdefg]
REG[2] =  t7[61626364656667abcdefg]
REG[16] =  i:0
  12 Eq               2   16   17 (BINARY)      41 if r[17]==r[2] goto 16
REG[2] =  t7[61626364656667abcdefg]
REG[17] =  i:0
  13 Eq               2   16   18 (BINARY)      41 if r[18]==r[2] goto 16
REG[2] =  t7[61626364656667abcdefg]
REG[18] =  i:1
  14 IsNull          16   18    0               00 if r[16]==NULL goto 18
REG[16] =  i:0
  15 Goto             0   17    0               00 end IN expr
  17 AddImm           4    0    0               00 r[4]=r[4]+0; x column 0
REG[4] =  NULL
  18 IntCopy          1    5    0               00 r[5]=r[1]; rowid
REG[5] =  i:4
  19 MakeRecord       4    2    3               00 r[3]=mkrec(r[4..5]); for x
REG[3] =  s4[03080104....]
  20 Noop             0    0    0               00 uniqueness check for preceding
  21 Add              2    2    7               00 r[7]=r[2]+r[2]; preceding column 0
REG[2] =  t7[61626364656667abcdefg]
REG[2] =  t7[61626364656667abcdefg]
REG[7] =  i:0
  22 IntCopy          1    8    0               00 r[8]=r[1]; rowid
REG[8] =  i:4
  23 MakeRecord       7    2    6               00 r[6]=mkrec(r[7..8]); for preceding
REG[6] =  s4[03080104....]
  24 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t0_2
  25 SCopy            2   10    0               00 r[10]=r[2]; c0
REG[10] =  t7[61626364656667abcdefg]
  26 SCopy            2   11    0               00 r[11]=r[2]; c0
REG[11] =  t7[61626364656667abcdefg]
  27 IntCopy          1   12    0               00 r[12]=r[1]; rowid
REG[12] =  i:4
  28 MakeRecord      10    3    9               00 r[9]=mkrec(r[10..12]); for sqlite_autoindex_t0_2
REG[9] =  s19[041A1A01616263646566676162636465....abcdefgabcde]
  29 NoConflict       3   52   10 2             00 key=r[10..11]
REG[10] =  t7[61626364656667abcdefg]
REG[11] =  t7[61626364656667abcdefg]
  52 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t0_1
  53 SCopy            2   14    0               00 r[14]=r[2]; c0
REG[14] =  t7[61626364656667abcdefg]
  54 IntCopy          1   15    0               00 r[15]=r[1]; rowid
REG[15] =  i:4
  55 MakeRecord      14    2   13               00 r[13]=mkrec(r[14..15]); for sqlite_autoindex_t0_1
REG[13] =  s11[031A016162636465666704...abcdefg.]
  56 Abortable        0    0    0               00 
  57 NoConflict       4   59   14 1             00 key=r[14]
REG[14] =  t7[61626364656667abcdefg]
  59 IdxInsert        1    3    4 2             10 key=r[3]
REG[3] =  s4[03080104....]
  60 IdxInsert        2    6    7 2             10 key=r[6]
REG[6] =  s4[03080104....]
  61 IdxInsert        3    9   10 3             10 key=r[9]
REG[9] =  s19[041A1A01616263646566676162636465....abcdefgabcde]
  62 IdxInsert        4   13   14 2             10 key=r[13]
REG[13] =  s11[031A016162636465666704...abcdefg.]
  63 MakeRecord       2    1   16               00 r[16]=mkrec(r[2])
REG[16] =  s9[021A61626364656667..abcdefg]
  64 Insert           0   16    1 t0            39 intkey=r[1] data=r[16]
REG[16] =  s9[021A61626364656667..abcdefg]
REG[1] =  i:4
  65 Halt             0    0    0               00 
SQL: [SELECT hex(substr(c0, 0, 2)) FROM t0
    
;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    6 2             01 usesStmtJournal=0
  11 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  12 Integer          2    5    0               00 r[5]=2
REG[5] =  i:2
  13 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; t0
   2 Explain          2    0    0 SCAN TABLE t0 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    3               00 r[3]=t0.c0
REG[3] =  NULL
   5 Function0        6    3    2 substr(3)     03 r[2]=func(r[3..5])
REG[3] =  NULL
REG[4] =  i:0
REG[5] =  i:2
REG[2] =  NULL
   6 Function0        0    2    1 hex(1)        01 r[1]=func(r[2])
REG[2] =  NULL
REG[1] =   z0[](8)
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s0[](8)
   8 Next             0    4    0               01 
   4 Column           0    0    3               00 r[3]=t0.c0
REG[3] =  NULL
   5 Function         6    3    2 substr(3)     03 r[2]=func(r[3..5])
REG[3] =  NULL
REG[4] =  i:0
REG[5] =  i:2
REG[2] =  NULL
   6 Function         0    2    1 hex(1)        01 r[1]=func(r[2])
REG[2] =  NULL
REG[1] =   z0[](8)
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s0[](8)
   8 Next             0    4    0               01 
   4 Column           0    0    3               00 r[3]=t0.c0
REG[3] =  NULL
   5 Function         6    3    2 substr(3)     03 r[2]=func(r[3..5])
REG[3] =  NULL
REG[4] =  i:0
REG[5] =  i:2
REG[2] =  NULL
   6 Function         0    2    1 hex(1)        01 r[1]=func(r[2])
REG[2] =  NULL
REG[1] =   z0[](8)
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s0[](8)
   8 Next             0    4    0               01 
   4 Column           0    0    3               00 r[3]=t0.c0
REG[3] =  s7[61626364656667abcdefg]
   5 Function         6    3    2 substr(3)     03 r[2]=func(r[3..5])
REG[3] =  s7[61626364656667abcdefg]
REG[4] =  i:0
REG[5] =  i:2
REG[2] =  s1[61a]
   6 Function         0    2    1 hex(1)        01 r[1]=func(r[2])
REG[2] =  s1[61a]
REG[1] =   z2[61](8)
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s2[61](8)
   8 Next             0    4    0               01 
   9 Halt             0    0    0               00 
SQL: [;INSERT INTO t0(c0) VALUES(x'61626364656667')
  
;]
VDBE Trace:
   0 Init             0   66    0               00 Start at 66
  66 Transaction      0    1    6 2             01 usesStmtJournal=0
  67 Integer          0   17    0               00 r[17]=0
REG[17] =  i:0
  68 Integer          1   18    0               00 r[18]=1
REG[18] =  i:1
  69 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 1             00 root=2 iDb=0; t0
   2 OpenWrite        1    7    0 k(2,,)        00 root=7 iDb=0; x
   3 OpenWrite        2    6    0 k(2,,)        00 root=6 iDb=0; preceding
   4 OpenWrite        3    4    0 k(3,,,)       00 root=4 iDb=0; sqlite_autoindex_t0_2
   5 OpenWrite        4    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t0_1
   6 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   7 Blob             7    2    0 abcdefg       00 r[2]=abcdefg (len=7)
REG[2] =  t7[61626364656667abcdefg]
   8 Noop             0    0    0               00 uniqueness check for x
   9 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  10 Noop             0    0    0               00 begin IN expr
  11 BitAnd           2    2   16               00 r[16]=r[2]&r[2]
REG[2] =  t7[61626364656667abcdefg]
REG[2] =  t7[61626364656667abcdefg]
REG[16] =  i:0
  12 Eq               2   16   17 (BINARY)      41 if r[17]==r[2] goto 16
REG[2] =  t7[61626364656667abcdefg]
REG[17] =  i:0
  13 Eq               2   16   18 (BINARY)      41 if r[18]==r[2] goto 16
REG[2] =  t7[61626364656667abcdefg]
REG[18] =  i:1
  14 IsNull          16   18    0               00 if r[16]==NULL goto 18
REG[16] =  i:0
  15 Goto             0   17    0               00 end IN expr
  17 AddImm           4    0    0               00 r[4]=r[4]+0; x column 0
REG[4] =  NULL
  18 IntCopy          1    5    0               00 r[5]=r[1]; rowid
REG[5] =  i:5
  19 MakeRecord       4    2    3               00 r[3]=mkrec(r[4..5]); for x
REG[3] =  s4[03080105....]
  20 Noop             0    0    0               00 uniqueness check for preceding
  21 Add              2    2    7               00 r[7]=r[2]+r[2]; preceding column 0
REG[2] =  t7[61626364656667abcdefg]
REG[2] =  t7[61626364656667abcdefg]
REG[7] =  i:0
  22 IntCopy          1    8    0               00 r[8]=r[1]; rowid
REG[8] =  i:5
  23 MakeRecord       7    2    6               00 r[6]=mkrec(r[7..8]); for preceding
REG[6] =  s4[03080105....]
  24 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t0_2
  25 SCopy            2   10    0               00 r[10]=r[2]; c0
REG[10] =  t7[61626364656667abcdefg]
  26 SCopy            2   11    0               00 r[11]=r[2]; c0
REG[11] =  t7[61626364656667abcdefg]
  27 IntCopy          1   12    0               00 r[12]=r[1]; rowid
REG[12] =  i:5
  28 MakeRecord      10    3    9               00 r[9]=mkrec(r[10..12]); for sqlite_autoindex_t0_2
REG[9] =  s19[041A1A01616263646566676162636465....abcdefgabcde]
  29 NoConflict       3   52   10 2             00 key=r[10..11]
REG[10] =  t7[61626364656667abcdefg]
REG[11] =  t7[61626364656667abcdefg]
  30 IdxRowid         3   16    0               00 r[16]=rowid
REG[16] =  i:4
  31 NotExists        0   52   16 1             00 intkey=r[16]
REG[16] =  i:4
  32 Null             0   19    0               00 r[19]=NULL
REG[19] =  NULL
  33 Noop             0    0    0               00 begin IN expr
  34 Column           0    0   21               00 r[21]=t0.c0
REG[21] =  s7[61626364656667abcdefg]
  35 BitAnd          21   21   22               00 r[22]=r[21]&r[21]
REG[21] =  s7[61626364656667abcdefg]
REG[21] =  s7[61626364656667abcdefg]
REG[22] =  i:0
  36 Eq              21   40   17 (BINARY)      41 if r[17]==r[21] goto 40
REG[21] =  s7[61626364656667abcdefg]
REG[17] =  i:0
  37 Eq              21   40   18 (BINARY)      41 if r[18]==r[21] goto 40
REG[21] =  s7[61626364656667abcdefg]
REG[18] =  i:1
  38 IsNull          22   42    0               00 if r[22]==NULL goto 42
REG[22] =  i:0
  39 Goto             0   41    0               00 end IN expr
  41 AddImm          19    0    0               00 r[19]=r[19]+0
REG[19] =  NULL
  42 Rowid            0   20    0               00 r[20]=rowid
REG[20] =  i:4
  43 IdxDelete        1   19    2               00 key=r[19..20]
  44 Column           0    0   22               00 r[22]=t0.c0
REG[22] =  s7[61626364656667abcdefg]
  45 Column           0    0   23               00 r[23]=t0.c0
REG[23] =  s7[61626364656667abcdefg]
  46 Add             23   22   19               00 r[19]=r[23]+r[22]
REG[23] =  s7[61626364656667abcdefg]
REG[22] =  s7[61626364656667abcdefg]
REG[19] =  i:0
  47 IdxDelete        2   19    2               00 key=r[19..20]
  48 Column           0    0   19               00 r[19]=t0.c0
REG[19] =  s7[61626364656667abcdefg]
  49 IdxDelete        4   19    2               00 key=r[19..20]
  50 Delete           0    0    0 t0            00 
  51 Delete           3    0    0               00 
  52 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t0_1
  53 SCopy            2   14    0               00 r[14]=r[2]; c0
REG[14] =  t7[61626364656667abcdefg]
  54 IntCopy          1   15    0               00 r[15]=r[1]; rowid
REG[15] =  i:5
  55 MakeRecord      14    2   13               00 r[13]=mkrec(r[14..15]); for sqlite_autoindex_t0_1
REG[13] =  s11[031A016162636465666705...abcdefg.]
  56 Abortable        0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fa6ecf02859 in __GI_abort () at abort.c:79
#2  0x00007fa6ecf02729 in __assert_fail_base (fmt=0x7fa6ed098588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x213d8b "p->nWrite==0 || p->usesStmtJournal", file=0x22873d "sqlite3.c", line=77006, 
    function=<optimized out>) at assert.c:92
#3  0x00007fa6ecf13fd6 in __GI___assert_fail (assertion=0x213d8b "p->nWrite==0 || p->usesStmtJournal", file=0x22873d "sqlite3.c", line=77006, function=0x227155 "void sqlite3VdbeAssertAbortable(Vdbe *)") at assert.c:101
#4  0x00000000003e133c in sqlite3VdbeAssertAbortable (p=0x1612d00) at sqlite3.c:77006
#5  0x00000000003e01da in sqlite3VdbeExec (p=0x1612d00) at sqlite3.c:91079
#6  0x0000000000411104 in sqlite3Step (p=0x1612d00) at sqlite3.c:81930
#7  0x000000000029128d in sqlite3_step (pStmt=0x1612d00) at sqlite3.c:81995
#8  0x00000000002570b9 in main (argc=1, argv=0x7fff9fe1d8d8) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 57312] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
