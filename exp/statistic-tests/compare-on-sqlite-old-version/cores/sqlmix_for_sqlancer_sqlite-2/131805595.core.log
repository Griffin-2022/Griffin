GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000554,sig:06,src:025303+021359,time:22824603,execs:4354135,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    0 0             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
SQL: [CREATE TABLE t0(
    c0 PRIMARY KEY,
    UNIQUE(c0,c0),
    UNIQUE(c0,c0) ON CONFLICT REPLACE
  );]
VDBE Trace:
   0 Init             0   50    0               00 Start at 50
  50 Transaction      0    1    0 0             01 usesStmtJournal=0
  51 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      0    4    2               00 r[4]=root iDb=0 flags=2
REG[4] =  i:3
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:2
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_t0_1 00 r[7]='sqlite_autoindex_t0_1'
REG[7] =   t21[sqlite_autoinde](8)
  17 String8          0    8    0 t0            00 r[8]='t0'
REG[8] =   t2[t0](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:3
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s35[061737110100696E64657873716C6974..7...indexsqlit]
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  s35[061737110100696E64657873716C6974..7...indexsqlit]
REG[5] =  i:2
  22 Noop             0   33    0               00 
  23 CreateBtree      0   12    2               00 r[12]=root iDb=0 flags=2
REG[12] =  i:4
  24 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  25 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:3
  26 String8          0   14    0 index         00 r[14]='index'
REG[14] =   t5[index](8)
  27 String8          0   15    0 sqlite_autoindex_t0_2 00 r[15]='sqlite_autoindex_t0_2'
REG[15] =   t21[sqlite_autoinde](8)
  28 String8          0   16    0 t0            00 r[16]='t0'
REG[16] =   t2[t0](8)
  29 Copy            12   17    0               00 r[17]=r[12]
REG[17] =  i:4
  30 Null             0   18    0               00 r[18]=NULL
REG[18] =  NULL
  31 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s35[061737110100696E64657873716C6974..7...indexsqlit]
  32 Insert           2   19   13               18 intkey=r[13] data=r[19]
REG[19] =  s35[061737110100696E64657873716C6974..7...indexsqlit]
REG[13] =  i:3
  33 Close            0    0    0               00 
  34 Null             0   20   21               00 r[20..21]=NULL
REG[20] =  NULL
  35 OpenWrite        3    1    0 5             00 root=1 iDb=0; sqlite_master
  36 Explain         36    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  37 SeekRowid        3   39    1               00 intkey=r[1]
REG[1] =  i:1
  38 Rowid            3   21    0               00 r[21]=rowid
REG[21] =  i:1
  39 IsNull          21   47    0               00 if r[21]==NULL goto 47
REG[21] =  i:1
  40 String8          0   22    0 table         00 r[22]='table'
REG[22] =   t5[table](8)
  41 String8          0   23    0 t0            00 r[23]='t0'
REG[23] =   t2[t0](8)
  42 String8          0   24    0 t0            00 r[24]='t0'
REG[24] =   t2[t0](8)
  43 Copy             2   25    0               00 r[25]=r[2]
REG[25] =  i:2
  44 String8          0   26    0 CREATE TABLE t0(
    c0 PRIMARY KEY,
    UNIQUE(c0,c0),
    UNIQUE(c0,c0) ON CONFLICT REPLACE
  ) 00 r[26]='CREATE TABLE t0(
    c0 PRIMARY KEY,
    UNIQUE(c0,c0),
    UNIQUE(c0,c0) ON CONFLICT REPLAC
REG[26] =   t97[CREATE TABLE t0](8)
  45 MakeRecord      22    5   27 BBBDB         00 r[27]=mkrec(r[22..26])
REG[27] =  s114[0717111101814F7461626C6574307430......Otablet0t0]
  46 Insert           3   27   21               00 intkey=r[21] data=r[27]
REG[27] =  s114[0717111101814F7461626C6574307430......Otablet0t0]
REG[21] =  i:1
  47 SetCookie        0    1    1               00 
  48 ParseSchema      0    0    0 tbl_name='t0' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    1 0             00 usesStmtJournal=0
  16 String8          0    2    0 t0            00 r[2]='t0'
REG[2] =   t2[t0](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s2[t0](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t0](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s97[CREATE TABLE t0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t0](8)
REG[5] =  i:2
REG[6] =   s97[CREATE TABLE t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s2[t0](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s21[sqlite_autoinde](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =  NULL
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s21[sqlite_autoinde](8)
REG[5] =  i:3
REG[6] =  NULL
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s2[t0](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s21[sqlite_autoinde](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =  NULL
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s21[sqlite_autoinde](8)
REG[5] =  i:4
REG[6] =  NULL
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  49 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kennel',nullif('kennel','kennel'),'CAML')
;]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    1    1 0             01 usesStmtJournal=0
  32 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 1             00 root=2 iDb=0; t0
   2 OpenWrite        1    4    0 k(3,,,)       00 root=4 iDb=0; sqlite_autoindex_t0_2
   3 OpenWrite        2    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t0_1
   4 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   5 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   6 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t0_2
   7 SCopy            2    4    0               00 r[4]=r[2]; c0
REG[4] =  i:1
   8 SCopy            2    5    0               00 r[5]=r[2]; c0
REG[5] =  i:1
   9 IntCopy          1    6    0               00 r[6]=r[1]; rowid
REG[6] =  i:1
  10 MakeRecord       4    3    3               00 r[3]=mkrec(r[4..6]); for sqlite_autoindex_t0_2
REG[3] =  s4[04090909....]
  11 NoConflict       1   19    4 2             00 key=r[4..5]
REG[4] =  i:1
REG[5] =  i:1
  19 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t0_1
  20 SCopy            2    8    0               00 r[8]=r[2]; c0
REG[8] =  i:1
  21 IntCopy          1    9    0               00 r[9]=r[1]; rowid
REG[9] =  i:1
  22 MakeRecord       8    2    7               00 r[7]=mkrec(r[8..9]); for sqlite_autoindex_t0_1
REG[7] =  s3[030909...]
  23 Abortable        0    0    0               00 
  24 NoConflict       2   26    8 1             00 key=r[8]
REG[8] =  i:1
  26 IdxInsert        1    3    4 3             10 key=r[3]
REG[3] =  s4[04090909....]
  27 IdxInsert        2    7    8 2             10 key=r[7]
REG[7] =  s3[030909...]
  28 MakeRecord       2    1   10               00 r[10]=mkrec(r[2])
REG[10] =  s2[0209..]
  29 Insert           0   10    1 t0            39 intkey=r[1] data=r[10]
REG[10] =  s2[0209..]
REG[1] =  i:1
  30 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kernel',nullif('kernel','kernel'),'CRML')
;]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    1    1 0             01 usesStmtJournal=0
  32 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 1             00 root=2 iDb=0; t0
   2 OpenWrite        1    4    0 k(3,,,)       00 root=4 iDb=0; sqlite_autoindex_t0_2
   3 OpenWrite        2    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t0_1
   4 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   5 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   6 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t0_2
   7 SCopy            2    4    0               00 r[4]=r[2]; c0
REG[4] =  i:1
   8 SCopy            2    5    0               00 r[5]=r[2]; c0
REG[5] =  i:1
   9 IntCopy          1    6    0               00 r[6]=r[1]; rowid
REG[6] =  i:2
  10 MakeRecord       4    3    3               00 r[3]=mkrec(r[4..6]); for sqlite_autoindex_t0_2
REG[3] =  s5[0409090102.....]
  11 NoConflict       1   19    4 2             00 key=r[4..5]
REG[4] =  i:1
REG[5] =  i:1
  12 IdxRowid         1   10    0               00 r[10]=rowid
REG[10] =  i:1
  13 NotExists        0   19   10 1             00 intkey=r[10]
REG[10] =  i:1
  14 Column           0    0   11               00 r[11]=t0.c0
REG[11] =  i:1
  15 Rowid            0   12    0               00 r[12]=rowid
REG[12] =  i:1
  16 IdxDelete        2   11    2               00 key=r[11..12]
  17 Delete           0    0    0 t0            00 
  18 Delete           1    0    0               00 
  19 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t0_1
  20 SCopy            2    8    0               00 r[8]=r[2]; c0
REG[8] =  i:1
  21 IntCopy          1    9    0               00 r[9]=r[1]; rowid
REG[9] =  i:2
  22 MakeRecord       8    2    7               00 r[7]=mkrec(r[8..9]); for sqlite_autoindex_t0_1
REG[7] =  s4[03090102....]
  23 Abortable        0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f762380b859 in __GI_abort () at abort.c:79
#2  0x00007f762380b729 in __assert_fail_base (fmt=0x7f76239a1588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x213d8b "p->nWrite==0 || p->usesStmtJournal", file=0x22873d "sqlite3.c", line=77006, 
    function=<optimized out>) at assert.c:92
#3  0x00007f762381cfd6 in __GI___assert_fail (assertion=0x213d8b "p->nWrite==0 || p->usesStmtJournal", file=0x22873d "sqlite3.c", line=77006, function=0x227155 "void sqlite3VdbeAssertAbortable(Vdbe *)") at assert.c:101
#4  0x00000000003e133c in sqlite3VdbeAssertAbortable (p=0x261fd70) at sqlite3.c:77006
#5  0x00000000003e01da in sqlite3VdbeExec (p=0x261fd70) at sqlite3.c:91079
#6  0x0000000000411104 in sqlite3Step (p=0x261fd70) at sqlite3.c:81930
#7  0x000000000029128d in sqlite3_step (pStmt=0x261fd70) at sqlite3.c:81995
#8  0x00000000002570b9 in main (argc=1, argv=0x7ffc1a4574f8) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 59482] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
