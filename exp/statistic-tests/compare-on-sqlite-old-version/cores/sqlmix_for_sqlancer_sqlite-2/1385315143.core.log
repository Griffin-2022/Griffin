GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000151,sig:06,src:020870+004715,time:2015540,execs:264634,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;INSERT INTO t0 VALUES(6,'two',11);]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    1    1 0             01 usesStmtJournal=0
  10 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 3             00 root=2 iDb=0; t0
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   3 Integer          6    2    0               00 r[2]=6
REG[2] =  i:6
   4 String8          0    3    0 two           00 r[3]='two'
REG[3] =   t3[two](8)
   5 Integer         11    4    0               00 r[4]=11
REG[4] =  i:11
   6 MakeRecord       2    3    5               00 r[5]=mkrec(r[2..4])
REG[5] =  s9[040113010674776F0B.....two.]
   7 Insert           0    5    1 t0            39 intkey=r[1] data=r[5]
REG[5] =  s9[040113010674776F0B.....two.]
REG[1] =  i:2
   8 Halt             0    0    0               00 
SQL: [SELECT DISTINCT c0,sum(over) AS total      
    FROM t0      
    GROUP BY LOWER(c0)      
    LIMIT 2 OFFSET 1
  
;]
VDBE Trace:
   0 Init             0   57    0               00 Start at 57
  57 Transaction      0    0    1 0             01 usesStmtJournal=0
  58 Goto             0    1    0               00 
   1 Integer          2    1    0               00 r[1]=2; LIMIT counter
REG[1] =  i:2
   2 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   3 MustBeInt        2    0    0               00 OFFSET counter
REG[2] =  i:1
   4 OffsetLimit      1    3    2               00 if r[1]>0 then r[3]=r[1]+max(0,r[2]) else r[3]=(-1); LIMIT+OFFSET
REG[1] =  i:2
REG[2] =  i:1
REG[3] =  i:3
   5 OpenEphemeral    1    0    0 k(2,B,B)      08 nColumn=0
   6 SorterOpen       2    3    0 k(1,B)        00 
   7 Integer          0    8    0               00 r[8]=0; clear abort flag
REG[8] =  i:0
   8 Null             0   11   11               00 r[11..11]=NULL
REG[11] =  NULL
   9 Gosub           10   52    0               00 
REG[10] =  i:9
  52 Null             0    4    6               00 r[4..6]=NULL
REG[4] =  NULL
  53 Integer          0    7    0               00 r[7]=0; indicate accumulator empty
REG[7] =  i:0
  54 Return          10    0    0               00 
REG[10] =  i:9
  10 OpenRead         0    2    0 3             00 root=2 iDb=0; t0
  11 Explain         11    0    0 SCAN TABLE t0 00 
  12 Rewind           0   21    0               00 
  13 Explain         13    0    0 USE TEMP B-TREE FOR GROUP BY 00 
  14 Column           0    0   16               00 r[16]=t0.c0
REG[16] =  i:3
  15 Function0        0   16   13 lower(1)      01 r[13]=func(r[16])
REG[16] =  i:3
REG[13] =   z1[3](8)
  16 Column           0    0   14               00 r[14]=t0.c0
REG[14] =  i:3
  17 Column           0    2   15               00 r[15]=t0.over
REG[15] =  i:3
  18 MakeRecord      13    3   16               00 r[16]=mkrec(r[13..15])
REG[16] =  s7[040F0101330303....3..]
  19 SorterInsert     2   16    0               00 key=r[16]
REG[16] =  s7[040F0101330303....3..]
  20 Next             0   13    0               01 
  13 Explain         13    0    0 USE TEMP B-TREE FOR GROUP BY 00 
  14 Column           0    0   16               00 r[16]=t0.c0
REG[16] =  i:6
  15 Function         0   16   13 lower(1)      01 r[13]=func(r[16])
REG[16] =  i:6
REG[13] =   z1[6](8)
  16 Column           0    0   14               00 r[14]=t0.c0
REG[14] =  i:6
  17 Column           0    2   15               00 r[15]=t0.over
REG[15] =  i:11
  18 MakeRecord      13    3   16               00 r[16]=mkrec(r[13..15])
REG[16] =  s7[040F010136060B....6..]
  19 SorterInsert     2   16    0               00 key=r[16]
REG[16] =  s7[040F010136060B....6..]
  20 Next             0   13    0               01 
  21 OpenPseudo       3   16    3               00 3 columns in r[16]
  22 SorterSort       2   55    0               00 GROUP BY sort
  23 SorterData       2   16    3               00 r[16]=data
  24 Column           3    0   12               00 r[12]=
REG[12] =   s1[3](8)
  25 Compare         11   12    1 k(1,B)        00 r[11] <-> r[12]
REG[11] =  NULL
REG[12] =   s1[3](8)
  26 Jump            27   31   27               00 
  27 Move            12   11    1               00 r[11]=r[12]
REG[11] =   s1[3](8)
  28 Gosub            9   41    0               00 output one row
REG[9] =  i:28
  41 IfPos            7   43    0               00 if r[7]>0 then r[7]-=0, goto 43; Groupby result generator entry point
REG[7] =  i:0
  42 Return           9    0    0               00 
REG[9] =  i:28
  29 IfPos            8   55    0               00 if r[8]>0 then r[8]-=0, goto 55; check abort flag
REG[8] =  i:0
  30 Gosub           10   52    0               00 reset accumulator
REG[10] =  i:30
  52 Null             0    4    6               00 r[4..6]=NULL
REG[4] =  NULL
  53 Integer          0    7    0               00 r[7]=0; indicate accumulator empty
REG[7] =  i:0
  54 Return          10    0    0               00 
REG[10] =  i:30
  31 Column           3    2   17               00 r[17]=
REG[17] =  i:3
  32 AggStep          0   17    5 sum(1)        01 accum=r[5] step(r[17])
REG[17] =  i:3
  33 If               7   35    0               00 
REG[7] =  i:0
  34 Column           3    1    4               00 r[4]=
REG[4] =  i:3
  35 Integer          1    7    0               00 r[7]=1; indicate data in accumulator
REG[7] =  i:1
  36 SorterNext       2   23    0               00 
  23 SorterData       2   16    3               00 r[16]=data
  24 Column           3    0   12               00 r[12]=
REG[12] =   s1[6](8)
  25 Compare         11   12    1 k(1,B)        00 r[11] <-> r[12]
REG[11] =   s1[3](8)
REG[12] =   s1[6](8)
  26 Jump            27   31   27               00 
  27 Move            12   11    1               00 r[11]=r[12]
REG[11] =   s1[6](8)
  28 Gosub            9   41    0               00 output one row
REG[9] =  i:28
  41 IfPos            7   43    0               00 if r[7]>0 then r[7]-=0, goto 43; Groupby result generator entry point
REG[7] =  i:1
  43 AggFinal         5    1    0 sum(1)        00 accum=r[5] N=1
  44 Copy             4   18    1               00 r[18..19]=r[4..5]
REG[18] =  i:3
REG[19] =  i:3
  45 Found            1   42   18 2             00 key=r[18..19]
REG[18] =  i:3
REG[19] =  i:3
  46 MakeRecord      18    2   17               00 r[17]=mkrec(r[18..19])
REG[17] =  s5[0301010303.....]
  47 IdxInsert        1   17   18 2             10 key=r[17]
REG[17] =  s5[0301010303.....]
  48 IfPos            2   42    1               00 if r[2]>0 then r[2]-=1, goto 42; OFFSET
REG[2] =  i:1
  42 Return           9    0    0               00 
REG[9] =  i:28
  29 IfPos            8   55    0               00 if r[8]>0 then r[8]-=0, goto 55; check abort flag
REG[8] =  i:0
  30 Gosub           10   52    0               00 reset accumulator
REG[10] =  i:30
  52 Null             0    4    6               00 r[4..6]=NULL
REG[4] =  NULL
  53 Integer          0    7    0               00 r[7]=0; indicate accumulator empty
REG[7] =  i:0
  54 Return          10    0    0               00 
REG[10] =  i:30
  31 Column           3    2   17               00 r[17]=
REG[17] =  i:11
  32 AggStep1         0   17    5 sum(1)        01 accum=r[5] step(r[17])
REG[17] =  i:11
  33 If               7   35    0               00 
REG[7] =  i:0
  34 Column           3    1    4               00 r[4]=
REG[4] =  i:6
  35 Integer          1    7    0               00 r[7]=1; indicate data in accumulator
REG[7] =  i:1
  36 SorterNext       2   23    0               00 
  37 Gosub            9   41    0               00 output final row
REG[9] =  i:37
  41 IfPos            7   43    0               00 if r[7]>0 then r[7]-=0, goto 43; Groupby result generator entry point
REG[7] =  i:1
  43 AggFinal         5    1    0 sum(1)        00 accum=r[5] N=1
  44 Copy             4   18    1               00 r[18..19]=r[4..5]
REG[18] =  i:6
REG[19] =  i:11
  45 Found            1   42   18 2             00 key=r[18..19]
REG[18] =  i:6
REG[19] =  i:11
  46 MakeRecord      18    2   17               00 r[17]=mkrec(r[18..19])
REG[17] =  s5[030101060B.....]
  47 IdxInsert        1   17   18 2             10 key=r[17]
REG[17] =  s5[030101060B.....]
  48 IfPos            2   42    1               00 if r[2]>0 then r[2]-=1, goto 42; OFFSET
REG[2] =  i:0
  49 ResultRow       18    2    0               00 output=r[18..19]
REG[18] =  i:6
REG[19] =  i:11
  50 DecrJumpZero     1   39    0               00 if (--r[1])==0 goto 39
REG[1] =  i:2
  51 Return           9    0    0               00 end groupby result generator
REG[9] =  i:37
  38 Goto             0   55    0               00 
  55 Explain         55    0    0 USE TEMP B-TREE FOR DISTINCT 00 
  56 Halt             0    0    0               00 
SQL: [CREATE TABLE following(preceding);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    1 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:2
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:2
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 following     00 r[7]='following'
REG[7] =   t9[following](8)
  20 String8          0    8    0 following     00 r[8]='following'
REG[8] =   t9[following](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  22 String8          0   10    0 CREATE TABLE following(preceding) 00 r[10]='CREATE TABLE following(preceding)'
REG[10] =   t33[CREATE TABLE fo](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s63[06171F1F014F7461626C65666F6C6C6F.....Otablefollo]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s63[06171F1F014F7461626C65666F6C6C6F.....Otablefollo]
REG[5] =  i:2
  25 SetCookie        0    1    2               00 
  26 ParseSchema      0    0    0 tbl_name='following' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 0             00 usesStmtJournal=0
  16 String8          0    2    0 following     00 r[2]='following'
REG[2] =   t9[following](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[following](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[following](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[following](8)
REG[1] =   s9[following](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s9[following](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s33[CREATE TABLE fo](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s9[following](8)
REG[5] =  i:3
REG[6] =   s33[CREATE TABLE fo](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM (
      SELECT sum (v0) OVER() FROM t0 UNION ALL SELECT over FROM t0
  );]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    2 0             01 usesStmtJournal=0
  18 Goto             0    1    0               00 
   1 Explain          1    0    0 COMPOUND QUERY 00 
   2 Explain          2    1    0 LEFT-MOST SUBQUERY 00 
   3 OpenRead         2    2    0 2             00 root=2 iDb=0; t0
   4 Explain          4    2    0 SCAN TABLE t0 00 
   5 Rewind           2    9    0               00 
   6 Copy             0    1    0               00 r[1]=r[0]
REG[1] =  undefined
   7 ResultRow        1    1    0               00 output=r[1]

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f0f2e4f8859 in __GI_abort () at abort.c:79
#2  0x00007f0f2e4f8729 in __assert_fail_base (fmt=0x7f0f2e68e588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x216557 "memIsValid(&pMem[i])", file=0x22873d "sqlite3.c", line=85004, function=<optimized out>)
    at assert.c:92
#3  0x00007f0f2e509fd6 in __GI___assert_fail (assertion=0x216557 "memIsValid(&pMem[i])", file=0x22873d "sqlite3.c", line=85004, function=0x216524 "int sqlite3VdbeExec(Vdbe *)") at assert.c:101
#4  0x00000000003c3bf1 in sqlite3VdbeExec (p=0x1670250) at sqlite3.c:85004
#5  0x0000000000411104 in sqlite3Step (p=0x1670250) at sqlite3.c:81930
#6  0x000000000029128d in sqlite3_step (pStmt=0x1670250) at sqlite3.c:81995
#7  0x00000000002570b9 in main (argc=1, argv=0x7ffcd4cfed88) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 56191] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
