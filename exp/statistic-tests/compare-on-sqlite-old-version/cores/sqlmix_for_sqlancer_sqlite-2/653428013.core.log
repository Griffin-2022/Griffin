GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000380,sig:06,src:024502+020431,time:8480585,execs:1587128,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
parser: [[[;PRAGMA writable_schema = 1;INSERT INTO t0 VALUES(5,32)
;INSERT INTO t0 VALUES(9,512)
;CREATE TABLE over(following,preceding,t1,x,test001,last_field);;ATTACH 'test.db' as temp;;CREATE INDEX test002 ON t0(v0,v0+25*v0);;UPDATE sqlite_master SET rootpage=5 WHERE tbl_name = 't0';;EXPLAIN UPDATE t0 SET v0=v0+1
;UPDATE t0 SET v0=v0/3 WHERE v0<=5
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='over' AND type!='trigger' ORDER BY rowid
;ALTER TABLE over ADD field1
    
;SELECT * FROM t0 ORDER BY c0
;SELECT ifnull(substr('abcdefg',NULL,1),'nil')
;;INSERT INTO t0(v0,c0) VALUES(77,128);;
;SELECT * FROM t0 ORDER BY v0,c0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;UPDATE t0 SET v0=v0+1 WHERE v0==8
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;CREATE INDEX test003 ON t0(v0)
;UPDATE t0 SET c0=c0-1 WHERE c0==8 and c0>800
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE c0==777 ORDER BY c0,c0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;;UPDATE t0 SET c0=c0-1 WHERE c0<=100 and c0==128;SELECT * FROM t0 ORDER BY v0,v0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE c0==8 ORDER BY c0,c0
;UPDATE t0 SET v0=v0+1 WHERE c0==128
;SELECT * FROM t0 WHERE c0==778 ORDER BY c0,c0
;SELECT * FROM t0 WHERE v0==8 ORDER BY v0,v0
;UPDATE t0 SET v0=v0-1 WHERE v0<=100 and c0==128
;SELECT * FROM t0 ORDER BY c0,c0
;SELECT * FROM t0 WHERE v0==777 ORDER BY v0,v0
;SELECT * FROM t0 WHERE v0==8 ORDER BY v0,v0
;CREATE INDEX field2 ON t0(v0,c0)
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;ALTER TABLE t0 ADD test004
    
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;UPDATE t0 SET test004=test004+1 WHERE test004==8
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE test004==89 ORDER BY test004,test004
;UPDATE t0 SET test004=test004-1 WHERE test004==8 and test004>800
;SELECT * FROM t0 ORDER BY test004,test004
;;
;CREATE TABLE field3(
    test005 INTEGER DEFAULT -9223372036854775808,
    field4 INTEGER DEFAULT (-(-9223372036854775808))
  );SELECT * FROM t0 WHERE v0==89 ORDER BY v0,v0
;SELECT * FROM t0 WHERE test004==88 ORDER BY test004,test004
;SELECT * FROM over WHERE t1==778 ORDER BY t1,last_field
;UPDATE over SET preceding=preceding-1 WHERE preceding>100 and preceding==128
;SELECT * FROM t0 WHERE test004==78 ORDER BY test004,test004
;UPDATE over SET test001=test001-1 WHERE test001<=100 and test001==128
;;SELECT * FROM field3;;SELECT field1,field1 FROM over;;
;UPDATE t0 AS xyz SET test004=test004+1 WHERE xyz.test004 IN (SELECT test004 FROM t0);;
;UPDATE over AS xyz SET field1=field1+1 WHERE EXISTS(SELECT 1 FROM over WHERE over.field1<xyz.field1);;UPDATE over SET rowid=rowid-9999;;
;UPDATE over SET rowid=rowid-1;;CREATE TABLE test006(field5,test007,field6);;CREATE TRIGGER test008 AFTER UPDATE on over WHEN nosuchcol BEGIN
      SELECT 'illegal WHEN clause';
    END;;SELECT field1,field1,field1,'|' FROM over ORDER BY field1;;INSERT INTO t0(test004) VALUES(1);;CREATE INDEX field7 ON field3(1) WHERE 3;;SELECT * FROM field3;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'PRAGMA' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'PRAGMA', go to state 215
parser: Return. Stack=[ecmd PRAGMA]
parser: Input 'ID' in state 215
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd PRAGMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 215.
parser: ... then shift 'nm', go to state 295
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 392
parser: Shift 'EQ', go to state 31
parser: Return. Stack=[ecmd PRAGMA nm dbnm EQ]
parser: Input 'INTEGER' in state 31
parser: Shift 'INTEGER', pending reduce 359
parser: Return. Stack=[ecmd PRAGMA nm dbnm EQ INTEGER]
parser: Input 'SEMI' with pending reduce 359
parser: Reduce 359 [plus_num ::= INTEGER|FLOAT], go to state 31.
parser: ... then shift 'plus_num', pending reduce 234
parser: Reduce 234 [cmd ::= PRAGMA nm dbnm EQ nmnum], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[INSERT INTO t0 VALUES(5,32)
;INSERT INTO t0 VALUES(9,512)
;CREATE TABLE over(following,preceding,t1,x,test001,last_field);;ATTACH 'test.db' as temp;;CREATE INDEX test002 ON t0(v0,v0+25*v0);;UPDATE sqlite_master SET rootpage=5 WHERE tbl_name = 't0';;EXPLAIN UPDATE t0 SET v0=v0+1
;UPDATE t0 SET v0=v0/3 WHERE v0<=5
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='over' AND type!='trigger' ORDER BY rowid
;ALTER TABLE over ADD field1
    
;SELECT * FROM t0 ORDER BY c0
;SELECT ifnull(substr('abcdefg',NULL,1),'nil')
;;INSERT INTO t0(v0,c0) VALUES(77,128);;
;SELECT * FROM t0 ORDER BY v0,c0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;UPDATE t0 SET v0=v0+1 WHERE v0==8
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;CREATE INDEX test003 ON t0(v0)
;UPDATE t0 SET c0=c0-1 WHERE c0==8 and c0>800
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE c0==777 ORDER BY c0,c0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;;UPDATE t0 SET c0=c0-1 WHERE c0<=100 and c0==128;SELECT * FROM t0 ORDER BY v0,v0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE c0==8 ORDER BY c0,c0
;UPDATE t0 SET v0=v0+1 WHERE c0==128
;SELECT * FROM t0 WHERE c0==778 ORDER BY c0,c0
;SELECT * FROM t0 WHERE v0==8 ORDER BY v0,v0
;UPDATE t0 SET v0=v0-1 WHERE v0<=100 and c0==128
;SELECT * FROM t0 ORDER BY c0,c0
;SELECT * FROM t0 WHERE v0==777 ORDER BY v0,v0
;SELECT * FROM t0 WHERE v0==8 ORDER BY v0,v0
;CREATE INDEX field2 ON t0(v0,c0)
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;ALTER TABLE t0 ADD test004
    
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;UPDATE t0 SET test004=test004+1 WHERE test004==8
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE test004==89 ORDER BY test004,test004
;UPDATE t0 SET test004=test004-1 WHERE test004==8 and test004>800
;SELECT * FROM t0 ORDER BY test004,test004
;;
;CREATE TABLE field3(
    test005 INTEGER DEFAULT -9223372036854775808,
    field4 INTEGER DEFAULT (-(-9223372036854775808))
  );SELECT * FROM t0 WHERE v0==89 ORDER BY v0,v0
;SELECT * FROM t0 WHERE test004==88 ORDER BY test004,test004
;SELECT * FROM over WHERE t1==778 ORDER BY t1,last_field
;UPDATE over SET preceding=preceding-1 WHERE preceding>100 and preceding==128
;SELECT * FROM t0 WHERE test004==78 ORDER BY test004,test004
;UPDATE over SET test001=test001-1 WHERE test001<=100 and test001==128
;;SELECT * FROM field3;;SELECT field1,field1 FROM over;;
;UPDATE t0 AS xyz SET test004=test004+1 WHERE xyz.test004 IN (SELECT test004 FROM t0);;
;UPDATE over AS xyz SET field1=field1+1 WHERE EXISTS(SELECT 1 FROM over WHERE over.field1<xyz.field1);;UPDATE over SET rowid=rowid-9999;;
;UPDATE over SET rowid=rowid-1;;CREATE TABLE test006(field5,test007,field6);;CREATE TRIGGER test008 AFTER UPDATE on over WHEN nosuchcol BEGIN
      SELECT 'illegal WHEN clause';
    END;;SELECT field1,field1,field1,'|' FROM over ORDER BY field1;;INSERT INTO t0(test004) VALUES(1);;CREATE INDEX field7 ON field3(1) WHERE 3;;SELECT * FROM field3;]]]
parser: Input 'INSERT' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 156
parser: Reduce 156 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 427
parser: Shift 'INTO', go to state 164
parser: Return. Stack=[with insert_cmd INTO]
parser: Input 'ID' in state 164
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO ID]
parser: Input 'VALUES' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 164.
parser: ... then shift 'nm', go to state 393
parser: Reduce 112 [xfullname ::= nm], go to state 164.
parser: ... then shift 'xfullname', go to state 298
parser: Reduce 158 [idlist_opt ::=].
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'VALUES', go to state 526
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES]
parser: Input 'LP' in state 526
parser: Shift 'LP', go to state 28
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP]
parser: Input 'INTEGER' in state 28
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP INTEGER]
parser: Input 'COMMA' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 28.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA INTEGER]
parser: Input 'RP' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'RP', pending reduce 89
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist RP]
parser: Input 'SEMI' with pending reduce 89
parser: Reduce 89 [values ::= VALUES LP nexprlist RP], go to state 35.
parser: ... then shift 'values', go to state 532
parser: Reduce 348 [oneselect ::= values], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 152 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 150
parser: Reduce 150 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[INSERT INTO t0 VALUES(9,512)
;CREATE TABLE over(following,preceding,t1,x,test001,last_field);;ATTACH 'test.db' as temp;;CREATE INDEX test002 ON t0(v0,v0+25*v0);;UPDATE sqlite_master SET rootpage=5 WHERE tbl_name = 't0';;EXPLAIN UPDATE t0 SET v0=v0+1
;UPDATE t0 SET v0=v0/3 WHERE v0<=5
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='over' AND type!='trigger' ORDER BY rowid
;ALTER TABLE over ADD field1
    
;SELECT * FROM t0 ORDER BY c0
;SELECT ifnull(substr('abcdefg',NULL,1),'nil')
;;INSERT INTO t0(v0,c0) VALUES(77,128);;
;SELECT * FROM t0 ORDER BY v0,c0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;UPDATE t0 SET v0=v0+1 WHERE v0==8
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;CREATE INDEX test003 ON t0(v0)
;UPDATE t0 SET c0=c0-1 WHERE c0==8 and c0>800
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE c0==777 ORDER BY c0,c0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;;UPDATE t0 SET c0=c0-1 WHERE c0<=100 and c0==128;SELECT * FROM t0 ORDER BY v0,v0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE c0==8 ORDER BY c0,c0
;UPDATE t0 SET v0=v0+1 WHERE c0==128
;SELECT * FROM t0 WHERE c0==778 ORDER BY c0,c0
;SELECT * FROM t0 WHERE v0==8 ORDER BY v0,v0
;UPDATE t0 SET v0=v0-1 WHERE v0<=100 and c0==128
;SELECT * FROM t0 ORDER BY c0,c0
;SELECT * FROM t0 WHERE v0==777 ORDER BY v0,v0
;SELECT * FROM t0 WHERE v0==8 ORDER BY v0,v0
;CREATE INDEX field2 ON t0(v0,c0)
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;ALTER TABLE t0 ADD test004
    
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;UPDATE t0 SET test004=test004+1 WHERE test004==8
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE test004==89 ORDER BY test004,test004
;UPDATE t0 SET test004=test004-1 WHERE test004==8 and test004>800
;SELECT * FROM t0 ORDER BY test004,test004
;;
;CREATE TABLE field3(
    test005 INTEGER DEFAULT -9223372036854775808,
    field4 INTEGER DEFAULT (-(-9223372036854775808))
  );SELECT * FROM t0 WHERE v0==89 ORDER BY v0,v0
;SELECT * FROM t0 WHERE test004==88 ORDER BY test004,test004
;SELECT * FROM over WHERE t1==778 ORDER BY t1,last_field
;UPDATE over SET preceding=preceding-1 WHERE preceding>100 and preceding==128
;SELECT * FROM t0 WHERE test004==78 ORDER BY test004,test004
;UPDATE over SET test001=test001-1 WHERE test001<=100 and test001==128
;;SELECT * FROM field3;;SELECT field1,field1 FROM over;;
;UPDATE t0 AS xyz SET test004=test004+1 WHERE xyz.test004 IN (SELECT test004 FROM t0);;
;UPDATE over AS xyz SET field1=field1+1 WHERE EXISTS(SELECT 1 FROM over WHERE over.field1<xyz.field1);;UPDATE over SET rowid=rowid-9999;;
;UPDATE over SET rowid=rowid-1;;CREATE TABLE test006(field5,test007,field6);;CREATE TRIGGER test008 AFTER UPDATE on over WHEN nosuchcol BEGIN
      SELECT 'illegal WHEN clause';
    END;;SELECT field1,field1,field1,'|' FROM over ORDER BY field1;;INSERT INTO t0(test004) VALUES(1);;CREATE INDEX field7 ON field3(1) WHERE 3;;SELECT * FROM field3;]]]
parser: Input 'INSERT' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 156
parser: Reduce 156 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 427
parser: Shift 'INTO', go to state 164
parser: Return. Stack=[with insert_cmd INTO]
parser: Input 'ID' in state 164
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO ID]
parser: Input 'VALUES' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 164.
parser: ... then shift 'nm', go to state 393
parser: Reduce 112 [xfullname ::= nm], go to state 164.
parser: ... then shift 'xfullname', go to state 298
parser: Reduce 158 [idlist_opt ::=].
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'VALUES', go to state 526
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES]
parser: Input 'LP' in state 526
parser: Shift 'LP', go to state 28
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP]
parser: Input 'INTEGER' in state 28
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP INTEGER]
parser: Input 'COMMA' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 28.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA INTEGER]
parser: Input 'RP' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'RP', pending reduce 89
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist RP]
parser: Input 'SEMI' with pending reduce 89
parser: Reduce 89 [values ::= VALUES LP nexprlist RP], go to state 35.
parser: ... then shift 'values', go to state 532
parser: Reduce 348 [oneselect ::= values], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 152 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 150
parser: Reduce 150 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE over(following,preceding,t1,x,test001,last_field);;ATTACH 'test.db' as temp;;CREATE INDEX test002 ON t0(v0,v0+25*v0);;UPDATE sqlite_master SET rootpage=5 WHERE tbl_name = 't0';;EXPLAIN UPDATE t0 SET v0=v0+1
;UPDATE t0 SET v0=v0/3 WHERE v0<=5
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='over' AND type!='trigger' ORDER BY rowid
;ALTER TABLE over ADD field1
    
;SELECT * FROM t0 ORDER BY c0
;SELECT ifnull(substr('abcdefg',NULL,1),'nil')
;;INSERT INTO t0(v0,c0) VALUES(77,128);;
;SELECT * FROM t0 ORDER BY v0,c0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;UPDATE t0 SET v0=v0+1 WHERE v0==8
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;CREATE INDEX test003 ON t0(v0)
;UPDATE t0 SET c0=c0-1 WHERE c0==8 and c0>800
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE c0==777 ORDER BY c0,c0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;;UPDATE t0 SET c0=c0-1 WHERE c0<=100 and c0==128;SELECT * FROM t0 ORDER BY v0,v0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE c0==8 ORDER BY c0,c0
;UPDATE t0 SET v0=v0+1 WHERE c0==128
;SELECT * FROM t0 WHERE c0==778 ORDER BY c0,c0
;SELECT * FROM t0 WHERE v0==8 ORDER BY v0,v0
;UPDATE t0 SET v0=v0-1 WHERE v0<=100 and c0==128
;SELECT * FROM t0 ORDER BY c0,c0
;SELECT * FROM t0 WHERE v0==777 ORDER BY v0,v0
;SELECT * FROM t0 WHERE v0==8 ORDER BY v0,v0
;CREATE INDEX field2 ON t0(v0,c0)
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;ALTER TABLE t0 ADD test004
    
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;UPDATE t0 SET test004=test004+1 WHERE test004==8
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE test004==89 ORDER BY test004,test004
;UPDATE t0 SET test004=test004-1 WHERE test004==8 and test004>800
;SELECT * FROM t0 ORDER BY test004,test004
;;
;CREATE TABLE field3(
    test005 INTEGER DEFAULT -9223372036854775808,
    field4 INTEGER DEFAULT (-(-9223372036854775808))
  );SELECT * FROM t0 WHERE v0==89 ORDER BY v0,v0
;SELECT * FROM t0 WHERE test004==88 ORDER BY test004,test004
;SELECT * FROM over WHERE t1==778 ORDER BY t1,last_field
;UPDATE over SET preceding=preceding-1 WHERE preceding>100 and preceding==128
;SELECT * FROM t0 WHERE test004==78 ORDER BY test004,test004
;UPDATE over SET test001=test001-1 WHERE test001<=100 and test001==128
;;SELECT * FROM field3;;SELECT field1,field1 FROM over;;
;UPDATE t0 AS xyz SET test004=test004+1 WHERE xyz.test004 IN (SELECT test004 FROM t0);;
;UPDATE over AS xyz SET field1=field1+1 WHERE EXISTS(SELECT 1 FROM over WHERE over.field1<xyz.field1);;UPDATE over SET rowid=rowid-9999;;
;UPDATE over SET rowid=rowid-1;;CREATE TABLE test006(field5,test007,field6);;CREATE TRIGGER test008 AFTER UPDATE on over WHEN nosuchcol BEGIN
      SELECT 'illegal WHEN clause';
    END;;SELECT field1,field1,field1,'|' FROM over ORDER BY field1;;INSERT INTO t0(test004) VALUES(1);;CREATE INDEX field7 ON field3(1) WHERE 3;;SELECT * FROM field3;]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'FOLLOWING' in state 139
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', pending reduce 331
parser: Return. Stack=[create_table LP FOLLOWING]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'PRECEDING' in state 34
parser: FALLBACK PRECEDING => ID
parser: Shift 'PRECEDING', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA PRECEDING]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'RP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: [[[UPDATE 'main'.sqlite_master SET type='table', name='over', tbl_name='over', rootpage=#2, sql='CREATE TABLE over(following,preceding,t1,x,test001,last_field)' WHERE rowid=#1]]]
parser: Input 'UPDATE' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'STRING' in state 299
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', go to state 165
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with UPDATE orconf STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 165.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 165.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 428
parser: Shift 'SET', go to state 153
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 153
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 153.
parser: ... then shift 'nm', go to state 442
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'STRING' in state 84
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 84.
parser: ... then shift 'term', go to state 58
parser: Reduce 148 [setlist ::= nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'VARIABLE' in state 86
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ VARIABLE]
parser: Input 'COMMA' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 86.
parser: ... then shift 'expr', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'WHERE' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ]
parser: Input 'VARIABLE' in state 117
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ VARIABLE]
parser: Input 'SEMI' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 145
parser: Reduce 145 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='over' AND type!='trigger' ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'STRING' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'NE' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'NE', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE STRING]
parser: Input 'ORDER' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE over(following,preceding,t1,x,test001,last_field)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'FOLLOWING' in state 139
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', pending reduce 331
parser: Return. Stack=[create_table LP FOLLOWING]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'PRECEDING' in state 34
parser: FALLBACK PRECEDING => ID
parser: Shift 'PRECEDING', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA PRECEDING]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'RP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[;ATTACH 'test.db' as temp;;CREATE INDEX test002 ON t0(v0,v0+25*v0);;UPDATE sqlite_master SET rootpage=5 WHERE tbl_name = 't0';;EXPLAIN UPDATE t0 SET v0=v0+1
;UPDATE t0 SET v0=v0/3 WHERE v0<=5
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='over' AND type!='trigger' ORDER BY rowid
;ALTER TABLE over ADD field1
    
;SELECT * FROM t0 ORDER BY c0
;SELECT ifnull(substr('abcdefg',NULL,1),'nil')
;;INSERT INTO t0(v0,c0) VALUES(77,128);;
;SELECT * FROM t0 ORDER BY v0,c0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;UPDATE t0 SET v0=v0+1 WHERE v0==8
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;CREATE INDEX test003 ON t0(v0)
;UPDATE t0 SET c0=c0-1 WHERE c0==8 and c0>800
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE c0==777 ORDER BY c0,c0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;;UPDATE t0 SET c0=c0-1 WHERE c0<=100 and c0==128;SELECT * FROM t0 ORDER BY v0,v0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE c0==8 ORDER BY c0,c0
;UPDATE t0 SET v0=v0+1 WHERE c0==128
;SELECT * FROM t0 WHERE c0==778 ORDER BY c0,c0
;SELECT * FROM t0 WHERE v0==8 ORDER BY v0,v0
;UPDATE t0 SET v0=v0-1 WHERE v0<=100 and c0==128
;SELECT * FROM t0 ORDER BY c0,c0
;SELECT * FROM t0 WHERE v0==777 ORDER BY v0,v0
;SELECT * FROM t0 WHERE v0==8 ORDER BY v0,v0
;CREATE INDEX field2 ON t0(v0,c0)
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;ALTER TABLE t0 ADD test004
    
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;UPDATE t0 SET test004=test004+1 WHERE test004==8
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE test004==89 ORDER BY test004,test004
;UPDATE t0 SET test004=test004-1 WHERE test004==8 and test004>800
;SELECT * FROM t0 ORDER BY test004,test004
;;
;CREATE TABLE field3(
    test005 INTEGER DEFAULT -9223372036854775808,
    field4 INTEGER DEFAULT (-(-9223372036854775808))
  );SELECT * FROM t0 WHERE v0==89 ORDER BY v0,v0
;SELECT * FROM t0 WHERE test004==88 ORDER BY test004,test004
;SELECT * FROM over WHERE t1==778 ORDER BY t1,last_field
;UPDATE over SET preceding=preceding-1 WHERE preceding>100 and preceding==128
;SELECT * FROM t0 WHERE test004==78 ORDER BY test004,test004
;UPDATE over SET test001=test001-1 WHERE test001<=100 and test001==128
;;SELECT * FROM field3;;SELECT field1,field1 FROM over;;
;UPDATE t0 AS xyz SET test004=test004+1 WHERE xyz.test004 IN (SELECT test004 FROM t0);;
;UPDATE over AS xyz SET field1=field1+1 WHERE EXISTS(SELECT 1 FROM over WHERE over.field1<xyz.field1);;UPDATE over SET rowid=rowid-9999;;
;UPDATE over SET rowid=rowid-1;;CREATE TABLE test006(field5,test007,field6);;CREATE TRIGGER test008 AFTER UPDATE on over WHEN nosuchcol BEGIN
      SELECT 'illegal WHEN clause';
    END;;SELECT field1,field1,field1,'|' FROM over ORDER BY field1;;INSERT INTO t0(test004) VALUES(1);;CREATE INDEX field7 ON field3(1) WHERE 3;;SELECT * FROM field3;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'ATTACH' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'ATTACH', go to state 294
parser: Return. Stack=[ecmd ATTACH]
parser: Input 'STRING' in state 294
parser: Reduce 365 [database_kw_opt ::=].
parser: ... then shift 'database_kw_opt', go to state 81
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[ecmd ATTACH database_kw_opt STRING]
parser: Input 'AS' in state 537
parser: Reduce 168 [term ::= STRING], go to state 81.
parser: ... then shift 'term', go to state 44
parser: Shift 'AS', go to state 80
parser: Return. Stack=[ecmd ATTACH database_kw_opt term AS]
parser: Input 'TEMP' in state 80
parser: FALLBACK TEMP => ID
parser: Shift 'TEMP', go to state 416
parser: Return. Stack=[ecmd ATTACH database_kw_opt term AS TEMP]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 80.
parser: ... then shift 'expr', go to state 15
parser: Reduce 267 [key_opt ::=].
parser: ... then shift 'key_opt', pending reduce 265
parser: Reduce 265 [cmd ::= ATTACH database_kw_opt expr AS expr key_opt], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;CREATE INDEX test002 ON t0(v0,v0+25*v0);;UPDATE sqlite_master SET rootpage=5 WHERE tbl_name = 't0';;EXPLAIN UPDATE t0 SET v0=v0+1
;UPDATE t0 SET v0=v0/3 WHERE v0<=5
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='over' AND type!='trigger' ORDER BY rowid
;ALTER TABLE over ADD field1
    
;SELECT * FROM t0 ORDER BY c0
;SELECT ifnull(substr('abcdefg',NULL,1),'nil')
;;INSERT INTO t0(v0,c0) VALUES(77,128);;
;SELECT * FROM t0 ORDER BY v0,c0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;UPDATE t0 SET v0=v0+1 WHERE v0==8
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;CREATE INDEX test003 ON t0(v0)
;UPDATE t0 SET c0=c0-1 WHERE c0==8 and c0>800
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE c0==777 ORDER BY c0,c0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;;UPDATE t0 SET c0=c0-1 WHERE c0<=100 and c0==128;SELECT * FROM t0 ORDER BY v0,v0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE c0==8 ORDER BY c0,c0
;UPDATE t0 SET v0=v0+1 WHERE c0==128
;SELECT * FROM t0 WHERE c0==778 ORDER BY c0,c0
;SELECT * FROM t0 WHERE v0==8 ORDER BY v0,v0
;UPDATE t0 SET v0=v0-1 WHERE v0<=100 and c0==128
;SELECT * FROM t0 ORDER BY c0,c0
;SELECT * FROM t0 WHERE v0==777 ORDER BY v0,v0
;SELECT * FROM t0 WHERE v0==8 ORDER BY v0,v0
;CREATE INDEX field2 ON t0(v0,c0)
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;ALTER TABLE t0 ADD test004
    
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;UPDATE t0 SET test004=test004+1 WHERE test004==8
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE test004==89 ORDER BY test004,test004
;UPDATE t0 SET test004=test004-1 WHERE test004==8 and test004>800
;SELECT * FROM t0 ORDER BY test004,test004
;;
;CREATE TABLE field3(
    test005 INTEGER DEFAULT -9223372036854775808,
    field4 INTEGER DEFAULT (-(-9223372036854775808))
  );SELECT * FROM t0 WHERE v0==89 ORDER BY v0,v0
;SELECT * FROM t0 WHERE test004==88 ORDER BY test004,test004
;SELECT * FROM over WHERE t1==778 ORDER BY t1,last_field
;UPDATE over SET preceding=preceding-1 WHERE preceding>100 and preceding==128
;SELECT * FROM t0 WHERE test004==78 ORDER BY test004,test004
;UPDATE over SET test001=test001-1 WHERE test001<=100 and test001==128
;;SELECT * FROM field3;;SELECT field1,field1 FROM over;;
;UPDATE t0 AS xyz SET test004=test004+1 WHERE xyz.test004 IN (SELECT test004 FROM t0);;
;UPDATE over AS xyz SET field1=field1+1 WHERE EXISTS(SELECT 1 FROM over WHERE over.field1<xyz.field1);;UPDATE over SET rowid=rowid-9999;;
;UPDATE over SET rowid=rowid-1;;CREATE TABLE test006(field5,test007,field6);;CREATE TRIGGER test008 AFTER UPDATE on over WHEN nosuchcol BEGIN
      SELECT 'illegal WHEN clause';
    END;;SELECT field1,field1,field1,'|' FROM over ORDER BY field1;;INSERT INTO t0(test004) VALUES(1);;CREATE INDEX field7 ON field3(1) WHERE 3;;SELECT * FROM field3;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'CREATE' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[ecmd CREATE]
parser: Input 'INDEX' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 1.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 221 [uniqueflag ::=].
parser: ... then shift 'uniqueflag', go to state 453
parser: Shift 'INDEX', go to state 315
parser: Return. Stack=[ecmd createkw uniqueflag INDEX]
parser: Input 'ID' in state 315
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 225
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists ID]
parser: Input 'ON' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 225.
parser: ... then shift 'nm', go to state 314
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 452
parser: Shift 'ON', go to state 224
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON]
parser: Input 'ID' in state 224
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 224.
parser: ... then shift 'nm', go to state 451
parser: Shift 'LP', go to state 18
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP]
parser: Input 'ID' in state 18
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 18.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 18.
parser: ... then shift 'sortlist', go to state 400
parser: Shift 'COMMA', go to state 95
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist COMMA]
parser: Input 'ID' in state 95
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist COMMA ID]
parser: Input 'PLUS' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 95.
parser: ... then shift 'expr', go to state 14
parser: Shift 'PLUS', go to state 115
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist COMMA expr PLUS]
parser: Input 'INTEGER' in state 115
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist COMMA expr PLUS INTEGER]
parser: Input 'STAR' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 115.
parser: ... then shift 'term', go to state 132
parser: Shift 'STAR', go to state 114
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist COMMA expr PLUS term STAR]
parser: Input 'ID' in state 114
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist COMMA expr PLUS term STAR ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 114.
parser: ... then shift 'expr', go to state 145
parser: Reduce 185 [expr ::= expr STAR|SLASH|REM expr], go to state 115.
parser: ... then shift 'expr', go to state 132
parser: Reduce 184 [expr ::= expr PLUS|MINUS expr], go to state 95.
parser: ... then shift 'expr', go to state 14
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 129
parser: Reduce 129 [sortlist ::= sortlist COMMA expr sortorder], go to state 18.
parser: ... then shift 'sortlist', go to state 400
parser: Shift 'RP', go to state 313
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP]
parser: Input 'SEMI' in state 313
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', pending reduce 219
parser: Reduce 219 [cmd ::= createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP where_opt], go to state 1.
parser: [[[INSERT INTO 'main'.sqlite_master VALUES('index','test002','t0',#1,'CREATE INDEX test002 ON t0(v0,v0+25*v0)');]]]
parser: Input 'INSERT' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 156
parser: Reduce 156 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 427
parser: Shift 'INTO', go to state 164
parser: Return. Stack=[with insert_cmd INTO]
parser: Input 'STRING' in state 164
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with insert_cmd INTO STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 164.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with insert_cmd INTO nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO nm DOT ID]
parser: Input 'VALUES' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 164.
parser: ... then shift 'xfullname', go to state 298
parser: Reduce 158 [idlist_opt ::=].
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'VALUES', go to state 526
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES]
parser: Input 'LP' in state 526
parser: Shift 'LP', go to state 28
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP]
parser: Input 'STRING' in state 28
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 28.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'VARIABLE' in state 107
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA VARIABLE]
parser: Input 'COMMA' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'RP' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'RP', pending reduce 89
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist RP]
parser: Input 'SEMI' with pending reduce 89
parser: Reduce 89 [values ::= VALUES LP nexprlist RP], go to state 35.
parser: ... then shift 'values', go to state 532
parser: Reduce 348 [oneselect ::= values], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 152 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 150
parser: Reduce 150 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='test002' AND type='index' ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'STRING' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr EQ STRING]
parser: Input 'ORDER' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE INDEX test002 ON t0(v0,v0+25*v0)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'INDEX' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 221 [uniqueflag ::=].
parser: ... then shift 'uniqueflag', go to state 453
parser: Shift 'INDEX', go to state 315
parser: Return. Stack=[createkw uniqueflag INDEX]
parser: Input 'ID' in state 315
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 225
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists ID]
parser: Input 'ON' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 225.
parser: ... then shift 'nm', go to state 314
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 452
parser: Shift 'ON', go to state 224
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON]
parser: Input 'ID' in state 224
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 224.
parser: ... then shift 'nm', go to state 451
parser: Shift 'LP', go to state 18
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP]
parser: Input 'ID' in state 18
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 18.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 18.
parser: ... then shift 'sortlist', go to state 400
parser: Shift 'COMMA', go to state 95
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist COMMA]
parser: Input 'ID' in state 95
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist COMMA ID]
parser: Input 'PLUS' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 95.
parser: ... then shift 'expr', go to state 14
parser: Shift 'PLUS', go to state 115
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist COMMA expr PLUS]
parser: Input 'INTEGER' in state 115
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist COMMA expr PLUS INTEGER]
parser: Input 'STAR' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 115.
parser: ... then shift 'term', go to state 132
parser: Shift 'STAR', go to state 114
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist COMMA expr PLUS term STAR]
parser: Input 'ID' in state 114
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist COMMA expr PLUS term STAR ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 114.
parser: ... then shift 'expr', go to state 145
parser: Reduce 185 [expr ::= expr STAR|SLASH|REM expr], go to state 115.
parser: ... then shift 'expr', go to state 132
parser: Reduce 184 [expr ::= expr PLUS|MINUS expr], go to state 95.
parser: ... then shift 'expr', go to state 14
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 129
parser: Reduce 129 [sortlist ::= sortlist COMMA expr sortorder], go to state 18.
parser: ... then shift 'sortlist', go to state 400
parser: Shift 'RP', go to state 313
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP]
parser: Input 'SEMI' in state 313
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', pending reduce 219
parser: Reduce 219 [cmd ::= createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[;UPDATE sqlite_master SET rootpage=5 WHERE tbl_name = 't0';;EXPLAIN UPDATE t0 SET v0=v0+1
;UPDATE t0 SET v0=v0/3 WHERE v0<=5
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='over' AND type!='trigger' ORDER BY rowid
;ALTER TABLE over ADD field1
    
;SELECT * FROM t0 ORDER BY c0
;SELECT ifnull(substr('abcdefg',NULL,1),'nil')
;;INSERT INTO t0(v0,c0) VALUES(77,128);;
;SELECT * FROM t0 ORDER BY v0,c0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;UPDATE t0 SET v0=v0+1 WHERE v0==8
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;CREATE INDEX test003 ON t0(v0)
;UPDATE t0 SET c0=c0-1 WHERE c0==8 and c0>800
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE c0==777 ORDER BY c0,c0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;;UPDATE t0 SET c0=c0-1 WHERE c0<=100 and c0==128;SELECT * FROM t0 ORDER BY v0,v0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE c0==8 ORDER BY c0,c0
;UPDATE t0 SET v0=v0+1 WHERE c0==128
;SELECT * FROM t0 WHERE c0==778 ORDER BY c0,c0
;SELECT * FROM t0 WHERE v0==8 ORDER BY v0,v0
;UPDATE t0 SET v0=v0-1 WHERE v0<=100 and c0==128
;SELECT * FROM t0 ORDER BY c0,c0
;SELECT * FROM t0 WHERE v0==777 ORDER BY v0,v0
;SELECT * FROM t0 WHERE v0==8 ORDER BY v0,v0
;CREATE INDEX field2 ON t0(v0,c0)
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;ALTER TABLE t0 ADD test004
    
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;UPDATE t0 SET test004=test004+1 WHERE test004==8
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE test004==89 ORDER BY test004,test004
;UPDATE t0 SET test004=test004-1 WHERE test004==8 and test004>800
;SELECT * FROM t0 ORDER BY test004,test004
;;
;CREATE TABLE field3(
    test005 INTEGER DEFAULT -9223372036854775808,
    field4 INTEGER DEFAULT (-(-9223372036854775808))
  );SELECT * FROM t0 WHERE v0==89 ORDER BY v0,v0
;SELECT * FROM t0 WHERE test004==88 ORDER BY test004,test004
;SELECT * FROM over WHERE t1==778 ORDER BY t1,last_field
;UPDATE over SET preceding=preceding-1 WHERE preceding>100 and preceding==128
;SELECT * FROM t0 WHERE test004==78 ORDER BY test004,test004
;UPDATE over SET test001=test001-1 WHERE test001<=100 and test001==128
;;SELECT * FROM field3;;SELECT field1,field1 FROM over;;
;UPDATE t0 AS xyz SET test004=test004+1 WHERE xyz.test004 IN (SELECT test004 FROM t0);;
;UPDATE over AS xyz SET field1=field1+1 WHERE EXISTS(SELECT 1 FROM over WHERE over.field1<xyz.field1);;UPDATE over SET rowid=rowid-9999;;
;UPDATE over SET rowid=rowid-1;;CREATE TABLE test006(field5,test007,field6);;CREATE TRIGGER test008 AFTER UPDATE on over WHEN nosuchcol BEGIN
      SELECT 'illegal WHEN clause';
    END;;SELECT field1,field1,field1,'|' FROM over ORDER BY field1;;INSERT INTO t0(test004) VALUES(1);;CREATE INDEX field7 ON field3(1) WHERE 3;;SELECT * FROM field3;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'UPDATE' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[ecmd with UPDATE]
parser: Input 'ID' in state 299
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', go to state 165
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd with UPDATE orconf ID]
parser: Input 'SET' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 165.
parser: ... then shift 'nm', go to state 393
parser: Reduce 112 [xfullname ::= nm], go to state 165.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 428
parser: Shift 'SET', go to state 153
parser: Return. Stack=[ecmd with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 153
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 153.
parser: ... then shift 'nm', go to state 442
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[ecmd with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'INTEGER' in state 84
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[ecmd with UPDATE orconf xfullname indexed_opt SET nm EQ INTEGER]
parser: Input 'WHERE' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 84.
parser: ... then shift 'term', go to state 58
parser: Reduce 148 [setlist ::= nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[ecmd with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[ecmd with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[ecmd with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ STRING]
parser: Input 'SEMI' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 145
parser: Reduce 145 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;EXPLAIN UPDATE t0 SET v0=v0+1
;UPDATE t0 SET v0=v0/3 WHERE v0<=5
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='over' AND type!='trigger' ORDER BY rowid
;ALTER TABLE over ADD field1
    
;SELECT * FROM t0 ORDER BY c0
;SELECT ifnull(substr('abcdefg',NULL,1),'nil')
;;INSERT INTO t0(v0,c0) VALUES(77,128);;
;SELECT * FROM t0 ORDER BY v0,c0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;UPDATE t0 SET v0=v0+1 WHERE v0==8
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;CREATE INDEX test003 ON t0(v0)
;UPDATE t0 SET c0=c0-1 WHERE c0==8 and c0>800
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE c0==777 ORDER BY c0,c0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;;UPDATE t0 SET c0=c0-1 WHERE c0<=100 and c0==128;SELECT * FROM t0 ORDER BY v0,v0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE c0==8 ORDER BY c0,c0
;UPDATE t0 SET v0=v0+1 WHERE c0==128
;SELECT * FROM t0 WHERE c0==778 ORDER BY c0,c0
;SELECT * FROM t0 WHERE v0==8 ORDER BY v0,v0
;UPDATE t0 SET v0=v0-1 WHERE v0<=100 and c0==128
;SELECT * FROM t0 ORDER BY c0,c0
;SELECT * FROM t0 WHERE v0==777 ORDER BY v0,v0
;SELECT * FROM t0 WHERE v0==8 ORDER BY v0,v0
;CREATE INDEX field2 ON t0(v0,c0)
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;ALTER TABLE t0 ADD test004
    
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;UPDATE t0 SET test004=test004+1 WHERE test004==8
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE test004==89 ORDER BY test004,test004
;UPDATE t0 SET test004=test004-1 WHERE test004==8 and test004>800
;SELECT * FROM t0 ORDER BY test004,test004
;;
;CREATE TABLE field3(
    test005 INTEGER DEFAULT -9223372036854775808,
    field4 INTEGER DEFAULT (-(-9223372036854775808))
  );SELECT * FROM t0 WHERE v0==89 ORDER BY v0,v0
;SELECT * FROM t0 WHERE test004==88 ORDER BY test004,test004
;SELECT * FROM over WHERE t1==778 ORDER BY t1,last_field
;UPDATE over SET preceding=preceding-1 WHERE preceding>100 and preceding==128
;SELECT * FROM t0 WHERE test004==78 ORDER BY test004,test004
;UPDATE over SET test001=test001-1 WHERE test001<=100 and test001==128
;;SELECT * FROM field3;;SELECT field1,field1 FROM over;;
;UPDATE t0 AS xyz SET test004=test004+1 WHERE xyz.test004 IN (SELECT test004 FROM t0);;
;UPDATE over AS xyz SET field1=field1+1 WHERE EXISTS(SELECT 1 FROM over WHERE over.field1<xyz.field1);;UPDATE over SET rowid=rowid-9999;;
;UPDATE over SET rowid=rowid-1;;CREATE TABLE test006(field5,test007,field6);;CREATE TRIGGER test008 AFTER UPDATE on over WHEN nosuchcol BEGIN
      SELECT 'illegal WHEN clause';
    END;;SELECT field1,field1,field1,'|' FROM over ORDER BY field1;;INSERT INTO t0(test004) VALUES(1);;CREATE INDEX field7 ON field3(1) WHERE 3;;SELECT * FROM field3;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'EXPLAIN' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'EXPLAIN', go to state 418
parser: Return. Stack=[ecmd EXPLAIN]
parser: Input 'UPDATE' in state 418
parser: Reduce 0 [explain ::= EXPLAIN], go to state 1.
parser: ... then shift 'explain', go to state 2
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[ecmd explain with UPDATE]
parser: Input 'ID' in state 299
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', go to state 165
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd explain with UPDATE orconf ID]
parser: Input 'SET' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 165.
parser: ... then shift 'nm', go to state 393
parser: Reduce 112 [xfullname ::= nm], go to state 165.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 428
parser: Shift 'SET', go to state 153
parser: Return. Stack=[ecmd explain with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 153
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd explain with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 153.
parser: ... then shift 'nm', go to state 442
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[ecmd explain with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'ID' in state 84
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd explain with UPDATE orconf xfullname indexed_opt SET nm EQ ID]
parser: Input 'PLUS' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 84.
parser: ... then shift 'expr', go to state 58
parser: Shift 'PLUS', go to state 115
parser: Return. Stack=[ecmd explain with UPDATE orconf xfullname indexed_opt SET nm EQ expr PLUS]
parser: Input 'INTEGER' in state 115
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[ecmd explain with UPDATE orconf xfullname indexed_opt SET nm EQ expr PLUS INTEGER]
parser: Input 'SEMI' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 115.
parser: ... then shift 'term', go to state 132
parser: Reduce 184 [expr ::= expr PLUS|MINUS expr], go to state 84.
parser: ... then shift 'expr', go to state 58
parser: Reduce 148 [setlist ::= nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', pending reduce 145
parser: Reduce 145 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 2.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 2.
parser: ... then shift 'cmdx', pending reduce 322
parser: Reduce 322 [ecmd ::= explain cmdx], go to state 1.
parser: ... then shift 'ecmd', pending reduce 318
parser: Reduce 318 [cmdlist ::= cmdlist ecmd], go to state 0.
parser: ... then shift 'cmdlist', go to state 1
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[cmdlist SEMI]
parser: Popping SEMI
parser: Popping cmdlist
parser: [[[UPDATE t0 SET v0=v0/3 WHERE v0<=5
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='over' AND type!='trigger' ORDER BY rowid
;ALTER TABLE over ADD field1
    
;SELECT * FROM t0 ORDER BY c0
;SELECT ifnull(substr('abcdefg',NULL,1),'nil')
;;INSERT INTO t0(v0,c0) VALUES(77,128);;
;SELECT * FROM t0 ORDER BY v0,c0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;UPDATE t0 SET v0=v0+1 WHERE v0==8
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;CREATE INDEX test003 ON t0(v0)
;UPDATE t0 SET c0=c0-1 WHERE c0==8 and c0>800
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE c0==777 ORDER BY c0,c0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;;UPDATE t0 SET c0=c0-1 WHERE c0<=100 and c0==128;SELECT * FROM t0 ORDER BY v0,v0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE c0==8 ORDER BY c0,c0
;UPDATE t0 SET v0=v0+1 WHERE c0==128
;SELECT * FROM t0 WHERE c0==778 ORDER BY c0,c0
;SELECT * FROM t0 WHERE v0==8 ORDER BY v0,v0
;UPDATE t0 SET v0=v0-1 WHERE v0<=100 and c0==128
;SELECT * FROM t0 ORDER BY c0,c0
;SELECT * FROM t0 WHERE v0==777 ORDER BY v0,v0
;SELECT * FROM t0 WHERE v0==8 ORDER BY v0,v0
;CREATE INDEX field2 ON t0(v0,c0)
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;ALTER TABLE t0 ADD test004
    
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;UPDATE t0 SET test004=test004+1 WHERE test004==8
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE test004==89 ORDER BY test004,test004
;UPDATE t0 SET test004=test004-1 WHERE test004==8 and test004>800
;SELECT * FROM t0 ORDER BY test004,test004
;;
;CREATE TABLE field3(
    test005 INTEGER DEFAULT -9223372036854775808,
    field4 INTEGER DEFAULT (-(-9223372036854775808))
  );SELECT * FROM t0 WHERE v0==89 ORDER BY v0,v0
;SELECT * FROM t0 WHERE test004==88 ORDER BY test004,test004
;SELECT * FROM over WHERE t1==778 ORDER BY t1,last_field
;UPDATE over SET preceding=preceding-1 WHERE preceding>100 and preceding==128
;SELECT * FROM t0 WHERE test004==78 ORDER BY test004,test004
;UPDATE over SET test001=test001-1 WHERE test001<=100 and test001==128
;;SELECT * FROM field3;;SELECT field1,field1 FROM over;;
;UPDATE t0 AS xyz SET test004=test004+1 WHERE xyz.test004 IN (SELECT test004 FROM t0);;
;UPDATE over AS xyz SET field1=field1+1 WHERE EXISTS(SELECT 1 FROM over WHERE over.field1<xyz.field1);;UPDATE over SET rowid=rowid-9999;;
;UPDATE over SET rowid=rowid-1;;CREATE TABLE test006(field5,test007,field6);;CREATE TRIGGER test008 AFTER UPDATE on over WHEN nosuchcol BEGIN
      SELECT 'illegal WHEN clause';
    END;;SELECT field1,field1,field1,'|' FROM over ORDER BY field1;;INSERT INTO t0(test004) VALUES(1);;CREATE INDEX field7 ON field3(1) WHERE 3;;SELECT * FROM field3;]]]
parser: Input 'UPDATE' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'ID' in state 299
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', go to state 165
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf ID]
parser: Input 'SET' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 165.
parser: ... then shift 'nm', go to state 393
parser: Reduce 112 [xfullname ::= nm], go to state 165.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 428
parser: Shift 'SET', go to state 153
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 153
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 153.
parser: ... then shift 'nm', go to state 442
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'ID' in state 84
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID]
parser: Input 'SLASH' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 84.
parser: ... then shift 'expr', go to state 58
parser: Shift 'SLASH', go to state 114
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ expr SLASH]
parser: Input 'INTEGER' in state 114
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ expr SLASH INTEGER]
parser: Input 'WHERE' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 114.
parser: ... then shift 'term', go to state 145
parser: Reduce 185 [expr ::= expr STAR|SLASH|REM expr], go to state 84.
parser: ... then shift 'expr', go to state 58
parser: Reduce 148 [setlist ::= nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'LE' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'LE', go to state 118
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr LE]
parser: Input 'INTEGER' in state 118
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr LE INTEGER]
parser: Input 'SEMI' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 118.
parser: ... then shift 'term', go to state 130
parser: Reduce 181 [expr ::= expr LT|GT|GE|LE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 145
parser: Reduce 145 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT*FROM"temp".sqlite_master WHERE tbl_name='over' AND type!='trigger' ORDER BY rowid
;ALTER TABLE over ADD field1
    
;SELECT * FROM t0 ORDER BY c0
;SELECT ifnull(substr('abcdefg',NULL,1),'nil')
;;INSERT INTO t0(v0,c0) VALUES(77,128);;
;SELECT * FROM t0 ORDER BY v0,c0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;UPDATE t0 SET v0=v0+1 WHERE v0==8
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;CREATE INDEX test003 ON t0(v0)
;UPDATE t0 SET c0=c0-1 WHERE c0==8 and c0>800
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE c0==777 ORDER BY c0,c0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;;UPDATE t0 SET c0=c0-1 WHERE c0<=100 and c0==128;SELECT * FROM t0 ORDER BY v0,v0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE c0==8 ORDER BY c0,c0
;UPDATE t0 SET v0=v0+1 WHERE c0==128
;SELECT * FROM t0 WHERE c0==778 ORDER BY c0,c0
;SELECT * FROM t0 WHERE v0==8 ORDER BY v0,v0
;UPDATE t0 SET v0=v0-1 WHERE v0<=100 and c0==128
;SELECT * FROM t0 ORDER BY c0,c0
;SELECT * FROM t0 WHERE v0==777 ORDER BY v0,v0
;SELECT * FROM t0 WHERE v0==8 ORDER BY v0,v0
;CREATE INDEX field2 ON t0(v0,c0)
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;ALTER TABLE t0 ADD test004
    
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;UPDATE t0 SET test004=test004+1 WHERE test004==8
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE test004==89 ORDER BY test004,test004
;UPDATE t0 SET test004=test004-1 WHERE test004==8 and test004>800
;SELECT * FROM t0 ORDER BY test004,test004
;;
;CREATE TABLE field3(
    test005 INTEGER DEFAULT -9223372036854775808,
    field4 INTEGER DEFAULT (-(-9223372036854775808))
  );SELECT * FROM t0 WHERE v0==89 ORDER BY v0,v0
;SELECT * FROM t0 WHERE test004==88 ORDER BY test004,test004
;SELECT * FROM over WHERE t1==778 ORDER BY t1,last_field
;UPDATE over SET preceding=preceding-1 WHERE preceding>100 and preceding==128
;SELECT * FROM t0 WHERE test004==78 ORDER BY test004,test004
;UPDATE over SET test001=test001-1 WHERE test001<=100 and test001==128
;;SELECT * FROM field3;;SELECT field1,field1 FROM over;;
;UPDATE t0 AS xyz SET test004=test004+1 WHERE xyz.test004 IN (SELECT test004 FROM t0);;
;UPDATE over AS xyz SET field1=field1+1 WHERE EXISTS(SELECT 1 FROM over WHERE over.field1<xyz.field1);;UPDATE over SET rowid=rowid-9999;;
;UPDATE over SET rowid=rowid-1;;CREATE TABLE test006(field5,test007,field6);;CREATE TRIGGER test008 AFTER UPDATE on over WHEN nosuchcol BEGIN
      SELECT 'illegal WHEN clause';
    END;;SELECT field1,field1,field1,'|' FROM over ORDER BY field1;;INSERT INTO t0(test004) VALUES(1);;CREATE INDEX field7 ON field3(1) WHERE 3;;SELECT * FROM field3;]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 96
parser: Return. Stack=[SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'NE' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'NE', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE STRING]
parser: Input 'ORDER' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[ALTER TABLE over ADD field1
    
;SELECT * FROM t0 ORDER BY c0
;SELECT ifnull(substr('abcdefg',NULL,1),'nil')
;;INSERT INTO t0(v0,c0) VALUES(77,128);;
;SELECT * FROM t0 ORDER BY v0,c0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;UPDATE t0 SET v0=v0+1 WHERE v0==8
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;CREATE INDEX test003 ON t0(v0)
;UPDATE t0 SET c0=c0-1 WHERE c0==8 and c0>800
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE c0==777 ORDER BY c0,c0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;;UPDATE t0 SET c0=c0-1 WHERE c0<=100 and c0==128;SELECT * FROM t0 ORDER BY v0,v0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE c0==8 ORDER BY c0,c0
;UPDATE t0 SET v0=v0+1 WHERE c0==128
;SELECT * FROM t0 WHERE c0==778 ORDER BY c0,c0
;SELECT * FROM t0 WHERE v0==8 ORDER BY v0,v0
;UPDATE t0 SET v0=v0-1 WHERE v0<=100 and c0==128
;SELECT * FROM t0 ORDER BY c0,c0
;SELECT * FROM t0 WHERE v0==777 ORDER BY v0,v0
;SELECT * FROM t0 WHERE v0==8 ORDER BY v0,v0
;CREATE INDEX field2 ON t0(v0,c0)
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;ALTER TABLE t0 ADD test004
    
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;UPDATE t0 SET test004=test004+1 WHERE test004==8
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE test004==89 ORDER BY test004,test004
;UPDATE t0 SET test004=test004-1 WHERE test004==8 and test004>800
;SELECT * FROM t0 ORDER BY test004,test004
;;
;CREATE TABLE field3(
    test005 INTEGER DEFAULT -9223372036854775808,
    field4 INTEGER DEFAULT (-(-9223372036854775808))
  );SELECT * FROM t0 WHERE v0==89 ORDER BY v0,v0
;SELECT * FROM t0 WHERE test004==88 ORDER BY test004,test004
;SELECT * FROM over WHERE t1==778 ORDER BY t1,last_field
;UPDATE over SET preceding=preceding-1 WHERE preceding>100 and preceding==128
;SELECT * FROM t0 WHERE test004==78 ORDER BY test004,test004
;UPDATE over SET test001=test001-1 WHERE test001<=100 and test001==128
;;SELECT * FROM field3;;SELECT field1,field1 FROM over;;
;UPDATE t0 AS xyz SET test004=test004+1 WHERE xyz.test004 IN (SELECT test004 FROM t0);;
;UPDATE over AS xyz SET field1=field1+1 WHERE EXISTS(SELECT 1 FROM over WHERE over.field1<xyz.field1);;UPDATE over SET rowid=rowid-9999;;
;UPDATE over SET rowid=rowid-1;;CREATE TABLE test006(field5,test007,field6);;CREATE TRIGGER test008 AFTER UPDATE on over WHEN nosuchcol BEGIN
      SELECT 'illegal WHEN clause';
    END;;SELECT field1,field1,field1,'|' FROM over ORDER BY field1;;INSERT INTO t0(test004) VALUES(1);;CREATE INDEX field7 ON field3(1) WHERE 3;;SELECT * FROM field3;]]]
parser: Input 'ALTER' in state 0
parser: Shift 'ALTER', go to state 423
parser: Return. Stack=[ALTER]
parser: Input 'TABLE' in state 423
parser: Shift 'TABLE', go to state 133
parser: Return. Stack=[ALTER TABLE]
parser: Input 'ID' in state 133
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ALTER TABLE ID]
parser: Input 'ADD' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 133.
parser: ... then shift 'nm', go to state 459
parser: Reduce 110 [fullname ::= nm], go to state 133.
parser: ... then shift 'fullname', go to state 422
parser: Reduce 275 [add_column_fullname ::= fullname], go to state 133.
parser: ... then shift 'add_column_fullname', go to state 420
parser: Shift 'ADD', go to state 290
parser: Return. Stack=[ALTER TABLE add_column_fullname ADD]
parser: Input 'ID' in state 290
parser: Reduce 366 [kwcolumn_opt ::=].
parser: ... then shift 'kwcolumn_opt', go to state 163
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ALTER TABLE add_column_fullname ADD kwcolumn_opt ID]
parser: Input 'SEMI' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 163.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 163.
parser: ... then shift 'columnname', go to state 371
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 149
parser: Reduce 274 [cmd ::= ALTER TABLE add_column_fullname ADD kwcolumn_opt columnname carglist], go to state 0.
parser: [[[UPDATE "main".sqlite_master SET sql = substr(sql,1,61) || ', ' || 'field1' || substr(sql,62) WHERE type = 'table' AND name = 'over']]]
parser: Input 'UPDATE' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'ID' in state 299
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', go to state 165
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 165.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 165.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 428
parser: Shift 'SET', go to state 153
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 153
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 153.
parser: ... then shift 'nm', go to state 442
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'ID' in state 84
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP]
parser: Input 'ID' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA INTEGER]
parser: Input 'COMMA' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA INTEGER]
parser: Input 'RP' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct exprlist RP]
parser: Input 'CONCAT' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 84.
parser: ... then shift 'expr', go to state 58
parser: Shift 'CONCAT', go to state 113
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ expr CONCAT]
parser: Input 'STRING' in state 113
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ expr CONCAT STRING]
parser: Input 'CONCAT' in state 537
parser: Reduce 168 [term ::= STRING], go to state 113.
parser: ... then shift 'term', go to state 146
parser: Reduce 186 [expr ::= expr CONCAT expr], go to state 84.
parser: ... then shift 'expr', go to state 58
parser: Shift 'CONCAT', go to state 113
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ expr CONCAT]
parser: Input 'STRING' in state 113
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ expr CONCAT STRING]
parser: Input 'CONCAT' in state 537
parser: Reduce 168 [term ::= STRING], go to state 113.
parser: ... then shift 'term', go to state 146
parser: Reduce 186 [expr ::= expr CONCAT expr], go to state 84.
parser: ... then shift 'expr', go to state 58
parser: Shift 'CONCAT', go to state 113
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ expr CONCAT]
parser: Input 'ID' in state 113
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ expr CONCAT ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ expr CONCAT ID LP]
parser: Input 'ID' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ expr CONCAT ID LP distinct ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ expr CONCAT ID LP distinct nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ expr CONCAT ID LP distinct nexprlist COMMA INTEGER]
parser: Input 'RP' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ expr CONCAT ID LP distinct exprlist RP]
parser: Input 'WHERE' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 113.
parser: ... then shift 'expr', go to state 146
parser: Reduce 186 [expr ::= expr CONCAT expr], go to state 84.
parser: ... then shift 'expr', go to state 58
parser: Reduce 148 [setlist ::= nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND expr EQ STRING]
parser: Input 'SEMI' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 145
parser: Reduce 145 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE x(type text,name text,tbl_name text,rootpage int,sql text)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'RP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'ORDER' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE t0 (
        c0 INTEGER PRIMARY KEY DESC, 
        v0 UNIQUE DEFAULT NULL
      ) WITHOUT ROWID ]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'PRIMARY' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Shift 'PRIMARY', go to state 475
parser: Return. Stack=[create_table LP columnname carglist PRIMARY]
parser: Input 'KEY' in state 475
parser: Shift 'KEY', go to state 280
parser: Return. Stack=[create_table LP columnname carglist PRIMARY KEY]
parser: Input 'DESC' in state 280
parser: Shift 'DESC', pending reduce 132
parser: Return. Stack=[create_table LP columnname carglist PRIMARY KEY DESC]
parser: Input 'COMMA' with pending reduce 132
parser: Reduce 132 [sortorder ::= DESC], go to state 280.
parser: ... then shift 'sortorder', go to state 333
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', go to state 332
parser: Reduce 42 [autoinc ::=].
parser: ... then shift 'autoinc', pending reduce 36
parser: Reduce 36 [ccons ::= PRIMARY KEY sortorder onconf autoinc], go to state 150.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 376.
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'UNIQUE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'UNIQUE', go to state 331
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist UNIQUE]
parser: Input 'DEFAULT' in state 331
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 37
parser: Reduce 37 [ccons ::= UNIQUE onconf], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Shift 'DEFAULT', go to state 267
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist DEFAULT]
parser: Input 'NULL' in state 267
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 199
parser: Shift 'NULL', pending reduce 167
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist DEFAULT scanpt NULL]
parser: Input 'RP' with pending reduce 167
parser: Reduce 167 [term ::= NULL|FLOAT|BLOB], go to state 199.
parser: ... then shift 'term', go to state 382
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', pending reduce 30
parser: Reduce 30 [ccons ::= DEFAULT scanpt term scanpt], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'WITHOUT' in state 361
parser: Shift 'WITHOUT', go to state 251
parser: Return. Stack=[create_table LP columnlist conslist_opt RP WITHOUT]
parser: Input 'ID' in state 251
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist conslist_opt RP WITHOUT ID]
parser: Input 'SEMI' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 251.
parser: ... then shift 'nm', pending reduce 22
parser: Reduce 22 [table_options ::= WITHOUT nm], go to state 361.
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE over(following,preceding,t1,x,test001,last_field, field1)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'FOLLOWING' in state 139
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', pending reduce 331
parser: Return. Stack=[create_table LP FOLLOWING]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'PRECEDING' in state 34
parser: FALLBACK PRECEDING => ID
parser: Shift 'PRECEDING', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA PRECEDING]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'RP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE INDEX test002 ON t0(v0,v0+25*v0)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'INDEX' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 221 [uniqueflag ::=].
parser: ... then shift 'uniqueflag', go to state 453
parser: Shift 'INDEX', go to state 315
parser: Return. Stack=[createkw uniqueflag INDEX]
parser: Input 'ID' in state 315
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 225
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists ID]
parser: Input 'ON' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 225.
parser: ... then shift 'nm', go to state 314
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 452
parser: Shift 'ON', go to state 224
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON]
parser: Input 'ID' in state 224
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 224.
parser: ... then shift 'nm', go to state 451
parser: Shift 'LP', go to state 18
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP]
parser: Input 'ID' in state 18
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 18.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 18.
parser: ... then shift 'sortlist', go to state 400
parser: Shift 'COMMA', go to state 95
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist COMMA]
parser: Input 'ID' in state 95
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist COMMA ID]
parser: Input 'PLUS' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 95.
parser: ... then shift 'expr', go to state 14
parser: Shift 'PLUS', go to state 115
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist COMMA expr PLUS]
parser: Input 'INTEGER' in state 115
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist COMMA expr PLUS INTEGER]
parser: Input 'STAR' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 115.
parser: ... then shift 'term', go to state 132
parser: Shift 'STAR', go to state 114
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist COMMA expr PLUS term STAR]
parser: Input 'ID' in state 114
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist COMMA expr PLUS term STAR ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 114.
parser: ... then shift 'expr', go to state 145
parser: Reduce 185 [expr ::= expr STAR|SLASH|REM expr], go to state 115.
parser: ... then shift 'expr', go to state 132
parser: Reduce 184 [expr ::= expr PLUS|MINUS expr], go to state 95.
parser: ... then shift 'expr', go to state 14
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 129
parser: Reduce 129 [sortlist ::= sortlist COMMA expr sortorder], go to state 18.
parser: ... then shift 'sortlist', go to state 400
parser: Shift 'RP', go to state 313
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP]
parser: Input 'SEMI' in state 313
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', pending reduce 219
parser: Reduce 219 [cmd ::= createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE x(type text,name text,tbl_name text,rootpage int,sql text)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'RP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT name, rootpage, sql FROM "temp".sqlite_temp_master ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'ORDER' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT * FROM t0 ORDER BY c0
;SELECT ifnull(substr('abcdefg',NULL,1),'nil')
;;INSERT INTO t0(v0,c0) VALUES(77,128);;
;SELECT * FROM t0 ORDER BY v0,c0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;UPDATE t0 SET v0=v0+1 WHERE v0==8
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;CREATE INDEX test003 ON t0(v0)
;UPDATE t0 SET c0=c0-1 WHERE c0==8 and c0>800
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE c0==777 ORDER BY c0,c0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;;UPDATE t0 SET c0=c0-1 WHERE c0<=100 and c0==128;SELECT * FROM t0 ORDER BY v0,v0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE c0==8 ORDER BY c0,c0
;UPDATE t0 SET v0=v0+1 WHERE c0==128
;SELECT * FROM t0 WHERE c0==778 ORDER BY c0,c0
;SELECT * FROM t0 WHERE v0==8 ORDER BY v0,v0
;UPDATE t0 SET v0=v0-1 WHERE v0<=100 and c0==128
;SELECT * FROM t0 ORDER BY c0,c0
;SELECT * FROM t0 WHERE v0==777 ORDER BY v0,v0
;SELECT * FROM t0 WHERE v0==8 ORDER BY v0,v0
;CREATE INDEX field2 ON t0(v0,c0)
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;ALTER TABLE t0 ADD test004
    
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;UPDATE t0 SET test004=test004+1 WHERE test004==8
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE test004==89 ORDER BY test004,test004
;UPDATE t0 SET test004=test004-1 WHERE test004==8 and test004>800
;SELECT * FROM t0 ORDER BY test004,test004
;;
;CREATE TABLE field3(
    test005 INTEGER DEFAULT -9223372036854775808,
    field4 INTEGER DEFAULT (-(-9223372036854775808))
  );SELECT * FROM t0 WHERE v0==89 ORDER BY v0,v0
;SELECT * FROM t0 WHERE test004==88 ORDER BY test004,test004
;SELECT * FROM over WHERE t1==778 ORDER BY t1,last_field
;UPDATE over SET preceding=preceding-1 WHERE preceding>100 and preceding==128
;SELECT * FROM t0 WHERE test004==78 ORDER BY test004,test004
;UPDATE over SET test001=test001-1 WHERE test001<=100 and test001==128
;;SELECT * FROM field3;;SELECT field1,field1 FROM over;;
;UPDATE t0 AS xyz SET test004=test004+1 WHERE xyz.test004 IN (SELECT test004 FROM t0);;
;UPDATE over AS xyz SET field1=field1+1 WHERE EXISTS(SELECT 1 FROM over WHERE over.field1<xyz.field1);;UPDATE over SET rowid=rowid-9999;;
;UPDATE over SET rowid=rowid-1;;CREATE TABLE test006(field5,test007,field6);;CREATE TRIGGER test008 AFTER UPDATE on over WHEN nosuchcol BEGIN
      SELECT 'illegal WHEN clause';
    END;;SELECT field1,field1,field1,'|' FROM over ORDER BY field1;;INSERT INTO t0(test004) VALUES(1);;CREATE INDEX field7 ON field3(1) WHERE 3;;SELECT * FROM field3;]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 96
parser: Return. Stack=[SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'ORDER' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT ifnull(substr('abcdefg',NULL,1),'nil')
;;INSERT INTO t0(v0,c0) VALUES(77,128);;
;SELECT * FROM t0 ORDER BY v0,c0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;UPDATE t0 SET v0=v0+1 WHERE v0==8
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;CREATE INDEX test003 ON t0(v0)
;UPDATE t0 SET c0=c0-1 WHERE c0==8 and c0>800
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE c0==777 ORDER BY c0,c0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;;UPDATE t0 SET c0=c0-1 WHERE c0<=100 and c0==128;SELECT * FROM t0 ORDER BY v0,v0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE c0==8 ORDER BY c0,c0
;UPDATE t0 SET v0=v0+1 WHERE c0==128
;SELECT * FROM t0 WHERE c0==778 ORDER BY c0,c0
;SELECT * FROM t0 WHERE v0==8 ORDER BY v0,v0
;UPDATE t0 SET v0=v0-1 WHERE v0<=100 and c0==128
;SELECT * FROM t0 ORDER BY c0,c0
;SELECT * FROM t0 WHERE v0==777 ORDER BY v0,v0
;SELECT * FROM t0 WHERE v0==8 ORDER BY v0,v0
;CREATE INDEX field2 ON t0(v0,c0)
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;ALTER TABLE t0 ADD test004
    
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;UPDATE t0 SET test004=test004+1 WHERE test004==8
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE test004==89 ORDER BY test004,test004
;UPDATE t0 SET test004=test004-1 WHERE test004==8 and test004>800
;SELECT * FROM t0 ORDER BY test004,test004
;;
;CREATE TABLE field3(
    test005 INTEGER DEFAULT -9223372036854775808,
    field4 INTEGER DEFAULT (-(-9223372036854775808))
  );SELECT * FROM t0 WHERE v0==89 ORDER BY v0,v0
;SELECT * FROM t0 WHERE test004==88 ORDER BY test004,test004
;SELECT * FROM over WHERE t1==778 ORDER BY t1,last_field
;UPDATE over SET preceding=preceding-1 WHERE preceding>100 and preceding==128
;SELECT * FROM t0 WHERE test004==78 ORDER BY test004,test004
;UPDATE over SET test001=test001-1 WHERE test001<=100 and test001==128
;;SELECT * FROM field3;;SELECT field1,field1 FROM over;;
;UPDATE t0 AS xyz SET test004=test004+1 WHERE xyz.test004 IN (SELECT test004 FROM t0);;
;UPDATE over AS xyz SET field1=field1+1 WHERE EXISTS(SELECT 1 FROM over WHERE over.field1<xyz.field1);;UPDATE over SET rowid=rowid-9999;;
;UPDATE over SET rowid=rowid-1;;CREATE TABLE test006(field5,test007,field6);;CREATE TRIGGER test008 AFTER UPDATE on over WHEN nosuchcol BEGIN
      SELECT 'illegal WHEN clause';
    END;;SELECT field1,field1,field1,'|' FROM over ORDER BY field1;;INSERT INTO t0(test004) VALUES(1);;CREATE INDEX field7 ON field3(1) WHERE 3;;SELECT * FROM field3;]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP]
parser: Input 'ID' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct ID LP]
parser: Input 'STRING' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct ID LP distinct STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 11.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct ID LP distinct nexprlist COMMA]
parser: Input 'NULL' in state 107
parser: Shift 'NULL', pending reduce 167
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct ID LP distinct nexprlist COMMA NULL]
parser: Input 'COMMA' with pending reduce 167
parser: Reduce 167 [term ::= NULL|FLOAT|BLOB], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct ID LP distinct nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct ID LP distinct nexprlist COMMA INTEGER]
parser: Input 'RP' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct ID LP distinct exprlist RP]
parser: Input 'COMMA' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct nexprlist COMMA STRING]
parser: Input 'RP' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct exprlist RP]
parser: Input 'SEMI' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Reduce 100 [from ::=].
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[;INSERT INTO t0(v0,c0) VALUES(77,128);;
;SELECT * FROM t0 ORDER BY v0,c0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;UPDATE t0 SET v0=v0+1 WHERE v0==8
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;CREATE INDEX test003 ON t0(v0)
;UPDATE t0 SET c0=c0-1 WHERE c0==8 and c0>800
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE c0==777 ORDER BY c0,c0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;;UPDATE t0 SET c0=c0-1 WHERE c0<=100 and c0==128;SELECT * FROM t0 ORDER BY v0,v0
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE c0==8 ORDER BY c0,c0
;UPDATE t0 SET v0=v0+1 WHERE c0==128
;SELECT * FROM t0 WHERE c0==778 ORDER BY c0,c0
;SELECT * FROM t0 WHERE v0==8 ORDER BY v0,v0
;UPDATE t0 SET v0=v0-1 WHERE v0<=100 and c0==128
;SELECT * FROM t0 ORDER BY c0,c0
;SELECT * FROM t0 WHERE v0==777 ORDER BY v0,v0
;SELECT * FROM t0 WHERE v0==8 ORDER BY v0,v0
;CREATE INDEX field2 ON t0(v0,c0)
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;ALTER TABLE t0 ADD test004
    
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;UPDATE t0 SET test004=test004+1 WHERE test004==8
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT * FROM t0 WHERE test004==89 ORDER BY test004,test004
;UPDATE t0 SET test004=test004-1 WHERE test004==8 and test004>800
;SELECT * FROM t0 ORDER BY test004,test004
;;
;CREATE TABLE field3(
    test005 INTEGER DEFAULT -9223372036854775808,
    field4 INTEGER DEFAULT (-(-9223372036854775808))
  );SELECT * FROM t0 WHERE v0==89 ORDER BY v0,v0
;SELECT * FROM t0 WHERE test004==88 ORDER BY test004,test004
;SELECT * FROM over WHERE t1==778 ORDER BY t1,last_field
;UPDATE over SET preceding=preceding-1 WHERE preceding>100 and preceding==128
;SELECT * FROM t0 WHERE test004==78 ORDER BY test004,test004
;UPDATE over SET test001=test001-1 WHERE test001<=100 and test001==128
;;SELECT * FROM field3;;SELECT field1,field1 FROM over;;
;UPDATE t0 AS xyz SET test004=test004+1 WHERE xyz.test004 IN (SELECT test004 FROM t0);;
;UPDATE over AS xyz SET field1=field1+1 WHERE EXISTS(SELECT 1 FROM over WHERE over.field1<xyz.field1);;UPDATE over SET rowid=rowid-9999;;
;UPDATE over SET rowid=rowid-1;;CREATE TABLE test006(field5,test007,field6);;CREATE TRIGGER test008 AFTER UPDATE on over WHEN nosuchcol BEGIN
      SELECT 'illegal WHEN clause';
    END;;SELECT field1,field1,field1,'|' FROM over ORDER BY field1;;INSERT INTO t0(test004) VALUES(1);;CREATE INDEX field7 ON field3(1) WHERE 3;;SELECT * FROM field3;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'INSERT' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[ecmd with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 156
parser: Reduce 156 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 427
parser: Shift 'INTO', go to state 164
parser: Return. Stack=[ecmd with insert_cmd INTO]
parser: Input 'ID' in state 164
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd with insert_cmd INTO ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 164.
parser: ... then shift 'nm', go to state 393
parser: Reduce 112 [xfullname ::= nm], go to state 164.
parser: ... then shift 'xfullname', go to state 298
parser: Shift 'LP', go to state 173
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname LP]
parser: Input 'ID' in state 173
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname LP ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 173.
parser: ... then shift 'nm', pending reduce 161
parser: Reduce 161 [idlist ::= nm], go to state 173.
parser: ... then shift 'idlist', go to state 397
parser: Shift 'COMMA', go to state 241
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname LP idlist COMMA]
parser: Input 'ID' in state 241
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname LP idlist COMMA ID]
parser: Input 'RP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 241.
parser: ... then shift 'nm', pending reduce 160
parser: Reduce 160 [idlist ::= idlist COMMA nm], go to state 173.
parser: ... then shift 'idlist', go to state 397
parser: Shift 'RP', pending reduce 159
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname LP idlist RP]
parser: Input 'VALUES' with pending reduce 159
parser: Reduce 159 [idlist_opt ::= LP idlist RP], go to state 298.
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'VALUES', go to state 526
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt VALUES]
parser: Input 'LP' in state 526
parser: Shift 'LP', go to state 28
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt VALUES LP]
parser: Input 'INTEGER' in state 28
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt VALUES LP INTEGER]
parser: Input 'COMMA' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 28.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 28.
parser: ... th
Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fecc84c2859 in __GI_abort () at abort.c:79
#2  0x00007fecc84c2729 in __assert_fail_base (fmt=0x7fecc8658588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x20cb53 "pCur->eState==CURSOR_VALID || (pCur->eState==CURSOR_INVALID && loc)", 
    file=0x22873d "sqlite3.c", line=71857, function=<optimized out>) at assert.c:92
#3  0x00007fecc84d3fd6 in __GI___assert_fail (assertion=0x20cb53 "pCur->eState==CURSOR_VALID || (pCur->eState==CURSOR_INVALID && loc)", file=0x22873d "sqlite3.c", line=71857, 
    function=0x20caa2 "int sqlite3BtreeInsert(BtCursor *, const BtreePayload *, int, int)") at assert.c:101
#4  0x00000000003e59d3 in sqlite3BtreeInsert (pCur=0x17d1708, pX=0x7fffc3074bc8, flags=0, seekResult=1) at sqlite3.c:71857
#5  0x00000000003d6045 in sqlite3VdbeExec (p=0x17ce7a0) at sqlite3.c:88923
#6  0x0000000000411104 in sqlite3Step (p=0x17ce7a0) at sqlite3.c:81930
#7  0x000000000029128d in sqlite3_step (pStmt=0x17ce7a0) at sqlite3.c:81995
#8  0x00000000002570b9 in main (argc=1, argv=0x7fffc30756c8) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 58062] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
