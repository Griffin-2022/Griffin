GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000680,sig:06,src:025009+022329,time:41905493,execs:8007761,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;UPDATE t0 SET c0=12, c0=2;]
VDBE Trace:
   0 Init             0   91    0               00 Start at 91
  91 Transaction      0    1    5 0             01 usesStmtJournal=1
  92 String8          0   19    0 abc%          00 r[19]='abc%'
REG[19] =   t4[abc%](8)
  93 String8          0   22    0 abc%          00 r[22]='abc%'
REG[22] =   t4[abc%](8)
  94 String8          0   28    0 abc%          00 r[28]='abc%'
REG[28] =   t4[abc%](8)
  95 Goto             0    1    0               00 
   1 Null             0   15   16               00 r[15..16]=NULL
REG[15] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; t0
   3 Explain          3    0    0 SCAN TABLE t0 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0   16    0               00 r[16]=rowid
REG[16] =  i:1
   6 RowSetAdd       15   16    0               00 rowset(15)=r[16]
REG[15] =  NULL
REG[16] =  i:1
   7 Next             0    5    0               01 
   5 Rowid            0   16    0               00 r[16]=rowid
REG[16] =  i:2
   6 RowSetAdd       15   16    0               00 rowset(15)=r[16]
REG[15] =  (rowset)
REG[16] =  i:2
   7 Next             0    5    0               01 
   8 OpenWrite        0    2    0 1             00 root=2 iDb=0; t0
   9 OpenWrite        1    8    0 k(3,,,)       00 root=8 iDb=0; t1
  10 OpenWrite        2    5    0 k(2,,)        00 root=5 iDb=0; v0
  11 OpenWrite        3    4    0 k(3,,,)       00 root=4 iDb=0; sqlite_autoindex_t0_2
  12 OpenWrite        4    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t0_1
  13 RowSetRead      15   90   16               00 r[16]=rowset(15)
REG[15] =  (rowset)
REG[16] =  i:1
  14 NotExists        0   13   16               00 intkey=r[16]
REG[16] =  i:1
  15 Integer          2   17    0               00 r[17]=2
REG[17] =  i:2
  16 Noop             0    0    0               00 uniqueness check for t1
  17 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
  18 Copy            17   20    0               00 r[20]=r[17]
REG[20] =  i:2
  19 PureFunc0        1   19   18 like(2)       02 
REG[19] =   t4[abc%](8)
REG[20] =  i:2
REG[18] =  i:0
  20 If              18   25    1               00 
REG[18] =  i:0
  21 SCopy           17    2    0               00 r[2]=r[17]; c0
REG[2] =  i:2
  22 SCopy           17    3    0               00 r[3]=r[17]; c0
REG[3] =  i:2
  23 IntCopy         16    4    0               00 r[4]=r[16]; rowid
REG[4] =  i:1
  24 MakeRecord       2    3    1               00 r[1]=mkrec(r[2..4]); for t1
REG[1] =  s6[040101090202......]
  25 Noop             0    0    0               00 uniqueness check for v0
  26 Add             17   17    6               00 r[6]=r[17]+r[17]; v0 column 0
REG[17] =  i:2
REG[17] =  i:2
REG[6] =  i:4
  27 IntCopy         16    7    0               00 r[7]=r[16]; rowid
REG[7] =  i:1
  28 MakeRecord       6    2    5               00 r[5]=mkrec(r[6..7]); for v0
REG[5] =  s4[03010904....]
  29 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t0_2
  30 SCopy           17    9    0               00 r[9]=r[17]; c0
REG[9] =  i:2
  31 SCopy           17   10    0               00 r[10]=r[17]; c0
REG[10] =  i:2
  32 IntCopy         16   11    0               00 r[11]=r[16]; rowid
REG[11] =  i:1
  33 MakeRecord       9    3    8               00 r[8]=mkrec(r[9..11]); for sqlite_autoindex_t0_2
REG[8] =  s6[040101090202......]
  34 NoConflict       3   54    9 2             00 key=r[9..10]
REG[9] =  i:2
REG[10] =  i:2
  54 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t0_1
  55 SCopy           17   13    0               00 r[13]=r[17]; c0
REG[13] =  i:2
  56 IntCopy         16   14    0               00 r[14]=r[16]; rowid
REG[14] =  i:1
  57 MakeRecord      13    2   12               00 r[12]=mkrec(r[13..14]); for sqlite_autoindex_t0_1
REG[12] =  s4[03010902....]
  58 Abortable        0    0    0               00 
  59 NoConflict       4   63   13 1             00 key=r[13]
REG[13] =  i:2
  63 NotExists        0   82   16               00 intkey=r[16]
REG[16] =  i:1
  64 Column           0    0   29               00 r[29]=t0.c0
REG[29] =  NULL
  65 PureFunc0        1   28   18 like(2)       02 
REG[28] =   t4[abc%](8)
REG[29] =  NULL
REG[18] =  NULL
  66 If              18   71    1               00 
REG[18] =  NULL
  71 Column           0    0   18               00 r[18]=t0.c0
REG[18] =  NULL
  72 Column           0    0   27               00 r[27]=t0.c0
REG[27] =  NULL
  73 Add             27   18   30               00 r[30]=r[27]+r[18]
REG[27] =  NULL
REG[18] =  NULL
REG[30] =  NULL
  74 Rowid            0   31    0               00 r[31]=rowid
REG[31] =  i:1
  75 IdxDelete        2   30    2               00 key=r[30..31]
  76 Column           0    0   33               00 r[33]=t0.c0
REG[33] =  NULL
  77 Column           0    0   34               00 r[34]=t0.c0
REG[34] =  NULL
  78 Rowid            0   35    0               00 r[35]=rowid
REG[35] =  i:1
  79 IdxDelete        3   33    3               00 key=r[33..35]
  80 Rowid            0   34    0               00 r[34]=rowid
REG[34] =  i:1
  81 IdxDelete        4   33    2               00 key=r[33..34]
  82 IsNull           1   84    0               00 if r[1]==NULL goto 84
REG[1] =  s6[040101090202......]
  83 IdxInsert        1    1    2 3             00 key=r[1]
REG[1] =  s6[040101090202......]
  84 IdxInsert        2    5    6 2             00 key=r[5]
REG[5] =  s4[03010904....]
  85 IdxInsert        3    8    9 3             00 key=r[8]
REG[8] =  s6[040101090202......]
  86 IdxInsert        4   12   13 2             00 key=r[12]
REG[12] =  s4[03010902....]
  87 MakeRecord      17    1   27               00 r[27]=mkrec(r[17])
REG[27] =  s3[020102...]
  88 Insert           0   27   16 t0            05 intkey=r[16] data=r[27]
REG[27] =  s3[020102...]
REG[16] =  i:1
  89 Goto             0   13    0               00 
  13 RowSetRead      15   90   16               00 r[16]=rowset(15)
REG[15] =  (rowset)
REG[16] =  i:2
  14 NotExists        0   13   16               00 intkey=r[16]
REG[16] =  i:2
  15 Integer          2   17    0               00 r[17]=2
REG[17] =  i:2
  16 Noop             0    0    0               00 uniqueness check for t1
  17 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
  18 Copy            17   20    0               00 r[20]=r[17]
REG[20] =  i:2
  19 PureFunc         1   19   18 like(2)       02 
REG[19] =   t4[abc%](8)
REG[20] =  i:2
REG[18] =  i:0
  20 If              18   25    1               00 
REG[18] =  i:0
  21 SCopy           17    2    0               00 r[2]=r[17]; c0
REG[2] =  i:2
  22 SCopy           17    3    0               00 r[3]=r[17]; c0
REG[3] =  i:2
  23 IntCopy         16    4    0               00 r[4]=r[16]; rowid
REG[4] =  i:2
  24 MakeRecord       2    3    1               00 r[1]=mkrec(r[2..4]); for t1
REG[1] =  s7[04010101020202.......]
  25 Noop             0    0    0               00 uniqueness check for v0
  26 Add             17   17    6               00 r[6]=r[17]+r[17]; v0 column 0
REG[17] =  i:2
REG[17] =  i:2
REG[6] =  i:4
  27 IntCopy         16    7    0               00 r[7]=r[16]; rowid
REG[7] =  i:2
  28 MakeRecord       6    2    5               00 r[5]=mkrec(r[6..7]); for v0
REG[5] =  s5[0301010402.....]
  29 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t0_2
  30 SCopy           17    9    0               00 r[9]=r[17]; c0
REG[9] =  i:2
  31 SCopy           17   10    0               00 r[10]=r[17]; c0
REG[10] =  i:2
  32 IntCopy         16   11    0               00 r[11]=r[16]; rowid
REG[11] =  i:2
  33 MakeRecord       9    3    8               00 r[8]=mkrec(r[9..11]); for sqlite_autoindex_t0_2
REG[8] =  s7[04010101020202.......]
  34 NoConflict       3   54    9 2             00 key=r[9..10]
REG[9] =  i:2
REG[10] =  i:2
  35 IdxRowid         3   18    0               00 r[18]=rowid
REG[18] =  i:1
  36 Eq              18   54   16               90 if r[16]==r[18] goto 54
REG[18] =  i:1
REG[16] =  i:2
  37 NotExists        0   54   18 1             00 intkey=r[18]
REG[18] =  i:1
  38 Column           0    0   23               00 r[23]=t0.c0
REG[23] =  i:2
  39 PureFunc0        1   22   21 like(2)       02 
REG[22] =   t4[abc%](8)
REG[23] =  i:2
REG[21] =  i:0
  40 If              21   45    1               00 
REG[21] =  i:0
  41 Column           0    0   24               00 r[24]=t0.c0
REG[24] =  i:2
  42 Column           0    0   25               00 r[25]=t0.c0
REG[25] =  i:2
  43 Rowid            0   26    0               00 r[26]=rowid
REG[26] =  i:1
  44 IdxDelete        1   24    3               00 key=r[24..26]
  45 Column           0    0   21               00 r[21]=t0.c0
REG[21] =  i:2
  46 Column           0    0   27               00 r[27]=t0.c0
REG[27] =  i:2
  47 Add             27   21   24               00 r[24]=r[27]+r[21]
REG[27] =  i:2
REG[21] =  i:2
REG[24] =  i:4
  48 Rowid            0   25    0               00 r[25]=rowid
REG[25] =  i:1
  49 IdxDelete        2   24    2               00 key=r[24..25]
  50 Column           0    0   24               00 r[24]=t0.c0
REG[24] =  i:2
  51 IdxDelete        4   24    2               00 key=r[24..25]
  52 Delete           0    0    0 t0            00 
  53 Delete           3    0    0               00 
  54 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t0_1
  55 SCopy           17   13    0               00 r[13]=r[17]; c0
REG[13] =  i:2
  56 IntCopy         16   14    0               00 r[14]=r[16]; rowid
REG[14] =  i:2
  57 MakeRecord      13    2   12               00 r[12]=mkrec(r[13..14]); for sqlite_autoindex_t0_1
REG[12] =  s5[0301010202.....]
  58 Abortable        0    0    0               00 
  59 NoConflict       4   63   13 1             00 key=r[13]
REG[13] =  i:2
  63 NotExists        0   82   16               00 intkey=r[16]
REG[16] =  i:2
  64 Column           0    0   29               00 r[29]=t0.c0
REG[29] =  NULL
  65 PureFunc         1   28   18 like(2)       02 
REG[28] =   t4[abc%](8)
REG[29] =  NULL
REG[18] =  NULL
  66 If              18   71    1               00 
REG[18] =  NULL
  71 Column           0    0   18               00 r[18]=t0.c0
REG[18] =  NULL
  72 Column           0    0   27               00 r[27]=t0.c0
REG[27] =  NULL
  73 Add             27   18   30               00 r[30]=r[27]+r[18]
REG[27] =  NULL
REG[18] =  NULL
REG[30] =  NULL
  74 Rowid            0   31    0               00 r[31]=rowid
REG[31] =  i:2
  75 IdxDelete        2   30    2               00 key=r[30..31]
  76 Column           0    0   33               00 r[33]=t0.c0
REG[33] =  NULL
  77 Column           0    0   34               00 r[34]=t0.c0
REG[34] =  NULL
  78 Rowid            0   35    0               00 r[35]=rowid
REG[35] =  i:2
  79 IdxDelete        3   33    3               00 key=r[33..35]
  80 Rowid            0   34    0               00 r[34]=rowid
REG[34] =  i:2
  81 IdxDelete        4   33    2               00 key=r[33..34]
  82 IsNull           1   84    0               00 if r[1]==NULL goto 84
REG[1] =  s7[04010101020202.......]
  83 IdxInsert        1    1    2 3             00 key=r[1]
REG[1] =  s7[04010101020202.......]
  84 IdxInsert        2    5    6 2             00 key=r[5]
REG[5] =  s5[0301010402.....]
  85 IdxInsert        3    8    9 3             00 key=r[8]
REG[8] =  s7[04010101020202.......]
  86 IdxInsert        4   12   13 2             00 key=r[12]
REG[12] =  s5[0301010202.....]
  87 MakeRecord      17    1   27               00 r[27]=mkrec(r[17])
REG[27] =  s3[020102...]
  88 Insert           0   27   16 t0            05 intkey=r[16] data=r[27]
REG[27] =  s3[020102...]
REG[16] =  i:2
  89 Goto             0   13    0               00 
  13 RowSetRead      15   90   16               00 r[16]=rowset(15)
REG[15] =  (rowset)
REG[16] =  i:2
  90 Halt             0    0    0               00 
SQL: [;CREATE VIEW field1 AS 
    WITH RECURSIVE t3(field1,y,z) AS (
        SELECT c0,c0,NULL FROM t0
        UNION
        SELECT field1,y,NULL FROM t3, t0
    )
  SELECT * FROM t3 AS xyz;]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    5 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:9
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:9
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:9
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:9
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:9
  18 String8          0    6    0 view          00 r[6]='view'
REG[6] =   t4[view](8)
  19 String8          0    7    0 field1        00 r[7]='field1'
REG[7] =   t6[field1](8)
  20 String8          0    8    0 field1        00 r[8]='field1'
REG[8] =   t6[field1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:0
  22 String8          0   10    0 CREATE VIEW field1 AS 
    WITH RECURSIVE t3(field1,y,z) AS (
        SELECT c0,c0,NULL FROM t0
        UNION
        SELECT field1,y,NULL FROM t3, t0
    )
  SELECT * FROM t3 AS xyz 00 r[10]='CREATE VIEW field1 AS 
    WITH RECURSIVE t3(field1,y,z) AS (
        SELECT c0,c0,NULL FROM
REG[10] =   t182[CREATE VIEW fie](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s205[07151919088279766965776669656C64......yviewfield]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s205[07151919088279766965776669656C64......yviewfield]
REG[5] =  i:9
  25 SetCookie        0    1    6               00 
  26 ParseSchema      0    0    0 tbl_name='field1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    6 0             00 usesStmtJournal=0
  16 String8          0    2    0 field1        00 r[2]='field1'
REG[2] =   t6[field1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field1](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field1](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field1](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field1](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[over](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field1](8)
REG[1] =   s4[over](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field1](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field1](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field1](8)
REG[1] =   s1[x](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field1](8)
REG[1] =   s6[field1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s4[view](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s4[view](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s6[field1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:0
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s182[CREATE VIEW fie](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s6[field1](8)
REG[5] =  i:0
REG[6] =   s182[CREATE VIEW fie](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;PRAGMA page_size=2048;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [;SELECT *, '|'
      FROM pragma_foreign_key_check AS v0
      ORDER BY v0."table";]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    0    6 0             01 usesStmtJournal=0
  28 Goto             0    1    0               00 
   1 SorterOpen       1    7    0 k(1,B)        00 
   2 VOpen            0    0    0 vtab:1BF5B50  00 
   3 Explain          3    0    0 SCAN TABLE pragma_foreign_key_check AS v0 VIRTUAL TABLE INDEX 0: 00 
   4 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   5 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   6 VFilter          0   15    1               00 iplan=r[1] zplan=''
REG[1] =  i:0
SQL: [PRAGMA foreign_key_check]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2   10    7               00 7 columns in r[10]
  17 SorterSort       1   26    0               00 
  26 Halt             0    0    0               00 
SQL: [;SELECT * FROM over;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    6 0             01 usesStmtJournal=0
  10 Goto             0    1    0               00 
   1 OpenRead         0    6    0 2             00 root=6 iDb=0; over
   2 Explain          2    0    0 SCAN TABLE over 00 
   3 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [;PRAGMA temp_store = 0;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [DELETE FROM over;]
VDBE Trace:
   0 Init             0    3    0               00 Start at 3
   3 Transaction      0    1    6 0             01 usesStmtJournal=0
   4 Goto             0    1    0               00 
   1 Clear            6    0   -1 over          00 
   2 Halt             0    0    0               00 
SQL: [;SELECT * FROM over;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    6 0             01 usesStmtJournal=0
  10 Goto             0    1    0               00 
   1 OpenRead         0    6    0 2             00 root=6 iDb=0; over
   2 Explain          2    0    0 SCAN TABLE over 00 
   3 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [SELECT hex(substr(preceding, -1, 1)) FROM over
    
;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    6 0             01 usesStmtJournal=0
  11 Integer         -1    4    0               00 r[4]=-1
REG[4] =  i:-1
  12 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  13 Goto             0    1    0               00 
   1 OpenRead         0    6    0 2             00 root=6 iDb=0; over
   2 Explain          2    0    0 SCAN TABLE over 00 
   3 Rewind           0    9    0               00 
   9 Halt             0    0    0               00 
SQL: [;WITH 
  x1 AS (SELECT 10),
  x2 AS (SELECT * FROM x1),
  x3 AS (
    WITH x1 AS (SELECT 11)
    SELECT * FROM x2 UNION ALL SELECT * FROM x2
  )
  SELECT * FROM x3;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 COMPOUND QUERY 00 
   2 Explain          2    1    0 LEFT-MOST SUBQUERY 00 
   3 InitCoroutine    1    9    4               00 x1
   9 Explain          9    2    0 SCAN SUBQUERY 1 00 
  10 InitCoroutine    1    0    4               00 
  11 Yield            1   15    0               00 next row of x1
REG[1] =  i:3
REG[1] =  i:11
   4 Explain          4    2    0 CO-ROUTINE 1  00 
   5 Explain          5    4    0 SCAN CONSTANT ROW 00 
   6 Integer         10    2    0               00 r[2]=10
REG[2] =  i:10
   7 Yield            1    0    0               00 
REG[1] =  i:11
REG[1] =  i:7
  12 Copy             2    3    0               00 r[3]=r[2]; x1.10
REG[3] =  i:10
  13 ResultRow        3    1    0               00 output=r[3]
REG[3] =  i:10
  14 Goto             0   11    0               00 
  11 Yield            1   15    0               00 next row of x1
REG[1] =  i:7
REG[1] =  i:11
   8 EndCoroutine     1    0    0               00 
REG[1] =  i:11
  15 Explain         15    1    0 UNION ALL     00 
  16 InitCoroutine    4   22   17               00 x1
  22 Explain         22   15    0 SCAN SUBQUERY 1 00 
  23 InitCoroutine    4    0   17               00 
  24 Yield            4   28    0               00 next row of x1
REG[4] =  i:16
REG[4] =  i:24
  17 Explain         17   15    0 CO-ROUTINE 1  00 
  18 Explain         18   17    0 SCAN CONSTANT ROW 00 
  19 Integer         10    5    0               00 r[5]=10
REG[5] =  i:10
  20 Yield            4    0    0               00 
REG[4] =  i:24
REG[4] =  i:20
  25 Copy             5    3    0               00 r[3]=r[5]; x1.10
REG[3] =  i:10
  26 ResultRow        3    1    0               00 output=r[3]
REG[3] =  i:10
  27 Goto             0   24    0               00 
  24 Yield            4   28    0               00 next row of x1
REG[4] =  i:20
REG[4] =  i:24
  21 EndCoroutine     4    0    0               00 
REG[4] =  i:24
  28 Halt             0    0    0               00 
SQL: [DELETE FROM over WHERE following = 'c' 
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    1    6 0             01 usesStmtJournal=0
  10 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    6    0 2             00 root=6 iDb=0; over
   3 Explain          3    0    0 SEARCH TABLE over USING INTEGER PRIMARY KEY (rowid=?) 00 
   4 String8          0    2    0 c             00 r[2]='c'
REG[2] =   t1[c](8)
   5 SeekRowid        0    8    2               00 intkey=r[2]
REG[2] =   t1[c](8)
   8 Halt             0    0    0               00 
SQL: [
  
;;SELECT * FROM over;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    6 0             01 usesStmtJournal=0
  10 Goto             0    1    0               00 
   1 OpenRead         0    6    0 2             00 root=6 iDb=0; over
   2 Explain          2    0    0 SCAN TABLE over 00 
   3 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [;PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0  173  170               00 Start at 173
 173 Transaction      0    0    6 0             01 usesStmtJournal=0
 174 Transaction      1    0    0 0             01 usesStmtJournal=0
 175 String8          0   14    0 abc%          00 r[14]='abc%'
REG[14] =   t4[abc%](8)
 176 Goto             0    1    0               00 
   1 Integer         99    1    0               00 r[1]=99
REG[1] =  i:99
   2 IntegrityCk      2   10    1 [0,9,6,7,2,8,5,4,3,1] 00 
   3 IsNull           2    9    0               00 if r[2]==NULL goto 9
REG[2] =  NULL
   9 OpenRead         1    9    0 3             00 root=9 iDb=0; x
  10 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  11 Rewind           1   15    0               00 
  15 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  16 OpenRead         1    6    0 2             00 root=6 iDb=0; over
  17 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  18 Rewind           1   22    0               00 
  22 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  23 OpenRead         1    7    0 2             00 root=7 iDb=0; sqlite_sequence
  24 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  25 Rewind           1   29    0               00 
  29 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  30 OpenRead         1    2    0 1             00 root=2 iDb=0; t0
  31 OpenRead         2    8    0 k(3,,,)       00 root=8 iDb=0; t1
  32 OpenRead         3    5    0 k(2,,)        00 root=5 iDb=0; v0
  33 OpenRead         4    4    0 k(3,,,)       00 root=4 iDb=0; sqlite_autoindex_t0_2
  34 OpenRead         5    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t0_1
  35 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  36 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  37 Integer          0    9    0               00 r[9]=0
REG[9] =  i:0
  38 Integer          0   10    0               00 r[10]=0
REG[10] =  i:0
  39 Integer          0   11    0               00 r[11]=0
REG[11] =  i:0
  40 Rewind           1  115    0               00 
  41 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  42 Column           1    0    3               80 r[3]=
REG[3] =  i:2
  43 Column           1    0   15               00 r[15]=t0.c0
REG[15] =  i:2
  44 PureFunc0        1   14   13 like(2)       02 
REG[14] =   t4[abc%](8)
REG[15] =  i:2
REG[13] =  i:0
  45 If              13   60    1               00 
REG[13] =  i:0
  46 Column           1    0   16               00 r[16]=t0.c0
REG[16] =  i:2
  47 Column           1    0   17               00 r[17]=t0.c0
REG[17] =  i:2
  48 Rowid            1   18    0               00 r[18]=rowid
REG[18] =  i:2
  49 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  50 Found            2   60   16 3             00 key=r[16..18]
REG[16] =  i:2
REG[17] =  i:2
REG[18] =  i:2
  60 Column           1    0   13               00 r[13]=t0.c0
REG[13] =  i:2
  61 Column           1    0   19               00 r[19]=t0.c0
REG[19] =  i:2
  62 Add             19   13   16               00 r[16]=r[19]+r[13]
REG[19] =  i:2
REG[13] =  i:2
REG[16] =  i:4
  63 Rowid            1   17    0               00 r[17]=rowid
REG[17] =  i:2
  64 AddImm           9    1    0               00 r[9]=r[9]+1
REG[9] =  i:0
  65 Found            3   75   16 2             00 key=r[16..17]
REG[16] =  i:4
REG[17] =  i:2
  75 Column           1    0   20               00 r[20]=t0.c0
REG[20] =  i:2
  76 Column           1    0   21               00 r[21]=t0.c0
REG[21] =  i:2
  77 Rowid            1   22    0               00 r[22]=rowid
REG[22] =  i:2
  78 AddImm          10    1    0               00 r[10]=r[10]+1
REG[10] =  i:0
  79 Found            4   89   20 3             00 key=r[20..22]
REG[20] =  i:2
REG[21] =  i:2
REG[22] =  i:2
  89 IsNull          20   96    0               00 if r[20]==NULL goto 96
REG[20] =  i:2
  90 IsNull          21   96    0               00 if r[21]==NULL goto 96
REG[21] =  i:2
  91 Next             4   93    0               00 
  92 Goto             0   96    0               00 
  96 Rowid            1   21    0               00 r[21]=rowid
REG[21] =  i:2
  97 AddImm          11    1    0               00 r[11]=r[11]+1
REG[11] =  i:0
  98 Found            5  108   20 2             00 key=r[20..21]
REG[20] =  i:2
REG[21] =  i:2
 108 IsNull          20  114    0               00 if r[20]==NULL goto 114
REG[20] =  i:2
 109 Next             5  111    0               00 
 110 Goto             0  114    0               00 
 114 Next             1   41    0               00 
 115 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
 116 Count            2    3    0               00 r[3]=count()
REG[3] =  i:1
 117 Eq               8  123    3               90 if r[3]==r[8] goto 123
REG[8] =  i:1
REG[3] =  i:1
 123 Count            3    3    0               00 r[3]=count()
REG[3] =  i:1
 124 Eq               9  130    3               90 if r[3]==r[9] goto 130
REG[9] =  i:1
REG[3] =  i:1
 130 Count            4    3    0               00 r[3]=count()
REG[3] =  i:1
 131 Eq              10  137    3               90 if r[3]==r[10] goto 137
REG[10] =  i:1
REG[3] =  i:1
 137 Count            5    3    0               00 r[3]=count()
REG[3] =  i:1
 138 Eq              11  144    3               90 if r[3]==r[11] goto 144
REG[11] =  i:1
REG[3] =  i:1
 144 OpenRead         1    1    0 5             00 root=1 iDb=0; sqlite_master
 145 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
 146 Rewind           1  150    0               00 
 147 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
 148 Column           1    4    3               80 r[3]=
REG[3] =   s97[CREATE TABLE t0](8)
 149 Next             1  147    0               00 
 147 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
 148 Column           1    4    3               80 r[3]=
REG[3] =  NULL
 149 Next             1  147    0               00 
 147 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:2
 148 Column           1    4    3               80 r[3]=
REG[3] =  NULL
 149 Next             1  147    0               00 
 147 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:3
 148 Column           1    4    3               80 r[3]=
REG[3] =   s28[CREATE INDEX v0](8)
 149 Next             1  147    0               00 
 147 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:4
 148 Column           1    4    3               80 r[3]=
REG[3] =   s78[CREATE TABLE ov](8)
 149 Next             1  147    0               00 
 147 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:5
 148 Column           1    4    3               80 r[3]=
REG[3] =   s38[CREATE TABLE sq](8)
 149 Next             1  147    0               00 
 147 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:6
 148 Column           1    4    3               80 r[3]=
REG[3] =   s53[CREATE INDEX t1](8)
 149 Next             1  147    0               00 
 147 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:7
 148 Column           1    4    3               80 r[3]=
REG[3] =   s44[CREATE TABLE x(](8)
 149 Next             1  147    0               00 
 147 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:8
 148 Column           1    4    3               80 r[3]=
REG[3] =   s182[CREATE VIEW fie](8)
 149 Next             1  147    0               00 
 150 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
 151 IntegrityCk      2    1    1 [1]           01 
 152 IsNull           2  158    0               00 if r[2]==NULL goto 158
REG[2] =  NULL
 158 OpenRead         1    1    1 5             00 root=1 iDb=1; sqlite_temp_master
 159 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
 160 Rewind           1  164    0               00 
 164 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
 165 AddImm           1  -99    0               00 r[1]=r[1]+-99
REG[1] =  i:99
 166 IfNotZero        1  169    0               00 if r[1]!=0 then r[1]--, goto 169
REG[1] =  i:0
 167 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
 168 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
 169 Halt             0    0    0               00 
SQL: [;CREATE INDEX test003 ON t0(c0) WHERE c0 IS NOT NULL;]
VDBE Trace:
   0 Init             0   35    0               00 Start at 35
  35 Transaction      0    1    6 0             01 usesStmtJournal=0
  36 Goto             0    1    0               00 
   1 Noop             0   34    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:10
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:10
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 test003       00 r[4]='test003'
REG[4] =   t7[test003](8)
   7 String8          0    5    0 t0            00 r[5]='t0'
REG[5] =   t2[t0](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:10
   9 String8          0    7    0 CREATE INDEX test003 ON t0(c0) WHERE c0 IS NOT NULL 00 r[7]='CREATE INDEX test003 ON t0(c0) WHERE c0 IS NOT NULL'
REG[7] =   t51[CREATE INDEX te](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s72[06171B110173696E6465787465737430.....sindextest0]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s72[06171B110173696E6465787465737430.....sindextest0]
REG[2] =  i:10
  12 SorterOpen       3    0    1 k(2,,)        00 
  13 OpenRead         1    2    0 1             00 root=2 iDb=0; t0
  14 Rewind           1   22    0               00 
  15 Column           1    0   10               00 r[10]=t0.c0
REG[10] =  i:2
  16 IsNull          10   21    0               00 if r[10]==NULL goto 21
REG[10] =  i:2
  17 Column           1    0   11               00 r[11]=t0.c0
REG[11] =  i:2
  18 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:2
  19 MakeRecord      11    2    9               00 r[9]=mkrec(r[11..12])
REG[9] =  s5[0301010202.....]
  20 SorterInsert     3    9    0               00 key=r[9]
REG[9] =  s5[0301010202.....]
  21 Next             1   15    0               00 
  22 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  23 SorterSort       3   28    0               00 
  24 SorterData       3    9    2               00 r[9]=data
  25 SeekEnd          2    0    0               00 
  26 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s5[0301010202.....]
  27 SorterNext       3   24    0               00 
  28 Close            1    0    0               00 
  29 Close            2    0    0               00 
  30 Close            3    0    0               00 
  31 SetCookie        0    1    7               00 
  32 ParseSchema      0    0    0 name='test003' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    7 0             00 usesStmtJournal=0
  16 String8          0    2    0 test003       00 r[2]='test003'
REG[2] =   t7[test003](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test003](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s21[sqlite_autoinde](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test003](8)
REG[1] =   s21[sqlite_autoinde](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s21[sqlite_autoinde](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test003](8)
REG[1] =   s21[sqlite_autoinde](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test003](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[over](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test003](8)
REG[1] =   s4[over](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test003](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test003](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test003](8)
REG[1] =   s1[x](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s6[field1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test003](8)
REG[1] =   s6[field1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[test003](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test003](8)
REG[1] =   s7[test003](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s7[test003](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:10
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s51[CREATE INDEX te](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s7[test003](8)
REG[5] =  i:10
REG[6] =   s51[CREATE INDEX te](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  33 Expire           0    1    0               00 
  34 Halt             0    0    0               00 
SQL: [;
;CREATE TABLE field2(test004,field3);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    7 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:11
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:11
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:11
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:11
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:11
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:11
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 field2        00 r[7]='field2'
REG[7] =   t6[field2](8)
  20 String8          0    8    0 field2        00 r[8]='field2'
REG[8] =   t6[field2](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:11
  22 String8          0   10    0 CREATE TABLE field2(test004,field3) 00 r[10]='CREATE TABLE field2(test004,field3)'
REG[10] =   t35[CREATE TABLE fi](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s59[0617191901537461626C656669656C64.....Stablefield]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s59[0617191901537461626C656669656C64.....Stablefield]
REG[5] =  i:11
  25 SetCookie        0    1    8               00 
  26 ParseSchema      0    0    0 tbl_name='field2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    8 0             00 usesStmtJournal=0
  16 String8          0    2    0 field2        00 r[2]='field2'
REG[2] =   t6[field2](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field2](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field2](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field2](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field2](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[over](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field2](8)
REG[1] =   s4[over](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field2](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field2](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field2](8)
REG[1] =   s1[x](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field2](8)
REG[1] =   s6[field1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field2](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field2](8)
REG[1] =   s6[field2](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s6[field2](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:11
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s35[CREATE TABLE fi](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s6[field2](8)
REG[5] =  i:11
REG[6] =   s35[CREATE TABLE fi](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [VACUUM;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Vacuum           0    0    0               00 
SQL: [BEGIN
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
SQL: [;/* ^^^^^-- ignored */
  ANALYZE;]
VDBE Trace:
   0 Init             0  166    0               00 Start at 166
 166 Transaction      0    1    8 0             01 usesStmtJournal=0
 167 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:12
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:12
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:12
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        3    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        3   17    1               00 intkey=r[1]
REG[1] =  i:12
  16 Rowid            3    5    0               00 r[5]=rowid
REG[5] =  i:12
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:12
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 sqlite_stat1  00 r[7]='sqlite_stat1'
REG[7] =   t12[sqlite_stat1](8)
  20 String8          0    8    0 sqlite_stat1  00 r[8]='sqlite_stat1'
REG[8] =   t12[sqlite_stat1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:12
  22 String8          0   10    0 CREATE TABLE sqlite_stat1(tbl,idx,stat) 00 r[10]='CREATE TABLE sqlite_stat1(tbl,idx,stat)'
REG[10] =   t39[CREATE TABLE sq](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit]
  24 Insert           3   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit]
REG[5] =  i:12
  25 SetCookie        0    1    9               00 
  26 ParseSchema      0    0    0 tbl_name='sqlite_stat1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    9 0             00 usesStmtJournal=0
  16 String8          0    2    0 sqlite_stat1  00 r[2]='sqlite_stat1'
REG[2] =   t12[sqlite_stat1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[over](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s4[over](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s1[x](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s6[field1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s6[field2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s12[sqlite_stat1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s12[sqlite_stat1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:12
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s39[CREATE TABLE sq](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s12[sqlite_stat1](8)
REG[5] =  i:12
REG[6] =   s39[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 OpenWrite        0    2    0 3             10 root=2 iDb=0; sqlite_stat1
  28 OpenRead         4   11    0 2             00 root=11 iDb=0; field2
  29 String8          0   16    0 field2        00 r[16]='field2'; field2
REG[16] =   t6[field2](8)
  30 Count            4   18    0               00 r[18]=count()
REG[18] =  i:0
  31 IfNot           18   36    0               00 
REG[18] =  i:0
  36 OpenRead         4    9    0 3             00 root=9 iDb=0; x
  37 String8          0   16    0 x             00 r[16]='x'; x
REG[16] =   t1[x](8)
  38 Count            4   18    0               00 r[18]=count()
REG[18] =  i:0
  39 IfNot           18   44    0               00 
REG[18] =  i:0
  44 OpenRead         4    6    0 2             00 root=6 iDb=0; over
  45 String8          0   16    0 over          00 r[16]='over'; over
REG[16] =   t4[over](8)
  46 Count            4   18    0               00 r[18]=count()
REG[18] =  i:0
  47 IfNot           18   52    0               00 
REG[18] =  i:0
  52 OpenRead         4    2    0 1             00 root=2 iDb=0; t0
  53 String8          0   16    0 t0            00 r[16]='t0'
REG[16] =   t2[t0](8)
  54 String8          0   17    0 test003       00 r[17]='test003'; Analysis for t0.test003
REG[17] =   t7[test003](8)
  55 OpenRead         5   10    0 k(2,,)        00 root=10 iDb=0; test003
  56 Integer          2   14    0               00 r[14]=2
REG[14] =  i:2
  57 Integer          1   15    0               00 r[15]=1
REG[15] =  i:1
  58 Function0        0   14   13 stat_init(2)  02 r[13]=func(r[14..15])
REG[14] =  i:2
REG[15] =  i:1
REG[13] =  z88[00000000000000000200000001000000................]
  59 Rewind           5   74    0               00 
  60 Integer          0   14    0               00 r[14]=0
REG[14] =  i:0
  61 Goto             0   67    0               00 
  67 Column           5    0   19               00 r[19]=
REG[19] =  i:2
  68 Function0        1   13   15 stat_push(2)  02 r[15]=func(r[13..14])
REG[13] =  z88[00000000000000000200000001000000................]
REG[14] =  i:0
REG[15] =  NULL
  69 Next             5   62    0               00 
  70 Function0        0   13   18 stat_get(1)   01 r[18]=func(r[13])
REG[13] =  z88[01000000000000000200000001000000................]
REG[18] =   z3[1 1](8)
  71 MakeRecord      16    3   15 BBB           00 r[15]=mkrec(r[16..18])
REG[15] =  s16[04111B13743074657374303033312031....t0test0031 1]
  72 NewRowid         0   12    0               00 r[12]=rowid
REG[12] =  i:1
  73 Insert           0   15   12               08 intkey=r[12] data=r[15]
REG[15] =  s16[04111B13743074657374303033312031....t0test0031 1]
REG[12] =  i:1
  74 String8          0   17    0 t1            00 r[17]='t1'; Analysis for t0.t1
REG[17] =   t2[t1](8)
  75 OpenRead         5    8    0 k(3,,,)       00 root=8 iDb=0; t1
  76 Integer          3   14    0               00 r[14]=3
REG[14] =  i:3
  77 Integer          2   15    0               00 r[15]=2
REG[15] =  i:2
  78 Function0        0   14   13 stat_init(2)  02 r[13]=func(r[14..15])
REG[14] =  i:3
REG[15] =  i:2
REG[13] =  z88[00000000000000000300000002000000................]
  79 Rewind           5   98    0               00 
  80 Integer          0   14    0               00 r[14]=0
REG[14] =  i:0
  81 Goto             0   90    0               00 
  90 Column           5    0   19               00 r[19]=
REG[19] =  i:2
  91 Column           5    1   20               00 r[20]=
REG[20] =  i:2
  92 Function0        1   13   15 stat_push(2)  02 r[15]=func(r[13..14])
REG[13] =  z88[00000000000000000300000002000000................]
REG[14] =  i:0
REG[15] =  NULL
  93 Next             5   82    0               00 
  94 Function0        0   13   18 stat_get(1)   01 r[18]=func(r[13])
REG[13] =  z88[01000000000000000300000002000000................]
REG[18] =   z5[1 1 1](8)
  95 MakeRecord      16    3   15 BBB           00 r[15]=mkrec(r[16..18])
REG[15] =  s13[04111117743074313120312031....t0t11 1 1]
  96 NewRowid         0   12    0               00 r[12]=rowid
REG[12] =  i:2
  97 Insert           0   15   12               08 intkey=r[12] data=r[15]
REG[15] =  s13[04111117743074313120312031....t0t11 1 1]
REG[12] =  i:2
  98 String8          0   17    0 v0            00 r[17]='v0'; Analysis for t0.v0
REG[17] =   t2[v0](8)
  99 OpenRead         5    5    0 k(2,,)        00 root=5 iDb=0; v0
 100 Integer          2   14    0               00 r[14]=2
REG[14] =  i:2
 101 Integer          1   15    0               00 r[15]=1
REG[15] =  i:1
 102 Function0        0   14   13 stat_init(2)  02 r[13]=func(r[14..15])
REG[14] =  i:2
REG[15] =  i:1
REG[13] =  z88[00000000000000000200000001000000................]
 103 Rewind           5  118    0               00 
 104 Integer          0   14    0               00 r[14]=0
REG[14] =  i:0
 105 Goto             0  111    0               00 
 111 Column           5    0   19               00 r[19]=
REG[19] =  i:4
 112 Function0        1   13   15 stat_push(2)  02 r[15]=func(r[13..14])
REG[13] =  z88[00000000000000000200000001000000................]
REG[14] =  i:0
REG[15] =  NULL
 113 Next             5  106    0               00 
 114 Function0        0   13   18 stat_get(1)   01 r[18]=func(r[13])
REG[13] =  z88[01000000000000000200000001000000................]
REG[18] =   z3[1 1](8)
 115 MakeRecord      16    3   15 BBB           00 r[15]=mkrec(r[16..18])
REG[15] =  s11[0411111374307630312031....t0v01 1]
 116 NewRowid         0   12    0               00 r[12]=rowid
REG[12] =  i:3
 117 Insert           0   15   12               08 intkey=r[12] data=r[15]
REG[15] =  s11[0411111374307630312031....t0v01 1]
REG[12] =  i:3
 118 String8          0   17    0 sqlite_autoindex_t0_2 00 r[17]='sqlite_autoindex_t0_2'; Analysis for t0.sqlite_autoindex_t0_2
REG[17] =   t21[sqlite_autoinde](8)
 119 OpenRead         5    4    0 k(3,,,)       00 root=4 iDb=0; sqlite_autoindex_t0_2
 120 Integer          3   14    0               00 r[14]=3
REG[14] =  i:3
 121 Integer          2   15    0               00 r[15]=2
REG[15] =  i:2
 122 Function0        0   14   13 stat_init(2)  02 r[13]=func(r[14..15])
REG[14] =  i:3
REG[15] =  i:2
REG[13] =  z88[00000000000000000300000002000000................]
 123 Rewind           5  142    0               00 
 124 Integer          0   14    0               00 r[14]=0
REG[14] =  i:0
 125 Goto             0  134    0               00 
 134 Column           5    0   19               00 r[19]=
REG[19] =  i:2
 135 Column           5    1   20               00 r[20]=
REG[20] =  i:2
 136 Function0        1   13   15 stat_push(2)  02 r[15]=func(r[13..14])
REG[13] =  z88[00000000000000000300000002000000................]
REG[14] =  i:0
REG[15] =  NULL
 137 Next             5  126    0               00 
 138 Function0        0   13   18 stat_get(1)   01 r[18]=func(r[13])
REG[13] =  z88[01000000000000000300000002000000................]
REG[18] =   z5[1 1 1](8)
 139 MakeRecord      16    3   15 BBB           00 r[15]=mkrec(r[16..18])
REG[15] =  s32[04113717743073716C6974655F617574..7.t0sqlite_aut]
 140 NewRowid         0   12    0               00 r[12]=rowid
REG[12] =  i:4
 141 Insert           0   15   12               08 intkey=r[12] data=r[15]
REG[15] =  s32[04113717743073716C6974655F617574..7.t0sqlite_aut]
REG[12] =  i:4
 142 String8          0   17    0 sqlite_autoindex_t0_1 00 r[17]='sqlite_autoindex_t0_1'; Analysis for t0.sqlite_autoindex_t0_1
REG[17] =   t21[sqlite_autoinde](8)
 143 OpenRead         5    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t0_1
 144 Integer          2   14    0               00 r[14]=2
REG[14] =  i:2
 145 Integer          1   15    0               00 r[15]=1
REG[15] =  i:1
 146 Function0        0   14   13 stat_init(2)  02 r[13]=func(r[14..15])
REG[14] =  i:2
REG[15] =  i:1
REG[13] =  z88[00000000000000000200000001000000................]
 147 Rewind           5  163    0               00 
 148 Integer          0   14    0               00 r[14]=0
REG[14] =  i:0
 149 Goto             0  156    0               00 
 156 Column           5    0   19               00 r[19]=
REG[19] =  i:2
 157 Function0        1   13   15 stat_push(2)  02 r[15]=func(r[13..14])
REG[13] =  z88[00000000000000000200000001000000................]
REG[14] =  i:0
REG[15] =  NULL
 158 Next             5  150    0               00 
 159 Function0        0   13   18 stat_get(1)   01 r[18]=func(r[13])
REG[13] =  z88[01000000000000000200000001000000................]
REG[18] =   z3[1 1](8)
 160 MakeRecord      16    3   15 BBB           00 r[15]=mkrec(r[16..18])
REG[15] =  s30[04113713743073716C6974655F617574..7.t0sqlite_aut]
 161 NewRowid         0   12    0               00 r[12]=rowid
REG[12] =  i:5
 162 Insert           0   15   12               08 intkey=r[12] data=r[15]
REG[15] =  s30[04113713743073716C6974655F617574..7.t0sqlite_aut]
REG[12] =  i:5
 163 LoadAnalysis     0    0    0               00 
SQL: [SELECT tbl,idx,stat FROM 'main'.sqlite_stat1]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    9 0             01 usesStmtJournal=0
  11 Goto             0    1    0               00 
   1 OpenRead         0   12    0 3             00 root=12 iDb=0; sqlite_stat1
   2 Explain          2    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_stat1.tbl
REG[1] =   s2[t0](8)
   5 Column           0    1    2               00 r[2]=sqlite_stat1.idx
REG[2] =   s7[test003](8)
   6 Column           0    2    3               00 r[3]=sqlite_stat1.stat
REG[3] =   s3[1 1](8)
   7 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t0](8)
REG[2] =   s7[test003](8)
REG[3] =   s3[1 1](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_stat1.tbl
REG[1] =   s2[t0](8)
   5 Column           0    1    2               00 r[2]=sqlite_stat1.idx
REG[2] =   s2[t1](8)
   6 Column           0    2    3               00 r[3]=sqlite_stat1.stat
REG[3] =   s5[1 1 1](8)
   7 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t0](8)
REG[2] =   s2[t1](8)
REG[3] =   s5[1 1 1](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_stat1.tbl
REG[1] =   s2[t0](8)
   5 Column           0    1    2               00 r[2]=sqlite_stat1.idx
REG[2] =   s2[v0](8)
   6 Column           0    2    3               00 r[3]=sqlite_stat1.stat
REG[3] =   s3[1 1](8)
   7 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t0](8)
REG[2] =   s2[v0](8)
REG[3] =   s3[1 1](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_stat1.tbl
REG[1] =   s2[t0](8)
   5 Column           0    1    2               00 r[2]=sqlite_stat1.idx
REG[2] =   s21[sqlite_autoinde](8)
   6 Column           0    2    3               00 r[3]=sqlite_stat1.stat
REG[3] =   s5[1 1 1](8)
   7 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t0](8)
REG[2] =   s21[sqlite_autoinde](8)
REG[3] =   s5[1 1 1](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_stat1.tbl
REG[1] =   s2[t0](8)
   5 Column           0    1    2               00 r[2]=sqlite_stat1.idx
REG[2] =   s21[sqlite_autoinde](8)
   6 Column           0    2    3               00 r[3]=sqlite_stat1.stat
REG[3] =   s3[1 1](8)
   7 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t0](8)
REG[2] =   s21[sqlite_autoinde](8)
REG[3] =   s3[1 1](8)
   8 Next             0    4    0               01 
   9 Halt             0    0    0               00 
 164 Expire           0    0    0               00 
 165 Halt             0    0    0               00 
SQL: [;
;INSERT INTO t0(c0) VALUES(2);]
VDBE Trace:
   0 Init             0   74    0               00 Start at 74
  74 Transaction      0    1    9 0             01 usesStmtJournal=0
  75 String8          0   21    0 abc%          00 r[21]='abc%'
REG[21] =   t4[abc%](8)
  76 String8          0   26    0 abc%          00 r[26]='abc%'
REG[26] =   t4[abc%](8)
  77 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 1             00 root=2 iDb=0; t0
   2 OpenWrite        1   10    0 k(2,,)        00 root=10 iDb=0; test003
   3 OpenWrite        2    8    0 k(3,,,)       00 root=8 iDb=0; t1
   4 OpenWrite        3    5    0 k(2,,)        00 root=5 iDb=0; v0
   5 OpenWrite        4    4    0 k(3,,,)       00 root=4 iDb=0; sqlite_autoindex_t0_2
   6 OpenWrite        5    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t0_1
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
   9 Noop             0    0    0               00 uniqueness check for test003
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 IsNull           2   15    0               00 if r[2]==NULL goto 15
REG[2] =  i:2
  12 SCopy            2    4    0               00 r[4]=r[2]; c0
REG[4] =  i:2
  13 IntCopy          1    5    0               00 r[5]=r[1]; rowid
REG[5] =  i:3
  14 MakeRecord       4    2    3               00 r[3]=mkrec(r[4..5]); for test003
REG[3] =  s5[0301010203.....]
  15 Noop             0    0    0               00 uniqueness check for t1
  16 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  17 Copy             2   22    0               00 r[22]=r[2]
REG[22] =  i:2
  18 PureFunc0        1   21   20 like(2)       02 
REG[21] =   t4[abc%](8)
REG[22] =  i:2
REG[20] =  i:0
  19 If              20   24    1               00 
REG[20] =  i:0
  20 SCopy            2    7    0               00 r[7]=r[2]; c0
REG[7] =  i:2
  21 SCopy            2    8    0               00 r[8]=r[2]; c0
REG[8] =  i:2
  22 IntCopy          1    9    0               00 r[9]=r[1]; rowid
REG[9] =  i:3
  23 MakeRecord       7    3    6               00 r[6]=mkrec(r[7..9]); for t1
REG[6] =  s7[04010101020203.......]
  24 Noop             0    0    0               00 uniqueness check for v0
  25 Add              2    2   11               00 r[11]=r[2]+r[2]; v0 column 0
REG[2] =  i:2
REG[2] =  i:2
REG[11] =  i:4
  26 IntCopy          1   12    0               00 r[12]=r[1]; rowid
REG[12] =  i:3
  27 MakeRecord      11    2   10               00 r[10]=mkrec(r[11..12]); for v0
REG[10] =  s5[0301010403.....]
  28 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t0_2
  29 SCopy            2   14    0               00 r[14]=r[2]; c0
REG[14] =  i:2
  30 SCopy            2   15    0               00 r[15]=r[2]; c0
REG[15] =  i:2
  31 IntCopy          1   16    0               00 r[16]=r[1]; rowid
REG[16] =  i:3
  32 MakeRecord      14    3   13               00 r[13]=mkrec(r[14..16]); for sqlite_autoindex_t0_2
REG[13] =  s7[04010101020203.......]
  33 NoConflict       4   57   14 2             00 key=r[14..15]
REG[14] =  i:2
REG[15] =  i:2
  34 IdxRowid         4   20    0               00 r[20]=rowid
REG[20] =  i:2
  35 NotExists        0   57   20 1             00 intkey=r[20]
REG[20] =  i:2
  36 Column           0    0   23               00 r[23]=t0.c0
REG[23] =  i:2
  37 IsNull          23   41    0               00 if r[23]==NULL goto 41
REG[23] =  i:2
  38 Column           0    0   24               00 r[24]=t0.c0
REG[24] =  i:2
  39 Rowid            0   25    0               00 r[25]=rowid
REG[25] =  i:2
  40 IdxDelete        1   24    2               00 key=r[24..25]
  41 Column           0    0   27               00 r[27]=t0.c0
REG[27] =  i:2
  42 PureFunc0        1   26   23 like(2)       02 
REG[26] =   t4[abc%](8)
REG[27] =  i:2
REG[23] =  i:0
  43 If              23   48    1               00 
REG[23] =  i:0
  44 Column           0    0   28               00 r[28]=t0.c0
REG[28] =  i:2
  45 Column           0    0   29               00 r[29]=t0.c0
REG[29] =  i:2
  46 Rowid            0   30    0               00 r[30]=rowid
REG[30] =  i:2
  47 IdxDelete        2   28    3               00 key=r[28..30]
  48 Column           0    0   23               00 r[23]=t0.c0
REG[23] =  i:2
  49 Column           0    0   31               00 r[31]=t0.c0
REG[31] =  i:2
  50 Add             31   23   28               00 r[28]=r[31]+r[23]
REG[31] =  i:2
REG[23] =  i:2
REG[28] =  i:4
  51 Rowid            0   29    0               00 r[29]=rowid
REG[29] =  i:2
  52 IdxDelete        3   28    2               00 key=r[28..29]
  53 Column           0    0   28               00 r[28]=t0.c0
REG[28] =  i:2
  54 IdxDelete        5   28    2               00 key=r[28..29]
  55 Delete           0    0    0 t0            00 
  56 Delete           4    0    0               00 
  57 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t0_1
  58 SCopy            2   18    0               00 r[18]=r[2]; c0
REG[18] =  i:2
  59 IntCopy          1   19    0               00 r[19]=r[1]; rowid
REG[19] =  i:3
  60 MakeRecord      18    2   17               00 r[17]=mkrec(r[18..19]); for sqlite_autoindex_t0_1
REG[17] =  s5[0301010203.....]
  61 Abortable        0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f6fd5cc3859 in __GI_abort () at abort.c:79
#2  0x00007f6fd5cc3729 in __assert_fail_base (fmt=0x7f6fd5e59588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x213d8b "p->nWrite==0 || p->usesStmtJournal", file=0x22873d "sqlite3.c", line=77006, 
    function=<optimized out>) at assert.c:92
#3  0x00007f6fd5cd4fd6 in __GI___assert_fail (assertion=0x213d8b "p->nWrite==0 || p->usesStmtJournal", file=0x22873d "sqlite3.c", line=77006, function=0x227155 "void sqlite3VdbeAssertAbortable(Vdbe *)") at assert.c:101
#4  0x00000000003e133c in sqlite3VdbeAssertAbortable (p=0x1bd85b0) at sqlite3.c:77006
#5  0x00000000003e01da in sqlite3VdbeExec (p=0x1bd85b0) at sqlite3.c:91079
#6  0x0000000000411104 in sqlite3Step (p=0x1bd85b0) at sqlite3.c:81930
#7  0x000000000029128d in sqlite3_step (pStmt=0x1bd85b0) at sqlite3.c:81995
#8  0x00000000002570b9 in main (argc=1, argv=0x7ffc79246068) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 60498] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
