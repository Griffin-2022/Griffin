GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000229,sig:06,src:022082+020288,time:3530898,execs:599390,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
parser: [[[;CREATE TABLE over(following int not null, preceding text(300) not null, constraint PK_GLOBALSTRINGPROPERTIES primary key (following));;DELETE FROM t0 WHERE rowid>202;;VACUUM;;CREATE TABLE t1(last_field text(36) not null, x text(50) not null, test002 text(50) null, field1 text(50) null, test003 int null, field2 text(50) null, test004 int null, field3 text null, test005 text(1) null, field4 text null, test001 int not null, constraint PK_LSBI primary key (last_field));;CREATE VIEW test006 as 
    
   
   		select
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as ISSUESETTINGS_REVISIONNUM,
    			t0.c0 as ISSUESETTINGS_LASTMODIFIEDDATE,
    			t0.c0 as ISSUESETTINGS_LASTMODIFIEDBYID,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as ENTERPRISEDATA_REVISIONNUM,
    			t0.c0 as ENTERPRISEDATA_CREATIONDATE,
    			t0.c0 as ENTERPRISEDATA_AUTHORID,
    			t0.c0 as ENTERPRISEDATA_LASTMODIFIEDDATE,
    			t0.c0 as ENTERPRISEDATA_LASTMODIFIEDBYID,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0
    		from
    			t0 
    			join t0 on t0.c0 = t0.c0
    			left outer join t0 on t0.c0 = t0.c0;;CREATE INDEX field5 on t0 (c0, c0);;CREATE INDEX test007 on t0 (c0, c0);;CREATE INDEX field6 ON t0(v0);;CREATE VIEW test008 AS 
    WITH RECURSIVE t3(test008,y,z) AS (
        SELECT v0,v0,NULL FROM t0
        UNION
        SELECT test008,y,NULL FROM t3, t0
    )
  SELECT * FROM t3 AS xyz;;CREATE INDEX field7 on t0 (c0);;CREATE INDEX test009 on t0 (c0, c0);;DELETE FROM t1 WHERE rowid IN (10,11,12) ;;
;DROP TABLE t1;;UPDATE t0 SET c0=zeroblob(900) WHERE rowid BETWEEN 100 AND 110;;CREATE TABLE field8(test010 TEXT, CHECK(test010 BETWEEN 0 AND +test010));;SELECT count(*) FROM field8;;INSERT INTO field8(test010) VALUES(NULL),('xyz'),(5),(x'303132'),(4.75);;CREATE TABLE field9(test011 TEXT, CHECK(test011 BETWEEN +test011 AND 999999));;SELECT quote(following) FROM over ORDER BY rowid;;SELECT quote(following) FROM over ORDER BY rowid;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'CREATE' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[ecmd CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 1.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[ecmd createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 1.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[ecmd create_table LP]
parser: Input 'FOLLOWING' in state 139
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', pending reduce 331
parser: Return. Stack=[ecmd create_table LP FOLLOWING]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[ecmd create_table LP nm ID]
parser: Input 'NOT' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Shift 'NOT', go to state 406
parser: Return. Stack=[ecmd create_table LP columnname carglist NOT]
parser: Input 'NULL' in state 406
parser: Shift 'NULL', go to state 335
parser: Return. Stack=[ecmd create_table LP columnname carglist NOT NULL]
parser: Input 'COMMA' in state 335
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 35
parser: Reduce 35 [ccons ::= NOT NULL onconf], go to state 150.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 376.
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[ecmd create_table LP columnlist COMMA]
parser: Input 'PRECEDING' in state 34
parser: FALLBACK PRECEDING => ID
parser: Shift 'PRECEDING', pending reduce 331
parser: Return. Stack=[ecmd create_table LP columnlist COMMA PRECEDING]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm ID]
parser: Input 'LP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Shift 'LP', go to state 138
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm typename LP]
parser: Input 'INTEGER' in state 138
parser: Shift 'INTEGER', pending reduce 359
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm typename LP INTEGER]
parser: Input 'RP' with pending reduce 359
parser: Reduce 359 [plus_num ::= INTEGER|FLOAT], go to state 138.
parser: ... then shift 'plus_num', go to state 413
parser: Shift 'RP', pending reduce 25
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm typename LP plus_num RP]
parser: Input 'NOT' with pending reduce 25
parser: Reduce 25 [typetoken ::= typename LP signed RP], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'NOT', go to state 406
parser: Return. Stack=[ecmd create_table LP columnlist COMMA columnname carglist NOT]
parser: Input 'NULL' in state 406
parser: Shift 'NULL', go to state 335
parser: Return. Stack=[ecmd create_table LP columnlist COMMA columnname carglist NOT NULL]
parser: Input 'COMMA' in state 335
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 35
parser: Reduce 35 [ccons ::= NOT NULL onconf], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[ecmd create_table LP columnlist COMMA]
parser: Input 'CONSTRAINT' in state 34
parser: Shift 'CONSTRAINT', go to state 231
parser: Return. Stack=[ecmd create_table LP columnlist COMMA CONSTRAINT]
parser: Input 'ID' in state 231
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd create_table LP columnlist COMMA CONSTRAINT ID]
parser: Input 'PRIMARY' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 231.
parser: ... then shift 'nm', pending reduce 62
parser: Reduce 62 [tcons ::= CONSTRAINT nm], go to state 34.
parser: ... then shift 'tcons', go to state 278
parser: Reduce 344 [tconscomma ::=].
parser: ... then shift 'tconscomma', go to state 203
parser: Shift 'PRIMARY', go to state 472
parser: Return. Stack=[ecmd create_table LP columnlist COMMA tcons tconscomma PRIMARY]
parser: Input 'KEY' in state 472
parser: Shift 'KEY', go to state 471
parser: Return. Stack=[ecmd create_table LP columnlist COMMA tcons tconscomma PRIMARY KEY]
parser: Input 'LP' in state 471
parser: Shift 'LP', go to state 20
parser: Return. Stack=[ecmd create_table LP columnlist COMMA tcons tconscomma PRIMARY KEY LP]
parser: Input 'FOLLOWING' in state 20
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', go to state 416
parser: Return. Stack=[ecmd create_table LP columnlist COMMA tcons tconscomma PRIMARY KEY LP FOLLOWING]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 20.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 20.
parser: ... then shift 'sortlist', go to state 277
parser: Reduce 42 [autoinc ::=].
parser: ... then shift 'autoinc', go to state 470
parser: Shift 'RP', go to state 328
parser: Return. Stack=[ecmd create_table LP columnlist COMMA tcons tconscomma PRIMARY KEY LP sortlist autoinc RP]
parser: Input 'RP' in state 328
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 63
parser: Reduce 63 [tcons ::= PRIMARY KEY LP sortlist autoinc RP onconf], go to state 203.
parser: [[[INSERT INTO 'main'.sqlite_master VALUES('index','sqlite_autoindex_over_1','over',#4,NULL);]]]
parser: Input 'INSERT' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 156
parser: Reduce 156 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 427
parser: Shift 'INTO', go to state 164
parser: Return. Stack=[with insert_cmd INTO]
parser: Input 'STRING' in state 164
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with insert_cmd INTO STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 164.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with insert_cmd INTO nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO nm DOT ID]
parser: Input 'VALUES' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 164.
parser: ... then shift 'xfullname', go to state 298
parser: Reduce 158 [idlist_opt ::=].
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'VALUES', go to state 526
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES]
parser: Input 'LP' in state 526
parser: Shift 'LP', go to state 28
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP]
parser: Input 'STRING' in state 28
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 28.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'VARIABLE' in state 107
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA VARIABLE]
parser: Input 'COMMA' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'NULL' in state 107
parser: Shift 'NULL', pending reduce 167
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA NULL]
parser: Input 'RP' with pending reduce 167
parser: Reduce 167 [term ::= NULL|FLOAT|BLOB], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'RP', pending reduce 89
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist RP]
parser: Input 'SEMI' with pending reduce 89
parser: Reduce 89 [values ::= VALUES LP nexprlist RP], go to state 35.
parser: ... then shift 'values', go to state 532
parser: Reduce 348 [oneselect ::= values], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 152 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 150
parser: Reduce 150 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'tcons', pending reduce 342
parser: Reduce 342 [conslist ::= conslist tconscomma tcons], go to state 34.
parser: ... then shift 'conslist', go to state 278
parser: Reduce 341 [conslist_opt ::= COMMA conslist], go to state 362.
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[ecmd create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: [[[UPDATE 'main'.sqlite_master SET type='table', name='over', tbl_name='over', rootpage=#2, sql='CREATE TABLE over(following int not null, preceding text(300) not null, constraint PK_GLOBALSTRINGPROPERTIES primary key (following))' WHERE rowid=#1]]]
parser: Input 'UPDATE' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'STRING' in state 299
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', go to state 165
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with UPDATE orconf STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 165.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 165.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 428
parser: Shift 'SET', go to state 153
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 153
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 153.
parser: ... then shift 'nm', go to state 442
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'STRING' in state 84
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 84.
parser: ... then shift 'term', go to state 58
parser: Reduce 148 [setlist ::= nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'VARIABLE' in state 86
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ VARIABLE]
parser: Input 'COMMA' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 86.
parser: ... then shift 'expr', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'WHERE' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ]
parser: Input 'VARIABLE' in state 117
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ VARIABLE]
parser: Input 'SEMI' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 145
parser: Reduce 145 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='over' AND type!='trigger' ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'STRING' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'NE' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'NE', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE STRING]
parser: Input 'ORDER' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE over(following int not null, preceding text(300) not null, constraint PK_GLOBALSTRINGPROPERTIES primary key (following))]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'FOLLOWING' in state 139
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', pending reduce 331
parser: Return. Stack=[create_table LP FOLLOWING]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'NOT' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Shift 'NOT', go to state 406
parser: Return. Stack=[create_table LP columnname carglist NOT]
parser: Input 'NULL' in state 406
parser: Shift 'NULL', go to state 335
parser: Return. Stack=[create_table LP columnname carglist NOT NULL]
parser: Input 'COMMA' in state 335
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 35
parser: Reduce 35 [ccons ::= NOT NULL onconf], go to state 150.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 376.
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'PRECEDING' in state 34
parser: FALLBACK PRECEDING => ID
parser: Shift 'PRECEDING', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA PRECEDING]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'LP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Shift 'LP', go to state 138
parser: Return. Stack=[create_table LP columnlist COMMA nm typename LP]
parser: Input 'INTEGER' in state 138
parser: Shift 'INTEGER', pending reduce 359
parser: Return. Stack=[create_table LP columnlist COMMA nm typename LP INTEGER]
parser: Input 'RP' with pending reduce 359
parser: Reduce 359 [plus_num ::= INTEGER|FLOAT], go to state 138.
parser: ... then shift 'plus_num', go to state 413
parser: Shift 'RP', pending reduce 25
parser: Return. Stack=[create_table LP columnlist COMMA nm typename LP plus_num RP]
parser: Input 'NOT' with pending reduce 25
parser: Reduce 25 [typetoken ::= typename LP signed RP], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'NOT', go to state 406
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist NOT]
parser: Input 'NULL' in state 406
parser: Shift 'NULL', go to state 335
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist NOT NULL]
parser: Input 'COMMA' in state 335
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 35
parser: Reduce 35 [ccons ::= NOT NULL onconf], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'CONSTRAINT' in state 34
parser: Shift 'CONSTRAINT', go to state 231
parser: Return. Stack=[create_table LP columnlist COMMA CONSTRAINT]
parser: Input 'ID' in state 231
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA CONSTRAINT ID]
parser: Input 'PRIMARY' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 231.
parser: ... then shift 'nm', pending reduce 62
parser: Reduce 62 [tcons ::= CONSTRAINT nm], go to state 34.
parser: ... then shift 'tcons', go to state 278
parser: Reduce 344 [tconscomma ::=].
parser: ... then shift 'tconscomma', go to state 203
parser: Shift 'PRIMARY', go to state 472
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma PRIMARY]
parser: Input 'KEY' in state 472
parser: Shift 'KEY', go to state 471
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma PRIMARY KEY]
parser: Input 'LP' in state 471
parser: Shift 'LP', go to state 20
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma PRIMARY KEY LP]
parser: Input 'FOLLOWING' in state 20
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', go to state 416
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma PRIMARY KEY LP FOLLOWING]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 20.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 20.
parser: ... then shift 'sortlist', go to state 277
parser: Reduce 42 [autoinc ::=].
parser: ... then shift 'autoinc', go to state 470
parser: Shift 'RP', go to state 328
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma PRIMARY KEY LP sortlist autoinc RP]
parser: Input 'RP' in state 328
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 63
parser: Reduce 63 [tcons ::= PRIMARY KEY LP sortlist autoinc RP onconf], go to state 203.
parser: ... then shift 'tcons', pending reduce 342
parser: Reduce 342 [conslist ::= conslist tconscomma tcons], go to state 34.
parser: ... then shift 'conslist', go to state 278
parser: Reduce 341 [conslist_opt ::= COMMA conslist], go to state 362.
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[;DELETE FROM t0 WHERE rowid>202;;VACUUM;;CREATE TABLE t1(last_field text(36) not null, x text(50) not null, test002 text(50) null, field1 text(50) null, test003 int null, field2 text(50) null, test004 int null, field3 text null, test005 text(1) null, field4 text null, test001 int not null, constraint PK_LSBI primary key (last_field));;CREATE VIEW test006 as 
    
   
   		select
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as ISSUESETTINGS_REVISIONNUM,
    			t0.c0 as ISSUESETTINGS_LASTMODIFIEDDATE,
    			t0.c0 as ISSUESETTINGS_LASTMODIFIEDBYID,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as ENTERPRISEDATA_REVISIONNUM,
    			t0.c0 as ENTERPRISEDATA_CREATIONDATE,
    			t0.c0 as ENTERPRISEDATA_AUTHORID,
    			t0.c0 as ENTERPRISEDATA_LASTMODIFIEDDATE,
    			t0.c0 as ENTERPRISEDATA_LASTMODIFIEDBYID,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0
    		from
    			t0 
    			join t0 on t0.c0 = t0.c0
    			left outer join t0 on t0.c0 = t0.c0;;CREATE INDEX field5 on t0 (c0, c0);;CREATE INDEX test007 on t0 (c0, c0);;CREATE INDEX field6 ON t0(v0);;CREATE VIEW test008 AS 
    WITH RECURSIVE t3(test008,y,z) AS (
        SELECT v0,v0,NULL FROM t0
        UNION
        SELECT test008,y,NULL FROM t3, t0
    )
  SELECT * FROM t3 AS xyz;;CREATE INDEX field7 on t0 (c0);;CREATE INDEX test009 on t0 (c0, c0);;DELETE FROM t1 WHERE rowid IN (10,11,12) ;;
;DROP TABLE t1;;UPDATE t0 SET c0=zeroblob(900) WHERE rowid BETWEEN 100 AND 110;;CREATE TABLE field8(test010 TEXT, CHECK(test010 BETWEEN 0 AND +test010));;SELECT count(*) FROM field8;;INSERT INTO field8(test010) VALUES(NULL),('xyz'),(5),(x'303132'),(4.75);;CREATE TABLE field9(test011 TEXT, CHECK(test011 BETWEEN +test011 AND 999999));;SELECT quote(following) FROM over ORDER BY rowid;;SELECT quote(following) FROM over ORDER BY rowid;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'DELETE' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'DELETE', go to state 430
parser: Return. Stack=[ecmd with DELETE]
parser: Input 'FROM' in state 430
parser: Shift 'FROM', go to state 166
parser: Return. Stack=[ecmd with DELETE FROM]
parser: Input 'ID' in state 166
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd with DELETE FROM ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 166.
parser: ... then shift 'nm', go to state 393
parser: Reduce 112 [xfullname ::= nm], go to state 166.
parser: ... then shift 'xfullname', go to state 272
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 300
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[ecmd with DELETE FROM xfullname indexed_opt WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd with DELETE FROM xfullname indexed_opt WHERE ID]
parser: Input 'GT' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'GT', go to state 118
parser: Return. Stack=[ecmd with DELETE FROM xfullname indexed_opt WHERE expr GT]
parser: Input 'INTEGER' in state 118
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[ecmd with DELETE FROM xfullname indexed_opt WHERE expr GT INTEGER]
parser: Input 'SEMI' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 118.
parser: ... then shift 'term', go to state 130
parser: Reduce 181 [expr ::= expr LT|GT|GE|LE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 300.
parser: ... then shift 'where_opt', pending reduce 142
parser: Reduce 142 [cmd ::= with DELETE FROM xfullname indexed_opt where_opt], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;VACUUM;;CREATE TABLE t1(last_field text(36) not null, x text(50) not null, test002 text(50) null, field1 text(50) null, test003 int null, field2 text(50) null, test004 int null, field3 text null, test005 text(1) null, field4 text null, test001 int not null, constraint PK_LSBI primary key (last_field));;CREATE VIEW test006 as 
    
   
   		select
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as ISSUESETTINGS_REVISIONNUM,
    			t0.c0 as ISSUESETTINGS_LASTMODIFIEDDATE,
    			t0.c0 as ISSUESETTINGS_LASTMODIFIEDBYID,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as ENTERPRISEDATA_REVISIONNUM,
    			t0.c0 as ENTERPRISEDATA_CREATIONDATE,
    			t0.c0 as ENTERPRISEDATA_AUTHORID,
    			t0.c0 as ENTERPRISEDATA_LASTMODIFIEDDATE,
    			t0.c0 as ENTERPRISEDATA_LASTMODIFIEDBYID,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0
    		from
    			t0 
    			join t0 on t0.c0 = t0.c0
    			left outer join t0 on t0.c0 = t0.c0;;CREATE INDEX field5 on t0 (c0, c0);;CREATE INDEX test007 on t0 (c0, c0);;CREATE INDEX field6 ON t0(v0);;CREATE VIEW test008 AS 
    WITH RECURSIVE t3(test008,y,z) AS (
        SELECT v0,v0,NULL FROM t0
        UNION
        SELECT test008,y,NULL FROM t3, t0
    )
  SELECT * FROM t3 AS xyz;;CREATE INDEX field7 on t0 (c0);;CREATE INDEX test009 on t0 (c0, c0);;DELETE FROM t1 WHERE rowid IN (10,11,12) ;;
;DROP TABLE t1;;UPDATE t0 SET c0=zeroblob(900) WHERE rowid BETWEEN 100 AND 110;;CREATE TABLE field8(test010 TEXT, CHECK(test010 BETWEEN 0 AND +test010));;SELECT count(*) FROM field8;;INSERT INTO field8(test010) VALUES(NULL),('xyz'),(5),(x'303132'),(4.75);;CREATE TABLE field9(test011 TEXT, CHECK(test011 BETWEEN +test011 AND 999999));;SELECT quote(following) FROM over ORDER BY rowid;;SELECT quote(following) FROM over ORDER BY rowid;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'VACUUM' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'VACUUM', go to state 152
parser: Return. Stack=[ecmd VACUUM]
parser: Input 'SEMI' in state 152
parser: Reduce 232 [vinto ::=].
parser: ... then shift 'vinto', pending reduce 229
parser: Reduce 229 [cmd ::= VACUUM vinto], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[ATTACH '' AS vacuum_db]]]
parser: Input 'ATTACH' in state 0
parser: Shift 'ATTACH', go to state 294
parser: Return. Stack=[ATTACH]
parser: Input 'STRING' in state 294
parser: Reduce 365 [database_kw_opt ::=].
parser: ... then shift 'database_kw_opt', go to state 81
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[ATTACH database_kw_opt STRING]
parser: Input 'AS' in state 537
parser: Reduce 168 [term ::= STRING], go to state 81.
parser: ... then shift 'term', go to state 44
parser: Shift 'AS', go to state 80
parser: Return. Stack=[ATTACH database_kw_opt term AS]
parser: Input 'ID' in state 80
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ATTACH database_kw_opt term AS ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 80.
parser: ... then shift 'expr', go to state 15
parser: Reduce 267 [key_opt ::=].
parser: ... then shift 'key_opt', pending reduce 265
parser: Reduce 265 [cmd ::= ATTACH database_kw_opt expr AS expr key_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE x(type text,name text,tbl_name text,rootpage int,sql text)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'RP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT name, rootpage, sql FROM "vacuum_db".sqlite_master ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'ORDER' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[BEGIN]]]
parser: Input 'BEGIN' in state 0
parser: Shift 'BEGIN', go to state 268
parser: Return. Stack=[BEGIN]
parser: Input 'SEMI' in state 268
parser: Reduce 4 [transtype ::=].
parser: ... then shift 'transtype', go to state 367
parser: Reduce 323 [trans_opt ::=].
parser: ... then shift 'trans_opt', pending reduce 3
parser: Reduce 3 [cmd ::= BEGIN transtype trans_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT sql FROM "main".sqlite_master WHERE type='table'AND name<>'sqlite_sequence' AND coalesce(rootpage,1)>0]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'NE' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'NE', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP]
parser: Input 'ID' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA INTEGER]
parser: Input 'RP' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct exprlist RP]
parser: Input 'GT' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'GT', go to state 118
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr GT]
parser: Input 'INTEGER' in state 118
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr GT INTEGER]
parser: Input 'SEMI' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 118.
parser: ... then shift 'term', go to state 130
parser: Reduce 181 [expr ::= expr LT|GT|GE|LE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE t0(
    c0 INTEGER PRIMARY KEY,
    v0 TEXT
  )]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'PRIMARY' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Shift 'PRIMARY', go to state 475
parser: Return. Stack=[create_table LP columnname carglist PRIMARY]
parser: Input 'KEY' in state 475
parser: Shift 'KEY', go to state 280
parser: Return. Stack=[create_table LP columnname carglist PRIMARY KEY]
parser: Input 'COMMA' in state 280
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', go to state 333
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', go to state 332
parser: Reduce 42 [autoinc ::=].
parser: ... then shift 'autoinc', pending reduce 36
parser: Reduce 36 [ccons ::= PRIMARY KEY sortorder onconf autoinc], go to state 150.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 376.
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'RP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: [[[UPDATE 'vacuum_db'.sqlite_master SET type='table', name='t0', tbl_name='t0', rootpage=#2, sql='CREATE TABLE t0(
    c0 INTEGER PRIMARY KEY,
    v0 TEXT
  )' WHERE rowid=#1]]]
parser: Input 'UPDATE' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'STRING' in state 299
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', go to state 165
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with UPDATE orconf STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 165.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 165.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 428
parser: Shift 'SET', go to state 153
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 153
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 153.
parser: ... then shift 'nm', go to state 442
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'STRING' in state 84
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 84.
parser: ... then shift 'term', go to state 58
parser: Reduce 148 [setlist ::= nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'VARIABLE' in state 86
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ VARIABLE]
parser: Input 'COMMA' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 86.
parser: ... then shift 'expr', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'WHERE' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ]
parser: Input 'VARIABLE' in state 117
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ VARIABLE]
parser: Input 'SEMI' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 145
parser: Reduce 145 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT name, rootpage, sql FROM 'vacuum_db'.sqlite_master WHERE tbl_name='t0' AND type!='trigger' ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'STRING' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'NE' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'NE', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE STRING]
parser: Input 'ORDER' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE t0(
    c0 INTEGER PRIMARY KEY,
    v0 TEXT
  )]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'PRIMARY' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Shift 'PRIMARY', go to state 475
parser: Return. Stack=[create_table LP columnname carglist PRIMARY]
parser: Input 'KEY' in state 475
parser: Shift 'KEY', go to state 280
parser: Return. Stack=[create_table LP columnname carglist PRIMARY KEY]
parser: Input 'COMMA' in state 280
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', go to state 333
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', go to state 332
parser: Reduce 42 [autoinc ::=].
parser: ... then shift 'autoinc', pending reduce 36
parser: Reduce 36 [ccons ::= PRIMARY KEY sortorder onconf autoinc], go to state 150.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 376.
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'RP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE over(following int not null, preceding text(300) not null, constraint PK_GLOBALSTRINGPROPERTIES primary key (following))]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'FOLLOWING' in state 139
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', pending reduce 331
parser: Return. Stack=[create_table LP FOLLOWING]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'NOT' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Shift 'NOT', go to state 406
parser: Return. Stack=[create_table LP columnname carglist NOT]
parser: Input 'NULL' in state 406
parser: Shift 'NULL', go to state 335
parser: Return. Stack=[create_table LP columnname carglist NOT NULL]
parser: Input 'COMMA' in state 335
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 35
parser: Reduce 35 [ccons ::= NOT NULL onconf], go to state 150.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 376.
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'PRECEDING' in state 34
parser: FALLBACK PRECEDING => ID
parser: Shift 'PRECEDING', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA PRECEDING]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'LP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Shift 'LP', go to state 138
parser: Return. Stack=[create_table LP columnlist COMMA nm typename LP]
parser: Input 'INTEGER' in state 138
parser: Shift 'INTEGER', pending reduce 359
parser: Return. Stack=[create_table LP columnlist COMMA nm typename LP INTEGER]
parser: Input 'RP' with pending reduce 359
parser: Reduce 359 [plus_num ::= INTEGER|FLOAT], go to state 138.
parser: ... then shift 'plus_num', go to state 413
parser: Shift 'RP', pending reduce 25
parser: Return. Stack=[create_table LP columnlist COMMA nm typename LP plus_num RP]
parser: Input 'NOT' with pending reduce 25
parser: Reduce 25 [typetoken ::= typename LP signed RP], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'NOT', go to state 406
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist NOT]
parser: Input 'NULL' in state 406
parser: Shift 'NULL', go to state 335
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist NOT NULL]
parser: Input 'COMMA' in state 335
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 35
parser: Reduce 35 [ccons ::= NOT NULL onconf], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'CONSTRAINT' in state 34
parser: Shift 'CONSTRAINT', go to state 231
parser: Return. Stack=[create_table LP columnlist COMMA CONSTRAINT]
parser: Input 'ID' in state 231
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA CONSTRAINT ID]
parser: Input 'PRIMARY' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 231.
parser: ... then shift 'nm', pending reduce 62
parser: Reduce 62 [tcons ::= CONSTRAINT nm], go to state 34.
parser: ... then shift 'tcons', go to state 278
parser: Reduce 344 [tconscomma ::=].
parser: ... then shift 'tconscomma', go to state 203
parser: Shift 'PRIMARY', go to state 472
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma PRIMARY]
parser: Input 'KEY' in state 472
parser: Shift 'KEY', go to state 471
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma PRIMARY KEY]
parser: Input 'LP' in state 471
parser: Shift 'LP', go to state 20
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma PRIMARY KEY LP]
parser: Input 'FOLLOWING' in state 20
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', go to state 416
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma PRIMARY KEY LP FOLLOWING]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 20.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 20.
parser: ... then shift 'sortlist', go to state 277
parser: Reduce 42 [autoinc ::=].
parser: ... then shift 'autoinc', go to state 470
parser: Shift 'RP', go to state 328
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma PRIMARY KEY LP sortlist autoinc RP]
parser: Input 'RP' in state 328
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 63
parser: Reduce 63 [tcons ::= PRIMARY KEY LP sortlist autoinc RP onconf], go to state 203.
parser: [[[INSERT INTO 'vacuum_db'.sqlite_master VALUES('index','sqlite_autoindex_over_1','over',#4,NULL);]]]
parser: Input 'INSERT' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 156
parser: Reduce 156 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 427
parser: Shift 'INTO', go to state 164
parser: Return. Stack=[with insert_cmd INTO]
parser: Input 'STRING' in state 164
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with insert_cmd INTO STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 164.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with insert_cmd INTO nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO nm DOT ID]
parser: Input 'VALUES' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 164.
parser: ... then shift 'xfullname', go to state 298
parser: Reduce 158 [idlist_opt ::=].
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'VALUES', go to state 526
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES]
parser: Input 'LP' in state 526
parser: Shift 'LP', go to state 28
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP]
parser: Input 'STRING' in state 28
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 28.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'VARIABLE' in state 107
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA VARIABLE]
parser: Input 'COMMA' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'NULL' in state 107
parser: Shift 'NULL', pending reduce 167
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA NULL]
parser: Input 'RP' with pending reduce 167
parser: Reduce 167 [term ::= NULL|FLOAT|BLOB], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'RP', pending reduce 89
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist RP]
parser: Input 'SEMI' with pending reduce 89
parser: Reduce 89 [values ::= VALUES LP nexprlist RP], go to state 35.
parser: ... then shift 'values', go to state 532
parser: Reduce 348 [oneselect ::= values], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 152 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 150
parser: Reduce 150 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'tcons', pending reduce 342
parser: Reduce 342 [conslist ::= conslist tconscomma tcons], go to state 34.
parser: ... then shift 'conslist', go to state 278
parser: Reduce 341 [conslist_opt ::= COMMA conslist], go to state 362.
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: [[[UPDATE 'vacuum_db'.sqlite_master SET type='table', name='over', tbl_name='over', rootpage=#2, sql='CREATE TABLE over(following int not null, preceding text(300) not null, constraint PK_GLOBALSTRINGPROPERTIES primary key (following))' WHERE rowid=#1]]]
parser: Input 'UPDATE' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'STRING' in state 299
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', go to state 165
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with UPDATE orconf STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 165.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 165.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 428
parser: Shift 'SET', go to state 153
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 153
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 153.
parser: ... then shift 'nm', go to state 442
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'STRING' in state 84
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 84.
parser: ... then shift 'term', go to state 58
parser: Reduce 148 [setlist ::= nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'VARIABLE' in state 86
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ VARIABLE]
parser: Input 'COMMA' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 86.
parser: ... then shift 'expr', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'WHERE' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ]
parser: Input 'VARIABLE' in state 117
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ VARIABLE]
parser: Input 'SEMI' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 145
parser: Reduce 145 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT name, rootpage, sql FROM 'vacuum_db'.sqlite_master WHERE tbl_name='over' AND type!='trigger' ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'STRING' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'NE' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'NE', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE STRING]
parser: Input 'ORDER' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE over(following int not null, preceding text(300) not null, constraint PK_GLOBALSTRINGPROPERTIES primary key (following))]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'FOLLOWING' in state 139
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', pending reduce 331
parser: Return. Stack=[create_table LP FOLLOWING]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'NOT' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Shift 'NOT', go to state 406
parser: Return. Stack=[create_table LP columnname carglist NOT]
parser: Input 'NULL' in state 406
parser: Shift 'NULL', go to state 335
parser: Return. Stack=[create_table LP columnname carglist NOT NULL]
parser: Input 'COMMA' in state 335
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 35
parser: Reduce 35 [ccons ::= NOT NULL onconf], go to state 150.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 376.
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'PRECEDING' in state 34
parser: FALLBACK PRECEDING => ID
parser: Shift 'PRECEDING', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA PRECEDING]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'LP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Shift 'LP', go to state 138
parser: Return. Stack=[create_table LP columnlist COMMA nm typename LP]
parser: Input 'INTEGER' in state 138
parser: Shift 'INTEGER', pending reduce 359
parser: Return. Stack=[create_table LP columnlist COMMA nm typename LP INTEGER]
parser: Input 'RP' with pending reduce 359
parser: Reduce 359 [plus_num ::= INTEGER|FLOAT], go to state 138.
parser: ... then shift 'plus_num', go to state 413
parser: Shift 'RP', pending reduce 25
parser: Return. Stack=[create_table LP columnlist COMMA nm typename LP plus_num RP]
parser: Input 'NOT' with pending reduce 25
parser: Reduce 25 [typetoken ::= typename LP signed RP], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'NOT', go to state 406
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist NOT]
parser: Input 'NULL' in state 406
parser: Shift 'NULL', go to state 335
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist NOT NULL]
parser: Input 'COMMA' in state 335
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 35
parser: Reduce 35 [ccons ::= NOT NULL onconf], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'CONSTRAINT' in state 34
parser: Shift 'CONSTRAINT', go to state 231
parser: Return. Stack=[create_table LP columnlist COMMA CONSTRAINT]
parser: Input 'ID' in state 231
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA CONSTRAINT ID]
parser: Input 'PRIMARY' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 231.
parser: ... then shift 'nm', pending reduce 62
parser: Reduce 62 [tcons ::= CONSTRAINT nm], go to state 34.
parser: ... then shift 'tcons', go to state 278
parser: Reduce 344 [tconscomma ::=].
parser: ... then shift 'tconscomma', go to state 203
parser: Shift 'PRIMARY', go to state 472
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma PRIMARY]
parser: Input 'KEY' in state 472
parser: Shift 'KEY', go to state 471
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma PRIMARY KEY]
parser: Input 'LP' in state 471
parser: Shift 'LP', go to state 20
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma PRIMARY KEY LP]
parser: Input 'FOLLOWING' in state 20
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', go to state 416
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma PRIMARY KEY LP FOLLOWING]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 20.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 20.
parser: ... then shift 'sortlist', go to state 277
parser: Reduce 42 [autoinc ::=].
parser: ... then shift 'autoinc', go to state 470
parser: Shift 'RP', go to state 328
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma PRIMARY KEY LP sortlist autoinc RP]
parser: Input 'RP' in state 328
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 63
parser: Reduce 63 [tcons ::= PRIMARY KEY LP sortlist autoinc RP onconf], go to state 203.
parser: ... then shift 'tcons', pending reduce 342
parser: Reduce 342 [conslist ::= conslist tconscomma tcons], go to state 34.
parser: ... then shift 'conslist', go to state 278
parser: Reduce 341 [conslist_opt ::= COMMA conslist], go to state 362.
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT sql FROM "main".sqlite_master WHERE type='index']]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'SEMI' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT'INSERT INTO vacuum_db.'||quote(name)||' SELECT*FROM"main".'||quote(name)FROM vacuum_db.sqlite_master WHERE type='table'AND coalesce(rootpage,1)>0]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'STRING' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct sclp scanpt STRING]
parser: Input 'CONCAT' in state 537
parser: Reduce 168 [term ::= STRING], go to state 77.
parser: ... then shift 'term', go to state 16
parser: Shift 'CONCAT', go to state 113
parser: Return. Stack=[SELECT distinct sclp scanpt term CONCAT]
parser: Input 'ID' in state 113
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt term CONCAT ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[SELECT distinct sclp scanpt term CONCAT ID LP]
parser: Input 'ID' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt term CONCAT ID LP distinct ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[SELECT distinct sclp scanpt term CONCAT ID LP distinct exprlist RP]
parser: Input 'CONCAT' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 113.
parser: ... then shift 'expr', go to state 146
parser: Reduce 186 [expr ::= expr CONCAT expr], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Shift 'CONCAT', go to state 113
parser: Return. Stack=[SELECT distinct sclp scanpt expr CONCAT]
parser: Input 'STRING' in state 113
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct sclp scanpt expr CONCAT STRING]
parser: Input 'CONCAT' in state 537
parser: Reduce 168 [term ::= STRING], go to state 113.
parser: ... then shift 'term', go to state 146
parser: Reduce 186 [expr ::= expr CONCAT expr], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Shift 'CONCAT', go to state 113
parser: Return. Stack=[SELECT distinct sclp scanpt expr CONCAT]
parser: Input 'ID' in state 113
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt expr CONCAT ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[SELECT distinct sclp scanpt expr CONCAT ID LP]
parser: Input 'ID' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt expr CONCAT ID LP distinct ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[SELECT distinct sclp scanpt expr CONCAT ID LP distinct exprlist RP]
parser: Input 'FROM' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 113.
parser: ... then shift 'expr', go to state 146
parser: Reduce 186 [expr ::= expr CONCAT expr], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP]
parser: Input 'ID' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA INTEGER]
parser: Input 'RP' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct exprlist RP]
parser: Input 'GT' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'GT', go to state 118
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr GT]
parser: Input 'INTEGER' in state 118
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr GT INTEGER]
parser: Input 'SEMI' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 118.
parser: ... then shift 'term', go to state 130
parser: Reduce 181 [expr ::= expr LT|GT|GE|LE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[INSERT INTO vacuum_db.'t0' SELECT*FROM"main".'t0']]]
parser: Input 'INSERT' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 156
parser: Reduce 156 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 427
parser: Shift 'INTO', go to state 164
parser: Return. Stack=[with insert_cmd INTO]
parser: Input 'ID' in state 164
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 164.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with insert_cmd INTO nm DOT]
parser: Input 'STRING' in state 218
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with insert_cmd INTO nm DOT STRING]
parser: Input 'SELECT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 164.
parser: ... then shift 'xfullname', go to state 298
parser: Reduce 158 [idlist_opt ::=].
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 96
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'STRING' in state 245
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM stl_prefix nm DOT STRING]
parser: Input 'SEMI' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 152 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 150
parser: Reduce 150 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[INSERT INTO vacuum_db.'over' SELECT*FROM"main".'over']]]
parser: Input 'INSERT' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 156
parser: Reduce 156 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 427
parser: Shift 'INTO', go to state 164
parser: Return. Stack=[with insert_cmd INTO]
parser: Input 'ID' in state 164
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 164.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with insert_cmd INTO nm DOT]
parser: Input 'STRING' in state 218
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with insert_cmd INTO nm DOT STRING]
parser: Input 'SELECT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 164.
parser: ... then shift 'xfullname', go to state 298
parser: Reduce 158 [idlist_opt ::=].
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 96
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'STRING' in state 245
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM stl_prefix nm DOT STRING]
parser: Input 'SEMI' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 152 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 150
parser: Reduce 150 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[INSERT INTO vacuum_db.sqlite_master SELECT*FROM "main".sqlite_master WHERE type IN('view','trigger') OR(type='table'AND rootpage=0)]]]
parser: Input 'INSERT' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 156
parser: Reduce 156 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 427
parser: Shift 'INTO', go to state 164
parser: Return. Stack=[with insert_cmd INTO]
parser: Input 'ID' in state 164
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 164.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with insert_cmd INTO nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO nm DOT ID]
parser: Input 'SELECT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 164.
parser: ... then shift 'xfullname', go to state 298
parser: Reduce 158 [idlist_opt ::=].
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 96
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE ID]
parser: Input 'IN' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'IN', pending reduce 200
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr IN]
parser: Input 'LP' with pending reduce 200
parser: Reduce 200 [in_op ::= IN], go to state 63.
parser: ... then shift 'in_op', go to state 209
parser: Shift 'LP', go to state 3
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr in_op LP]
parser: Input 'STRING' in state 3
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr in_op LP STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 3.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 3.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr in_op LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr in_op LP nexprlist COMMA STRING]
parser: Input 'RP' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 3.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 3.
parser: ... then shift 'exprlist', go to state 519
parser: Shift 'RP', pending reduce 202
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr in_op LP exprlist RP]
parser: Input 'OR' with pending reduce 202
parser: Reduce 202 [expr ::= expr in_op LP exprlist RP], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'OR', go to state 119
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr OR]
parser: Input 'LP' in state 119
parser: Shift 'LP', go to state 4
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr OR LP]
parser: Input 'ID' in state 4
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr OR LP ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 4.
parser: ... then shift 'expr', go to state 50
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr OR LP expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr OR LP expr EQ STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 4.
parser: ... then shift 'expr', go to state 50
parser: Shift 'AND', go to state 120
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr OR LP expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr OR LP expr AND ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr OR LP expr AND expr EQ]
parser: Input 'INTEGER' in state 117
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr OR LP expr AND expr EQ INTEGER]
parser: Input 'RP' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 4.
parser: ... then shift 'expr', go to state 50
parser: Shift 'RP', pending reduce 162
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr OR LP expr RP]
parser: Input 'SEMI' with pending reduce 162
parser: Reduce 162 [expr ::= LP expr RP], go to state 119.
parser: ... then shift 'expr', go to state 74
parser: Reduce 180 [expr ::= expr OR expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 152 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 150
parser: Reduce 150 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[;CREATE TABLE t1(last_field text(36) not null, x text(50) not null, test002 text(50) null, field1 text(50) null, test003 int null, field2 text(50) null, test004 int null, field3 text null, test005 text(1) null, field4 text null, test001 int not null, constraint PK_LSBI primary key (last_field));;CREATE VIEW test006 as 
    
   
   		select
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as ISSUESETTINGS_REVISIONNUM,
    			t0.c0 as ISSUESETTINGS_LASTMODIFIEDDATE,
    			t0.c0 as ISSUESETTINGS_LASTMODIFIEDBYID,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as ENTERPRISEDATA_REVISIONNUM,
    			t0.c0 as ENTERPRISEDATA_CREATIONDATE,
    			t0.c0 as ENTERPRISEDATA_AUTHORID,
    			t0.c0 as ENTERPRISEDATA_LASTMODIFIEDDATE,
    			t0.c0 as ENTERPRISEDATA_LASTMODIFIEDBYID,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0
    		from
    			t0 
    			join t0 on t0.c0 = t0.c0
    			left outer join t0 on t0.c0 = t0.c0;;CREATE INDEX field5 on t0 (c0, c0);;CREATE INDEX test007 on t0 (c0, c0);;CREATE INDEX field6 ON t0(v0);;CREATE VIEW test008 AS 
    WITH RECURSIVE t3(test008,y,z) AS (
        SELECT v0,v0,NULL FROM t0
        UNION
        SELECT test008,y,NULL FROM t3, t0
    )
  SELECT * FROM t3 AS xyz;;CREATE INDEX field7 on t0 (c0);;CREATE INDEX test009 on t0 (c0, c0);;DELETE FROM t1 WHERE rowid IN (10,11,12) ;;
;DROP TABLE t1;;UPDATE t0 SET c0=zeroblob(900) WHERE rowid BETWEEN 100 AND 110;;CREATE TABLE field8(test010 TEXT, CHECK(test010 BETWEEN 0 AND +test010));;SELECT count(*) FROM field8;;INSERT INTO field8(test010) VALUES(NULL),('xyz'),(5),(x'303132'),(4.75);;CREATE TABLE field9(test011 TEXT, CHECK(test011 BETWEEN +test011 AND 999999));;SELECT quote(following) FROM over ORDER BY rowid;;SELECT quote(following) FROM over ORDER BY rowid;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'CREATE' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[ecmd CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 1.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[ecmd createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 1.
parser: [[[CREATE TABLE x(type text,name text,tbl_name text,rootpage int,sql text)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'RP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'ORDER' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE t0(
    c0 INTEGER PRIMARY KEY,
    v0 TEXT
  )]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'PRIMARY' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Shift 'PRIMARY', go to state 475
parser: Return. Stack=[create_table LP columnname carglist PRIMARY]
parser: Input 'KEY' in state 475
parser: Shift 'KEY', go to state 280
parser: Return. Stack=[create_table LP columnname carglist PRIMARY KEY]
parser: Input 'COMMA' in state 280
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', go to state 333
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', go to state 332
parser: Reduce 42 [autoinc ::=].
parser: ... then shift 'autoinc', pending reduce 36
parser: Reduce 36 [ccons ::= PRIMARY KEY sortorder onconf autoinc], go to state 150.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 376.
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'RP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE over(following int not null, preceding text(300) not null, constraint PK_GLOBALSTRINGPROPERTIES primary key (following))]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'FOLLOWING' in state 139
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', pending reduce 331
parser: Return. Stack=[create_table LP FOLLOWING]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'NOT' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Shift 'NOT', go to state 406
parser: Return. Stack=[create_table LP columnname carglist NOT]
parser: Input 'NULL' in state 406
parser: Shift 'NULL', go to state 335
parser: Return. Stack=[create_table LP columnname carglist NOT NULL]
parser: Input 'COMMA' in state 335
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 35
parser: Reduce 35 [ccons ::= NOT NULL onconf], go to state 150.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 376.
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'PRECEDING' in state 34
parser: FALLBACK PRECEDING => ID
parser: Shift 'PRECEDING', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA PRECEDING]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'LP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Shift 'LP', go to state 138
parser: Return. Stack=[create_table LP columnlist COMMA nm typename LP]
parser: Input 'INTEGER' in state 138
parser: Shift 'INTEGER', pending reduce 359
parser: Return. Stack=[create_table LP columnlist COMMA nm typename LP INTEGER]
parser: Input 'RP' with pending reduce 359
parser: Reduce 359 [plus_num ::= INTEGER|FLOAT], go to state 138.
parser: ... then shift 'plus_num', go to state 413
parser: Shift 'RP', pending reduce 25
parser: Return. Stack=[create_table LP columnlist COMMA nm typename LP plus_num RP]
parser: Input 'NOT' with pending reduce 25
parser: Reduce 25 [typetoken ::= typename LP signed RP], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'NOT', go to state 406
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist NOT]
parser: Input 'NULL' in state 406
parser: Shift 'NULL', go to state 335
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist NOT NULL]
parser: Input 'COMMA' in state 335
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 35
parser: Reduce 35 [ccons ::= NOT NULL onconf], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'CONSTRAINT' in state 34
parser: Shift 'CONSTRAINT', go to state 231
parser: Return. Stack=[create_table LP columnlist COMMA CONSTRAINT]
parser: Input 'ID' in state 231
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA CONSTRAINT ID]
parser: Input 'PRIMARY' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 231.
parser: ... then shift 'nm', pending reduce 62
parser: Reduce 62 [tcons ::= CONSTRAINT nm], go to state 34.
parser: ... then shift 'tcons', go to state 278
parser: Reduce 344 [tconscomma ::=].
parser: ... then shift 'tconscomma', go to state 203
parser: Shift 'PRIMARY', go to state 472
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma PRIMARY]
parser: Input 'KEY' in state 472
parser: Shift 'KEY', go to state 471
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma PRIMARY KEY]
parser: Input 'LP' in state 471
parser: Shift 'LP', go to state 20
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma PRIMARY KEY LP]
parser: Input 'FOLLOWING' in state 20
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', go to state 416
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma PRIMARY KEY LP FOLLOWING]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 20.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 20.
parser: ... then shift 'sortlist', go to state 277
parser: Reduce 42 [autoinc ::=].
parser: ... then shift 'autoinc', go to state 470
parser: Shift 'RP', go to state 328
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma PRIMARY KEY LP sortlist autoinc RP]
parser: Input 'RP' in state 328
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 63
parser: Reduce 63 [tcons ::= PRIMARY KEY LP sortlist autoinc RP onconf], go to state 203.
parser: ... then shift 'tcons', pending reduce 342
parser: Reduce 342 [conslist ::= conslist tconscomma tcons], go to state 34.
parser: ... then shift 'conslist', go to state 278
parser: Reduce 341 [conslist_opt ::= COMMA conslist], go to state 362.
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE x(type text,name text,tbl_name text,rootpage int,sql text)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'RP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[ecmd create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd create_table LP ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[ecmd create_table LP nm ID]
parser: Input 'LP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Shift 'LP', go to state 138
parser: Return. Stack=[ecmd create_table LP nm typename LP]
parser: Input 'INTEGER' in state 138
parser: Shift 'INTEGER', pending reduce 359
parser: Return. Stack=[ecmd create_table LP nm typename LP INTEGER]
parser: Input 'RP' with pending reduce 359
parser: Reduce 359 [plus_num ::= INTEGER|FLOAT], go to state 138.
parser: ... then shift 'plus_num', go to state 413
parser: Shift 'RP', pending reduce 25
parser: Return. Stack=[ecmd create_table LP nm typename LP plus_num RP]
parser: Input 'NOT' with pending reduce 25
parser: Reduce 25 [typetoken ::= typename LP signed RP], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Shift 'NOT', go to state 406
parser: Return. Stack=[ecmd create_table LP columnname carglist NOT]
parser: Input 'NULL' in state 406
parser: Shift 'NULL', go to state 335
parser: Return. Stack=[ecmd create_table LP columnname carglist NOT NULL]
parser: Input 'COMMA' in state 335
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 35
parser: Reduce 35 [ccons ::= NOT NULL onconf], go to state 150.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 376.
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[ecmd create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm ID]
parser: Input 'LP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Shift 'LP', go to state 138
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm typename LP]
parser: Input 'INTEGER' in state 138
parser: Shift 'INTEGER', pending reduce 359
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm typename LP INTEGER]
parser: Input 'RP' with pending reduce 359
parser: Reduce 359 [plus_num ::= INTEGER|FLOAT], go to state 138.
parser: ... then shift 'plus_num', go to state 413
parser: Shift 'RP', pending reduce 25
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm typename LP plus_num RP]
parser: Input 'NOT' with pending reduce 25
parser: Reduce 25 [typetoken ::= typename LP signed RP], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'NOT', go to state 406
parser: Return. Stack=[ecmd create_table LP columnlist COMMA columnname carglist NOT]
parser: Input 'NULL' in state 406
parser: Shift 'NULL', go to state 335
parser: Return. Stack=[ecmd create_table LP columnlist COMMA columnname carglist NOT NULL]
parser: Input 'COMMA' in state 335
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 35
parser: Reduce 35 [ccons ::= NOT NULL onconf], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[ecmd create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm ID]
parser: Input 'LP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Shift 'LP', go to state 138
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm typename LP]
parser: Input 'INTEGER' in state 138
parser: Shift 'INTEGER', pending reduce 359
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm typename LP INTEGER]
parser: Input 'RP' with pending reduce 359
parser: Reduce 359 [plus_num ::= INTEGER|FLOAT], go to state 138.
parser: ... then shift 'plus_num', go to state 413
parser: Shift 'RP', pending reduce 25
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm typename LP plus_num RP]
parser: Input 'NULL' with pending reduce 25
parser: Reduce 25 [typetoken ::= typename LP signed RP], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'NULL', go to state 336
parser: Return. Stack=[ecmd create_table LP columnlist COMMA columnname carglist NULL]
parser: Input 'COMMA' in state 336
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 340
parser: Reduce 340 [ccons ::= NULL onconf], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[ecmd create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm ID]
parser: Input 'LP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Shift 'LP', go to state 138
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm typename LP]
parser: Input 'INTEGER' in state 138
parser: Shift 'INTEGER', pending reduce 359
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm typename LP INTEGER]
parser: Input 'RP' with pending reduce 359
parser: Reduce 359 [plus_num ::= INTEGER|FLOAT], go to state 138.
parser: ... then shift 'plus_num', go to state 413
parser: Shift 'RP', pending reduce 25
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm typename LP plus_num RP]
parser: Input 'NULL' with pending reduce 25
parser: Reduce 25 [typetoken ::= typename LP signed RP], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'NULL', go to state 336
parser: Return. Stack=[ecmd create_table LP columnlist COMMA columnname carglist NULL]
parser: Input 'COMMA' in state 336
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 340
parser: Reduce 340 [ccons ::= NULL onconf], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[ecmd create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm ID]
parser: Input 'NULL' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'NULL', go to state 336
parser: Return. Stack=[ecmd create_table LP columnlist COMMA columnname carglist NULL]
parser: Input 'COMMA' in state 336
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 340
parser: Reduce 340 [ccons ::= NULL onconf], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[ecmd create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm ID]
parser: Input 'LP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Shift 'LP', go to state 138
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm typename LP]
parser: Input 'INTEGER' in state 138
parser: Shift 'INTEGER', pending reduce 359
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm typename LP INTEGER]
parser: Input 'RP' with pending reduce 359
parser: Reduce 359 [plus_num ::= INTEGER|FLOAT], go to state 138.
parser: ... then shift 'plus_num', go to state 413
parser: Shift 'RP', pending reduce 25
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm typename LP plus_num RP]
parser: Input 'NULL' with pending reduce 25
parser: Reduce 25 [typetoken ::= typename LP signed RP], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'NULL', go to state 336
parser: Return. Stack=[ecmd create_table LP columnlist COMMA columnname carglist NULL]
parser: Input 'COMMA' in state 336
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 340
parser: Reduce 340 [ccons ::= NULL onconf], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[ecmd create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm ID]
parser: Input 'NULL' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'NULL', go to state 336
parser: Return. Stack=[ecmd create_table LP columnlist COMMA columnname carglist NULL]
parser: Input 'COMMA' in state 336
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 340
parser: Reduce 340 [ccons ::= NULL onconf], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[ecmd create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm ID]
parser: Input 'NULL' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'NULL', go to state 336
parser: Return. Stack=[ecmd create_table LP columnlist COMMA columnname carglist NULL]
parser: Input 'COMMA' in state 336
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 340
parser: Reduce 340 [ccons ::= NULL onconf], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[ecmd create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm ID]
parser: Input 'LP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Shift 'LP', go to state 138
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm typename LP]
parser: Input 'INTEGER' in state 138
parser: Shift 'INTEGER', pending reduce 359
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm typename LP INTEGER]
parser: Input 'RP' with pending reduce 359
parser: Reduce 359 [plus_num ::= INTEGER|FLOAT], go to state 138.
parser: ... then shift 'plus_num', go to state 413
parser: Shift 'RP', pending reduce 25
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm typename LP plus_num RP]
parser: Input 'NULL' with pending reduce 25
parser: Reduce 25 [typetoken ::= typename LP signed RP], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'NULL', go to state 336
parser: Return. Stack=[ecmd create_table LP columnlist COMMA columnname carglist NULL]
parser: Input 'COMMA' in state 336
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 340
parser: Reduce 340 [ccons ::= NULL onconf], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[ecmd create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm ID]
parser: Input 'NULL' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'NULL', go to state 336
parser: Return. Stack=[ecmd create_table LP columnlist COMMA columnname carglist NULL]
parser: Input 'COMMA' in state 336
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 340
parser: Reduce 340 [ccons ::= NULL onconf], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[ecmd create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm ID]
parser: Input 'NOT' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'NOT', go to state 406
parser: Return. Stack=[ecmd create_table LP columnlist COMMA columnname carglist NOT]
parser: Input 'NULL' in state 406
parser: Shift 'NULL', go to state 335
parser: Return. Stack=[ecmd create_table LP columnlist COMMA columnname carglist NOT NULL]
parser: Input 'COMMA' in state 335
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 35
parser: Reduce 35 [ccons ::= NOT NULL onconf], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[ecmd create_table LP columnlist COMMA]
parser: Input 'CONSTRAINT' in state 34
parser: Shift 'CONSTRAINT', go to state 231
parser: Return. Stack=[ecmd create_table LP columnlist COMMA CONSTRAINT]
parser: Input 'ID' in state 231
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd create_table LP columnlist COMMA CONSTRAINT ID]
parser: Input 'PRIMARY' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 231.
parser: ... then shift 'nm', pending reduce 62
parser: Reduce 62 [tcons ::= CONSTRAINT nm], go to state 34.
parser: ... then shift 'tcons', go to state 278
parser: Reduce 344 [tconscomma ::=].
parser: ... then shift 'tconscomma', go to state 203
parser: Shift 'PRIMARY', go to state 472
parser: Return. Stack=[ecmd create_table LP columnlist COMMA tcons tconscomma PRIMARY]
parser: Input 'KEY' in state 472
parser: Shift 'KEY', go to state 471
parser: Return. Stack=[ecmd create_table LP columnlist COMMA tcons tconscomma PRIMARY KEY]
parser: Input 'LP' in state 471
parser: Shift 'LP', go to state 20
parser: Return. Stack=[ecmd create_table LP columnlist COMMA tcons tconscomma PRIMARY KEY LP]
parser: Input 'ID' in state 20
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd create_table LP columnlist COMMA tcons tconscomma PRIMARY KEY LP ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 20.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 20.
parser: ... then shift 'sortlist', go to state 277
parser: Reduce 42 [autoinc ::=].
parser: ... then shift 'autoinc', go to state 470
parser: Shift 'RP', go to state 328
parser: Return. Stack=[ecmd create_table LP columnlist COMMA tcons tconscomma PRIMARY KEY LP sortlist autoinc RP]
parser: Input 'RP' in state 328
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 63
parser: Reduce 63 [tcons ::= PRIMARY KEY LP sortlist autoinc RP onconf], go to state 203.
parser: [[[INSERT INTO 'main'.sqlite_master VALUES('index','sqlite_autoindex_t1_1','t1',#4,NULL);]]]
parser: Input 'INSERT' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 156
parser: Reduce 156 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 427
parser: Shift 'INTO', go to state 164
parser: Return. Stack=[with insert_cmd INTO]
parser: Input 'STRING' in state 164
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with insert_cmd INTO STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 164.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with insert_cmd INTO nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO nm DOT ID]
parser: Input 'VALUES' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 164.
parser: ... then shift 'xfullname', go to state 298
parser: Reduce 158 [idlist_opt ::=].
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'VALUES', go to state 526
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES]
parser: Input 'LP' in state 526
parser: Shift 'LP', go to state 28
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP]
parser: Input 'STRING' in state 28
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 28.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'VARIABLE' in state 107
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA VARIABLE]
parser: Input 'COMMA' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'NULL' in state 107
parser: Shift 'NULL', pending reduce 167
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA NULL]
parser: Input 'RP' with pending reduce 167
parser: Reduce 167 [term ::= NULL|FLOAT|BLOB], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'RP', pending reduce 89
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist RP]
parser: Input 'SEMI' with pending reduce 89
parser: Reduce 89 [values ::= VALUES LP nexprlist RP], go to state 35.
parser: ... then shift 'values', go to state 532
parser: Reduce 348 [oneselect ::= values], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 152 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 150
parser: Reduce 150 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'tcons', pending reduce 342
parser: Reduce 342 [conslist ::= conslist tconscomma tcons], go to state 34.
parser: ... then shift 'conslist', go to state 278
parser: Reduce 341 [conslist_opt ::= COMMA conslist], go to state 362.
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[ecmd create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: [[[UPDATE 'main'.sqlite_master SET type='table', name='t1', tbl_name='t1', rootpage=#2, sql='CREATE TABLE t1(last_field text(36) not null, x text(50) not null, test002 text(50) null, field1 text(50) null, test003 int null, field2 text(50) null, test004 int null, field3 text null, test005 text(1) null, field4 text null, test001 int not null, constraint PK_LSBI primary key (last_field))' WHERE rowid=#1]]]
parser: Input 'UPDATE' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'STRING' in state 299
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', go to state 165
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with UPDATE orconf STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 165.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 165.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 428
parser: Shift 'SET', go to state 153
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 153
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 153.
parser: ... then shift 'nm', go to state 442
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'STRING' in state 84
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 84.
parser: ... then shift 'term', go to state 58
parser: Reduce 148 [setlist ::= nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'VARIABLE' in state 86
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ VARIABLE]
parser: Input 'COMMA' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 86.
parser: ... then shift 'expr', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'WHERE' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ]
parser: Input 'VARIABLE' in state 117
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ VARIABLE]
parser: Input 'SEMI' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 145
parser: Reduce 145 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'STRING' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'NE' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'NE', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE STRING]
parser: Input 'ORDER' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE t1(last_field text(36) not null, x text(50) not null, test002 text(50) null, field1 text(50) null, test003 int null, field2 text(50) null, test004 int null, field3 text null, test005 text(1) null, field4 text null, test001 int not null, constraint PK_LSBI primary key (last_field))]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'LP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Shift 'LP', go to state 138
parser: Return. Stack=[create_table LP nm typename LP]
parser: Input 'INTEGER' in state 138
parser: Shift 'INTEGER', pending reduce 359
parser: Return. Stack=[create_table LP nm typename LP INTEGER]
parser: Input 'RP' with pending reduce 359
parser: Reduce 359 [plus_num ::= INTEGER|FLOAT], go to state 138.
parser: ... then shift 'plus_num', go to state 413
parser: Shift 'RP', pending reduce 25
parser: Return. Stack=[create_table LP nm typename LP plus_num RP]
parser: Input 'NOT' with pending reduce 25
parser: Reduce 25 [typetoken ::= typename LP signed RP], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Shift 'NOT', go to state 406
parser: Return. Stack=[create_table LP columnname carglist NOT]
parser: Input 'NULL' in state 406
parser: Shift 'NULL', go to state 335
parser: Return. Stack=[create_table LP columnname carglist NOT NULL]
parser: Input 'COMMA' in state 335
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 35
parser: Reduce 35 [ccons ::= NOT NULL onconf], go to state 150.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 376.
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'LP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Shift 'LP', go to state 138
parser: Return. Stack=[create_table LP columnlist COMMA nm typename LP]
parser: Input 'INTEGER' in state 138
parser: Shift 'INTEGER', pending reduce 359
parser: Return. Stack=[create_table LP columnlist COMMA nm typename LP INTEGER]
parser: Input 'RP' with pending reduce 359
parser: Reduce 359 [plus_num ::= INTEGER|FLOAT], go to state 138.
parser: ... then shift 'plus_num', go to state 413
parser: Shift 'RP', pending reduce 25
parser: Return. Stack=[create_table LP columnlist COMMA nm typename LP plus_num RP]
parser: Input 'NOT' with pending reduce 25
parser: Reduce 25 [typetoken ::= typename LP signed RP], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'NOT', go to state 406
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist NOT]
parser: Input 'NULL' in state 406
parser: Shift 'NULL', go to state 335
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist NOT NULL]
parser: Input 'COMMA' in state 335
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 35
parser: Reduce 35 [ccons ::= NOT NULL onconf], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'LP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Shift 'LP', go to state 138
parser: Return. Stack=[create_table LP columnlist COMMA nm typename LP]
parser: Input 'INTEGER' in state 138
parser: Shift 'INTEGER', pending reduce 359
parser: Return. Stack=[create_table LP columnlist COMMA nm typename LP INTEGER]
parser: Input 'RP' with pending reduce 359
parser: Reduce 359 [plus_num ::= INTEGER|FLOAT], go to state 138.
parser: ... then shift 'plus_num', go to state 413
parser: Shift 'RP', pending reduce 25
parser: Return. Stack=[create_table LP columnlist COMMA nm typename LP plus_num RP]
parser: Input 'NULL' with pending reduce 25
parser: Reduce 25 [typetoken ::= typename LP signed RP], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'NULL', go to state 336
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist NULL]
parser: Input 'COMMA' in state 336
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 340
parser: Reduce 340 [ccons ::= NULL onconf], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'LP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Shift 'LP', go to state 138
parser: Return. Stack=[create_table LP columnlist COMMA nm typename LP]
parser: Input 'INTEGER' in state 138
parser: Shift 'INTEGER', pending reduce 359
parser: Return. Stack=[create_table LP columnlist COMMA nm typename LP INTEGER]
parser: Input 'RP' with pending reduce 359
parser: Reduce 359 [plus_num ::= INTEGER|FLOAT], go to state 138.
parser: ... then shift 'plus_num', go to state 413
parser: Shift 'RP', pending reduce 25
parser: Return. Stack=[create_table LP columnlist COMMA nm typename LP plus_num RP]
parser: Input 'NULL' with pending reduce 25
parser: Reduce 25 [typetoken ::= typename LP signed RP], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'NULL', go to state 336
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist NULL]
parser: Input 'COMMA' in state 336
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 340
parser: Reduce 340 [ccons ::= NULL onconf], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'NULL' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'NULL', go to state 336
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist NULL]
parser: Input 'COMMA' in state 336
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 340
parser: Reduce 340 [ccons ::= NULL onconf], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'LP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Shift 'LP', go to state 138
parser: Return. Stack=[create_table LP columnlist COMMA nm typename LP]
parser: Input 'INTEGER' in state 138
parser: Shift 'INTEGER', pending reduce 359
parser: Return. Stack=[create_table LP columnlist COMMA nm typename LP INTEGER]
parser: Input 'RP' with pending reduce 359
parser: Reduce 359 [plus_num ::= INTEGER|FLOAT], go to state 138.
parser: ... then shift 'plus_num', go to state 413
parser: Shift 'RP', pending reduce 25
parser: Return. Stack=[create_table LP columnlist COMMA nm typename LP plus_num RP]
parser: Input 'NULL' with pending reduce 25
parser: Reduce 25 [typetoken ::= typename LP signed RP], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'NULL', go to state 336
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist NULL]
parser: Input 'COMMA' in state 336
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 340
parser: Reduce 340 [ccons ::= NULL onconf], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'NULL' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'NULL', go to state 336
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist NULL]
parser: Input 'COMMA' in state 336
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 340
parser: Reduce 340 [ccons ::= NULL onconf], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'NULL' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'NULL', go to state 336
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist NULL]
parser: Input 'COMMA' in state 336
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 340
parser: Reduce 340 [ccons ::= NULL onconf], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'LP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Shift 'LP', go to state 138
parser: Return. Stack=[create_table LP columnlist COMMA nm typename LP]
parser: Input 'INTEGER' in state 138
parser: Shift 'INTEGER', pending reduce 359
parser: Return. Stack=[create_table LP columnlist COMMA nm typename LP INTEGER]
parser: Input 'RP' with pending reduce 359
parser: Reduce 359 [plus_num ::= INTEGER|FLOAT], go to state 138.
parser: ... then shift 'plus_num', go to state 413
parser: Shift 'RP', pending reduce 25
parser: Return. Stack=[create_table LP columnlist COMMA nm typename LP plus_num RP]
parser: Input 'NULL' with pending reduce 25
parser: Reduce 25 [typetoken ::= typename LP signed RP], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'NULL', go to state 336
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist NULL]
parser: Input 'COMMA' in state 336
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 340
parser: Reduce 340 [ccons ::= NULL onconf], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'NULL' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'NULL', go to state 336
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist NULL]
parser: Input 'COMMA' in state 336
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 340
parser: Reduce 340 [ccons ::= NULL onconf], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'NOT' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'NOT', go to state 406
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist NOT]
parser: Input 'NULL' in state 406
parser: Shift 'NULL', go to state 335
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist NOT NULL]
parser: Input 'COMMA' in state 335
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 35
parser: Reduce 35 [ccons ::= NOT NULL onconf], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'CONSTRAINT' in state 34
parser: Shift 'CONSTRAINT', go to state 231
parser: Return. Stack=[create_table LP columnlist COMMA CONSTRAINT]
parser: Input 'ID' in state 231
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA CONSTRAINT ID]
parser: Input 'PRIMARY' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 231.
parser: ... then shift 'nm', pending reduce 62
parser: Reduce 62 [tcons ::= CONSTRAINT nm], go to state 34.
parser: ... then shift 'tcons', go to state 278
parser: Reduce 344 [tconscomma ::=].
parser: ... then shift 'tconscomma', go to state 203
parser: Shift 'PRIMARY', go to state 472
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma PRIMARY]
parser: Input 'KEY' in state 472
parser: Shift 'KEY', go to state 471
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma PRIMARY KEY]
parser: Input 'LP' in state 471
parser: Shift 'LP', go to state 20
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma PRIMARY KEY LP]
parser: Input 'ID' in state 20
parser: Shift 'ID', go to state 416
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma PRIMARY KEY LP ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 20.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 20.
parser: ... then shift 'sortlist', go to state 277
parser: Reduce 42 [autoinc ::=].
parser: ... then shift 'autoinc', go to state 470
parser: Shift 'RP', go to state 328
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma PRIMARY KEY LP sortlist autoinc RP]
parser: Input 'RP' in state 328
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 63
parser: Reduce 63 [tcons ::= PRIMARY KEY LP sortlist autoinc RP onconf], go to state 203.
parser: ... then shift 'tcons', pending reduce 342
parser: Reduce 342 [conslist ::= conslist tconscomma tcons], go to state 34.
parser: ... then shift 'conslist', go to state 278
parser: Reduce 341 [conslist_opt ::= COMMA conslist], go to state 362.
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[;CREATE VIEW test006 as 
    
   
   		select
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as ISSUESETTINGS_REVISIONNUM,
    			t0.c0 as ISSUESETTINGS_LASTMODIFIEDDATE,
    			t0.c0 as ISSUESETTINGS_LASTMODIFIEDBYID,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as ENTERPRISEDATA_REVISIONNUM,
    			t0.c0 as ENTERPRISEDATA_CREATIONDATE,
    			t0.c0 as ENTERPRISEDATA_AUTHORID,
    			t0.c0 as ENTERPRISEDATA_LASTMODIFIEDDATE,
    			t0.c0 as ENTERPRISEDATA_LASTMODIFIEDBYID,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0
    		from
    			t0 
    			join t0 on t0.c0 = t0.c0
    			left outer join t0 on t0.c0 = t0.c0;;CREATE INDEX field5 on t0 (c0, c0);;CREATE INDEX test007 on t0 (c0, c0);;CREATE INDEX field6 ON t0(v0);;CREATE VIEW test008 AS 
    WITH RECURSIVE t3(test008,y,z) AS (
        SELECT v0,v0,NULL FROM t0
        UNION
        SELECT test008,y,NULL FROM t3, t0
    )
  SELECT * FROM t3 AS xyz;;CREATE INDEX field7 on t0 (c0);;CREATE INDEX test009 on t0 (c0, c0);;DELETE FROM t1 WHERE rowid IN (10,11,12) ;;
;DROP TABLE t1;;UPDATE t0 SET c0=zeroblob(900) WHERE rowid BETWEEN 100 AND 110;;CREATE TABLE field8(test010 TEXT, CHECK(test010 BETWEEN 0 AND +test010));;SELECT count(*) FROM field8;;INSERT INTO field8(test010) VALUES(NULL),('xyz'),(5),(x'303132'),(4.75);;CREATE TABLE field9(test011 TEXT, CHECK(test011 BETWEEN +test011 AND 999999));;SELECT quote(following) FROM over ORDER BY rowid;;SELECT quote(following) FROM over ORDER BY rowid;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'CREATE' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[ecmd CREATE]
parser: Input 'VIEW' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 1.
parser: ... then shift 'createkw', go to state 134
parser: FALLBACK VIEW => ID
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'VIEW', go to state 322
parser: Return. Stack=[ecmd createkw temp VIEW]
parser: Input 'ID' in state 322
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 228
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 228.
parser: ... then shift 'nm', go to state 321
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 320
parser: Reduce 222 [eidlist_opt ::=].
parser: ... then shift 'eidlist_opt', go to state 461
parser: Shift 'AS', go to state 37
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS]
parser: Input 'SELECT' in state 37
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'FROM' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'JOIN' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Shift 'JOIN', pending reduce 116
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM seltablist JOIN]
parser: Input 'ID' with pending reduce 116
parser: Reduce 116 [joinop ::= COMMA|JOIN], go to state 263.
parser: ... then shift 'joinop', pending reduce 102
parser: Reduce 102 [stl_prefix ::= seltablist joinop], go to state 197.
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'ON' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Shift 'ON', go to state 92
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON]
parser: Input 'ID' in state 92
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 92.
parser: ... then shift 'nm', go to state 535
parser: Shift 'DOT', go to state 249
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON nm DOT]
parser: Input 'ID' in state 249
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON nm DOT ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 249.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 92.
parser: ... then shift 'expr', go to state 62
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON expr EQ]
parser: Input 'ID' in state 117
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON expr EQ ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 117.
parser: ... then shift 'nm', go to state 535
parser: Shift 'DOT', go to state 249
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON expr EQ nm DOT]
parser: Input 'ID' in state 249
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON expr EQ nm DOT ID]
parser: Input 'JOIN_KW' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 249.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 92.
parser: ... then shift 'expr', go to state 62
parser: Reduce 120 [on_opt ::= ON expr], go to state 348.
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Shift 'JOIN_KW', go to state 208
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM seltablist JOIN_KW]
parser: Input 'JOIN_KW' in state 208
parser: Shift 'JOIN_KW', pending reduce 333
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM seltablist JOIN_KW JOIN_KW]
parser: Input 'JOIN' with pending reduce 333
parser: Reduce 333 [nm ::= JOIN_KW], go to state 208.
parser: ... then shift 'nm', go to state 207
parser: Shift 'JOIN', pending reduce 118
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM seltablist JOIN_KW nm JOIN]
parser: Input 'ID' with pending reduce 118
parser: Reduce 118 [joinop ::= JOIN_KW nm JOIN], go to state 263.
parser: ... then shift 'joinop', pending reduce 102
parser: Reduce 102 [stl_prefix ::= seltablist joinop], go to state 197.
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'ON' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Shift 'ON', go to state 92
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON]
parser: Input 'ID' in state 92
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 92.
parser: ... then shift 'nm', go to state 535
parser: Shift 'DOT', go to state 249
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON nm DOT]
parser: Input 'ID' in state 249
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON nm DOT ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 249.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 92.
parser: ... then shift 'expr', go to state 62
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON expr EQ]
parser: Input 'ID' in state 117
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON expr EQ ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 117.
parser: ... then shift 'nm', go to state 535
parser: Shift 'DOT', go to state 249
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON expr EQ nm DOT]
parser: Input 'ID' in state 249
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON expr EQ nm DOT ID]
parser: Input 'SEMI' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 249.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 92.
parser: ... then shift 'expr', go to state 62
parser: Reduce 120 [on_opt ::= ON expr], go to state 348.
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 37.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 37.
parser: ... then shift 'select', pending reduce 77
parser: Reduce 77 [cmd ::= createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS select], go to state 1.
parser: [[[UPDATE 'main'.sqlite_master SET type='view', name='test006', tbl_name='test006', rootpage=#2, sql='CREATE VIEW test006 as 
    
   
   		select
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as ISSUESETTINGS_REVISIONNUM,
    			t0.c0 as ISSUESETTINGS_LASTMODIFIEDDATE,
    			t0.c0 as ISSUESETTINGS_LASTMODIFIEDBYID,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as ENTERPRISEDATA_REVISIONNUM,
    			t0.c0 as ENTERPRISEDATA_CREATIONDATE,
    			t0.c0 as ENTERPRISEDATA_AUTHORID,
    			t0.c0 as ENTERPRISEDATA_LASTMODIFIEDDATE,
    			t0.c0 as ENTERPRISEDATA_LASTMODIFIEDBYID,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0
    		from
    			t0 
    			join t0 on t0.c0 = t0.c0
    			left outer join t0 on t0.c0 = t0.c0' WHERE rowid=#1]]]
parser: Input 'UPDATE' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'STRING' in state 299
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', go to state 165
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with UPDATE orconf STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 165.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 165.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 428
parser: Shift 'SET', go to state 153
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 153
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 153.
parser: ... then shift 'nm', go to state 442
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'STRING' in state 84
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 84.
parser: ... then shift 'term', go to state 58
parser: Reduce 148 [setlist ::= nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'VARIABLE' in state 86
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ VARIABLE]
parser: Input 'COMMA' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 86.
parser: ... then shift 'expr', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'WHERE' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ]
parser: Input 'VARIABLE' in state 117
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ VARIABLE]
parser: Input 'SEMI' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 145
parser: Reduce 145 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='test006' AND type!='trigger' ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'STRING' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'NE' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'NE', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE STRING]
parser: Input 'ORDER' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE VIEW test006 as 
    
   
   		select
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as ISSUESETTINGS_REVISIONNUM,
    			t0.c0 as ISSUESETTINGS_LASTMODIFIEDDATE,
    			t0.c0 as ISSUESETTINGS_LASTMODIFIEDBYID,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as ENTERPRISEDATA_REVISIONNUM,
    			t0.c0 as ENTERPRISEDATA_CREATIONDATE,
    			t0.c0 as ENTERPRISEDATA_AUTHORID,
    			t0.c0 as ENTERPRISEDATA_LASTMODIFIEDDATE,
    			t0.c0 as ENTERPRISEDATA_LASTMODIFIEDBYID,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0,
    			t0.c0 as c0
    		from
    			t0 
    			join t0 on t0.c0 = t0.c0
    			left outer join t0 on t0.c0 = t0.c0]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'VIEW' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: FALLBACK VIEW => ID
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'VIEW', go to state 322
parser: Return. Stack=[createkw temp VIEW]
parser: Input 'ID' in state 322
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 228
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 228.
parser: ... then shift 'nm', go to state 321
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 320
parser: Reduce 222 [eidlist_opt ::=].
parser: ... then shift 'eidlist_opt', go to state 461
parser: Shift 'AS', go to state 37
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS]
parser: Input 'SELECT' in state 37
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'FROM' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'JOIN' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Shift 'JOIN', pending reduce 116
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM seltablist JOIN]
parser: Input 'ID' with pending reduce 116
parser: Reduce 116 [joinop ::= COMMA|JOIN], go to state 263.
parser: ... then shift 'joinop', pending reduce 102
parser: Reduce 102 [stl_prefix ::= seltablist joinop], go to state 197.
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'ON' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Shift 'ON', go to state 92
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON]
parser: Input 'ID' in state 92
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 92.
parser: ... then shift 'nm', go to state 535
parser: Shift 'DOT', go to state 249
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON nm DOT]
parser: Input 'ID' in state 249
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON nm DOT ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 249.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 92.
parser: ... then shift 'expr', go to state 62
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON expr EQ]
parser: Input 'ID' in state 117
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON expr EQ ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 117.
parser: ... then shift 'nm', go to state 535
parser: Shift 'DOT', go to state 249
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON expr EQ nm DOT]
parser: Input 'ID' in state 249
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON expr EQ nm DOT ID]
parser: Input 'JOIN_KW' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 249.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 92.
parser: ... then shift 'expr', go to state 62
parser: Reduce 120 [on_opt ::= ON expr], go to state 348.
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Shift 'JOIN_KW', go to state 208
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM seltablist JOIN_KW]
parser: Input 'JOIN_KW' in state 208
parser: Shift 'JOIN_KW', pending reduce 333
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM seltablist JOIN_KW JOIN_KW]
parser: Input 'JOIN' with pending reduce 333
parser: Reduce 333 [nm ::= JOIN_KW], go to state 208.
parser: ... then shift 'nm', go to state 207
parser: Shift 'JOIN', pending reduce 118
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM seltablist JOIN_KW nm JOIN]
parser: Input 'ID' with pending reduce 118
parser: Reduce 118 [joinop ::= JOIN_KW nm JOIN], go to state 263.
parser: ... then shift 'joinop', pending reduce 102
parser: Reduce 102 [stl_prefix ::= seltablist joinop], go to state 197.
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'ON' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Shift 'ON', go to state 92
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON]
parser: Input 'ID' in state 92
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 92.
parser: ... then shift 'nm', go to state 535
parser: Shift 'DOT', go to state 249
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON nm DOT]
parser: Input 'ID' in state 249
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON nm DOT ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 249.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 92.
parser: ... then shift 'expr', go to state 62
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON expr EQ]
parser: Input 'ID' in state 117
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON expr EQ ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 117.
parser: ... then shift 'nm', go to state 535
parser: Shift 'DOT', go to state 249
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON expr EQ nm DOT]
parser: Input 'ID' in state 249
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON expr EQ nm DOT ID]
parser: Input 'SEMI' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 249.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 92.
parser: ... then shift 'expr', go to state 62
parser: Reduce 120 [on_opt ::= ON expr], go to state 348.
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 37.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 37.
parser: ... then shift 'select', pending reduce 77
parser: Reduce 77 [cmd ::= createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[;CREATE INDEX field5 on t0 (c0, c0);;CREATE INDEX test007 on t0 (c0, c0);;CREATE INDEX field6 ON t0(v0);;CREATE VIEW test008 AS 
    WITH RECURSIVE t3(test008,y,z) AS (
        SELECT v0,v0,NULL FROM t0
        UNION
        SELECT test008,y,NULL FROM t3, t0
    )
  SELECT * FROM t3 AS xyz;;CREATE INDEX field7 on t0 (c0);;CREATE INDEX test009 on t0 (c0, c0);;DELETE FROM t1 WHERE rowid IN (10,11,12) ;;
;DROP TABLE t1;;UPDATE t0 SET c0=zeroblob(900) WHERE rowid BETWEEN 100 AND 110;;CREATE TABLE field8(test010 TEXT, CHECK(test010 BETWEEN 0 AND +test010));;SELECT count(*) FROM field8;;INSERT INTO field8(test010) VALUES(NULL),('xyz'),(5),(x'303132'),(4.75);;CREATE TABLE field9(test011 TEXT, CHECK(test011 BETWEEN +test011 AND 999999));;SELECT quote(following) FROM over ORDER BY rowid;;SELECT quote(following) FROM over ORDER BY rowid;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'CREATE' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[ecmd CREATE]
parser: Input 'INDEX' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 1.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 221 [uniqueflag ::=].
parser: ... then shift 'uniqueflag', go to state 453
parser: Shift 'INDEX', go to state 315
parser: Return. Stack=[ecmd createkw uniqueflag INDEX]
parser: Input 'ID' in state 315
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 225
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists ID]
parser: Input 'ON' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 225.
parser: ... then shift 'nm', go to state 314
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 452
parser: Shift 'ON', go to state 224
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON]
parser: Input 'ID' in state 224
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 224.
parser: ... then shift 'nm', go to state 451
parser: Shift 'LP', go to state 18
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP]
parser: Input 'ID' in state 18
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 18.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 18.
parser: ... then shift 'sortlist', go to state 400
parser: Shift 'COMMA', go to state 95
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist COMMA]
parser: Input 'ID' in state 95
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist COMMA ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 95.
parser: ... then shift 'expr', go to state 14
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 129
parser: Reduce 129 [sortlist ::= sortlist COMMA expr sortorder], go to state 18.
parser: ... then shift 'sortlist', go to state 400
parser: Shift 'RP', go to state 313
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP]
parser: Input 'SEMI' in state 313
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', pending reduce 219
parser: Reduce 219 [cmd ::= createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP where_opt], go to state 1.
parser: [[[INSERT INTO 'main'.sqlite_master VALUES('index','field5','t0',#1,'CREATE INDEX field5 on t0 (c0, c0)');]]]
parser: Input 'INSERT' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 156
parser: Reduce 156 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 427
parser: Shift 'INTO', go to state 164
parser: Return. Stack=[with insert_cmd INTO]
parser: Input 'STRING' in state 164
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with insert_cmd INTO STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 164.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with insert_cmd INTO nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO nm DOT ID]
parser: Input 'VALUES' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 164.
parser: ... then shift 'xfullname', go to state 298
parser: Reduce 158 [idlist_opt ::=].
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'VALUES', go to state 526
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES]
parser: Input 'LP' in state 526
parser: Shift 'LP', go to state 28
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP]
parser: Input 'STRING' in state 28
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 28.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'VARIABLE' in state 107
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA VARIABLE]
parser: Input 'COMMA' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'RP' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'RP', pending reduce 89
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist RP]
parser: Input 'SEMI' with pending reduce 89
parser: Reduce 89 [values ::= VALUES LP nexprlist RP], go to state 35.
parser: ... then shift 'values', go to state 532
parser: Reduce 348 [oneselect ::= values], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 152 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 150
parser: Reduce 150 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='field5' AND type='index' ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'STRING' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr EQ STRING]
parser: Input 'ORDER' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE INDEX field5 on t0 (c0, c0)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'INDEX' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 221 [uniqueflag ::=].
parser: ... then shift 'uniqueflag', go to state 453
parser: Shift 'INDEX', go to state 315
parser: Return. Stack=[createkw uniqueflag INDEX]
parser: Input 'ID' in state 315
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 225
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists ID]
parser: Input 'ON' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 225.
parser: ... then shift 'nm', go to state 314
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 452
parser: Shift 'ON', go to state 224
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON]
parser: Input 'ID' in state 224
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 224.
parser: ... then shift 'nm', go to state 451
parser: Shift 'LP', go to state 18
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP]
parser: Input 'ID' in state 18
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 18.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 18.
parser: ... then shift 'sortlist', go to state 400
parser: Shift 'COMMA', go to state 95
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist COMMA]
parser: Input 'ID' in state 95
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist COMMA ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 95.
parser: ... then shift 'expr', go to state 14
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 129
parser: Reduce 129 [sortlist ::= sortlist COMMA expr sortorder], go to state 18.
parser: ... then shift 'sortlist', go to state 400
parser: Shift 'RP', go to state 313
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP]
parser: Input 'SEMI' in state 313
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', pending reduce 219
parser: Reduce 219 [cmd ::= createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[;CREATE INDEX test007 on t0 (c0, c0);;CREATE INDEX field6 ON t0(v0);;CREATE VIEW test008 AS 
    WITH RECURSIVE t3(test008,y,z) AS (
        SELECT v0,v0,NULL FROM t0
        UNION
        SELECT test008,y,NULL FROM t3, t0
    )
  SELECT * FROM t3 AS xyz;;CREATE INDEX field7 on t0 (c0);;CREATE INDEX test009 on t0 (c0, c0);;DELETE FROM t1 WHERE rowid IN (10,11,12) ;;
;DROP TABLE t1;;UPDATE t0 SET c0=zeroblob(900) WHERE rowid BETWEEN 100 AND 110;;CREATE TABLE field8(test010 TEXT, CHECK(test010 BETWEEN 0 AND +test010));;SELECT count(*) FROM field8;;INSERT INTO field8(test010) VALUES(NULL),('xyz'),(5),(x'303132'),(4.75);;CREATE TABLE field9(test011 TEXT, CHECK(test011 BETWEEN +test011 AND 999999));;SELECT quote(following) FROM over ORDER BY rowid;;SELECT quote(following) FROM over ORDER BY rowid;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'CREATE' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[ecmd CREATE]
parser: Input 'INDEX' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 1.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 221 [uniqueflag ::=].
parser: ... then shift 'uniqueflag', go to state 453
parser: Shift 'INDEX', go to state 315
parser: Return. Stack=[ecmd createkw uniqueflag INDEX]
parser: Input 'ID' in state 315
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 225
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists ID]
parser: Input 'ON' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 225.
parser: ... then shift 'nm', go to state 314
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 452
parser: Shift 'ON', go to state 224
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON]
parser: Input 'ID' in state 224
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 224.
parser: ... then shift 'nm', go to state 451
parser: Shift 'LP', go to state 18
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP]
parser: Input 'ID' in state 18
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 18.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 18.
parser: ... then shift 'sortlist', go to state 400
parser: Shift 'COMMA', go to state 95
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist COMMA]
parser: Input 'ID' in state 95
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist COMMA ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 95.
parser: ... then shift 'expr', go to state 14
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 129
parser: Reduce 129 [sortlist ::= sortlist COMMA expr sortorder], go to state 18.
parser: ... then shift 'sortlist', go to state 400
parser: Shift 'RP', go to state 313
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP]
parser: Input 'SEMI' in state 313
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', pending reduce 219
parser: Reduce 219 [cmd ::= createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP where_opt], go to state 1.
parser: [[[INSERT INTO 'main'.sqlite_master VALUES('index','test007','t0',#1,'CREATE INDEX test007 on t0 (c0, c0)');]]]
parser: Input 'INSERT' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 156
parser: Reduce 156 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 427
parser: Shift 'INTO', go to state 164
parser: Return. Stack=[with insert_cmd INTO]
parser: Input 'STRING' in state 164
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with insert_cmd INTO STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 164.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with insert_cmd INTO nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO nm DOT ID]
parser: Input 'VALUES' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 164.
parser: ... then shift 'xfullname', go to state 298
parser: Reduce 158 [idlist_opt ::=].
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'VALUES', go to state 526
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES]
parser: Input 'LP' in state 526
parser: Shift 'LP', go to state 28
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP]
parser: Input 'STRING' in state 28
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 28.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'VARIABLE' in state 107
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA VARIABLE]
parser: Input 'COMMA' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'RP' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'RP', pending reduce 89
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist RP]
parser: Input 'SEMI' with pending reduce 89
parser: Reduce 89 [values ::= VALUES LP nexprlist RP], go to state 35.
parser: ... then shift 'values', go to state 532
parser: Reduce 348 [oneselect ::= values], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 152 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 150
parser: Reduce 150 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='test007' AND type='index' ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'STRING' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr EQ STRING]
parser: Input 'ORDER' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE INDEX test007 on t0 (c0, c0)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'INDEX' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 221 [uniqueflag ::=].
parser: ... then shift 'uniqueflag', go to state 453
parser: Shift 'INDEX', go to state 315
parser: Return. Stack=[createkw uniqueflag INDEX]
parser: Input 'ID' in state 315
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 225
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists ID]
parser: Input 'ON' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 225.
parser: ... then shift 'nm', go to state 314
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 452
parser: Shift 'ON', go to state 224
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON]
parser: Input 'ID' in state 224
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 224.
parser: ... then shift 'nm', go to state 451
parser: Shift 'LP', go to state 18
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP]
parser: Input 'ID' in state 18
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 18.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 18.
parser: ... then shift 'sortlist', go to state 400
parser: Shift 'COMMA', go to state 95
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist COMMA]
parser: Input 'ID' in state 95
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist COMMA ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 95.
parser: ... then shift 'expr', go to state 14
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 129
parser: Reduce 129 [sortlist ::= sortlist COMMA expr sortorder], go to state 18.
parser: ... then shift 'sortlist', go to state 400
parser: Shift 'RP', go to state 313
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP]
parser: Input 'SEMI' in state 313
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', pending reduce 219
parser: Reduce 219 [cmd ::= createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[;CREATE INDEX field6 ON t0(v0);;CREATE VIEW test008 AS 
    WITH RECURSIVE t3(test008,y,z) AS (
        SELECT v0,v0,NULL FROM t0
        UNION
        SELECT test008,y,NULL FROM t3, t0
    )
  SELECT * FROM t3 AS xyz;;CREATE INDEX field7 on t0 (c0);;CREATE INDEX test009 on t0 (c0, c0);;DELETE FROM t1 WHERE rowid IN (10,11,12) ;;
;DROP TABLE t1;;UPDATE t0 SET c0=zeroblob(900) WHERE rowid BETWEEN 100 AND 110;;CREATE TABLE field8(test010 TEXT, CHECK(test010 BETWEEN 0 AND +test010));;SELECT count(*) FROM field8;;INSERT INTO field8(test010) VALUES(NULL),('xyz'),(5),(x'303132'),(4.75);;CREATE TABLE field9(test011 TEXT, CHECK(test011 BETWEEN +test011 AND 999999));;SELECT quote(following) FROM over ORDER BY rowid;;SELECT quote(following) FROM over ORDER BY rowid;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'CREATE' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[ecmd CREATE]
parser: Input 'INDEX' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 1.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 221 [uniqueflag ::=].
parser: ... then shift 'uniqueflag', go to state 453
parser: Shift 'INDEX', go to state 315
parser: Return. Stack=[ecmd createkw uniqueflag INDEX]
parser: Input 'ID' in state 315
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 225
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists ID]
parser: Input 'ON' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 225.
parser: ... then shift 'nm', go to state 314
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 452
parser: Shift 'ON', go to state 224
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON]
parser: Input 'ID' in state 224
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 224.
parser: ... then shift 'nm', go to state 451
parser: Shift 'LP', go to state 18
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP]
parser: Input 'ID' in state 18
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 18.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 18.
parser: ... then shift 'sortlist', go to state 400
parser: Shift 'RP', go to state 313
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP]
parser: Input 'SEMI' in state 313
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', pending reduce 219
parser: Reduce 219 [cmd ::= createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP where_opt], go to state 1.
parser: [[[INSERT INTO 'main'.sqlite_master VALUES('index','field6','t0',#1,'CREATE INDEX field6 ON t0(v0)');]]]
parser: Input 'INSERT' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 156
parser: Reduce 156 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 427
parser: Shift 'INTO', go to state 164
parser: Return. Stack=[with insert_cmd INTO]
parser: Input 'STRING' in state 164
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with insert_cmd INTO STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 164.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with insert_cmd INTO nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO nm DOT ID]
parser: Input 'VALUES' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 164.
parser: ... then shift 'xfullname', go to state 298
parser: Reduce 158 [idlist_opt ::=].
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'VALUES', go to state 526
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES]
parser: Input 'LP' in state 526
parser: Shift 'LP', go to state 28
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP]
parser: Input 'STRING' in state 28
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 28.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'VARIABLE' in state 107
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA VARIABLE]
parser: Input 'COMMA' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'RP' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'RP', pending reduce 89
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist RP]
parser: Input 'SEMI' with pending reduce 89
parser: Reduce 89 [values ::= VALUES LP nexprlist RP], go to state 35.
parser: ... then shift 'values', go to state 532
parser: Reduce 348 [oneselect ::= values], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 152 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 150
parser: Reduce 150 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='field6' AND type='index' ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'STRING' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr EQ STRING]
parser: Input 'ORDER' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE INDEX field6 ON t0(v0)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'INDEX' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 221 [uniqueflag ::=].
parser: ... then shift 'uniqueflag', go to state 453
parser: Shift 'INDEX', go to state 315
parser: Return. Stack=[createkw uniqueflag INDEX]
parser: Input 'ID' in state 315
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 225
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists ID]
parser: Input 'ON' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 225.
parser: ... then shift 'nm', go to state 314
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 452
parser: Shift 'ON', go to state 224
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON]
parser: Input 'ID' in state 224
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 224.
parser: ... then shift 'nm', go to state 451
parser: Shift 'LP', go to state 18
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP]
parser: Input 'ID' in state 18
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 18.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 18.
parser: ... then shift 'sortlist', go to state 400
parser: Shift 'RP', go to state 313
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP]
parser: Input 'SEMI' in state 313
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', pending reduce 219
parser: Reduce 219 [cmd ::= createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[;CREATE VIEW test008 AS 
    WITH RECURSIVE t3(test008,y,z) AS (
        SELECT v0,v0,NULL FROM t0
        UNION
        SELECT test008,y,NULL FROM t3, t0
    )
  SELECT * FROM t3 AS xyz;;CREATE INDEX field7 on t0 (c0);;CREATE INDEX test009 on t0 (c0, c0);;DELETE FROM t1 WHERE rowid IN (10,11,12) ;;
;DROP TABLE t1;;UPDATE t0 SET c0=zeroblob(900) WHERE rowid BETWEEN 100 AND 110;;CREATE TABLE field8(test010 TEXT, CHECK(test010 BETWEEN 0 AND +test010));;SELECT count(*) FROM field8;;INSERT INTO field8(test010) VALUES(NULL),('xyz'),(5),(x'303132'),(4.75);;CREATE TABLE field9(test011 TEXT, CHECK(test011 BETWEEN +test011 AND 999999));;SELECT quote(following) FROM over ORDER BY rowid;;SELECT quote(following) FROM over ORDER BY rowid;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'CREATE' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[ecmd CREATE]
parser: Input 'VIEW' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 1.
parser: ... then shift 'createkw', go to state 134
parser: FALLBACK VIEW => ID
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'VIEW', go to state 322
parser: Return. Stack=[ecmd createkw temp VIEW]
parser: Input 'ID' in state 322
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 228
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 228.
parser: ... then shift 'nm', go to state 321
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 320
parser: Reduce 222 [eidlist_opt ::=].
parser: ... then shift 'eidlist_opt', go to state 461
parser: Shift 'AS', go to state 37
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS]
parser: Input 'WITH' in state 37
parser: Shift 'WITH', go to state 160
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH]
parser: Input 'RECURSIVE' in state 160
parser: Shift 'RECURSIVE', go to state 181
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE]
parser: Input 'ID' in state 181
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 181.
parser: ... then shift 'nm', go to state 337
parser: Shift 'LP', go to state 182
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm LP]
parser: Input 'ID' in state 182
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm LP ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 182.
parser: ... then shift 'nm', go to state 338
parser: Reduce 226 [collate ::=].
parser: ... then shift 'collate', go to state 281
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 225
parser: Reduce 225 [eidlist ::= nm collate sortorder], go to state 182.
parser: ... then shift 'eidlist', go to state 408
parser: Shift 'COMMA', go to state 237
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm LP eidlist COMMA]
parser: Input 'ID' in state 237
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm LP eidlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 237.
parser: ... then shift 'nm', go to state 339
parser: Reduce 226 [collate ::=].
parser: ... then shift 'collate', go to state 282
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 224
parser: Reduce 224 [eidlist ::= eidlist COMMA nm collate sortorder], go to state 182.
parser: ... then shift 'eidlist', go to state 408
parser: Shift 'COMMA', go to state 237
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm LP eidlist COMMA]
parser: Input 'ID' in state 237
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm LP eidlist COMMA ID]
parser: Input 'RP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 237.
parser: ... then shift 'nm', go to state 339
parser: Reduce 226 [collate ::=].
parser: ... then shift 'collate', go to state 282
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 224
parser: Reduce 224 [eidlist ::= eidlist COMMA nm collate sortorder], go to state 182.
parser: ... then shift 'eidlist', go to state 408
parser: Shift 'RP', pending reduce 223
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm LP eidlist RP]
parser: Input 'AS' with pending reduce 223
parser: Reduce 223 [eidlist_opt ::= LP eidlist RP], go to state 337.
parser: ... then shift 'eidlist_opt', go to state 487
parser: Shift 'AS', go to state 486
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS]
parser: Input 'LP' in state 486
parser: Shift 'LP', go to state 39
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP]
parser: Input 'SELECT' in state 39
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP SELECT distinct selcollist COMMA]
parser: Input 'NULL' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'NULL', pending reduce 167
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP SELECT distinct sclp scanpt NULL]
parser: Input 'FROM' with pending reduce 167
parser: Reduce 167 [term ::= NULL|FLOAT|BLOB], go to state 77.
parser: ... then shift 'term', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'UNION' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 39.
parser: ... then shift 'oneselect', go to state 264
parser: Shift 'UNION', go to state 533
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP oneselect UNION]
parser: Input 'SELECT' in state 533
parser: Reduce 84 [multiselect_op ::= UNION], go to state 264.
parser: ... then shift 'multiselect_op', go to state 195
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP oneselect multiselect_op SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP oneselect multiselect_op SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP oneselect multiselect_op SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP oneselect multiselect_op SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP oneselect multiselect_op SELECT distinct selcollist COMMA]
parser: Input 'NULL' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'NULL', pending reduce 167
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP oneselect multiselect_op SELECT distinct sclp scanpt NULL]
parser: Input 'FROM' with pending reduce 167
parser: Reduce 167 [term ::= NULL|FLOAT|BLOB], go to state 77.
parser: ... then shift 'term', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP oneselect multiselect_op SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP oneselect multiselect_op SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Shift 'COMMA', pending reduce 116
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP oneselect multiselect_op SELECT distinct selcollist FROM seltablist COMMA]
parser: Input 'ID' with pending reduce 116
parser: Reduce 116 [joinop ::= COMMA|JOIN], go to state 263.
parser: ... then shift 'joinop', pending reduce 102
parser: Reduce 102 [stl_prefix ::= seltablist joinop], go to state 197.
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP oneselect multiselect_op SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'RP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 195.
parser: ... then shift 'oneselect', pending reduce 83
parser: Reduce 83 [selectnowith ::= selectnowith multiselect_op oneselect], go to state 39.
parser: ... then shift 'selectnowith', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 39.
parser: ... then shift 'select', go to state 485
parser: Shift 'RP', pending reduce 286
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP select RP]
parser: Input 'SELECT' with pending reduce 286
parser: Reduce 286 [wqlist ::= nm eidlist_opt AS LP select RP], go to state 181.
parser: ... then shift 'wqlist', go to state 142
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE wqlist SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 96
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE wqlist SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE wqlist SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE wqlist SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE wqlist SELECT distinct selcollist FROM stl_prefix nm dbnm AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE wqlist SELECT distinct selcollist FROM stl_prefix nm dbnm AS ID]
parser: Input 'SEMI' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 243.
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 142.
parser: ... then shift 'oneselect', go to state 258
parser: Reduce 81 [select ::= WITH RECURSIVE wqlist selectnowith], go to state 37.
parser: ... then shift 'select', pending reduce 77
parser: Reduce 77 [cmd ::= createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS select], go to state 1.
parser: [[[UPDATE 'main'.sqlite_master SET type='view', name='test008', tbl_name='test008', rootpage=#2, sql='CREATE VIEW test008 AS 
    WITH RECURSIVE t3(test008,y,z) AS (
        SELECT v0,v0,NULL FROM t0
        UNION
        SELECT test008,y,NULL FROM t3, t0
    )
  SELECT * FROM t3 AS xyz' WHERE rowid=#1]]]
parser: Input 'UPDATE' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'STRING' in state 299
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', go to state 165
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with UPDATE orconf STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 165.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 165.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 428
parser: Shift 'SET', go to state 153
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 153
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 153.
parser: ... then shift 'nm', go to state 442
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'STRING' in state 84
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 84.
parser: ... then shift 'term', go to state 58
parser: Reduce 148 [setlist ::= nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'VARIABLE' in state 86
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ VARIABLE]
parser: Input 'COMMA' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 86.
parser: ... then shift 'expr', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'WHERE' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ]
parser: Input 'VARIABLE' in state 117
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ VARIABLE]
parser: Input 'SEMI' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 145
parser: Reduce 145 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='test008' AND type!='trigger' ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'STRING' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'NE' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'NE', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE STRING]
parser: Input 'ORDER' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE VIEW test008 AS 
    WITH RECURSIVE t3(test008,y,z) AS (
        SELECT v0,v0,NULL FROM t0
        UNION
        SELECT test008,y,NULL FROM t3, t0
    )
  SELECT * FROM t3 AS xyz]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'VIEW' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: FALLBACK VIEW => ID
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'VIEW', go to state 322
parser: Return. Stack=[createkw temp VIEW]
parser: Input 'ID' in state 322
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 228
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 228.
parser: ... then shift 'nm', go to state 321
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 320
parser: Reduce 222 [eidlist_opt ::=].
parser: ... then shift 'eidlist_opt', go to state 461
parser: Shift 'AS', go to state 37
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS]
parser: Input 'WITH' in state 37
parser: Shift 'WITH', go to state 160
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH]
parser: Input 'RECURSIVE' in state 160
parser: Shift 'RECURSIVE', go to state 181
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE]
parser: Input 'ID' in state 181
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 181.
parser: ... then shift 'nm', go to state 337
parser: Shift 'LP', go to state 182
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm LP]
parser: Input 'ID' in state 182
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm LP ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 182.
parser: ... then shift 'nm', go to state 338
parser: Reduce 226 [collate ::=].
parser: ... then shift 'collate', go to state 281
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 225
parser: Reduce 225 [eidlist ::= nm collate sortorder], go to state 182.
parser: ... then shift 'eidlist', go to state 408
parser: Shift 'COMMA', go to state 237
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm LP eidlist COMMA]
parser: Input 'ID' in state 237
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm LP eidlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 237.
parser: ... then shift 'nm', go to state 339
parser: Reduce 226 [collate ::=].
parser: ... then shift 'collate', go to state 282
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 224
parser: Reduce 224 [eidlist ::= eidlist COMMA nm collate sortorder], go to state 182.
parser: ... then shift 'eidlist', go to state 408
parser: Shift 'COMMA', go to state 237
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm LP eidlist COMMA]
parser: Input 'ID' in state 237
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm LP eidlist COMMA ID]
parser: Input 'RP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 237.
parser: ... then shift 'nm', go to state 339
parser: Reduce 226 [collate ::=].
parser: ... then shift 'collate', go to state 282
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 224
parser: Reduce 224 [eidlist ::= eidlist COMMA nm collate sortorder], go to state 182.
parser: ... then shift 'eidlist', go to state 408
parser: Shift 'RP', pending reduce 223
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm LP eidlist RP]
parser: Input 'AS' with pending reduce 223
parser: Reduce 223 [eidlist_opt ::= LP eidlist RP], go to state 337.
parser: ... then shift 'eidlist_opt', go to state 487
parser: Shift 'AS', go to state 486
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS]
parser: Input 'LP' in state 486
parser: Shift 'LP', go to state 39
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP]
parser: Input 'SELECT' in state 39
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP SELECT distinct selcollist COMMA]
parser: Input 'NULL' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'NULL', pending reduce 167
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP SELECT distinct sclp scanpt NULL]
parser: Input 'FROM' with pending reduce 167
parser: Reduce 167 [term ::= NULL|FLOAT|BLOB], go to state 77.
parser: ... then shift 'term', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'UNION' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 39.
parser: ... then shift 'oneselect', go to state 264
parser: Shift 'UNION', go to state 533
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP oneselect UNION]
parser: Input 'SELECT' in state 533
parser: Reduce 84 [multiselect_op ::= UNION], go to state 264.
parser: ... then shift 'multiselect_op', go to state 195
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP oneselect multiselect_op SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP oneselect multiselect_op SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP oneselect multiselect_op SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP oneselect multiselect_op SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP oneselect multiselect_op SELECT distinct selcollist COMMA]
parser: Input 'NULL' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'NULL', pending reduce 167
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP oneselect multiselect_op SELECT distinct sclp scanpt NULL]
parser: Input 'FROM' with pending reduce 167
parser: Reduce 167 [term ::= NULL|FLOAT|BLOB], go to state 77.
parser: ... then shift 'term', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP oneselect multiselect_op SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP oneselect multiselect_op SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Shift 'COMMA', pending reduce 116
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP oneselect multiselect_op SELECT distinct selcollist FROM seltablist COMMA]
parser: Input 'ID' with pending reduce 116
parser: Reduce 116 [joinop ::= COMMA|JOIN], go to state 263.
parser: ... then shift 'joinop', pending reduce 102
parser: Reduce 102 [stl_prefix ::= seltablist joinop], go to state 197.
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP oneselect multiselect_op SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'RP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 195.
parser: ... then shift 'oneselect', pending reduce 83
parser: Reduce 83 [selectnowith ::= selectnowith multiselect_op oneselect], go to state 39.
parser: ... then shift 'selectnowith', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 39.
parser: ... then shift 'select', go to state 485
parser: Shift 'RP', pending reduce 286
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE nm eidlist_opt AS LP select RP]
parser: Input 'SELECT' with pending reduce 286
parser: Reduce 286 [wqlist ::= nm eidlist_opt AS LP select RP], go to state 181.
parser: ... then shift 'wqlist', go to state 142
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE wqlist SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 96
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE wqlist SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE wqlist SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE wqlist SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Shift 'AS', go to state 242
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE wqlist SELECT distinct selcollist FROM stl_prefix nm dbnm AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS WITH RECURSIVE wqlist SELECT distinct selcollist FROM stl_prefix nm dbnm AS ID]
parser: Input 'SEMI' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 243.
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 142.
parser: ... then shift 'oneselect', go to state 258
parser: Reduce 81 [select ::= WITH RECURSIVE wqlist selectnowith], go to state 37.
parser: ... then shift 'select', pending reduce 77
parser: Reduce 77 [cmd ::= createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[;CREATE INDEX field7 on t0 (c0);;CREATE INDEX test009 on t0 (c0, c0);;DELETE FROM t1 WHERE rowid IN (10,11,12) ;;
;DROP TABLE t1;;UPDATE t0 SET c0=zeroblob(900) WHERE rowid BETWEEN 100 AND 110;;CREATE TABLE field8(test010 TEXT, CHECK(test010 BETWEEN 0 AND +test010));;SELECT count(*) FROM field8;;INSERT INTO field8(test010) VALUES(NULL),('xyz'),(5),(x'303132'),(4.75);;CREATE TABLE field9(test011 TEXT, CHECK(test011 BETWEEN +test011 AND 999999));;SELECT quote(following) FROM over ORDER BY rowid;;SELECT quote(following) FROM over ORDER BY rowid;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'CREATE' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[ecmd CREATE]
parser: Input 'INDEX' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 1.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 221 [uniqueflag ::=].
parser: ... then shift 'uniqueflag', go to state 453
parser: Shift 'INDEX', go to state 315
parser: Return. Stack=[ecmd createkw uniqueflag INDEX]
parser: Input 'ID' in state 315
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 225
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists ID]
parser: Input 'ON' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 225.
parser: ... then shift 'nm', go to state 314
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 452
parser: Shift 'ON', go to state 224
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON]
parser: Input 'ID' in state 224
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 224.
parser: ... then shift 'nm', go to state 451
parser: Shift 'LP', go to state 18
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP]
parser: Input 'ID' in state 18
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 18.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 18.
parser: ... then shift 'sortlist', go to state 400
parser: Shift 'RP', go to state 313
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP]
parser: Input 'SEMI' in state 313
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', pending reduce 219
parser: Reduce 219 [cmd ::= createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP where_opt], go to state 1.
parser: [[[INSERT INTO 'main'.sqlite_master VALUES('index','field7','t0',#1,'CREATE INDEX field7 on t0 (c0)');]]]
parser: Input 'INSERT' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 156
parser: Reduce 156 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 427
parser: Shift 'INTO', go to state 164
parser: Return. Stack=[with insert_cmd INTO]
parser: Input 'STRING' in state 164
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with insert_cmd INTO STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 164.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with insert_cmd INTO nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO nm DOT ID]
parser: Input 'VALUES' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 164.
parser: ... then shift 'xfullname', go to state 298
parser: Reduce 158 [idlist_opt ::=].
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'VALUES', go to state 526
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES]
parser: Input 'LP' in state 526
parser: Shift 'LP', go to state 28
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP]
parser: Input 'STRING' in state 28
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 28.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'VARIABLE' in state 107
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA VARIABLE]
parser: Input 'COMMA' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'RP' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'RP', pending reduce 89
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist RP]
parser: Input 'SEMI' with pending reduce 89
parser: Reduce 89 [values ::= VALUES LP nexprlist RP], go to state 35.
parser: ... then shift 'values', go to state 532
parser: Reduce 348 [oneselect ::= values], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 152 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 150
parser: Reduce 150 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='field7' AND type='index' ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'STRING' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr EQ STRING]
parser: Input 'ORDER' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE INDEX field7 on t0 (c0)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'INDEX' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 221 [uniqueflag ::=].
parser: ... then shift 'uniqueflag', go to state 453
parser: Shift 'INDEX', go to state 315
parser: Return. Stack=[createkw uniqueflag INDEX]
parser: Input 'ID' in state 315
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 225
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists ID]
parser: Input 'ON' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 225.
parser: ... then shift 'nm', go to state 314
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 452
parser: Shift 'ON', go to state 224
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON]
parser: Input 'ID' in state 224
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 224.
parser: ... then shift 'nm', go to state 451
parser: Shift 'LP', go to state 18
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP]
parser: Input 'ID' in state 18
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 18.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 18.
parser: ... then shift 'sortlist', go to state 400
parser: Shift 'RP', go to state 313
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP]
parser: Input 'SEMI' in state 313
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', pending reduce 219
parser: Reduce 219 [cmd ::= createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[;CREATE INDEX test009 on t0 (c0, c0);;DELETE FROM t1 WHERE rowid IN (10,11,12) ;;
;DROP TABLE t1;;UPDATE t0 SET c0=zeroblob(900) WHERE rowid BETWEEN 100 AND 110;;CREATE TABLE field8(test010 TEXT, CHECK(test010 BETWEEN 0 AND +test010));;SELECT count(*) FROM field8;;INSERT INTO field8(test010) VALUES(NULL),('xyz'),(5),(x'303132'),(4.75);;CREATE TABLE field9(test011 TEXT, CHECK(test011 BETWEEN +test011 AND 999999));;SELECT quote(following) FROM over ORDER BY rowid;;SELECT quote(following) FROM over ORDER BY rowid;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'CREATE' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[ecmd CREATE]
parser: Input 'INDEX' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 1.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 221 [uniqueflag ::=].
parser: ... then shift 'uniqueflag', go to state 453
parser: Shift 'INDEX', go to state 315
parser: Return. Stack=[ecmd createkw uniqueflag INDEX]
parser: Input 'ID' in state 315
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 225
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists ID]
parser: Input 'ON' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 225.
parser: ... then shift 'nm', go to state 314
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 452
parser: Shift 'ON', go to state 224
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON]
parser: Input 'ID' in state 224
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 224.
parser: ... then shift 'nm', go to state 451
parser: Shift 'LP', go to state 18
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP]
parser: Input 'ID' in state 18
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 18.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 18.
parser: ... then shift 'sortlist', go to state 400
parser: Shift 'COMMA', go to state 95
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist COMMA]
parser: Input 'ID' in state 95
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist COMMA ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 95.
parser: ... then shift 'expr', go to state 14
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 129
parser: Reduce 129 [sortlist ::= sortlist COMMA expr sortorder], go to state 18.
parser: ... then shift 'sortlist', go to state 400
parser: Shift 'RP', go to state 313
parser: Return. Stack=[ecmd createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP]
parser: Input 'SEMI' in state 313
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', pending reduce 219
parser: Reduce 219 [cmd ::= createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP where_opt], go to state 1.
parser: [[[INSERT INTO 'main'.sqlite_master VALUES('index','test009','t0',#1,'CREATE INDEX test009 on t0 (c0, c0)');]]]
parser: Input 'INSERT' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 156
parser: Reduce 156 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 427
parser: Shift 'INTO', go to state 164
parser: Return. Stack=[with insert_cmd INTO]
parser: Input 'STRING' in state 164
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with insert_cmd INTO STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 164.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with insert_cmd INTO nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO nm DOT ID]
parser: Input 'VALUES' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 164.
parser: ... then shift 'xfullname', go to state 298
parser: Reduce 158 [idlist_opt ::=].
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'VALUES', go to state 526
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES]
parser: Input 'LP' in state 526
parser: Shift 'LP', go to state 28
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP]
parser: Input 'STRING' in state 28
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 28.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'VARIABLE' in state 107
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA VARIABLE]
parser: Input 'COMMA' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'RP' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'RP', pending reduce 89
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist RP]
parser: Input 'SEMI' with pending reduce 89
parser: Reduce 89 [values ::= VALUES LP nexprlist RP], go to state 35.
parser: ... then shift 'values', go to state 532
parser: Reduce 348 [oneselect ::= values], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 152 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 150
parser: Reduce 150 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='test009' AND type='index' ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'STRING' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr EQ STRING]
parser: Input 'ORDER' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE INDEX test009 on t0 (c0, c0)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'INDEX' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 221 [uniqueflag ::=].
parser: ... then shift 'uniqueflag', go to state 453
parser: Shift 'INDEX', go to state 315
parser: Return. Stack=[createkw uniqueflag INDEX]
parser: Input 'ID' in state 315
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 225
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists ID]
parser: Input 'ON' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 225.
parser: ... then shift 'nm', go to state 314
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 452
parser: Shift 'ON', go to state 224
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON]
parser: Input 'ID' in state 224
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 224.
parser: ... then shift 'nm', go to state 451
parser: Shift 'LP', go to state 18
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP]
parser: Input 'ID' in state 18
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 18.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 18.
parser: ... then shift 'sortlist', go to state 400
parser: Shift 'COMMA', go to state 95
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist COMMA]
parser: Input 'ID' in state 95
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist COMMA ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 95.
parser: ... then shift 'expr', go to state 14
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 129
parser: Reduce 129 [sortlist ::= sortlist COMMA expr sortorder], go to state 18.
parser: ... then shift 'sortlist', go to state 400
parser: Shift 'RP', go to state 313
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP]
parser: Input 'SEMI' in state 313
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', pending reduce 219
parser: Reduce 219 [cmd ::= createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[;DELETE FROM t1 WHERE rowid IN (10,11,12) ;;
;DROP TABLE t1;;UPDATE t0 SET c0=zeroblob(900) WHERE rowid BETWEEN 100 AND 110;;CREATE TABLE field8(test010 TEXT, CHECK(test010 BETWEEN 0 AND +test010));;SELECT count(*) FROM field8;;INSERT INTO field8(test010) VALUES(NULL),('xyz'),(5),(x'303132'),(4.75);;CREATE TABLE field9(test011 TEXT, CHECK(test011 BETWEEN +test011 AND 999999));;SELECT quote(following) FROM over ORDER BY rowid;;SELECT quote(following) FROM over ORDER BY rowid;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'DELETE' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'DELETE', go to state 430
parser: Return. Stack=[ecmd with DELETE]
parser: Input 'FROM' in state 430
parser: Shift 'FROM', go to state 166
parser: Return. Stack=[ecmd with DELETE FROM]
parser: Input 'ID' in state 166
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd with DELETE FROM ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 166.
parser: ... then shift 'nm', go to state 393
parser: Reduce 112 [xfullname ::= nm], go to state 166.
parser: ... then shift 'xfullname', go to state 272
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 300
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[ecmd with DELETE FROM xfullname indexed_opt WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd with DELETE FROM xfullname indexed_opt WHERE ID]
parser: Input 'IN' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'IN', pending reduce 200
parser: Return. Stack=[ecmd with DELETE FROM xfullname indexed_opt WHERE expr IN]
parser: Input 'LP' with pending reduce 200
parser: Reduce 200 [in_op ::= IN], go to state 63.
parser: ... then shift 'in_op', go to state 209
parser: Shift 'LP', go to state 3
parser: Return. Stack=[ecmd with DELETE FROM xfullname indexed_opt WHERE expr in_op LP]
parser: Input 'INTEGER' in state 3
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[ecmd with DELETE FROM xfullname indexed_opt WHERE expr in_op LP INTEGER]
parser: Input 'COMMA' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 3.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 3.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[ecmd with DELETE FROM xfullname indexed_opt WHERE expr in_op LP nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[ecmd with DELETE FROM xfullname indexed_opt WHERE expr in_op LP nexprlist COMMA INTEGER]
parser: Input 'COMMA' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 3.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[ecmd with DELETE FROM xfullname indexed_opt WHERE expr in_op LP nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[ecmd with DELETE FROM xfullname indexed_opt WHERE expr in_op LP nexprlist COMMA INTEGER]
parser: Input 'RP' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 3.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 3.
parser: ... then shift 'exprlist', go to state 519
parser: Shift 'RP', pending reduce 202
parser: Return. Stack=[ecmd with DELETE FROM xfullname indexed_opt WHERE expr in_op LP exprlist RP]
parser: Input 'SEMI' with pending reduce 202
parser: Reduce 202 [expr ::= expr in_op LP exprlist RP], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 300.
parser: ... then shift 'where_opt', pending reduce 142
parser: Reduce 142 [cmd ::= with DELETE FROM xfullname indexed_opt where_opt], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;
;DROP TABLE t1;;UPDATE t0 SET c0=zeroblob(900) WHERE rowid BETWEEN 100 AND 110;;CREATE TABLE field8(test010 TEXT, CHECK(test010 BETWEEN 0 AND +test010));;SELECT count(*) FROM field8;;INSERT INTO field8(test010) VALUES(NULL),('xyz'),(5),(x'303132'),(4.75);;CREATE TABLE field9(test011 TEXT, CHECK(test011 BETWEEN +test011 AND 999999));;SELECT quote(following) FROM over ORDER BY rowid;;SELECT quote(following) FROM over ORDER BY rowid;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'SEMI' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[ecmd SEMI]
parser: Input 'DROP' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 1.
parser: ... then shift 'ecmd', pending reduce 318
parser: Reduce 318 [cmdlist ::= cmdlist ecmd], go to state 0.
parser: ... then shift 'cmdlist', go to state 1
parser: Shift 'DROP', go to state 385
parser: Return. Stack=[cmdlist DROP]
parser: Input 'TABLE' in state 385
parser: Shift 'TABLE', go to state 304
parser: Return. Stack=[cmdlist DROP TABLE]
parser: Input 'ID' in state 304
parser: Reduce 76 [ifexists ::=].
parser: ... then shift 'ifexists', go to state 171
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[cmdlist DROP TABLE ifexists ID]
parser: Input 'SEMI' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 171.
parser: ... then shift 'nm', go to state 459
parser: Reduce 110 [fullname ::= nm], go to state 171.
parser: ... then shift 'fullname', pending reduce 74
parser: Reduce 74 [cmd ::= DROP TABLE ifexists fullname], go to state 1.
parser: [[[DELETE FROM 'main'.sqlite_master WHERE tbl_name='t1' and type!='trigger']]]
parser: Input 'DELETE' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'DELETE', go to state 430
parser: Return. Stack=[with DELETE]
parser: Input 'FROM' in state 430
parser: Shift 'FROM', go to state 166
parser: Return. Stack=[with DELETE FROM]
parser: Input 'STRING' in state 166
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with DELETE FROM STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 166.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with DELETE FROM nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with DELETE FROM nm DOT ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 166.
parser: ... then shift 'xfullname', go to state 272
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 300
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with DELETE FROM xfullname indexed_opt WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with DELETE FROM xfullname indexed_opt WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with DELETE FROM xfullname indexed_opt WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with DELETE FROM xfullname indexed_opt WHERE expr EQ STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[with DELETE FROM xfullname indexed_opt WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with DELETE FROM xfullname indexed_opt WHERE expr AND ID]
parser: Input 'NE' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'NE', go to state 117
parser: Return. Stack=[with DELETE FROM xfullname indexed_opt WHERE expr AND expr NE]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with DELETE FROM xfullname indexed_opt WHERE expr AND expr NE STRING]
parser: Input 'SEMI' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 300.
parser: ... then shift 'where_opt', pending reduce 142
parser: Reduce 142 [cmd ::= with DELETE FROM xfullname indexed_opt where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: [[[UPDATE 'main'.sqlite_master SET rootpage=6 WHERE #2 AND rootpage=#2]]]
parser: Input 'UPDATE' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'STRING' in state 299
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', go to state 165
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with UPDATE orconf STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 165.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 165.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 428
parser: Shift 'SET', go to state 153
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 153
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 153.
parser: ... then shift 'nm', go to state 442
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'INTEGER' in state 84
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ INTEGER]
parser: Input 'WHERE' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 84.
parser: ... then shift 'term', go to state 58
parser: Reduce 148 [setlist ::= nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'VARIABLE' in state 93
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE VARIABLE]
parser: Input 'AND' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND expr EQ]
parser: Input 'VARIABLE' in state 117
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND expr EQ VARIABLE]
parser: Input 'SEMI' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 145
parser: Reduce 145 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: [[[UPDATE 'main'.sqlite_master SET rootpage=5 WHERE #2 AND rootpage=#2]]]
parser: Input 'UPDATE' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'STRING' in state 299
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', go to state 165
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with UPDATE orconf STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 165.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 165.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 428
parser: Shift 'SET', go to state 153
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 153
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 153.
parser: ... then shift 'nm', go to state 442
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'INTEGER' in state 84
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ INTEGER]
parser: Input 'WHERE' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 84.
parser: ... then shift 'term', go to state 58
parser: Reduce 148 [setlist ::= nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'VARIABLE' in state 93
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE VARIABLE]
parser: Input 'AND' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND expr EQ]
parser: Input 'VARIABLE' in state 117
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND expr EQ VARIABLE]
parser: Input 'SEMI' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 145
parser: Reduce 145 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdlist cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping cmdlist
parser: [[[;UPDATE t0 SET c0=zeroblob(900) WHERE rowid BETWEEN 100 AND 110;;CREATE TABLE field8(test010 TEXT, CHECK(test010 BETWEEN 0 AND +test010));;SELECT count(*) FROM field8;;INSERT INTO field8(test010) VALUES(NULL),('xyz'),(5),(x'303132'),(4.75);;CREATE TABLE field9(test011 TEXT, CHECK(test011 BETWEEN +test011 AND 999999));;SELECT quote(following) FROM over ORDER BY rowid;;SELECT quote(following) FROM over ORDER BY rowid;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'UPDATE' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[ecmd with UPDATE]
parser: Input 'ID' in state 299
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', go to state 165
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd with UPDATE orconf ID]
parser: Input 'SET' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 165.
parser: ... then shift 'nm', go to state 393
parser: Reduce 112 [xfullname ::= nm], go to state 165.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 428
parser: Shift 'SET', go to state 153
parser: Return. Stack=[ecmd with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 153
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 153.
parser: ... then shift 'nm', go to state 442
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[ecmd with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'ID' in state 84
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd with UPDATE orconf xfullname indexed_opt SET nm EQ ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[ecmd with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP]
parser: Input 'INTEGER' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[ecmd with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct INTEGER]
parser: Input 'RP' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 11.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[ecmd with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct exprlist RP]
parser: Input 'WHERE' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 84.
parser: ... then shift 'expr', go to state 58
parser: Reduce 148 [setlist ::= nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[ecmd with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'BETWEEN' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'BETWEEN', pending reduce 197
parser: Return. Stack=[ecmd with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr BETWEEN]
parser: Input 'INTEGER' with pending reduce 197
parser: Reduce 197 [between_op ::= BETWEEN], go to state 63.
parser: ... then shift 'between_op', go to state 109
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[ecmd with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr between_op INTEGER]
parser: Input 'AND' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 109.
parser: ... then shift 'term', go to state 72
parser: Shift 'AND', go to state 108
parser: Return. Stack=[ecmd with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr between_op term AND]
parser: Input 'INTEGER' in state 108
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[ecmd with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr between_op term AND INTEGER]
parser: Input 'SEMI' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 108.
parser: ... then shift 'term', go to state 126
parser: Reduce 199 [expr ::= expr between_op expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 145
parser: Reduce 145 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;CREATE TABLE field8(test010 TEXT, CHECK(test010 BETWEEN 0 AND +test010));;SELECT count(*) FROM field8;;INSERT INTO field8(test010) VALUES(NULL),('xyz'),(5),(x'303132'),(4.75);;CREATE TABLE field9(test011 TEXT, CHECK(test011 BETWEEN +test011 AND 999999));;SELECT quote(following) FROM over ORDER BY rowid;;SELECT quote(following) FROM over ORDER BY rowid;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'CREATE' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[ecmd CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 1.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[ecmd createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 1.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[ecmd create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd create_table LP ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[ecmd create_table LP nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[ecmd create_table LP columnlist COMMA]
parser: Input 'CHECK' in state 34
parser: Shift 'CHECK', go to state 468
parser: Return. Stack=[ecmd create_table LP columnlist COMMA CHECK]
parser: Input 'LP' in state 468
parser: Shift 'LP', go to state 88
parser: Return. Stack=[ecmd create_table LP columnlist COMMA CHECK LP]
parser: Input 'ID' in state 88
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd create_table LP columnlist COMMA CHECK LP ID]
parser: Input 'BETWEEN' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 88.
parser: ... then shift 'expr', go to state 45
parser: Shift 'BETWEEN', pending reduce 197
parser: Return. Stack=[ecmd create_table LP columnlist COMMA CHECK LP expr BETWEEN]
parser: Input 'INTEGER' with pending reduce 197
parser: Reduce 197 [between_op ::= BETWEEN], go to state 45.
parser: ... then shift 'between_op', go to state 109
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[ecmd create_table LP columnlist COMMA CHECK LP expr between_op INTEGER]
parser: Input 'AND' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 109.
parser: ... then shift 'term', go to state 72
parser: Shift 'AND', go to state 108
parser: Return. Stack=[ecmd create_table LP columnlist COMMA CHECK LP expr between_op term AND]
parser: Input 'PLUS' in state 108
parser: Shift 'PLUS', go to state 103
parser: Return. Stack=[ecmd create_table LP columnlist COMMA CHECK LP expr between_op term AND PLUS]
parser: Input 'ID' in state 103
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd create_table LP columnlist COMMA CHECK LP expr between_op term AND PLUS ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 103.
parser: ... then shift 'expr', go to state 147
parser: Reduce 196 [expr ::= PLUS|MINUS expr], go to state 108.
parser: ... then shift 'expr', go to state 126
parser: Reduce 199 [expr ::= expr between_op expr AND expr], go to state 88.
parser: ... then shift 'expr', go to state 45
parser: Shift 'RP', go to state 326
parser: Return. Stack=[ecmd create_table LP columnlist COMMA CHECK LP expr RP]
parser: Input 'RP' in state 326
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 65
parser: Reduce 65 [tcons ::= CHECK LP expr RP onconf], go to state 34.
parser: ... then shift 'tcons', go to state 278
parser: Reduce 341 [conslist_opt ::= COMMA conslist], go to state 362.
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[ecmd create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: [[[UPDATE 'main'.sqlite_master SET type='table', name='field8', tbl_name='field8', rootpage=#2, sql='CREATE TABLE field8(test010 TEXT, CHECK(test010 BETWEEN 0 AND +test010))' WHERE rowid=#1]]]
parser: Input 'UPDATE' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'STRING' in state 299
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', go to state 165
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with UPDATE orconf STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 165.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 165.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 428
parser: Shift 'SET', go to state 153
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 153
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 153.
parser: ... then shift 'nm', go to state 442
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'STRING' in state 84
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 84.
parser: ... then shift 'term', go to state 58
parser: Reduce 148 [setlist ::= nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'VARIABLE' in state 86
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ VARIABLE]
parser: Input 'COMMA' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 86.
parser: ... then shift 'expr', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'WHERE' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ]
parser: Input 'VARIABLE' in state 117
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ VARIABLE]
parser: Input 'SEMI' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 145
parser: Reduce 145 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='field8' AND type!='trigger' ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'STRING' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'NE' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'NE', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE STRING]
parser: Input 'ORDER' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE field8(test010 TEXT, CHECK(test010 BETWEEN 0 AND +test010))]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'CHECK' in state 34
parser: Shift 'CHECK', go to state 468
parser: Return. Stack=[create_table LP columnlist COMMA CHECK]
parser: Input 'LP' in state 468
parser: Shift 'LP', go to state 88
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP]
parser: Input 'ID' in state 88
parser: Shift 'ID', go to state 416
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP ID]
parser: Input 'BETWEEN' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 88.
parser: ... then shift 'expr', go to state 45
parser: Shift 'BETWEEN', pending reduce 197
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr BETWEEN]
parser: Input 'INTEGER' with pending reduce 197
parser: Reduce 197 [between_op ::= BETWEEN], go to state 45.
parser: ... then shift 'between_op', go to state 109
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr between_op INTEGER]
parser: Input 'AND' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 109.
parser: ... then shift 'term', go to state 72
parser: Shift 'AND', go to state 108
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr between_op term AND]
parser: Input 'PLUS' in state 108
parser: Shift 'PLUS', go to state 103
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr between_op term AND PLUS]
parser: Input 'ID' in state 103
parser: Shift 'ID', go to state 416
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr between_op term AND PLUS ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 103.
parser: ... then shift 'expr', go to state 147
parser: Reduce 196 [expr ::= PLUS|MINUS expr], go to state 108.
parser: ... then shift 'expr', go to state 126
parser: Reduce 199 [expr ::= expr between_op expr AND expr], go to state 88.
parser: ... then shift 'expr', go to state 45
parser: Shift 'RP', go to state 326
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr RP]
parser: Input 'RP' in state 326
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 65
parser: Reduce 65 [tcons ::= CHECK LP expr RP onconf], go to state 34.
parser: ... then shift 'tcons', go to state 278
parser: Reduce 341 [conslist_opt ::= COMMA conslist], go to state 362.
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[;SELECT count(*) FROM field8;;INSERT INTO field8(test010) VALUES(NULL),('xyz'),(5),(x'303132'),(4.75);;CREATE TABLE field9(test011 TEXT, CHECK(test011 BETWEEN +test011 AND 999999));;SELECT quote(following) FROM over ORDER BY rowid;;SELECT quote(following) FROM over ORDER BY rowid;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'SELECT' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[ecmd SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd SELECT distinct sclp scanpt ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[ecmd SELECT distinct sclp scanpt ID LP]
parser: Input 'STAR' in state 266
parser: Shift 'STAR', go to state 477
parser: Return. Stack=[ecmd SELECT distinct sclp scanpt ID LP STAR]
parser: Input 'RP' in state 477
parser: Shift 'RP', go to state 191
parser: Return. Stack=[ecmd SELECT distinct sclp scanpt ID LP STAR RP]
parser: Input 'FROM' in state 191
parser: Reduce 174 [expr ::= ID|INDEXED LP STAR RP], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[ecmd SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'SEMI' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 1.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 1.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;INSERT INTO field8(test010) VALUES(NULL),('xyz'),(5),(x'303132'),(4.75);;CREATE TABLE field9(test011 TEXT, CHECK(test011 BETWEEN +test011 AND 999999));;SELECT quote(following) FROM over ORDER BY rowid;;SELECT quote(following) FROM over ORDER BY rowid;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'INSERT' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[ecmd with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 156
parser: Reduce 156 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 427
parser: Shift 'INTO', go to state 164
parser: Return. Stack=[ecmd with insert_cmd INTO]
parser: Input 'ID' in state 164
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd with insert_cmd INTO ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 164.
parser: ... then shift 'nm', go to state 393
parser: Reduce 112 [xfullname ::= nm], go to state 164.
parser: ... then shift 'xfullname', go to state 298
parser: Shift 'LP', go to state 173
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname LP]
parser: Input 'ID' in state 173
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname LP ID]
parser: Input 'RP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 173.
parser: ... then shift 'nm', pending reduce 161
parser: Reduce 161 [idlist ::= nm], go to state 173.
parser: ... then shift 'idlist', go to state 397
parser: Shift 'RP', pending reduce 159
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname LP idlist RP]
parser: Input 'VALUES' with pending reduce 159
parser: Reduce 159 [idlist_opt ::= LP idlist RP], go to state 298.
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'VALUES', go to state 526
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt VALUES]
parser: Input 'LP' in state 526
parser: Shift 'LP', go to state 28
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt VALUES LP]
parser: Input 'NULL' in state 28
parser: Shift 'NULL', pending reduce 167
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt VALUES LP NULL]
parser: Input 'RP' with pending reduce 167
parser: Reduce 167 [term ::= NULL|FLOAT|BLOB], go to state 28.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'RP', pending reduce 89
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist RP]
parser: Input 'COMMA' with pending reduce 89
parser: Reduce 89 [values ::= VALUES LP nexprlist RP], go to state 35.
parser: ... then shift 'values', go to state 532
parser: Shift 'COMMA', go to state 531
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt values COMMA]
parser: Input 'LP' in state 531
parser: Shift 'LP', go to state 29
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt values COMMA LP]
parser: Input 'STRING' in state 29
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt values COMMA LP STRING]
parser: Input 'RP' in state 537
parser: Reduce 168 [term ::= STRING], go to state 29.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 29.
parser: ... then shift 'nexprlist', go to state 414
parser: Shift 'RP', pending reduce 90
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt values COMMA LP nexprlist RP]
parser: Input 'COMMA' with pending reduce 90
parser: Reduce 90 [values ::= values COMMA LP nexprlist RP], go to state 35.
parser: ... then shift 'values', go to state 532
parser: Shift 'COMMA', go to state 531
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt values COMMA]
parser: Input 'LP' in state 531
parser: Shift 'LP', go to state 29
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt values COMMA LP]
parser: Input 'INTEGER' in state 29
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt values COMMA LP INTEGER]
parser: Input 'RP' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 29.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 29.
parser: ... then shift 'nexprlist', go to state 414
parser: Shift 'RP', pending reduce 90
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt values COMMA LP nexprlist RP]
parser: Input 'COMMA' with pending reduce 90
parser: Reduce 90 [values ::= values COMMA LP nexprlist RP], go to state 35.
parser: ... then shift 'values', go to state 532
parser: Shif
Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f891ac2a859 in __GI_abort () at abort.c:79
#2  0x00007f891ac2a729 in __assert_fail_base (fmt=0x7f891adc0588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21d368 "pIn1!=pIn3", file=0x22873d "sqlite3.c", line=85580, function=<optimized out>) at assert.c:92
#3  0x00007f891ac3bfd6 in __GI___assert_fail (assertion=0x21d368 "pIn1!=pIn3", file=0x22873d "sqlite3.c", line=85580, function=0x216524 "int sqlite3VdbeExec(Vdbe *)") at assert.c:101
#4  0x00000000003c5c6a in sqlite3VdbeExec (p=0xaf3fc0) at sqlite3.c:85580
#5  0x0000000000411104 in sqlite3Step (p=0xaf3fc0) at sqlite3.c:81930
#6  0x000000000029128d in sqlite3_step (pStmt=0xaf3fc0) at sqlite3.c:81995
#7  0x00000000002570b9 in main (argc=1, argv=0x7fffd770c198) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 56804] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
