GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000641,sig:11,src:021304+023361,time:35965329,execs:6928908,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT following FROM over WHERE rowid==2
;]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      1    0    1 0             01 usesStmtJournal=0
   9 Goto             0    1    0               00 
   1 OpenRead         0    2    1 1             00 root=2 iDb=1; over
   2 Explain          2    0    0 SEARCH TABLE over USING INTEGER PRIMARY KEY (rowid=?) 00 
   3 Integer          2    1    0               00 r[1]=2
REG[1] =  i:2
   4 SeekRowid        0    7    1               00 intkey=r[1]
REG[1] =  i:2
   7 Halt             0    0    0               00 
SQL: [;INSERT INTO over(following) VALUES (1);]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      1    1    1 0             01 usesStmtJournal=0
   8 Goto             0    1    0               00 
   1 OpenWrite        0    2    1 1             00 root=2 iDb=1; over
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 MakeRecord       2    1    3 D             00 r[3]=mkrec(r[2])
REG[3] =  s2[0209..]
   5 Insert           0    3    1 over          39 intkey=r[1] data=r[3]
REG[3] =  s2[0209..]
REG[1] =  i:1
   6 Halt             0    0    0               00 
SQL: [;SELECT rowid, * FROM t1;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    3 0             01 usesStmtJournal=0
  13 Goto             0    1    0               00 
   1 OpenRead         0    3    0 4             00 root=3 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   11    0               00 
  11 Halt             0    0    0               00 
SQL: [DELETE FROM over WHERE following=$following
;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      1    1    1 0             01 usesStmtJournal=0
  13 Variable         1    3    0 $following    00 r[3]=parameter(1,$following)
REG[3] =  NULL
  14 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    2    1 1             00 root=2 iDb=1; over
   3 Explain          3    0    0 SCAN TABLE over 00 
   4 Rewind           0   11    0               00 
   5 Column           0    0    2               00 r[2]=over.following
REG[2] =  i:1
   6 Ne               3   10    2 (BINARY)      54 if r[2]!=r[3] goto 10
REG[3] =  NULL
REG[2] =  i:1
  10 Next             0    5    0               01 
  11 Halt             0    0    0               00 
SQL: [

;SELECT following, sum(following) over (
    ORDER BY following
    ROWS BETWEEN 1 following AND 0 following
  ) FROM over

;]
VDBE Trace:
   0 Init             0  104    0               00 Start at 104
 104 Transaction      1    0    1 0             01 usesStmtJournal=0
 105 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenEphemeral    1    3    0               00 nColumn=3
   3 OpenDup          2    1    0               00 
   4 OpenDup          3    1    0               00 
   5 OpenDup          4    1    0               00 
   6 InitCoroutine    3   28    7               00 subquery_2
  28 Integer          1   10    0               00 r[10]=1
REG[10] =  i:1
  29 Explain         29    0    0 SCAN SUBQUERY 2 00 
  30 InitCoroutine    3    0    7               00 
  31 Yield            3   74    0               00 next row of subquery_2
REG[3] =  i:6
REG[3] =  i:31
   7 Explain          7    0    0 CO-ROUTINE 2  00 
   8 SorterOpen       6    5    0 k(1,B)        00 
   9 OpenRead         0    2    1 1             00 root=2 iDb=1; over
  10 Explain         10    7    0 SCAN TABLE over 00 
  11 Rewind           0   18    0               00 
  12 Column           0    0    5               00 r[5]=over.following
REG[5] =  i:1
  13 Column           0    0    6               00 r[6]=over.following
REG[6] =  i:1
  14 Column           0    0    4               00 r[4]=over.following
REG[4] =  i:1
  15 MakeRecord       4    3    8               00 r[8]=mkrec(r[4..6])
REG[8] =  s4[04090909....]
  16 SorterInsert     6    8    4 3             00 key=r[8]
REG[8] =  s4[04090909....]
  17 Next             0   12    0               01 
  18 Explain         18    7    0 USE TEMP B-TREE FOR ORDER BY 00 
  19 OpenPseudo       7    9    5               00 5 columns in r[9]
  20 SorterSort       6   27    0               00 
  21 SorterData       6    9    7               00 r[9]=data
  22 Column           7    0    7               00 r[7]=
REG[7] =  i:1
  23 Column           7    2    6               00 r[6]=
REG[6] =  i:1
  24 Column           7    1    5               00 r[5]=
REG[5] =  i:1
  25 Yield            3    0    0               00 
REG[3] =  i:31
REG[3] =  i:25
  32 Copy             5   12    0               00 r[12]=r[5]
REG[12] =  i:1
  33 Copy             6   13    0               00 r[13]=r[6]
REG[13] =  i:1
  34 Copy             7   14    0               00 r[14]=r[7]
REG[14] =  i:1
  35 MakeRecord      12    3   15               00 r[15]=mkrec(r[12..14])
REG[15] =  s4[04090909....]
  36 NewRowid         2   16    0               00 r[16]=rowid
REG[16] =  i:1
  37 Insert           2   15   16               00 intkey=r[16] data=r[15]
REG[15] =  s4[04090909....]
REG[16] =  i:1
  38 Ne              10   61   16               00 if r[16]!=r[10] goto 61
REG[10] =  i:1
REG[16] =  i:1
  39 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
  40 Integer          1   17    0               00 r[17]=1
REG[17] =  i:1
  41 Integer          0   20    0               00 r[20]=0
REG[20] =  i:0
  42 MustBeInt       17   44    0               00 
REG[17] =  i:1
  43 Ge              20   45   17               00 if r[17]>=r[20] goto 45
REG[20] =  i:0
REG[17] =  i:1
  45 Integer          0   18    0               00 r[18]=0
REG[18] =  i:0
  46 Integer          0   20    0               00 r[20]=0
REG[20] =  i:0
  47 MustBeInt       18   49    0               00 
REG[18] =  i:0
  48 Ge              20   50   18               00 if r[18]>=r[20] goto 50
REG[20] =  i:0
REG[18] =  i:0
  50 Ge              17   56   18               00 if r[18]>=r[17] goto 56
REG[17] =  i:1
REG[18] =  i:0
  51 AggValue         1    1    2 sum(1)        00 r[2]=value N=1
  52 Rewind           1    1    0               00 
  53 Gosub           11   98    0               00 
REG[11] =  i:53
  98 Noop             0    0    0               00 inner-loop subroutine
  99 Column           1    0   21               00 r[21]=
REG[21] =  i:1
 100 Copy             2   22    0               00 r[22]=r[2]
REG[22] =  NULL
 101 ResultRow       21    2    0               00 output=r[21..22]
REG[21] =  i:1
REG[22] =  NULL
 102 Return          11    0    0               00 end inner-loop subroutine
REG[11] =  i:53
  54 ResetSorter      1    0    0               00 
  55 Goto             0   73    0               00 
  73 Goto             0   31    0               00 
  31 Yield            3   74    0               00 next row of subquery_2
REG[3] =  i:25
REG[3] =  i:31
  26 SorterNext       6   21    0               00 
  27 EndCoroutine     3    0    0               00 
REG[3] =  i:31
  74 Rewind           2   96    0               00 
  96 ResetSorter      1    0    0               00 
  97 Goto             0  103    0               00 
 103 Halt             0    0    0               00 
SQL: [;SELECT rowid, * FROM t1 WHERE rowid>1000;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    3 0             01 usesStmtJournal=0
  13 Integer       1000    1    0               00 r[1]=1000
REG[1] =  i:1000
  14 Goto             0    1    0               00 
   1 OpenRead         0    3    0 4             00 root=3 iDb=0; t1
   2 Explain          2    0    0 SEARCH TABLE t1 USING INTEGER PRIMARY KEY (rowid>?) 00 
   3 SeekGT           0   11    1               00 key=r[1]; pk
REG[1] =  i:1000
  11 Halt             0    0    0               00 
SQL: [SELECT c0, sum(c0) over (
    PARTITION BY c0
    ORDER BY c0 
    ROWS BETWEEN 1 following AND 1 following
  ) FROM t0

;]
VDBE Trace:
   0 Init             0  115    0               00 Start at 115
 115 Transaction      0    0    3 0             01 usesStmtJournal=0
 116 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenEphemeral    1    4    0               00 nColumn=4
   3 OpenDup          2    1    0               00 
   4 OpenDup          3    1    0               00 
   5 OpenDup          4    1    0               00 
   6 InitCoroutine    3   31    7               00 subquery_2
  31 Null             0   12   12               00 r[12..12]=NULL
REG[12] =  NULL
  32 Integer          1   13    0               00 r[13]=1
REG[13] =  i:1
  33 Explain         33    0    0 SCAN SUBQUERY 2 00 
  34 InitCoroutine    3    0    7               00 
  35 Yield            3   83    0               00 next row of subquery_2
REG[3] =  i:6
REG[3] =  i:35
   7 Explain          7    0    0 CO-ROUTINE 2  00 
   8 SorterOpen       6    7    0 k(2,B,B)      00 
   9 OpenRead         0    2    0 1             00 root=2 iDb=0; t0
  10 Explain         10    7    0 SCAN TABLE t0 00 
  11 Rewind           0   20    0               00 
  12 Column           0    0    6               00 r[6]=t0.c0
REG[6] =  NULL
  13 Column           0    0    7               00 r[7]=t0.c0
REG[7] =  NULL
  14 Column           0    0    8               00 r[8]=t0.c0
REG[8] =  NULL
  15 Column           0    0    4               00 r[4]=t0.c0
REG[4] =  NULL
  16 Column           0    0    5               00 r[5]=t0.c0
REG[5] =  NULL
  17 MakeRecord       4    5   10               00 r[10]=mkrec(r[4..8])
REG[10] =  s6[060000000000......]
  18 SorterInsert     6   10    4 5             00 key=r[10]
REG[10] =  s6[060000000000......]
  19 Next             0   12    0               01 
  12 Column           0    0    6               00 r[6]=t0.c0
REG[6] =  NULL
  13 Column           0    0    7               00 r[7]=t0.c0
REG[7] =  NULL
  14 Column           0    0    8               00 r[8]=t0.c0
REG[8] =  NULL
  15 Column           0    0    4               00 r[4]=t0.c0
REG[4] =  NULL
  16 Column           0    0    5               00 r[5]=t0.c0
REG[5] =  NULL
  17 MakeRecord       4    5   10               00 r[10]=mkrec(r[4..8])
REG[10] =  s6[060000000000......]
  18 SorterInsert     6   10    4 5             00 key=r[10]
REG[10] =  s6[060000000000......]
  19 Next             0   12    0               01 
  12 Column           0    0    6               00 r[6]=t0.c0
REG[6] =  NULL
  13 Column           0    0    7               00 r[7]=t0.c0
REG[7] =  NULL
  14 Column           0    0    8               00 r[8]=t0.c0
REG[8] =  NULL
  15 Column           0    0    4               00 r[4]=t0.c0
REG[4] =  NULL
  16 Column           0    0    5               00 r[5]=t0.c0
REG[5] =  NULL
  17 MakeRecord       4    5   10               00 r[10]=mkrec(r[4..8])
REG[10] =  s6[060000000000......]
  18 SorterInsert     6   10    4 5             00 key=r[10]
REG[10] =  s6[060000000000......]
  19 Next             0   12    0               01 
  20 Explain         20    7    0 USE TEMP B-TREE FOR ORDER BY 00 
  21 OpenPseudo       7   11    7               00 7 columns in r[11]
  22 SorterSort       6   30    0               00 
  23 SorterData       6   11    7               00 r[11]=data
  24 Column           7    1    9               00 r[9]=
REG[9] =  NULL
  25 Column           7    4    8               00 r[8]=
REG[8] =  NULL
  26 Column           7    3    7               00 r[7]=
REG[7] =  NULL
  27 Column           7    2    6               00 r[6]=
REG[6] =  NULL
  28 Yield            3    0    0               00 
REG[3] =  i:35
REG[3] =  i:28
  36 Copy             6   15    0               00 r[15]=r[6]
REG[15] =  NULL
  37 Copy             7   16    0               00 r[16]=r[7]
REG[16] =  NULL
  38 Copy             8   17    0               00 r[17]=r[8]
REG[17] =  NULL
  39 Copy             9   18    0               00 r[18]=r[9]
REG[18] =  NULL
  40 MakeRecord      15    4   19               00 r[19]=mkrec(r[15..18])
REG[19] =  s5[0500000000.....]
  41 Compare         16   12    1 k(1,B)        00 r[16] <-> r[12]
REG[16] =  NULL
REG[12] =  NULL
  42 Jump            43   45   43               00 
  45 NewRowid         2   20    0               00 r[20]=rowid
REG[20] =  i:1
  46 Insert           2   19   20               00 intkey=r[20] data=r[19]
REG[19] =  s5[0500000000.....]
REG[20] =  i:1
  47 Ne              13   70   20               00 if r[20]!=r[13] goto 70
REG[13] =  i:1
REG[20] =  i:1
  48 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
  49 Integer          1   21    0               00 r[21]=1
REG[21] =  i:1
  50 Integer          0   25    0               00 r[25]=0
REG[25] =  i:0
  51 MustBeInt       21   53    0               00 
REG[21] =  i:1
  52 Ge              25   54   21               00 if r[21]>=r[25] goto 54
REG[25] =  i:0
REG[21] =  i:1
  54 Integer          1   22    0               00 r[22]=1
REG[22] =  i:1
  55 Integer          0   25    0               00 r[25]=0
REG[25] =  i:0
  56 MustBeInt       22   58    0               00 
REG[22] =  i:1
  57 Ge              25   59   22               00 if r[22]>=r[25] goto 59
REG[25] =  i:0
REG[22] =  i:1
  59 Ge              21   65   22               00 if r[22]>=r[21] goto 65
REG[21] =  i:1
REG[22] =  i:1
  65 Subtract        21   22   21               00 r[21]=r[22]-r[21]
REG[21] =  i:1
REG[22] =  i:1
REG[21] =  i:0
  66 Rewind           3    1    0               00 
  67 Rewind           1    1    0               00 
  68 Rewind           4    1    0               00 
  69 Goto             0   82    0               00 
  82 Goto             0   35    0               00 
  35 Yield            3   83    0               00 next row of subquery_2
REG[3] =  i:28
REG[3] =  i:35
  29 SorterNext       6   23    0               00 
  23 SorterData       6   11    7               00 r[11]=data
  24 Column           7    1    9               00 r[9]=
REG[9] =  NULL
  25 Column           7    4    8               00 r[8]=
REG[8] =  NULL
  26 Column           7    3    7               00 r[7]=
REG[7] =  NULL
  27 Column           7    2    6               00 r[6]=
REG[6] =  NULL
  28 Yield            3    0    0               00 
REG[3] =  i:35
REG[3] =  i:28
  36 Copy             6   15    0               00 r[15]=r[6]
REG[15] =  NULL
  37 Copy             7   16    0               00 r[16]=r[7]
REG[16] =  NULL
  38 Copy             8   17    0               00 r[17]=r[8]
REG[17] =  NULL
  39 Copy             9   18    0               00 r[18]=r[9]
REG[18] =  NULL
  40 MakeRecord      15    4   19               00 r[19]=mkrec(r[15..18])
REG[19] =  s5[0500000000.....]
  41 Compare         16   12    1 k(1,B)        00 r[16] <-> r[12]
REG[16] =  NULL
REG[12] =  NULL
  42 Jump            43   45   43               00 
  45 NewRowid         2   20    0               00 r[20]=rowid
REG[20] =  i:2
  46 Insert           2   19   20               00 intkey=r[20] data=r[19]
REG[19] =  s5[0500000000.....]
REG[20] =  i:2
  47 Ne              13   70   20               00 if r[20]!=r[13] goto 70
REG[13] =  i:1
REG[20] =  i:2
  70 Column           4    3   24               00 r[24]=
REG[24] =  NULL
  71 AggStep          0   24    1 sum(1)        01 accum=r[1] step(r[24])
REG[24] =  NULL
  72 Next             4   73    0               00 
  73 IfPos           22   78    1               00 if r[22]>0 then r[22]-=1, goto 78
REG[22] =  i:1
  78 IfPos           21   82    1               00 if r[21]>0 then r[21]-=1, goto 82
REG[21] =  i:0
  79 Column           3    3   24               00 r[24]=
REG[24] =  NULL
  80 AggInverse       1   24    1 sum(1)        01 accum=r[1] inverse(r[24])
REG[24] =  NULL
  81 Next             3   82    0               00 
  82 Goto             0   35    0               00 
  35 Yield            3   83    0               00 next row of subquery_2
REG[3] =  i:28
REG[3] =  i:35
  29 SorterNext       6   23    0               00 
  23 SorterData       6   11    7               00 r[11]=data
  24 Column           7    1    9               00 r[9]=
REG[9] =  NULL
  25 Column           7    4    8               00 r[8]=
REG[8] =  NULL
  26 Column           7    3    7               00 r[7]=
REG[7] =  NULL
  27 Column           7    2    6               00 r[6]=
REG[6] =  NULL
  28 Yield            3    0    0               00 
REG[3] =  i:35
REG[3] =  i:28
  36 Copy             6   15    0               00 r[15]=r[6]
REG[15] =  NULL
  37 Copy             7   16    0               00 r[16]=r[7]
REG[16] =  NULL
  38 Copy             8   17    0               00 r[17]=r[8]
REG[17] =  NULL
  39 Copy             9   18    0               00 r[18]=r[9]
REG[18] =  NULL
  40 MakeRecord      15    4   19               00 r[19]=mkrec(r[15..18])
REG[19] =  s5[0500000000.....]
  41 Compare         16   12    1 k(1,B)        00 r[16] <-> r[12]
REG[16] =  NULL
REG[12] =  NULL
  42 Jump            43   45   43               00 
  45 NewRowid         2   20    0               00 r[20]=rowid
REG[20] =  i:3
  46 Insert           2   19   20               00 intkey=r[20] data=r[19]
REG[19] =  s5[0500000000.....]
REG[20] =  i:3
  47 Ne              13   70   20               00 if r[20]!=r[13] goto 70
REG[13] =  i:1
REG[20] =  i:3
  70 Column           4    3   24               00 r[24]=
REG[24] =  NULL
  71 AggStep1         0   24    1 sum(1)        01 accum=r[1] step(r[24])
REG[24] =  NULL
  72 Next             4   73    0               00 
  73 IfPos           22   78    1               00 if r[22]>0 then r[22]-=1, goto 78
REG[22] =  i:0
  74 AggValue         1    1    2 sum(1)        00 r[2]=value N=1
  75 Gosub           14  109    0               00 
REG[14] =  i:75
 109 Noop             0    0    0               00 inner-loop subroutine
 110 Column           1    0   26               00 r[26]=
REG[26] =  NULL
 111 Copy             2   27    0               00 r[27]=r[2]
REG[27] =  NULL
 112 ResultRow       26    2    0               00 output=r[26..27]
REG[26] =  NULL
REG[27] =  NULL
 113 Return          14    0    0               00 end inner-loop subroutine
REG[14] =  i:75
  76 Delete           1    0    0               02 
  77 Next             1   78    0               00 
  78 IfPos           21   82    1               00 if r[21]>0 then r[21]-=1, goto 82
REG[21] =  i:0
  79 Column           3    3   24               00 r[24]=
REG[24] =  NULL
  80 AggStep1         1   24    1 sum(1)        01 accum=r[1] step(r[24])
REG[24] =  NULL
  81 Next             3   82    0               00 
  82 Goto             0   35    0               00 
  35 Yield            3   83    0               00 next row of subquery_2
REG[3] =  i:28
REG[3] =  i:35
  29 SorterNext       6   23    0               00 
  30 EndCoroutine     3    0    0               00 
REG[3] =  i:35
  83 Integer        107   23    0               00 r[23]=107
REG[23] =  i:107
  84 Rewind           2  106    0               00 
  85 Column           4    3   24               00 r[24]=
REG[24] =  NULL
  86 AggStep          0   24    1 sum(1)        01 accum=r[1] step(r[24])
REG[24] =  NULL
  87 Next             4   88    0               00 
  88 IfPos           22   94    1               00 if r[22]>0 then r[22]-=1, goto 94
REG[22] =  i:0
  89 AggValue         1    1    2 sum(1)        00 r[2]=value N=1
  90 Gosub           14  109    0               00 
REG[14] =  i:90
 109 Noop             0    0    0               00 inner-loop subroutine
 110 Column           1    0   26               00 r[26]=
REG[26] =  NULL
 111 Copy             2   27    0               00 r[27]=r[2]
REG[27] =  NULL
 112 ResultRow       26    2    0               00 output=r[26..27]
REG[26] =  NULL
REG[27] =  NULL
 113 Return          14    0    0               00 end inner-loop subroutine
REG[14] =  i:90
  91 Delete           1    0    0               02 
  92 Next             1   94    0               00 
  94 IfPos           21   99    1               00 if r[21]>0 then r[21]-=1, goto 99
REG[21] =  i:0
  95 Column           3    3   24               00 r[24]=
REG[24] =  NULL
  96 AggInverse       1   24    1 sum(1)        01 accum=r[1] inverse(r[24])
REG[24] =  NULL
  97 Next             3   99    0               00 
  98 Goto             0  100    0               00 
 100 AggValue         1    1    2 sum(1)        00 r[2]=value N=1
 101 Gosub           14  109    0               00 
REG[14] =  i:101
 109 Noop             0    0    0               00 inner-loop subroutine
 110 Column           1    0   26               00 r[26]=
REG[26] =  NULL
 111 Copy             2   27    0               00 r[27]=r[2]
REG[27] =  NULL
 112 ResultRow       26    2    0               00 output=r[26..27]
REG[26] =  NULL
REG[27] =  NULL
 113 Return          14    0    0               00 end inner-loop subroutine
REG[14] =  i:101
 102 Delete           1    0    0               02 
 103 Next             1  105    0               00 
 104 Goto             0  106    0               00 
 106 ResetSorter      1    0    0               00 
 107 Return          23    0    0               00 
REG[23] =  i:107
 108 Goto             0  114    0               00 
 114 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t0 ORDER BY c0
;]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    3 0             01 usesStmtJournal=0
  20 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t0
   3 Explain          3    0    0 SCAN TABLE t0 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    2               00 r[2]=t0.v0
REG[2] =  i:1
   6 Column           0    0    1               00 r[1]=t0.c0
REG[1] =  NULL
   7 MakeRecord       1    2    4               00 r[4]=mkrec(r[1..2])
REG[4] =  s3[030009...]
   8 SorterInsert     1    4    1 2             00 key=r[4]
REG[4] =  s3[030009...]
   9 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=t0.v0
REG[2] =  NULL
   6 Column           0    0    1               00 r[1]=t0.c0
REG[1] =  NULL
   7 MakeRecord       1    2    4               00 r[4]=mkrec(r[1..2])
REG[4] =  s3[030000...]
   8 SorterInsert     1    4    1 2             00 key=r[4]
REG[4] =  s3[030000...]
   9 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=t0.v0
REG[2] =  i:1
   6 Column           0    0    1               00 r[1]=t0.c0
REG[1] =  NULL
   7 MakeRecord       1    2    4               00 r[4]=mkrec(r[1..2])
REG[4] =  s3[030009...]
   8 SorterInsert     1    4    1 2             00 key=r[4]
REG[4] =  s3[030009...]
   9 Next             0    5    0               01 
  10 Explain         10    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  11 OpenPseudo       2    5    4               00 4 columns in r[5]
  12 SorterSort       1   18    0               00 
  13 SorterData       1    5    2               00 r[5]=data
  14 Column           2    1    3               00 r[3]=v0
REG[3] =  i:1
  15 Column           2    0    2               00 r[2]=c0
REG[2] =  NULL
  16 ResultRow        2    2    0               00 output=r[2..3]
REG[2] =  NULL
REG[3] =  i:1
  17 SorterNext       1   13    0               00 
  13 SorterData       1    5    2               00 r[5]=data
  14 Column           2    1    3               00 r[3]=v0
REG[3] =  NULL
  15 Column           2    0    2               00 r[2]=c0
REG[2] =  NULL
  16 ResultRow        2    2    0               00 output=r[2..3]
REG[2] =  NULL
REG[3] =  NULL
  17 SorterNext       1   13    0               00 
  13 SorterData       1    5    2               00 r[5]=data
  14 Column           2    1    3               00 r[3]=v0
REG[3] =  i:1
  15 Column           2    0    2               00 r[2]=c0
REG[2] =  NULL
  16 ResultRow        2    2    0               00 output=r[2..3]
REG[2] =  NULL
REG[3] =  i:1
  17 SorterNext       1   13    0               00 
  18 Halt             0    0    0               00 
SQL: [

;INSERT INTO over(following,following) VALUES(10,100)
;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      1    1    1 0             01 usesStmtJournal=0
   8 Goto             0    1    0               00 
   1 OpenWrite        0    2    1 1             00 root=2 iDb=1; over
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   3 Integer         10    2    0               00 r[2]=10
REG[2] =  i:10
   4 MakeRecord       2    1    3 D             00 r[3]=mkrec(r[2])
REG[3] =  s3[02010A...]
   5 Insert           0    3    1 over          39 intkey=r[1] data=r[3]
REG[3] =  s3[02010A...]
REG[1] =  i:2
   6 Halt             0    0    0               00 
SQL: [INSERT INTO over(following,following) VALUES(18,324)
;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      1    1    1 0             01 usesStmtJournal=0
   8 Goto             0    1    0               00 
   1 OpenWrite        0    2    1 1             00 root=2 iDb=1; over
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   3 Integer         18    2    0               00 r[2]=18
REG[2] =  i:18
   4 MakeRecord       2    1    3 D             00 r[3]=mkrec(r[2])
REG[3] =  s3[020112...]
   5 Insert           0    3    1 over          39 intkey=r[1] data=r[3]
REG[3] =  s3[020112...]
REG[1] =  i:3
   6 Halt             0    0    0               00 
SQL: [INSERT INTO t0(c0,c0) VALUES(20,400)
;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    1    3 0             01 usesStmtJournal=0
   8 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   9 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t0
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   3 Integer         20    2    0               00 r[2]=20
REG[2] =  i:20
   4 MakeRecord       2    2    4 DD            00 r[4]=mkrec(r[2..3])
REG[4] =  s4[03010014....]
   5 Insert           0    4    1 t0            39 intkey=r[1] data=r[4]
REG[4] =  s4[03010014....]
REG[1] =  i:4
   6 Halt             0    0    0               00 
SQL: [

;SELECT following, sum(following) over (
    ORDER BY following 
    ROWS BETWEEN CURRENT ROW AND CURRENT ROW
  ) FROM over

;]
VDBE Trace:
   0 Init             0   76    0               00 Start at 76
  76 Transaction      1    0    1 0             01 usesStmtJournal=0
  77 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenEphemeral    1    3    0               00 nColumn=3
   3 OpenDup          2    1    0               00 
   4 OpenDup          3    1    0               00 
   5 OpenDup          4    1    0               00 
   6 InitCoroutine    3   28    7               00 subquery_2
  28 Integer          1   10    0               00 r[10]=1
REG[10] =  i:1
  29 Explain         29    0    0 SCAN SUBQUERY 2 00 
  30 InitCoroutine    3    0    7               00 
  31 Yield            3   55    0               00 next row of subquery_2
REG[3] =  i:6
REG[3] =  i:31
   7 Explain          7    0    0 CO-ROUTINE 2  00 
   8 SorterOpen       6    5    0 k(1,B)        00 
   9 OpenRead         0    2    1 1             00 root=2 iDb=1; over
  10 Explain         10    7    0 SCAN TABLE over 00 
  11 Rewind           0   18    0               00 
  12 Column           0    0    5               00 r[5]=over.following
REG[5] =  i:1
  13 Column           0    0    6               00 r[6]=over.following
REG[6] =  i:1
  14 Column           0    0    4               00 r[4]=over.following
REG[4] =  i:1
  15 MakeRecord       4    3    8               00 r[8]=mkrec(r[4..6])
REG[8] =  s4[04090909....]
  16 SorterInsert     6    8    4 3             00 key=r[8]
REG[8] =  s4[04090909....]
  17 Next             0   12    0               01 
  12 Column           0    0    5               00 r[5]=over.following
REG[5] =  i:10
  13 Column           0    0    6               00 r[6]=over.following
REG[6] =  i:10
  14 Column           0    0    4               00 r[4]=over.following
REG[4] =  i:10
  15 MakeRecord       4    3    8               00 r[8]=mkrec(r[4..6])
REG[8] =  s7[040101010A0A0A.......]
  16 SorterInsert     6    8    4 3             00 key=r[8]
REG[8] =  s7[040101010A0A0A.......]
  17 Next             0   12    0               01 
  12 Column           0    0    5               00 r[5]=over.following
REG[5] =  i:18
  13 Column           0    0    6               00 r[6]=over.following
REG[6] =  i:18
  14 Column           0    0    4               00 r[4]=over.following
REG[4] =  i:18
  15 MakeRecord       4    3    8               00 r[8]=mkrec(r[4..6])
REG[8] =  s7[04010101121212.......]
  16 SorterInsert     6    8    4 3             00 key=r[8]
REG[8] =  s7[04010101121212.......]
  17 Next             0   12    0               01 
  18 Explain         18    7    0 USE TEMP B-TREE FOR ORDER BY 00 
  19 OpenPseudo       7    9    5               00 5 columns in r[9]
  20 SorterSort       6   27    0               00 
  21 SorterData       6    9    7               00 r[9]=data
  22 Column           7    0    7               00 r[7]=
REG[7] =  i:1
  23 Column           7    2    6               00 r[6]=
REG[6] =  i:1
  24 Column           7    1    5               00 r[5]=
REG[5] =  i:1
  25 Yield            3    0    0               00 
REG[3] =  i:31
REG[3] =  i:25
  32 Copy             5   12    0               00 r[12]=r[5]
REG[12] =  i:1
  33 Copy             6   13    0               00 r[13]=r[6]
REG[13] =  i:1
  34 Copy             7   14    0               00 r[14]=r[7]
REG[14] =  i:1
  35 MakeRecord      12    3   15               00 r[15]=mkrec(r[12..14])
REG[15] =  s4[04090909....]
  36 NewRowid         2   16    0               00 r[16]=rowid
REG[16] =  i:1
  37 Insert           2   15   16               00 intkey=r[16] data=r[15]
REG[15] =  s4[04090909....]
REG[16] =  i:1
  38 Ne              10   44   16               00 if r[16]!=r[10] goto 44
REG[10] =  i:1
REG[16] =  i:1
  39 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
  40 Rewind           3    1    0               00 
  41 Rewind           1    1    0               00 
  42 Rewind           4    1    0               00 
  43 Goto             0   54    0               00 
  54 Goto             0   31    0               00 
  31 Yield            3   55    0               00 next row of subquery_2
REG[3] =  i:25
REG[3] =  i:31
  26 SorterNext       6   21    0               00 
  21 SorterData       6    9    7               00 r[9]=data
  22 Column           7    0    7               00 r[7]=
REG[7] =  i:10
  23 Column           7    2    6               00 r[6]=
REG[6] =  i:10
  24 Column           7    1    5               00 r[5]=
REG[5] =  i:10
  25 Yield            3    0    0               00 
REG[3] =  i:31
REG[3] =  i:25
  32 Copy             5   12    0               00 r[12]=r[5]
REG[12] =  i:10
  33 Copy             6   13    0               00 r[13]=r[6]
REG[13] =  i:10
  34 Copy             7   14    0               00 r[14]=r[7]
REG[14] =  i:10
  35 MakeRecord      12    3   15               00 r[15]=mkrec(r[12..14])
REG[15] =  s7[040101010A0A0A.......]
  36 NewRowid         2   16    0               00 r[16]=rowid
REG[16] =  i:2
  37 Insert           2   15   16               00 intkey=r[16] data=r[15]
REG[15] =  s7[040101010A0A0A.......]
REG[16] =  i:2
  38 Ne              10   44   16               00 if r[16]!=r[10] goto 44
REG[10] =  i:1
REG[16] =  i:2
  44 Column           4    2   17               00 r[17]=
REG[17] =  i:1
  45 AggStep          0   17    1 sum(1)        01 accum=r[1] step(r[17])
REG[17] =  i:1
  46 Next             4   47    0               00 
  47 AggValue         1    1    2 sum(1)        00 r[2]=value N=1
  48 Gosub           11   70    0               00 
REG[11] =  i:48
  70 Noop             0    0    0               00 inner-loop subroutine
  71 Column           1    0   18               00 r[18]=
REG[18] =  i:1
  72 Copy             2   19    0               00 r[19]=r[2]
REG[19] =  i:1
  73 ResultRow       18    2    0               00 output=r[18..19]
REG[18] =  i:1
REG[19] =  i:1
  74 Return          11    0    0               00 end inner-loop subroutine
REG[11] =  i:48
  49 Next             1   50    0               00 
  50 Column           3    2   17               00 r[17]=
REG[17] =  i:1
  51 AggInverse       1   17    1 sum(1)        01 accum=r[1] inverse(r[17])
REG[17] =  i:1
  52 Delete           3    0    0               02 
  53 Next             3   54    0               00 
  54 Goto             0   31    0               00 
  31 Yield            3   55    0               00 next row of subquery_2
REG[3] =  i:25
REG[3] =  i:31
  26 SorterNext       6   21    0               00 
  21 SorterData       6    9    7               00 r[9]=data
  22 Column           7    0    7               00 r[7]=
REG[7] =  i:18
  23 Column           7    2    6               00 r[6]=
REG[6] =  i:18
  24 Column           7    1    5               00 r[5]=
REG[5] =  i:18
  25 Yield            3    0    0               00 
REG[3] =  i:31
REG[3] =  i:25
  32 Copy             5   12    0               00 r[12]=r[5]
REG[12] =  i:18
  33 Copy             6   13    0               00 r[13]=r[6]
REG[13] =  i:18
  34 Copy             7   14    0               00 r[14]=r[7]
REG[14] =  i:18
  35 MakeRecord      12    3   15               00 r[15]=mkrec(r[12..14])
REG[15] =  s7[04010101121212.......]
  36 NewRowid         2   16    0               00 r[16]=rowid
REG[16] =  i:3
  37 Insert           2   15   16               00 intkey=r[16] data=r[15]
REG[15] =  s7[04010101121212.......]
REG[16] =  i:3
  38 Ne              10   44   16               00 if r[16]!=r[10] goto 44
REG[10] =  i:1
REG[16] =  i:3
  44 Column           4    2   17               00 r[17]=
REG[17] =  i:10
  45 AggStep1         0   17    1 sum(1)        01 accum=r[1] step(r[17])
REG[17] =  i:10
  46 Next             4   47    0               00 
  47 AggValue         1    1    2 sum(1)        00 r[2]=value N=1
  48 Gosub           11   70    0               00 
REG[11] =  i:48
  70 Noop             0    0    0               00 inner-loop subroutine
  71 Column           1    0   18               00 r[18]=
REG[18] =  i:10
  72 Copy             2   19    0               00 r[19]=r[2]
REG[19] =  i:10
  73 ResultRow       18    2    0               00 output=r[18..19]
REG[18] =  i:10
REG[19] =  i:10
  74 Return          11    0    0               00 end inner-loop subroutine
REG[11] =  i:48
  49 Next             1   50    0               00 
  50 Column           3    2   17               00 r[17]=
REG[17] =  i:10
  51 AggStep1         1   17    1 sum(1)        01 accum=r[1] step(r[17])
REG[17] =  i:10
  52 Delete           3    0    0               02 
  53 Next             3   54    0               00 
  54 Goto             0   31    0               00 
  31 Yield            3   55    0               00 next row of subquery_2
REG[3] =  i:25
REG[3] =  i:31
  26 SorterNext       6   21    0               00 
  27 EndCoroutine     3    0    0               00 
REG[3] =  i:31
  55 Rewind           2   68    0               00 
  56 Column           4    2   17               00 r[17]=
REG[17] =  i:18
  57 AggStep          0   17    1 sum(1)        01 accum=r[1] step(r[17])
REG[17] =  i:18
  58 Next             4   59    0               00 
  59 AggValue         1    1    2 sum(1)        00 r[2]=value N=1
  60 Gosub           11   70    0               00 
REG[11] =  i:60
  70 Noop             0    0    0               00 inner-loop subroutine
  71 Column           1    0   18               00 r[18]=
REG[18] =  i:18
  72 Copy             2   19    0               00 r[19]=r[2]
REG[19] =  i:18
  73 ResultRow       18    2    0               00 output=r[18..19]
REG[18] =  i:18
REG[19] =  i:18
  74 Return          11    0    0               00 end inner-loop subroutine
REG[11] =  i:60
  61 Next             1   63    0               00 
  62 Goto             0   68    0               00 
  68 ResetSorter      1    0    0               00 
  69 Goto             0   75    0               00 
  75 Halt             0    0    0               00 
SQL: [INSERT INTO t0(c0,c0) VALUES(38,1444)
;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    1    3 0             01 usesStmtJournal=0
   8 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   9 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t0
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   3 Integer         38    2    0               00 r[2]=38
REG[2] =  i:38
   4 MakeRecord       2    2    4 DD            00 r[4]=mkrec(r[2..3])
REG[4] =  s4[03010026...&]
   5 Insert           0    4    1 t0            39 intkey=r[1] data=r[4]
REG[4] =  s4[03010026...&]
REG[1] =  i:5
   6 Halt             0    0    0               00 
SQL: [CREATE INDEX field1 ON over(following)
;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      1    1    1 0             01 usesStmtJournal=0
  34 Goto             0    1    0               00 
   1 Noop             0   32    0               00 
   2 CreateBtree      1    1    2               00 r[1]=root iDb=1 flags=2
REG[1] =  i:3
   3 OpenWrite        0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:2
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 field1        00 r[4]='field1'
REG[4] =   t6[field1](8)
   7 String8          0    5    0 over          00 r[5]='over'
REG[5] =   t4[over](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:3
   9 String8          0    7    0 CREATE INDEX field1 ON over(following)
 00 r[7]='CREATE INDEX field1 ON over(following)
'
REG[7] =   t39[CREATE INDEX fi](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s61[06171915015B696E6465786669656C64.....[indexfield]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s61[06171915015B696E6465786669656C64.....[indexfield]
REG[2] =  i:2
  12 SorterOpen       3    0    1 k(2,,)        00 
  13 OpenRead         1    2    1 1             00 root=2 iDb=1; over
  14 Rewind           1   20    0               00 
  15 Column           1    0   10               00 r[10]=over.following
REG[10] =  i:1
  16 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:1
  17 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s3[030909...]
  18 SorterInsert     3    9    0               00 key=r[9]
REG[9] =  s3[030909...]
  19 Next             1   15    0               00 
  15 Column           1    0   10               00 r[10]=over.following
REG[10] =  i:10
  16 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:2
  17 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s5[0301010A02.....]
  18 SorterInsert     3    9    0               00 key=r[9]
REG[9] =  s5[0301010A02.....]
  19 Next             1   15    0               00 
  15 Column           1    0   10               00 r[10]=over.following
REG[10] =  i:18
  16 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:3
  17 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s5[0301011203.....]
  18 SorterInsert     3    9    0               00 key=r[9]
REG[9] =  s5[0301011203.....]
  19 Next             1   15    0               00 
  20 OpenWrite        2    1    1 k(2,,)        11 root=1 iDb=1
  21 SorterSort       3   26    0               00 
  22 SorterData       3    9    2               00 r[9]=data
  23 SeekEnd          2    0    0               00 
  24 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s3[030909...]
  25 SorterNext       3   22    0               00 
  22 SorterData       3    9    2               00 r[9]=data
  23 SeekEnd          2    0    0               00 
  24 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s5[0301010A02.....]
  25 SorterNext       3   22    0               00 
  22 SorterData       3    9    2               00 r[9]=data
  23 SeekEnd          2    0    0               00 
  24 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s5[0301011203.....]
  25 SorterNext       3   22    0               00 
  26 Close            1    0    0               00 
  27 Close            2    0    0               00 
  28 Close            3    0    0               00 
  29 SetCookie        1    1    2               00 
  30 ParseSchema      1    0    0 name='field1' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      1    0    2 0             00 usesStmtJournal=0
  16 String8          0    2    0 field1        00 r[2]='field1'
REG[2] =   t6[field1](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_temp_master.name
REG[1] =   s4[over](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field1](8)
REG[1] =   s4[over](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_temp_master.name
REG[1] =   s6[field1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field1](8)
REG[1] =   s6[field1](8)
   7 Column           0    0    1               00 r[1]=sqlite_temp_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_temp_master.name
REG[4] =   s6[field1](8)
  10 Column           0    3    5               00 r[5]=sqlite_temp_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_temp_master.sql
REG[6] =   s39[CREATE INDEX fi](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s6[field1](8)
REG[5] =  i:3
REG[6] =   s39[CREATE INDEX fi](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  31 Expire           0    1    0               00 
  32 Halt             0    0    0               00 
SQL: [CREATE INDEX test003 ON t0(c0)
;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    1    3 0             01 usesStmtJournal=0
  34 Goto             0    1    0               00 
   1 Noop             0   32    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:4
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:4
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 test003       00 r[4]='test003'
REG[4] =   t7[test003](8)
   7 String8          0    5    0 t0            00 r[5]='t0'
REG[5] =   t2[t0](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:4
   9 String8          0    7    0 CREATE INDEX test003 ON t0(c0)
 00 r[7]='CREATE INDEX test003 ON t0(c0)
'
REG[7] =   t31[CREATE INDEX te](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s52[06171B11014B696E6465787465737430.....Kindextest0]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s52[06171B11014B696E6465787465737430.....Kindextest0]
REG[2] =  i:4
  12 SorterOpen       3    0    1 k(2,,)        00 
  13 OpenRead         1    2    0 2             00 root=2 iDb=0; t0
  14 Rewind           1   20    0               00 
  15 Column           1    0   10               00 r[10]=t0.c0
REG[10] =  NULL
  16 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:1
  17 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s3[030009...]
  18 SorterInsert     3    9    0               00 key=r[9]
REG[9] =  s3[030009...]
  19 Next             1   15    0               00 
  15 Column           1    0   10               00 r[10]=t0.c0
REG[10] =  NULL
  16 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:2
  17 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s4[03000102....]
  18 SorterInsert     3    9    0               00 key=r[9]
REG[9] =  s4[03000102....]
  19 Next             1   15    0               00 
  15 Column           1    0   10               00 r[10]=t0.c0
REG[10] =  NULL
  16 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:3
  17 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s4[03000103....]
  18 SorterInsert     3    9    0               00 key=r[9]
REG[9] =  s4[03000103....]
  19 Next             1   15    0               00 
  15 Column           1    0   10               00 r[10]=t0.c0
REG[10] =  i:20
  16 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:4
  17 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s5[0301011404.....]
  18 SorterInsert     3    9    0               00 key=r[9]
REG[9] =  s5[0301011404.....]
  19 Next             1   15    0               00 
  15 Column           1    0   10               00 r[10]=t0.c0
REG[10] =  i:38
  16 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:5
  17 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s5[0301012605...&.]
  18 SorterInsert     3    9    0               00 key=r[9]
REG[9] =  s5[0301012605...&.]
  19 Next             1   15    0               00 
  20 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  21 SorterSort       3   26    0               00 
  22 SorterData       3    9    2               00 r[9]=data
  23 SeekEnd          2    0    0               00 
  24 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s3[030009...]
  25 SorterNext       3   22    0               00 
  22 SorterData       3    9    2               00 r[9]=data
  23 SeekEnd          2    0    0               00 
  24 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s4[03000102....]
  25 SorterNext       3   22    0               00 
  22 SorterData       3    9    2               00 r[9]=data
  23 SeekEnd          2    0    0               00 
  24 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s4[03000103....]
  25 SorterNext       3   22    0               00 
  22 SorterData       3    9    2               00 r[9]=data
  23 SeekEnd          2    0    0               00 
  24 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s5[0301011404.....]
  25 SorterNext       3   22    0               00 
  22 SorterData       3    9    2               00 r[9]=data
  23 SeekEnd          2    0    0               00 
  24 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s5[0301012605...&.]
  25 SorterNext       3   22    0               00 
  26 Close            1    0    0               00 
  27 Close            2    0    0               00 
  28 Close            3    0    0               00 
  29 SetCookie        0    1    4               00 
  30 ParseSchema      0    0    0 name='test003' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    4 0             00 usesStmtJournal=0
  16 String8          0    2    0 test003       00 r[2]='test003'
REG[2] =   t7[test003](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test003](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s9[preceding](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test003](8)
REG[1] =   s9[preceding](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test003](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[test003](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test003](8)
REG[1] =   s7[test003](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s7[test003](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s31[CREATE INDEX te](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s7[test003](8)
REG[5] =  i:4
REG[6] =   s31[CREATE INDEX te](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  31 Expire           0    1    0               00 
  32 Halt             0    0    0               00 
SQL: [SELECT v0, sum(v0) over (
    ORDER BY v0 
    RANGE BETWEEN CURRENT ROW AND UNBOUNDED following
  ) FROM t0

;]
VDBE Trace:
   0 Init             0   95    0               00 Start at 95
  95 Transaction      0    0    4 0             01 usesStmtJournal=0
  96 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenEphemeral    1    3    0               00 nColumn=3
   3 OpenDup          2    1    0               00 
   4 OpenDup          3    1    0               00 
   5 OpenDup          4    1    0               00 
   6 InitCoroutine    3   28    7               00 subquery_2
  28 Integer          1   10    0               00 r[10]=1
REG[10] =  i:1
  29 Explain         29    0    0 SCAN SUBQUERY 2 00 
  30 InitCoroutine    3    0    7               00 
  31 Yield            3   60    0               00 next row of subquery_2
REG[3] =  i:6
REG[3] =  i:31
   7 Explain          7    0    0 CO-ROUTINE 2  00 
   8 SorterOpen       6    5    0 k(1,B)        00 
   9 OpenRead         0    2    0 2             00 root=2 iDb=0; t0
  10 Explain         10    7    0 SCAN TABLE t0 00 
  11 Rewind           0   18    0               00 
  12 Column           0    1    5               00 r[5]=t0.v0
REG[5] =  i:1
  13 Column           0    1    6               00 r[6]=t0.v0
REG[6] =  i:1
  14 Column           0    1    4               00 r[4]=t0.v0
REG[4] =  i:1
  15 MakeRecord       4    3    8               00 r[8]=mkrec(r[4..6])
REG[8] =  s4[04090909....]
  16 SorterInsert     6    8    4 3             00 key=r[8]
REG[8] =  s4[04090909....]
  17 Next             0   12    0               01 
  12 Column           0    1    5               00 r[5]=t0.v0
REG[5] =  NULL
  13 Column           0    1    6               00 r[6]=t0.v0
REG[6] =  NULL
  14 Column           0    1    4               00 r[4]=t0.v0
REG[4] =  NULL
  15 MakeRecord       4    3    8               00 r[8]=mkrec(r[4..6])
REG[8] =  s4[04000000....]
  16 SorterInsert     6    8    4 3             00 key=r[8]
REG[8] =  s4[04000000....]
  17 Next             0   12    0               01 
  12 Column           0    1    5               00 r[5]=t0.v0
REG[5] =  i:1
  13 Column           0    1    6               00 r[6]=t0.v0
REG[6] =  i:1
  14 Column           0    1    4               00 r[4]=t0.v0
REG[4] =  i:1
  15 MakeRecord       4    3    8               00 r[8]=mkrec(r[4..6])
REG[8] =  s4[04090909....]
  16 SorterInsert     6    8    4 3             00 key=r[8]
REG[8] =  s4[04090909....]
  17 Next             0   12    0               01 
  12 Column           0    1    5               00 r[5]=t0.v0
REG[5] =  NULL
  13 Column           0    1    6               00 r[6]=t0.v0
REG[6] =  NULL
  14 Column           0    1    4               00 r[4]=t0.v0
REG[4] =  NULL
  15 MakeRecord       4    3    8               00 r[8]=mkrec(r[4..6])
REG[8] =  s4[04000000....]
  16 SorterInsert     6    8    4 3             00 key=r[8]
REG[8] =  s4[04000000....]
  17 Next             0   12    0               01 
  12 Column           0    1    5               00 r[5]=t0.v0
REG[5] =  NULL
  13 Column           0    1    6               00 r[6]=t0.v0
REG[6] =  NULL
  14 Column           0    1    4               00 r[4]=t0.v0
REG[4] =  NULL
  15 MakeRecord       4    3    8               00 r[8]=mkrec(r[4..6])
REG[8] =  s4[04000000....]
  16 SorterInsert     6    8    4 3             00 key=r[8]
REG[8] =  s4[04000000....]
  17 Next             0   12    0               01 
  18 Explain         18    7    0 USE TEMP B-TREE FOR ORDER BY 00 
  19 OpenPseudo       7    9    5               00 5 columns in r[9]
  20 SorterSort       6   27    0               00 
  21 SorterData       6    9    7               00 r[9]=data
  22 Column           7    0    7               00 r[7]=
REG[7] =  NULL
  23 Column           7    2    6               00 r[6]=
REG[6] =  NULL
  24 Column           7    1    5               00 r[5]=
REG[5] =  NULL
  25 Yield            3    0    0               00 
REG[3] =  i:31
REG[3] =  i:25
  32 Copy             5   12    0               00 r[12]=r[5]
REG[12] =  NULL
  33 Copy             6   13    0               00 r[13]=r[6]
REG[13] =  NULL
  34 Copy             7   14    0               00 r[14]=r[7]
REG[14] =  NULL
  35 MakeRecord      12    3   15               00 r[15]=mkrec(r[12..14])
REG[15] =  s4[04000000....]
  36 NewRowid         2   16    0               00 r[16]=rowid
REG[16] =  i:1
  37 Insert           2   15   16               00 intkey=r[16] data=r[15]
REG[15] =  s4[04000000....]
REG[16] =  i:1
  38 Ne              10   48   16               00 if r[16]!=r[10] goto 48
REG[10] =  i:1
REG[16] =  i:1
  39 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
  40 Rewind           3    1    0               00 
  41 Rewind           1    1    0               00 
  42 Rewind           4    1    0               00 
  43 Copy            13   17    0               00 r[17]=r[13]
REG[17] =  NULL
  44 Copy            17   18    0               00 r[18]=r[17]
REG[18] =  NULL
  45 Copy            17   19    0               00 r[19]=r[17]
REG[19] =  NULL
  46 Copy            17   20    0               00 r[20]=r[17]
REG[20] =  NULL
  47 Goto             0   59    0               00 
  59 Goto             0   31    0               00 
  31 Yield            3   60    0               00 next row of subquery_2
REG[3] =  i:25
REG[3] =  i:31
  26 SorterNext       6   21    0               00 
  21 SorterData       6    9    7               00 r[9]=data
  22 Column           7    0    7               00 r[7]=
REG[7] =  NULL
  23 Column           7    2    6               00 r[6]=
REG[6] =  NULL
  24 Column           7    1    5               00 r[5]=
REG[5] =  NULL
  25 Yield            3    0    0               00 
REG[3] =  i:31
REG[3] =  i:25
  32 Copy             5   12    0               00 r[12]=r[5]
REG[12] =  NULL
  33 Copy             6   13    0               00 r[13]=r[6]
REG[13] =  NULL
  34 Copy             7   14    0               00 r[14]=r[7]
REG[14] =  NULL
  35 MakeRecord      12    3   15               00 r[15]=mkrec(r[12..14])
REG[15] =  s4[04000000....]
  36 NewRowid         2   16    0               00 r[16]=rowid
REG[16] =  i:2
  37 Insert           2   15   16               00 intkey=r[16] data=r[15]
REG[15] =  s4[04000000....]
REG[16] =  i:2
  38 Ne              10   48   16               00 if r[16]!=r[10] goto 48
REG[10] =  i:1
REG[16] =  i:2
  48 Compare         17   13    1 k(1,B)        00 r[17] <-> r[13]
REG[17] =  NULL
REG[13] =  NULL
  49 Jump            50   59   50               00 
  59 Goto             0   31    0               00 
  31 Yield            3   60    0               00 next row of subquery_2
REG[3] =  i:25
REG[3] =  i:31
  26 SorterNext       6   21    0               00 
  21 SorterData       6    9    7               00 r[9]=data
  22 Column           7    0    7               00 r[7]=
REG[7] =  NULL
  23 Column           7    2    6               00 r[6]=
REG[6] =  NULL
  24 Column           7    1    5               00 r[5]=
REG[5] =  NULL
  25 Yield            3    0    0               00 
REG[3] =  i:31
REG[3] =  i:25
  32 Copy             5   12    0               00 r[12]=r[5]
REG[12] =  NULL
  33 Copy             6   13    0               00 r[13]=r[6]
REG[13] =  NULL
  34 Copy             7   14    0               00 r[14]=r[7]
REG[14] =  NULL
  35 MakeRecord      12    3   15               00 r[15]=mkrec(r[12..14])
REG[15] =  s4[04000000....]
  36 NewRowid         2   16    0               00 r[16]=rowid
REG[16] =  i:3
  37 Insert           2   15   16               00 intkey=r[16] data=r[15]
REG[15] =  s4[04000000....]
REG[16] =  i:3
  38 Ne              10   48   16               00 if r[16]!=r[10] goto 48
REG[10] =  i:1
REG[16] =  i:3
  48 Compare         17   13    1 k(1,B)        00 r[17] <-> r[13]
REG[17] =  NULL
REG[13] =  NULL
  49 Jump            50   59   50               00 
  59 Goto             0   31    0               00 
  31 Yield            3   60    0               00 next row of subquery_2
REG[3] =  i:25
REG[3] =  i:31
  26 SorterNext       6   21    0               00 
  21 SorterData       6    9    7               00 r[9]=data
  22 Column           7    0    7               00 r[7]=
REG[7] =  i:1
  23 Column           7    2    6               00 r[6]=
REG[6] =  i:1
  24 Column           7    1    5               00 r[5]=
REG[5] =  i:1
  25 Yield            3    0    0               00 
REG[3] =  i:31
REG[3] =  i:25
  32 Copy             5   12    0               00 r[12]=r[5]
REG[12] =  i:1
  33 Copy             6   13    0               00 r[13]=r[6]
REG[13] =  i:1
  34 Copy             7   14    0               00 r[14]=r[7]
REG[14] =  i:1
  35 MakeRecord      12    3   15               00 r[15]=mkrec(r[12..14])
REG[15] =  s4[04090909....]
  36 NewRowid         2   16    0               00 r[16]=rowid
REG[16] =  i:4
  37 Insert           2   15   16               00 intkey=r[16] data=r[15]
REG[15] =  s4[04090909....]
REG[16] =  i:4
  38 Ne              10   48   16               00 if r[16]!=r[10] goto 48
REG[10] =  i:1
REG[16] =  i:4
  48 Compare         17   13    1 k(1,B)        00 r[17] <-> r[13]
REG[17] =  NULL
REG[13] =  i:1
  49 Jump            50   59   50               00 
  50 Copy            13   17    0               00 r[17]=r[13]
REG[17] =  i:1
  51 Column           4    2   21               00 r[21]=
REG[21] =  NULL
  52 AggStep          0   21    1 sum(1)        01 accum=r[1] step(r[21])
REG[21] =  NULL
  53 Next             4   55    0               00 
  55 Column           4    1   22               00 r[22]=
REG[22] =  NULL
  56 Compare         20   22    1 k(1,B)        00 r[20] <-> r[22]
REG[20] =  NULL
REG[22] =  NULL
  57 Jump            58   51   58               00 
  51 Column           4    2   21               00 r[21]=
REG[21] =  NULL
  52 AggStep1         0   21    1 sum(1)        01 accum=r[1] step(r[21])
REG[21] =  NULL
  53 Next             4   55    0               00 
  55 Column           4    1   22               00 r[22]=
REG[22] =  NULL
  56 Compare         20   22    1 k(1,B)        00 r[20] <-> r[22]
REG[20] =  NULL
REG[22] =  NULL
  57 Jump            58   51   58               00 
  51 Column           4    2   21               00 r[21]=
REG[21] =  NULL
  52 AggStep1         0   21    1 sum(1)        01 accum=r[1] step(r[21])
REG[21] =  NULL
  53 Next             4   55    0               00 
  55 Column           4    1   22               00 r[22]=
REG[22] =  i:1
  56 Compare         20   22    1 k(1,B)        00 r[20] <-> r[22]
REG[20] =  NULL
REG[22] =  i:1
  57 Jump            58   51   58               00 
  58 Copy            22   20    0               00 r[20]=r[22]
REG[20] =  i:1
  59 Goto             0   31    0               00 
  31 Yield            3   60    0               00 next row of subquery_2
REG[3] =  i:25
REG[3] =  i:31
  26 SorterNext       6   21    0               00 
  21 SorterData       6    9    7               00 r[9]=data
  22 Column           7    0    7               00 r[7]=
REG[7] =  i:1
  23 Column           7    2    6               00 r[6]=
REG[6] =  i:1
  24 Column           7    1    5               00 r[5]=
REG[5] =  i:1
  25 Yield            3    0    0               00 
REG[3] =  i:31
REG[3] =  i:25
  32 Copy             5   12    0               00 r[12]=r[5]
REG[12] =  i:1
  33 Copy             6   13    0               00 r[13]=r[6]
REG[13] =  i:1
  34 Copy             7   14    0               00 r[14]=r[7]
REG[14] =  i:1
  35 MakeRecord      12    3   15               00 r[15]=mkrec(r[12..14])
REG[15] =  s4[04090909....]
  36 NewRowid         2   16    0               00 r[16]=rowid
REG[16] =  i:5
  37 Insert           2   15   16               00 intkey=r[16] data=r[15]
REG[15] =  s4[04090909....]
REG[16] =  i:5
  38 Ne              10   48   16               00 if r[16]!=r[10] goto 48
REG[10] =  i:1
REG[16] =  i:5
  48 Compare         17   13    1 k(1,B)        00 r[17] <-> r[13]
REG[17] =  i:1
REG[13] =  i:1
  49 Jump            50   59   50               00 
  59 Goto             0   31    0               00 
  31 Yield            3   60    0               00 next row of subquery_2
REG[3] =  i:25
REG[3] =  i:31
  26 SorterNext       6   21    0               00 
  27 EndCoroutine     3    0    0               00 
REG[3] =  i:31
  60 Rewind           2   87    0               00 
  61 Column           4    2   21               00 r[21]=
REG[21] =  i:1
  62 AggStep          0   21    1 sum(1)        01 accum=r[1] step(r[21])
REG[21] =  i:1
  63 Next             4   65    0               00 
  65 Column           4    1   22               00 r[22]=
REG[22] =  i:1
  66 Compare         20   22    1 k(1,B)        00 r[20] <-> r[22]
REG[20] =  i:1
REG[22] =  i:1
  67 Jump            68   61   68               00 
  61 Column           4    2   21               00 r[21]=
REG[21] =  i:1
  62 AggStep1         0   21    1 sum(1)        01 accum=r[1] step(r[21])
REG[21] =  i:1
  63 Next             4   65    0               00 
  64 Goto             0   69    0               00 
  69 AggValue         1    1    2 sum(1)        00 r[2]=value N=1
  70 Gosub           11   89    0               00 
REG[11] =  i:70
  89 Noop             0    0    0               00 inner-loop subroutine
  90 Column           1    0   23               00 r[23]=
REG[23] =  NULL
  91 Copy             2   24    0               00 r[24]=r[2]
REG[24] =  i:2
  92 ResultRow       23    2    0               00 output=r[23..24]
REG[23] =  NULL
REG[24] =  i:2
  93 Return          11    0    0               00 end inner-loop subroutine
REG[11] =  i:70
  71 Next             1   73    0               00 
  73 Column           1    1   22               00 r[22]=
REG[22] =  NULL
  74 Compare         19   22    1 k(1,B)        00 r[19] <-> r[22]
REG[19] =  NULL
REG[22] =  NULL
  75 Jump            76   70   76               00 
  70 Gosub           11   89    0               00 
REG[11] =  i:70
  89 Noop             0    0    0               00 inner-loop subroutine
  90 Column           1    0   23               00 r[23]=
REG[23] =  NULL
  91 Copy             2   24    0               00 r[24]=r[2]
REG[24] =  i:2
  92 ResultRow       23    2    0               00 output=r[23..24]
REG[23] =  NULL
REG[24] =  i:2
  93 Return          11    0    0               00 end inner-loop subroutine
REG[11] =  i:70
  71 Next             1   73    0               00 
  73 Column           1    1   22               00 r[22]=
REG[22] =  NULL
  74 Compare         19   22    1 k(1,B)        00 r[19] <-> r[22]
REG[19] =  NULL
REG[22] =  NULL
  75 Jump            76   70   76               00 
  70 Gosub           11   89    0               00 
REG[11] =  i:70
  89 Noop             0    0    0               00 inner-loop subroutine
  90 Column           1    0   23               00 r[23]=
REG[23] =  NULL
  91 Copy             2   24    0               00 r[24]=r[2]
REG[24] =  i:2
  92 ResultRow       23    2    0               00 output=r[23..24]
REG[23] =  NULL
REG[24] =  i:2
  93 Return          11    0    0               00 end inner-loop subroutine
REG[11] =  i:70
  71 Next             1   73    0               00 
  73 Column           1    1   22               00 r[22]=
REG[22] =  i:1
  74 Compare         19   22    1 k(1,B)        00 r[19] <-> r[22]
REG[19] =  NULL
REG[22] =  i:1
  75 Jump            76   70   76               00 
  76 Copy            22   19    0               00 r[19]=r[22]
REG[19] =  i:1
  77 Column           3    2   21               00 r[21]=
REG[21] =  NULL
  78 AggInverse       1   21    1 sum(1)        01 accum=r[1] inverse(r[21])
REG[21] =  NULL
  79 Delete           3    0    0               02 
  80 Next             3   82    0               00 
  82 Column           3    1   22               00 r[22]=
REG[22] =  NULL
  83 Compare         18   22    1 k(1,B)        00 r[18] <-> r[22]
REG[18] =  NULL
REG[22] =  NULL
  84 Jump            85   77   85               00 
  77 Column           3    2   21               00 r[21]=
REG[21] =  NULL
  78 AggStep1         1   21    1 sum(1)        01 accum=r[1] step(r[21])
REG[21] =  NULL
  79 Delete           3    0    0               02 
  80 Next             3   82    0               00 
  82 Column           3    1   22               00 r[22]=
REG[22] =  NULL
  83 Compare         18   22    1 k(1,B)        00 r[18] <-> r[22]
REG[18] =  NULL
REG[22] =  NULL
  84 Jump            85   77   85               00 
  77 Column           3    2   21               00 r[21]=
REG[21] =  NULL
  78 AggStep1         1   21    1 sum(1)        01 accum=r[1] step(r[21])
REG[21] =  NULL
  79 Delete           3    0    0               02 
  80 Next             3   82    0               00 
  82 Column           3    1   22               00 r[22]=
REG[22] =  i:1
  83 Compare         18   22    1 k(1,B)        00 r[18] <-> r[22]
REG[18] =  NULL
REG[22] =  i:1
  84 Jump            85   77   85               00 
  85 Copy            22   18    0               00 r[18]=r[22]
REG[18] =  i:1
  86 Goto             0   69    0               00 
  69 AggValue         1    1    2 sum(1)        00 r[2]=value N=1
  70 Gosub           11   89    0               00 
REG[11] =  i:70
  89 Noop             0    0    0               00 inner-loop subroutine
  90 Column           1    0   23               00 r[23]=
REG[23] =  i:1
  91 Copy             2   24    0               00 r[24]=r[2]
REG[24] =  i:2
  92 ResultRow       23    2    0               00 output=r[23..24]
REG[23] =  i:1
REG[24] =  i:2
  93 Return          11    0    0               00 end inner-loop subroutine
REG[11] =  i:70
  71 Next             1   73    0               00 
  73 Column           1    1   22               00 r[22]=
REG[22] =  i:1
  74 Compare         19   22    1 k(1,B)        00 r[19] <-> r[22]
REG[19] =  i:1
REG[22] =  i:1
  75 Jump            76   70   76               00 
  70 Gosub           11   89    0               00 
REG[11] =  i:70
  89 Noop             0    0    0               00 inner-loop subroutine
  90 Column           1    0   23               00 r[23]=
REG[23] =  i:1
  91 Copy             2   24    0               00 r[24]=r[2]
REG[24] =  i:2
  92 ResultRow       23    2    0               00 output=r[23..24]
REG[23] =  i:1
REG[24] =  i:2
  93 Return          11    0    0               00 end inner-loop subroutine
REG[11] =  i:70
  71 Next             1   73    0               00 
  72 Goto             0   87    0               00 
  87 ResetSorter      1    0    0               00 
  88 Goto             0   94    0               00 
  94 Halt             0    0    0               00 
SQL: [SELECT following, sum(following) over (
    ORDER BY following
    RANGE BETWEEN CURRENT ROW AND UNBOUNDED following
  ) FROM over

;]
VDBE Trace:
   0 Init             0   85    0               00 Start at 85
  85 Transaction      1    0    2 0             01 usesStmtJournal=0
  86 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenEphemeral    1    3    0               00 nColumn=3
   3 OpenDup          2    1    0               00 
   4 OpenDup          3    1    0               00 
   5 OpenDup          4    1    0               00 
   6 InitCoroutine    3   18    7               00 subquery_2
  18 Integer          1    7    0               00 r[7]=1
REG[7] =  i:1
  19 Explain         19    0    0 SCAN SUBQUERY 2 00 
  20 InitCoroutine    3    0    7               00 
  21 Yield            3   50    0               00 next row of subquery_2
REG[3] =  i:6
REG[3] =  i:21
   7 Explain          7    0    0 CO-ROUTINE 2  00 
   8 Noop             6    5    0               00 
   9 OpenRead         7    3    1 k(2,,)        00 root=3 iDb=1; field1
  10 Explain         10    7    0 SCAN TABLE over USING COVERING INDEX field1 00 
  11 Rewind           7   17    4 0             00 
  12 Column           7    0    4               00 r[4]=over.following
REG[4] =  i:1
  13 Column           7    0    5               00 r[5]=over.following
REG[5] =  i:1
  14 Column           7    0    6               00 r[6]=over.following
REG[6] =  i:1
  15 Yield            3    0    0               00 
REG[3] =  i:21
REG[3] =  i:15
  22 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:1
  23 Copy             5   10    0               00 r[10]=r[5]
REG[10] =  i:1
  24 Copy             6   11    0               00 r[11]=r[6]
REG[11] =  i:1
  25 MakeRecord       9    3   12               00 r[12]=mkrec(r[9..11])
REG[12] =  s4[04090909....]
  26 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  27 Insert           2   12   13               00 intkey=r[13] data=r[12]
REG[12] =  s4[04090909....]
REG[13] =  i:1
  28 Ne               7   38   13               00 if r[13]!=r[7] goto 38
REG[7] =  i:1
REG[13] =  i:1
  29 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
  30 Rewind           3    1    0               00 
  31 Rewind           1    1    0               00 
  32 Rewind           4    1    0               00 
  33 Copy            10   14    0               00 r[14]=r[10]
REG[14] =  i:1
  34 Copy            14   15    0               00 r[15]=r[14]
REG[15] =  i:1
  35 Copy            14   16    0               00 r[16]=r[14]
REG[16] =  i:1
  36 Copy            14   17    0               00 r[17]=r[14]
REG[17] =  i:1
  37 Goto             0   49    0               00 
  49 Goto             0   21    0               00 
  21 Yield            3   50    0               00 next row of subquery_2
REG[3] =  i:15
REG[3] =  i:21
  16 Next             7   12    0               01 
  12 Column           7    0    4               00 r[4]=over.following
REG[4] =  i:10
  13 Column           7    0    5               00 r[5]=over.following
REG[5] =  i:10
  14 Column           7    0    6               00 r[6]=over.following
REG[6] =  i:10
  15 Yield            3    0    0               00 
REG[3] =  i:21
REG[3] =  i:15
  22 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:10
  23 Copy             5   10    0               00 r[10]=r[5]
REG[10] =  i:10
  24 Copy             6   11    0               00 r[11]=r[6]
REG[11] =  i:10
  25 MakeRecord       9    3   12               00 r[12]=mkrec(r[9..11])
REG[12] =  s7[040101010A0A0A.......]
  26 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:2
  27 Insert           2   12   13               00 intkey=r[13] data=r[12]
REG[12] =  s7[040101010A0A0A.......]
REG[13] =  i:2
  28 Ne               7   38   13               00 if r[13]!=r[7] goto 38
REG[7] =  i:1
REG[13] =  i:2
  38 Compare         14   10    1 k(1,B)        00 r[14] <-> r[10]
REG[14] =  i:1
REG[10] =  i:10
  39 Jump            40   49   40               00 
  40 Copy            10   14    0               00 r[14]=r[10]
REG[14] =  i:10
  41 Column           4    2   18               00 r[18]=
REG[18] =  i:1
  42 AggStep          0   18    1 sum(1)        01 accum=r[1] step(r[18])
REG[18] =  i:1
  43 Next             4   45    0               00 
  45 Column           4    1   19               00 r[19]=
REG[19] =  i:10
  46 Compare         17   19    1 k(1,B)        00 r[17] <-> r[19]
REG[17] =  i:1
REG[19] =  i:10
  47 Jump            48   41   48               00 
  48 Copy            19   17    0               00 r[17]=r[19]
REG[17] =  i:10
  49 Goto             0   21    0               00 
  21 Yield            3   50    0               00 next row of subquery_2
REG[3] =  i:15
REG[3] =  i:21
  16 Next             7   12    0               01 
  12 Column           7    0    4               00 r[4]=over.following
REG[4] =  i:18
  13 Column           7    0    5               00 r[5]=over.following
REG[5] =  i:18
  14 Column           7    0    6               00 r[6]=over.following
REG[6] =  i:18
  15 Yield            3    0    0               00 
REG[3] =  i:21
REG[3] =  i:15
  22 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:18
  23 Copy             5   10    0               00 r[10]=r[5]
REG[10] =  i:18
  24 Copy             6   11    0               00 r[11]=r[6]
REG[11] =  i:18
  25 MakeRecord       9    3   12               00 r[12]=mkrec(r[9..11])
REG[12] =  s7[04010101121212.......]
  26 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:3
  27 Insert           2   12   13               00 intkey=r[13] data=r[12]
REG[12] =  s7[04010101121212.......]
REG[13] =  i:3
  28 Ne               7   38   13               00 if r[13]!=r[7] goto 38
REG[7] =  i:1
REG[13] =  i:3
  38 Compare         14   10    1 k(1,B)        00 r[14] <-> r[10]
REG[14] =  i:10
REG[10] =  i:18
  39 Jump            40   49   40               00 
  40 Copy            10   14    0               00 r[14]=r[10]
REG[14] =  i:18
  41 Column           4    2   18               00 r[18]=
REG[18] =  i:10
  42 AggStep1         0   18    1 sum(1)        01 accum=r[1] step(r[18])
REG[18] =  i:10
  43 Next             4   45    0               00 
  45 Column           4    1   19               00 r[19]=
REG[19] =  i:18
  46 Compare         17   19    1 k(1,B)        00 r[17] <-> r[19]
REG[17] =  i:10
REG[19] =  i:18
  47 Jump            48   41   48               00 
  48 Copy            19   17    0               00 r[17]=r[19]
REG[17] =  i:18
  49 Goto             0   21    0               00 
  21 Yield            3   50    0               00 next row of subquery_2
REG[3] =  i:15
REG[3] =  i:21
  16 Next             7   12    0               01 
  17 EndCoroutine     3    0    0               00 
REG[3] =  i:21
  50 Rewind           2   77    0               00 
  51 Column           4    2   18               00 r[18]=
REG[18] =  i:18
  52 AggStep          0   18    1 sum(1)        01 accum=r[1] step(r[18])
REG[18] =  i:18
  53 Next             4   55    0               00 
  54 Goto             0   59    0               00 
  59 AggValue         1    1    2 sum(1)        00 r[2]=value N=1
  60 Gosub            8   79    0               00 
REG[8] =  i:60
  79 Noop             0    0    0               00 inner-loop subroutine
  80 Column           1    0   20               00 r[20]=
REG[20] =  i:1
  81 Copy             2   21    0               00 r[21]=r[2]
REG[21] =  i:29
  82 ResultRow       20    2    0               00 output=r[20..21]
REG[20] =  i:1
REG[21] =  i:29
  83 Return           8    0    0               00 end inner-loop subroutine
REG[8] =  i:60
  61 Next             1   63    0               00 
  63 Column           1    1   19               00 r[19]=
REG[19] =  i:10
  64 Compare         16   19    1 k(1,B)        00 r[16] <-> r[19]
REG[16] =  i:1
REG[19] =  i:10
  65 Jump            66   60   66               00 
  66 Copy            19   16    0               00 r[16]=r[19]
REG[16] =  i:10
  67 Column           3    2   18               00 r[18]=
REG[18] =  i:1
  68 AggInverse       1   18    1 sum(1)        01 accum=r[1] inverse(r[18])
REG[18] =  i:1
  69 Delete           3    0    0               02 
  70 Next             3   72    0               00 
  72 Column           3    1   19               00 r[19]=
REG[19] =  i:10
  73 Compare         15   19    1 k(1,B)        00 r[15] <-> r[19]
REG[15] =  i:1
REG[19] =  i:10
  74 Jump            75   67   75               00 
  75 Copy            19   15    0               00 r[15]=r[19]
REG[15] =  i:10
  76 Goto             0   59    0               00 
  59 AggValue         1    1    2 sum(1)        00 r[2]=value N=1
  60 Gosub            8   79    0               00 
REG[8] =  i:60
  79 Noop             0    0    0               00 inner-loop subroutine
  80 Column           1    0   20               00 r[20]=
REG[20] =  i:10
  81 Copy             2   21    0               00 r[21]=r[2]
REG[21] =  i:28
  82 ResultRow       20    2    0               00 output=r[20..21]
REG[20] =  i:10
REG[21] =  i:28
  83 Return           8    0    0               00 end inner-loop subroutine
REG[8] =  i:60
  61 Next             1   63    0               00 
  63 Column           1    1   19               00 r[19]=
REG[19] =  i:18
  64 Compare         16   19    1 k(1,B)        00 r[16] <-> r[19]
REG[16] =  i:10
REG[19] =  i:18
  65 Jump            66   60   66               00 
  66 Copy            19   16    0               00 r[16]=r[19]
REG[16] =  i:18
  67 Column           3    2   18               00 r[18]=
REG[18] =  i:10
  68 AggStep1         1   18    1 sum(1)        01 accum=r[1] step(r[18])
REG[18] =  i:10
  69 Delete           3    0    0               02 
  70 Next             3   72    0               00 
  72 Column           3    1   19               00 r[19]=
REG[19] =  i:18
  73 Compare         15   19    1 k(1,B)        00 r[15] <-> r[19]
REG[15] =  i:10
REG[19] =  i:18
  74 Jump            75   67   75               00 
  75 Copy            19   15    0               00 r[15]=r[19]
REG[15] =  i:18
  76 Goto             0   59    0               00 
  59 AggValue         1    1    2 sum(1)        00 r[2]=value N=1
  60 Gosub            8   79    0               00 
REG[8] =  i:60
  79 Noop             0    0    0               00 inner-loop subroutine
  80 Column           1    0   20               00 r[20]=
REG[20] =  i:18
  81 Copy             2   21    0               00 r[21]=r[2]
REG[21] =  i:18
  82 ResultRow       20    2    0               00 output=r[20..21]
REG[20] =  i:18
REG[21] =  i:18
  83 Return           8    0    0               00 end inner-loop subroutine
REG[8] =  i:60
  61 Next             1   63    0               00 
  62 Goto             0   77    0               00 
  77 ResetSorter      1    0    0               00 
  78 Goto             0   84    0               00 
  84 Halt             0    0    0               00 
SQL: [SELECT v0 FROM t0 WHERE rowid=4
;]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    0    4 0             01 usesStmtJournal=0
   9 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t0
   2 Explain          2    0    0 SEARCH TABLE t0 USING INTEGER PRIMARY KEY (rowid=?) 00 
   3 Integer          4    1    0               00 r[1]=4
REG[1] =  i:4
   4 SeekRowid        0    7    1               00 intkey=r[1]
REG[1] =  i:4
   5 Column           0    1    2               00 r[2]=t0.v0
REG[2] =  NULL
   6 ResultRow        2    1    0               00 output=r[2]
REG[2] =  NULL
   7 Halt             0    0    0               00 
SQL: [;;INSERT INTO t0(c0) VALUES(11);]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    1    4 0             01 usesStmtJournal=0
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t0
   2 OpenWrite        1    4    0 k(2,,)        00 root=4 iDb=0; test003
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   4 Integer         11    2    0               00 r[2]=11
REG[2] =  i:11
   5 Affinity         2    2    0 DD            00 affinity(r[2..3])
   6 Noop             0    0    0               00 uniqueness check for test003
   7 SCopy            2    5    0               00 r[5]=r[2]; c0
REG[5] =  i:11
   8 IntCopy          1    6    0               00 r[6]=r[1]; rowid
REG[6] =  i:6
   9 MakeRecord       5    2    4               00 r[4]=mkrec(r[5..6]); for test003
REG[4] =  s5[0301010B06.....]
  10 IdxInsert        1    4    5 2             10 key=r[4]
REG[4] =  s5[0301010B06.....]
  11 MakeRecord       2    2    7               00 r[7]=mkrec(r[2..3])
REG[7] =  s4[0301000B....]
  12 Insert           0    7    1 t0            39 intkey=r[1] data=r[7]
REG[7] =  s4[0301000B....]
REG[1] =  i:6
  13 Halt             0    0    0               00 
SQL: [;;INSERT INTO t0(v0) VALUES(44);]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    1    4 0             01 usesStmtJournal=0
  15 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  16 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t0
   2 OpenWrite        1    4    0 k(2,,)        00 root=4 iDb=0; test003
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:7
   4 Integer         44    3    0               00 r[3]=44
REG[3] =  i:44
   5 Affinity         2    2    0 DD            00 affinity(r[2..3])
   6 Noop             0    0    0               00 uniqueness check for test003
   7 SCopy            2    5    0               00 r[5]=r[2]; c0
REG[5] =  NULL
   8 IntCopy          1    6    0               00 r[6]=r[1]; rowid
REG[6] =  i:7
   9 MakeRecord       5    2    4               00 r[4]=mkrec(r[5..6]); for test003
REG[4] =  s4[03000107....]
  10 IdxInsert        1    4    5 2             10 key=r[4]
REG[4] =  s4[03000107....]
  11 MakeRecord       2    2    7               00 r[7]=mkrec(r[2..3])
REG[7] =  s4[0300012C...,]
  12 Insert           0    7    1 t0            39 intkey=r[1] data=r[7]
REG[7] =  s4[0300012C...,]
REG[1] =  i:7
  13 Halt             0    0    0               00 
SQL: [;;INSERT INTO over(following) VALUES(55);]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      1    1    2 0             01 usesStmtJournal=0
  15 Goto             0    1    0               00 
   1 OpenWrite        0    2    1 1             00 root=2 iDb=1; over
   2 OpenWrite        1    3    1 k(2,,)        00 root=3 iDb=1; field1
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   4 Integer         55    2    0               00 r[2]=55
REG[2] =  i:55
   5 Affinity         2    1    0 D             00 affinity(r[2])
   6 Noop             0    0    0               00 uniqueness check for field1
   7 SCopy            2    4    0               00 r[4]=r[2]; following
REG[4] =  i:55
   8 IntCopy          1    5    0               00 r[5]=r[1]; rowid
REG[5] =  i:4
   9 MakeRecord       4    2    3               00 r[3]=mkrec(r[4..5]); for field1
REG[3] =  s5[0301013704...7.]
  10 IdxInsert        1    3    4 2             10 key=r[3]
REG[3] =  s5[0301013704...7.]
  11 MakeRecord       2    1    6               00 r[6]=mkrec(r[2])
REG[6] =  s3[020137..7]
  12 Insert           0    6    1 over          39 intkey=r[1] data=r[6]
REG[6] =  s3[020137..7]
REG[1] =  i:4
  13 Halt             0    0    0               00 
SQL: [;INSERT INTO t0(v0) VALUES(111);]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    1    4 0             01 usesStmtJournal=0
  15 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  16 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t0
   2 OpenWrite        1    4    0 k(2,,)        00 root=4 iDb=0; test003
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:8
   4 Integer        111    3    0               00 r[3]=111
REG[3] =  i:111
   5 Affinity         2    2    0 DD            00 affinity(r[2..3])
   6 Noop             0    0    0               00 uniqueness check for test003
   7 SCopy            2    5    0               00 r[5]=r[2]; c0
REG[5] =  NULL
   8 IntCopy          1    6    0               00 r[6]=r[1]; rowid
REG[6] =  i:8
   9 MakeRecord       5    2    4               00 r[4]=mkrec(r[5..6]); for test003
REG[4] =  s4[03000108....]
  10 IdxInsert        1    4    5 2             10 key=r[4]
REG[4] =  s4[03000108....]
  11 MakeRecord       2    2    7               00 r[7]=mkrec(r[2..3])
REG[7] =  s4[0300016F...o]
  12 Insert           0    7    1 t0            39 intkey=r[1] data=r[7]
REG[7] =  s4[0300016F...o]
REG[1] =  i:8
  13 Halt             0    0    0               00 
SQL: [;SELECT * FROM t1;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    4 0             01 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 OpenRead         0    3    0 4             00 root=3 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
SQL: [;INSERT INTO over VALUES(2);]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      1    1    2 0             01 usesStmtJournal=0
  15 Goto             0    1    0               00 
   1 OpenWrite        0    2    1 1             00 root=2 iDb=1; over
   2 OpenWrite        1    3    1 k(2,,)        00 root=3 iDb=1; field1
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   4 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
   5 Affinity         2    1    0 D             00 affinity(r[2])
   6 Noop             0    0    0               00 uniqueness check for field1
   7 SCopy            2    4    0               00 r[4]=r[2]; following
REG[4] =  i:2
   8 IntCopy          1    5    0               00 r[5]=r[1]; rowid
REG[5] =  i:5
   9 MakeRecord       4    2    3               00 r[3]=mkrec(r[4..5]); for field1
REG[3] =  s5[0301010205.....]
  10 IdxInsert        1    3    4 2             10 key=r[3]
REG[3] =  s5[0301010205.....]
  11 MakeRecord       2    1    6               00 r[6]=mkrec(r[2])
REG[6] =  s3[020102...]
  12 Insert           0    6    1 over          39 intkey=r[1] data=r[6]
REG[6] =  s3[020102...]
REG[1] =  i:5
  13 Halt             0    0    0               00 
SQL: [;;SELECT count(*) over (ORDER BY following) FROM over

;]
VDBE Trace:
   0 Init             0   78    0               00 Start at 78
  78 Transaction      1    0    2 0             01 usesStmtJournal=0
  79 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenEphemeral    1    1    0               00 nColumn=1
   3 OpenDup          2    1    0               00 
   4 OpenDup          3    1    0               00 
   5 OpenDup          4    1    0               00 
   6 InitCoroutine    3   16    7               00 subquery_2
  16 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  17 Explain         17    0    0 SCAN SUBQUERY 2 00 
  18 InitCoroutine    3    0    7               00 
  19 Yield            3   53    0               00 next row of subquery_2
REG[3] =  i:6
REG[3] =  i:19
   7 Explain          7    0    0 CO-ROUTINE 2  00 
   8 Noop             6    3    0               00 
   9 OpenRead         7    3    1 k(2,,)        00 root=3 iDb=1; field1
  10 Explain         10    7    0 SCAN TABLE over USING COVERING INDEX field1 00 
  11 Rewind           7   15    4 0             00 
  12 Column           7    0    4               00 r[4]=over.following
REG[4] =  i:1
  13 Yield            3    0    0               00 
REG[3] =  i:19
REG[3] =  i:13
  20 Copy             4    7    0               00 r[7]=r[4]
REG[7] =  i:1
  21 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s2[0209..]
  22 NewRowid         2    9    0               00 r[9]=rowid
REG[9] =  i:1
  23 Insert           2    8    9               00 intkey=r[9] data=r[8]
REG[8] =  s2[0209..]
REG[9] =  i:1
  24 Ne               5   33    9               00 if r[9]!=r[5] goto 33
REG[5] =  i:1
REG[9] =  i:1
  25 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
  26 Rewind           1    1    0               00 
  27 Rewind           4    1    0               00 
  28 Copy             7   10    0               00 r[10]=r[7]
REG[10] =  i:1
  29 Copy            10   11    0               00 r[11]=r[10]
REG[11] =  i:1
  30 Copy            10   12    0               00 r[12]=r[10]
REG[12] =  i:1
  31 Copy            10   13    0               00 r[13]=r[10]
REG[13] =  i:1
  32 Goto             0   52    0               00 
  52 Goto             0   19    0               00 
  19 Yield            3   53    0               00 next row of subquery_2
REG[3] =  i:13
REG[3] =  i:19
  14 Next             7   12    0               01 
  12 Column           7    0    4               00 r[4]=over.following
REG[4] =  i:2
  13 Yield            3    0    0               00 
REG[3] =  i:19
REG[3] =  i:13
  20 Copy             4    7    0               00 r[7]=r[4]
REG[7] =  i:2
  21 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s3[020102...]
  22 NewRowid         2    9    0               00 r[9]=rowid
REG[9] =  i:2
  23 Insert           2    8    9               00 intkey=r[9] data=r[8]
REG[8] =  s3[020102...]
REG[9] =  i:2
  24 Ne               5   33    9               00 if r[9]!=r[5] goto 33
REG[5] =  i:1
REG[9] =  i:2
  33 Compare         10    7    1 k(1,B)        00 r[10] <-> r[7]
REG[10] =  i:1
REG[7] =  i:2
  34 Jump            35   52   35               00 
  35 Copy             7   10    0               00 r[10]=r[7]
REG[10] =  i:2
  36 AggStep          0   14    1 count(0)      00 accum=r[1] step(r[14])
  37 Next             4   39    0               00 
  39 Column           4    0   14               00 r[14]=
REG[14] =  i:2
  40 Compare         13   14    1 k(1,B)        00 r[13] <-> r[14]
REG[13] =  i:1
REG[14] =  i:2
  41 Jump            42   36   42               00 
  42 Copy            14   13    0               00 r[13]=r[14]
REG[13] =  i:2
  43 AggValue         1    0    2 count(0)      00 r[2]=value N=0
  44 Gosub            6   73    0               00 
REG[6] =  i:44
  73 Noop             0    0    0               00 inner-loop subroutine
  74 Copy             2   15    0               00 r[15]=r[2]
REG[15] =  i:1
  75 ResultRow       15    1    0               00 output=r[15]
REG[15] =  i:1
  76 Return           6    0    0               00 end inner-loop subroutine
REG[6] =  i:44
  45 Delete           1    0    0               02 
  46 Next             1   48    0               00 
  48 Column           1    0   14               00 r[14]=
REG[14] =  i:2
  49 Compare         12   14    1 k(1,B)        00 r[12] <-> r[14]
REG[12] =  i:1
REG[14] =  i:2
  50 Jump            51   44   51               00 
  51 Copy            14   12    0               00 r[12]=r[14]
REG[12] =  i:2
  52 Goto             0   19    0               00 
  19 Yield            3   53    0               00 next row of subquery_2
REG[3] =  i:13
REG[3] =  i:19
  14 Next             7   12    0               01 
  12 Column           7    0    4               00 r[4]=over.following
REG[4] =  i:10
  13 Yield            3    0    0               00 
REG[3] =  i:19
REG[3] =  i:13
  20 Copy             4    7    0               00 r[7]=r[4]
REG[7] =  i:10
  21 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s3[02010A...]
  22 NewRowid         2    9    0               00 r[9]=rowid
REG[9] =  i:3
  23 Insert           2    8    9               00 intkey=r[9] data=r[8]
REG[8] =  s3[02010A...]
REG[9] =  i:3
  24 Ne               5   33    9               00 if r[9]!=r[5] goto 33
REG[5] =  i:1
REG[9] =  i:3
  33 Compare         10    7    1 k(1,B)        00 r[10] <-> r[7]
REG[10] =  i:2
REG[7] =  i:10
  34 Jump            35   52   35               00 
  35 Copy             7   10    0               00 r[10]=r[7]
REG[10] =  i:10
  36 AggStep1         0   14    1 count(0)      00 accum=r[1] step(r[14])
  37 Next             4   39    0               00 
  39 Column           4    0   14               00 r[14]=
REG[14] =  i:10
  40 Compare         13   14    1 k(1,B)        00 r[13] <-> r[14]
REG[13] =  i:2
REG[14] =  i:10
  41 Jump            42   36   42               00 
  42 Copy            14   13    0               00 r[13]=r[14]
REG[13] =  i:10
  43 AggValue         1    0    2 count(0)      00 r[2]=value N=0
  44 Gosub            6   73    0               00 
REG[6] =  i:44
  73 Noop             0    0    0               00 inner-loop subroutine
  74 Copy             2   15    0               00 r[15]=r[2]
REG[15] =  i:2
  75 ResultRow       15    1    0               00 output=r[15]
REG[15] =  i:2
  76 Return           6    0    0               00 end inner-loop subroutine
REG[6] =  i:44
  45 Delete           1    0    0               02 
  46 Next             1   48    0               00 
  48 Column           1    0   14               00 r[14]=
REG[14] =  i:10
  49 Compare         12   14    1 k(1,B)        00 r[12] <-> r[14]
REG[12] =  i:2
REG[14] =  i:10
  50 Jump            51   44   51               00 
  51 Copy            14   12    0               00 r[12]=r[14]
REG[12] =  i:10
  52 Goto             0   19    0               00 
  19 Yield            3   53    0               00 next row of subquery_2
REG[3] =  i:13
REG[3] =  i:19
  14 Next             7   12    0               01 
  12 Column           7    0    4               00 r[4]=over.following
REG[4] =  i:18
  13 Yield            3    0    0               00 
REG[3] =  i:19
REG[3] =  i:13
  20 Copy             4    7    0               00 r[7]=r[4]
REG[7] =  i:18
  21 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s3[020112...]
  22 NewRowid         2    9    0               00 r[9]=rowid
REG[9] =  i:4
  23 Insert           2    8    9               00 intkey=r[9] data=r[8]
REG[8] =  s3[020112...]
REG[9] =  i:4
  24 Ne               5   33    9               00 if r[9]!=r[5] goto 33
REG[5] =  i:1
REG[9] =  i:4
  33 Compare         10    7    1 k(1,B)        00 r[10] <-> r[7]
REG[10] =  i:10
REG[7] =  i:18
  34 Jump            35   52   35               00 
  35 Copy             7   10    0               00 r[10]=r[7]
REG[10] =  i:18
  36 AggStep1         0   14    1 count(0)      00 accum=r[1] step(r[14])
  37 Next             4   39    0               00 
  39 Column           4    0   14               00 r[14]=
REG[14] =  i:18
  40 Compare         13   14    1 k(1,B)        00 r[13] <-> r[14]
REG[13] =  i:10
REG[14] =  i:18
  41 Jump            42   36   42               00 
  42 Copy            14   13    0               00 r[13]=r[14]
REG[13] =  i:18
  43 AggValue         1    0    2 count(0)      00 r[2]=value N=0
  44 Gosub            6   73    0               00 
REG[6] =  i:44
  73 Noop             0    0    0               00 inner-loop subroutine
  74 Copy             2   15    0               00 r[15]=r[2]
REG[15] =  i:3
  75 ResultRow       15    1    0               00 output=r[15]
REG[15] =  i:3
  76 Return           6    0    0               00 end inner-loop subroutine
REG[6] =  i:44
  45 Delete           1    0    0               02 
  46 Next             1   48    0               00 
  48 Column           1    0   14               00 r[14]=
REG[14] =  i:18
  49 Compare         12   14    1 k(1,B)        00 r[12] <-> r[14]
REG[12] =  i:10
REG[14] =  i:18
  50 Jump            51   44   51               00 
  51 Copy            14   12    0               00 r[12]=r[14]
REG[12] =  i:18
  52 Goto             0   19    0               00 
  19 Yield            3   53    0               00 next row of subquery_2
REG[3] =  i:13
REG[3] =  i:19
  14 Next             7   12    0               01 
  12 Column           7    0    4               00 r[4]=over.following
REG[4] =  i:55
  13 Yield            3    0    0               00 
REG[3] =  i:19
REG[3] =  i:13
  20 Copy             4    7    0               00 r[7]=r[4]
REG[7] =  i:55
  21 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s3[020137..7]
  22 NewRowid         2    9    0               00 r[9]=rowid
REG[9] =  i:5
  23 Insert           2    8    9               00 intkey=r[9] data=r[8]
REG[8] =  s3[020137..7]
REG[9] =  i:5
  24 Ne               5   33    9               00 if r[9]!=r[5] goto 33
REG[5] =  i:1
REG[9] =  i:5
  33 Compare         10    7    1 k(1,B)        00 r[10] <-> r[7]
REG[10] =  i:18
REG[7] =  i:55
  34 Jump            35   52   35               00 
  35 Copy             7   10    0               00 r[10]=r[7]
REG[10] =  i:55
  36 AggStep1         0   14    1 count(0)      00 accum=r[1] step(r[14])
  37 Next             4   39    0               00 
  39 Column           4    0   14               00 r[14]=
REG[14] =  i:55
  40 Compare         13   14    1 k(1,B)        00 r[13] <-> r[14]
REG[13] =  i:18
REG[14] =  i:55
  41 Jump            42   36   42               00 
  42 Copy            14   13    0               00 r[13]=r[14]
REG[13] =  i:55
  43 AggValue         1    0    2 count(0)      00 r[2]=value N=0
  44 Gosub            6   73    0               00 
REG[6] =  i:44
  73 Noop             0    0    0               00 inner-loop subroutine
  74 Copy             2   15    0               00 r[15]=r[2]
REG[15] =  i:4
  75 ResultRow       15    1    0               00 output=r[15]
REG[15] =  i:4
  76 Return           6    0    0               00 end inner-loop subroutine
REG[6] =  i:44
  45 Delete           1    0    0               02 
  46 Next             1   48    0               00 
  48 Column           1    0   14               00 r[14]=
REG[14] =  i:55
  49 Compare         12   14    1 k(1,B)        00 r[12] <-> r[14]
REG[12] =  i:18
REG[14] =  i:55
  50 Jump            51   44   51               00 
  51 Copy            14   12    0               00 r[12]=r[14]
REG[12] =  i:55
  52 Goto             0   19    0               00 
  19 Yield            3   53    0               00 next row of subquery_2
REG[3] =  i:13
REG[3] =  i:19
  14 Next             7   12    0               01 
  15 EndCoroutine     3    0    0               00 
REG[3] =  i:19
  53 Rewind           2   71    0               00 
  54 AggStep          0   14    1 count(0)      00 accum=r[1] step(r[14])
  55 Next             4   57    0               00 
  56 Goto             0   61    0               00 
  61 AggValue         1    0    2 count(0)      00 r[2]=value N=0
  62 Gosub            6   73    0               00 
REG[6] =  i:62
  73 Noop             0    0    0               00 inner-loop subroutine
  74 Copy             2   15    0               00 r[15]=r[2]
REG[15] =  i:5
  75 ResultRow       15    1    0               00 output=r[15]
REG[15] =  i:5
  76 Return           6    0    0               00 end inner-loop subroutine
REG[6] =  i:62
  63 Delete           1    0    0               02 
  64 Next             1   66    0               00 
  65 Goto             0   71    0               00 
  71 ResetSorter      1    0    0               00 
  72 Goto             0   77    0               00 
  77 Halt             0    0    0               00 
SQL: [DROP TABLE IF EXISTS t1;]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      0    1    4 0             01 usesStmtJournal=1
  39 String8          0    3    0 t1            00 r[3]='t1'
REG[3] =   t2[t1](8)
  40 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  41 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t0](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[t1](8)
REG[2] =   s2[t0](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t0](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[t1](8)
REG[2] =   s2[t0](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[t1](8)
REG[2] =   s2[t1](8)
   7 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
   8 Eq               4   12    2 (BINARY)      52 if r[2]==r[4] goto 12
REG[4] =   t7[trigger](8)
REG[2] =   s5[table](8)
   9 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:3
  10 Once             0   11    0               00 
  11 Delete           0    0    0               02 
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t0](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[t1](8)
REG[2] =   s2[t0](8)
  12 Next             0    5    0               01 
  13 Destroy          3    2    0               00 
REG[2] =  i:0
  14 Null             0    6    7               00 r[6..7]=NULL
REG[6] =  NULL
  15 IfNot            2   24    1               00 
REG[2] =  i:0
  24 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  25 RowSetRead       6   35    7               00 r[7]=rowset(6)
REG[6] =  NULL
REG[7] =  NULL
  35 DropTable        0    0    0 t1            00 
  36 SetCookie        0    1    5               00 
  37 Halt             0    0    0               00 
SQL: [;INSERT INTO t0 VALUES(10, 1);]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    1    5 0             01 usesStmtJournal=0
  16 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t0
   2 OpenWrite        1    4    0 k(2,,)        00 root=4 iDb=0; test003
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:9
   4 Integer         10    2    0               00 r[2]=10
REG[2] =  i:10
   5 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   6 Affinity         2    2    0 DD            00 affinity(r[2..3])
   7 Noop             0    0    0               00 uniqueness check for test003
   8 SCopy            2    5    0               00 r[5]=r[2]; c0
REG[5] =  i:10
   9 IntCopy          1    6    0               00 r[6]=r[1]; rowid
REG[6] =  i:9
  10 MakeRecord       5    2    4               00 r[4]=mkrec(r[5..6]); for test003
REG[4] =  s5[0301010A09.....]
  11 IdxInsert        1    4    5 2             10 key=r[4]
REG[4] =  s5[0301010A09.....]
  12 MakeRecord       2    2    7               00 r[7]=mkrec(r[2..3])
REG[7] =  s4[0301090A....]
  13 Insert           0    7    1 t0            39 intkey=r[1] data=r[7]
REG[7] =  s4[0301090A....]
REG[1] =  i:9
  14 Halt             0    0    0               00 
SQL: [SELECT rowid, c0 FROM t0 WHERE 5.5>=rowid ORDER BY rowid DESC
;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    5 0             01 usesStmtJournal=0
  11 Real             0    1    0 5.5           00 r[1]=5.5
REG[1] =  r:5.5
  12 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t0
   3 Explain          3    0    0 SEARCH TABLE t0 USING INTEGER PRIMARY KEY (rowid<?) 00 
   4 SeekLE           0    9    1               00 key=r[1]; pk
REG[1] =  r:5.5
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:5
   6 Column           0    0    3               00 r[3]=t0.c0
REG[3] =  i:38
   7 ResultRow        2    2    0               00 output=r[2..3]
REG[2] =  i:5
REG[3] =  i:38
   8 Prev             0    5    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:4
   6 Column           0    0    3               00 r[3]=t0.c0
REG[3] =  i:20
   7 ResultRow        2    2    0               00 output=r[2..3]
REG[2] =  i:4
REG[3] =  i:20
   8 Prev             0    5    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:3
   6 Column           0    0    3               00 r[3]=t0.c0
REG[3] =  NULL
   7 ResultRow        2    2    0               00 output=r[2..3]
REG[2] =  i:3
REG[3] =  NULL
   8 Prev             0    5    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
   6 Column           0    0    3               00 r[3]=t0.c0
REG[3] =  NULL
   7 ResultRow        2    2    0               00 output=r[2..3]
REG[2] =  i:2
REG[3] =  NULL
   8 Prev             0    5    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 Column           0    0    3               00 r[3]=t0.c0
REG[3] =  NULL
   7 ResultRow        2    2    0               00 output=r[2..3]
REG[2] =  i:1
REG[3] =  NULL
   8 Prev             0    5    0               00 
   9 Halt             0    0    0               00 
SQL: [SELECT rowid, c0 FROM t0 WHERE -5.5>=rowid ORDER BY rowid DESC
;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    5 0             01 usesStmtJournal=0
  11 Real             0    1    0 -5.5          00 r[1]=-5.5
REG[1] =  r:-5.5
  12 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t0
   3 Explain          3    0    0 SEARCH TABLE t0 USING INTEGER PRIMARY KEY (rowid<?) 00 
   4 SeekLE           0    9    1               00 key=r[1]; pk
REG[1] =  r:-5.5
   9 Halt             0    0    0               00 
SQL: [SELECT rowid, c0 FROM t0 WHERE rowid>='abc' ORDER BY 1 ASC
;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    5 0             01 usesStmtJournal=0
  11 String8          0    1    0 abc           00 r[1]='abc'
REG[1] =   t3[abc](8)
  12 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t0
   3 Explain          3    0    0 SEARCH TABLE t0 USING INTEGER PRIMARY KEY (rowid>?) 00 
   4 SeekGE           0    9    1               00 key=r[1]; pk
REG[1] =   t3[abc](8)
   9 Halt             0    0    0               00 
SQL: [SELECT rowid, v0 FROM t0 WHERE rowid<'abc' ORDER BY 1 ASC
;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    5 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t0
   3 Explain          3    0    0 SEARCH TABLE t0 USING INTEGER PRIMARY KEY (rowid<?) 00 
   4 Rewind           0   12    0               00 
   5 String8          0    1    0 abc           00 r[1]='abc'
REG[1] =   t3[abc](8)
   6 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   7 Ge               1   12    2               53 if r[2]>=r[1] goto 12
REG[1] =   t3[abc](8)
REG[2] =  i:1
   8 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:1
   9 Column           0    1    4               00 r[4]=t0.v0
REG[4] =  i:1
  10 ResultRow        3    2    0               00 output=r[3..4]
REG[3] =  i:1
REG[4] =  i:1
  11 Next             0    6    0               00 
   6 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
   7 Ge               1   12    2               53 if r[2]>=r[1] goto 12
REG[1] =   t3[abc](8)
REG[2] =  i:2
   8 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:2
   9 Column           0    1    4               00 r[4]=t0.v0
REG[4] =  NULL
  10 ResultRow        3    2    0               00 output=r[3..4]
REG[3] =  i:2
REG[4] =  NULL
  11 Next             0    6    0               00 
   6 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:3
   7 Ge               1   12    2               53 if r[2]>=r[1] goto 12
REG[1] =   t3[abc](8)
REG[2] =  i:3
   8 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:3
   9 Column           0    1    4               00 r[4]=t0.v0
REG[4] =  i:1
  10 ResultRow        3    2    0               00 output=r[3..4]
REG[3] =  i:3
REG[4] =  i:1
  11 Next             0    6    0               00 
   6 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:4
   7 Ge               1   12    2               53 if r[2]>=r[1] goto 12
REG[1] =   t3[abc](8)
REG[2] =  i:4
   8 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:4
   9 Column           0    1    4               00 r[4]=t0.v0
REG[4] =  NULL
  10 ResultRow        3    2    0               00 output=r[3..4]
REG[3] =  i:4
REG[4] =  NULL
  11 Next             0    6    0               00 
   6 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:5
   7 Ge               1   12    2               53 if r[2]>=r[1] goto 12
REG[1] =   t3[abc](8)
REG[2] =  i:5
   8 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:5
   9 Column           0    1    4               00 r[4]=t0.v0
REG[4] =  NULL
  10 ResultRow        3    2    0               00 output=r[3..4]
REG[3] =  i:5
REG[4] =  NULL
  11 Next             0    6    0               00 
   6 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:6
   7 Ge               1   12    2               53 if r[2]>=r[1] goto 12
REG[1] =   t3[abc](8)
REG[2] =  i:6
   8 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:6
   9 Column           0    1    4               00 r[4]=t0.v0
REG[4] =  NULL
  10 ResultRow        3    2    0               00 output=r[3..4]
REG[3] =  i:6
REG[4] =  NULL
  11 Next             0    6    0               00 
   6 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:7
   7 Ge               1   12    2               53 if r[2]>=r[1] goto 12
REG[1] =   t3[abc](8)
REG[2] =  i:7
   8 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:7
   9 Column           0    1    4               00 r[4]=t0.v0
REG[4] =  i:44
  10 ResultRow        3    2    0               00 output=r[3..4]
REG[3] =  i:7
REG[4] =  i:44
  11 Next             0    6    0               00 
   6 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:8
   7 Ge               1   12    2               53 if r[2]>=r[1] goto 12
REG[1] =   t3[abc](8)
REG[2] =  i:8
   8 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:8
   9 Column           0    1    4               00 r[4]=t0.v0
REG[4] =  i:111
  10 ResultRow        3    2    0               00 output=r[3..4]
REG[3] =  i:8
REG[4] =  i:111
  11 Next             0    6    0               00 
   6 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:9
   7 Ge               1   12    2               53 if r[2]>=r[1] goto 12
REG[1] =   t3[abc](8)
REG[2] =  i:9
   8 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:9
   9 Column           0    1    4               00 r[4]=t0.v0
REG[4] =  i:1
  10 ResultRow        3    2    0               00 output=r[3..4]
REG[3] =  i:9
REG[4] =  i:1
  11 Next             0    6    0               00 
  12 Halt             0    0    0               00 

Program received signal SIGSEGV, Segmentation fault.
0x00000000003a15d8 in sqlite3WindowRewrite (pParse=0x7fffbe212000, p=0x8c2c80) at sqlite3.c:146356
146356	      pSublist = exprListAppendList(pParse, pSublist, pWin->pOwner->x.pList);
(gdb) #0  0x00000000003a15d8 in sqlite3WindowRewrite (pParse=0x7fffbe212000, p=0x8c2c80) at sqlite3.c:146356
#1  0x00000000002fc6de in sqlite3Select (pParse=0x7fffbe212000, p=0x8c2c80, pDest=0x7fffbe210970) at sqlite3.c:130281
#2  0x0000000000355337 in sqlite3CodeRhsOfIN (pParse=0x7fffbe212000, pExpr=0x8c7c30, iTab=3) at sqlite3.c:99650
#3  0x0000000000353c7b in sqlite3FindInIndex (pParse=0x7fffbe212000, pX=0x8c7c30, inFlags=4, prRhsHasNull=0x0, aiMap=0x8cff70, piTab=0x7fffbe210ba4) at sqlite3.c:99448
#4  0x00000000003795bd in codeEqualityTerm (pParse=0x7fffbe212000, pTerm=0x8bfeb0, pLevel=0x8c0138, iEq=0, bRev=0, iTarget=1) at sqlite3.c:136693
#5  0x000000000037a706 in codeAllEqualityTerms (pParse=0x7fffbe212000, pLevel=0x8c0138, bRev=0, nExtraReg=0, pzAff=0x7fffbe210e18) at sqlite3.c:136869
#6  0x0000000000375cb8 in sqlite3WhereCodeOneLoopStart (pParse=0x7fffbe212000, v=0x8cb920, pWInfo=0x8bfda0, iLevel=0, pLevel=0x8c0138, notReady=18446744073709551615) at sqlite3.c:137776
#7  0x000000000036c3cc in sqlite3WhereBegin (pParse=0x7fffbe212000, pTabList=0x8c1510, pWhere=0x8d08d0, pOrderBy=0x0, pResultSet=0x8c3f40, wctrlFlags=0, iAuxArg=320) at sqlite3.c:145128
#8  0x00000000002fdcea in sqlite3Select (pParse=0x7fffbe212000, p=0x8cd090, pDest=0x7fffbe2113f0) at sqlite3.c:130695
#9  0x00000000002ecaa8 in yy_reduce (yypParser=0x7fffbe211620, yyruleno=79, yyLookahead=1, yyLookaheadToken=..., pParse=0x7fffbe212000) at sqlite3.c:151581
#10 0x00000000002e92f8 in sqlite3Parser (yyp=0x7fffbe211620, yymajor=1, yyminor=...) at sqlite3.c:152877
#11 0x00000000002a68b3 in sqlite3RunParser (pParse=0x7fffbe212000, zSql=0x8cb022 ";", pzErrMsg=0x7fffbe2121e0) at sqlite3.c:154013
#12 0x00000000002a1683 in sqlite3Prepare (db=0x8b29a0, zSql=0x8b3f87 ";\n;SELECT * FROM t0 WHERE \n      (0, t0.c0) IN (SELECT DENSE_RANK() over(), LAG(0) over() FROM t0);", nBytes=99, prepFlags=128, pReprepare=0x0, 
    ppStmt=0x7fffbe212318, pzTail=0x7fffbe212300) at sqlite3.c:124303
#13 0x00000000002a0d4e in sqlite3LockAndPrepare (db=0x8b29a0, zSql=0x8b3f87 ";\n;SELECT * FROM t0 WHERE \n      (0, t0.c0) IN (SELECT DENSE_RANK() over(), LAG(0) over() FROM t0);", nBytes=99, prepFlags=128, pOld=0x0, 
    ppStmt=0x7fffbe212318, pzTail=0x7fffbe212300) at sqlite3.c:124403
#14 0x000000000029247f in sqlite3_prepare_v2 (db=0x8b29a0, zSql=0x8b3f87 ";\n;SELECT * FROM t0 WHERE \n      (0, t0.c0) IN (SELECT DENSE_RANK() over(), LAG(0) over() FROM t0);", nBytes=99, ppStmt=0x7fffbe212318, 
    pzTail=0x7fffbe212300) at sqlite3.c:124487
#15 0x0000000000256bd0 in main (argc=1, argv=0x7fffbe2124c8) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 60158] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
