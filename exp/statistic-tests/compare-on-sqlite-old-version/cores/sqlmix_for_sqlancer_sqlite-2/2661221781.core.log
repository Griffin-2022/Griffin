GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000029,sig:06,src:019905+018369,time:1126915,execs:126962,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;PRAGMA sql_trace=off;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;CREATE TABLE following(test001 int, preceding, t1, x);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    1 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:2
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:2
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 following     00 r[7]='following'
REG[7] =   t9[following](8)
  20 String8          0    8    0 following     00 r[8]='following'
REG[8] =   t9[following](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  22 String8          0   10    0 CREATE TABLE following(test001 int, preceding, t1, x) 00 r[10]='CREATE TABLE following(test001 int, preceding, t1, x)'
REG[10] =   t53[CREATE TABLE fo](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s83[06171F1F01777461626C65666F6C6C6F.....wtablefollo]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s83[06171F1F01777461626C65666F6C6C6F.....wtablefollo]
REG[5] =  i:2
  25 SetCookie        0    1    2               00 
  26 ParseSchema      0    0    0 tbl_name='following' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 0             00 usesStmtJournal=0
  16 String8          0    2    0 following     00 r[2]='following'
REG[2] =   t9[following](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[following](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[following](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[following](8)
REG[1] =   s9[following](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s9[following](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s53[CREATE TABLE fo](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s9[following](8)
REG[5] =  i:3
REG[6] =   s53[CREATE TABLE fo](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;DROP TABLE IF EXISTS t2;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    2 0             01 usesStmtJournal=0
   3 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [;CREATE TABLE last_field(test002 int, field1 char);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    2 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:3
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:3
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 last_field    00 r[7]='last_field'
REG[7] =   t10[last_field](8)
  20 String8          0    8    0 last_field    00 r[8]='last_field'
REG[8] =   t10[last_field](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  22 String8          0   10    0 CREATE TABLE last_field(test002 int, field1 char) 00 r[10]='CREATE TABLE last_field(test002 int, field1 char)'
REG[10] =   t49[CREATE TABLE la](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s81[06172121016F7461626C656C6173745F..!!.otablelast_]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s81[06172121016F7461626C656C6173745F..!!.otablelast_]
REG[5] =  i:3
  25 SetCookie        0    1    3               00 
  26 ParseSchema      0    0    0 tbl_name='last_field' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 0             00 usesStmtJournal=0
  16 String8          0    2    0 last_field    00 r[2]='last_field'
REG[2] =   t10[last_field](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t10[last_field](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[following](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t10[last_field](8)
REG[1] =   s9[following](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s10[last_field](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t10[last_field](8)
REG[1] =   s10[last_field](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s10[last_field](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s49[CREATE TABLE la](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s10[last_field](8)
REG[5] =  i:4
REG[6] =   s49[CREATE TABLE la](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;
;DROP TABLE IF EXISTS last_field;]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      0    1    3 0             01 usesStmtJournal=1
  39 String8          0    3    0 last_field    00 r[3]='last_field'
REG[3] =   t10[last_field](8)
  40 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  41 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t0](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t10[last_field](8)
REG[2] =   s2[t0](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s9[following](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t10[last_field](8)
REG[2] =   s9[following](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s10[last_field](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t10[last_field](8)
REG[2] =   s10[last_field](8)
   7 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
   8 Eq               4   12    2 (BINARY)      52 if r[2]==r[4] goto 12
REG[4] =   t7[trigger](8)
REG[2] =   s5[table](8)
   9 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:3
  10 Once             0   11    0               00 
  11 Delete           0    0    0               02 
  12 Next             0    5    0               01 
  13 Destroy          4    2    0               00 
REG[2] =  i:0
  14 Null             0    6    7               00 r[6..7]=NULL
REG[6] =  NULL
  15 IfNot            2   24    1               00 
REG[2] =  i:0
  24 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  25 RowSetRead       6   35    7               00 r[7]=rowset(6)
REG[6] =  NULL
REG[7] =  NULL
  35 DropTable        0    0    0 last_field    00 
  36 SetCookie        0    1    4               00 
  37 Halt             0    0    0               00 
SQL: [;CREATE TABLE last_field (test002);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    4 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:3
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:3
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 last_field    00 r[7]='last_field'
REG[7] =   t10[last_field](8)
  20 String8          0    8    0 last_field    00 r[8]='last_field'
REG[8] =   t10[last_field](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  22 String8          0   10    0 CREATE TABLE last_field (test002) 00 r[10]='CREATE TABLE last_field (test002)'
REG[10] =   t33[CREATE TABLE la](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s65[06172121014F7461626C656C6173745F..!!.Otablelast_]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s65[06172121014F7461626C656C6173745F..!!.Otablelast_]
REG[5] =  i:3
  25 SetCookie        0    1    5               00 
  26 ParseSchema      0    0    0 tbl_name='last_field' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    5 0             00 usesStmtJournal=0
  16 String8          0    2    0 last_field    00 r[2]='last_field'
REG[2] =   t10[last_field](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t10[last_field](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[following](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t10[last_field](8)
REG[1] =   s9[following](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s10[last_field](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t10[last_field](8)
REG[1] =   s10[last_field](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s10[last_field](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s33[CREATE TABLE la](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s10[last_field](8)
REG[5] =  i:4
REG[6] =   s33[CREATE TABLE la](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO following(x) VALUES ('a');]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    1    5 0             01 usesStmtJournal=0
   8 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
   9 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  10 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  11 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 4             00 root=3 iDb=0; following
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 String8          0    5    0 a             00 r[5]='a'
REG[5] =   t1[a](8)
   4 MakeRecord       2    4    6 D             00 r[6]=mkrec(r[2..5])
REG[6] =  s6[050000000F61.....a]
   5 Insert           0    6    1 following     39 intkey=r[1] data=r[6]
REG[6] =  s6[050000000F61.....a]
REG[1] =  i:1
   6 Halt             0    0    0               00 
SQL: [;SELECT LIKELY(last_field.rowid) <= '0' FROM last_field;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    5 0             01 usesStmtJournal=0
  10 String8          0    3    0 0             00 r[3]='0'
REG[3] =   t1[0](8)
  11 Goto             0    1    0               00 
   1 OpenRead         0    4    0 0             00 root=4 iDb=0; last_field
   2 Explain          2    0    0 SCAN TABLE last_field 00 
   3 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [;
;SELECT (last_field.rowid) <= '0' FROM last_field;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    5 0             01 usesStmtJournal=0
  10 String8          0    3    0 0             00 r[3]='0'
REG[3] =   t1[0](8)
  11 Goto             0    1    0               00 
   1 OpenRead         0    4    0 0             00 root=4 iDb=0; last_field
   2 Explain          2    0    0 SCAN TABLE last_field 00 
   3 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM last_field WHERE likelihood(last_field.rowid, 0.5) <= '0';]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    5 0             01 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 OpenRead         0    4    0 1             00 root=4 iDb=0; last_field
   2 Explain          2    0    0 SEARCH TABLE last_field USING INTEGER PRIMARY KEY (rowid<?) 00 
   3 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM last_field WHERE likelihood(last_field.rowid <= '0', 0.5);]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    5 0             01 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 OpenRead         0    4    0 1             00 root=4 iDb=0; last_field
   2 Explain          2    0    0 SEARCH TABLE last_field USING INTEGER PRIMARY KEY (rowid<?) 00 
   3 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
SQL: [;
;DROP TABLE IF EXISTS last_field;]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      0    1    5 0             01 usesStmtJournal=1
  39 String8          0    3    0 last_field    00 r[3]='last_field'
REG[3] =   t10[last_field](8)
  40 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  41 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t0](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t10[last_field](8)
REG[2] =   s2[t0](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s9[following](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t10[last_field](8)
REG[2] =   s9[following](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s10[last_field](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t10[last_field](8)
REG[2] =   s10[last_field](8)
   7 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
   8 Eq               4   12    2 (BINARY)      52 if r[2]==r[4] goto 12
REG[4] =   t7[trigger](8)
REG[2] =   s5[table](8)
   9 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:3
  10 Once             0   11    0               00 
  11 Delete           0    0    0               02 
  12 Next             0    5    0               01 
  13 Destroy          4    2    0               00 
REG[2] =  i:0
  14 Null             0    6    7               00 r[6..7]=NULL
REG[6] =  NULL
  15 IfNot            2   24    1               00 
REG[2] =  i:0
  24 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  25 RowSetRead       6   35    7               00 r[7]=rowset(6)
REG[6] =  NULL
REG[7] =  NULL
  35 DropTable        0    0    0 last_field    00 
  36 SetCookie        0    1    6               00 
  37 Halt             0    0    0               00 
SQL: [;INSERT INTO t0(c0) VALUES(''),(NULL),('X'),(NULL);]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    1    6 0             01 usesStmtJournal=0
  20 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  21 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  22 Goto             0    1    0               00 
   1 InitCoroutine    5   12    2               00 
  12 OpenWrite        0    2    0 3             00 root=2 iDb=0; t0
  13 Yield            5   18    0               00 
REG[5] =  i:1
REG[5] =  i:13
   2 Explain          2    0    0 SCAN 4 CONSTANT ROWS 00 
   3 String8          0    2    0               00 r[2]=''
REG[2] =   t0[](8)
   4 Yield            5    0    0               00 
REG[5] =  i:13
REG[5] =  i:4
  14 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
  15 MakeRecord       2    3    6               00 r[6]=mkrec(r[2..4])
REG[6] =  s4[040D0000....]
  16 Insert           0    6    1 t0            39 intkey=r[1] data=r[6]
REG[6] =  s4[040D0000....]
REG[1] =  i:3
  17 Goto             0   13    0               00 
  13 Yield            5   18    0               00 
REG[5] =  i:4
REG[5] =  i:13
   5 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
   6 Yield            5    0    0               00 
REG[5] =  i:13
REG[5] =  i:6
  14 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
  15 MakeRecord       2    3    6               00 r[6]=mkrec(r[2..4])
REG[6] =  s4[04000000....]
  16 Insert           0    6    1 t0            39 intkey=r[1] data=r[6]
REG[6] =  s4[04000000....]
REG[1] =  i:4
  17 Goto             0   13    0               00 
  13 Yield            5   18    0               00 
REG[5] =  i:6
REG[5] =  i:13
   7 String8          0    2    0 X             00 r[2]='X'
REG[2] =   t1[X](8)
   8 Yield            5    0    0               00 
REG[5] =  i:13
REG[5] =  i:8
  14 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
  15 MakeRecord       2    3    6               00 r[6]=mkrec(r[2..4])
REG[6] =  s5[040F000058....X]
  16 Insert           0    6    1 t0            39 intkey=r[1] data=r[6]
REG[6] =  s5[040F000058....X]
REG[1] =  i:5
  17 Goto             0   13    0               00 
  13 Yield            5   18    0               00 
REG[5] =  i:8
REG[5] =  i:13
   9 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  10 Yield            5    0    0               00 
REG[5] =  i:13
REG[5] =  i:10
  14 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
  15 MakeRecord       2    3    6               00 r[6]=mkrec(r[2..4])
REG[6] =  s4[04000000....]
  16 Insert           0    6    1 t0            39 intkey=r[1] data=r[6]
REG[6] =  s4[04000000....]
REG[1] =  i:6
  17 Goto             0   13    0               00 
  13 Yield            5   18    0               00 
REG[5] =  i:10
REG[5] =  i:13
  11 EndCoroutine     5    0    0               00 
REG[5] =  i:13
  18 Halt             0    0    0               00 
SQL: [;SELECT coalesce(max(quote(v0)),10) FROM t0 GROUP BY v0;]
VDBE Trace:
   0 Init             0   45    0               00 Start at 45
  45 Transaction      0    0    6 0             01 usesStmtJournal=0
  46 Goto             0    1    0               00 
   1 SorterOpen       1    1    0 k(1,B)        00 
   2 Integer          0    4    0               00 r[4]=0; clear abort flag
REG[4] =  i:0
   3 Null             0    7    7               00 r[7..7]=NULL
REG[7] =  NULL
   4 Gosub            6   41    0               00 
REG[6] =  i:4
  41 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  42 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
REG[3] =  i:0
  43 Return           6    0    0               00 
REG[6] =  i:4
   5 OpenRead         0    2    0 2             00 root=2 iDb=0; t0
   6 Explain          6    0    0 SCAN TABLE t0 00 
   7 Rewind           0   13    0               00 
   8 Explain          8    0    0 USE TEMP B-TREE FOR GROUP BY 00 
   9 Column           0    1    9               00 r[9]=t0.v0
REG[9] =  NULL
  10 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s2[0200..]
  11 SorterInsert     1   10    0               00 key=r[10]
REG[10] =  s2[0200..]
  12 Next             0    8    0               01 
   8 Explain          8    0    0 USE TEMP B-TREE FOR GROUP BY 00 
   9 Column           0    1    9               00 r[9]=t0.v0
REG[9] =   s3[abc](8)
  10 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s5[0213616263..abc]
  11 SorterInsert     1   10    0               00 key=r[10]
REG[10] =  s5[0213616263..abc]
  12 Next             0    8    0               01 
   8 Explain          8    0    0 USE TEMP B-TREE FOR GROUP BY 00 
   9 Column           0    1    9               00 r[9]=t0.v0
REG[9] =  NULL
  10 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s2[0200..]
  11 SorterInsert     1   10    0               00 key=r[10]
REG[10] =  s2[0200..]
  12 Next             0    8    0               01 
   8 Explain          8    0    0 USE TEMP B-TREE FOR GROUP BY 00 
   9 Column           0    1    9               00 r[9]=t0.v0
REG[9] =  NULL
  10 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s2[0200..]
  11 SorterInsert     1   10    0               00 key=r[10]
REG[10] =  s2[0200..]
  12 Next             0    8    0               01 
   8 Explain          8    0    0 USE TEMP B-TREE FOR GROUP BY 00 
   9 Column           0    1    9               00 r[9]=t0.v0
REG[9] =  NULL
  10 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s2[0200..]
  11 SorterInsert     1   10    0               00 key=r[10]
REG[10] =  s2[0200..]
  12 Next             0    8    0               01 
   8 Explain          8    0    0 USE TEMP B-TREE FOR GROUP BY 00 
   9 Column           0    1    9               00 r[9]=t0.v0
REG[9] =  NULL
  10 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s2[0200..]
  11 SorterInsert     1   10    0               00 key=r[10]
REG[10] =  s2[0200..]
  12 Next             0    8    0               01 
  13 OpenPseudo       2    9    1               00 1 columns in r[9]
  14 SorterSort       1   44    0               00 GROUP BY sort
  15 SorterData       1    9    2               00 r[9]=data
  16 Column           2    0    8               00 r[8]=
REG[8] =  NULL
  17 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  NULL
REG[8] =  NULL
  18 Jump            19   23   19               00 
  23 Column           2    0   11               00 r[11]=
REG[11] =  NULL
  24 Function0        0   11   10 quote(1)      01 r[10]=func(r[11])
REG[11] =  NULL
REG[10] =   t4[NULL](8)
  25 CollSeq          0    0    0 (BINARY)      00 
  26 AggStep          0   10    1 max(1)        01 accum=r[1] step(r[10])
REG[10] =   t4[NULL](8)
  27 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  28 SorterNext       1   15    0               00 
  15 SorterData       1    9    2               00 r[9]=data
  16 Column           2    0    8               00 r[8]=
REG[8] =  NULL
  17 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  NULL
REG[8] =  NULL
  18 Jump            19   23   19               00 
  23 Column           2    0   11               00 r[11]=
REG[11] =  NULL
  24 Function         0   11   10 quote(1)      01 r[10]=func(r[11])
REG[11] =  NULL
REG[10] =   t4[NULL](8)
  25 CollSeq          0    0    0 (BINARY)      00 
  26 AggStep1         0   10    1 max(1)        01 accum=r[1] step(r[10])
REG[10] =   t4[NULL](8)
  27 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  28 SorterNext       1   15    0               00 
  15 SorterData       1    9    2               00 r[9]=data
  16 Column           2    0    8               00 r[8]=
REG[8] =  NULL
  17 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  NULL
REG[8] =  NULL
  18 Jump            19   23   19               00 
  23 Column           2    0   11               00 r[11]=
REG[11] =  NULL
  24 Function         0   11   10 quote(1)      01 r[10]=func(r[11])
REG[11] =  NULL
REG[10] =   t4[NULL](8)
  25 CollSeq          0    0    0 (BINARY)      00 
  26 AggStep1         0   10    1 max(1)        01 accum=r[1] step(r[10])
REG[10] =   t4[NULL](8)
  27 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  28 SorterNext       1   15    0               00 
  15 SorterData       1    9    2               00 r[9]=data
  16 Column           2    0    8               00 r[8]=
REG[8] =  NULL
  17 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  NULL
REG[8] =  NULL
  18 Jump            19   23   19               00 
  23 Column           2    0   11               00 r[11]=
REG[11] =  NULL
  24 Function         0   11   10 quote(1)      01 r[10]=func(r[11])
REG[11] =  NULL
REG[10] =   t4[NULL](8)
  25 CollSeq          0    0    0 (BINARY)      00 
  26 AggStep1         0   10    1 max(1)        01 accum=r[1] step(r[10])
REG[10] =   t4[NULL](8)
  27 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  28 SorterNext       1   15    0               00 
  15 SorterData       1    9    2               00 r[9]=data
  16 Column           2    0    8               00 r[8]=
REG[8] =  NULL
  17 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  NULL
REG[8] =  NULL
  18 Jump            19   23   19               00 
  23 Column           2    0   11               00 r[11]=
REG[11] =  NULL
  24 Function         0   11   10 quote(1)      01 r[10]=func(r[11])
REG[11] =  NULL
REG[10] =   t4[NULL](8)
  25 CollSeq          0    0    0 (BINARY)      00 
  26 AggStep1         0   10    1 max(1)        01 accum=r[1] step(r[10])
REG[10] =   t4[NULL](8)
  27 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  28 SorterNext       1   15    0               00 
  15 SorterData       1    9    2               00 r[9]=data
  16 Column           2    0    8               00 r[8]=
REG[8] =   s3[abc](8)
  17 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  NULL
REG[8] =   s3[abc](8)
  18 Jump            19   23   19               00 
  19 Move             8    7    1               00 r[7]=r[8]
REG[7] =   s3[abc](8)
  20 Gosub            5   33    0               00 output one row
REG[5] =  i:20
  33 IfPos            3   35    0               00 if r[3]>0 then r[3]-=0, goto 35; Groupby result generator entry point
REG[3] =  i:1
  35 AggFinal         1    1    0 max(1)        00 accum=r[1] N=1
  36 SCopy            1   12    0               00 r[12]=r[1]
REG[12] =   t4[NULL](8)
  37 NotNull         12   39    0               00 if r[12]!=NULL goto 39
REG[12] =   t4[NULL](8)
  39 ResultRow       12    1    0               00 output=r[12]
REG[12] =   s4[NULL](8)
  40 Return           5    0    0               00 end groupby result generator
REG[5] =  i:20
  21 IfPos            4   44    0               00 if r[4]>0 then r[4]-=0, goto 44; check abort flag
REG[4] =  i:0
  22 Gosub            6   41    0               00 reset accumulator
REG[6] =  i:22
  41 Null             0    1    2               00 r[1..2]=NULL

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f199143b859 in __GI_abort () at abort.c:79
#2  0x00007f199143b729 in __assert_fail_base (fmt=0x7f19915d1588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x221a82 "(mFlags&MEM_Str)==0 || (pMem->n==pX->n && pMem->z==pX->z)", file=0x22873d "sqlite3.c", 
    line=75351, function=<optimized out>) at assert.c:92
#3  0x00007f199144cfd6 in __GI___assert_fail (assertion=0x221a82 "(mFlags&MEM_Str)==0 || (pMem->n==pX->n && pMem->z==pX->z)", file=0x22873d "sqlite3.c", line=75351, 
    function=0x208940 "void sqlite3VdbeMemAboutToChange(Vdbe *, Mem *)") at assert.c:101
#4  0x00000000003e1103 in sqlite3VdbeMemAboutToChange (pVdbe=0xc13fa0, pMem=0xc123c8) at sqlite3.c:75351
#5  0x00000000003c031d in sqlite3VdbeExec (p=0xc13fa0) at sqlite3.c:84329
#6  0x0000000000411104 in sqlite3Step (p=0xc13fa0) at sqlite3.c:81930
#7  0x000000000029128d in sqlite3_step (pStmt=0xc13fa0) at sqlite3.c:81995
#8  0x00000000002570b9 in main (argc=1, argv=0x7fff3bbc7828) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 55069] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
