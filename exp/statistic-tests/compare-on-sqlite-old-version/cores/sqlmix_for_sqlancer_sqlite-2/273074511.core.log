GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000429,sig:06,src:022913+012652,time:12125762,execs:2315141,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT (1, 2, 3) IS (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               E1 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               3    1    3               E9 r[1] = (r[3]==r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 IfNot            1    7    0               00 
REG[1] =  i:1
   6 Eq               4    1    4               E9 r[1] = (r[4]==r[4])
REG[4] =  i:3
REG[4] =  i:3
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, 3) IS NOT (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               E1 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               3    1    3               E9 r[1] = (r[3]!=r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 If               1    7    0               00 
REG[1] =  i:0
   6 Ne               4    1    4               E9 r[1] = (r[4]!=r[4])
REG[4] =  i:3
REG[4] =  i:3
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [;SAVEPOINT twoB;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Savepoint        0    0    0 twoB          00 
   2 Halt             0    0    0               00 
SQL: [SELECT rowid FROM t0 WHERE c0 = '20.0'
;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      1    0    1 0             01 usesStmtJournal=0
  11 String8          0    2    0 20.0          00 r[2]='20.0'
REG[2] =   t4[20.0](8)
  12 Goto             0    1    0               00 
   1 OpenRead         0    2    1 1             00 root=2 iDb=1; t0
   2 Explain          2    0    0 SCAN TABLE t0 00 
   3 Rewind           0    9    0               00 
   9 Halt             0    0    0               00 
SQL: [SELECT rowid FROM t0 WHERE c0 = 30.0
;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      1    0    1 0             01 usesStmtJournal=0
  11 Real             0    2    0 30            00 r[2]=30
REG[2] =  r:30
  12 Goto             0    1    0               00 
   1 OpenRead         0    2    1 1             00 root=2 iDb=1; t0
   2 Explain          2    0    0 SCAN TABLE t0 00 
   3 Rewind           0    9    0               00 
   9 Halt             0    0    0               00 
SQL: [SELECT rowid FROM t0 WHERE c0 < 20.0
;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      1    0    1 0             01 usesStmtJournal=0
  11 Real             0    2    0 20            00 r[2]=20
REG[2] =  r:20
  12 Goto             0    1    0               00 
   1 OpenRead         0    2    1 1             00 root=2 iDb=1; t0
   2 Explain          2    0    0 SCAN TABLE t0 00 
   3 Rewind           0    9    0               00 
   9 Halt             0    0    0               00 
SQL: [SELECT (1, 0, 3) IS (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               E1 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               4    1    3               E9 r[1] = (r[3]==r[4])
REG[4] =  i:2
REG[3] =  i:0
REG[1] =  i:0
   5 IfNot            1    7    0               00 
REG[1] =  i:0
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT rowid FROM t0 WHERE c0 < '20.0'
;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      1    0    1 0             01 usesStmtJournal=0
  11 String8          0    2    0 20.0          00 r[2]='20.0'
REG[2] =   t4[20.0](8)
  12 Goto             0    1    0               00 
   1 OpenRead         0    2    1 1             00 root=2 iDb=1; t0
   2 Explain          2    0    0 SCAN TABLE t0 00 
   3 Rewind           0    9    0               00 
   9 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 0, 3) == (SELECT 1, 2, 3)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  10 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Integer          3   10    0               00 r[10]=3
REG[10] =  i:3
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Eq               8    1    3               61 r[1] = (r[3]==r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:1
  25 IfNot            1   29    0               00 
REG[1] =  i:1
  26 Eq               9    1    4               69 r[1] = (r[4]==r[9])
REG[9] =  i:2
REG[4] =  i:0
REG[1] =  i:0
  27 IfNot            1   29    0               00 
REG[1] =  i:0
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  30 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 0, 3) != (SELECT 1, 2, 3)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  10 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Integer          3   10    0               00 r[10]=3
REG[10] =  i:3
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Ne               8    1    3               61 r[1] = (r[3]!=r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  25 If               1   29    0               00 
REG[1] =  i:0
  26 Ne               9    1    4               69 r[1] = (r[4]!=r[9])
REG[9] =  i:2
REG[4] =  i:0
REG[1] =  i:1
  27 If               1   29    0               00 
REG[1] =  i:1
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  30 Halt             0    0    0               00 
SQL: [SELECT rowid FROM t0 WHERE c0 IN (20.0, 30.0)
;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      1    0    1 0             01 usesStmtJournal=0
  13 Real             0    2    0 20            00 r[2]=20
REG[2] =  r:20
  14 Real             0    3    0 30            00 r[3]=30
REG[3] =  r:30
  15 Goto             0    1    0               00 
   1 OpenRead         0    2    1 1             00 root=2 iDb=1; t0
   2 Explain          2    0    0 SCAN TABLE t0 00 
   3 Rewind           0   11    0               00 
  11 Halt             0    0    0               00 
SQL: [SELECT (1, 2, NULL) == (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               61 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               3    1    3               69 r[1] = (r[3]==r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 IfNot            1    7    0               00 
REG[1] =  i:1
   6 Eq               5    1    4               69 r[1] = (r[4]==r[5])
REG[5] =  i:3
REG[4] =  NULL
REG[1] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, NULL) IS (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               E1 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               3    1    3               E9 r[1] = (r[3]==r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 IfNot            1    7    0               00 
REG[1] =  i:1
   6 Eq               5    1    4               E9 r[1] = (r[4]==r[5])
REG[5] =  i:3
REG[4] =  NULL
REG[1] =  i:0
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 2, NULL) == (SELECT 1, 2, 3)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  10 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Integer          3   10    0               00 r[10]=3
REG[10] =  i:3
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Eq               8    1    3               61 r[1] = (r[3]==r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:1
  25 IfNot            1   29    0               00 
REG[1] =  i:1
  26 Eq               9    1    4               69 r[1] = (r[4]==r[9])
REG[9] =  i:2
REG[4] =  i:2
  27 IfNot            1   29    0               00 
REG[1] =  i:1
  28 Eq              10    1    5               69 r[1] = (r[5]==r[10])
REG[10] =  i:3
REG[5] =  NULL
REG[1] =  NULL
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (1, 2, NULL) == (1, 2, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               61 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               3    1    3               69 r[1] = (r[3]==r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 IfNot            1    7    0               00 
REG[1] =  i:1
   6 Eq               4    1    4               69 r[1] = (r[4]==r[4])
REG[4] =  NULL
REG[4] =  NULL
REG[1] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, NULL) != (1, 2, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               61 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               3    1    3               69 r[1] = (r[3]!=r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 If               1    7    0               00 
REG[1] =  i:0
   6 Ne               4    1    4               69 r[1] = (r[4]!=r[4])
REG[4] =  NULL
REG[4] =  NULL
REG[1] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 2, NULL) == (SELECT 1, 2, NULL)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  10 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Eq               8    1    3               61 r[1] = (r[3]==r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:1
  25 IfNot            1   29    0               00 
REG[1] =  i:1
  26 Eq               9    1    4               69 r[1] = (r[4]==r[9])
REG[9] =  i:2
REG[4] =  i:2
  27 IfNot            1   29    0               00 
REG[1] =  i:1
  28 Eq              10    1    5               69 r[1] = (r[5]==r[10])
REG[10] =  NULL
REG[5] =  NULL
REG[1] =  NULL
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (NULL, NULL, NULL) IS (NULL, NULL, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  10 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               E1 r[1] = (r[2]==r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               2    1    2               E9 r[1] = (r[2]==r[2])
REG[2] =  NULL
REG[2] =  NULL
   5 IfNot            1    7    0               00 
REG[1] =  i:1
   6 Eq               2    1    2               E9 r[1] = (r[2]==r[2])
REG[2] =  NULL
REG[2] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (NULL, NULL, NULL) IS NOT (NULL, NULL, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  10 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               E1 r[1] = (r[2]!=r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               2    1    2               E9 r[1] = (r[2]!=r[2])
REG[2] =  NULL
REG[2] =  NULL
   5 If               1    7    0               00 
REG[1] =  i:0
   6 Ne               2    1    2               E9 r[1] = (r[2]!=r[2])
REG[2] =  NULL
REG[2] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT NULL, NULL, NULL) == (SELECT NULL, NULL, NULL)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   9 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  10 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Null             0    8    0               00 r[8]=NULL
REG[8] =  NULL
  20 Null             0    9    0               00 r[9]=NULL
REG[9] =  NULL
  21 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Eq               8    1    3               61 r[1] = (r[3]==r[8])
REG[8] =  NULL
REG[3] =  NULL
REG[1] =  NULL
  25 IfNot            1   29    0               00 
REG[1] =  NULL
  26 Eq               9    1    4               69 r[1] = (r[4]==r[9])
REG[9] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  27 IfNot            1   29    0               00 
REG[1] =  NULL
  28 Eq              10    1    5               69 r[1] = (r[5]==r[10])
REG[10] =  NULL
REG[5] =  NULL
REG[1] =  NULL
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 1) == (1, 1, 1)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               61 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               2    1    3               69 r[1] = (r[3]==r[2])
REG[2] =  i:1
REG[3] =  NULL
REG[1] =  NULL
   5 IfNot            1    7    0               00 
REG[1] =  NULL
   6 Eq               2    1    2               69 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 1) != (1, 1, 1)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               61 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               2    1    3               69 r[1] = (r[3]!=r[2])
REG[2] =  i:1
REG[3] =  NULL
REG[1] =  NULL
   5 If               1    7    0               00 
REG[1] =  NULL
   6 Ne               2    1    2               69 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 1) IS (1, 1, 1)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               E1 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               2    1    3               E9 r[1] = (r[3]==r[2])
REG[2] =  i:1
REG[3] =  NULL
REG[1] =  i:0
   5 IfNot            1    7    0               00 
REG[1] =  i:0
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, NULL, 1) == (SELECT 1, 1, 1)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  10 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  21 Integer          1   10    0               00 r[10]=1
REG[10] =  i:1
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Eq               8    1    3               61 r[1] = (r[3]==r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:1
  25 IfNot            1   29    0               00 
REG[1] =  i:1
  26 Eq               9    1    4               69 r[1] = (r[4]==r[9])
REG[9] =  i:1
REG[4] =  NULL
REG[1] =  NULL
  27 IfNot            1   29    0               00 
REG[1] =  NULL
  28 Eq              10    1    5               69 r[1] = (r[5]==r[10])
REG[10] =  i:1
REG[5] =  i:1
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, NULL, 1) != (SELECT 1, 1, 1)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  10 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  21 Integer          1   10    0               00 r[10]=1
REG[10] =  i:1
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Ne               8    1    3               61 r[1] = (r[3]!=r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  25 If               1   29    0               00 
REG[1] =  i:0
  26 Ne               9    1    4               69 r[1] = (r[4]!=r[9])
REG[9] =  i:1
REG[4] =  NULL
REG[1] =  NULL
  27 If               1   29    0               00 
REG[1] =  NULL
  28 Ne              10    1    5               69 r[1] = (r[5]!=r[10])
REG[10] =  i:1
REG[5] =  i:1
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 1) != (1, 1, 2)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               61 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               2    1    3               69 r[1] = (r[3]!=r[2])
REG[2] =  i:1
REG[3] =  NULL
REG[1] =  NULL
   5 If               1    7    0               00 
REG[1] =  NULL
   6 Ne               4    1    2               69 r[1] = (r[2]!=r[4])
REG[4] =  i:2
REG[2] =  i:1
REG[1] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 1) IS (1, 1, 2)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               E1 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               2    1    3               E9 r[1] = (r[3]==r[2])
REG[2] =  i:1
REG[3] =  NULL
REG[1] =  i:0
   5 IfNot            1    7    0               00 
REG[1] =  i:0
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 1) IS NOT (1, 1, 2)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               E1 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               2    1    3               E9 r[1] = (r[3]!=r[2])
REG[2] =  i:1
REG[3] =  NULL
REG[1] =  i:1
   5 If               1    7    0               00 
REG[1] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, NULL, 1) == (SELECT 1, 1, 2)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  10 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  21 Integer          2   10    0               00 r[10]=2
REG[10] =  i:2
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Eq               8    1    3               61 r[1] = (r[3]==r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:1
  25 IfNot            1   29    0               00 
REG[1] =  i:1
  26 Eq               9    1    4               69 r[1] = (r[4]==r[9])
REG[9] =  i:1
REG[4] =  NULL
REG[1] =  NULL
  27 IfNot            1   29    0               00 
REG[1] =  NULL
  28 Eq              10    1    5               69 r[1] = (r[5]==r[10])
REG[10] =  i:2
REG[5] =  i:1
REG[1] =  i:0
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  30 Halt             0    0    0               00 
SQL: [SELECT (1, 1, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               3    1    2               61 r[1] = (r[2]<r[3])
REG[3] =  i:2
REG[2] =  i:1
REG[1] =  i:1
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t0 WHERE (1, 1, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  i:1
REG[1] =  i:1
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  i:1
   2 OpenRead         0    2    1 1             00 root=2 iDb=1; t0
   3 Explain          3    0    0 SCAN TABLE t0 00 
   4 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t0 WHERE (1, 1, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  i:1
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 1, 3) <= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               3    1    2               61 r[1] = (r[2]<r[3])
REG[3] =  i:2
REG[2] =  i:1
REG[1] =  i:1
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 1, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               3    1    2               61 r[1] = (r[2]>r[3])
REG[3] =  i:2
REG[2] =  i:1
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t0 WHERE (1, 1, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  i:1
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t0 WHERE NOT (1, 1, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  i:1
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  i:0
   2 OpenRead         0    2    1 1             00 root=2 iDb=1; t0
   3 Explain          3    0    0 SCAN TABLE t0 00 
   4 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               3    1    3               61 r[1] = (r[3]<r[3])
REG[3] =  i:2
REG[3] =  i:2
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   6 Lt               4    1    4               61 r[1] = (r[4]<r[4])
REG[4] =  i:3
REG[4] =  i:3
REG[1] =  i:0
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t0 WHERE (1, 2, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  i:2
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  18 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  19 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  20 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:3
REG[3] =  i:3
REG[1] =  i:0
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t0 WHERE NOT (1, 2, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  i:2
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  18 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  19 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  20 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:3
REG[3] =  i:3
REG[1] =  i:0
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  i:0
   2 OpenRead         0    2    1 1             00 root=2 iDb=1; t0
   3 Explain          3    0    0 SCAN TABLE t0 00 
   4 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t0 WHERE (1, 2, 3) <= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  i:2
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  18 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  19 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  20 Le               4    1    3               61 r[1] = (r[3]<=r[4])
REG[4] =  i:3
REG[3] =  i:3
REG[1] =  i:1
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  i:1
   2 OpenRead         0    2    1 1             00 root=2 iDb=1; t0
   3 Explain          3    0    0 SCAN TABLE t0 00 
   4 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               3    1    3               61 r[1] = (r[3]>r[3])
REG[3] =  i:2
REG[3] =  i:2
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   6 Ge               4    1    4               61 r[1] = (r[4]>=r[4])
REG[4] =  i:3
REG[4] =  i:3
REG[1] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 3, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:2
REG[3] =  i:3
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t0 WHERE (1, 3, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  i:3
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t0 WHERE NOT (1, 3, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  i:3
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  i:0
   2 OpenRead         0    2    1 1             00 root=2 iDb=1; t0
   3 Explain          3    0    0 SCAN TABLE t0 00 
   4 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 3, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:2
REG[3] =  i:3
REG[1] =  i:1
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t0 WHERE (1, 3, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  i:3
REG[1] =  i:1
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  i:1
   2 OpenRead         0    2    1 1             00 root=2 iDb=1; t0
   3 Explain          3    0    0 SCAN TABLE t0 00 
   4 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 3, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:2
REG[3] =  i:3
REG[1] =  i:1
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:2
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:2
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t0 WHERE (1, NULL, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t0 WHERE (1, NULL, 3) <= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t0 WHERE NOT (1, NULL, 3) <= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 3, 3) < (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  NULL
REG[3] =  i:3
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t0 WHERE NOT (1, 3, 3) < (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  NULL
REG[4] =  i:3
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 3, 3) > (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  NULL
REG[3] =  i:3
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t0 WHERE (1, 3, 3) <= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  NULL
REG[4] =  i:3
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t0 WHERE (1, 3, 3) >= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  NULL
REG[4] =  i:3
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) < (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               3    1    3               61 r[1] = (r[3]<r[3])
REG[3] =  NULL
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) > (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               3    1    3               61 r[1] = (r[3]>r[3])
REG[3] =  NULL
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t0 WHERE NOT (1, NULL, 3) > (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) <= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               3    1    3               61 r[1] = (r[3]<r[3])
REG[3] =  NULL
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t0 WHERE (1, NULL, 3) <= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) >= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               3    1    3               61 r[1] = (r[3]>r[3])
REG[3] =  NULL
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t0 WHERE (1, NULL, 3) >= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t0 WHERE NOT (1, NULL, 3) >= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [CREATE TABLE v0(over, following);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    0 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:1
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:1
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 v0            00 r[7]='v0'
REG[7] =   t2[v0](8)
  20 String8          0    8    0 v0            00 r[8]='v0'
REG[8] =   t2[v0](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  22 String8          0   10    0 CREATE TABLE v0(over, following) 00 r[10]='CREATE TABLE v0(over, following)'
REG[10] =   t32[CREATE TABLE v0](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s48[06171111014D7461626C657630763002.....Mtablev0v0.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s48[06171111014D7461626C657630763002.....Mtablev0v0.]
REG[5] =  i:1
  25 SetCookie        0    1    1               00 
  26 ParseSchema      0    0    0 tbl_name='v0' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    1 0             00 usesStmtJournal=0
  16 String8          0    2    0 v0            00 r[2]='v0'
REG[2] =   t2[v0](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[v0](8)
REG[1] =   s2[v0](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[v0](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s32[CREATE TABLE v0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[v0](8)
REG[5] =  i:2
REG[6] =   s32[CREATE TABLE v0](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO v0 VALUES(1, 2);]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    1    1 0             01 usesStmtJournal=0
   9 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; v0
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   5 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s4[03090102....]
   6 Insert           0    4    1 v0            39 intkey=r[1] data=r[4]
REG[4] =  s4[03090102....]
REG[1] =  i:1
   7 Halt             0    0    0               00 
SQL: [;INSERT INTO v0 VALUES(2, 4);]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    1    1 0             01 usesStmtJournal=0
   9 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; v0
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   3 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
   4 Integer          4    3    0               00 r[3]=4
REG[3] =  i:4
   5 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s5[0301010204.....]
   6 Insert           0    4    1 v0            39 intkey=r[1] data=r[4]
REG[4] =  s5[0301010204.....]
REG[1] =  i:2
   7 Halt             0    0    0               00 
SQL: [;INSERT INTO v0 VALUES(3, 5);]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    1    1 0             01 usesStmtJournal=0
   9 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; v0
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   3 Integer          3    2    0               00 r[2]=3
REG[2] =  i:3
   4 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
   5 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s5[0301010305.....]
   6 Insert           0    4    1 v0            39 intkey=r[1] data=r[4]
REG[4] =  s5[0301010305.....]
REG[1] =  i:3
   7 Halt             0    0    0               00 
SQL: [SELECT (SELECT * FROM t0 ORDER BY c0) == (SELECT * FROM t0 ORDER BY c0)
  
;]
VDBE Trace:
   0 Init             0   51    0               00 Start at 51
  51 Transaction      1    0    1 0             01 usesStmtJournal=0
  52 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         24    3    0               00 r[3]=24; return address
REG[3] =  i:24
   3 Once             0   24    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    4    4               00 r[4..4]=NULL; Init subquery result
REG[4] =  NULL
   6 OpenEphemeral    2    3    0 k(1,B)        00 nColumn=3
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    1 1             00 root=2 iDb=1; t0
   9 Explain          9    4    0 SCAN TABLE t0 00 
  10 Rewind           0   20    0               00 
  20 Explain         20    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  21 Sort             2   24    0               00 
  24 Return           3    0    0               00 
REG[3] =  i:24
  25 Integer         47    9    0               00 r[9]=47; return address
REG[9] =  i:47
  26 Once             0   47    0               00 
  27 Explain         27    0    0 SCALAR SUBQUERY 2 00 
  28 Null             0   10   10               00 r[10..10]=NULL; Init subquery result
REG[10] =  NULL
  29 OpenEphemeral    3    3    0 k(1,B)        00 nColumn=3
  30 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  31 OpenRead         1    2    1 1             00 root=2 iDb=1; t0
  32 Explain         32   27    0 SCAN TABLE t0 00 
  33 Rewind           1   43    0               00 
  43 Explain         43   27    0 USE TEMP B-TREE FOR ORDER BY 00 
  44 Sort             3   47    0               00 
  47 Return           9    0    0               00 
REG[9] =  i:47
  48 Eq              10    1    4               63 r[1] = (r[4]==r[10])
REG[10] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  49 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  50 Halt             0    0    0               00 
SQL: [SELECT (1, 1) == (SELECT c0,c0 FROM t0 ORDER BY c0, c0)
;]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      1    0    1 0             01 usesStmtJournal=0
  35 Integer          1   11    0               00 r[11]=1
REG[11] =  i:1
  36 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         28    2    0               00 r[2]=28; return address
REG[2] =  i:28
   3 Once             0   28    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 OpenEphemeral    1    5    0 k(2,B,B)      00 nColumn=5
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    1 1             00 root=2 iDb=1; t0
   9 Explain          9    4    0 SCAN TABLE t0 00 
  10 Rewind           0   23    0               00 
  23 Explain         23    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  24 Sort             1   28    0               00 
  28 Return           2    0    0               00 
REG[2] =  i:28
  29 Eq               3    1   11 (BINARY)      64 r[1] = (r[11]==r[3])
REG[3] =  NULL
REG[11] =  i:1
REG[1] =  NULL
  30 IfNot            1   32    0               00 
REG[1] =  NULL
  31 Eq               4    1   11 (BINARY)      6C r[1] = (r[11]==r[4])
REG[4] =  NULL
REG[11] =  i:1
REG[1] =  NULL
  32 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  33 Halt             0    0    0               00 
SQL: [SELECT (SELECT * FROM t0 ORDER BY c0, c0) == (SELECT * FROM t0 ORDER BY c0, c0)
  
;]
VDBE Trace:
   0 Init             0   53    0               00 Start at 53
  53 Transaction      1    0    1 0             01 usesStmtJournal=0
  54 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         25    3    0               00 r[3]=25; return address
REG[3] =  i:25
   3 Once             0   25    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    4    4               00 r[4..4]=NULL; Init subquery result
REG[4] =  NULL
   6 OpenEphemeral    2    4    0 k(2,B,B)      00 nColumn=4
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    1 1             00 root=2 iDb=1; t0
   9 Explain          9    4    0 SCAN TABLE t0 00 
  10 Rewind           0   21    0               00 
  21 Explain         21    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  22 Sort             2   25    0               00 
  25 Return           3    0    0               00 
REG[3] =  i:25
  26 Integer         49   10    0               00 r[10]=49; return address
REG[10] =  i:49
  27 Once             0   49    0               00 
  28 Explain         28    0    0 SCALAR SUBQUERY 2 00 
  29 Null             0   11   11               00 r[11..11]=NULL; Init subquery result
REG[11] =  NULL
  30 OpenEphemeral    3    4    0 k(2,B,B)      00 nColumn=4
  31 Integer          1   12    0               00 r[12]=1; LIMIT counter
REG[12] =  i:1
  32 OpenRead         1    2    1 1             00 root=2 iDb=1; t0
  33 Explain         33   28    0 SCAN TABLE t0 00 
  34 Rewind           1   45    0               00 
  45 Explain         45   28    0 USE TEMP B-TREE FOR ORDER BY 00 
  46 Sort             3   49    0               00 
  49 Return          10    0    0               00 
REG[10] =  i:49
  50 Eq              11    1    4               63 r[1] = (r[4]==r[11])
REG[11] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  51 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  52 Halt             0    0    0               00 
SQL: [SELECT (3, 6) == (SELECT c0,c0 FROM t0 ORDER BY c0 DESC, c0 DESC)
;]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      1    0    1 0             01 usesStmtJournal=0
  35 Integer          3   11    0               00 r[11]=3
REG[11] =  i:3
  36 Integer          6   12    0               00 r[12]=6
REG[12] =  i:6
  37 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         28    2    0               00 r[2]=28; return address
REG[2] =  i:28
   3 Once             0   28    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 OpenEphemeral    1    5    0 k(2,-B,-B)    00 nColumn=5
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    1 1             00 root=2 iDb=1; t0
   9 Explain          9    4    0 SCAN TABLE t0 00 
  10 Rewind           0   23    0               00 
  23 Explain         23    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  24 Sort             1   28    0               00 
  28 Return           2    0    0               00 
REG[2] =  i:28
  29 Eq               3    1   11 (BINARY)      64 r[1] = (r[11]==r[3])
REG[3] =  NULL
REG[11] =  i:3
REG[1] =  NULL
  30 IfNot            1   32    0               00 
REG[1] =  NULL
  31 Eq               4    1   12 (BINARY)      6C r[1] = (r[12]==r[4])
REG[4] =  NULL
REG[12] =  i:6
REG[1] =  NULL
  32 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  33 Halt             0    0    0               00 
SQL: [SELECT (SELECT * FROM t0 ORDER BY c0 DESC, c0 DESC) == (SELECT * FROM t0 ORDER BY c0 DESC, c0 DESC)
  
;]
VDBE Trace:
   0 Init             0   53    0               00 Start at 53
  53 Transaction      1    0    1 0             01 usesStmtJournal=0
  54 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         25    3    0               00 r[3]=25; return address
REG[3] =  i:25
   3 Once             0   25    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    4    4               00 r[4..4]=NULL; Init subquery result
REG[4] =  NULL
   6 OpenEphemeral    2    4    0 k(2,-B,-B)    00 nColumn=4
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    1 1             00 root=2 iDb=1; t0
   9 Explain          9    4    0 SCAN TABLE t0 00 
  10 Rewind           0   21    0               00 
  21 Explain         21    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  22 Sort             2   25    0               00 
  25 Return           3    0    0               00 
REG[3] =  i:25
  26 Integer         49   10    0               00 r[10]=49; return address
REG[10] =  i:49
  27 Once             0   49    0               00 
  28 Explain         28    0    0 SCALAR SUBQUERY 2 00 
  29 Null             0   11   11               00 r[11..11]=NULL; Init subquery result
REG[11] =  NULL
  30 OpenEphemeral    3    4    0 k(2,-B,-B)    00 nColumn=4
  31 Integer          1   12    0               00 r[12]=1; LIMIT counter
REG[12] =  i:1
  32 OpenRead         1    2    1 1             00 root=2 iDb=1; t0
  33 Explain         33   28    0 SCAN TABLE t0 00 
  34 Rewind           1   45    0               00 
  45 Explain         45   28    0 USE TEMP B-TREE FOR ORDER BY 00 
  46 Sort             3   49    0               00 
  49 Return          10    0    0               00 
REG[10] =  i:49
  50 Eq              11    1    4               63 r[1] = (r[4]==r[11])
REG[11] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  51 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  52 Halt             0    0    0               00 
SQL: [SELECT ((3, 5)) == (SELECT c0,c0 FROM t0 ORDER BY c0 DESC, c0)
;]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      1    0    1 0             01 usesStmtJournal=0
  35 Integer          3   11    0               00 r[11]=3
REG[11] =  i:3
  36 Integer          5   12    0               00 r[12]=5
REG[12] =  i:5
  37 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         28    2    0               00 r[2]=28; return address
REG[2] =  i:28
   3 Once             0   28    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 OpenEphemeral    1    5    0 k(2,-B,B)     00 nColumn=5
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    1 1             00 root=2 iDb=1; t0
   9 Explain          9    4    0 SCAN TABLE t0 00 
  10 Rewind           0   23    0               00 
  23 Explain         23    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  24 Sort             1   28    0               00 
  28 Return           2    0    0               00 
REG[2] =  i:28
  29 Eq               3    1   11 (BINARY)      64 r[1] = (r[11]==r[3])
REG[3] =  NULL
REG[11] =  i:3
REG[1] =  NULL
  30 IfNot            1   32    0               00 
REG[1] =  NULL
  31 Eq               4    1   12 (BINARY)      6C r[1] = (r[12]==r[4])
REG[4] =  NULL
REG[12] =  i:5
REG[1] =  NULL
  32 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  33 Halt             0    0    0               00 
SQL: [SELECT (SELECT * FROM t0 ORDER BY c0 DESC, c0) == (SELECT * FROM t0 ORDER BY c0 DESC, c0)
  
;]
VDBE Trace:
   0 Init             0   53    0               00 Start at 53
  53 Transaction      1    0    1 0             01 usesStmtJournal=0
  54 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         25    3    0               00 r[3]=25; return address
REG[3] =  i:25
   3 Once             0   25    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    4    4               00 r[4..4]=NULL; Init subquery result
REG[4] =  NULL
   6 OpenEphemeral    2    4    0 k(2,-B,B)     00 nColumn=4
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    1 1             00 root=2 iDb=1; t0
   9 Explain          9    4    0 SCAN TABLE t0 00 
  10 Rewind           0   21    0               00 
  21 Explain         21    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  22 Sort             2   25    0               00 
  25 Return           3    0    0               00 
REG[3] =  i:25
  26 Integer         49   10    0               00 r[10]=49; return address
REG[10] =  i:49
  27 Once             0   49    0               00 
  28 Explain         28    0    0 SCALAR SUBQUERY 2 00 
  29 Null             0   11   11               00 r[11..11]=NULL; Init subquery result
REG[11] =  NULL
  30 OpenEphemeral    3    4    0 k(2,-B,B)     00 nColumn=4
  31 Integer          1   12    0               00 r[12]=1; LIMIT counter
REG[12] =  i:1
  32 OpenRead         1    2    1 1             00 root=2 iDb=1; t0
  33 Explain         33   28    0 SCAN TABLE t0 00 
  34 Rewind           1   45    0               00 
  45 Explain         45   28    0 USE TEMP B-TREE FOR ORDER BY 00 
  46 Sort             3   49    0               00 
  49 Return          10    0    0               00 
REG[10] =  i:49
  50 Eq              11    1    4               63 r[1] = (r[4]==r[11])
REG[11] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  51 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  52 Halt             0    0    0               00 
SQL: [SELECT (SELECT 3, 5) == (SELECT c0,c0 FROM t0 ORDER BY c0 DESC, c0)
;]
VDBE Trace:
   0 Init             0   44    0               00 Start at 44
  44 Transaction      1    0    1 0             01 usesStmtJournal=0
  45 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         11    2    0               00 r[2]=11; return address
REG[2] =  i:11
   3 Once             0   11    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
   9 Integer          5    4    0               00 r[4]=5
REG[4] =  i:5
  10 DecrJumpZero     5   11    0               00 if (--r[5])==0 goto 11
REG[5] =  i:1
  11 Return           2    0    0               00 
REG[2] =  i:11
  12 Integer         38    6    0               00 r[6]=38; return address
REG[6] =  i:38
  13 Once             0   38    0               00 
  14 Explain         14    0    0 SCALAR SUBQUERY 2 00 
  15 Null             0    7    8               00 r[7..8]=NULL; Init subquery result
REG[7] =  NULL
  16 OpenEphemeral    1    5    0 k(2,-B,B)     00 nColumn=5
  17 Integer          1    9    0               00 r[9]=1; LIMIT counter
REG[9] =  i:1
  18 OpenRead         0    2    1 1             00 root=2 iDb=1; t0
  19 Explain         19   14    0 SCAN TABLE t0 00 
  20 Rewind           0   33    0               00 
  33 Explain         33   14    0 USE TEMP B-TREE FOR ORDER BY 00 
  34 Sort             1   38    0               00 
  38 Return           6    0    0               00 
REG[6] =  i:38
  39 Eq               7    1    3 (BINARY)      64 r[1] = (r[3]==r[7])
REG[7] =  NULL
REG[3] =  i:3
REG[1] =  NULL
  40 IfNot            1   42    0               00 
REG[1] =  NULL
  41 Eq               8    1    4 (BINARY)      6C r[1] = (r[4]==r[8])
REG[8] =  NULL
REG[4] =  i:5
REG[1] =  NULL
  42 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  43 Halt             0    0    0               00 
SQL: [SELECT (2, 2) BETWEEN (2, 2) AND (3, 3)
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
  12 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  13 Integer          2    5    0               00 r[5]=2
REG[5] =  i:2
  14 Integer          3    7    0               00 r[7]=3
REG[7] =  i:3
  15 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               5    4    2               61 r[4] = (r[2]>r[5])
REG[5] =  i:2
REG[2] =  i:2
REG[4] =  i:0
   3 ElseNotEq        0    5    0               00 
   4 Ge               5    4    3               61 r[4] = (r[3]>=r[5])
REG[5] =  i:2
REG[3] =  i:2
REG[4] =  i:1
   5 Lt               7    6    2               61 r[6] = (r[2]<r[7])
REG[7] =  i:3
REG[2] =  i:2
REG[6] =  i:1
   6 ElseNotEq        0    8    0               00 
   8 And              6    4    1               00 r[1]=(r[6] && r[4])
REG[6] =  i:1
REG[4] =  i:1
REG[1] =  i:1
   9 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  10 Halt             0    0    0               00 
SQL: [SELECT (2, 2) BETWEEN (2, NULL) AND (3, 3)
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
  12 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  13 Integer          2    5    0               00 r[5]=2
REG[5] =  i:2
  14 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  15 Integer          3    8    0               00 r[8]=3
REG[8] =  i:3
  16 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               5    4    2               61 r[4] = (r[2]>r[5])
REG[5] =  i:2
REG[2] =  i:2
REG[4] =  i:0
   3 ElseNotEq        0    5    0               00 
   4 Ge               6    4    3               61 r[4] = (r[3]>=r[6])
REG[6] =  NULL
REG[3] =  i:2
REG[4] =  NULL
   5 Lt               8    7    2               61 r[7] = (r[2]<r[8])
REG[8] =  i:3
REG[2] =  i:2
REG[7] =  i:1
   6 ElseNotEq        0    8    0               00 
   8 And              7    4    1               00 r[1]=(r[7] && r[4])
REG[7] =  i:1
REG[4] =  NULL
REG[1] =  NULL
   9 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  10 Halt             0    0    0               00 
SQL: [SELECT (2, 2) BETWEEN (3, NULL) AND (3, 3)
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
  12 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  13 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  14 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  15 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               5    4    2               61 r[4] = (r[2]>r[5])
REG[5] =  i:3
REG[2] =  i:2
REG[4] =  i:0
   3 ElseNotEq        0    5    0               00 
   5 Lt               5    7    2               61 r[7] = (r[2]<r[5])
REG[5] =  i:3
REG[2] =  i:2
REG[7] =  i:1
   6 ElseNotEq        0    8    0               00 
   8 And              7    4    1               00 r[1]=(r[7] && r[4])
REG[7] =  i:1
REG[4] =  i:0
REG[1] =  i:0
   9 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  10 Halt             0    0    0               00 
SQL: [SELECT (NULL, 4) IN (SELECT * FROM v0)
;]
VDBE Trace:
   0 Init             0   35    0               00 Start at 35
  35 Transaction      0    0    1 0             01 usesStmtJournal=0
  36 Null             0    7    0               00 r[7]=NULL
REG[7] =  NULL
  37 Integer          4    8    0               00 r[8]=4
REG[8] =  i:4
  38 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   3 Noop             0    0    0               00 begin IN expr
   4 Integer         16    3    0               00 r[3]=16; return address
REG[3] =  i:16
   5 Once             0   16    0               00 
   6 OpenEphemeral    1    2    0 k(2,B,B)      00 nColumn=2; Result of SELECT 1
   7 Explain          7    0    0 LIST SUBQUERY 1 00 
   8 OpenRead         0    2    0 2             00 root=2 iDb=0; v0
   9 Explain          9    7    0 SCAN TABLE v0 00 
  10 Rewind           0   16    0               00 
  11 Column           0    0    4               00 r[4]=v0.over
REG[4] =  i:1
  12 Column           0    1    5               00 r[5]=v0.following
REG[5] =  i:2
  13 MakeRecord       4    2    6 AA            00 r[6]=mkrec(r[4..5])
REG[6] =  s4[03090102....]
  14 IdxInsert        1    6    4 2             00 key=r[6]
REG[6] =  s4[03090102....]
  15 Next             0   11    0               01 
  11 Column           0    0    4               00 r[4]=v0.over
REG[4] =  i:2
  12 Column           0    1    5               00 r[5]=v0.following
REG[5] =  i:4
  13 MakeRecord       4    2    6 AA            00 r[6]=mkrec(r[4..5])
REG[6] =  s5[0301010204.....]
  14 IdxInsert        1    6    4 2             00 key=r[6]
REG[6] =  s5[0301010204.....]
  15 Next             0   11    0               01 
  11 Column           0    0    4               00 r[4]=v0.over
REG[4] =  i:3
  12 Column           0    1    5               00 r[5]=v0.following
REG[5] =  i:5
  13 MakeRecord       4    2    6 AA            00 r[6]=mkrec(r[4..5])
REG[6] =  s5[0301010305.....]
  14 IdxInsert        1    6    4 2             00 key=r[6]
REG[6] =  s5[0301010305.....]
  15 Next             0   11    0               01 
  16 Return           3    0    0               00 
REG[3] =  i:16
  17 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
  18 Rewind           1   20    0               00 
  19 Column           1    0    2               80 r[2]=first_entry_in(1)
REG[2] =  i:1
  20 IsNull           7   23    0               00 if r[7]==NULL goto 23
REG[7] =  NULL
  23 Rewind           1   32    0               00 
  24 Column           1    0    6               00 r[6]=
REG[6] =  i:1
  25 Ne               7   29    6               00 if r[6]!=r[7] goto 29
REG[7] =  NULL
REG[6] =  i:1
  26 Column           1    1    6               00 r[6]=
REG[6] =  i:2
  27 Ne               8   29    6               00 if r[6]!=r[8] goto 29
REG[8] =  i:4
REG[6] =  i:2
  29 Next             1   24    0               00 
  24 Column           1    0    6               00 r[6]=
REG[6] =  i:2
  25 Ne               7   29    6               00 if r[6]!=r[7] goto 29
REG[7] =  NULL
REG[6] =  i:2
  26 Column           1    1    6               00 r[6]=
REG[6] =  i:4
  27 Ne               8   29    6               00 if r[6]!=r[8] goto 29
REG[8] =  i:4
REG[6] =  i:4
  28 Goto             0   33    0               00 
  33 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  34 Halt             0    0    0               00 
SQL: [SELECT (NULL, 0) IN (SELECT * FROM v0)
;]
VDBE Trace:
   0 Init             0   35    0               00 Start at 35
  35 Transaction      0    0    1 0             01 usesStmtJournal=0
  36 Null             0    7    0               00 r[7]=NULL
REG[7] =  NULL
  37 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  38 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   3 Noop             0    0    0               00 begin IN expr
   4 Integer         16    3    0               00 r[3]=16; return address
REG[3] =  i:16
   5 Once             0   16    0               00 
   6 OpenEphemeral    1    2    0 k(2,B,B)      00 nColumn=2; Result of SELECT 1
   7 Explain          7    0    0 LIST SUBQUERY 1 00 
   8 OpenRead         0    2    0 2             00 root=2 iDb=0; v0
   9 Explain          9    7    0 SCAN TABLE v0 00 
  10 Rewind           0   16    0               00 
  11 Column           0    0    4               00 r[4]=v0.over
REG[4] =  i:1
  12 Column           0    1    5               00 r[5]=v0.following
REG[5] =  i:2
  13 MakeRecord       4    2    6 AA            00 r[6]=mkrec(r[4..5])
REG[6] =  s4[03090102....]
  14 IdxInsert        1    6    4 2             00 key=r[6]
REG[6] =  s4[03090102....]
  15 Next             0   11    0               01 
  11 Column           0    0    4               00 r[4]=v0.over
REG[4] =  i:2
  12 Column           0    1    5               00 r[5]=v0.following
REG[5] =  i:4
  13 MakeRecord       4    2    6 AA            00 r[6]=mkrec(r[4..5])
REG[6] =  s5[0301010204.....]
  14 IdxInsert        1    6    4 2             00 key=r[6]
REG[6] =  s5[0301010204.....]
  15 Next             0   11    0               01 
  11 Column           0    0    4               00 r[4]=v0.over
REG[4] =  i:3
  12 Column           0    1    5               00 r[5]=v0.following
REG[5] =  i:5
  13 MakeRecord       4    2    6 AA            00 r[6]=mkrec(r[4..5])
REG[6] =  s5[0301010305.....]
  14 IdxInsert        1    6    4 2             00 key=r[6]
REG[6] =  s5[0301010305.....]
  15 Next             0   11    0               01 
  16 Return           3    0    0               00 
REG[3] =  i:16
  17 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
  18 Rewind           1   20    0               00 
  19 Column           1    0    2               80 r[2]=first_entry_in(1)
REG[2] =  i:1
  20 IsNull           7   23    0               00 if r[7]==NULL goto 23
REG[7] =  NULL
  23 Rewind           1   32    0               00 
  24 Column           1    0    6               00 r[6]=
REG[6] =  i:1
  25 Ne               7   29    6               00 if r[6]!=r[7] goto 29
REG[7] =  NULL
REG[6] =  i:1
  26 Column           1    1    6               00 r[6]=
REG[6] =  i:2
  27 Ne               8   29    6               00 if r[6]!=r[8] goto 29
REG[8] =  i:0
REG[6] =  i:2
  29 Next             1   24    0               00 
  24 Column           1    0    6               00 r[6]=
REG[6] =  i:2
  25 Ne               7   29    6               00 if r[6]!=r[7] goto 29
REG[7] =  NULL
REG[6] =  i:2
  26 Column           1    1    6               00 r[6]=
REG[6] =  i:4
  27 Ne               8   29    6               00 if r[6]!=r[8] goto 29
REG[8] =  i:0
REG[6] =  i:4
  29 Next             1   24    0               00 
  24 Column           1    0    6               00 r[6]=
REG[6] =  i:3
  25 Ne               7   29    6               00 if r[6]!=r[7] goto 29
REG[7] =  NULL
REG[6] =  i:3
  26 Column           1    1    6               00 r[6]=
REG[6] =  i:5
  27 Ne               8   29    6               00 if r[6]!=r[8] goto 29
REG[8] =  i:0
REG[6] =  i:5
  29 Next             1   24    0               00 
  30 Goto             0   32    0               00 end IN expr
  32 AddImm           1    0    0               00 r[1]=r[1]+0
REG[1] =  NULL
  33 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  34 Halt             0    0    0               00 
SQL: [CREATE TABLE preceding(t1, x, test001);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    1 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:2
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:2
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 preceding     00 r[7]='preceding'
REG[7] =   t9[preceding](8)
  20 String8          0    8    0 preceding     00 r[8]='preceding'
REG[8] =   t9[preceding](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  22 String8          0   10    0 CREATE TABLE preceding(t1, x, test001) 00 r[10]='CREATE TABLE preceding(t1, x, test001)'
REG[10] =   t38[CREATE TABLE pr](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s68[06171F1F01597461626C657072656365.....Ytableprece]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s68[06171F1F01597461626C657072656365.....Ytableprece]
REG[5] =  i:2
  25 SetCookie        0    1    2               00 
  26 ParseSchema      0    0    0 tbl_name='preceding' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 0             00 usesStmtJournal=0
  16 String8          0    2    0 preceding     00 r[2]='preceding'
REG[2] =   t9[preceding](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[preceding](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[preceding](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[preceding](8)
REG[1] =   s9[preceding](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s9[preceding](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s38[CREATE TABLE pr](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s9[preceding](8)
REG[5] =  i:3
REG[6] =   s38[CREATE TABLE pr](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO preceding VALUES('abc', 1, 'i');]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    1    2 0             01 usesStmtJournal=0
  10 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 3             00 root=3 iDb=0; preceding
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 String8          0    2    0 abc           00 r[2]='abc'
REG[2] =   t3[abc](8)
   4 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   5 String8          0    4    0 i             00 r[4]='i'
REG[4] =   t1[i](8)
   6 MakeRecord       2    3    5               00 r[5]=mkrec(r[2..4])
REG[5] =  s8[0413090F61626369....abci]
   7 Insert           0    5    1 preceding     39 intkey=r[1] data=r[5]
REG[5] =  s8[0413090F61626369....abci]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [;
;SELECT following FROM v0 WHERE (following, over) = (SELECT 'abc', 1);]
VDBE Trace:
   0 Init             0   22    0               00 Start at 22
  22 Transaction      0    0    2 0             01 usesStmtJournal=0
  23 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; v0
   2 Explain          2    0    0 SCAN TABLE v0 00 
   3 Rewind           0   21    0               00 
   4 Column           0    1    1               00 r[1]=v0.following
REG[1] =  i:2
   5 Integer         14    3    0               00 r[3]=14; return address
REG[3] =  i:14
   6 Once             0   14    0               00 
   7 Explain          7    0    0 SCALAR SUBQUERY 1 00 
   8 Null             0    4    5               00 r[4..5]=NULL; Init subquery result
REG[4] =  NULL
   9 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
  10 Explain         10    7    0 SCAN CONSTANT ROW 00 
  11 String8          0    4    0 abc           00 r[4]='abc'
REG[4] =   t3[abc](8)
  12 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  13 DecrJumpZero     6   14    0               00 if (--r[6])==0 goto 14
REG[6] =  i:1
  14 Return           3    0    0               00 
REG[3] =  i:14
  15 Ne               4   20    1 (BINARY)      51 if r[1]!=r[4] goto 20
REG[4] =   t3[abc](8)
REG[1] =  i:2
  20 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=v0.following
REG[1] =  i:4
   5 Integer         14    3    0               00 r[3]=14; return address
REG[3] =  i:14
   6 Once             1   14    0               00 
  14 Return           3    0    0               00 
REG[3] =  i:14
  15 Ne               4   20    1 (BINARY)      51 if r[1]!=r[4] goto 20
REG[4] =   t3[abc](8)
REG[1] =  i:4
  20 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=v0.following
REG[1] =  i:5
   5 Integer         14    3    0               00 r[3]=14; return address
REG[3] =  i:14
   6 Once             1   14    0               00 
  14 Return           3    0    0               00 
REG[3] =  i:14
  15 Ne               4   20    1 (BINARY)      51 if r[1]!=r[4] goto 20
REG[4] =   t3[abc](8)
REG[1] =  i:5
  20 Next             0    4    0               01 
  21 Halt             0    0    0               00 
SQL: [;
;SELECT following FROM v0 WHERE following = (SELECT 'abc') COLLATE nocase AND following = (SELECT 1);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    0    2 0             01 usesStmtJournal=0
  31 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; v0
   2 Explain          2    0    0 SCAN TABLE v0 00 
   3 Rewind           0   29    0               00 
   4 Column           0    1    1               00 r[1]=v0.following
REG[1] =  i:2
   5 Integer         13    3    0               00 r[3]=13; return address
REG[3] =  i:13
   6 Once             0   13    0               00 
   7 Explain          7    0    0 SCALAR SUBQUERY 1 00 
   8 Null             0    4    4               00 r[4..4]=NULL; Init subquery result
REG[4] =  NULL
   9 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
  10 Explain         10    7    0 SCAN CONSTANT ROW 00 
  11 String8          0    4    0 abc           00 r[4]='abc'
REG[4] =   t3[abc](8)
  12 DecrJumpZero     5   13    0               00 if (--r[5])==0 goto 13
REG[5] =  i:1
  13 Return           3    0    0               00 
REG[3] =  i:13
  14 Ne               4   28    1 (NOCASE)      51 if r[1]!=r[4] goto 28
REG[4] =   t3[abc](8)
REG[1] =  i:2
  28 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=v0.following
REG[1] =  i:4
   5 Integer         13    3    0               00 r[3]=13; return address
REG[3] =  i:13
   6 Once             1   13    0               00 
  13 Return           3    0    0               00 
REG[3] =  i:13
  14 Ne               4   28    1 (NOCASE)      51 if r[1]!=r[4] goto 28
REG[4] =   t3[abc](8)
REG[1] =  i:4
  28 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=v0.following
REG[1] =  i:5
   5 Integer         13    3    0               00 r[3]=13; return address
REG[3] =  i:13
   6 Once             1   13    0               00 
  13 Return           3    0    0               00 
REG[3] =  i:13
  14 Ne               4   28    1 (NOCASE)      51 if r[1]!=r[4] goto 28
REG[4] =   t3[abc](8)
REG[1] =  i:5
  28 Next             0    4    0               01 
  29 Halt             0    0    0               00 
SQL: [
;SELECT over FROM v0 WHERE (following COLLATE nocase, following) = (SELECT 'def', 2);]
VDBE Trace:
   0 Init             0   22    0               00 Start at 22
  22 Transaction      0    0    2 0             01 usesStmtJournal=0
  23 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; v0
   2 Explain          2    0    0 SCAN TABLE v0 00 
   3 Rewind           0   21    0               00 
   4 Column           0    1    1               00 r[1]=v0.following
REG[1] =  i:2
   5 Integer         14    3    0               00 r[3]=14; return address
REG[3] =  i:14
   6 Once             0   14    0               00 
   7 Explain          7    0    0 SCALAR SUBQUERY 1 00 
   8 Null             0    4    5               00 r[4..5]=NULL; Init subquery result
REG[4] =  NULL
   9 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
  10 Explain         10    7    0 SCAN CONSTANT ROW 00 
  11 String8          0    4    0 def           00 r[4]='def'
REG[4] =   t3[def](8)
  12 Integer          2    5    0               00 r[5]=2
REG[5] =  i:2
  13 DecrJumpZero     6   14    0               00 if (--r[6])==0 goto 14
REG[6] =  i:1
  14 Return           3    0    0               00 
REG[3] =  i:14
  15 Ne               4   20    1 (NOCASE)      51 if r[1]!=r[4] goto 20
REG[4] =   t3[def](8)
REG[1] =  i:2
  20 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=v0.following
REG[1] =  i:4
   5 Integer         14    3    0               00 r[3]=14; return address
REG[3] =  i:14
   6 Once             1   14    0               00 
  14 Return           3    0    0               00 
REG[3] =  i:14
  15 Ne               4   20    1 (NOCASE)      51 if r[1]!=r[4] goto 20
REG[4] =   t3[def](8)
REG[1] =  i:4
  20 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=v0.following
REG[1] =  i:5
   5 Integer         14    3    0               00 r[3]=14; return address
REG[3] =  i:14
   6 Once             1   14    0               00 
  14 Return           3    0    0               00 
REG[3] =  i:14
  15 Ne               4   20    1 (NOCASE)      51 if r[1]!=r[4] goto 20
REG[4] =   t3[def](8)
REG[1] =  i:5
  20 Next             0    4    0               01 
  21 Halt             0    0    0               00 
SQL: [SELECT * FROM t0 WHERE (c0, c0) IS (2, 2)
;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      1    0    1 0             01 usesStmtJournal=0
  13 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
  14 Goto             0    1    0               00 
   1 OpenRead         0    2    1 1             00 root=2 iDb=1; t0
   2 Explain          2    0    0 SCAN TABLE t0 00 
   3 Rewind           0   11    0               00 
  11 Halt             0    0    0               00 
SQL: [SELECT * FROM v0 WHERE (over, following) < (2, 3)
;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 0             01 usesStmtJournal=0
  16 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  17 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  18 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; v0
   2 Explain          2    0    0 SCAN TABLE v0 00 
   3 Rewind           0   14    0               00 
   4 Column           0    0    2               00 r[2]=v0.over
REG[2] =  i:1
   5 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:2
REG[2] =  i:1
REG[1] =  i:1
   6 ElseNotEq        0    9    0               00 
   9 IfNot            1   13    1               00 
REG[1] =  i:1
  10 Column           0    0    5               00 r[5]=v0.over
REG[5] =  i:1
  11 Column           0    1    6               00 r[6]=v0.following
REG[6] =  i:2
  12 ResultRow        5    2    0               00 output=r[5..6]
REG[5] =  i:1
REG[6] =  i:2
  13 Next             0    4    0               01 
   4 Column           0    0    2               00 r[2]=v0.over
REG[2] =  i:2
   5 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:2
REG[2] =  i:2
REG[1] =  i:0
   6 ElseNotEq        0    9    0               00 
   7 Column           0    1    2               00 r[2]=v0.following
REG[2] =  i:4
   8 Lt               4    1    2 (BINARY)      61 r[1] = (r[2]<r[4])
REG[4] =  i:3
REG[2] =  i:4
REG[1] =  i:0
   9 IfNot            1   13    1               00 
REG[1] =  i:0
  13 Next             0    4    0               01 
   4 Column           0    0    2               00 r[2]=v0.over
REG[2] =  i:3
   5 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:2
REG[2] =  i:3
REG[1] =  i:0
   6 ElseNotEq        0    9    0               00 
   9 IfNot            1   13    1               00 
REG[1] =  i:0
  13 Next             0    4    0               01 
  14 Halt             0    0    0               00 
SQL: [SELECT * FROM t0 WHERE (c0, c0) > (2, 1)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      1    0    1 0             01 usesStmtJournal=0
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  17 Goto             0    1    0               00 
   1 OpenRead         0    2    1 1             00 root=2 iDb=1; t0
   2 Explain          2    0    0 SCAN TABLE t0 00 
   3 Rewind           0   13    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT * FROM t0 WHERE (c0, c0) > ('2', 1)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      1    0    1 0             01 usesStmtJournal=0
  15 String8          0    3    0 2             00 r[3]='2'
REG[3] =   t1[2](8)
  16 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  17 Goto             0    1    0               00 
   1 OpenRead         0    2    1 1             00 root=2 iDb=1; t0
   2 Explain          2    0    0 SCAN TABLE t0 00 
   3 Rewind           0   13    0               00 
  13 Halt             0    0    0               00 
SQL: [CREATE TABLE last_field(test002);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    2 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:3
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:3
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 last_field    00 r[7]='last_field'
REG[7] =   t10[last_field](8)
  20 String8          0    8    0 last_field    00 r[8]='last_field'
REG[8] =   t10[last_field](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  22 String8          0   10    0 CREATE TABLE last_field(test002) 00 r[10]='CREATE TABLE last_field(test002)'
REG[10] =   t32[CREATE TABLE la](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s64[06172121014D7461626C656C6173745F..!!.Mtablelast_]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s64[06172121014D7461626C656C6173745F..!!.Mtablelast_]
REG[5] =  i:3
  25 SetCookie        0    1    3               00 
  26 ParseSchema      0    0    0 tbl_name='last_field' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 0             00 usesStmtJournal=0
  16 String8          0    2    0 last_field    00 r[2]='last_field'
REG[2] =   t10[last_field](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t10[last_field](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[preceding](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t10[last_field](8)
REG[1] =   s9[preceding](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s10[last_field](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t10[last_field](8)
REG[1] =   s10[last_field](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s10[last_field](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s32[CREATE TABLE la](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s10[last_field](8)
REG[5] =  i:4
REG[6] =   s32[CREATE TABLE la](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [CREATE TABLE field1(test003 INTEGER PRIMARY KEY, field2, test004);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    3 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:4
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:4
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 field1        00 r[7]='field1'
REG[7] =   t6[field1](8)
  20 String8          0    8    0 field1        00 r[8]='field1'
REG[8] =   t6[field1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  22 String8          0   10    0 CREATE TABLE field1(test003 INTEGER PRIMARY KEY, field2, test004) 00 r[10]='CREATE TABLE field1(test003 INTEGER PRIMARY KEY, field2, test004)'
REG[10] =   t65[CREATE TABLE fi](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s90[0717191901810F7461626C656669656C.......tablefiel]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s90[0717191901810F7461626C656669656C.......tablefiel]
REG[5] =  i:4
  25 SetCookie        0    1    4               00 
  26 ParseSchema      0    0    0 tbl_name='field1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    4 0             00 usesStmtJournal=0
  16 String8          0    2    0 field1        00 r[2]='field1'
REG[2] =   t6[field1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field1](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[preceding](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field1](8)
REG[1] =   s9[preceding](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s10[last_field](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field1](8)
REG[1] =   s10[last_field](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field1](8)
REG[1] =   s6[field1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s6[field1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:5
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s65[CREATE TABLE fi](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s6[field1](8)
REG[5] =  i:5
REG[6] =   s65[CREATE TABLE fi](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [SELECT test001 FROM preceding WHERE (t1, test001) < (4, 3)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    4 0             01 usesStmtJournal=0
  15 Integer          4    3    0               00 r[3]=4
REG[3] =  i:4
  16 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  17 Goto             0    1    0               00 
   1 OpenRead         0    3    0 3             00 root=3 iDb=0; preceding
   2 Explain          2    0    0 SCAN TABLE preceding 00 
   3 Rewind           0   13    0               00 
   4 Column           0    0    2               00 r[2]=preceding.t1
REG[2] =   s3[abc](8)
   5 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:4
REG[2] =   s3[abc](8)
REG[1] =  i:0
   6 ElseNotEq        0    9    0               00 
   9 IfNot            1   12    1               00 
REG[1] =  i:0
  12 Next             0    4    0               01 
  13 Halt             0    0    0               00 
SQL: [;INSERT INTO t0(c0) VALUES('X');]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      1    1    1 0             01 usesStmtJournal=0
   8 Goto             0    1    0               00 
   1 OpenWrite        0    2    1 1             00 root=2 iDb=1; t0
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 String8          0    2    0 X             00 r[2]='X'
REG[2] =   t1[X](8)
   4 MakeRecord       2    1    3 D             00 r[3]=mkrec(r[2])
REG[3] =  s3[020F58..X]
   5 Insert           0    3    1 t0            39 intkey=r[1] data=r[3]
REG[3] =  s3[020F58..X]
REG[1] =  i:1
   6 Halt             0    0    0               00 
SQL: [;CREATE TABLE field3(test005 TEXT,field4 TEXT,test006 TEXT,field5 TEXT,test007 TEXT,field6 TEXT);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    4 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:6
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:5
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:5
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:5
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:5
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 field3        00 r[7]='field3'
REG[7] =   t6[field3](8)
  20 String8          0    8    0 field3        00 r[8]='field3'
REG[8] =   t6[field3](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:6
  22 String8          0   10    0 CREATE TABLE field3(test005 TEXT,field4 TEXT,test006 TEXT,field5 TEXT,test007 TEXT,field6 TEXT) 00 r[10]='CREATE TABLE field3(test005 TEXT,field4 TEXT,test006 TEXT,field5 TEXT,test007 TEXT,field6 TE
REG[10] =   t95[CREATE TABLE fi](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s120[0717191901814B7461626C656669656C......Ktablefiel]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s120[0717191901814B7461626C656669656C......Ktablefiel]
REG[5] =  i:5
  25 SetCookie        0    1    5               00 
  26 ParseSchema      0    0    0 tbl_name='field3' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    5 0             00 usesStmtJournal=0
  16 String8          0    2    0 field3        00 r[2]='field3'
REG[2] =   t6[field3](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field3](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[preceding](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field3](8)
REG[1] =   s9[preceding](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s10[last_field](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field3](8)
REG[1] =   s10[last_field](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field3](8)
REG[1] =   s6[field1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field3](8)
REG[1] =   s6[field3](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s6[field3](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:6
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s95[CREATE TABLE fi](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s6[field3](8)
REG[5] =  i:6
REG[6] =   s95[CREATE TABLE fi](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;CREATE INDEX test008 ON t0(c0,c0,c0,c0,c0);]
VDBE Trace:
   0 Init             0   37    0               00 Start at 37
  37 Transaction      1    1    1 0             01 usesStmtJournal=0
  38 Goto             0    1    0               00 
   1 Noop             0   36    0               00 
   2 CreateBtree      1    1    2               00 r[1]=root iDb=1 flags=2
REG[1] =  i:3
   3 OpenWrite        0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:2
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 test008       00 r[4]='test008'
REG[4] =   t7[test008](8)
   7 String8          0    5    0 t0            00 r[5]='t0'
REG[5] =   t2[t0](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:3
   9 String8          0    7    0 CREATE INDEX test008 ON t0(c0,c0,c0,c0,c0) 00 r[7]='CREATE INDEX test008 ON t0(c0,c0,c0,c0,c0)'
REG[7] =   t42[CREATE INDEX te](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s63[06171B110161696E6465787465737430.....aindextest0]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s63[06171B110161696E6465787465737430.....aindextest0]
REG[2] =  i:2
  12 SorterOpen       3    0    5 k(6,,,,,,)    00 
  13 OpenRead         1    2    1 1             00 root=2 iDb=1; t0
  14 Rewind           1   24    0               00 
  15 Column           1    0   10               00 r[10]=t0.c0
REG[10] =   s1[X](8)
  16 Column           1    0   11               00 r[11]=t0.c0
REG[11] =   s1[X](8)
  17 Column           1    0   12               00 r[12]=t0.c0
REG[12] =   s1[X](8)
  18 Column           1    0   13               00 r[13]=t0.c0
REG[13] =   s1[X](8)
  19 Column           1    0   14               00 r[14]=t0.c0
REG[14] =   s1[X](8)
  20 Rowid            1   15    0               00 r[15]=rowid
REG[15] =  i:1
  21 MakeRecord      10    6    9               00 r[9]=mkrec(r[10..15])
REG[9] =  s12[070F0F0F0F0F095858585858.......XXXXX]
  22 SorterInsert     3    9    0               00 key=r[9]
REG[9] =  s12[070F0F0F0F0F095858585858.......XXXXX]
  23 Next             1   15    0               00 
  24 OpenWrite        2    1    1 k(6,,,,,,)    11 root=1 iDb=1
  25 SorterSort       3   30    0               00 
  26 SorterData       3    9    2               00 r[9]=data
  27 SeekEnd          2    0    0               00 
  28 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s12[070F0F0F0F0F095858585858.......XXXXX]
  29 SorterNext       3   26    0               00 
  30 Close            1    0    0               00 
  31 Close            2    0    0               00 
  32 Close            3    0    0               00 
  33 SetCookie        1    1    2               00 
  34 ParseSchema      1    0    0 name='test008' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      1    0    2 0             00 usesStmtJournal=0
  16 String8          0    2    0 test008       00 r[2]='test008'
REG[2] =   t7[test008](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_temp_master.name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test008](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_temp_master.name
REG[1] =   s7[test008](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test008](8)
REG[1] =   s7[test008](8)
   7 Column           0    0    1               00 r[1]=sqlite_temp_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_temp_master.name
REG[4] =   s7[test008](8)
  10 Column           0    3    5               00 r[5]=sqlite_temp_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_temp_master.sql
REG[6] =   s42[CREATE INDEX te](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s7[test008](8)
REG[5] =  i:3
REG[6] =   s42[CREATE INDEX te](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  35 Expire           0    1    0               00 
  36 Halt             0    0    0               00 
SQL: [;
;CREATE TABLE field7(test009);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    5 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:7
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:6
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:6
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:6
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:6
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 field7        00 r[7]='field7'
REG[7] =   t6[field7](8)
  20 String8          0    8    0 field7        00 r[8]='field7'
REG[8] =   t6[field7](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:7
  22 String8          0   10    0 CREATE TABLE field7(test009) 00 r[10]='CREATE TABLE field7(test009)'
REG[10] =   t28[CREATE TABLE fi](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s52[0617191901457461626C656669656C64.....Etablefield]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s52[0617191901457461626C656669656C64.....Etablefield]
REG[5] =  i:6
  25 SetCookie        0    1    6               00 
  26 ParseSchema      0    0    0 tbl_name='field7' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    6 0             00 usesStmtJournal=0
  16 String8          0    2    0 field7        00 r[2]='field7'
REG[2] =   t6[field7](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field7](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[preceding](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field7](8)
REG[1] =   s9[preceding](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s10[last_field](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field7](8)
REG[1] =   s10[last_field](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field7](8)
REG[1] =   s6[field1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field7](8)
REG[1] =   s6[field3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field7](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field7](8)
REG[1] =   s6[field7](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s6[field7](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:7
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s28[CREATE TABLE fi](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s6[field7](8)
REG[5] =  i:7
REG[6] =   s28[CREATE TABLE fi](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;DROP TABLE IF EXISTS last_field;]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      0    1    6 0             01 usesStmtJournal=1
  39 String8          0    3    0 last_field    00 r[3]='last_field'
REG[3] =   t10[last_field](8)
  40 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  41 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[v0](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t10[last_field](8)
REG[2] =   s2[v0](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s9[preceding](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t10[last_field](8)
REG[2] =   s9[preceding](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s10[last_field](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t10[last_field](8)
REG[2] =   s10[last_field](8)
   7 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
   8 Eq               4   12    2 (BINARY)      52 if r[2]==r[4] goto 12
REG[4] =   t7[trigger](8)
REG[2] =   s5[table](8)
   9 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:3
  10 Once             0   11    0               00 
  11 Delete           0    0    0               02 
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s6[field1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t10[last_field](8)
REG[2] =   s6[field1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s6[field3](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t10[last_field](8)
REG[2] =   s6[field3](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s6[field7](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t10[last_field](8)
REG[2] =   s6[field7](8)
  12 Next             0    5    0               01 
  13 Destroy          4    2    0               00 
REG[2] =  i:0
  14 Null             0    6    7               00 r[6..7]=NULL
REG[6] =  NULL
  15 IfNot            2   24    1               00 
REG[2] =  i:0
  24 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  25 RowSetRead       6   35    7               00 r[7]=rowset(6)
REG[6] =  NULL
REG[7] =  NULL
  35 DropTable        0    0    0 last_field    00 
  36 SetCookie        0    1    7               00 
  37 Halt             0    0    0               00 
SQL: [;CREATE TABLE field8(test010,field9);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    7 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:7
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:7
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:7
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:7
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:7
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 field8        00 r[7]='field8'
REG[7] =   t6[field8](8)
  20 String8          0    8    0 field8        00 r[8]='field8'
REG[8] =   t6[field8](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  22 String8          0   10    0 CREATE TABLE field8(test010,field9) 00 r[10]='CREATE TABLE field8(test010,field9)'
REG[10] =   t35[CREATE TABLE fi](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s59[0617191901537461626C656669656C64.....Stablefield]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s59[0617191901537461626C656669656C64.....Stablefield]
REG[5] =  i:7
  25 SetCookie        0    1    8               00 
  26 ParseSchema      0    0    0 tbl_name='field8' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    8 0             00 usesStmtJournal=0
  16 String8          0    2    0 field8        00 r[2]='field8'
REG[2] =   t6[field8](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field8](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[preceding](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field8](8)
REG[1] =   s9[preceding](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field8](8)
REG[1] =   s6[field1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field8](8)
REG[1] =   s6[field3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field7](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field8](8)
REG[1] =   s6[field7](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field8](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field8](8)
REG[1] =   s6[field8](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s6[field8](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s35[CREATE TABLE fi](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s6[field8](8)
REG[5] =  i:4
REG[6] =   s35[CREATE TABLE fi](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;
;SELECT 1 WHERE (2,2) BETWEEN (1,1) AND (3,3)
;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Integer          2    1    0               00 r[1]=2
REG[1] =  i:2
  14 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
  15 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  16 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  17 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               4    3    1               61 r[3] = (r[1]>r[4])
REG[4] =  i:1
REG[1] =  i:2
REG[3] =  i:1
   3 ElseNotEq        0    5    0               00 
   5 IfNot            3   12    1               00 
REG[3] =  i:1
   6 Lt               5    3    1               61 r[3] = (r[1]<r[5])
REG[5] =  i:3
REG[1] =  i:2
REG[3] =  i:1
   7 ElseNotEq        0    9    0               00 
   9 IfNot            3   12    1               00 
REG[3] =  i:1
  10 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  11 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:1
  12 Halt             0    0    0               00 
SQL: [SELECT CASE (SELECT 2,2) WHEN (1, 1) THEN 2 ELSE 1 END
;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Integer          1    7    0               00 r[7]=1
REG[7] =  i:1
  22 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         11    2    0               00 r[2]=11; return address
REG[2] =  i:11
   3 Once             0   11    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   9 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  10 DecrJumpZero     5   11    0               00 if (--r[5])==0 goto 11
REG[5] =  i:1
  11 Return           2    0    0               00 
REG[2] =  i:11
  12 Eq               7    6    3               61 r[6] = (r[3]==r[7])
REG[7] =  i:1
REG[3] =  i:2
REG[6] =  i:0
  13 IfNot            6   15    0               00 
REG[6] =  i:0
  15 IfNot            6   18    1               00 
REG[6] =  i:0
  18 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  19 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  20 Halt             0    0    0               00 
SQL: [SELECT 1 WHERE (SELECT 2,2) BETWEEN (1,1) AND (3,3)
;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  24 Integer          3    7    0               00 r[7]=3
REG[7] =  i:3
  25 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         11    1    0               00 r[1]=11; return address
REG[1] =  i:11
   3 Once             0   11    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    2    3               00 r[2..3]=NULL; Init subquery result
REG[2] =  NULL
   6 Integer          1    4    0               00 r[4]=1; LIMIT counter
REG[4] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
   9 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  10 DecrJumpZero     4   11    0               00 if (--r[4])==0 goto 11
REG[4] =  i:1
  11 Return           1    0    0               00 
REG[1] =  i:11
  12 Gt               6    5    2               61 r[5] = (r[2]>r[6])
REG[6] =  i:1
REG[2] =  i:2
REG[5] =  i:1
  13 ElseNotEq        0   15    0               00 
  15 IfNot            5   22    1               00 
REG[5] =  i:1
  16 Lt               7    5    2               61 r[5] = (r[2]<r[7])
REG[7] =  i:3
REG[2] =  i:2
REG[5] =  i:1
  17 ElseNotEq        0   19    0               00 
  19 IfNot            5   22    1               00 
REG[5] =  i:1
  20 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  21 ResultRow        8    1    0               00 output=r[8]
REG[8] =  i:1
  22 Halt             0    0    0               00 
SQL: [SELECT 1 FROM v0 WHERE (over,1) BETWEEN (1,1) AND (3,3)
;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    8 0             01 usesStmtJournal=0
  18 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  19 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  20 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  21 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; v0
   2 Explain          2    0    0 SCAN TABLE v0 00 
   3 Rewind           0   16    0               00 
   4 Column           0    0    1               00 r[1]=v0.over
REG[1] =  i:1
   5 Gt               4    3    1 (BINARY)      61 r[3] = (r[1]>r[4])
REG[4] =  i:1
REG[1] =  i:1
REG[3] =  i:0
   6 ElseNotEq        0    8    0               00 
   7 Ge               4    3    2               61 r[3] = (r[2]>=r[4])
REG[4] =  i:1
REG[2] =  i:1
REG[3] =  i:1
   8 IfNot            3   15    1               00 
REG[3] =  i:1
   9 Lt               5    3    1 (BINARY)      61 r[3] = (r[1]<r[5])
REG[5] =  i:3
REG[1] =  i:1
REG[3] =  i:1
  10 ElseNotEq        0   12    0               00 
  12 IfNot            3   15    1               00 
REG[3] =  i:1
  13 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  14 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:1
  15 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=v0.over
REG[1] =  i:2
   5 Gt               4    3    1 (BINARY)      61 r[3] = (r[1]>r[4])
REG[4] =  i:1
REG[1] =  i:2
REG[3] =  i:1
   6 ElseNotEq        0    8    0               00 
   8 IfNot            3   15    1               00 
REG[3] =  i:1
   9 Lt               5    3    1 (BINARY)      61 r[3] = (r[1]<r[5])
REG[5] =  i:3
REG[1] =  i:2
REG[3] =  i:1
  10 ElseNotEq        0   12    0               00 
  12 IfNot            3   15    1               00 
REG[3] =  i:1
  13 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  14 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:1
  15 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=v0.over
REG[1] =  i:3
   5 Gt               4    3    1 (BINARY)      61 r[3] = (r[1]>r[4])
REG[4] =  i:1
REG[1] =  i:3
REG[3] =  i:1
   6 ElseNotEq        0    8    0               00 
   8 IfNot            3   15    1               00 
REG[3] =  i:1
   9 Lt               5    3    1 (BINARY)      61 r[3] = (r[1]<r[5])
REG[5] =  i:3
REG[1] =  i:3
REG[3] =  i:0
  10 ElseNotEq        0   12    0               00 
  11 Le               5    3    2               61 r[3] = (r[2]<=r[5])
REG[5] =  i:3
REG[2] =  i:1
REG[3] =  i:1
  12 IfNot            3   15    1               00 
REG[3] =  i:1
  13 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  14 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:1
  15 Next             0    4    0               01 
  16 Halt             0    0    0               00 
SQL: [;CREATE TABLE test011(field10 INTEGER PRIMARY KEY, test012);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    8 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:8
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:8
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:8
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:8
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:8
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:8
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 test011       00 r[7]='test011'
REG[7] =   t7[test011](8)
  20 String8          0    8    0 test011       00 r[8]='test011'
REG[8] =   t7[test011](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:8
  22 String8          0   10    0 CREATE TABLE test011(field10 INTEGER PRIMARY KEY, test012) 00 r[10]='CREATE TABLE test011(field10 INTEGER PRIMARY KEY, test012)'
REG[10] =   t58[CREATE TABLE te](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s85[07171B1B0181017461626C6574657374.......tabletest]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s85[07171B1B0181017461626C6574657374.......tabletest]
REG[5] =  i:8
  25 SetCookie        0    1    9               00 
  26 ParseSchema      0    0    0 tbl_name='test011' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    9 0             00 usesStmtJournal=0
  16 String8          0    2    0 test011       00 r[2]='test011'
REG[2] =   t7[test011](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test011](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[preceding](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test011](8)
REG[1] =   s9[preceding](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test011](8)
REG[1] =   s6[field1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test011](8)
REG[1] =   s6[field3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field7](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test011](8)
REG[1] =   s6[field7](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field8](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test011](8)
REG[1] =   s6[field8](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[test011](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test011](8)
REG[1] =   s7[test011](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s7[test011](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:8
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s58[CREATE TABLE te](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s7[test011](8)
REG[5] =  i:8
REG[6] =   s58[CREATE TABLE te](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;CREATE TABLE field11(test013);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    9 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:9
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:9
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:9
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:9
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:9
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:9
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 field11       00 r[7]='field11'
REG[7] =   t7[field11](8)
  20 String8          0    8    0 field11       00 r[8]='field11'
REG[8] =   t7[field11](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:9
  22 String8          0   10    0 CREATE TABLE field11(test013) 00 r[10]='CREATE TABLE field11(test013)'
REG[10] =   t29[CREATE TABLE fi](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s55[06171B1B01477461626C656669656C64.....Gtablefield]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s55[06171B1B01477461626C656669656C64.....Gtablefield]
REG[5] =  i:9
  25 SetCookie        0    1   10               00 
  26 ParseSchema      0    0    0 tbl_name='field11' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   10 0             00 usesStmtJournal=0
  16 String8          0    2    0 field11       00 r[2]='field11'
REG[2] =   t7[field11](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field11](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[preceding](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field11](8)
REG[1] =   s9[preceding](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field11](8)
REG[1] =   s6[field1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field11](8)
REG[1] =   s6[field3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field7](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field11](8)
REG[1] =   s6[field7](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field8](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field11](8)
REG[1] =   s6[field8](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[test011](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field11](8)
REG[1] =   s7[test011](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[field11](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field11](8)
REG[1] =   s7[field11](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s7[field11](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:9
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s29[CREATE TABLE fi](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s7[field11](8)
REG[5] =  i:9
REG[6] =   s29[CREATE TABLE fi](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;UPDATE v0 SET over=7;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    1   10 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenWrite        0    2    0 2             00 root=2 iDb=0; v0
   3 Explain          3    0    0 SCAN TABLE v0 00 
   4 Rewind           0   12    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 IsNull           2   12    0               00 if r[2]==NULL goto 12
REG[2] =  i:1
   7 Integer          7    3    0               00 r[3]=7
REG[3] =  i:7
   8 Column           0    1    4               00 r[4]=v0.following
REG[4] =  i:2
   9 MakeRecord       3    2    5               00 r[5]=mkrec(r[3..4])
REG[5] =  s5[0301010702.....]
  10 Insert           0    5    2 v0            07 intkey=r[2] data=r[5]
REG[5] =  s5[0301010702.....]
REG[2] =  i:1
  11 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
   6 IsNull           2   12    0               00 if r[2]==NULL goto 12
REG[2] =  i:2
   7 Integer          7    3    0               00 r[3]=7
REG[3] =  i:7
   8 Column           0    1    4               00 r[4]=v0.following
REG[4] =  i:4
   9 MakeRecord       3    2    5               00 r[5]=mkrec(r[3..4])
REG[5] =  s5[0301010704.....]
  10 Insert           0    5    2 v0            07 intkey=r[2] data=r[5]
REG[5] =  s5[0301010704.....]
REG[2] =  i:2
  11 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:3
   6 IsNull           2   12    0               00 if r[2]==NULL goto 12
REG[2] =  i:3
   7 Integer          7    3    0               00 r[3]=7
REG[3] =  i:7
   8 Column           0    1    4               00 r[4]=v0.following
REG[4] =  i:5
   9 MakeRecord       3    2    5               00 r[5]=mkrec(r[3..4])
REG[5] =  s5[0301010705.....]
  10 Insert           0    5    2 v0            07 intkey=r[2] data=r[5]
REG[5] =  s5[0301010705.....]
REG[2] =  i:3
  11 Next             0    5    0               01 
  12 Halt             0    0    0               00 
SQL: [;
;CREATE TABLE field12(test014, field13, test015, field14, test016);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   10 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:10
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:10
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:10
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:10
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:10
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:10
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 field12       00 r[7]='field12'
REG[7] =   t7[field12](8)
  20 String8          0    8    0 field12       00 r[8]='field12'
REG[8] =   t7[field12](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:10
  22 String8          0   10    0 CREATE TABLE field12(test014, field13, test015, field14, test016) 00 r[10]='CREATE TABLE field12(test014, field13, test015, field14, test016)'
REG[10] =   t65[CREATE TABLE fi](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s92[07171B1B01810F7461626C656669656C.......tablefiel]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s92[07171B1B01810F7461626C656669656C.......tablefiel]
REG[5] =  i:10
  25 SetCookie        0    1   11               00 
  26 ParseSchema      0    0    0 tbl_name='field12' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   11 0             00 usesStmtJournal=0
  16 String8          0    2    0 field12       00 r[2]='field12'
REG[2] =   t7[field12](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field12](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[preceding](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field12](8)
REG[1] =   s9[preceding](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field12](8)
REG[1] =   s6[field1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field12](8)
REG[1] =   s6[field3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field7](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field12](8)
REG[1] =   s6[field7](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field8](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field12](8)
REG[1] =   s6[field8](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[test011](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field12](8)
REG[1] =   s7[test011](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[field11](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field12](8)
REG[1] =   s7[field11](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[field12](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field12](8)
REG[1] =   s7[field12](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s7[field12](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:10
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s65[CREATE TABLE fi](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s7[field12](8)
REG[5] =  i:10
REG[6] =   s65[CREATE TABLE fi](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;CREATE TRIGGER field15 AFTER INSERT ON v0 BEGIN
    UPDATE v0 SET (over, following) = (SELECT 'over', 'over'), (over, over) = (SELECT 'over', 'following')
      WHERE over = new.over-1;
  END;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    1   11 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:11
   3 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   4 String8          0    3    0 field15       00 r[3]='field15'
REG[3] =   t7[field15](8)
   5 String8          0    4    0 v0            00 r[4]='v0'
REG[4] =   t2[v0](8)
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 String8          0    6    0 CREATE TRIGGER field15 AFTER INSERT ON v0 BEGIN
    UPDATE v0 SET (over, following) = (SELECT 'over', 'over'), (over, over) = (SELECT 'over', 'following')
      WHERE over = new.over-1;
  END 00 r[6]='CREATE TRIGGER field15 AFTER INSERT ON v0 BEGIN
    UPDATE v0 SET (over, following) = (SELECT
REG[6] =   t191[CREATE TRIGGER ](8)
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
REG[7] =  s214[071B1B1108830B747269676765726669.......triggerfi]
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
REG[7] =  s214[071B1B1108830B747269676765726669.......triggerfi]
REG[1] =  i:11
  10 SetCookie        0    1   12               00 
  11 ParseSchema      0    0    0 type='trigger' AND name='field15' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   12 0             00 usesStmtJournal=0
  16 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  17 String8          0    3    0 field15       00 r[3]='field15'
REG[3] =   t7[field15](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[field15](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t7[field15](8)
REG[1] =   s7[field15](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s7[field15](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:0
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s191[CREATE TRIGGER ](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s7[field15](8)
REG[5] =  i:0
REG[6] =   s191[CREATE TRIGGER ](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;
;DROP TRIGGER field15;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1   12 0             01 usesStmtJournal=0
  17 String8          0    3    0 field15       00 r[3]='field15'
REG[3] =   t7[field15](8)
  18 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  19 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[v0](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t7[field15](8)
REG[2] =   s2[v0](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s9[preceding](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t7[field15](8)
REG[2] =   s9[preceding](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s6[field1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t7[field15](8)
REG[2] =   s6[field1](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s6[field3](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t7[field15](8)
REG[2] =   s6[field3](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s6[field7](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t7[field15](8)
REG[2] =   s6[field7](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s6[field8](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t7[field15](8)
REG[2] =   s6[field8](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s7[test011](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t7[field15](8)
REG[2] =   s7[test011](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s7[field11](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t7[field15](8)
REG[2] =   s7[field11](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s7[field12](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t7[field15](8)
REG[2] =   s7[field12](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s7[field15](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t7[field15](8)
REG[2] =   s7[field15](8)
   7 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s7[trigger](8)
   8 Ne               4   12    2 (BINARY)      52 if r[2]!=r[4] goto 12
REG[4] =   t7[trigger](8)
REG[2] =   s7[trigger](8)
   9 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:11
  10 Once             0   11    0               00 
  11 Delete           0    0    0               02 
  12 Next             0    5    0               01 
  13 SetCookie        0    1   13               00 
  14 DropTrigger      0    0    0 field15       00 
  15 Halt             0    0    0               00 
SQL: [;CREATE TRIGGER field15 AFTER UPDATE ON v0 WHEN new.over>1 BEGIN
    UPDATE v0 SET (over, over) = (
      SELECT over, over FROM v0 WHERE over = new.over-1
    ), (over, over) = (
      SELECT over, over FROM v0 WHERE over = new.over-1
    ) WHERE over = new.over-1;
  END;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    1   13 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:11
   3 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   4 String8          0    3    0 field15       00 r[3]='field15'
REG[3] =   t7[field15](8)
   5 String8          0    4    0 v0            00 r[4]='v0'
REG[4] =   t2[v0](8)
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 String8          0    6    0 CREATE TRIGGER field15 AFTER UPDATE ON v0 WHEN new.over>1 BEGIN
    UPDATE v0 SET (over, over) = (
      SELECT over, over FROM v0 WHERE over = new.over-1
    ), (over, over) = (
      SELECT over, over FROM v0 WHERE over = new.over-1
    ) WHERE over = new.over-1;
  END 00 r[6]='CREATE TRIGGER field15 AFTER UPDATE ON v0 WHEN new.over>1 BEGIN
    UPDATE v0 SET (over, over
REG[6] =   t271[CREATE TRIGGER ](8)
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
REG[7] =  s294[071B1B1108842B747269676765726669......+triggerfi]
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
REG[7] =  s294[071B1B1108842B747269676765726669......+triggerfi]
REG[1] =  i:11
  10 SetCookie        0    1   14               00 
  11 ParseSchema      0    0    0 type='trigger' AND name='field15' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   14 0             00 usesStmtJournal=0
  16 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  17 String8          0    3    0 field15       00 r[3]='field15'
REG[3] =   t7[field15](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[field15](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t7[field15](8)
REG[1] =   s7[field15](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s7[field15](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:0
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s271[CREATE TRIGGER ](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s7[field15](8)
REG[5] =  i:0
REG[6] =   s271[CREATE TRIGGER ](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;UPDATE field1 SET test004=test004 WHERE test004=3;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1   14 0             01 usesStmtJournal=0
  17 Integer          3    7    0               00 r[7]=3
REG[7] =  i:3
  18 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenWrite        0    5    0 3             00 root=5 iDb=0; field1
   3 Explain          3    0    0 SCAN TABLE field1 00 
   4 Rewind           0   15    0               00 
  15 Halt             0    0    0               00 
SQL: [;SELECT * FROM t0;]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      1    0    2 0             01 usesStmtJournal=0
   9 Goto             0    1    0               00 
   1 OpenRead         0    2    1 1             00 root=2 iDb=1; t0
   2 Explain          2    0    0 SCAN TABLE t0 00 
   3 Rewind           0    7    0               00 
   4 Column           0    0    1               00 r[1]=t0.c0
REG[1] =   s1[X](8)
   5 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s1[X](8)
   6 Next             0    4    0               01 
   7 Halt             0    0    0               00 
SQL: [;
;CREATE TABLE test017(field16, test018);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   14 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:11
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:12
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:12
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:12
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:12
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:12
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 test017       00 r[7]='test017'
REG[7] =   t7[test017](8)
  20 String8          0    8    0 test017       00 r[8]='test017'
REG[8] =   t7[test017](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:11
  22 String8          0   10    0 CREATE TABLE test017(field16, test018) 00 r[10]='CREATE TABLE test017(field16, test018)'
REG[10] =   t38[CREATE TABLE te](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s64[06171B1B01597461626C657465737430.....Ytabletest0]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s64[06171B1B01597461626C657465737430.....Ytabletest0]
REG[5] =  i:12
  25 SetCookie        0    1   15               00 
  26 ParseSchema      0    0    0 tbl_name='test017' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   15 0             00 usesStmtJournal=0
  16 String8          0    2    0 test017       00 r[2]='test017'
REG[2] =   t7[test017](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test017](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[preceding](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test017](8)
REG[1] =   s9[preceding](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test017](8)
REG[1] =   s6[field1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test017](8)
REG[1] =   s6[field3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field7](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test017](8)
REG[1] =   s6[field7](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field8](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test017](8)
REG[1] =   s6[field8](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[test011](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test017](8)
REG[1] =   s7[test011](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[field11](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test017](8)
REG[1] =   s7[field11](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[field12](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test017](8)
REG[1] =   s7[field12](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test017](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[test017](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[test017](8)
REG[1] =   s7[test017](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s7[test017](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:11
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s38[CREATE TABLE te](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s7[test017](8)
REG[5] =  i:11
REG[6] =   s38[CREATE TABLE te](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;CREATE TABLE field17(test019);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   15 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:12
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:13
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:13
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:13
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:13
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:13
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 field17       00 r[7]='field17'
REG[7] =   t7[field17](8)
  20 String8          0    8    0 field17       00 r[8]='field17'
REG[8] =   t7[field17](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:12
  22 String8          0   10    0 CREATE TABLE field17(test019) 00 r[10]='CREATE TABLE field17(test019)'
REG[10] =   t29[CREATE TABLE fi](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s55[06171B1B01477461626C656669656C64.....Gtablefield]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s55[06171B1B01477461626C656669656C64.....Gtablefield]
REG[5] =  i:13
  25 SetCookie        0    1   16               00 
  26 ParseSchema      0    0    0 tbl_name='field17' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   16 0             00 usesStmtJournal=0
  16 String8          0    2    0 field17       00 r[2]='field17'
REG[2] =   t7[field17](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field17](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[preceding](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field17](8)
REG[1] =   s9[preceding](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field17](8)
REG[1] =   s6[field1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field17](8)
REG[1] =   s6[field3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field7](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field17](8)
REG[1] =   s6[field7](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field8](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field17](8)
REG[1] =   s6[field8](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[test011](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field17](8)
REG[1] =   s7[test011](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[field11](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field17](8)
REG[1] =   s7[field11](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[field12](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field17](8)
REG[1] =   s7[field12](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field17](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[test017](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field17](8)
REG[1] =   s7[test017](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[field17](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field17](8)
REG[1] =   s7[field17](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s7[field17](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:12
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s29[CREATE TABLE fi](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s7[field17](8)
REG[5] =  i:12
REG[6] =   s29[CREATE TABLE fi](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;
;DROP TABLE IF EXISTS field11;]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      0    1   16 0             01 usesStmtJournal=1
  39 String8          0    3    0 field11       00 r[3]='field11'
REG[3] =   t7[field11](8)
  40 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  41 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[v0](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t7[field11](8)
REG[2] =   s2[v0](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s9[preceding](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t7[field11](8)
REG[2] =   s9[preceding](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s6[field1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t7[field11](8)
REG[2] =   s6[field1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s6[field3](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t7[field11](8)
REG[2] =   s6[field3](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s6[field7](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t7[field11](8)
REG[2] =   s6[field7](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s6[field8](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t7[field11](8)
REG[2] =   s6[field8](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s7[test011](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t7[field11](8)
REG[2] =   s7[test011](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s7[field11](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t7[field11](8)
REG[2] =   s7[field11](8)
   7 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
   8 Eq               4   12    2 (BINARY)      52 if r[2]==r[4] goto 12
REG[4] =   t7[trigger](8)
REG[2] =   s5[table](8)
   9 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:9
  10 Once             0   11    0               00 
  11 Delete           0    0    0               02 
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s7[field12](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t7[field11](8)
REG[2] =   s7[field12](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[v0](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t7[field11](8)
REG[2] =   s2[v0](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s7[test017](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t7[field11](8)
REG[2] =   s7[test017](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s7[field17](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t7[field11](8)
REG[2] =   s7[field17](8)
  12 Next             0    5    0               01 
  13 Destroy          9    2    0               00 
REG[2] =  i:0
  14 Null             0    6    7               00 r[6..7]=NULL
REG[6] =  NULL
  15 IfNot            2   24    1               00 
REG[2] =  i:0
  24 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  25 RowSetRead       6   35    7               00 r[7]=rowset(6)
REG[6] =  NULL
REG[7] =  NULL
  35 DropTable        0    0    0 field11       00 
  36 SetCookie        0    1   17               00 
  37 Halt             0    0    0               00 
SQL: [;INSERT INTO field1(field2,test003) VALUES(1,11),(2,22),(3,33),(4,44);]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      0    1   17 0             01 usesStmtJournal=1
  33 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  34 Goto             0    1    0               00 
   1 InitCoroutine    5   16    2               00 
  16 OpenWrite        0    5    0 3             00 root=5 iDb=0; field1
  17 Yield            5   31    0               00 
REG[5] =  i:1
REG[5] =  i:17
   2 Explain          2    0    0 SCAN 4 CONSTANT ROWS 00 
   3 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
   4 Integer         11    7    0               00 r[7]=11
REG[7] =  i:11
   5 Yield            5    0    0               00 
REG[5] =  i:17
REG[5] =  i:5
  18 Copy             7    1    0               00 r[1]=r[7]
REG[1] =  i:11
  19 NotNull          1   21    0               00 if r[1]!=NULL goto 21
REG[1] =  i:11
  21 MustBeInt        1    0    0               00 
REG[1] =  i:11
  22 SoftNull         2    0    0               00 r[2]=NULL
  23 SCopy            6    3    0               00 r[3]=r[6]
REG[3] =  i:1
  24 Noop             0    0    0               00 uniqueness check for ROWID
  25 Abortable        0    0    0               00 
  26 NotExists        0   28    1               00 intkey=r[1]
REG[1] =  i:11
  28 MakeRecord       2    3   10 D             00 r[10]=mkrec(r[2..4])
REG[10] =  s4[04000900....]
  29 Insert           0   10    1 field1        31 intkey=r[1] data=r[10]
REG[10] =  s4[04000900....]
REG[1] =  i:11
  30 Goto             0   17    0               00 
  17 Yield            5   31    0               00 
REG[5] =  i:5
REG[5] =  i:17
   6 Integer          2    6    0               00 r[6]=2
REG[6] =  i:2
   7 Integer         22    7    0               00 r[7]=22
REG[7] =  i:22
   8 Yield            5    0    0               00 
REG[5] =  i:17
REG[5] =  i:8
  18 Copy             7    1    0               00 r[1]=r[7]
REG[1] =  i:22
  19 NotNull          1   21    0               00 if r[1]!=NULL goto 21
REG[1] =  i:22
  21 MustBeInt        1    0    0               00 
REG[1] =  i:22
  22 SoftNull         2    0    0               00 r[2]=NULL
  23 SCopy            6    3    0               00 r[3]=r[6]
REG[3] =  i:2
  24 Noop             0    0    0               00 uniqueness check for ROWID
  25 Abortable        0    0    0               00 
  26 NotExists        0   28    1               00 intkey=r[1]
REG[1] =  i:22
  28 MakeRecord       2    3   10 D             00 r[10]=mkrec(r[2..4])
REG[10] =  s5[0400010002.....]
  29 Insert           0   10    1 field1        31 intkey=r[1] data=r[10]
REG[10] =  s5[0400010002.....]
REG[1] =  i:22
  30 Goto             0   17    0               00 
  17 Yield            5   31    0               00 
REG[5] =  i:8
REG[5] =  i:17
   9 Integer          3    6    0               00 r[6]=3
REG[6] =  i:3
  10 Integer         33    7    0               00 r[7]=33
REG[7] =  i:33
  11 Yield            5    0    0               00 
REG[5] =  i:17
REG[5] =  i:11
  18 Copy             7    1    0               00 r[1]=r[7]
REG[1] =  i:33
  19 NotNull          1   21    0               00 if r[1]!=NULL goto 21
REG[1] =  i:33
  21 MustBeInt        1    0    0               00 
REG[1] =  i:33
  22 SoftNull         2    0    0               00 r[2]=NULL
  23 SCopy            6    3    0               00 r[3]=r[6]
REG[3] =  i:3
  24 Noop             0    0    0               00 uniqueness check for ROWID
  25 Abortable        0    0    0               00 
  26 NotExists        0   28    1               00 intkey=r[1]
REG[1] =  i:33
  28 MakeRecord       2    3   10 D             00 r[10]=mkrec(r[2..4])
REG[10] =  s5[0400010003.....]
  29 Insert           0   10    1 field1        31 intkey=r[1] data=r[10]
REG[10] =  s5[0400010003.....]
REG[1] =  i:33
  30 Goto             0   17    0               00 
  17 Yield            5   31    0               00 
REG[5] =  i:11
REG[5] =  i:17
  12 Integer          4    6    0               00 r[6]=4
REG[6] =  i:4
  13 Integer         44    7    0               00 r[7]=44
REG[7] =  i:44
  14 Yield            5    0    0               00 
REG[5] =  i:17
REG[5] =  i:14
  18 Copy             7    1    0               00 r[1]=r[7]
REG[1] =  i:44
  19 NotNull          1   21    0               00 if r[1]!=NULL goto 21
REG[1] =  i:44
  21 MustBeInt        1    0    0               00 
REG[1] =  i:44
  22 SoftNull         2    0    0               00 r[2]=NULL
  23 SCopy            6    3    0               00 r[3]=r[6]
REG[3] =  i:4
  24 Noop             0    0    0               00 uniqueness check for ROWID
  25 Abortable        0    0    0               00 
  26 NotExists        0   28    1               00 intkey=r[1]
REG[1] =  i:44
  28 MakeRecord       2    3   10 D             00 r[10]=mkrec(r[2..4])
REG[10] =  s5[0400010004.....]
  29 Insert           0   10    1 field1        31 intkey=r[1] data=r[10]
REG[10] =  s5[0400010004.....]
REG[1] =  i:44
  30 Goto             0   17    0               00 
  17 Yield            5   31    0               00 
REG[5] =  i:14
REG[5] =  i:17
  15 EndCoroutine     5    0    0               00 
REG[5] =  i:17
  31 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM field1 WHERE (test003,field2)>=(0,0) ORDER BY test003;]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      0    0   17 0             01 usesStmtJournal=0
  19 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    5    0 3             00 root=5 iDb=0; field1
   3 Explain          3    0    0 SEARCH TABLE field1 USING INTEGER PRIMARY KEY (rowid>?) 00 
   4 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   5 SeekGE           0   17    1               00 key=r[1]; pk
REG[1] =  i:0
   6 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:11
   7 Gt               3    1    2               64 r[1] = (r[2]>r[3])
REG[3] =  i:0
REG[2] =  i:11
REG[1] =  i:1
   8 ElseNotEq        0   11    0               00 
  11 IfNot            1   16    1               00 
REG[1] =  i:1
  12 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:11
  13 Column           0    1    5               00 r[5]=field1.field2
REG[5] =  i:1
  14 Column           0    2    6               00 r[6]=field1.test004
REG[6] =  NULL
  15 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =  i:11
REG[5] =  i:1
REG[6] =  NULL
  16 Next             0    6    0               00 
   6 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:22
   7 Gt               3    1    2               64 r[1] = (r[2]>r[3])
REG[3] =  i:0
REG[2] =  i:22
REG[1] =  i:1
   8 ElseNotEq        0   11    0               00 
  11 IfNot            1   16    1               00 
REG[1] =  i:1
  12 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:22
  13 Column           0    1    5               00 r[5]=field1.field2
REG[5] =  i:2
  14 Column           0    2    6               00 r[6]=field1.test004
REG[6] =  NULL
  15 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =  i:22
REG[5] =  i:2
REG[6] =  NULL
  16 Next             0    6    0               00 
   6 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:33
   7 Gt               3    1    2               64 r[1] = (r[2]>r[3])
REG[3] =  i:0
REG[2] =  i:33
REG[1] =  i:1
   8 ElseNotEq        0   11    0               00 
  11 IfNot            1   16    1               00 
REG[1] =  i:1
  12 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:33
  13 Column           0    1    5               00 r[5]=field1.field2
REG[5] =  i:3
  14 Column           0    2    6               00 r[6]=field1.test004
REG[6] =  NULL
  15 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =  i:33
REG[5] =  i:3
REG[6] =  NULL
  16 Next             0    6    0               00 
   6 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:44
   7 Gt               3    1    2               64 r[1] = (r[2]>r[3])
REG[3] =  i:0
REG[2] =  i:44
REG[1] =  i:1
   8 ElseNotEq        0   11    0               00 
  11 IfNot            1   16    1               00 
REG[1] =  i:1
  12 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:44
  13 Column           0    1    5               00 r[5]=field1.field2
REG[5] =  i:4
  14 Column           0    2    6               00 r[6]=field1.test004
REG[6] =  NULL
  15 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =  i:44
REG[5] =  i:4
REG[6] =  NULL
  16 Next             0    6    0               00 
  17 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM field1 WHERE (field2,test003)<=(5,0) ORDER BY field2 DESC;]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    0   17 0             01 usesStmtJournal=0
  28 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
  29 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  30 Goto             0    1    0               00 
   1 SorterOpen       1    5    0 k(1,-B)       00 
   2 OpenRead         0    5    0 3             00 root=5 iDb=0; field1
   3 Explain          3    0    0 SCAN TABLE field1 00 
   4 Rewind           0   17    0               00 
   5 Column           0    1    2               00 r[2]=field1.field2
REG[2] =  i:1
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:5
REG[2] =  i:1
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   16    1               00 
REG[1] =  i:1
  11 Rowid            0    6    0               00 r[6]=rowid
REG[6] =  i:11
  12 Column           0    2    7               00 r[7]=field1.test004
REG[7] =  NULL
  13 Column           0    1    5               00 r[5]=field1.field2
REG[5] =  i:1
  14 MakeRecord       5    3    9               00 r[9]=mkrec(r[5..7])
REG[9] =  s5[040901000B.....]
  15 SorterInsert     1    9    5 3             00 key=r[9]
REG[9] =  s5[040901000B.....]
  16 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=field1.field2
REG[2] =  i:2
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:5
REG[2] =  i:2
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   16    1               00 
REG[1] =  i:1
  11 Rowid            0    6    0               00 r[6]=rowid
REG[6] =  i:22
  12 Column           0    2    7               00 r[7]=field1.test004
REG[7] =  NULL
  13 Column           0    1    5               00 r[5]=field1.field2
REG[5] =  i:2
  14 MakeRecord       5    3    9               00 r[9]=mkrec(r[5..7])
REG[9] =  s6[040101000216......]
  15 SorterInsert     1    9    5 3             00 key=r[9]
REG[9] =  s6[040101000216......]
  16 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=field1.field2
REG[2] =  i:3
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:5
REG[2] =  i:3
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   16    1               00 
REG[1] =  i:1
  11 Rowid            0    6    0               00 r[6]=rowid
REG[6] =  i:33
  12 Column           0    2    7               00 r[7]=field1.test004
REG[7] =  NULL
  13 Column           0    1    5               00 r[5]=field1.field2
REG[5] =  i:3
  14 MakeRecord       5    3    9               00 r[9]=mkrec(r[5..7])
REG[9] =  s6[040101000321.....!]
  15 SorterInsert     1    9    5 3             00 key=r[9]
REG[9] =  s6[040101000321.....!]
  16 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=field1.field2
REG[2] =  i:4
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:5
REG[2] =  i:4
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   16    1               00 
REG[1] =  i:1
  11 Rowid            0    6    0               00 r[6]=rowid
REG[6] =  i:44
  12 Column           0    2    7               00 r[7]=field1.test004
REG[7] =  NULL
  13 Column           0    1    5               00 r[5]=field1.field2
REG[5] =  i:4
  14 MakeRecord       5    3    9               00 r[9]=mkrec(r[5..7])
REG[9] =  s6[04010100042C.....,]
  15 SorterInsert     1    9    5 3             00 key=r[9]
REG[9] =  s6[04010100042C.....,]
  16 Next             0    5    0               01 
  17 Explain         17    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  18 OpenPseudo       2   10    5               00 5 columns in r[10]
  19 SorterSort       1   26    0               00 
  20 SorterData       1   10    2               00 r[10]=data
  21 Column           2    2    8               00 r[8]=test004
REG[8] =  NULL
  22 Column           2    0    7               00 r[7]=field2
REG[7] =  i:4
  23 Column           2    1    6               00 r[6]=test003
REG[6] =  i:44
  24 ResultRow        6    3    0               00 output=r[6..8]
REG[6] =  i:44
REG[7] =  i:4
REG[8] =  NULL
  25 SorterNext       1   20    0               00 
  20 SorterData       1   10    2               00 r[10]=data
  21 Column           2    2    8               00 r[8]=test004
REG[8] =  NULL
  22 Column           2    0    7               00 r[7]=field2
REG[7] =  i:3
  23 Column           2    1    6               00 r[6]=test003
REG[6] =  i:33
  24 ResultRow        6    3    0               00 output=r[6..8]
REG[6] =  i:33
REG[7] =  i:3
REG[8] =  NULL
  25 SorterNext       1   20    0               00 
  20 SorterData       1   10    2               00 r[10]=data
  21 Column           2    2    8               00 r[8]=test004
REG[8] =  NULL
  22 Column           2    0    7               00 r[7]=field2
REG[7] =  i:2
  23 Column           2    1    6               00 r[6]=test003
REG[6] =  i:22
  24 ResultRow        6    3    0               00 output=r[6..8]
REG[6] =  i:22
REG[7] =  i:2
REG[8] =  NULL
  25 SorterNext       1   20    0               00 
  20 SorterData       1   10    2               00 r[10]=data
  21 Column           2    2    8               00 r[8]=test004
REG[8] =  NULL
  22 Column           2    0    7               00 r[7]=field2
REG[7] =  i:1
  23 Column           2    1    6               00 r[6]=test003
REG[6] =  i:11
  24 ResultRow        6    3    0               00 output=r[6..8]
REG[6] =  i:11
REG[7] =  i:1
REG[8] =  NULL
  25 SorterNext       1   20    0               00 
  26 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t0 WHERE (c0,c0)>(3,0) ORDER BY c0;]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      1    0    2 0             01 usesStmtJournal=0
  19 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  20 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  21 Goto             0    1    0               00 
   1 Noop             1    3    0               00 
   2 OpenRead         2    3    1 k(6,,,,,,)    00 root=3 iDb=1; test008
   3 Explain          3    0    0 SEARCH TABLE t0 USING COVERING INDEX test008 ((c0,c0)>(?,?)) 00 
   4 Integer          3    1    0               00 r[1]=3
REG[1] =  i:3
   5 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   6 IsNull           1   17    0               00 if r[1]==NULL goto 17
REG[1] =  i:3
   7 SeekGE           2   17    1 2             00 key=r[1..2]
REG[1] =  i:3
   8 Column           2    0    4               00 r[4]=t0.c0
REG[4] =   s1[X](8)
   9 Gt               5    3    4 (BINARY)      64 r[3] = (r[4]>r[5])
REG[5] =  i:3
REG[4] =   s1[X](8)
REG[3] =  i:1
  10 ElseNotEq        0   13    0               00 
  13 IfNot            3   16    1               00 
REG[3] =  i:1
  14 Column           2    0    7               00 r[7]=t0.c0
REG[7] =   s1[X](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s1[X](8)
  16 Next             2    8    0               00 
  17 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM field12 WHERE (test016,field14)<(3,0) ORDER BY test016 DESC;]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    0   17 0             01 usesStmtJournal=0
  32 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  33 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  34 Goto             0    1    0               00 
   1 SorterOpen       1    7    0 k(1,-B)       00 
   2 OpenRead         0   10    0 5             00 root=10 iDb=0; field12
   3 Explain          3    0    0 SCAN TABLE field12 00 
   4 Rewind           0   19    0               00 
  19 Explain         19    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  20 OpenPseudo       2   12    7               00 7 columns in r[12]
  21 SorterSort       1   30    0               00 
  30 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM field7 WHERE (test009,test009)<=(3,0) ORDER BY test009 DESC;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   17 0             01 usesStmtJournal=0
  24 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  25 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,-B)       00 
   2 OpenRead         0    7    0 1             00 root=7 iDb=0; field7
   3 Explain          3    0    0 SCAN TABLE field7 00 
   4 Rewind           0   15    0               00 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t0 WHERE (c0,c0)>=(3,34) ORDER BY c0;]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      1    0    2 0             01 usesStmtJournal=0
  19 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  20 Integer         34    6    0               00 r[6]=34
REG[6] =  i:34
  21 Goto             0    1    0               00 
   1 Noop             1    3    0               00 
   2 OpenRead         2    3    1 k(6,,,,,,)    00 root=3 iDb=1; test008
   3 Explain          3    0    0 SEARCH TABLE t0 USING COVERING INDEX test008 ((c0,c0)>(?,?)) 00 
   4 Integer          3    1    0               00 r[1]=3
REG[1] =  i:3
   5 Integer         34    2    0               00 r[2]=34
REG[2] =  i:34
   6 IsNull           1   17    0               00 if r[1]==NULL goto 17
REG[1] =  i:3
   7 SeekGE           2   17    1 2             00 key=r[1..2]
REG[1] =  i:3
   8 Column           2    0    4               00 r[4]=t0.c0
REG[4] =   s1[X](8)
   9 Gt               5    3    4 (BINARY)      64 r[3] = (r[4]>r[5])
REG[5] =  i:3
REG[4] =   s1[X](8)
REG[3] =  i:1
  10 ElseNotEq        0   13    0               00 
  13 IfNot            3   16    1               00 
REG[3] =  i:1
  14 Column           2    0    7               00 r[7]=t0.c0
REG[7] =   s1[X](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s1[X](8)
  16 Next             2    8    0               00 
  17 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM field7 WHERE (test009,test009)<(3,33) ORDER BY test009 DESC;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   17 0             01 usesStmtJournal=0
  24 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  25 Integer         33    4    0               00 r[4]=33
REG[4] =  i:33
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,-B)       00 
   2 OpenRead         0    7    0 1             00 root=7 iDb=0; field7
   3 Explain          3    0    0 SCAN TABLE field7 00 
   4 Rewind           0   15    0               00 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM field8 WHERE (field9,field9)<=(3,32) ORDER BY field9 DESC;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   17 0             01 usesStmtJournal=0
  26 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  27 Integer         32    4    0               00 r[4]=32
REG[4] =  i:32
  28 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,-B)       00 
   2 OpenRead         0    4    0 2             00 root=4 iDb=0; field8
   3 Explain          3    0    0 SCAN TABLE field8 00 
   4 Rewind           0   16    0               00 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    9    4               00 4 columns in r[9]
  18 SorterSort       1   24    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM v0 WHERE (0,0)<(following,over) ORDER BY following;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   17 0             01 usesStmtJournal=0
  26 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  27 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; v0
   3 Explain          3    0    0 SCAN TABLE v0 00 
   4 Rewind           0   16    0               00 
   5 Column           0    1    2               00 r[2]=v0.following
REG[2] =  i:2
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:0
REG[2] =  i:2
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    0    5               00 r[5]=v0.over
REG[5] =  i:7
  12 Column           0    1    4               00 r[4]=v0.following
REG[4] =  i:2
  13 MakeRecord       4    2    7               00 r[7]=mkrec(r[4..5])
REG[7] =  s5[0301010207.....]
  14 SorterInsert     1    7    4 2             00 key=r[7]
REG[7] =  s5[0301010207.....]
  15 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=v0.following
REG[2] =  i:4
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:0
REG[2] =  i:4
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    0    5               00 r[5]=v0.over
REG[5] =  i:7
  12 Column           0    1    4               00 r[4]=v0.following
REG[4] =  i:4
  13 MakeRecord       4    2    7               00 r[7]=mkrec(r[4..5])
REG[7] =  s5[0301010407.....]
  14 SorterInsert     1    7    4 2             00 key=r[7]
REG[7] =  s5[0301010407.....]
  15 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=v0.following
REG[2] =  i:5
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:0
REG[2] =  i:5
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    0    5               00 r[5]=v0.over
REG[5] =  i:7
  12 Column           0    1    4               00 r[4]=v0.following
REG[4] =  i:5
  13 MakeRecord       4    2    7               00 r[7]=mkrec(r[4..5])
REG[7] =  s5[0301010507.....]
  14 SorterInsert     1    7    4 2             00 key=r[7]
REG[7] =  s5[0301010507.....]
  15 Next             0    5    0               01 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    8    4               00 4 columns in r[8]
  18 SorterSort       1   24    0               00 
  19 SorterData       1    8    2               00 r[8]=data
  20 Column           2    0    6               00 r[6]=following
REG[6] =  i:2
  21 Column           2    1    5               00 r[5]=over
REG[5] =  i:7
  22 ResultRow        5    2    0               00 output=r[5..6]
REG[5] =  i:7
REG[6] =  i:2
  23 SorterNext       1   19    0               00 
  19 SorterData       1    8    2               00 r[8]=data
  20 Column           2    0    6               00 r[6]=following
REG[6] =  i:4
  21 Column           2    1    5               00 r[5]=over
REG[5] =  i:7
  22 ResultRow        5    2    0               00 output=r[5..6]
REG[5] =  i:7
REG[6] =  i:4
  23 SorterNext       1   19    0               00 
  19 SorterData       1    8    2               00 r[8]=data
  20 Column           2    0    6               00 r[6]=following
REG[6] =  i:5
  21 Column           2    1    5               00 r[5]=over
REG[5] =  i:7
  22 ResultRow        5    2    0               00 output=r[5..6]
REG[5] =  i:7
REG[6] =  i:5
  23 SorterNext       1   19    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM v0 WHERE (0,0)<=(following,following) ORDER BY following;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   17 0             01 usesStmtJournal=0
  26 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  27 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; v0
   3 Explain          3    0    0 SCAN TABLE v0 00 
   4 Rewind           0   16    0               00 
   5 Column           0    1    2               00 r[2]=v0.following
REG[2] =  i:2
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:0
REG[2] =  i:2
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    0    5               00 r[5]=v0.over
REG[5] =  i:7
  12 Column           0    1    4               00 r[4]=v0.following
REG[4] =  i:2
  13 MakeRecord       4    2    7               00 r[7]=mkrec(r[4..5])
REG[7] =  s5[0301010207.....]
  14 SorterInsert     1    7    4 2             00 key=r[7]
REG[7] =  s5[0301010207.....]
  15 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=v0.following
REG[2] =  i:4
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:0
REG[2] =  i:4
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    0    5               00 r[5]=v0.over
REG[5] =  i:7
  12 Column           0    1    4               00 r[4]=v0.following
REG[4] =  i:4
  13 MakeRecord       4    2    7               00 r[7]=mkrec(r[4..5])
REG[7] =  s5[0301010407.....]
  14 SorterInsert     1    7    4 2             00 key=r[7]
REG[7] =  s5[0301010407.....]
  15 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=v0.following
REG[2] =  i:5
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:0
REG[2] =  i:5
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    0    5               00 r[5]=v0.over
REG[5] =  i:7
  12 Column           0    1    4               00 r[4]=v0.following
REG[4] =  i:5
  13 MakeRecord       4    2    7               00 r[7]=mkrec(r[4..5])
REG[7] =  s5[0301010507.....]
  14 SorterInsert     1    7    4 2             00 key=r[7]
REG[7] =  s5[0301010507.....]
  15 Next             0    5    0               01 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    8    4               00 4 columns in r[8]
  18 SorterSort       1   24    0               00 
  19 SorterData       1    8    2               00 r[8]=data
  20 Column           2    0    6               00 r[6]=following
REG[6] =  i:2
  21 Column           2    1    5               00 r[5]=over
REG[5] =  i:7
  22 ResultRow        5    2    0               00 output=r[5..6]
REG[5] =  i:7
REG[6] =  i:2
  23 SorterNext       1   19    0               00 
  19 SorterData       1    8    2               00 r[8]=data
  20 Column           2    0    6               00 r[6]=following
REG[6] =  i:4
  21 Column           2    1    5               00 r[5]=over
REG[5] =  i:7
  22 ResultRow        5    2    0               00 output=r[5..6]
REG[5] =  i:7
REG[6] =  i:4
  23 SorterNext       1   19    0               00 
  19 SorterData       1    8    2               00 r[8]=data
  20 Column           2    0    6               00 r[6]=following
REG[6] =  i:5
  21 Column           2    1    5               00 r[5]=over
REG[5] =  i:7
  22 ResultRow        5    2    0               00 output=r[5..6]
REG[5] =  i:7
REG[6] =  i:5
  23 SorterNext       1   19    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM field1 WHERE (3,0)<(test004,test004) ORDER BY test004;]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    0   17 0             01 usesStmtJournal=0
  28 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  29 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  30 Goto             0    1    0               00 
   1 SorterOpen       1    5    0 k(1,B)        00 
   2 OpenRead         0    5    0 3             00 root=5 iDb=0; field1
   3 Explain          3    0    0 SCAN TABLE field1 00 
   4 Rewind           0   17    0               00 
   5 Column           0    2    2               00 r[2]=field1.test004
REG[2] =  NULL
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  NULL
REG[1] =  NULL
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   16    1               00 
REG[1] =  NULL
  16 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=field1.test004
REG[2] =  NULL
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  NULL
REG[1] =  NULL
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   16    1               00 
REG[1] =  NULL
  16 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=field1.test004
REG[2] =  NULL
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  NULL
REG[1] =  NULL
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   16    1               00 
REG[1] =  NULL
  16 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=field1.test004
REG[2] =  NULL
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  NULL
REG[1] =  NULL
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   16    1               00 
REG[1] =  NULL
  16 Next             0    5    0               01 
  17 Explain         17    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  18 OpenPseudo       2   10    5               00 5 columns in r[10]
  19 SorterSort       1   26    0               00 
  26 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM v0 WHERE (3,0)<=(over,over) ORDER BY over;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   17 0             01 usesStmtJournal=0
  26 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  27 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  28 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; v0
   3 Explain          3    0    0 SCAN TABLE v0 00 
   4 Rewind           0   16    0               00 
   5 Column           0    0    2               00 r[2]=v0.over
REG[2] =  i:7
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:7
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    1    6               00 r[6]=v0.following
REG[6] =  i:2
  12 Column           0    0    5               00 r[5]=v0.over
REG[5] =  i:7
  13 MakeRecord       5    2    8               00 r[8]=mkrec(r[5..6])
REG[8] =  s5[0301010702.....]
  14 SorterInsert     1    8    5 2             00 key=r[8]
REG[8] =  s5[0301010702.....]
  15 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=v0.over
REG[2] =  i:7
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:7
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    1    6               00 r[6]=v0.following
REG[6] =  i:4
  12 Column           0    0    5               00 r[5]=v0.over
REG[5] =  i:7
  13 MakeRecord       5    2    8               00 r[8]=mkrec(r[5..6])
REG[8] =  s5[0301010704.....]
  14 SorterInsert     1    8    5 2             00 key=r[8]
REG[8] =  s5[0301010704.....]
  15 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=v0.over
REG[2] =  i:7
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:7
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    1    6               00 r[6]=v0.following
REG[6] =  i:5
  12 Column           0    0    5               00 r[5]=v0.over
REG[5] =  i:7
  13 MakeRecord       5    2    8               00 r[8]=mkrec(r[5..6])
REG[8] =  s5[0301010705.....]
  14 SorterInsert     1    8    5 2             00 key=r[8]
REG[8] =  s5[0301010705.....]
  15 Next             0    5    0               01 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    9    4               00 4 columns in r[9]
  18 SorterSort       1   24    0               00 
  19 SorterData       1    9    2               00 r[9]=data
  20 Column           2    1    7               00 r[7]=following
REG[7] =  i:2
  21 Column           2    0    6               00 r[6]=over
REG[6] =  i:7
  22 ResultRow        6    2    0               00 output=r[6..7]
REG[6] =  i:7
REG[7] =  i:2
  23 SorterNext       1   19    0               00 
  19 SorterData       1    9    2               00 r[9]=data
  20 Column           2    1    7               00 r[7]=following
REG[7] =  i:4
  21 Column           2    0    6               00 r[6]=over
REG[6] =  i:7
  22 ResultRow        6    2    0               00 output=r[6..7]
REG[6] =  i:7
REG[7] =  i:4
  23 SorterNext       1   19    0               00 
  19 SorterData       1    9    2               00 r[9]=data
  20 Column           2    1    7               00 r[7]=following
REG[7] =  i:5
  21 Column           2    0    6               00 r[6]=over
REG[6] =  i:7
  22 ResultRow        6    2    0               00 output=r[6..7]
REG[6] =  i:7
REG[7] =  i:5
  23 SorterNext       1   19    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM field1 WHERE (3,0)>=(test003,test004) ORDER BY test003 DESC;]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      0    0   17 0             01 usesStmtJournal=0
  19 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  20 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  21 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    5    0 3             00 root=5 iDb=0; field1
   3 Explain          3    0    0 SEARCH TABLE field1 USING INTEGER PRIMARY KEY (rowid<?) 00 
   4 Integer          3    1    0               00 r[1]=3
REG[1] =  i:3
   5 SeekLE           0   17    1               00 key=r[1]; pk
REG[1] =  i:3
  17 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM v0 WHERE (3,32)<(over,over) ORDER BY over;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   17 0             01 usesStmtJournal=0
  26 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  27 Integer         32    4    0               00 r[4]=32
REG[4] =  i:32
  28 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; v0
   3 Explain          3    0    0 SCAN TABLE v0 00 
   4 Rewind           0   16    0               00 
   5 Column           0    0    2               00 r[2]=v0.over
REG[2] =  i:7
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:7
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    1    6               00 r[6]=v0.following
REG[6] =  i:2
  12 Column           0    0    5               00 r[5]=v0.over
REG[5] =  i:7
  13 MakeRecord       5    2    8               00 r[8]=mkrec(r[5..6])
REG[8] =  s5[0301010702.....]
  14 SorterInsert     1    8    5 2             00 key=r[8]
REG[8] =  s5[0301010702.....]
  15 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=v0.over
REG[2] =  i:7
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:7
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    1    6               00 r[6]=v0.following
REG[6] =  i:4
  12 Column           0    0    5               00 r[5]=v0.over
REG[5] =  i:7
  13 MakeRecord       5    2    8               00 r[8]=mkrec(r[5..6])
REG[8] =  s5[0301010704.....]
  14 SorterInsert     1    8    5 2             00 key=r[8]
REG[8] =  s5[0301010704.....]
  15 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=v0.over
REG[2] =  i:7
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:7
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    1    6               00 r[6]=v0.following
REG[6] =  i:5
  12 Column           0    0    5               00 r[5]=v0.over
REG[5] =  i:7
  13 MakeRecord       5    2    8               00 r[8]=mkrec(r[5..6])
REG[8] =  s5[0301010705.....]
  14 SorterInsert     1    8    5 2             00 key=r[8]
REG[8] =  s5[0301010705.....]
  15 Next             0    5    0               01 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    9    4               00 4 columns in r[9]
  18 SorterSort       1   24    0               00 
  19 SorterData       1    9    2               00 r[9]=data
  20 Column           2    1    7               00 r[7]=following
REG[7] =  i:2
  21 Column           2    0    6               00 r[6]=over
REG[6] =  i:7
  22 ResultRow        6    2    0               00 output=r[6..7]
REG[6] =  i:7
REG[7] =  i:2
  23 SorterNext       1   19    0               00 
  19 SorterData       1    9    2               00 r[9]=data
  20 Column           2    1    7               00 r[7]=following
REG[7] =  i:4
  21 Column           2    0    6               00 r[6]=over
REG[6] =  i:7
  22 ResultRow        6    2    0               00 output=r[6..7]
REG[6] =  i:7
REG[7] =  i:4
  23 SorterNext       1   19    0               00 
  19 SorterData       1    9    2               00 r[9]=data
  20 Column           2    1    7               00 r[7]=following
REG[7] =  i:5
  21 Column           2    0    6               00 r[6]=over
REG[6] =  i:7
  22 ResultRow        6    2    0               00 output=r[6..7]
REG[6] =  i:7
REG[7] =  i:5
  23 SorterNext       1   19    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM field7 WHERE (3,33)<=(test009,test009) ORDER BY test009;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   17 0             01 usesStmtJournal=0
  24 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  25 Integer         33    4    0               00 r[4]=33
REG[4] =  i:33
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0    7    0 1             00 root=7 iDb=0; field7
   3 Explain          3    0    0 SCAN TABLE field7 00 
   4 Rewind           0   15    0               00 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM field7 WHERE (3,34)>(test009,test009) ORDER BY test009 DESC;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   17 0             01 usesStmtJournal=0
  24 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  25 Integer         34    4    0               00 r[4]=34
REG[4] =  i:34
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,-B)       00 
   2 OpenRead         0    7    0 1             00 root=7 iDb=0; field7
   3 Explain          3    0    0 SCAN TABLE field7 00 
   4 Rewind           0   15    0               00 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM field1 WHERE (3,33)>(test004,test004) ORDER BY test004 DESC;]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    0   17 0             01 usesStmtJournal=0
  28 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  29 Integer         33    4    0               00 r[4]=33
REG[4] =  i:33
  30 Goto             0    1    0               00 
   1 SorterOpen       1    5    0 k(1,-B)       00 
   2 OpenRead         0    5    0 3             00 root=5 iDb=0; field1
   3 Explain          3    0    0 SCAN TABLE field1 00 
   4 Rewind           0   17    0               00 
   5 Column           0    2    2               00 r[2]=field1.test004
REG[2] =  NULL
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  NULL
REG[1] =  NULL
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   16    1               00 
REG[1] =  NULL
  16 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=field1.test004
REG[2] =  NULL
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  NULL
REG[1] =  NULL
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   16    1               00 
REG[1] =  NULL
  16 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=field1.test004
REG[2] =  NULL
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  NULL
REG[1] =  NULL
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   16    1               00 
REG[1] =  NULL
  16 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=field1.test004
REG[2] =  NULL
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  NULL
REG[1] =  NULL
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   16    1               00 
REG[1] =  NULL
  16 Next             0    5    0               01 
  17 Explain         17    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  18 OpenPseudo       2   10    5               00 5 columns in r[10]
  19 SorterSort       1   26    0               00 
  26 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM field8 WHERE (3,33)>=(field9,test010) ORDER BY field9 DESC;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   17 0             01 usesStmtJournal=0
  26 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  27 Integer         33    4    0               00 r[4]=33
REG[4] =  i:33
  28 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,-B)       00 
   2 OpenRead         0    4    0 2             00 root=4 iDb=0; field8
   3 Explain          3    0    0 SCAN TABLE field8 00 
   4 Rewind           0   16    0               00 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    9    4               00 4 columns in r[9]
  18 SorterSort       1   24    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;DROP TABLE IF EXISTS field7;]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      0    1   17 0             01 usesStmtJournal=1
  39 String8          0    3    0 field7        00 r[3]='field7'
REG[3] =   t6[field7](8)
  40 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  41 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[v0](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t6[field7](8)
REG[2] =   s2[v0](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s9[preceding](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t6[field7](8)
REG[2] =   s9[preceding](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s6[field1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t6[field7](8)
REG[2] =   s6[field1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s6[field3](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t6[field7](8)
REG[2] =   s6[field3](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s6[field7](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t6[field7](8)
REG[2] =   s6[field7](8)
   7 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
   8 Eq               4   12    2 (BINARY)      52 if r[2]==r[4] goto 12
REG[4] =   t7[trigger](8)
REG[2] =   s5[table](8)
   9 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:6
  10 Once             0   11    0               00 
  11 Delete           0    0    0               02 
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s6[field8](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t6[field7](8)
REG[2] =   s6[field8](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s7[test011](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t6[field7](8)
REG[2] =   s7[test011](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s7[field12](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t6[field7](8)
REG[2] =   s7[field12](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[v0](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t6[field7](8)
REG[2] =   s2[v0](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s7[test017](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t6[field7](8)
REG[2] =   s7[test017](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s7[field17](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t6[field7](8)
REG[2] =   s7[field17](8)
  12 Next             0    5    0               01 
  13 Destroy          7    2    0               00 
REG[2] =  i:0
  14 Null             0    6    7               00 r[6..7]=NULL
REG[6] =  NULL
  15 IfNot            2   24    1               00 
REG[2] =  i:0
  24 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  25 RowSetRead       6   35    7               00 r[7]=rowset(6)
REG[6] =  NULL
REG[7] =  NULL
  35 DropTable        0    0    0 field7        00 
  36 SetCookie        0    1   18               00 
  37 Halt             0    0    0               00 
SQL: [;CREATE TABLE field18(test020,field19,PRIMARY KEY(field19,field19));]
VDBE Trace:
   0 Init             0   39    0               00 Start at 39
  39 Transaction      0    1   18 0             01 usesStmtJournal=0
  40 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:7
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:14
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:14
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      0    4    2               00 r[4]=root iDb=0 flags=2
REG[4] =  i:9
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:15
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_field18_1 00 r[7]='sqlite_autoindex_field18_1'
REG[7] =   t26[sqlite_autoinde](8)
  17 String8          0    8    0 field18       00 r[8]='field18'
REG[8] =   t7[field18](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:9
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s45[0617411B0100696E64657873716C6974..A...indexsqlit]
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  s45[0617411B0100696E64657873716C6974..A...indexsqlit]
REG[5] =  i:15
  22 Close            0    0    0               00 
  23 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  24 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  25 Explain         25    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  26 SeekRowid        2   28    1               00 intkey=r[1]
REG[1] =  i:14
  27 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:14
  28 IsNull          13   36    0               00 if r[13]==NULL goto 36
REG[13] =  i:14
  29 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  30 String8          0   15    0 field18       00 r[15]='field18'
REG[15] =   t7[field18](8)
  31 String8          0   16    0 field18       00 r[16]='field18'
REG[16] =   t7[field18](8)
  32 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:7
  33 String8          0   18    0 CREATE TABLE field18(test020,field19,PRIMARY KEY(field19,field19)) 00 r[18]='CREATE TABLE field18(test020,field19,PRIMARY KEY(field19,field19))'
REG[18] =   t66[CREATE TABLE fi](8)
  34 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s93[07171B1B0181117461626C656669656C.......tablefiel]
  35 Insert           2   19   13               00 intkey=r[13] data=r[19]
REG[19] =  s93[07171B1B0181117461626C656669656C.......tablefiel]
REG[13] =  i:14
  36 SetCookie        0    1   19               00 
  37 ParseSchema      0    0    0 tbl_name='field18' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   19 0             00 usesStmtJournal=0
  16 String8          0    2    0 field18       00 r[2]='field18'
REG[2] =   t7[field18](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field18](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[preceding](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field18](8)
REG[1] =   s9[preceding](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field18](8)
REG[1] =   s6[field1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field18](8)
REG[1] =   s6[field3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field8](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field18](8)
REG[1] =   s6[field8](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[test011](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field18](8)
REG[1] =   s7[test011](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[field12](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field18](8)
REG[1] =   s7[field12](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field18](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[test017](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field18](8)
REG[1] =   s7[test017](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[field17](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field18](8)
REG[1] =   s7[field17](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[field18](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field18](8)
REG[1] =   s7[field18](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s7[field18](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:7
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s66[CREATE TABLE fi](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s7[field18](8)
REG[5] =  i:7
REG[6] =   s66[CREATE TABLE fi](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[field18](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[field18](8)
REG[1] =   s7[field18](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s26[sqlite_autoinde](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:9
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =  NULL
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s26[sqlite_autoinde](8)
REG[5] =  i:9
REG[6] =  NULL
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  38 Halt             0    0    0               00 
SQL: [;INSERT INTO test017 VALUES(1,2),(3,4),(5,6);]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      0    1   19 0             01 usesStmtJournal=0
  21 Goto             0    1    0               00 
   1 InitCoroutine    4   13    2               00 
  13 OpenWrite        0   11    0 2             00 root=11 iDb=0; test017
  14 Yield            4   19    0               00 
REG[4] =  i:1
REG[4] =  i:14
   2 Explain          2    0    0 SCAN 3 CONSTANT ROWS 00 
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   5 Yield            4    0    0               00 
REG[4] =  i:14
REG[4] =  i:5
  15 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
  16 MakeRecord       2    2    5               00 r[5]=mkrec(r[2..3])
REG[5] =  s4[03090102....]
  17 Insert           0    5    1 test017       39 intkey=r[1] data=r[5]
REG[5] =  s4[03090102....]
REG[1] =  i:1
  18 Goto             0   14    0               00 
  14 Yield            4   19    0               00 
REG[4] =  i:5
REG[4] =  i:14
   6 Integer          3    2    0               00 r[2]=3
REG[2] =  i:3
   7 Integer          4    3    0               00 r[3]=4
REG[3] =  i:4
   8 Yield            4    0    0               00 
REG[4] =  i:14
REG[4] =  i:8
  15 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
  16 MakeRecord       2    2    5               00 r[5]=mkrec(r[2..3])
REG[5] =  s5[0301010304.....]
  17 Insert           0    5    1 test017       39 intkey=r[1] data=r[5]
REG[5] =  s5[0301010304.....]
REG[1] =  i:2
  18 Goto             0   14    0               00 
  14 Yield            4   19    0               00 
REG[4] =  i:8
REG[4] =  i:14
   9 Integer          5    2    0               00 r[2]=5
REG[2] =  i:5
  10 Integer          6    3    0               00 r[3]=6
REG[3] =  i:6
  11 Yield            4    0    0               00 
REG[4] =  i:14
REG[4] =  i:11
  15 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
  16 MakeRecord       2    2    5               00 r[5]=mkrec(r[2..3])
REG[5] =  s5[0301010506.....]
  17 Insert           0    5    1 test017       39 intkey=r[1] data=r[5]
REG[5] =  s5[0301010506.....]
REG[1] =  i:3
  18 Goto             0   14    0               00 
  14 Yield            4   19    0               00 
REG[4] =  i:11
REG[4] =  i:14
  12 EndCoroutine     4    0    0               00 
REG[4] =  i:14
  19 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f2f03775859 in __GI_abort () at abort.c:79
#2  0x00007f2f03775729 in __assert_fail_base (fmt=0x7f2f0390b588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x2122b4 "pIn->nSdst==1 || pParse->nErr>0", file=0x22873d "sqlite3.c", line=127594, 
    function=<optimized out>) at assert.c:92
#3  0x00007f2f03786fd6 in __GI___assert_fail (assertion=0x2122b4 "pIn->nSdst==1 || pParse->nErr>0", file=0x22873d "sqlite3.c", line=127594, 
    function=0x213784 "int generateOutputSubroutine(Parse *, Select *, SelectDest *, SelectDest *, int, int, KeyInfo *, int)") at assert.c:101
#4  0x00000000003b5d8b in generateOutputSubroutine (pParse=0x7ffda8c4a800, p=0x2395f60, pIn=0x7ffda8c48e80, pDest=0x7ffda8c493d8, regReturn=15, regPrev=9, pKeyInfo=0x239d940, iBreak=-7) at sqlite3.c:127594
#5  0x00000000003b4e37 in multiSelectOrderBy (pParse=0x7ffda8c4a800, p=0x2395f60, pDest=0x7ffda8c493d8) at sqlite3.c:127921
#6  0x00000000003a3d1c in multiSelect (pParse=0x7ffda8c4a800, p=0x2395f60, pDest=0x7ffda8c493d8) at sqlite3.c:127207
#7  0x00000000002fccf5 in sqlite3Select (pParse=0x7ffda8c4a800, p=0x2395f60, pDest=0x7ffda8c493d8) at sqlite3.c:130384
#8  0x000000000034f659 in sqlite3CodeSubselect (pParse=0x7ffda8c4a800, pExpr=0x2392270) at sqlite3.c:99820
#9  0x0000000000350b1c in exprCodeVector (pParse=0x7ffda8c4a800, p=0x2392270, piFreeable=0x7ffda8c4949c) at sqlite3.c:100296
#10 0x000000000034fbdb in sqlite3ExprCodeIN (pParse=0x7ffda8c4a800, pExpr=0x2397b80, destIfFalse=-3, destIfNull=-4) at sqlite3.c:99952
#11 0x000000000034be9e in sqlite3ExprCodeTarget (pParse=0x7ffda8c4a800, pExpr=0x2397b80, target=1) at sqlite3.c:100792
#12 0x000000000034e9ee in sqlite3ExprCodeExprList (pParse=0x7ffda8c4a800, pList=0x23a3700, target=1, srcReg=0, flags=1 '\001') at sqlite3.c:101202
#13 0x00000000003addca in innerLoopLoadRow (pParse=0x7ffda8c4a800, pSelect=0x239af10, pInfo=0x7ffda8c49840) at sqlite3.c:125172
#14 0x00000000003a92ea in selectInnerLoop (pParse=0x7ffda8c4a800, p=0x239af10, srcTab=-1, pSort=0x0, pDistinct=0x7ffda8c49ae0, pDest=0x7ffda8c49bf0, iContinue=-2, iBreak=-2) at sqlite3.c:125624
#15 0x00000000002fe191 in sqlite3Select (pParse=0x7ffda8c4a800, p=0x239af10, pDest=0x7ffda8c49bf0) at sqlite3.c:130743
#16 0x00000000002ecaa8 in yy_reduce (yypParser=0x7ffda8c49e20, yyruleno=79, yyLookahead=1, yyLookaheadToken=..., pParse=0x7ffda8c4a800) at sqlite3.c:151581
#17 0x00000000002e92f8 in sqlite3Parser (yyp=0x7ffda8c49e20, yymajor=1, yyminor=...) at sqlite3.c:152877
#18 0x00000000002a68b3 in sqlite3RunParser (pParse=0x7ffda8c4a800, 
    zSql=0x239a5f0 ";;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1 DESC) IN (SELECT 3,4);;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1 DESC) IN (SELECT 5,6);;\n;DROP TABLE IF EXISTS t0;;\n;SELECT (SELECT +field2,1) >= "..., pzErrMsg=0x7ffda8c4a9e0) at sqlite3.c:154013
#19 0x00000000002a1683 in sqlite3Prepare (db=0x23802b0, 
    zSql=0x2388b66 ";SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1) IN (SELECT 3,4);;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1 DESC) IN (SELECT 3,4);;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1 DESC) IN (SELECT "..., nBytes=1110, prepFlags=128, pReprepare=0x0, ppStmt=0x7ffda8c4ab18, pzTail=0x7ffda8c4ab00) at sqlite3.c:124303
#20 0x00000000002a0d4e in sqlite3LockAndPrepare (db=0x23802b0, 
    zSql=0x2388b66 ";SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1) IN (SELECT 3,4);;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1 DESC) IN (SELECT 3,4);;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1 DESC) IN (SELECT "..., nBytes=1110, prepFlags=128, pOld=0x0, ppStmt=0x7ffda8c4ab18, pzTail=0x7ffda8c4ab00) at sqlite3.c:124403
#21 0x000000000029247f in sqlite3_prepare_v2 (db=0x23802b0, 
    zSql=0x2388b66 ";SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1) IN (SELECT 3,4);;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1 DESC) IN (SELECT 3,4);;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1 DESC) IN (SELECT "..., nBytes=1110, ppStmt=0x7ffda8c4ab18, pzTail=0x7ffda8c4ab00) at sqlite3.c:124487
#22 0x0000000000256bd0 in main (argc=1, argv=0x7ffda8c4acc8) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 58472] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
