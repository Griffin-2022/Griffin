GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000448,sig:06,src:020419+025463,time:13533127,execs:2622308,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
parser: [[[;SELECT * FROM sqlite_master;;INSERT INTO over VALUES('abc'), ('ABD'), ('aBe'), ('AbF');SELECT typeof( CAST (X'3233302E30' AS REAL) ),  CAST (X'3233302E30' AS REAL) 
;;
;REINDEX;;
;PRAGMA integrity_check;;PRAGMA vdbe_trace=on;;-- Parsing of negative values
  
;ATTACH 'test2.db' AS aux;;
;pragma aux.synchronous = OFF;;CREATE TABLE x(test002, test001, last_field, field1);VACUUM
;SELECT typeof( CAST(-1.99999 AS INTEGER) ),  CAST(-1.99999 AS INTEGER) 
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'keels',nullif('keels','keels'),'CLC')
;;PRAGMA writable_schema = RESET;SELECT typeof( CAST(2e+50 AS INT) ),  CAST(2e+50 AS INT) 
;SELECT following FROM over
    WHERE following IN (SELECT following FROM over WHERE following<5) OR following==512
    ORDER BY following
  
;;
;SELECT following FROM over WHERE following IN (5);SELECT typeof(CAST('-9.223372036e15' AS NUMERIC)) AS type, printf('%.5e',CAST('-9.223372036e15' AS NUMERIC)) AS value
;SELECT typeof( CAST('-9223372036854775809' AS numeric) ),  CAST('-9223372036854775809' AS numeric) 
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kennel',nullif('kennel','kennel'),'CAML')
;;SELECT * FROM preceding;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kennels',nullif('kennels','kennels'),'CAMLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kerchiefs',nullif('kerchiefs','kerchiefs'),'CRCABC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kernel',nullif('kernel','kernel'),'CRML')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kerosene',nullif('kerosene','kerosene'),'CRCAMA')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,c0) VALUES(1,0,'keystrokes',nullif('keystrokes','keystrokes'),'CACDRCAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kicked',nullif('kicked','kicked'),'CACAD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kickers',nullif('kickers','kickers'),'CACRC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kidnap',nullif('kidnap','kidnap'),'CADMAB')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'killingly',nullif('killingly','killingly'),'CLMCL')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobits',nullif('kilobits','kilobits'),'CLBADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobytes',nullif('kilobytes','kilobytes'),'CLBADAC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilovolt',nullif('kilovolt','kilovolt'),'CLBLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilowatt',nullif('kilowatt','kilowatt'),'CLBAD')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,v0) VALUES(1,0,'kindest',nullif('kindest','kindest'),'CAMDACD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindles',nullif('kindles','kindles'),'CAMDLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindred',nullif('kindred','kindred'),'CAMDRD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kinetic',nullif('kinetic','kinetic'),'CAMADAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kisser',nullif('kisser','kisser'),'CACR')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kit',nullif('kit','kit'),'CAD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kiting',nullif('kiting','kiting'),'CADAMC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kits',nullif('kits','kits'),'CADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kittenish',nullif('kittenish','kittenish'),'CADAMAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'knee',nullif('knee','knee'),'MA')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kneeled',nullif('kneeled','kneeled'),'MLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knifing',nullif('knifing','knifing'),'MABAMC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'knolls',nullif('knolls','knolls'),'MLC')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'knowhow',nullif('knowhow','knowhow'),'MABAB')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knowledgeable',nullif('knowledgeable','knowledgeable'),'MABLCABL')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'known',nullif('known','known'),'MABM')
;SELECT t1, t1, t1, coalesce(t1,t1)  FROM "main"."preceding" WHERE t1=0 AND t1>=?1 AND t1<?2
;;CREATE VIRTUAL TABLE t4 USING spellfix1;INSERT OR IGNORE INTO "main"."over"(following,following,following,following,following,following) VALUES(3,1,0,'Zeus',nullif('zeus','Zeus'),'CAC')
;;SELECT t1, t1, NULL, t1, t1 FROM "main"."preceding" WHERE rowid=?
;UPDATE OR IGNORE "main"."t0" SET v0=3, v0=1, v0=0, v0='Apollo', v0=nullif('apollo','Apollo'), v0='ABL' WHERE v0=2
;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'SELECT' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[ecmd SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 96
parser: Return. Stack=[ecmd SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[ecmd SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'SEMI' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 1.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 1.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;INSERT INTO over VALUES('abc'), ('ABD'), ('aBe'), ('AbF');SELECT typeof( CAST (X'3233302E30' AS REAL) ),  CAST (X'3233302E30' AS REAL) 
;;
;REINDEX;;
;PRAGMA integrity_check;;PRAGMA vdbe_trace=on;;-- Parsing of negative values
  
;ATTACH 'test2.db' AS aux;;
;pragma aux.synchronous = OFF;;CREATE TABLE x(test002, test001, last_field, field1);VACUUM
;SELECT typeof( CAST(-1.99999 AS INTEGER) ),  CAST(-1.99999 AS INTEGER) 
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'keels',nullif('keels','keels'),'CLC')
;;PRAGMA writable_schema = RESET;SELECT typeof( CAST(2e+50 AS INT) ),  CAST(2e+50 AS INT) 
;SELECT following FROM over
    WHERE following IN (SELECT following FROM over WHERE following<5) OR following==512
    ORDER BY following
  
;;
;SELECT following FROM over WHERE following IN (5);SELECT typeof(CAST('-9.223372036e15' AS NUMERIC)) AS type, printf('%.5e',CAST('-9.223372036e15' AS NUMERIC)) AS value
;SELECT typeof( CAST('-9223372036854775809' AS numeric) ),  CAST('-9223372036854775809' AS numeric) 
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kennel',nullif('kennel','kennel'),'CAML')
;;SELECT * FROM preceding;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kennels',nullif('kennels','kennels'),'CAMLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kerchiefs',nullif('kerchiefs','kerchiefs'),'CRCABC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kernel',nullif('kernel','kernel'),'CRML')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kerosene',nullif('kerosene','kerosene'),'CRCAMA')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,c0) VALUES(1,0,'keystrokes',nullif('keystrokes','keystrokes'),'CACDRCAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kicked',nullif('kicked','kicked'),'CACAD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kickers',nullif('kickers','kickers'),'CACRC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kidnap',nullif('kidnap','kidnap'),'CADMAB')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'killingly',nullif('killingly','killingly'),'CLMCL')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobits',nullif('kilobits','kilobits'),'CLBADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobytes',nullif('kilobytes','kilobytes'),'CLBADAC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilovolt',nullif('kilovolt','kilovolt'),'CLBLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilowatt',nullif('kilowatt','kilowatt'),'CLBAD')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,v0) VALUES(1,0,'kindest',nullif('kindest','kindest'),'CAMDACD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindles',nullif('kindles','kindles'),'CAMDLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindred',nullif('kindred','kindred'),'CAMDRD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kinetic',nullif('kinetic','kinetic'),'CAMADAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kisser',nullif('kisser','kisser'),'CACR')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kit',nullif('kit','kit'),'CAD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kiting',nullif('kiting','kiting'),'CADAMC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kits',nullif('kits','kits'),'CADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kittenish',nullif('kittenish','kittenish'),'CADAMAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'knee',nullif('knee','knee'),'MA')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kneeled',nullif('kneeled','kneeled'),'MLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knifing',nullif('knifing','knifing'),'MABAMC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'knolls',nullif('knolls','knolls'),'MLC')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'knowhow',nullif('knowhow','knowhow'),'MABAB')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knowledgeable',nullif('knowledgeable','knowledgeable'),'MABLCABL')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'known',nullif('known','known'),'MABM')
;SELECT t1, t1, t1, coalesce(t1,t1)  FROM "main"."preceding" WHERE t1=0 AND t1>=?1 AND t1<?2
;;CREATE VIRTUAL TABLE t4 USING spellfix1;INSERT OR IGNORE INTO "main"."over"(following,following,following,following,following,following) VALUES(3,1,0,'Zeus',nullif('zeus','Zeus'),'CAC')
;;SELECT t1, t1, NULL, t1, t1 FROM "main"."preceding" WHERE rowid=?
;UPDATE OR IGNORE "main"."t0" SET v0=3, v0=1, v0=0, v0='Apollo', v0=nullif('apollo','Apollo'), v0='ABL' WHERE v0=2
;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'INSERT' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[ecmd with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 156
parser: Reduce 156 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 427
parser: Shift 'INTO', go to state 164
parser: Return. Stack=[ecmd with insert_cmd INTO]
parser: Input 'ID' in state 164
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd with insert_cmd INTO ID]
parser: Input 'VALUES' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 164.
parser: ... then shift 'nm', go to state 393
parser: Reduce 112 [xfullname ::= nm], go to state 164.
parser: ... then shift 'xfullname', go to state 298
parser: Reduce 158 [idlist_opt ::=].
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'VALUES', go to state 526
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt VALUES]
parser: Input 'LP' in state 526
parser: Shift 'LP', go to state 28
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt VALUES LP]
parser: Input 'STRING' in state 28
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt VALUES LP STRING]
parser: Input 'RP' in state 537
parser: Reduce 168 [term ::= STRING], go to state 28.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'RP', pending reduce 89
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist RP]
parser: Input 'COMMA' with pending reduce 89
parser: Reduce 89 [values ::= VALUES LP nexprlist RP], go to state 35.
parser: ... then shift 'values', go to state 532
parser: Shift 'COMMA', go to state 531
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt values COMMA]
parser: Input 'LP' in state 531
parser: Shift 'LP', go to state 29
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt values COMMA LP]
parser: Input 'STRING' in state 29
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt values COMMA LP STRING]
parser: Input 'RP' in state 537
parser: Reduce 168 [term ::= STRING], go to state 29.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 29.
parser: ... then shift 'nexprlist', go to state 414
parser: Shift 'RP', pending reduce 90
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt values COMMA LP nexprlist RP]
parser: Input 'COMMA' with pending reduce 90
parser: Reduce 90 [values ::= values COMMA LP nexprlist RP], go to state 35.
parser: ... then shift 'values', go to state 532
parser: Shift 'COMMA', go to state 531
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt values COMMA]
parser: Input 'LP' in state 531
parser: Shift 'LP', go to state 29
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt values COMMA LP]
parser: Input 'STRING' in state 29
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt values COMMA LP STRING]
parser: Input 'RP' in state 537
parser: Reduce 168 [term ::= STRING], go to state 29.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 29.
parser: ... then shift 'nexprlist', go to state 414
parser: Shift 'RP', pending reduce 90
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt values COMMA LP nexprlist RP]
parser: Input 'COMMA' with pending reduce 90
parser: Reduce 90 [values ::= values COMMA LP nexprlist RP], go to state 35.
parser: ... then shift 'values', go to state 532
parser: Shift 'COMMA', go to state 531
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt values COMMA]
parser: Input 'LP' in state 531
parser: Shift 'LP', go to state 29
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt values COMMA LP]
parser: Input 'STRING' in state 29
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt values COMMA LP STRING]
parser: Input 'RP' in state 537
parser: Reduce 168 [term ::= STRING], go to state 29.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 29.
parser: ... then shift 'nexprlist', go to state 414
parser: Shift 'RP', pending reduce 90
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt values COMMA LP nexprlist RP]
parser: Input 'SEMI' with pending reduce 90
parser: Reduce 90 [values ::= values COMMA LP nexprlist RP], go to state 35.
parser: ... then shift 'values', go to state 532
parser: Reduce 348 [oneselect ::= values], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 152 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 150
parser: Reduce 150 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[SELECT typeof( CAST (X'3233302E30' AS REAL) ),  CAST (X'3233302E30' AS REAL) 
;;
;REINDEX;;
;PRAGMA integrity_check;;PRAGMA vdbe_trace=on;;-- Parsing of negative values
  
;ATTACH 'test2.db' AS aux;;
;pragma aux.synchronous = OFF;;CREATE TABLE x(test002, test001, last_field, field1);VACUUM
;SELECT typeof( CAST(-1.99999 AS INTEGER) ),  CAST(-1.99999 AS INTEGER) 
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'keels',nullif('keels','keels'),'CLC')
;;PRAGMA writable_schema = RESET;SELECT typeof( CAST(2e+50 AS INT) ),  CAST(2e+50 AS INT) 
;SELECT following FROM over
    WHERE following IN (SELECT following FROM over WHERE following<5) OR following==512
    ORDER BY following
  
;;
;SELECT following FROM over WHERE following IN (5);SELECT typeof(CAST('-9.223372036e15' AS NUMERIC)) AS type, printf('%.5e',CAST('-9.223372036e15' AS NUMERIC)) AS value
;SELECT typeof( CAST('-9223372036854775809' AS numeric) ),  CAST('-9223372036854775809' AS numeric) 
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kennel',nullif('kennel','kennel'),'CAML')
;;SELECT * FROM preceding;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kennels',nullif('kennels','kennels'),'CAMLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kerchiefs',nullif('kerchiefs','kerchiefs'),'CRCABC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kernel',nullif('kernel','kernel'),'CRML')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kerosene',nullif('kerosene','kerosene'),'CRCAMA')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,c0) VALUES(1,0,'keystrokes',nullif('keystrokes','keystrokes'),'CACDRCAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kicked',nullif('kicked','kicked'),'CACAD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kickers',nullif('kickers','kickers'),'CACRC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kidnap',nullif('kidnap','kidnap'),'CADMAB')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'killingly',nullif('killingly','killingly'),'CLMCL')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobits',nullif('kilobits','kilobits'),'CLBADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobytes',nullif('kilobytes','kilobytes'),'CLBADAC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilovolt',nullif('kilovolt','kilovolt'),'CLBLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilowatt',nullif('kilowatt','kilowatt'),'CLBAD')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,v0) VALUES(1,0,'kindest',nullif('kindest','kindest'),'CAMDACD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindles',nullif('kindles','kindles'),'CAMDLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindred',nullif('kindred','kindred'),'CAMDRD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kinetic',nullif('kinetic','kinetic'),'CAMADAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kisser',nullif('kisser','kisser'),'CACR')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kit',nullif('kit','kit'),'CAD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kiting',nullif('kiting','kiting'),'CADAMC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kits',nullif('kits','kits'),'CADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kittenish',nullif('kittenish','kittenish'),'CADAMAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'knee',nullif('knee','knee'),'MA')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kneeled',nullif('kneeled','kneeled'),'MLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knifing',nullif('knifing','knifing'),'MABAMC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'knolls',nullif('knolls','knolls'),'MLC')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'knowhow',nullif('knowhow','knowhow'),'MABAB')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knowledgeable',nullif('knowledgeable','knowledgeable'),'MABLCABL')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'known',nullif('known','known'),'MABM')
;SELECT t1, t1, t1, coalesce(t1,t1)  FROM "main"."preceding" WHERE t1=0 AND t1>=?1 AND t1<?2
;;CREATE VIRTUAL TABLE t4 USING spellfix1;INSERT OR IGNORE INTO "main"."over"(following,following,following,following,following,following) VALUES(3,1,0,'Zeus',nullif('zeus','Zeus'),'CAC')
;;SELECT t1, t1, NULL, t1, t1 FROM "main"."preceding" WHERE rowid=?
;UPDATE OR IGNORE "main"."t0" SET v0=3, v0=1, v0=0, v0='Apollo', v0=nullif('apollo','Apollo'), v0='ABL' WHERE v0=2
;]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP]
parser: Input 'CAST' in state 266
parser: FALLBACK CAST => ID
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'CAST', go to state 530
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct CAST]
parser: Input 'LP' in state 530
parser: Shift 'LP', go to state 106
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct CAST LP]
parser: Input 'BLOB' in state 106
parser: Shift 'BLOB', pending reduce 167
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct CAST LP BLOB]
parser: Input 'AS' with pending reduce 167
parser: Reduce 167 [term ::= NULL|FLOAT|BLOB], go to state 106.
parser: ... then shift 'term', go to state 53
parser: Shift 'AS', go to state 193
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct CAST LP term AS]
parser: Input 'ID' in state 193
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct CAST LP term AS ID]
parser: Input 'RP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 193.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 193.
parser: ... then shift 'typetoken', go to state 528
parser: Shift 'RP', pending reduce 172
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct CAST LP term AS typetoken RP]
parser: Input 'RP' with pending reduce 172
parser: Reduce 172 [expr ::= CAST LP expr AS typetoken RP], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct exprlist RP]
parser: Input 'COMMA' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'CAST' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: FALLBACK CAST => ID
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'CAST', go to state 530
parser: Return. Stack=[SELECT distinct sclp scanpt CAST]
parser: Input 'LP' in state 530
parser: Shift 'LP', go to state 106
parser: Return. Stack=[SELECT distinct sclp scanpt CAST LP]
parser: Input 'BLOB' in state 106
parser: Shift 'BLOB', pending reduce 167
parser: Return. Stack=[SELECT distinct sclp scanpt CAST LP BLOB]
parser: Input 'AS' with pending reduce 167
parser: Reduce 167 [term ::= NULL|FLOAT|BLOB], go to state 106.
parser: ... then shift 'term', go to state 53
parser: Shift 'AS', go to state 193
parser: Return. Stack=[SELECT distinct sclp scanpt CAST LP term AS]
parser: Input 'ID' in state 193
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[SELECT distinct sclp scanpt CAST LP term AS ID]
parser: Input 'RP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 193.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 193.
parser: ... then shift 'typetoken', go to state 528
parser: Shift 'RP', pending reduce 172
parser: Return. Stack=[SELECT distinct sclp scanpt CAST LP term AS typetoken RP]
parser: Input 'SEMI' with pending reduce 172
parser: Reduce 172 [expr ::= CAST LP expr AS typetoken RP], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Reduce 100 [from ::=].
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[;
;REINDEX;;
;PRAGMA integrity_check;;PRAGMA vdbe_trace=on;;-- Parsing of negative values
  
;ATTACH 'test2.db' AS aux;;
;pragma aux.synchronous = OFF;;CREATE TABLE x(test002, test001, last_field, field1);VACUUM
;SELECT typeof( CAST(-1.99999 AS INTEGER) ),  CAST(-1.99999 AS INTEGER) 
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'keels',nullif('keels','keels'),'CLC')
;;PRAGMA writable_schema = RESET;SELECT typeof( CAST(2e+50 AS INT) ),  CAST(2e+50 AS INT) 
;SELECT following FROM over
    WHERE following IN (SELECT following FROM over WHERE following<5) OR following==512
    ORDER BY following
  
;;
;SELECT following FROM over WHERE following IN (5);SELECT typeof(CAST('-9.223372036e15' AS NUMERIC)) AS type, printf('%.5e',CAST('-9.223372036e15' AS NUMERIC)) AS value
;SELECT typeof( CAST('-9223372036854775809' AS numeric) ),  CAST('-9223372036854775809' AS numeric) 
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kennel',nullif('kennel','kennel'),'CAML')
;;SELECT * FROM preceding;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kennels',nullif('kennels','kennels'),'CAMLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kerchiefs',nullif('kerchiefs','kerchiefs'),'CRCABC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kernel',nullif('kernel','kernel'),'CRML')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kerosene',nullif('kerosene','kerosene'),'CRCAMA')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,c0) VALUES(1,0,'keystrokes',nullif('keystrokes','keystrokes'),'CACDRCAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kicked',nullif('kicked','kicked'),'CACAD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kickers',nullif('kickers','kickers'),'CACRC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kidnap',nullif('kidnap','kidnap'),'CADMAB')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'killingly',nullif('killingly','killingly'),'CLMCL')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobits',nullif('kilobits','kilobits'),'CLBADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobytes',nullif('kilobytes','kilobytes'),'CLBADAC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilovolt',nullif('kilovolt','kilovolt'),'CLBLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilowatt',nullif('kilowatt','kilowatt'),'CLBAD')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,v0) VALUES(1,0,'kindest',nullif('kindest','kindest'),'CAMDACD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindles',nullif('kindles','kindles'),'CAMDLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindred',nullif('kindred','kindred'),'CAMDRD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kinetic',nullif('kinetic','kinetic'),'CAMADAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kisser',nullif('kisser','kisser'),'CACR')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kit',nullif('kit','kit'),'CAD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kiting',nullif('kiting','kiting'),'CADAMC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kits',nullif('kits','kits'),'CADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kittenish',nullif('kittenish','kittenish'),'CADAMAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'knee',nullif('knee','knee'),'MA')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kneeled',nullif('kneeled','kneeled'),'MLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knifing',nullif('knifing','knifing'),'MABAMC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'knolls',nullif('knolls','knolls'),'MLC')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'knowhow',nullif('knowhow','knowhow'),'MABAB')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knowledgeable',nullif('knowledgeable','knowledgeable'),'MABLCABL')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'known',nullif('known','known'),'MABM')
;SELECT t1, t1, t1, coalesce(t1,t1)  FROM "main"."preceding" WHERE t1=0 AND t1>=?1 AND t1<?2
;;CREATE VIRTUAL TABLE t4 USING spellfix1;INSERT OR IGNORE INTO "main"."over"(following,following,following,following,following,following) VALUES(3,1,0,'Zeus',nullif('zeus','Zeus'),'CAC')
;;SELECT t1, t1, NULL, t1, t1 FROM "main"."preceding" WHERE rowid=?
;UPDATE OR IGNORE "main"."t0" SET v0=3, v0=1, v0=0, v0='Apollo', v0=nullif('apollo','Apollo'), v0='ABL' WHERE v0=2
;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'SEMI' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[ecmd SEMI]
parser: Input 'REINDEX' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 1.
parser: ... then shift 'ecmd', pending reduce 318
parser: Reduce 318 [cmdlist ::= cmdlist ecmd], go to state 0.
parser: ... then shift 'cmdlist', go to state 1
parser: Shift 'REINDEX', go to state 214
parser: Return. Stack=[cmdlist REINDEX]
parser: Input 'SEMI' in state 214
parser: Reduce 269 [cmd ::= REINDEX], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdlist cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping cmdlist
parser: [[[;
;PRAGMA integrity_check;;PRAGMA vdbe_trace=on;;-- Parsing of negative values
  
;ATTACH 'test2.db' AS aux;;
;pragma aux.synchronous = OFF;;CREATE TABLE x(test002, test001, last_field, field1);VACUUM
;SELECT typeof( CAST(-1.99999 AS INTEGER) ),  CAST(-1.99999 AS INTEGER) 
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'keels',nullif('keels','keels'),'CLC')
;;PRAGMA writable_schema = RESET;SELECT typeof( CAST(2e+50 AS INT) ),  CAST(2e+50 AS INT) 
;SELECT following FROM over
    WHERE following IN (SELECT following FROM over WHERE following<5) OR following==512
    ORDER BY following
  
;;
;SELECT following FROM over WHERE following IN (5);SELECT typeof(CAST('-9.223372036e15' AS NUMERIC)) AS type, printf('%.5e',CAST('-9.223372036e15' AS NUMERIC)) AS value
;SELECT typeof( CAST('-9223372036854775809' AS numeric) ),  CAST('-9223372036854775809' AS numeric) 
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kennel',nullif('kennel','kennel'),'CAML')
;;SELECT * FROM preceding;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kennels',nullif('kennels','kennels'),'CAMLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kerchiefs',nullif('kerchiefs','kerchiefs'),'CRCABC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kernel',nullif('kernel','kernel'),'CRML')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kerosene',nullif('kerosene','kerosene'),'CRCAMA')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,c0) VALUES(1,0,'keystrokes',nullif('keystrokes','keystrokes'),'CACDRCAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kicked',nullif('kicked','kicked'),'CACAD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kickers',nullif('kickers','kickers'),'CACRC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kidnap',nullif('kidnap','kidnap'),'CADMAB')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'killingly',nullif('killingly','killingly'),'CLMCL')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobits',nullif('kilobits','kilobits'),'CLBADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobytes',nullif('kilobytes','kilobytes'),'CLBADAC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilovolt',nullif('kilovolt','kilovolt'),'CLBLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilowatt',nullif('kilowatt','kilowatt'),'CLBAD')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,v0) VALUES(1,0,'kindest',nullif('kindest','kindest'),'CAMDACD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindles',nullif('kindles','kindles'),'CAMDLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindred',nullif('kindred','kindred'),'CAMDRD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kinetic',nullif('kinetic','kinetic'),'CAMADAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kisser',nullif('kisser','kisser'),'CACR')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kit',nullif('kit','kit'),'CAD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kiting',nullif('kiting','kiting'),'CADAMC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kits',nullif('kits','kits'),'CADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kittenish',nullif('kittenish','kittenish'),'CADAMAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'knee',nullif('knee','knee'),'MA')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kneeled',nullif('kneeled','kneeled'),'MLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knifing',nullif('knifing','knifing'),'MABAMC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'knolls',nullif('knolls','knolls'),'MLC')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'knowhow',nullif('knowhow','knowhow'),'MABAB')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knowledgeable',nullif('knowledgeable','knowledgeable'),'MABLCABL')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'known',nullif('known','known'),'MABM')
;SELECT t1, t1, t1, coalesce(t1,t1)  FROM "main"."preceding" WHERE t1=0 AND t1>=?1 AND t1<?2
;;CREATE VIRTUAL TABLE t4 USING spellfix1;INSERT OR IGNORE INTO "main"."over"(following,following,following,following,following,following) VALUES(3,1,0,'Zeus',nullif('zeus','Zeus'),'CAC')
;;SELECT t1, t1, NULL, t1, t1 FROM "main"."preceding" WHERE rowid=?
;UPDATE OR IGNORE "main"."t0" SET v0=3, v0=1, v0=0, v0='Apollo', v0=nullif('apollo','Apollo'), v0='ABL' WHERE v0=2
;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'SEMI' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[ecmd SEMI]
parser: Input 'PRAGMA' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 1.
parser: ... then shift 'ecmd', pending reduce 318
parser: Reduce 318 [cmdlist ::= cmdlist ecmd], go to state 0.
parser: ... then shift 'cmdlist', go to state 1
parser: Shift 'PRAGMA', go to state 215
parser: Return. Stack=[cmdlist PRAGMA]
parser: Input 'ID' in state 215
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[cmdlist PRAGMA ID]
parser: Input 'SEMI' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 215.
parser: ... then shift 'nm', go to state 295
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 392
parser: Reduce 233 [cmd ::= PRAGMA nm dbnm], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdlist cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping cmdlist
parser: [[[;PRAGMA vdbe_trace=on;;-- Parsing of negative values
  
;ATTACH 'test2.db' AS aux;;
;pragma aux.synchronous = OFF;;CREATE TABLE x(test002, test001, last_field, field1);VACUUM
;SELECT typeof( CAST(-1.99999 AS INTEGER) ),  CAST(-1.99999 AS INTEGER) 
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'keels',nullif('keels','keels'),'CLC')
;;PRAGMA writable_schema = RESET;SELECT typeof( CAST(2e+50 AS INT) ),  CAST(2e+50 AS INT) 
;SELECT following FROM over
    WHERE following IN (SELECT following FROM over WHERE following<5) OR following==512
    ORDER BY following
  
;;
;SELECT following FROM over WHERE following IN (5);SELECT typeof(CAST('-9.223372036e15' AS NUMERIC)) AS type, printf('%.5e',CAST('-9.223372036e15' AS NUMERIC)) AS value
;SELECT typeof( CAST('-9223372036854775809' AS numeric) ),  CAST('-9223372036854775809' AS numeric) 
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kennel',nullif('kennel','kennel'),'CAML')
;;SELECT * FROM preceding;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kennels',nullif('kennels','kennels'),'CAMLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kerchiefs',nullif('kerchiefs','kerchiefs'),'CRCABC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kernel',nullif('kernel','kernel'),'CRML')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kerosene',nullif('kerosene','kerosene'),'CRCAMA')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,c0) VALUES(1,0,'keystrokes',nullif('keystrokes','keystrokes'),'CACDRCAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kicked',nullif('kicked','kicked'),'CACAD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kickers',nullif('kickers','kickers'),'CACRC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kidnap',nullif('kidnap','kidnap'),'CADMAB')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'killingly',nullif('killingly','killingly'),'CLMCL')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobits',nullif('kilobits','kilobits'),'CLBADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobytes',nullif('kilobytes','kilobytes'),'CLBADAC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilovolt',nullif('kilovolt','kilovolt'),'CLBLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilowatt',nullif('kilowatt','kilowatt'),'CLBAD')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,v0) VALUES(1,0,'kindest',nullif('kindest','kindest'),'CAMDACD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindles',nullif('kindles','kindles'),'CAMDLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindred',nullif('kindred','kindred'),'CAMDRD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kinetic',nullif('kinetic','kinetic'),'CAMADAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kisser',nullif('kisser','kisser'),'CACR')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kit',nullif('kit','kit'),'CAD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kiting',nullif('kiting','kiting'),'CADAMC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kits',nullif('kits','kits'),'CADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kittenish',nullif('kittenish','kittenish'),'CADAMAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'knee',nullif('knee','knee'),'MA')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kneeled',nullif('kneeled','kneeled'),'MLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knifing',nullif('knifing','knifing'),'MABAMC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'knolls',nullif('knolls','knolls'),'MLC')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'knowhow',nullif('knowhow','knowhow'),'MABAB')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knowledgeable',nullif('knowledgeable','knowledgeable'),'MABLCABL')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'known',nullif('known','known'),'MABM')
;SELECT t1, t1, t1, coalesce(t1,t1)  FROM "main"."preceding" WHERE t1=0 AND t1>=?1 AND t1<?2
;;CREATE VIRTUAL TABLE t4 USING spellfix1;INSERT OR IGNORE INTO "main"."over"(following,following,following,following,following,following) VALUES(3,1,0,'Zeus',nullif('zeus','Zeus'),'CAC')
;;SELECT t1, t1, NULL, t1, t1 FROM "main"."preceding" WHERE rowid=?
;UPDATE OR IGNORE "main"."t0" SET v0=3, v0=1, v0=0, v0='Apollo', v0=nullif('apollo','Apollo'), v0='ABL' WHERE v0=2
;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'PRAGMA' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'PRAGMA', go to state 215
parser: Return. Stack=[ecmd PRAGMA]
parser: Input 'ID' in state 215
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd PRAGMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 215.
parser: ... then shift 'nm', go to state 295
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 392
parser: Shift 'EQ', go to state 31
parser: Return. Stack=[ecmd PRAGMA nm dbnm EQ]
parser: Input 'ON' in state 31
parser: Shift 'ON', pending reduce 356
parser: Return. Stack=[ecmd PRAGMA nm dbnm EQ ON]
parser: Input 'SEMI' with pending reduce 356
parser: Reduce 356 [nmnum ::= ON], go to state 31.
parser: ... then shift 'nmnum', pending reduce 234
parser: Reduce 234 [cmd ::= PRAGMA nm dbnm EQ nmnum], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
parser: [[[;-- Parsing of negative values
  
;ATTACH 'test2.db' AS aux;;
;pragma aux.synchronous = OFF;;CREATE TABLE x(test002, test001, last_field, field1);VACUUM
;SELECT typeof( CAST(-1.99999 AS INTEGER) ),  CAST(-1.99999 AS INTEGER) 
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'keels',nullif('keels','keels'),'CLC')
;;PRAGMA writable_schema = RESET;SELECT typeof( CAST(2e+50 AS INT) ),  CAST(2e+50 AS INT) 
;SELECT following FROM over
    WHERE following IN (SELECT following FROM over WHERE following<5) OR following==512
    ORDER BY following
  
;;
;SELECT following FROM over WHERE following IN (5);SELECT typeof(CAST('-9.223372036e15' AS NUMERIC)) AS type, printf('%.5e',CAST('-9.223372036e15' AS NUMERIC)) AS value
;SELECT typeof( CAST('-9223372036854775809' AS numeric) ),  CAST('-9223372036854775809' AS numeric) 
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kennel',nullif('kennel','kennel'),'CAML')
;;SELECT * FROM preceding;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kennels',nullif('kennels','kennels'),'CAMLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kerchiefs',nullif('kerchiefs','kerchiefs'),'CRCABC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kernel',nullif('kernel','kernel'),'CRML')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kerosene',nullif('kerosene','kerosene'),'CRCAMA')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,c0) VALUES(1,0,'keystrokes',nullif('keystrokes','keystrokes'),'CACDRCAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kicked',nullif('kicked','kicked'),'CACAD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kickers',nullif('kickers','kickers'),'CACRC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kidnap',nullif('kidnap','kidnap'),'CADMAB')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'killingly',nullif('killingly','killingly'),'CLMCL')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobits',nullif('kilobits','kilobits'),'CLBADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobytes',nullif('kilobytes','kilobytes'),'CLBADAC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilovolt',nullif('kilovolt','kilovolt'),'CLBLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilowatt',nullif('kilowatt','kilowatt'),'CLBAD')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,v0) VALUES(1,0,'kindest',nullif('kindest','kindest'),'CAMDACD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindles',nullif('kindles','kindles'),'CAMDLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindred',nullif('kindred','kindred'),'CAMDRD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kinetic',nullif('kinetic','kinetic'),'CAMADAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kisser',nullif('kisser','kisser'),'CACR')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kit',nullif('kit','kit'),'CAD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kiting',nullif('kiting','kiting'),'CADAMC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kits',nullif('kits','kits'),'CADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kittenish',nullif('kittenish','kittenish'),'CADAMAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'knee',nullif('knee','knee'),'MA')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kneeled',nullif('kneeled','kneeled'),'MLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knifing',nullif('knifing','knifing'),'MABAMC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'knolls',nullif('knolls','knolls'),'MLC')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'knowhow',nullif('knowhow','knowhow'),'MABAB')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knowledgeable',nullif('knowledgeable','knowledgeable'),'MABLCABL')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'known',nullif('known','known'),'MABM')
;SELECT t1, t1, t1, coalesce(t1,t1)  FROM "main"."preceding" WHERE t1=0 AND t1>=?1 AND t1<?2
;;CREATE VIRTUAL TABLE t4 USING spellfix1;INSERT OR IGNORE INTO "main"."over"(following,following,following,following,following,following) VALUES(3,1,0,'Zeus',nullif('zeus','Zeus'),'CAC')
;;SELECT t1, t1, NULL, t1, t1 FROM "main"."preceding" WHERE rowid=?
;UPDATE OR IGNORE "main"."t0" SET v0=3, v0=1, v0=0, v0='Apollo', v0=nullif('apollo','Apollo'), v0='ABL' WHERE v0=2
;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'SEMI' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[ecmd SEMI]
parser: Input 'ATTACH' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 1.
parser: ... then shift 'ecmd', pending reduce 318
parser: Reduce 318 [cmdlist ::= cmdlist ecmd], go to state 0.
parser: ... then shift 'cmdlist', go to state 1
parser: Shift 'ATTACH', go to state 294
parser: Return. Stack=[cmdlist ATTACH]
parser: Input 'STRING' in state 294
parser: Reduce 365 [database_kw_opt ::=].
parser: ... then shift 'database_kw_opt', go to state 81
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[cmdlist ATTACH database_kw_opt STRING]
parser: Input 'AS' in state 537
parser: Reduce 168 [term ::= STRING], go to state 81.
parser: ... then shift 'term', go to state 44
parser: Shift 'AS', go to state 80
parser: Return. Stack=[cmdlist ATTACH database_kw_opt term AS]
parser: Input 'ID' in state 80
parser: Shift 'ID', go to state 416
parser: Return. Stack=[cmdlist ATTACH database_kw_opt term AS ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 80.
parser: ... then shift 'expr', go to state 15
parser: Reduce 267 [key_opt ::=].
parser: ... then shift 'key_opt', pending reduce 265
parser: Reduce 265 [cmd ::= ATTACH database_kw_opt expr AS expr key_opt], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdlist cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping cmdlist
SQL: [;-- Parsing of negative values
  
;ATTACH 'test2.db' AS aux;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 String8          0    1    0 test2.db      00 r[1]='test2.db'
REG[1] =   t8[test2.db](8)
   2 String8          0    2    0 aux           00 r[2]='aux'
REG[2] =   t3[aux](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t8[test2.db](8)
REG[2] =   t3[aux](8)
REG[3] =  NULL
parser: [[[CREATE TABLE x(type text,name text,tbl_name text,rootpage int,sql text)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'RP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT name, rootpage, sql FROM "aux".sqlite_master ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'ORDER' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      2    0   30 0             00 usesStmtJournal=0
  12 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  13 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[x3](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s22[CREATE TABLE x3](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[x3](8)
REG[2] =  i:2
REG[3] =   s22[CREATE TABLE x3](8)
parser: [[[CREATE TABLE x3(x,y,z)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'RP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[field89](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s37[CREATE TABLE fi](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s7[field89](8)
REG[2] =  i:3
REG[3] =   s37[CREATE TABLE fi](8)
parser: [[[CREATE TABLE field89(test091,field90)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'RP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s12[sqlite_stat1](8)
REG[2] =  i:4
REG[3] =   s39[CREATE TABLE sq](8)
parser: [[[CREATE TABLE sqlite_stat1(tbl,idx,stat)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'RP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t.1.](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s42[C.R.E.A.T.E. .T](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s4[t.1.](8)
REG[2] =  i:5
REG[3] =   s42[C.R.E.A.T.E. .T](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:6
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s24[CREATE TABLE t2](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t2](8)
REG[2] =  i:6
REG[3] =   s24[CREATE TABLE t2](8)
parser: [[[CREATE TABLE t2(a, b, c)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'RP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
parser: [[[;
;pragma aux.synchronous = OFF;;CREATE TABLE x(test002, test001, last_field, field1);VACUUM
;SELECT typeof( CAST(-1.99999 AS INTEGER) ),  CAST(-1.99999 AS INTEGER) 
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'keels',nullif('keels','keels'),'CLC')
;;PRAGMA writable_schema = RESET;SELECT typeof( CAST(2e+50 AS INT) ),  CAST(2e+50 AS INT) 
;SELECT following FROM over
    WHERE following IN (SELECT following FROM over WHERE following<5) OR following==512
    ORDER BY following
  
;;
;SELECT following FROM over WHERE following IN (5);SELECT typeof(CAST('-9.223372036e15' AS NUMERIC)) AS type, printf('%.5e',CAST('-9.223372036e15' AS NUMERIC)) AS value
;SELECT typeof( CAST('-9223372036854775809' AS numeric) ),  CAST('-9223372036854775809' AS numeric) 
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kennel',nullif('kennel','kennel'),'CAML')
;;SELECT * FROM preceding;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kennels',nullif('kennels','kennels'),'CAMLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kerchiefs',nullif('kerchiefs','kerchiefs'),'CRCABC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kernel',nullif('kernel','kernel'),'CRML')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kerosene',nullif('kerosene','kerosene'),'CRCAMA')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,c0) VALUES(1,0,'keystrokes',nullif('keystrokes','keystrokes'),'CACDRCAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kicked',nullif('kicked','kicked'),'CACAD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kickers',nullif('kickers','kickers'),'CACRC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kidnap',nullif('kidnap','kidnap'),'CADMAB')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'killingly',nullif('killingly','killingly'),'CLMCL')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobits',nullif('kilobits','kilobits'),'CLBADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobytes',nullif('kilobytes','kilobytes'),'CLBADAC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilovolt',nullif('kilovolt','kilovolt'),'CLBLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilowatt',nullif('kilowatt','kilowatt'),'CLBAD')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,v0) VALUES(1,0,'kindest',nullif('kindest','kindest'),'CAMDACD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindles',nullif('kindles','kindles'),'CAMDLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindred',nullif('kindred','kindred'),'CAMDRD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kinetic',nullif('kinetic','kinetic'),'CAMADAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kisser',nullif('kisser','kisser'),'CACR')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kit',nullif('kit','kit'),'CAD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kiting',nullif('kiting','kiting'),'CADAMC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kits',nullif('kits','kits'),'CADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kittenish',nullif('kittenish','kittenish'),'CADAMAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'knee',nullif('knee','knee'),'MA')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kneeled',nullif('kneeled','kneeled'),'MLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knifing',nullif('knifing','knifing'),'MABAMC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'knolls',nullif('knolls','knolls'),'MLC')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'knowhow',nullif('knowhow','knowhow'),'MABAB')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knowledgeable',nullif('knowledgeable','knowledgeable'),'MABLCABL')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'known',nullif('known','known'),'MABM')
;SELECT t1, t1, t1, coalesce(t1,t1)  FROM "main"."preceding" WHERE t1=0 AND t1>=?1 AND t1<?2
;;CREATE VIRTUAL TABLE t4 USING spellfix1;INSERT OR IGNORE INTO "main"."over"(following,following,following,following,following,following) VALUES(3,1,0,'Zeus',nullif('zeus','Zeus'),'CAC')
;;SELECT t1, t1, NULL, t1, t1 FROM "main"."preceding" WHERE rowid=?
;UPDATE OR IGNORE "main"."t0" SET v0=3, v0=1, v0=0, v0='Apollo', v0=nullif('apollo','Apollo'), v0='ABL' WHERE v0=2
;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'SEMI' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[ecmd SEMI]
parser: Input 'PRAGMA' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 1.
parser: ... then shift 'ecmd', pending reduce 318
parser: Reduce 318 [cmdlist ::= cmdlist ecmd], go to state 0.
parser: ... then shift 'cmdlist', go to state 1
parser: Shift 'PRAGMA', go to state 215
parser: Return. Stack=[cmdlist PRAGMA]
parser: Input 'ID' in state 215
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[cmdlist PRAGMA ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 215.
parser: ... then shift 'nm', go to state 295
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[cmdlist PRAGMA nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[cmdlist PRAGMA nm DOT ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 295.
parser: ... then shift 'dbnm', go to state 392
parser: Shift 'EQ', go to state 31
parser: Return. Stack=[cmdlist PRAGMA nm dbnm EQ]
parser: Input 'ID' in state 31
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[cmdlist PRAGMA nm dbnm EQ ID]
parser: Input 'SEMI' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 31.
parser: ... then shift 'nm', pending reduce 234
parser: Reduce 234 [cmd ::= PRAGMA nm dbnm EQ nmnum], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdlist cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping cmdlist
parser: [[[;CREATE TABLE x(test002, test001, last_field, field1);VACUUM
;SELECT typeof( CAST(-1.99999 AS INTEGER) ),  CAST(-1.99999 AS INTEGER) 
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'keels',nullif('keels','keels'),'CLC')
;;PRAGMA writable_schema = RESET;SELECT typeof( CAST(2e+50 AS INT) ),  CAST(2e+50 AS INT) 
;SELECT following FROM over
    WHERE following IN (SELECT following FROM over WHERE following<5) OR following==512
    ORDER BY following
  
;;
;SELECT following FROM over WHERE following IN (5);SELECT typeof(CAST('-9.223372036e15' AS NUMERIC)) AS type, printf('%.5e',CAST('-9.223372036e15' AS NUMERIC)) AS value
;SELECT typeof( CAST('-9223372036854775809' AS numeric) ),  CAST('-9223372036854775809' AS numeric) 
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kennel',nullif('kennel','kennel'),'CAML')
;;SELECT * FROM preceding;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kennels',nullif('kennels','kennels'),'CAMLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kerchiefs',nullif('kerchiefs','kerchiefs'),'CRCABC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kernel',nullif('kernel','kernel'),'CRML')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kerosene',nullif('kerosene','kerosene'),'CRCAMA')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,c0) VALUES(1,0,'keystrokes',nullif('keystrokes','keystrokes'),'CACDRCAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kicked',nullif('kicked','kicked'),'CACAD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kickers',nullif('kickers','kickers'),'CACRC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kidnap',nullif('kidnap','kidnap'),'CADMAB')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'killingly',nullif('killingly','killingly'),'CLMCL')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobits',nullif('kilobits','kilobits'),'CLBADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobytes',nullif('kilobytes','kilobytes'),'CLBADAC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilovolt',nullif('kilovolt','kilovolt'),'CLBLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilowatt',nullif('kilowatt','kilowatt'),'CLBAD')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,v0) VALUES(1,0,'kindest',nullif('kindest','kindest'),'CAMDACD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindles',nullif('kindles','kindles'),'CAMDLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindred',nullif('kindred','kindred'),'CAMDRD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kinetic',nullif('kinetic','kinetic'),'CAMADAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kisser',nullif('kisser','kisser'),'CACR')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kit',nullif('kit','kit'),'CAD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kiting',nullif('kiting','kiting'),'CADAMC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kits',nullif('kits','kits'),'CADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kittenish',nullif('kittenish','kittenish'),'CADAMAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'knee',nullif('knee','knee'),'MA')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kneeled',nullif('kneeled','kneeled'),'MLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knifing',nullif('knifing','knifing'),'MABAMC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'knolls',nullif('knolls','knolls'),'MLC')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'knowhow',nullif('knowhow','knowhow'),'MABAB')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knowledgeable',nullif('knowledgeable','knowledgeable'),'MABLCABL')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'known',nullif('known','known'),'MABM')
;SELECT t1, t1, t1, coalesce(t1,t1)  FROM "main"."preceding" WHERE t1=0 AND t1>=?1 AND t1<?2
;;CREATE VIRTUAL TABLE t4 USING spellfix1;INSERT OR IGNORE INTO "main"."over"(following,following,following,following,following,following) VALUES(3,1,0,'Zeus',nullif('zeus','Zeus'),'CAC')
;;SELECT t1, t1, NULL, t1, t1 FROM "main"."preceding" WHERE rowid=?
;UPDATE OR IGNORE "main"."t0" SET v0=3, v0=1, v0=0, v0='Apollo', v0=nullif('apollo','Apollo'), v0='ABL' WHERE v0=2
;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'CREATE' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[ecmd CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 1.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[ecmd createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 1.
parser: [[[CREATE TABLE x(type text,name text,tbl_name text,rootpage int,sql text)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'RP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'ORDER' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    3 1             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t0](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s109[CREATE TABLE t0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t0](8)
REG[2] =  i:2
REG[3] =   s109[CREATE TABLE t0](8)
parser: [[[CREATE TABLE t0 (
        c0 INTEGER PRIMARY KEY DESC, 
        v0 UNIQUE DEFAULT NULL
      ) WITHOUT ROWID ]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'PRIMARY' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Shift 'PRIMARY', go to state 475
parser: Return. Stack=[create_table LP columnname carglist PRIMARY]
parser: Input 'KEY' in state 475
parser: Shift 'KEY', go to state 280
parser: Return. Stack=[create_table LP columnname carglist PRIMARY KEY]
parser: Input 'DESC' in state 280
parser: Shift 'DESC', pending reduce 132
parser: Return. Stack=[create_table LP columnname carglist PRIMARY KEY DESC]
parser: Input 'COMMA' with pending reduce 132
parser: Reduce 132 [sortorder ::= DESC], go to state 280.
parser: ... then shift 'sortorder', go to state 333
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', go to state 332
parser: Reduce 42 [autoinc ::=].
parser: ... then shift 'autoinc', pending reduce 36
parser: Reduce 36 [ccons ::= PRIMARY KEY sortorder onconf autoinc], go to state 150.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 376.
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'UNIQUE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'UNIQUE', go to state 331
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist UNIQUE]
parser: Input 'DEFAULT' in state 331
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 37
parser: Reduce 37 [ccons ::= UNIQUE onconf], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Shift 'DEFAULT', go to state 267
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist DEFAULT]
parser: Input 'NULL' in state 267
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 199
parser: Shift 'NULL', pending reduce 167
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist DEFAULT scanpt NULL]
parser: Input 'RP' with pending reduce 167
parser: Reduce 167 [term ::= NULL|FLOAT|BLOB], go to state 199.
parser: ... then shift 'term', go to state 382
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', pending reduce 30
parser: Reduce 30 [ccons ::= DEFAULT scanpt term scanpt], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'WITHOUT' in state 361
parser: Shift 'WITHOUT', go to state 251
parser: Return. Stack=[create_table LP columnlist conslist_opt RP WITHOUT]
parser: Input 'ID' in state 251
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist conslist_opt RP WITHOUT ID]
parser: Input 'SEMI' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 251.
parser: ... then shift 'nm', pending reduce 22
parser: Reduce 22 [table_options ::= WITHOUT nm], go to state 361.
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s21[sqlite_autoinde](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s21[sqlite_autoinde](8)
REG[2] =  i:3
REG[3] =  NULL
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[over](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s33[CREATE TABLE ov](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s4[over](8)
REG[2] =  i:4
REG[3] =   s33[CREATE TABLE ov](8)
parser: [[[CREATE TABLE over(following TEXT)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'FOLLOWING' in state 139
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', pending reduce 331
parser: Return. Stack=[create_table LP FOLLOWING]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'RP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s9[preceding](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s104[CREATE TABLE pr](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s9[preceding](8)
REG[2] =  i:5
REG[3] =   s104[CREATE TABLE pr](8)
parser: [[[CREATE TABLE preceding(
    t1 PRIMARY KEY,
    UNIQUE(t1,t1),
    UNIQUE(t1,t1) ON CONFLICT REPLACE
  )]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'PRECEDING' in state 324
parser: FALLBACK PRECEDING => ID
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: FALLBACK PRECEDING => ID
parser: Shift 'PRECEDING', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists PRECEDING]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'PRIMARY' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Shift 'PRIMARY', go to state 475
parser: Return. Stack=[create_table LP columnname carglist PRIMARY]
parser: Input 'KEY' in state 475
parser: Shift 'KEY', go to state 280
parser: Return. Stack=[create_table LP columnname carglist PRIMARY KEY]
parser: Input 'COMMA' in state 280
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', go to state 333
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', go to state 332
parser: Reduce 42 [autoinc ::=].
parser: ... then shift 'autoinc', pending reduce 36
parser: Reduce 36 [ccons ::= PRIMARY KEY sortorder onconf autoinc], go to state 150.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 376.
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'UNIQUE' in state 34
parser: Shift 'UNIQUE', go to state 469
parser: Return. Stack=[create_table LP columnlist COMMA UNIQUE]
parser: Input 'LP' in state 469
parser: Shift 'LP', go to state 19
parser: Return. Stack=[create_table LP columnlist COMMA UNIQUE LP]
parser: Input 'ID' in state 19
parser: Shift 'ID', go to state 416
parser: Return. Stack=[create_table LP columnlist COMMA UNIQUE LP ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 19.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 19.
parser: ... then shift 'sortlist', go to state 402
parser: Shift 'COMMA', go to state 95
parser: Return. Stack=[create_table LP columnlist COMMA UNIQUE LP sortlist COMMA]
parser: Input 'ID' in state 95
parser: Shift 'ID', go to state 416
parser: Return. Stack=[create_table LP columnlist COMMA UNIQUE LP sortlist COMMA ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 95.
parser: ... then shift 'expr', go to state 14
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 129
parser: Reduce 129 [sortlist ::= sortlist COMMA expr sortorder], go to state 19.
parser: ... then shift 'sortlist', go to state 402
parser: Shift 'RP', go to state 327
parser: Return. Stack=[create_table LP columnlist COMMA UNIQUE LP sortlist RP]
parser: Input 'COMMA' in state 327
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 64
parser: Reduce 64 [tcons ::= UNIQUE LP sortlist RP onconf], go to state 34.
parser: ... then shift 'tcons', go to state 278
parser: Shift 'COMMA', pending reduce 61
parser: Return. Stack=[create_table LP columnlist COMMA tcons COMMA]
parser: Input 'UNIQUE' with pending reduce 61
parser: Reduce 61 [tconscomma ::= COMMA], go to state 278.
parser: ... then shift 'tconscomma', go to state 203
parser: Shift 'UNIQUE', go to state 469
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE]
parser: Input 'LP' in state 469
parser: Shift 'LP', go to state 19
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE LP]
parser: Input 'ID' in state 19
parser: Shift 'ID', go to state 416
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE LP ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 19.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 19.
parser: ... then shift 'sortlist', go to state 402
parser: Shift 'COMMA', go to state 95
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE LP sortlist COMMA]
parser: Input 'ID' in state 95
parser: Shift 'ID', go to state 416
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE LP sortlist COMMA ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 95.
parser: ... then shift 'expr', go to state 14
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 129
parser: Reduce 129 [sortlist ::= sortlist COMMA expr sortorder], go to state 19.
parser: ... then shift 'sortlist', go to state 402
parser: Shift 'RP', go to state 327
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE LP sortlist RP]
parser: Input 'ON' in state 327
parser: Shift 'ON', go to state 476
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE LP sortlist RP ON]
parser: Input 'CONFLICT' in state 476
parser: Shift 'CONFLICT', go to state 158
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE LP sortlist RP ON CONFLICT]
parser: Input 'REPLACE' in state 158
parser: Shift 'REPLACE', pending reduce 73
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE LP sortlist RP ON CONFLICT REPLACE]
parser: Input 'RP' with pending reduce 73
parser: Reduce 73 [resolvetype ::= REPLACE], go to state 158.
parser: ... then shift 'resolvetype', pending reduce 69
parser: Reduce 69 [onconf ::= ON CONFLICT resolvetype], go to state 327.
parser: ... then shift 'onconf', pending reduce 64
parser: Reduce 64 [tcons ::= UNIQUE LP sortlist RP onconf], go to state 203.
parser: ... then shift 'tcons', pending reduce 342
parser: Reduce 342 [conslist ::= conslist tconscomma tcons], go to state 34.
parser: ... then shift 'conslist', go to state 278
parser: Reduce 341 [conslist_opt ::= COMMA conslist], go to state 362.
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s28[sqlite_autoinde](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:6
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s28[sqlite_autoinde](8)
REG[2] =  i:6
REG[3] =  NULL
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s28[sqlite_autoinde](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:7
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s28[sqlite_autoinde](8)
REG[2] =  i:7
REG[3] =  NULL
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
parser: [[[CREATE TABLE x(type text,name text,tbl_name text,rootpage int,sql text)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'RP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT name, rootpage, sql FROM "temp".sqlite_temp_master ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'ORDER' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      1    0    0 1             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[ecmd create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd create_table LP ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[ecmd create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[ecmd create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[ecmd create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd create_table LP columnlist COMMA ID]
parser: Input 'RP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[ecmd create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: [[[UPDATE 'main'.sqlite_master SET type='table', name='x', tbl_name='x', rootpage=#2, sql='CREATE TABLE x(test002, test001, last_field, field1)' WHERE rowid=#1]]]
parser: Input 'UPDATE' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'STRING' in state 299
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', go to state 165
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with UPDATE orconf STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 165.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 165.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 428
parser: Shift 'SET', go to state 153
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 153
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 153.
parser: ... then shift 'nm', go to state 442
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'STRING' in state 84
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 84.
parser: ... then shift 'term', go to state 58
parser: Reduce 148 [setlist ::= nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'VARIABLE' in state 86
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ VARIABLE]
parser: Input 'COMMA' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 86.
parser: ... then shift 'expr', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'WHERE' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ]
parser: Input 'VARIABLE' in state 117
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ VARIABLE]
parser: Input 'SEMI' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 145
parser: Reduce 145 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
SQL: [;CREATE TABLE x(test002, test001, last_field, field1);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    3 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
parser: [[[VACUUM
;SELECT typeof( CAST(-1.99999 AS INTEGER) ),  CAST(-1.99999 AS INTEGER) 
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'keels',nullif('keels','keels'),'CLC')
;;PRAGMA writable_schema = RESET;SELECT typeof( CAST(2e+50 AS INT) ),  CAST(2e+50 AS INT) 
;SELECT following FROM over
    WHERE following IN (SELECT following FROM over WHERE following<5) OR following==512
    ORDER BY following
  
;;
;SELECT following FROM over WHERE following IN (5);SELECT typeof(CAST('-9.223372036e15' AS NUMERIC)) AS type, printf('%.5e',CAST('-9.223372036e15' AS NUMERIC)) AS value
;SELECT typeof( CAST('-9223372036854775809' AS numeric) ),  CAST('-9223372036854775809' AS numeric) 
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kennel',nullif('kennel','kennel'),'CAML')
;;SELECT * FROM preceding;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kennels',nullif('kennels','kennels'),'CAMLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kerchiefs',nullif('kerchiefs','kerchiefs'),'CRCABC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kernel',nullif('kernel','kernel'),'CRML')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kerosene',nullif('kerosene','kerosene'),'CRCAMA')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,c0) VALUES(1,0,'keystrokes',nullif('keystrokes','keystrokes'),'CACDRCAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kicked',nullif('kicked','kicked'),'CACAD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kickers',nullif('kickers','kickers'),'CACRC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kidnap',nullif('kidnap','kidnap'),'CADMAB')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'killingly',nullif('killingly','killingly'),'CLMCL')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobits',nullif('kilobits','kilobits'),'CLBADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobytes',nullif('kilobytes','kilobytes'),'CLBADAC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilovolt',nullif('kilovolt','kilovolt'),'CLBLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilowatt',nullif('kilowatt','kilowatt'),'CLBAD')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,v0) VALUES(1,0,'kindest',nullif('kindest','kindest'),'CAMDACD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindles',nullif('kindles','kindles'),'CAMDLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindred',nullif('kindred','kindred'),'CAMDRD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kinetic',nullif('kinetic','kinetic'),'CAMADAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kisser',nullif('kisser','kisser'),'CACR')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kit',nullif('kit','kit'),'CAD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kiting',nullif('kiting','kiting'),'CADAMC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kits',nullif('kits','kits'),'CADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kittenish',nullif('kittenish','kittenish'),'CADAMAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'knee',nullif('knee','knee'),'MA')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kneeled',nullif('kneeled','kneeled'),'MLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knifing',nullif('knifing','knifing'),'MABAMC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'knolls',nullif('knolls','knolls'),'MLC')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'knowhow',nullif('knowhow','knowhow'),'MABAB')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knowledgeable',nullif('knowledgeable','knowledgeable'),'MABLCABL')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'known',nullif('known','known'),'MABM')
;SELECT t1, t1, t1, coalesce(t1,t1)  FROM "main"."preceding" WHERE t1=0 AND t1>=?1 AND t1<?2
;;CREATE VIRTUAL TABLE t4 USING spellfix1;INSERT OR IGNORE INTO "main"."over"(following,following,following,following,following,following) VALUES(3,1,0,'Zeus',nullif('zeus','Zeus'),'CAC')
;;SELECT t1, t1, NULL, t1, t1 FROM "main"."preceding" WHERE rowid=?
;UPDATE OR IGNORE "main"."t0" SET v0=3, v0=1, v0=0, v0='Apollo', v0=nullif('apollo','Apollo'), v0='ABL' WHERE v0=2
;]]]
parser: Input 'VACUUM' in state 0
parser: Shift 'VACUUM', go to state 152
parser: Return. Stack=[VACUUM]
parser: Input 'SEMI' in state 152
parser: Reduce 232 [vinto ::=].
parser: ... then shift 'vinto', pending reduce 229
parser: Reduce 229 [cmd ::= VACUUM vinto], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
SQL: [VACUUM
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Vacuum           0    0    0               00 
parser: [[[ATTACH '' AS vacuum_db]]]
parser: Input 'ATTACH' in state 0
parser: Shift 'ATTACH', go to state 294
parser: Return. Stack=[ATTACH]
parser: Input 'STRING' in state 294
parser: Reduce 365 [database_kw_opt ::=].
parser: ... then shift 'database_kw_opt', go to state 81
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[ATTACH database_kw_opt STRING]
parser: Input 'AS' in state 537
parser: Reduce 168 [term ::= STRING], go to state 81.
parser: ... then shift 'term', go to state 44
parser: Shift 'AS', go to state 80
parser: Return. Stack=[ATTACH database_kw_opt term AS]
parser: Input 'ID' in state 80
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ATTACH database_kw_opt term AS ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 80.
parser: ... then shift 'expr', go to state 15
parser: Reduce 267 [key_opt ::=].
parser: ... then shift 'key_opt', pending reduce 265
parser: Reduce 265 [cmd ::= ATTACH database_kw_opt expr AS expr key_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
SQL: [ATTACH '' AS vacuum_db]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 String8          0    1    0               00 r[1]=''
REG[1] =   t0[](8)
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
REG[2] =   t9[vacuum_db](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t0[](8)
REG[2] =   t9[vacuum_db](8)
REG[3] =  NULL
parser: [[[CREATE TABLE x(type text,name text,tbl_name text,rootpage int,sql text)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'RP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT name, rootpage, sql FROM "vacuum_db".sqlite_master ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'ORDER' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      2    0    0 0             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
parser: [[[BEGIN]]]
parser: Input 'BEGIN' in state 0
parser: Shift 'BEGIN', go to state 268
parser: Return. Stack=[BEGIN]
parser: Input 'SEMI' in state 268
parser: Reduce 4 [transtype ::=].
parser: ... then shift 'transtype', go to state 367
parser: Reduce 323 [trans_opt ::=].
parser: ... then shift 'trans_opt', pending reduce 3
parser: Reduce 3 [cmd ::= BEGIN transtype trans_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
SQL: [BEGIN]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
parser: [[[SELECT sql FROM "main".sqlite_master WHERE type='table'AND name<>'sqlite_sequence' AND coalesce(rootpage,1)>0]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'NE' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'NE', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP]
parser: Input 'ID' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA INTEGER]
parser: Input 'RP' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct exprlist RP]
parser: Input 'GT' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'GT', go to state 118
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr GT]
parser: Input 'INTEGER' in state 118
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr GT INTEGER]
parser: Input 'SEMI' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 118.
parser: ... then shift 'term', go to state 130
parser: Reduce 181 [expr ::= expr LT|GT|GE|LE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
SQL: [SELECT sql FROM "main".sqlite_master WHERE type='table'AND name<>'sqlite_sequence' AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 1             01 usesStmtJournal=0
  17 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  18 String8          0    3    0 sqlite_sequence 00 r[3]='sqlite_sequence'
REG[3] =   t15[sqlite_sequence](8)
  19 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  20 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          2    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   15    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   14    1 (BINARY)      52 if r[1]!=r[2] goto 14
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t0](8)
   7 Eq               3   14    1 (BINARY)      52 if r[1]==r[3] goto 14
REG[3] =   t15[sqlite_sequence](8)
REG[1] =   s2[t0](8)
   8 Column           0    3    1               00 r[1]=sqlite_master.rootpage
REG[1] =  i:2
   9 NotNull          1   11    0               00 if r[1]!=NULL goto 11
REG[1] =  i:2
  11 Le               4   14    1               51 if r[1]<=r[4] goto 14
REG[4] =  i:0
REG[1] =  i:2
  12 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s109[CREATE TABLE t0](8)
  13 ResultRow        5    1    0               00 output=r[5]
REG[5] =   s109[CREATE TABLE t0](8)
parser: [[[CREATE TABLE t0 (
        c0 INTEGER PRIMARY KEY DESC, 
        v0 UNIQUE DEFAULT NULL
      ) WITHOUT ROWID ]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'PRIMARY' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Shift 'PRIMARY', go to state 475
parser: Return. Stack=[create_table LP columnname carglist PRIMARY]
parser: Input 'KEY' in state 475
parser: Shift 'KEY', go to state 280
parser: Return. Stack=[create_table LP columnname carglist PRIMARY KEY]
parser: Input 'DESC' in state 280
parser: Shift 'DESC', pending reduce 132
parser: Return. Stack=[create_table LP columnname carglist PRIMARY KEY DESC]
parser: Input 'COMMA' with pending reduce 132
parser: Reduce 132 [sortorder ::= DESC], go to state 280.
parser: ... then shift 'sortorder', go to state 333
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', go to state 332
parser: Reduce 42 [autoinc ::=].
parser: ... then shift 'autoinc', pending reduce 36
parser: Reduce 36 [ccons ::= PRIMARY KEY sortorder onconf autoinc], go to state 150.
parser: [[[INSERT INTO 'vacuum_db'.sqlite_master VALUES('index','sqlite_autoindex_t0_1','t0',#4,NULL);]]]
parser: Input 'INSERT' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 156
parser: Reduce 156 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 427
parser: Shift 'INTO', go to state 164
parser: Return. Stack=[with insert_cmd INTO]
parser: Input 'STRING' in state 164
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with insert_cmd INTO STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 164.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with insert_cmd INTO nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO nm DOT ID]
parser: Input 'VALUES' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 164.
parser: ... then shift 'xfullname', go to state 298
parser: Reduce 158 [idlist_opt ::=].
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'VALUES', go to state 526
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES]
parser: Input 'LP' in state 526
parser: Shift 'LP', go to state 28
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP]
parser: Input 'STRING' in state 28
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 28.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'VARIABLE' in state 107
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA VARIABLE]
parser: Input 'COMMA' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'NULL' in state 107
parser: Shift 'NULL', pending reduce 167
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA NULL]
parser: Input 'RP' with pending reduce 167
parser: Reduce 167 [term ::= NULL|FLOAT|BLOB], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'RP', pending reduce 89
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist RP]
parser: Input 'SEMI' with pending reduce 89
parser: Reduce 89 [values ::= VALUES LP nexprlist RP], go to state 35.
parser: ... then shift 'values', go to state 532
parser: Reduce 348 [oneselect ::= values], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 152 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 150
parser: Reduce 150 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 376.
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'UNIQUE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'UNIQUE', go to state 331
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist UNIQUE]
parser: Input 'DEFAULT' in state 331
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 37
parser: Reduce 37 [ccons ::= UNIQUE onconf], go to state 151.
parser: [[[INSERT INTO 'vacuum_db'.sqlite_master VALUES('index','sqlite_autoindex_t0_2','t0',#12,NULL);]]]
parser: Input 'INSERT' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 156
parser: Reduce 156 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 427
parser: Shift 'INTO', go to state 164
parser: Return. Stack=[with insert_cmd INTO]
parser: Input 'STRING' in state 164
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with insert_cmd INTO STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 164.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with insert_cmd INTO nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO nm DOT ID]
parser: Input 'VALUES' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 164.
parser: ... then shift 'xfullname', go to state 298
parser: Reduce 158 [idlist_opt ::=].
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'VALUES', go to state 526
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES]
parser: Input 'LP' in state 526
parser: Shift 'LP', go to state 28
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP]
parser: Input 'STRING' in state 28
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 28.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'VARIABLE' in state 107
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA VARIABLE]
parser: Input 'COMMA' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'NULL' in state 107
parser: Shift 'NULL', pending reduce 167
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA NULL]
parser: Input 'RP' with pending reduce 167
parser: Reduce 167 [term ::= NULL|FLOAT|BLOB], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'RP', pending reduce 89
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist RP]
parser: Input 'SEMI' with pending reduce 89
parser: Reduce 89 [values ::= VALUES LP nexprlist RP], go to state 35.
parser: ... then shift 'values', go to state 532
parser: Reduce 348 [oneselect ::= values], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 152 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 150
parser: Reduce 150 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Shift 'DEFAULT', go to state 267
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist DEFAULT]
parser: Input 'NULL' in state 267
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 199
parser: Shift 'NULL', pending reduce 167
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist DEFAULT scanpt NULL]
parser: Input 'RP' with pending reduce 167
parser: Reduce 167 [term ::= NULL|FLOAT|BLOB], go to state 199.
parser: ... then shift 'term', go to state 382
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', pending reduce 30
parser: Reduce 30 [ccons ::= DEFAULT scanpt term scanpt], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'WITHOUT' in state 361
parser: Shift 'WITHOUT', go to state 251
parser: Return. Stack=[create_table LP columnlist conslist_opt RP WITHOUT]
parser: Input 'ID' in state 251
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist conslist_opt RP WITHOUT ID]
parser: Input 'SEMI' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 251.
parser: ... then shift 'nm', pending reduce 22
parser: Reduce 22 [table_options ::= WITHOUT nm], go to state 361.
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: [[[UPDATE 'vacuum_db'.sqlite_master SET type='table', name='t0', tbl_name='t0', rootpage=#2, sql='CREATE TABLE t0 (
        c0 INTEGER PRIMARY KEY DESC, 
        v0 UNIQUE DEFAULT NULL
      ) WITHOUT ROWID ' WHERE rowid=#1]]]
parser: Input 'UPDATE' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'STRING' in state 299
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', go to state 165
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with UPDATE orconf STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 165.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 165.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 428
parser: Shift 'SET', go to state 153
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 153
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 153.
parser: ... then shift 'nm', go to state 442
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'STRING' in state 84
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 84.
parser: ... then shift 'term', go to state 58
parser: Reduce 148 [setlist ::= nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'VARIABLE' in state 86
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ VARIABLE]
parser: Input 'COMMA' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 86.
parser: ... then shift 'expr', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'WHERE' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ]
parser: Input 'VARIABLE' in state 117
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ VARIABLE]
parser: Input 'SEMI' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 145
parser: Reduce 145 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
SQL: [CREATE TABLE t0 (
        c0 INTEGER PRIMARY KEY DESC, 
        v0 UNIQUE DEFAULT NULL
      ) WITHOUT ROWID ]
VDBE Trace:
   0 Init             0   50    0               00 Start at 50
  50 Transaction      2    1    0 0             01 usesStmtJournal=0
  51 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        2    2    4               00 
   4 SetCookie        2    5    1               00 
   5 CreateBtree      2    2    2               00 r[2]=root iDb=2 flags=2
REG[2] =  i:2
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Goto             0   22    0               00 
  22 Noop             0   33    0               00 
  23 CreateBtree      2   12    2               00 r[12]=root iDb=2 flags=2
REG[12] =  i:3
  24 OpenWrite        2    1    2 5             00 root=1 iDb=2; sqlite_master
  25 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:2
  26 String8          0   14    0 index         00 r[14]='index'
REG[14] =   t5[index](8)
  27 String8          0   15    0 sqlite_autoindex_t0_2 00 r[15]='sqlite_autoindex_t0_2'
REG[15] =   t21[sqlite_autoinde](8)
  28 String8          0   16    0 t0            00 r[16]='t0'
REG[16] =   t2[t0](8)
  29 Copy            12   17    0               00 r[17]=r[12]
REG[17] =  i:3
  30 Null             0   18    0               00 r[18]=NULL
REG[18] =  NULL
  31 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s35[061737110100696E64657873716C6974..7...indexsqlit]
  32 Insert           2   19   13               18 intkey=r[13] data=r[19]
REG[19] =  s35[061737110100696E64657873716C6974..7...indexsqlit]
REG[13] =  i:2
  33 Close            0    0    0               00 
  34 Null             0   20   21               00 r[20..21]=NULL
REG[20] =  NULL
  35 OpenWrite        3    1    2 5             00 root=1 iDb=2; sqlite_master
  36 Explain         36    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  37 SeekRowid        3   39    1               00 intkey=r[1]
REG[1] =  i:1
  38 Rowid            3   21    0               00 r[21]=rowid
REG[21] =  i:1
  39 IsNull          21   47    0               00 if r[21]==NULL goto 47
REG[21] =  i:1
  40 String8          0   22    0 table         00 r[22]='table'
REG[22] =   t5[table](8)
  41 String8          0   23    0 t0            00 r[23]='t0'
REG[23] =   t2[t0](8)
  42 String8          0   24    0 t0            00 r[24]='t0'
REG[24] =   t2[t0](8)
  43 Copy             2   25    0               00 r[25]=r[2]
REG[25] =  i:2
  44 String8          0   26    0 CREATE TABLE t0 (
        c0 INTEGER PRIMARY KEY DESC, 
        v0 UNIQUE DEFAULT NULL
      ) WITHOUT ROWID  00 r[26]='CREATE TABLE t0 (
        c0 INTEGER PRIMARY KEY DESC, 
        v0 UNIQUE DEFAULT NULL
     
REG[26] =   t109[CREATE TABLE t0](8)
  45 MakeRecord      22    5   27 BBBDB         00 r[27]=mkrec(r[22..26])
REG[27] =  s126[071711110181677461626C6574307430......gtablet0t0]
  46 Insert           3   27   21               00 intkey=r[21] data=r[27]
REG[27] =  s126[071711110181677461626C6574307430......gtablet0t0]
REG[21] =  i:1
  47 SetCookie        2    1    1               00 
  48 ParseSchema      2    0    0 tbl_name='t0' AND type!='trigger' 00 
parser: [[[SELECT name, rootpage, sql FROM 'vacuum_db'.sqlite_master WHERE tbl_name='t0' AND type!='trigger' ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'STRING' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'NE' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'NE', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE STRING]
parser: Input 'ORDER' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      2    0    1 0             00 usesStmtJournal=0
  16 String8          0    2    0 t0            00 r[2]='t0'
REG[2] =   t2[t0](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s2[t0](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t0](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s109[CREATE TABLE t0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t0](8)
REG[5] =  i:2
REG[6] =   s109[CREATE TABLE t0](8)
parser: [[[CREATE TABLE t0 (
        c0 INTEGER PRIMARY KEY DESC, 
        v0 UNIQUE DEFAULT NULL
      ) WITHOUT ROWID ]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'PRIMARY' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Shift 'PRIMARY', go to state 475
parser: Return. Stack=[create_table LP columnname carglist PRIMARY]
parser: Input 'KEY' in state 475
parser: Shift 'KEY', go to state 280
parser: Return. Stack=[create_table LP columnname carglist PRIMARY KEY]
parser: Input 'DESC' in state 280
parser: Shift 'DESC', pending reduce 132
parser: Return. Stack=[create_table LP columnname carglist PRIMARY KEY DESC]
parser: Input 'COMMA' with pending reduce 132
parser: Reduce 132 [sortorder ::= DESC], go to state 280.
parser: ... then shift 'sortorder', go to state 333
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', go to state 332
parser: Reduce 42 [autoinc ::=].
parser: ... then shift 'autoinc', pending reduce 36
parser: Reduce 36 [ccons ::= PRIMARY KEY sortorder onconf autoinc], go to state 150.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 376.
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'UNIQUE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'UNIQUE', go to state 331
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist UNIQUE]
parser: Input 'DEFAULT' in state 331
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 37
parser: Reduce 37 [ccons ::= UNIQUE onconf], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Shift 'DEFAULT', go to state 267
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist DEFAULT]
parser: Input 'NULL' in state 267
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 199
parser: Shift 'NULL', pending reduce 167
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist DEFAULT scanpt NULL]
parser: Input 'RP' with pending reduce 167
parser: Reduce 167 [term ::= NULL|FLOAT|BLOB], go to state 199.
parser: ... then shift 'term', go to state 382
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', pending reduce 30
parser: Reduce 30 [ccons ::= DEFAULT scanpt term scanpt], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'WITHOUT' in state 361
parser: Shift 'WITHOUT', go to state 251
parser: Return. Stack=[create_table LP columnlist conslist_opt RP WITHOUT]
parser: Input 'ID' in state 251
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist conslist_opt RP WITHOUT ID]
parser: Input 'SEMI' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 251.
parser: ... then shift 'nm', pending reduce 22
parser: Reduce 22 [table_options ::= WITHOUT nm], go to state 361.
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s2[t0](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s21[sqlite_autoinde](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =  NULL
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s21[sqlite_autoinde](8)
REG[5] =  i:3
REG[6] =  NULL
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  49 Halt             0    0    0               00 
  14 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   14    1 (BINARY)      52 if r[1]!=r[2] goto 14
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  14 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   14    1 (BINARY)      52 if r[1]!=r[2] goto 14
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[over](8)
   7 Eq               3   14    1 (BINARY)      52 if r[1]==r[3] goto 14
REG[3] =   t15[sqlite_sequence](8)
REG[1] =   s4[over](8)
   8 Column           0    3    1               00 r[1]=sqlite_master.rootpage
REG[1] =  i:4
   9 NotNull          1   11    0               00 if r[1]!=NULL goto 11
REG[1] =  i:4
  11 Le               4   14    1               51 if r[1]<=r[4] goto 14
REG[4] =  i:0
REG[1] =  i:4
  12 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s33[CREATE TABLE ov](8)
  13 ResultRow        5    1    0               00 output=r[5]
REG[5] =   s33[CREATE TABLE ov](8)
parser: [[[CREATE TABLE over(following TEXT)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'FOLLOWING' in state 139
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', pending reduce 331
parser: Return. Stack=[create_table LP FOLLOWING]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'RP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: [[[UPDATE 'vacuum_db'.sqlite_master SET type='table', name='over', tbl_name='over', rootpage=#2, sql='CREATE TABLE over(following TEXT)' WHERE rowid=#1]]]
parser: Input 'UPDATE' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'STRING' in state 299
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', go to state 165
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with UPDATE orconf STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 165.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 165.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 428
parser: Shift 'SET', go to state 153
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 153
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 153.
parser: ... then shift 'nm', go to state 442
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'STRING' in state 84
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 84.
parser: ... then shift 'term', go to state 58
parser: Reduce 148 [setlist ::= nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'VARIABLE' in state 86
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ VARIABLE]
parser: Input 'COMMA' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 86.
parser: ... then shift 'expr', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'WHERE' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ]
parser: Input 'VARIABLE' in state 117
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ VARIABLE]
parser: Input 'SEMI' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 145
parser: Reduce 145 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
SQL: [CREATE TABLE over(following TEXT)]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      2    1    1 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      2    2    1               00 r[2]=root iDb=2 flags=1
REG[2] =  i:4
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:3
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:3
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 over          00 r[7]='over'
REG[7] =   t4[over](8)
  20 String8          0    8    0 over          00 r[8]='over'
REG[8] =   t4[over](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  22 String8          0   10    0 CREATE TABLE over(following TEXT) 00 r[10]='CREATE TABLE over(following TEXT)'
REG[10] =   t33[CREATE TABLE ov](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s53[06171515014F7461626C656F7665726F.....Otableovero]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s53[06171515014F7461626C656F7665726F.....Otableovero]
REG[5] =  i:3
  25 SetCookie        2    1    2               00 
  26 ParseSchema      2    0    0 tbl_name='over' AND type!='trigger' 00 
parser: [[[SELECT name, rootpage, sql FROM 'vacuum_db'.sqlite_master WHERE tbl_name='over' AND type!='trigger' ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'STRING' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'NE' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'NE', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE STRING]
parser: Input 'ORDER' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      2    0    2 0             00 usesStmtJournal=0
  16 String8          0    2    0 over          00 r[2]='over'
REG[2] =   t4[over](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[over](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[over](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[over](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[over](8)
REG[1] =   s4[over](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[over](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s33[CREATE TABLE ov](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[over](8)
REG[5] =  i:4
REG[6] =   s33[CREATE TABLE ov](8)
parser: [[[CREATE TABLE over(following TEXT)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'FOLLOWING' in state 139
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', pending reduce 331
parser: Return. Stack=[create_table LP FOLLOWING]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'RP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
  14 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   14    1 (BINARY)      52 if r[1]!=r[2] goto 14
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s9[preceding](8)
   7 Eq               3   14    1 (BINARY)      52 if r[1]==r[3] goto 14
REG[3] =   t15[sqlite_sequence](8)
REG[1] =   s9[preceding](8)
   8 Column           0    3    1               00 r[1]=sqlite_master.rootpage
REG[1] =  i:5
   9 NotNull          1   11    0               00 if r[1]!=NULL goto 11
REG[1] =  i:5
  11 Le               4   14    1               51 if r[1]<=r[4] goto 14
REG[4] =  i:0
REG[1] =  i:5
  12 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s104[CREATE TABLE pr](8)
  13 ResultRow        5    1    0               00 output=r[5]
REG[5] =   s104[CREATE TABLE pr](8)
parser: [[[CREATE TABLE preceding(
    t1 PRIMARY KEY,
    UNIQUE(t1,t1),
    UNIQUE(t1,t1) ON CONFLICT REPLACE
  )]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'PRECEDING' in state 324
parser: FALLBACK PRECEDING => ID
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: FALLBACK PRECEDING => ID
parser: Shift 'PRECEDING', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists PRECEDING]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'PRIMARY' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Shift 'PRIMARY', go to state 475
parser: Return. Stack=[create_table LP columnname carglist PRIMARY]
parser: Input 'KEY' in state 475
parser: Shift 'KEY', go to state 280
parser: Return. Stack=[create_table LP columnname carglist PRIMARY KEY]
parser: Input 'COMMA' in state 280
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', go to state 333
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', go to state 332
parser: Reduce 42 [autoinc ::=].
parser: ... then shift 'autoinc', pending reduce 36
parser: Reduce 36 [ccons ::= PRIMARY KEY sortorder onconf autoinc], go to state 150.
parser: [[[INSERT INTO 'vacuum_db'.sqlite_master VALUES('index','sqlite_autoindex_preceding_1','preceding',#4,NULL);]]]
parser: Input 'INSERT' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 156
parser: Reduce 156 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 427
parser: Shift 'INTO', go to state 164
parser: Return. Stack=[with insert_cmd INTO]
parser: Input 'STRING' in state 164
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with insert_cmd INTO STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 164.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with insert_cmd INTO nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO nm DOT ID]
parser: Input 'VALUES' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 164.
parser: ... then shift 'xfullname', go to state 298
parser: Reduce 158 [idlist_opt ::=].
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'VALUES', go to state 526
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES]
parser: Input 'LP' in state 526
parser: Shift 'LP', go to state 28
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP]
parser: Input 'STRING' in state 28
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 28.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'VARIABLE' in state 107
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA VARIABLE]
parser: Input 'COMMA' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'NULL' in state 107
parser: Shift 'NULL', pending reduce 167
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA NULL]
parser: Input 'RP' with pending reduce 167
parser: Reduce 167 [term ::= NULL|FLOAT|BLOB], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'RP', pending reduce 89
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist RP]
parser: Input 'SEMI' with pending reduce 89
parser: Reduce 89 [values ::= VALUES LP nexprlist RP], go to state 35.
parser: ... then shift 'values', go to state 532
parser: Reduce 348 [oneselect ::= values], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 152 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 150
parser: Reduce 150 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 376.
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'UNIQUE' in state 34
parser: Shift 'UNIQUE', go to state 469
parser: Return. Stack=[create_table LP columnlist COMMA UNIQUE]
parser: Input 'LP' in state 469
parser: Shift 'LP', go to state 19
parser: Return. Stack=[create_table LP columnlist COMMA UNIQUE LP]
parser: Input 'ID' in state 19
parser: Shift 'ID', go to state 416
parser: Return. Stack=[create_table LP columnlist COMMA UNIQUE LP ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 19.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 19.
parser: ... then shift 'sortlist', go to state 402
parser: Shift 'COMMA', go to state 95
parser: Return. Stack=[create_table LP columnlist COMMA UNIQUE LP sortlist COMMA]
parser: Input 'ID' in state 95
parser: Shift 'ID', go to state 416
parser: Return. Stack=[create_table LP columnlist COMMA UNIQUE LP sortlist COMMA ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 95.
parser: ... then shift 'expr', go to state 14
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 129
parser: Reduce 129 [sortlist ::= sortlist COMMA expr sortorder], go to state 19.
parser: ... then shift 'sortlist', go to state 402
parser: Shift 'RP', go to state 327
parser: Return. Stack=[create_table LP columnlist COMMA UNIQUE LP sortlist RP]
parser: Input 'COMMA' in state 327
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 64
parser: Reduce 64 [tcons ::= UNIQUE LP sortlist RP onconf], go to state 34.
parser: [[[INSERT INTO 'vacuum_db'.sqlite_master VALUES('index','sqlite_autoindex_preceding_2','preceding',#12,NULL);]]]
parser: Input 'INSERT' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 156
parser: Reduce 156 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 427
parser: Shift 'INTO', go to state 164
parser: Return. Stack=[with insert_cmd INTO]
parser: Input 'STRING' in state 164
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with insert_cmd INTO STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 164.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with insert_cmd INTO nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO nm DOT ID]
parser: Input 'VALUES' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 164.
parser: ... then shift 'xfullname', go to state 298
parser: Reduce 158 [idlist_opt ::=].
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'VALUES', go to state 526
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES]
parser: Input 'LP' in state 526
parser: Shift 'LP', go to state 28
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP]
parser: Input 'STRING' in state 28
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 28.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'VARIABLE' in state 107
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA VARIABLE]
parser: Input 'COMMA' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'NULL' in state 107
parser: Shift 'NULL', pending reduce 167
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA NULL]
parser: Input 'RP' with pending reduce 167
parser: Reduce 167 [term ::= NULL|FLOAT|BLOB], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'RP', pending reduce 89
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist RP]
parser: Input 'SEMI' with pending reduce 89
parser: Reduce 89 [values ::= VALUES LP nexprlist RP], go to state 35.
parser: ... then shift 'values', go to state 532
parser: Reduce 348 [oneselect ::= values], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 152 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 150
parser: Reduce 150 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'tcons', go to state 278
parser: Shift 'COMMA', pending reduce 61
parser: Return. Stack=[create_table LP columnlist COMMA tcons COMMA]
parser: Input 'UNIQUE' with pending reduce 61
parser: Reduce 61 [tconscomma ::= COMMA], go to state 278.
parser: ... then shift 'tconscomma', go to state 203
parser: Shift 'UNIQUE', go to state 469
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE]
parser: Input 'LP' in state 469
parser: Shift 'LP', go to state 19
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE LP]
parser: Input 'ID' in state 19
parser: Shift 'ID', go to state 416
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE LP ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 19.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 19.
parser: ... then shift 'sortlist', go to state 402
parser: Shift 'COMMA', go to state 95
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE LP sortlist COMMA]
parser: Input 'ID' in state 95
parser: Shift 'ID', go to state 416
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE LP sortlist COMMA ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 95.
parser: ... then shift 'expr', go to state 14
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 129
parser: Reduce 129 [sortlist ::= sortlist COMMA expr sortorder], go to state 19.
parser: ... then shift 'sortlist', go to state 402
parser: Shift 'RP', go to state 327
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE LP sortlist RP]
parser: Input 'ON' in state 327
parser: Shift 'ON', go to state 476
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE LP sortlist RP ON]
parser: Input 'CONFLICT' in state 476
parser: Shift 'CONFLICT', go to state 158
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE LP sortlist RP ON CONFLICT]
parser: Input 'REPLACE' in state 158
parser: Shift 'REPLACE', pending reduce 73
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE LP sortlist RP ON CONFLICT REPLACE]
parser: Input 'RP' with pending reduce 73
parser: Reduce 73 [resolvetype ::= REPLACE], go to state 158.
parser: ... then shift 'resolvetype', pending reduce 69
parser: Reduce 69 [onconf ::= ON CONFLICT resolvetype], go to state 327.
parser: ... then shift 'onconf', pending reduce 64
parser: Reduce 64 [tcons ::= UNIQUE LP sortlist RP onconf], go to state 203.
parser: ... then shift 'tcons', pending reduce 342
parser: Reduce 342 [conslist ::= conslist tconscomma tcons], go to state 34.
parser: ... then shift 'conslist', go to state 278
parser: Reduce 341 [conslist_opt ::= COMMA conslist], go to state 362.
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: [[[UPDATE 'vacuum_db'.sqlite_master SET type='table', name='preceding', tbl_name='preceding', rootpage=#2, sql='CREATE TABLE preceding(
    t1 PRIMARY KEY,
    UNIQUE(t1,t1),
    UNIQUE(t1,t1) ON CONFLICT REPLACE
  )' WHERE rowid=#1]]]
parser: Input 'UPDATE' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'STRING' in state 299
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', go to state 165
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with UPDATE orconf STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 165.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 165.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 428
parser: Shift 'SET', go to state 153
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 153
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 153.
parser: ... then shift 'nm', go to state 442
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'STRING' in state 84
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 84.
parser: ... then shift 'term', go to state 58
parser: Reduce 148 [setlist ::= nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'VARIABLE' in state 86
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ VARIABLE]
parser: Input 'COMMA' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 86.
parser: ... then shift 'expr', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'WHERE' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ]
parser: Input 'VARIABLE' in state 117
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ VARIABLE]
parser: Input 'SEMI' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 145
parser: Reduce 145 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
SQL: [CREATE TABLE preceding(
    t1 PRIMARY KEY,
    UNIQUE(t1,t1),
    UNIQUE(t1,t1) ON CONFLICT REPLACE
  )]
VDBE Trace:
   0 Init             0   50    0               00 Start at 50
  50 Transaction      2    1    2 0             01 usesStmtJournal=0
  51 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      2    2    1               00 r[2]=root iDb=2 flags=1
REG[2] =  i:5
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      2    4    2               00 r[4]=root iDb=2 flags=2
REG[4] =  i:6
  13 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:5
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_preceding_1 00 r[7]='sqlite_autoindex_preceding_1'
REG[7] =   t28[sqlite_autoinde](8)
  17 String8          0    8    0 preceding     00 r[8]='preceding'
REG[8] =   t9[preceding](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:6
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s49[0617451F0100696E64657873716C6974..E...indexsqlit]
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  s49[0617451F0100696E64657873716C6974..E...indexsqlit]
REG[5] =  i:5
  22 Noop             0   33    0               00 
  23 CreateBtree      2   12    2               00 r[12]=root iDb=2 flags=2
REG[12] =  i:7
  24 OpenWrite        2    1    2 5             00 root=1 iDb=2; sqlite_master
  25 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:6
  26 String8          0   14    0 index         00 r[14]='index'
REG[14] =   t5[index](8)
  27 String8          0   15    0 sqlite_autoindex_preceding_2 00 r[15]='sqlite_autoindex_preceding_2'
REG[15] =   t28[sqlite_autoinde](8)
  28 String8          0   16    0 preceding     00 r[16]='preceding'
REG[16] =   t9[preceding](8)
  29 Copy            12   17    0               00 r[17]=r[12]
REG[17] =  i:7
  30 Null             0   18    0               00 r[18]=NULL
REG[18] =  NULL
  31 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s49[0617451F0100696E64657873716C6974..E...indexsqlit]
  32 Insert           2   19   13               18 intkey=r[13] data=r[19]
REG[19] =  s49[0617451F0100696E64657873716C6974..E...indexsqlit]
REG[13] =  i:6
  33 Close            0    0    0               00 
  34 Null             0   20   21               00 r[20..21]=NULL
REG[20] =  NULL
  35 OpenWrite        3    1    2 5             00 root=1 iDb=2; sqlite_master
  36 Explain         36    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  37 SeekRowid        3   39    1               00 intkey=r[1]
REG[1] =  i:4
  38 Rowid            3   21    0               00 r[21]=rowid
REG[21] =  i:4
  39 IsNull          21   47    0               00 if r[21]==NULL goto 47
REG[21] =  i:4
  40 String8          0   22    0 table         00 r[22]='table'
REG[22] =   t5[table](8)
  41 String8          0   23    0 preceding     00 r[23]='preceding'
REG[23] =   t9[preceding](8)
  42 String8          0   24    0 preceding     00 r[24]='preceding'
REG[24] =   t9[preceding](8)
  43 Copy             2   25    0               00 r[25]=r[2]
REG[25] =  i:5
  44 String8          0   26    0 CREATE TABLE preceding(
    t1 PRIMARY KEY,
    UNIQUE(t1,t1),
    UNIQUE(t1,t1) ON CONFLICT REPLACE
  ) 00 r[26]='CREATE TABLE preceding(
    t1 PRIMARY KEY,
    UNIQUE(t1,t1),
    UNIQUE(t1,t1) ON CONFLICT
REG[26] =   t104[CREATE TABLE pr](8)
  45 MakeRecord      22    5   27 BBBDB         00 r[27]=mkrec(r[22..26])
REG[27] =  s135[07171F1F01815D7461626C6570726563......]tableprec]
  46 Insert           3   27   21               00 intkey=r[21] data=r[27]
REG[27] =  s135[07171F1F01815D7461626C6570726563......]tableprec]
REG[21] =  i:4
  47 SetCookie        2    1    3               00 
  48 ParseSchema      2    0    0 tbl_name='preceding' AND type!='trigger' 00 
parser: [[[SELECT name, rootpage, sql FROM 'vacuum_db'.sqlite_master WHERE tbl_name='preceding' AND type!='trigger' ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'STRING' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'NE' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'NE', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE STRING]
parser: Input 'ORDER' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      2    0    3 0             00 usesStmtJournal=0
  16 String8          0    2    0 preceding     00 r[2]='preceding'
REG[2] =   t9[preceding](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[preceding](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[preceding](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[over](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[preceding](8)
REG[1] =   s4[over](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[preceding](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[preceding](8)
REG[1] =   s9[preceding](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s9[preceding](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:5
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s104[CREATE TABLE pr](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s9[preceding](8)
REG[5] =  i:5
REG[6] =   s104[CREATE TABLE pr](8)
parser: [[[CREATE TABLE preceding(
    t1 PRIMARY KEY,
    UNIQUE(t1,t1),
    UNIQUE(t1,t1) ON CONFLICT REPLACE
  )]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'PRECEDING' in state 324
parser: FALLBACK PRECEDING => ID
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: FALLBACK PRECEDING => ID
parser: Shift 'PRECEDING', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists PRECEDING]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'PRIMARY' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Shift 'PRIMARY', go to state 475
parser: Return. Stack=[create_table LP columnname carglist PRIMARY]
parser: Input 'KEY' in state 475
parser: Shift 'KEY', go to state 280
parser: Return. Stack=[create_table LP columnname carglist PRIMARY KEY]
parser: Input 'COMMA' in state 280
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', go to state 333
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', go to state 332
parser: Reduce 42 [autoinc ::=].
parser: ... then shift 'autoinc', pending reduce 36
parser: Reduce 36 [ccons ::= PRIMARY KEY sortorder onconf autoinc], go to state 150.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 376.
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'UNIQUE' in state 34
parser: Shift 'UNIQUE', go to state 469
parser: Return. Stack=[create_table LP columnlist COMMA UNIQUE]
parser: Input 'LP' in state 469
parser: Shift 'LP', go to state 19
parser: Return. Stack=[create_table LP columnlist COMMA UNIQUE LP]
parser: Input 'ID' in state 19
parser: Shift 'ID', go to state 416
parser: Return. Stack=[create_table LP columnlist COMMA UNIQUE LP ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 19.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 19.
parser: ... then shift 'sortlist', go to state 402
parser: Shift 'COMMA', go to state 95
parser: Return. Stack=[create_table LP columnlist COMMA UNIQUE LP sortlist COMMA]
parser: Input 'ID' in state 95
parser: Shift 'ID', go to state 416
parser: Return. Stack=[create_table LP columnlist COMMA UNIQUE LP sortlist COMMA ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 95.
parser: ... then shift 'expr', go to state 14
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 129
parser: Reduce 129 [sortlist ::= sortlist COMMA expr sortorder], go to state 19.
parser: ... then shift 'sortlist', go to state 402
parser: Shift 'RP', go to state 327
parser: Return. Stack=[create_table LP columnlist COMMA UNIQUE LP sortlist RP]
parser: Input 'COMMA' in state 327
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 64
parser: Reduce 64 [tcons ::= UNIQUE LP sortlist RP onconf], go to state 34.
parser: ... then shift 'tcons', go to state 278
parser: Shift 'COMMA', pending reduce 61
parser: Return. Stack=[create_table LP columnlist COMMA tcons COMMA]
parser: Input 'UNIQUE' with pending reduce 61
parser: Reduce 61 [tconscomma ::= COMMA], go to state 278.
parser: ... then shift 'tconscomma', go to state 203
parser: Shift 'UNIQUE', go to state 469
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE]
parser: Input 'LP' in state 469
parser: Shift 'LP', go to state 19
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE LP]
parser: Input 'ID' in state 19
parser: Shift 'ID', go to state 416
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE LP ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 19.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 19.
parser: ... then shift 'sortlist', go to state 402
parser: Shift 'COMMA', go to state 95
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE LP sortlist COMMA]
parser: Input 'ID' in state 95
parser: Shift 'ID', go to state 416
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE LP sortlist COMMA ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 95.
parser: ... then shift 'expr', go to state 14
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 129
parser: Reduce 129 [sortlist ::= sortlist COMMA expr sortorder], go to state 19.
parser: ... then shift 'sortlist', go to state 402
parser: Shift 'RP', go to state 327
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE LP sortlist RP]
parser: Input 'ON' in state 327
parser: Shift 'ON', go to state 476
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE LP sortlist RP ON]
parser: Input 'CONFLICT' in state 476
parser: Shift 'CONFLICT', go to state 158
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE LP sortlist RP ON CONFLICT]
parser: Input 'REPLACE' in state 158
parser: Shift 'REPLACE', pending reduce 73
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE LP sortlist RP ON CONFLICT REPLACE]
parser: Input 'RP' with pending reduce 73
parser: Reduce 73 [resolvetype ::= REPLACE], go to state 158.
parser: ... then shift 'resolvetype', pending reduce 69
parser: Reduce 69 [onconf ::= ON CONFLICT resolvetype], go to state 327.
parser: ... then shift 'onconf', pending reduce 64
parser: Reduce 64 [tcons ::= UNIQUE LP sortlist RP onconf], go to state 203.
parser: ... then shift 'tcons', pending reduce 342
parser: Reduce 342 [conslist ::= conslist tconscomma tcons], go to state 34.
parser: ... then shift 'conslist', go to state 278
parser: Reduce 341 [conslist_opt ::= COMMA conslist], go to state 362.
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[preceding](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[preceding](8)
REG[1] =   s9[preceding](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s28[sqlite_autoinde](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:6
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =  NULL
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s28[sqlite_autoinde](8)
REG[5] =  i:6
REG[6] =  NULL
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[preceding](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[preceding](8)
REG[1] =   s9[preceding](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s28[sqlite_autoinde](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:7
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =  NULL
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s28[sqlite_autoinde](8)
REG[5] =  i:7
REG[6] =  NULL
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  49 Halt             0    0    0               00 
  14 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   14    1 (BINARY)      52 if r[1]!=r[2] goto 14
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  14 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   14    1 (BINARY)      52 if r[1]!=r[2] goto 14
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  14 Next             0    4    0               01 
  15 Halt             0    0    0               00 
parser: [[[SELECT sql FROM "main".sqlite_master WHERE type='index']]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'SEMI' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
SQL: [SELECT sql FROM "main".sqlite_master WHERE type='index']
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    3 1             01 usesStmtJournal=0
  11 String8          0    2    0 index         00 r[2]='index'
REG[2] =   t5[index](8)
  12 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          2    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =   t5[index](8)
REG[1] =   s5[table](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =   t5[index](8)
REG[1] =   s5[index](8)
   6 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   7 ResultRow        3    1    0               00 output=r[3]
REG[3] =  NULL
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =   t5[index](8)
REG[1] =   s5[table](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =   t5[index](8)
REG[1] =   s5[table](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =   t5[index](8)
REG[1] =   s5[index](8)
   6 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   7 ResultRow        3    1    0               00 output=r[3]
REG[3] =  NULL
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =   t5[index](8)
REG[1] =   s5[index](8)
   6 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   7 ResultRow        3    1    0               00 output=r[3]
REG[3] =  NULL
   8 Next             0    4    0               01 
   9 Halt             0    0    0               00 
parser: [[[SELECT'INSERT INTO vacuum_db.'||quote(name)||' SELECT*FROM"main".'||quote(name)FROM vacuum_db.sqlite_master WHERE type='table'AND coalesce(rootpage,1)>0]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'STRING' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct sclp scanpt STRING]
parser: Input 'CONCAT' in state 537
parser: Reduce 168 [term ::= STRING], go to state 77.
parser: ... then shift 'term', go to state 16
parser: Shift 'CONCAT', go to state 113
parser: Return. Stack=[SELECT distinct sclp scanpt term CONCAT]
parser: Input 'ID' in state 113
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt term CONCAT ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[SELECT distinct sclp scanpt term CONCAT ID LP]
parser: Input 'ID' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt term CONCAT ID LP distinct ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[SELECT distinct sclp scanpt term CONCAT ID LP distinct exprlist RP]
parser: Input 'CONCAT' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 113.
parser: ... then shift 'expr', go to state 146
parser: Reduce 186 [expr ::= expr CONCAT expr], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Shift 'CONCAT', go to state 113
parser: Return. Stack=[SELECT distinct sclp scanpt expr CONCAT]
parser: Input 'STRING' in state 113
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct sclp scanpt expr CONCAT STRING]
parser: Input 'CONCAT' in state 537
parser: Reduce 168 [term ::= STRING], go to state 113.
parser: ... then shift 'term', go to state 146
parser: Reduce 186 [expr ::= expr CONCAT expr], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Shift 'CONCAT', go to state 113
parser: Return. Stack=[SELECT distinct sclp scanpt expr CONCAT]
parser: Input 'ID' in state 113
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt expr CONCAT ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[SELECT distinct sclp scanpt expr CONCAT ID LP]
parser: Input 'ID' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt expr CONCAT ID LP distinct ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[SELECT distinct sclp scanpt expr CONCAT ID LP distinct exprlist RP]
parser: Input 'FROM' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 113.
parser: ... then shift 'expr', go to state 146
parser: Reduce 186 [expr ::= expr CONCAT expr], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP]
parser: Input 'ID' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA INTEGER]
parser: Input 'RP' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct exprlist RP]
parser: Input 'GT' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'GT', go to state 118
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr GT]
parser: Input 'INTEGER' in state 118
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr GT INTEGER]
parser: Input 'SEMI' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 118.
parser: ... then shift 'term', go to state 130
parser: Reduce 181 [expr ::= expr LT|GT|GE|LE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
SQL: [SELECT'INSERT INTO vacuum_db.'||quote(name)||' SELECT*FROM"main".'||quote(name)FROM vacuum_db.sqlite_master WHERE type='table'AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      2    0    3 0             01 usesStmtJournal=0
  21 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  22 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  23 String8          0    6    0 INSERT INTO vacuum_db. 00 r[6]='INSERT INTO vacuum_db.'
REG[6] =   t22[INSERT INTO vac](8)
  24 String8          0    9    0  SELECT*FROM"main". 00 r[9]=' SELECT*FROM"main".'
REG[9] =   t19[ SELECT*FROM"ma](8)
  25 Goto             0    1    0               00 
   1 OpenRead         0    1    2 4             00 root=1 iDb=2; sqlite_master
   2 Explain          2    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   19    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   18    1 (BINARY)      52 if r[1]!=r[2] goto 18
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    3    1               00 r[1]=sqlite_master.rootpage
REG[1] =  i:2
   7 NotNull          1    9    0               00 if r[1]!=NULL goto 9
REG[1] =  i:2
   9 Le               3   18    1               51 if r[1]<=r[3] goto 18
REG[3] =  i:0
REG[1] =  i:2
  10 Column           0    1    8               00 r[8]=sqlite_master.name
REG[8] =   s2[t0](8)
  11 Function0        0    8    7 quote(1)      01 r[7]=func(r[8])
REG[8] =   s2[t0](8)
REG[7] =   z4['t0'](8)
  12 Concat           7    6    5               00 r[5]=r[6]+r[7]
REG[7] =   z4['t0'](8)
REG[6] =   t22[INSERT INTO vac](8)
REG[5] =   s26[INSERT INTO vac](8)
  13 Concat           9    5    1               00 r[1]=r[5]+r[9]
REG[9] =   t19[ SELECT*FROM"ma](8)
REG[5] =   s26[INSERT INTO vac](8)
REG[1] =   s45[INSERT INTO vac](8)
  14 Column           0    1    7               00 r[7]=sqlite_master.name
REG[7] =   s2[t0](8)
  15 Function0        0    7    5 quote(1)      01 r[5]=func(r[7])
REG[7] =   s2[t0](8)
REG[5] =   z4['t0'](8)
  16 Concat           5    1    4               00 r[4]=r[1]+r[5]
REG[5] =   z4['t0'](8)
REG[1] =   s45[INSERT INTO vac](8)
REG[4] =   s49[INSERT INTO vac](8)
  17 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s49[INSERT INTO vac](8)
parser: [[[INSERT INTO vacuum_db.'t0' SELECT*FROM"main".'t0']]]
parser: Input 'INSERT' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 156
parser: Reduce 156 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 427
parser: Shift 'INTO', go to state 164
parser: Return. Stack=[with insert_cmd INTO]
parser: Input 'ID' in state 164
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 164.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with insert_cmd INTO nm DOT]
parser: Input 'STRING' in state 218
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with insert_cmd INTO nm DOT STRING]
parser: Input 'SELECT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 164.
parser: ... then shift 'xfullname', go to state 298
parser: Reduce 158 [idlist_opt ::=].
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 96
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'STRING' in state 245
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM stl_prefix nm DOT STRING]
parser: Input 'SEMI' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 152 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 150
parser: Reduce 150 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
SQL: [INSERT INTO vacuum_db.'t0' SELECT*FROM"main".'t0']
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    0    3 1             01 usesStmtJournal=0
  22 Transaction      2    1    3 0             01 usesStmtJournal=0
  23 Goto             0    1    0               00 
   1 OpenWrite        1    2    2 k(1,-)        00 root=2 iDb=2; t0
   2 OpenRead         0    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t0_2
   3 OpenWrite        1    3    2 k(2,,)        01 root=3 iDb=2; sqlite_autoindex_t0_2
   4 Rewind           0    9    0               00 
   9 Close            0    0    0               00 
  10 Close            1    0    0               00 
  11 OpenRead         0    2    0 k(1,-)        00 root=2 iDb=0; sqlite_autoindex_t0_1
  12 OpenWrite        1    2    2 k(1,-)        01 root=2 iDb=2; sqlite_autoindex_t0_1
  13 Rewind           0   18    0               00 
  18 Close            0    0    0               00 
  19 Close            1    0    0               00 
  20 Halt             0    0    0               00 
  18 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   18    1 (BINARY)      52 if r[1]!=r[2] goto 18
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  18 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   18    1 (BINARY)      52 if r[1]!=r[2] goto 18
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    3    1               00 r[1]=sqlite_master.rootpage
REG[1] =  i:4
   7 NotNull          1    9    0               00 if r[1]!=NULL goto 9
REG[1] =  i:4
   9 Le               3   18    1               51 if r[1]<=r[3] goto 18
REG[3] =  i:0
REG[1] =  i:4
  10 Column           0    1    8               00 r[8]=sqlite_master.name
REG[8] =   s4[over](8)
  11 Function         0    8    7 quote(1)      01 r[7]=func(r[8])
REG[8] =   s4[over](8)
REG[7] =   z6['over'](8)
  12 Concat           7    6    5               00 r[5]=r[6]+r[7]
REG[7] =   z6['over'](8)
REG[6] =   t22[INSERT INTO vac](8)
REG[5] =   s28[INSERT INTO vac](8)
  13 Concat           9    5    1               00 r[1]=r[5]+r[9]
REG[9] =   t19[ SELECT*FROM"ma](8)
REG[5] =   s28[INSERT INTO vac](8)
REG[1] =   s47[INSERT INTO vac](8)
  14 Column           0    1    7               00 r[7]=sqlite_master.name
REG[7] =   s4[over](8)
  15 Function         0    7    5 quote(1)      01 r[5]=func(r[7])
REG[7] =   s4[over](8)
REG[5] =   z6['over'](8)
  16 Concat           5    1    4               00 r[4]=r[1]+r[5]
REG[5] =   z6['over'](8)
REG[1] =   s47[INSERT INTO vac](8)
REG[4] =   s53[INSERT INTO vac](8)
  17 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s53[INSERT INTO vac](8)
parser: [[[INSERT INTO vacuum_db.'over' SELECT*FROM"main".'over']]]
parser: Input 'INSERT' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 156
parser: Reduce 156 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 427
parser: Shift 'INTO', go to state 164
parser: Return. Stack=[with insert_cmd INTO]
parser: Input 'ID' in state 164
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 164.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with insert_cmd INTO nm DOT]
parser: Input 'STRING' in state 218
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with insert_cmd INTO nm DOT STRING]
parser: Input 'SELECT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 164.
parser: ... then shift 'xfullname', go to state 298
parser: Reduce 158 [idlist_opt ::=].
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 96
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'STRING' in state 245
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM stl_prefix nm DOT STRING]
parser: Input 'SEMI' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 152 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 150
parser: Reduce 150 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
SQL: [INSERT INTO vacuum_db.'over' SELECT*FROM"main".'over']
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    3 1             01 usesStmtJournal=0
  13 Transaction      2    1    3 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 OpenWrite        1    4    2 1             00 root=4 iDb=2; over
   2 OpenRead         0    4    0 1             00 root=4 iDb=0; over
   3 Rewind           0   11    0               00 
   4 NewRowid         1    2    0               00 r[2]=rowid
REG[2] =  i:1
   5 RowData          0    1    1               00 r[1]=data
REG[1] =  e5[0213616263..abc]
   6 SeekEnd          1    0    0               00 
   7 Insert           1    1    2 over          39 intkey=r[2] data=r[1]
REG[1] =  e5[0213616263..abc]
REG[2] =  i:1
   8 Next             0    4    0               00 
   4 NewRowid         1    2    0               00 r[2]=rowid
REG[2] =  i:2
   5 RowData          0    1    1               00 r[1]=data
REG[1] =  e5[0213414244..ABD]
   6 SeekEnd          1    0    0               00 
   7 Insert           1    1    2 over          39 intkey=r[2] data=r[1]
REG[1] =  e5[0213414244..ABD]
REG[2] =  i:2
   8 Next             0    4    0               00 
   4 NewRowid         1    2    0               00 r[2]=rowid
REG[2] =  i:3
   5 RowData          0    1    1               00 r[1]=data
REG[1] =  e5[0213614265..aBe]
   6 SeekEnd          1    0    0               00 
   7 Insert           1    1    2 over          39 intkey=r[2] data=r[1]
REG[1] =  e5[0213614265..aBe]
REG[2] =  i:3
   8 Next             0    4    0               00 
   4 NewRowid         1    2    0               00 r[2]=rowid
REG[2] =  i:4
   5 RowData          0    1    1               00 r[1]=data
REG[1] =  e5[0213416246..AbF]
   6 SeekEnd          1    0    0               00 
   7 Insert           1    1    2 over          39 intkey=r[2] data=r[1]
REG[1] =  e5[0213416246..AbF]
REG[2] =  i:4
   8 Next             0    4    0               00 
   9 Close            0    0    0               00 
  10 Close            1    0    0               00 
  11 Halt             0    0    0               00 
  18 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   18    1 (BINARY)      52 if r[1]!=r[2] goto 18
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    3    1               00 r[1]=sqlite_master.rootpage
REG[1] =  i:5
   7 NotNull          1    9    0               00 if r[1]!=NULL goto 9
REG[1] =  i:5
   9 Le               3   18    1               51 if r[1]<=r[3] goto 18
REG[3] =  i:0
REG[1] =  i:5
  10 Column           0    1    8               00 r[8]=sqlite_master.name
REG[8] =   s9[preceding](8)
  11 Function         0    8    7 quote(1)      01 r[7]=func(r[8])
REG[8] =   s9[preceding](8)
REG[7] =   z11['preceding'](8)
  12 Concat           7    6    5               00 r[5]=r[6]+r[7]
REG[7] =   z11['preceding'](8)
REG[6] =   t22[INSERT INTO vac](8)
REG[5] =   s33[INSERT INTO vac](8)
  13 Concat           9    5    1               00 r[1]=r[5]+r[9]
REG[9] =   t19[ SELECT*FROM"ma](8)
REG[5] =   s33[INSERT INTO vac](8)
REG[1] =   s52[INSERT INTO vac](8)
  14 Column           0    1    7               00 r[7]=sqlite_master.name
REG[7] =   s9[preceding](8)
  15 Function         0    7    5 quote(1)      01 r[5]=func(r[7])
REG[7] =   s9[preceding](8)
REG[5] =   z11['preceding'](8)
  16 Concat           5    1    4               00 r[4]=r[1]+r[5]
REG[5] =   z11['preceding'](8)
REG[1] =   s52[INSERT INTO vac](8)
REG[4] =   s63[INSERT INTO vac](8)
  17 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s63[INSERT INTO vac](8)
parser: [[[INSERT INTO vacuum_db.'preceding' SELECT*FROM"main".'preceding']]]
parser: Input 'INSERT' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 156
parser: Reduce 156 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 427
parser: Shift 'INTO', go to state 164
parser: Return. Stack=[with insert_cmd INTO]
parser: Input 'ID' in state 164
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 164.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with insert_cmd INTO nm DOT]
parser: Input 'STRING' in state 218
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with insert_cmd INTO nm DOT STRING]
parser: Input 'SELECT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 164.
parser: ... then shift 'xfullname', go to state 298
parser: Reduce 158 [idlist_opt ::=].
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 96
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'STRING' in state 245
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM stl_prefix nm DOT STRING]
parser: Input 'SEMI' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 152 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 150
parser: Reduce 150 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
SQL: [INSERT INTO vacuum_db.'preceding' SELECT*FROM"main".'preceding']
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    0    3 1             01 usesStmtJournal=0
  31 Transaction      2    1    3 0             01 usesStmtJournal=0
  32 Goto             0    1    0               00 
   1 OpenWrite        1    5    2 1             00 root=5 iDb=2; preceding
   2 OpenRead         0    5    0 1             00 root=5 iDb=0; preceding
   3 Rewind           0   29    0               00 
  29 Halt             0    0    0               00 
  18 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   18    1 (BINARY)      52 if r[1]!=r[2] goto 18
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  18 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   18    1 (BINARY)      52 if r[1]!=r[2] goto 18
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  18 Next             0    4    0               01 
  19 Halt             0    0    0               00 
parser: [[[INSERT INTO vacuum_db.sqlite_master SELECT*FROM "main".sqlite_master WHERE type IN('view','trigger') OR(type='table'AND rootpage=0)]]]
parser: Input 'INSERT' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 156
parser: Reduce 156 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 427
parser: Shift 'INTO', go to state 164
parser: Return. Stack=[with insert_cmd INTO]
parser: Input 'ID' in state 164
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 164.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with insert_cmd INTO nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO nm DOT ID]
parser: Input 'SELECT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 164.
parser: ... then shift 'xfullname', go to state 298
parser: Reduce 158 [idlist_opt ::=].
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 96
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE ID]
parser: Input 'IN' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'IN', pending reduce 200
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr IN]
parser: Input 'LP' with pending reduce 200
parser: Reduce 200 [in_op ::= IN], go to state 63.
parser: ... then shift 'in_op', go to state 209
parser: Shift 'LP', go to state 3
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr in_op LP]
parser: Input 'STRING' in state 3
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr in_op LP STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 3.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 3.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr in_op LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr in_op LP nexprlist COMMA STRING]
parser: Input 'RP' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 3.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 3.
parser: ... then shift 'exprlist', go to state 519
parser: Shift 'RP', pending reduce 202
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr in_op LP exprlist RP]
parser: Input 'OR' with pending reduce 202
parser: Reduce 202 [expr ::= expr in_op LP exprlist RP], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'OR', go to state 119
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr OR]
parser: Input 'LP' in state 119
parser: Shift 'LP', go to state 4
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr OR LP]
parser: Input 'ID' in state 4
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr OR LP ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 4.
parser: ... then shift 'expr', go to state 50
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr OR LP expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr OR LP expr EQ STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 4.
parser: ... then shift 'expr', go to state 50
parser: Shift 'AND', go to state 120
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr OR LP expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr OR LP expr AND ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr OR LP expr AND expr EQ]
parser: Input 'INTEGER' in state 117
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr OR LP expr AND expr EQ INTEGER]
parser: Input 'RP' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 4.
parser: ... then shift 'expr', go to state 50
parser: Shift 'RP', pending reduce 162
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr OR LP expr RP]
parser: Input 'SEMI' with pending reduce 162
parser: Reduce 162 [expr ::= LP expr RP], go to state 119.
parser: ... then shift 'expr', go to state 74
parser: Reduce 180 [expr ::= expr OR expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 152 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 150
parser: Reduce 150 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
SQL: [INSERT INTO vacuum_db.sqlite_master SELECT*FROM "main".sqlite_master WHERE type IN('view','trigger') OR(type='table'AND rootpage=0)]
VDBE Trace:
   0 Init             0   29    0               00 Start at 29
  29 Transaction      0    0    3 1             01 usesStmtJournal=0
  30 Transaction      2    1    3 0             01 usesStmtJournal=0
  31 String8          0    9    0 view          00 r[9]='view'
REG[9] =   t4[view](8)
  32 String8          0   10    0 trigger       00 r[10]='trigger'
REG[10] =   t7[trigger](8)
  33 String8          0   12    0 table         00 r[12]='table'
REG[12] =   t5[table](8)
  34 Integer          0   13    0               00 r[13]=0
REG[13] =  i:0
  35 Goto             0    1    0               00 
   1 InitCoroutine    7   22    2               00 
  22 OpenWrite        2    1    2 5             00 root=1 iDb=2; sqlite_master
  23 Yield            7   28    0               00 
REG[7] =  i:1
REG[7] =  i:23
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   21    0               00 
   5 Noop             0    0    0               00 begin IN expr
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   7 Eq               8    9    9 (BINARY)      42 if r[9]==r[8] goto 9
REG[8] =   s5[table](8)
REG[9] =   t4[view](8)
   8 Ne               8   10   10 (BINARY)      52 if r[10]!=r[8] goto 10; end IN expr
REG[8] =   s5[table](8)
REG[10] =   t7[trigger](8)
  10 Column           0    0   11               00 r[11]=sqlite_master.type
REG[11] =   s5[table](8)
  11 Ne              12   20   11 (BINARY)      52 if r[11]!=r[12] goto 20
REG[12] =   t5[table](8)
REG[11] =   s5[table](8)
  12 Column           0    3   11               00 r[11]=sqlite_master.rootpage
REG[11] =  i:2
  13 Ne              13   20   11 (BINARY)      54 if r[11]!=r[13] goto 20
REG[13] =  i:0
REG[11] =  i:2
  20 Next             0    5    0               01 
   5 Noop             0    0    0               00 begin IN expr
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   7 Eq               8    9    9 (BINARY)      42 if r[9]==r[8] goto 9
REG[8] =   s5[index](8)
REG[9] =   t4[view](8)
   8 Ne               8   10   10 (BINARY)      52 if r[10]!=r[8] goto 10; end IN expr
REG[8] =   s5[index](8)
REG[10] =   t7[trigger](8)
  10 Column           0    0   11               00 r[11]=sqlite_master.type
REG[11] =   s5[index](8)
  11 Ne              12   20   11 (BINARY)      52 if r[11]!=r[12] goto 20
REG[12] =   t5[table](8)
REG[11] =   s5[index](8)
  20 Next             0    5    0               01 
   5 Noop             0    0    0               00 begin IN expr
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   7 Eq               8    9    9 (BINARY)      42 if r[9]==r[8] goto 9
REG[8] =   s5[table](8)
REG[9] =   t4[view](8)
   8 Ne               8   10   10 (BINARY)      52 if r[10]!=r[8] goto 10; end IN expr
REG[8] =   s5[table](8)
REG[10] =   t7[trigger](8)
  10 Column           0    0   11               00 r[11]=sqlite_master.type
REG[11] =   s5[table](8)
  11 Ne              12   20   11 (BINARY)      52 if r[11]!=r[12] goto 20
REG[12] =   t5[table](8)
REG[11] =   s5[table](8)
  12 Column           0    3   11               00 r[11]=sqlite_master.rootpage
REG[11] =  i:4
  13 Ne              13   20   11 (BINARY)      54 if r[11]!=r[13] goto 20
REG[13] =  i:0
REG[11] =  i:4
  20 Next             0    5    0               01 
   5 Noop             0    0    0               00 begin IN expr
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   7 Eq               8    9    9 (BINARY)      42 if r[9]==r[8] goto 9
REG[8] =   s5[table](8)
REG[9] =   t4[view](8)
   8 Ne               8   10   10 (BINARY)      52 if r[10]!=r[8] goto 10; end IN expr
REG[8] =   s5[table](8)
REG[10] =   t7[trigger](8)
  10 Column           0    0   11               00 r[11]=sqlite_master.type
REG[11] =   s5[table](8)
  11 Ne              12   20   11 (BINARY)      52 if r[11]!=r[12] goto 20
REG[12] =   t5[table](8)
REG[11] =   s5[table](8)
  12 Column           0    3   11               00 r[11]=sqlite_master.rootpage
REG[11] =  i:5
  13 Ne              13   20   11 (BINARY)      54 if r[11]!=r[13] goto 20
REG[13] =  i:0
REG[11] =  i:5
  20 Next             0    5    0               01 
   5 Noop             0    0    0               00 begin IN expr
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   7 Eq               8    9    9 (BINARY)      42 if r[9]==r[8] goto 9
REG[8] =   s5[index](8)
REG[9] =   t4[view](8)
   8 Ne               8   10   10 (BINARY)      52 if r[10]!=r[8] goto 10; end IN expr
REG[8] =   s5[index](8)
REG[10] =   t7[trigger](8)
  10 Column           0    0   11               00 r[11]=sqlite_master.type
REG[11] =   s5[index](8)
  11 Ne              12   20   11 (BINARY)      52 if r[11]!=r[12] goto 20
REG[12] =   t5[table](8)
REG[11] =   s5[index](8)
  20 Next             0    5    0               01 
   5 Noop             0    0    0               00 begin IN expr
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   7 Eq               8    9    9 (BINARY)      42 if r[9]==r[8] goto 9
REG[8] =   s5[index](8)
REG[9] =   t4[view](8)
   8 Ne               8   10   10 (BINARY)      52 if r[10]!=r[8] goto 10; end IN expr
REG[8] =   s5[index](8)
REG[10] =   t7[trigger](8)
  10 Column           0    0   11               00 r[11]=sqlite_master.type
REG[11] =   s5[index](8)
  11 Ne              12   20   11 (BINARY)      52 if r[11]!=r[12] goto 20
REG[12] =   t5[table](8)
REG[11] =   s5[index](8)
  20 Next             0    5    0               01 
  21 EndCoroutine     7    0    0               00 
REG[7] =  i:23
  28 Halt             0    0    0               00 
   2 Halt             0    0    0               00 
parser: [[[SELECT typeof( CAST(-1.99999 AS INTEGER) ),  CAST(-1.99999 AS INTEGER) 
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'keels',nullif('keels','keels'),'CLC')
;;PRAGMA writable_schema = RESET;SELECT typeof( CAST(2e+50 AS INT) ),  CAST(2e+50 AS INT) 
;SELECT following FROM over
    WHERE following IN (SELECT following FROM over WHERE following<5) OR following==512
    ORDER BY following
  
;;
;SELECT following FROM over WHERE following IN (5);SELECT typeof(CAST('-9.223372036e15' AS NUMERIC)) AS type, printf('%.5e',CAST('-9.223372036e15' AS NUMERIC)) AS value
;SELECT typeof( CAST('-9223372036854775809' AS numeric) ),  CAST('-9223372036854775809' AS numeric) 
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kennel',nullif('kennel','kennel'),'CAML')
;;SELECT * FROM preceding;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kennels',nullif('kennels','kennels'),'CAMLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kerchiefs',nullif('kerchiefs','kerchiefs'),'CRCABC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kernel',nullif('kernel','kernel'),'CRML')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kerosene',nullif('kerosene','kerosene'),'CRCAMA')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,c0) VALUES(1,0,'keystrokes',nullif('keystrokes','keystrokes'),'CACDRCAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kicked',nullif('kicked','kicked'),'CACAD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kickers',nullif('kickers','kickers'),'CACRC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kidnap',nullif('kidnap','kidnap'),'CADMAB')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'killingly',nullif('killingly','killingly'),'CLMCL')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobits',nullif('kilobits','kilobits'),'CLBADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobytes',nullif('kilobytes','kilobytes'),'CLBADAC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilovolt',nullif('kilovolt','kilovolt'),'CLBLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilowatt',nullif('kilowatt','kilowatt'),'CLBAD')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,v0) VALUES(1,0,'kindest',nullif('kindest','kindest'),'CAMDACD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindles',nullif('kindles','kindles'),'CAMDLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindred',nullif('kindred','kindred'),'CAMDRD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kinetic',nullif('kinetic','kinetic'),'CAMADAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kisser',nullif('kisser','kisser'),'CACR')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kit',nullif('kit','kit'),'CAD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kiting',nullif('kiting','kiting'),'CADAMC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kits',nullif('kits','kits'),'CADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kittenish',nullif('kittenish','kittenish'),'CADAMAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'knee',nullif('knee','knee'),'MA')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kneeled',nullif('kneeled','kneeled'),'MLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knifing',nullif('knifing','knifing'),'MABAMC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'knolls',nullif('knolls','knolls'),'MLC')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'knowhow',nullif('knowhow','knowhow'),'MABAB')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knowledgeable',nullif('knowledgeable','knowledgeable'),'MABLCABL')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'known',nullif('known','known'),'MABM')
;SELECT t1, t1, t1, coalesce(t1,t1)  FROM "main"."preceding" WHERE t1=0 AND t1>=?1 AND t1<?2
;;CREATE VIRTUAL TABLE t4 USING spellfix1;INSERT OR IGNORE INTO "main"."over"(following,following,following,following,following,following) VALUES(3,1,0,'Zeus',nullif('zeus','Zeus'),'CAC')
;;SELECT t1, t1, NULL, t1, t1 FROM "main"."preceding" WHERE rowid=?
;UPDATE OR IGNORE "main"."t0" SET v0=3, v0=1, v0=0, v0='Apollo', v0=nullif('apollo','Apollo'), v0='ABL' WHERE v0=2
;]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP]
parser: Input 'CAST' in state 266
parser: FALLBACK CAST => ID
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'CAST', go to state 530
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct CAST]
parser: Input 'LP' in state 530
parser: Shift 'LP', go to state 106
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct CAST LP]
parser: Input 'MINUS' in state 106
parser: Shift 'MINUS', go to state 103
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct CAST LP MINUS]
parser: Input 'FLOAT' in state 103
parser: Shift 'FLOAT', pending reduce 167
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct CAST LP MINUS FLOAT]
parser: Input 'AS' with pending reduce 167
parser: Reduce 167 [term ::= NULL|FLOAT|BLOB], go to state 103.
parser: ... then shift 'term', go to state 147
parser: Reduce 196 [expr ::= PLUS|MINUS expr], go to state 106.
parser: ... then shift 'expr', go to state 53
parser: Shift 'AS', go to state 193
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct CAST LP expr AS]
parser: Input 'ID' in state 193
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct CAST LP expr AS ID]
parser: Input 'RP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 193.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 193.
parser: ... then shift 'typetoken', go to state 528
parser: Shift 'RP', pending reduce 172
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct CAST LP expr AS typetoken RP]
parser: Input 'RP' with pending reduce 172
parser: Reduce 172 [expr ::= CAST LP expr AS typetoken RP], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct exprlist RP]
parser: Input 'COMMA' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'CAST' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: FALLBACK CAST => ID
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'CAST', go to state 530
parser: Return. Stack=[SELECT distinct sclp scanpt CAST]
parser: Input 'LP' in state 530
parser: Shift 'LP', go to state 106
parser: Return. Stack=[SELECT distinct sclp scanpt CAST LP]
parser: Input 'MINUS' in state 106
parser: Shift 'MINUS', go to state 103
parser: Return. Stack=[SELECT distinct sclp scanpt CAST LP MINUS]
parser: Input 'FLOAT' in state 103
parser: Shift 'FLOAT', pending reduce 167
parser: Return. Stack=[SELECT distinct sclp scanpt CAST LP MINUS FLOAT]
parser: Input 'AS' with pending reduce 167
parser: Reduce 167 [term ::= NULL|FLOAT|BLOB], go to state 103.
parser: ... then shift 'term', go to state 147
parser: Reduce 196 [expr ::= PLUS|MINUS expr], go to state 106.
parser: ... then shift 'expr', go to state 53
parser: Shift 'AS', go to state 193
parser: Return. Stack=[SELECT distinct sclp scanpt CAST LP expr AS]
parser: Input 'ID' in state 193
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[SELECT distinct sclp scanpt CAST LP expr AS ID]
parser: Input 'RP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 193.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 193.
parser: ... then shift 'typetoken', go to state 528
parser: Shift 'RP', pending reduce 172
parser: Return. Stack=[SELECT distinct sclp scanpt CAST LP expr AS typetoken RP]
parser: Input 'SEMI' with pending reduce 172
parser: Reduce 172 [expr ::= CAST LP expr AS typetoken RP], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Reduce 100 [from ::=].
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
SQL: [SELECT typeof( CAST(-1.99999 AS INTEGER) ),  CAST(-1.99999 AS INTEGER) 
;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Real             0    4    0 -1.99999      00 r[4]=-1.99999
REG[4] =  r:-1.99999
   8 Cast             4   68    0               00 affinity(r[4])
REG[4] =  r:-1.99999
   9 Function0        1    4    3 typeof(1)     01 r[3]=func(r[4])
REG[4] =  i:-1
REG[3] =   t7[integer](8)
  10 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             3    1    0               00 r[1]=r[3]
REG[1] =   t7[integer](8)
   3 Real             0    2    0 -1.99999      00 r[2]=-1.99999
REG[2] =  r:-1.99999
   4 Cast             2   68    0               00 affinity(r[2])
REG[2] =  r:-1.99999
   5 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =   t7[integer](8)
REG[2] =  i:-1
   6 Halt             0    0    0               00 
parser: [[[INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'keels',nullif('keels','keels'),'CLC')
;;PRAGMA writable_schema = RESET;SELECT typeof( CAST(2e+50 AS INT) ),  CAST(2e+50 AS INT) 
;SELECT following FROM over
    WHERE following IN (SELECT following FROM over WHERE following<5) OR following==512
    ORDER BY following
  
;;
;SELECT following FROM over WHERE following IN (5);SELECT typeof(CAST('-9.223372036e15' AS NUMERIC)) AS type, printf('%.5e',CAST('-9.223372036e15' AS NUMERIC)) AS value
;SELECT typeof( CAST('-9223372036854775809' AS numeric) ),  CAST('-9223372036854775809' AS numeric) 
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kennel',nullif('kennel','kennel'),'CAML')
;;SELECT * FROM preceding;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kennels',nullif('kennels','kennels'),'CAMLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kerchiefs',nullif('kerchiefs','kerchiefs'),'CRCABC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kernel',nullif('kernel','kernel'),'CRML')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kerosene',nullif('kerosene','kerosene'),'CRCAMA')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,c0) VALUES(1,0,'keystrokes',nullif('keystrokes','keystrokes'),'CACDRCAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kicked',nullif('kicked','kicked'),'CACAD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kickers',nullif('kickers','kickers'),'CACRC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kidnap',nullif('kidnap','kidnap'),'CADMAB')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'killingly',nullif('killingly','killingly'),'CLMCL')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobits',nullif('kilobits','kilobits'),'CLBADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobytes',nullif('kilobytes','kilobytes'),'CLBADAC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilovolt',nullif('kilovolt','kilovolt'),'CLBLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilowatt',nullif('kilowatt','kilowatt'),'CLBAD')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,v0) VALUES(1,0,'kindest',nullif('kindest','kindest'),'CAMDACD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindles',nullif('kindles','kindles'),'CAMDLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindred',nullif('kindred','kindred'),'CAMDRD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kinetic',nullif('kinetic','kinetic'),'CAMADAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kisser',nullif('kisser','kisser'),'CACR')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kit',nullif('kit','kit'),'CAD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kiting',nullif('kiting','kiting'),'CADAMC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kits',nullif('kits','kits'),'CADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kittenish',nullif('kittenish','kittenish'),'CADAMAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'knee',nullif('knee','knee'),'MA')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kneeled',nullif('kneeled','kneeled'),'MLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knifing',nullif('knifing','knifing'),'MABAMC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'knolls',nullif('knolls','knolls'),'MLC')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'knowhow',nullif('knowhow','knowhow'),'MABAB')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knowledgeable',nullif('knowledgeable','knowledgeable'),'MABLCABL')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'known',nullif('known','known'),'MABM')
;SELECT t1, t1, t1, coalesce(t1,t1)  FROM "main"."preceding" WHERE t1=0 AND t1>=?1 AND t1<?2
;;CREATE VIRTUAL TABLE t4 USING spellfix1;INSERT OR IGNORE INTO "main"."over"(following,following,following,following,following,following) VALUES(3,1,0,'Zeus',nullif('zeus','Zeus'),'CAC')
;;SELECT t1, t1, NULL, t1, t1 FROM "main"."preceding" WHERE rowid=?
;UPDATE OR IGNORE "main"."t0" SET v0=3, v0=1, v0=0, v0='Apollo', v0=nullif('apollo','Apollo'), v0='ABL' WHERE v0=2
;]]]
parser: Input 'INSERT' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 156
parser: Reduce 156 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 427
parser: Shift 'INTO', go to state 164
parser: Return. Stack=[with insert_cmd INTO]
parser: Input 'ID' in state 164
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 164.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with insert_cmd INTO nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO nm DOT ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 164.
parser: ... then shift 'xfullname', go to state 298
parser: Shift 'LP', go to state 173
parser: Return. Stack=[with insert_cmd INTO xfullname LP]
parser: Input 'FOLLOWING' in state 173
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname LP FOLLOWING]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 173.
parser: ... then shift 'nm', pending reduce 161
parser: Reduce 161 [idlist ::= nm], go to state 173.
parser: ... then shift 'idlist', go to state 397
parser: Shift 'COMMA', go to state 241
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA]
parser: Input 'FOLLOWING' in state 241
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA FOLLOWING]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 241.
parser: ... then shift 'nm', pending reduce 160
parser: Reduce 160 [idlist ::= idlist COMMA nm], go to state 173.
parser: ... then shift 'idlist', go to state 397
parser: Shift 'COMMA', go to state 241
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA]
parser: Input 'FOLLOWING' in state 241
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA FOLLOWING]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 241.
parser: ... then shift 'nm', pending reduce 160
parser: Reduce 160 [idlist ::= idlist COMMA nm], go to state 173.
parser: ... then shift 'idlist', go to state 397
parser: Shift 'COMMA', go to state 241
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA]
parser: Input 'FOLLOWING' in state 241
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA FOLLOWING]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 241.
parser: ... then shift 'nm', pending reduce 160
parser: Reduce 160 [idlist ::= idlist COMMA nm], go to state 173.
parser: ... then shift 'idlist', go to state 397
parser: Shift 'COMMA', go to state 241
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA]
parser: Input 'FOLLOWING' in state 241
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA FOLLOWING]
parser: Input 'RP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 241.
parser: ... then shift 'nm', pending reduce 160
parser: Reduce 160 [idlist ::= idlist COMMA nm], go to state 173.
parser: ... then shift 'idlist', go to state 397
parser: Shift 'RP', pending reduce 159
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist RP]
parser: Input 'VALUES' with pending reduce 159
parser: Reduce 159 [idlist_opt ::= LP idlist RP], go to state 298.
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'VALUES', go to state 526
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES]
parser: Input 'LP' in state 526
parser: Shift 'LP', go to state 28
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP]
parser: Input 'INTEGER' in state 28
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP INTEGER]
parser: Input 'COMMA' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 28.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA INTEGER]
parser: Input 'COMMA' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'ID' in state 107
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA ID LP]
parser: Input 'STRING' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA ID LP distinct STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 11.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA ID LP distinct nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA ID LP distinct nexprlist COMMA STRING]
parser: Input 'RP' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA ID LP distinct exprlist RP]
parser: Input 'COMMA' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'RP' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'RP', pending reduce 89
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist RP]
parser: Input 'SEMI' with pending reduce 89
parser: Reduce 89 [values ::= VALUES LP nexprlist RP], go to state 35.
parser: ... then shift 'values', go to state 532
parser: Reduce 348 [oneselect ::= values], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 152 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 150
parser: Reduce 150 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 0.
parser: [[[CREATE TABLE x(type text,name text,tbl_name text,rootpage int,sql text)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'RP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'ORDER' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    4 2             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t0](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s109[CREATE TABLE t0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t0](8)
REG[2] =  i:2
REG[3] =   s109[CREATE TABLE t0](8)
parser: [[[CREATE TABLE t0 (
        c0 INTEGER PRIMARY KEY DESC, 
        v0 UNIQUE DEFAULT NULL
      ) WITHOUT ROWID ]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'PRIMARY' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Shift 'PRIMARY', go to state 475
parser: Return. Stack=[create_table LP columnname carglist PRIMARY]
parser: Input 'KEY' in state 475
parser: Shift 'KEY', go to state 280
parser: Return. Stack=[create_table LP columnname carglist PRIMARY KEY]
parser: Input 'DESC' in state 280
parser: Shift 'DESC', pending reduce 132
parser: Return. Stack=[create_table LP columnname carglist PRIMARY KEY DESC]
parser: Input 'COMMA' with pending reduce 132
parser: Reduce 132 [sortorder ::= DESC], go to state 280.
parser: ... then shift 'sortorder', go to state 333
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', go to state 332
parser: Reduce 42 [autoinc ::=].
parser: ... then shift 'autoinc', pending reduce 36
parser: Reduce 36 [ccons ::= PRIMARY KEY sortorder onconf autoinc], go to state 150.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 376.
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'UNIQUE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'UNIQUE', go to state 331
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist UNIQUE]
parser: Input 'DEFAULT' in state 331
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 37
parser: Reduce 37 [ccons ::= UNIQUE onconf], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Shift 'DEFAULT', go to state 267
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist DEFAULT]
parser: Input 'NULL' in state 267
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 199
parser: Shift 'NULL', pending reduce 167
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist DEFAULT scanpt NULL]
parser: Input 'RP' with pending reduce 167
parser: Reduce 167 [term ::= NULL|FLOAT|BLOB], go to state 199.
parser: ... then shift 'term', go to state 382
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', pending reduce 30
parser: Reduce 30 [ccons ::= DEFAULT scanpt term scanpt], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'WITHOUT' in state 361
parser: Shift 'WITHOUT', go to state 251
parser: Return. Stack=[create_table LP columnlist conslist_opt RP WITHOUT]
parser: Input 'ID' in state 251
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist conslist_opt RP WITHOUT ID]
parser: Input 'SEMI' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 251.
parser: ... then shift 'nm', pending reduce 22
parser: Reduce 22 [table_options ::= WITHOUT nm], go to state 361.
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s21[sqlite_autoinde](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s21[sqlite_autoinde](8)
REG[2] =  i:3
REG[3] =  NULL
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[over](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s33[CREATE TABLE ov](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s4[over](8)
REG[2] =  i:4
REG[3] =   s33[CREATE TABLE ov](8)
parser: [[[CREATE TABLE over(following TEXT)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'FOLLOWING' in state 139
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', pending reduce 331
parser: Return. Stack=[create_table LP FOLLOWING]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'RP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s9[preceding](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s104[CREATE TABLE pr](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s9[preceding](8)
REG[2] =  i:5
REG[3] =   s104[CREATE TABLE pr](8)
parser: [[[CREATE TABLE preceding(
    t1 PRIMARY KEY,
    UNIQUE(t1,t1),
    UNIQUE(t1,t1) ON CONFLICT REPLACE
  )]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'PRECEDING' in state 324
parser: FALLBACK PRECEDING => ID
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: FALLBACK PRECEDING => ID
parser: Shift 'PRECEDING', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists PRECEDING]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'PRIMARY' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Shift 'PRIMARY', go to state 475
parser: Return. Stack=[create_table LP columnname carglist PRIMARY]
parser: Input 'KEY' in state 475
parser: Shift 'KEY', go to state 280
parser: Return. Stack=[create_table LP columnname carglist PRIMARY KEY]
parser: Input 'COMMA' in state 280
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', go to state 333
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', go to state 332
parser: Reduce 42 [autoinc ::=].
parser: ... then shift 'autoinc', pending reduce 36
parser: Reduce 36 [ccons ::= PRIMARY KEY sortorder onconf autoinc], go to state 150.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 376.
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'UNIQUE' in state 34
parser: Shift 'UNIQUE', go to state 469
parser: Return. Stack=[create_table LP columnlist COMMA UNIQUE]
parser: Input 'LP' in state 469
parser: Shift 'LP', go to state 19
parser: Return. Stack=[create_table LP columnlist COMMA UNIQUE LP]
parser: Input 'ID' in state 19
parser: Shift 'ID', go to state 416
parser: Return. Stack=[create_table LP columnlist COMMA UNIQUE LP ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 19.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 19.
parser: ... then shift 'sortlist', go to state 402
parser: Shift 'COMMA', go to state 95
parser: Return. Stack=[create_table LP columnlist COMMA UNIQUE LP sortlist COMMA]
parser: Input 'ID' in state 95
parser: Shift 'ID', go to state 416
parser: Return. Stack=[create_table LP columnlist COMMA UNIQUE LP sortlist COMMA ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 95.
parser: ... then shift 'expr', go to state 14
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 129
parser: Reduce 129 [sortlist ::= sortlist COMMA expr sortorder], go to state 19.
parser: ... then shift 'sortlist', go to state 402
parser: Shift 'RP', go to state 327
parser: Return. Stack=[create_table LP columnlist COMMA UNIQUE LP sortlist RP]
parser: Input 'COMMA' in state 327
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 64
parser: Reduce 64 [tcons ::= UNIQUE LP sortlist RP onconf], go to state 34.
parser: ... then shift 'tcons', go to state 278
parser: Shift 'COMMA', pending reduce 61
parser: Return. Stack=[create_table LP columnlist COMMA tcons COMMA]
parser: Input 'UNIQUE' with pending reduce 61
parser: Reduce 61 [tconscomma ::= COMMA], go to state 278.
parser: ... then shift 'tconscomma', go to state 203
parser: Shift 'UNIQUE', go to state 469
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE]
parser: Input 'LP' in state 469
parser: Shift 'LP', go to state 19
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE LP]
parser: Input 'ID' in state 19
parser: Shift 'ID', go to state 416
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE LP ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 19.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 19.
parser: ... then shift 'sortlist', go to state 402
parser: Shift 'COMMA', go to state 95
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE LP sortlist COMMA]
parser: Input 'ID' in state 95
parser: Shift 'ID', go to state 416
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE LP sortlist COMMA ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 95.
parser: ... then shift 'expr', go to state 14
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 129
parser: Reduce 129 [sortlist ::= sortlist COMMA expr sortorder], go to state 19.
parser: ... then shift 'sortlist', go to state 402
parser: Shift 'RP', go to state 327
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE LP sortlist RP]
parser: Input 'ON' in state 327
parser: Shift 'ON', go to state 476
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE LP sortlist RP ON]
parser: Input 'CONFLICT' in state 476
parser: Shift 'CONFLICT', go to state 158
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE LP sortlist RP ON CONFLICT]
parser: Input 'REPLACE' in state 158
parser: Shift 'REPLACE', pending reduce 73
parser: Return. Stack=[create_table LP columnlist COMMA tcons tconscomma UNIQUE LP sortlist RP ON CONFLICT REPLACE]
parser: Input 'RP' with pending reduce 73
parser: Reduce 73 [resolvetype ::= REPLACE], go to state 158.
parser: ... then shift 'resolvetype', pending reduce 69
parser: Reduce 69 [onconf ::= ON CONFLICT resolvetype], go to state 327.
parser: ... then shift 'onconf', pending reduce 64
parser: Reduce 64 [tcons ::= UNIQUE LP sortlist RP onconf], go to state 203.
parser: ... then shift 'tcons', pending reduce 342
parser: Reduce 342 [conslist ::= conslist tconscomma tcons], go to state 34.
parser: ... then shift 'conslist', go to state 278
parser: Reduce 341 [conslist_opt ::= COMMA conslist], go to state 362.
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s28[sqlite_autoinde](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:6
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s28[sqlite_autoinde](8)
REG[2] =  i:6
REG[3] =  NULL
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s28[sqlite_autoinde](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:7
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s28[sqlite_autoinde](8)
REG[2] =  i:7
REG[3] =  NULL
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
parser: [[[CREATE TABLE x(type text,name text,tbl_name text,rootpage int,sql text)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'RP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT name, rootpage, sql FROM "temp".sqlite_temp_master ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'ORDER' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      1    0    0 2             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
SQL: [INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'keels',nullif('keels','keels'),'CLC')
;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    1    4 2             01 usesStmtJournal=0
   8 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 1             00 root=4 iDb=0; over
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 MakeRecord       2    1    3 B             00 r[3]=mkrec(r[2])
REG[3] =  s3[020F31..1]
   5 Insert           0    3    1 over          39 intkey=r[1] data=r[3]
REG[3] =  s3[020F31..1]
REG[1] =  i:5
   6 Halt             0    0    0               00 
parser: [[[;PRAGMA writable_schema = RESET;SELECT typeof( CAST(2e+50 AS INT) ),  CAST(2e+50 AS INT) 
;SELECT following FROM over
    WHERE following IN (SELECT following FROM over WHERE following<5) OR following==512
    ORDER BY following
  
;;
;SELECT following FROM over WHERE following IN (5);SELECT typeof(CAST('-9.223372036e15' AS NUMERIC)) AS type, printf('%.5e',CAST('-9.223372036e15' AS NUMERIC)) AS value
;SELECT typeof( CAST('-9223372036854775809' AS numeric) ),  CAST('-9223372036854775809' AS numeric) 
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kennel',nullif('kennel','kennel'),'CAML')
;;SELECT * FROM preceding;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kennels',nullif('kennels','kennels'),'CAMLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kerchiefs',nullif('kerchiefs','kerchiefs'),'CRCABC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kernel',nullif('kernel','kernel'),'CRML')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kerosene',nullif('kerosene','kerosene'),'CRCAMA')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,c0) VALUES(1,0,'keystrokes',nullif('keystrokes','keystrokes'),'CACDRCAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kicked',nullif('kicked','kicked'),'CACAD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kickers',nullif('kickers','kickers'),'CACRC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kidnap',nullif('kidnap','kidnap'),'CADMAB')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'killingly',nullif('killingly','killingly'),'CLMCL')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobits',nullif('kilobits','kilobits'),'CLBADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobytes',nullif('kilobytes','kilobytes'),'CLBADAC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilovolt',nullif('kilovolt','kilovolt'),'CLBLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilowatt',nullif('kilowatt','kilowatt'),'CLBAD')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,v0) VALUES(1,0,'kindest',nullif('kindest','kindest'),'CAMDACD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindles',nullif('kindles','kindles'),'CAMDLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindred',nullif('kindred','kindred'),'CAMDRD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kinetic',nullif('kinetic','kinetic'),'CAMADAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kisser',nullif('kisser','kisser'),'CACR')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kit',nullif('kit','kit'),'CAD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kiting',nullif('kiting','kiting'),'CADAMC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kits',nullif('kits','kits'),'CADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kittenish',nullif('kittenish','kittenish'),'CADAMAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'knee',nullif('knee','knee'),'MA')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kneeled',nullif('kneeled','kneeled'),'MLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knifing',nullif('knifing','knifing'),'MABAMC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'knolls',nullif('knolls','knolls'),'MLC')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'knowhow',nullif('knowhow','knowhow'),'MABAB')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knowledgeable',nullif('knowledgeable','knowledgeable'),'MABLCABL')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'known',nullif('known','known'),'MABM')
;SELECT t1, t1, t1, coalesce(t1,t1)  FROM "main"."preceding" WHERE t1=0 AND t1>=?1 AND t1<?2
;;CREATE VIRTUAL TABLE t4 USING spellfix1;INSERT OR IGNORE INTO "main"."over"(following,following,following,following,following,following) VALUES(3,1,0,'Zeus',nullif('zeus','Zeus'),'CAC')
;;SELECT t1, t1, NULL, t1, t1 FROM "main"."preceding" WHERE rowid=?
;UPDATE OR IGNORE "main"."t0" SET v0=3, v0=1, v0=0, v0='Apollo', v0=nullif('apollo','Apollo'), v0='ABL' WHERE v0=2
;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'PRAGMA' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'PRAGMA', go to state 215
parser: Return. Stack=[ecmd PRAGMA]
parser: Input 'ID' in state 215
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd PRAGMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 215.
parser: ... then shift 'nm', go to state 295
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 392
parser: Shift 'EQ', go to state 31
parser: Return. Stack=[ecmd PRAGMA nm dbnm EQ]
parser: Input 'ID' in state 31
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd PRAGMA nm dbnm EQ ID]
parser: Input 'SEMI' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 31.
parser: ... then shift 'nm', pending reduce 234
parser: Reduce 234 [cmd ::= PRAGMA nm dbnm EQ nmnum], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
SQL: [;PRAGMA writable_schema = RESET;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
parser: [[[SELECT typeof( CAST(2e+50 AS INT) ),  CAST(2e+50 AS INT) 
;SELECT following FROM over
    WHERE following IN (SELECT following FROM over WHERE following<5) OR following==512
    ORDER BY following
  
;;
;SELECT following FROM over WHERE following IN (5);SELECT typeof(CAST('-9.223372036e15' AS NUMERIC)) AS type, printf('%.5e',CAST('-9.223372036e15' AS NUMERIC)) AS value
;SELECT typeof( CAST('-9223372036854775809' AS numeric) ),  CAST('-9223372036854775809' AS numeric) 
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kennel',nullif('kennel','kennel'),'CAML')
;;SELECT * FROM preceding;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kennels',nullif('kennels','kennels'),'CAMLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kerchiefs',nullif('kerchiefs','kerchiefs'),'CRCABC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kernel',nullif('kernel','kernel'),'CRML')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kerosene',nullif('kerosene','kerosene'),'CRCAMA')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,c0) VALUES(1,0,'keystrokes',nullif('keystrokes','keystrokes'),'CACDRCAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kicked',nullif('kicked','kicked'),'CACAD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kickers',nullif('kickers','kickers'),'CACRC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kidnap',nullif('kidnap','kidnap'),'CADMAB')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'killingly',nullif('killingly','killingly'),'CLMCL')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobits',nullif('kilobits','kilobits'),'CLBADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobytes',nullif('kilobytes','kilobytes'),'CLBADAC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilovolt',nullif('kilovolt','kilovolt'),'CLBLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilowatt',nullif('kilowatt','kilowatt'),'CLBAD')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,v0) VALUES(1,0,'kindest',nullif('kindest','kindest'),'CAMDACD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindles',nullif('kindles','kindles'),'CAMDLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindred',nullif('kindred','kindred'),'CAMDRD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kinetic',nullif('kinetic','kinetic'),'CAMADAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kisser',nullif('kisser','kisser'),'CACR')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kit',nullif('kit','kit'),'CAD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kiting',nullif('kiting','kiting'),'CADAMC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kits',nullif('kits','kits'),'CADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kittenish',nullif('kittenish','kittenish'),'CADAMAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'knee',nullif('knee','knee'),'MA')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kneeled',nullif('kneeled','kneeled'),'MLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knifing',nullif('knifing','knifing'),'MABAMC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'knolls',nullif('knolls','knolls'),'MLC')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'knowhow',nullif('knowhow','knowhow'),'MABAB')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knowledgeable',nullif('knowledgeable','knowledgeable'),'MABLCABL')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'known',nullif('known','known'),'MABM')
;SELECT t1, t1, t1, coalesce(t1,t1)  FROM "main"."preceding" WHERE t1=0 AND t1>=?1 AND t1<?2
;;CREATE VIRTUAL TABLE t4 USING spellfix1;INSERT OR IGNORE INTO "main"."over"(following,following,following,following,following,following) VALUES(3,1,0,'Zeus',nullif('zeus','Zeus'),'CAC')
;;SELECT t1, t1, NULL, t1, t1 FROM "main"."preceding" WHERE rowid=?
;UPDATE OR IGNORE "main"."t0" SET v0=3, v0=1, v0=0, v0='Apollo', v0=nullif('apollo','Apollo'), v0='ABL' WHERE v0=2
;]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP]
parser: Input 'CAST' in state 266
parser: FALLBACK CAST => ID
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'CAST', go to state 530
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct CAST]
parser: Input 'LP' in state 530
parser: Shift 'LP', go to state 106
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct CAST LP]
parser: Input 'FLOAT' in state 106
parser: Shift 'FLOAT', pending reduce 167
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct CAST LP FLOAT]
parser: Input 'AS' with pending reduce 167
parser: Reduce 167 [term ::= NULL|FLOAT|BLOB], go to state 106.
parser: ... then shift 'term', go to state 53
parser: Shift 'AS', go to state 193
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct CAST LP term AS]
parser: Input 'ID' in state 193
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct CAST LP term AS ID]
parser: Input 'RP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 193.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 193.
parser: ... then shift 'typetoken', go to state 528
parser: Shift 'RP', pending reduce 172
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct CAST LP term AS typetoken RP]
parser: Input 'RP' with pending reduce 172
parser: Reduce 172 [expr ::= CAST LP expr AS typetoken RP], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct exprlist RP]
parser: Input 'COMMA' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'CAST' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: FALLBACK CAST => ID
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'CAST', go to state 530
parser: Return. Stack=[SELECT distinct sclp scanpt CAST]
parser: Input 'LP' in state 530
parser: Shift 'LP', go to state 106
parser: Return. Stack=[SELECT distinct sclp scanpt CAST LP]
parser: Input 'FLOAT' in state 106
parser: Shift 'FLOAT', pending reduce 167
parser: Return. Stack=[SELECT distinct sclp scanpt CAST LP FLOAT]
parser: Input 'AS' with pending reduce 167
parser: Reduce 167 [term ::= NULL|FLOAT|BLOB], go to state 106.
parser: ... then shift 'term', go to state 53
parser: Shift 'AS', go to state 193
parser: Return. Stack=[SELECT distinct sclp scanpt CAST LP term AS]
parser: Input 'ID' in state 193
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[SELECT distinct sclp scanpt CAST LP term AS ID]
parser: Input 'RP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 193.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 193.
parser: ... then shift 'typetoken', go to state 528
parser: Shift 'RP', pending reduce 172
parser: Return. Stack=[SELECT distinct sclp scanpt CAST LP term AS typetoken RP]
parser: Input 'SEMI' with pending reduce 172
parser: Reduce 172 [expr ::= CAST LP expr AS typetoken RP], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Reduce 100 [from ::=].
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
SQL: [SELECT typeof( CAST(2e+50 AS INT) ),  CAST(2e+50 AS INT) 
;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Real             0    4    0 2e+50         00 r[4]=2e+50
REG[4] =  r:2e+50
   8 Cast             4   68    0               00 affinity(r[4])
REG[4] =  r:2e+50
   9 Function0        1    4    3 typeof(1)     01 r[3]=func(r[4])
REG[4] =  i:9223372036854775807
REG[3] =   t7[integer](8)
  10 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             3    1    0               00 r[1]=r[3]
REG[1] =   t7[integer](8)
   3 Real             0    2    0 2e+50         00 r[2]=2e+50
REG[2] =  r:2e+50
   4 Cast             2   68    0               00 affinity(r[2])
REG[2] =  r:2e+50
   5 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =   t7[integer](8)
REG[2] =  i:9223372036854775807
   6 Halt             0    0    0               00 
parser: [[[SELECT following FROM over
    WHERE following IN (SELECT following FROM over WHERE following<5) OR following==512
    ORDER BY following
  
;;
;SELECT following FROM over WHERE following IN (5);SELECT typeof(CAST('-9.223372036e15' AS NUMERIC)) AS type, printf('%.5e',CAST('-9.223372036e15' AS NUMERIC)) AS value
;SELECT typeof( CAST('-9223372036854775809' AS numeric) ),  CAST('-9223372036854775809' AS numeric) 
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kennel',nullif('kennel','kennel'),'CAML')
;;SELECT * FROM preceding;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kennels',nullif('kennels','kennels'),'CAMLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kerchiefs',nullif('kerchiefs','kerchiefs'),'CRCABC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kernel',nullif('kernel','kernel'),'CRML')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kerosene',nullif('kerosene','kerosene'),'CRCAMA')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,c0) VALUES(1,0,'keystrokes',nullif('keystrokes','keystrokes'),'CACDRCAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kicked',nullif('kicked','kicked'),'CACAD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kickers',nullif('kickers','kickers'),'CACRC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kidnap',nullif('kidnap','kidnap'),'CADMAB')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'killingly',nullif('killingly','killingly'),'CLMCL')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobits',nullif('kilobits','kilobits'),'CLBADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobytes',nullif('kilobytes','kilobytes'),'CLBADAC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilovolt',nullif('kilovolt','kilovolt'),'CLBLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilowatt',nullif('kilowatt','kilowatt'),'CLBAD')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,v0) VALUES(1,0,'kindest',nullif('kindest','kindest'),'CAMDACD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindles',nullif('kindles','kindles'),'CAMDLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindred',nullif('kindred','kindred'),'CAMDRD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kinetic',nullif('kinetic','kinetic'),'CAMADAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kisser',nullif('kisser','kisser'),'CACR')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kit',nullif('kit','kit'),'CAD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kiting',nullif('kiting','kiting'),'CADAMC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kits',nullif('kits','kits'),'CADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kittenish',nullif('kittenish','kittenish'),'CADAMAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'knee',nullif('knee','knee'),'MA')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kneeled',nullif('kneeled','kneeled'),'MLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knifing',nullif('knifing','knifing'),'MABAMC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'knolls',nullif('knolls','knolls'),'MLC')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'knowhow',nullif('knowhow','knowhow'),'MABAB')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knowledgeable',nullif('knowledgeable','knowledgeable'),'MABLCABL')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'known',nullif('known','known'),'MABM')
;SELECT t1, t1, t1, coalesce(t1,t1)  FROM "main"."preceding" WHERE t1=0 AND t1>=?1 AND t1<?2
;;CREATE VIRTUAL TABLE t4 USING spellfix1;INSERT OR IGNORE INTO "main"."over"(following,following,following,following,following,following) VALUES(3,1,0,'Zeus',nullif('zeus','Zeus'),'CAC')
;;SELECT t1, t1, NULL, t1, t1 FROM "main"."preceding" WHERE rowid=?
;UPDATE OR IGNORE "main"."t0" SET v0=3, v0=1, v0=0, v0='Apollo', v0=nullif('apollo','Apollo'), v0='ABL' WHERE v0=2
;]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'FOLLOWING' in state 288
parser: FALLBACK FOLLOWING => ID
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: FALLBACK FOLLOWING => ID
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: FALLBACK FOLLOWING => ID
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt FOLLOWING]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'FOLLOWING' in state 93
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE FOLLOWING]
parser: Input 'IN' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'IN', pending reduce 200
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr IN]
parser: Input 'LP' with pending reduce 200
parser: Reduce 200 [in_op ::= IN], go to state 63.
parser: ... then shift 'in_op', go to state 209
parser: Shift 'LP', go to state 3
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr in_op LP]
parser: Input 'SELECT' in state 3
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr in_op LP SELECT]
parser: Input 'FOLLOWING' in state 288
parser: FALLBACK FOLLOWING => ID
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: FALLBACK FOLLOWING => ID
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: FALLBACK FOLLOWING => ID
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr in_op LP SELECT distinct sclp scanpt FOLLOWING]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr in_op LP SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr in_op LP SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr in_op LP SELECT distinct selcollist from WHERE]
parser: Input 'FOLLOWING' in state 93
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr in_op LP SELECT distinct selcollist from WHERE FOLLOWING]
parser: Input 'LT' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'LT', go to state 118
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr in_op LP SELECT distinct selcollist from WHERE expr LT]
parser: Input 'INTEGER' in state 118
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr in_op LP SELECT distinct selcollist from WHERE expr LT INTEGER]
parser: Input 'RP' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 118.
parser: ... then shift 'term', go to state 130
parser: Reduce 181 [expr ::= expr LT|GT|GE|LE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 3.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 3.
parser: ... then shift 'select', go to state 518
parser: Shift 'RP', pending reduce 204
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr in_op LP select RP]
parser: Input 'OR' with pending reduce 204
parser: Reduce 204 [expr ::= expr in_op LP select RP], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'OR', go to state 119
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr OR]
parser: Input 'FOLLOWING' in state 119
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr OR FOLLOWING]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 119.
parser: ... then shift 'expr', go to state 74
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr OR expr EQ]
parser: Input 'INTEGER' in state 117
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr OR expr EQ INTEGER]
parser: Input 'ORDER' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 119.
parser: ... then shift 'expr', go to state 74
parser: Reduce 180 [expr ::= expr OR expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'FOLLOWING' in state 26
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY FOLLOWING]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
SQL: [SELECT following FROM over
    WHERE following IN (SELECT following FROM over WHERE following<5) OR following==512
    ORDER BY following
  
;]
VDBE Trace:
   0 Init             0   39    0               00 Start at 39
  39 Transaction      0    0    4 2             01 usesStmtJournal=0
  40 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
  41 Integer        512    6    0               00 r[6]=512
REG[6] =  i:512
  42 Goto             0    1    0               00 
   1 SorterOpen       2    3    0 k(1,B)        00 
   2 OpenRead         0    4    0 1             00 root=4 iDb=0; over
   3 Explain          3    0    0 SCAN TABLE over 00 
   4 Rewind           0   31    0               00 
   5 Noop             0    0    0               00 begin IN expr
   6 Integer         19    1    0               00 r[1]=19; return address
REG[1] =  i:19
   7 Once             0   19    0               00 
   8 OpenEphemeral    3    1    0 k(1,B)        00 nColumn=1; Result of SELECT 1
   9 Explain          9    0    0 LIST SUBQUERY 1 00 
  10 OpenRead         1    4    0 1             00 root=4 iDb=0; over
  11 Explain         11    9    0 SCAN TABLE over 00 
  12 Rewind           1   19    0               00 
  13 Column           1    0    2               00 r[2]=over.following
REG[2] =   s3[abc](8)
  14 Ge               3   18    2 (BINARY)      52 if r[2]>=r[3] goto 18
REG[3] =  i:5
REG[2] =   s3[abc](8)
  18 Next             1   13    0               01 
  13 Column           1    0    2               00 r[2]=over.following
REG[2] =   s3[ABD](8)
  14 Ge               3   18    2 (BINARY)      52 if r[2]>=r[3] goto 18
REG[3] =  i:5
REG[2] =   s3[ABD](8)
  18 Next             1   13    0               01 
  13 Column           1    0    2               00 r[2]=over.following
REG[2] =   s3[aBe](8)
  14 Ge               3   18    2 (BINARY)      52 if r[2]>=r[3] goto 18
REG[3] =  i:5
REG[2] =   s3[aBe](8)
  18 Next             1   13    0               01 
  13 Column           1    0    2               00 r[2]=over.following
REG[2] =   s3[AbF](8)
  14 Ge               3   18    2 (BINARY)      52 if r[2]>=r[3] goto 18
REG[3] =  i:5
REG[2] =   s3[AbF](8)
  18 Next             1   13    0               01 
  13 Column           1    0    2               00 r[2]=over.following
REG[2] =   s1[1](8)
  14 Ge               3   18    2 (BINARY)      52 if r[2]>=r[3] goto 18
REG[3] =  i:5
REG[2] =   s1[1](8)
  15 Column           1    0    4               00 r[4]=over.following
REG[4] =   s1[1](8)
  16 MakeRecord       4    1    2 A             00 r[2]=mkrec(r[4])
REG[2] =  s3[020F31..1]
  17 IdxInsert        3    2    4 1             00 key=r[2]
REG[2] =  s3[020F31..1]
  18 Next             1   13    0               01 
  19 Return           1    0    0               00 
REG[1] =  i:19
  20 Column           0    0    2               00 r[2]=over.following
REG[2] =   s3[abc](8)
  21 IsNull           2   25    0               00 if r[2]==NULL goto 25
REG[2] =   s3[abc](8)
  22 Affinity         2    1    0 A             00 affinity(r[2])
  23 NotFound         3   25    2 1             00 key=r[2]; end IN expr
REG[2] =   s3[abc](8)
  25 Column           0    0    5               00 r[5]=over.following
REG[5] =   s3[abc](8)
  26 Ne               6   30    5 (BINARY)      52 if r[5]!=r[6] goto 30
REG[6] =  i:512
REG[5] =   s3[abc](8)
  30 Next             0    5    0               01 
   5 Noop             0    0    0               00 begin IN expr
   6 Integer         19    1    0               00 r[1]=19; return address
REG[1] =  i:19
   7 Once             1   19    0               00 
  19 Return           1    0    0               00 
REG[1] =  i:19
  20 Column           0    0    2               00 r[2]=over.following
REG[2] =   s3[ABD](8)
  21 IsNull           2   25    0               00 if r[2]==NULL goto 25
REG[2] =   s3[ABD](8)
  22 Affinity         2    1    0 A             00 affinity(r[2])
  23 NotFound         3   25    2 1             00 key=r[2]; end IN expr
REG[2] =   s3[ABD](8)
  25 Column           0    0    5               00 r[5]=over.following
REG[5] =   s3[ABD](8)
  26 Ne               6   30    5 (BINARY)      52 if r[5]!=r[6] goto 30
REG[6] =  i:512
REG[5] =   s3[ABD](8)
  30 Next             0    5    0               01 
   5 Noop             0    0    0               00 begin IN expr
   6 Integer         19    1    0               00 r[1]=19; return address
REG[1] =  i:19
   7 Once             1   19    0               00 
  19 Return           1    0    0               00 
REG[1] =  i:19
  20 Column           0    0    2               00 r[2]=over.following
REG[2] =   s3[aBe](8)
  21 IsNull           2   25    0               00 if r[2]==NULL goto 25
REG[2] =   s3[aBe](8)
  22 Affinity         2    1    0 A             00 affinity(r[2])
  23 NotFound         3   25    2 1             00 key=r[2]; end IN expr
REG[2] =   s3[aBe](8)
  25 Column           0    0    5               00 r[5]=over.following
REG[5] =   s3[aBe](8)
  26 Ne               6   30    5 (BINARY)      52 if r[5]!=r[6] goto 30
REG[6] =  i:512
REG[5] =   s3[aBe](8)
  30 Next             0    5    0               01 
   5 Noop             0    0    0               00 begin IN expr
   6 Integer         19    1    0               00 r[1]=19; return address
REG[1] =  i:19
   7 Once             1   19    0               00 
  19 Return           1    0    0               00 
REG[1] =  i:19
  20 Column           0    0    2               00 r[2]=over.following
REG[2] =   s3[AbF](8)
  21 IsNull           2   25    0               00 if r[2]==NULL goto 25
REG[2] =   s3[AbF](8)
  22 Affinity         2    1    0 A             00 affinity(r[2])
  23 NotFound         3   25    2 1             00 key=r[2]; end IN expr
REG[2] =   s3[AbF](8)
  25 Column           0    0    5               00 r[5]=over.following
REG[5] =   s3[AbF](8)
  26 Ne               6   30    5 (BINARY)      52 if r[5]!=r[6] goto 30
REG[6] =  i:512
REG[5] =   s3[AbF](8)
  30 Next             0    5    0               01 
   5 Noop             0    0    0               00 begin IN expr
   6 Integer         19    1    0               00 r[1]=19; return address
REG[1] =  i:19
   7 Once             1   19    0               00 
  19 Return           1    0    0               00 
REG[1] =  i:19
  20 Column           0    0    2               00 r[2]=over.following
REG[2] =   s1[1](8)
  21 IsNull           2   25    0               00 if r[2]==NULL goto 25
REG[2] =   s1[1](8)
  22 Affinity         2    1    0 A             00 affinity(r[2])
  23 NotFound         3   25    2 1             00 key=r[2]; end IN expr
REG[2] =   s1[1](8)
  24 Goto             0   27    0               00 
  27 Column           0    0    7               00 r[7]=over.following
REG[7] =   s1[1](8)
  28 MakeRecord       7    1    9               00 r[9]=mkrec(r[7])
REG[9] =  s3[020F31..1]
  29 SorterInsert     2    9    7 1             00 key=r[9]
REG[9] =  s3[020F31..1]
  30 Next             0    5    0               01 
  31 Explain         31    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  32 OpenPseudo       4   10    3               00 3 columns in r[10]
  33 SorterSort       2   38    0               00 
  34 SorterData       2   10    4               00 r[10]=data
  35 Column           4    0    8               00 r[8]=following
REG[8] =   s1[1](8)
  36 ResultRow        8    1    0               00 output=r[8]
REG[8] =   s1[1](8)
  37 SorterNext       2   34    0               00 
  38 Halt             0    0    0               00 
parser: [[[;
;SELECT following FROM over WHERE following IN (5);SELECT typeof(CAST('-9.223372036e15' AS NUMERIC)) AS type, printf('%.5e',CAST('-9.223372036e15' AS NUMERIC)) AS value
;SELECT typeof( CAST('-9223372036854775809' AS numeric) ),  CAST('-9223372036854775809' AS numeric) 
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kennel',nullif('kennel','kennel'),'CAML')
;;SELECT * FROM preceding;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kennels',nullif('kennels','kennels'),'CAMLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kerchiefs',nullif('kerchiefs','kerchiefs'),'CRCABC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kernel',nullif('kernel','kernel'),'CRML')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kerosene',nullif('kerosene','kerosene'),'CRCAMA')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,c0) VALUES(1,0,'keystrokes',nullif('keystrokes','keystrokes'),'CACDRCAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kicked',nullif('kicked','kicked'),'CACAD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kickers',nullif('kickers','kickers'),'CACRC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kidnap',nullif('kidnap','kidnap'),'CADMAB')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'killingly',nullif('killingly','killingly'),'CLMCL')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobits',nullif('kilobits','kilobits'),'CLBADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobytes',nullif('kilobytes','kilobytes'),'CLBADAC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilovolt',nullif('kilovolt','kilovolt'),'CLBLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilowatt',nullif('kilowatt','kilowatt'),'CLBAD')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,v0) VALUES(1,0,'kindest',nullif('kindest','kindest'),'CAMDACD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindles',nullif('kindles','kindles'),'CAMDLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindred',nullif('kindred','kindred'),'CAMDRD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kinetic',nullif('kinetic','kinetic'),'CAMADAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kisser',nullif('kisser','kisser'),'CACR')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kit',nullif('kit','kit'),'CAD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kiting',nullif('kiting','kiting'),'CADAMC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kits',nullif('kits','kits'),'CADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kittenish',nullif('kittenish','kittenish'),'CADAMAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'knee',nullif('knee','knee'),'MA')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kneeled',nullif('kneeled','kneeled'),'MLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knifing',nullif('knifing','knifing'),'MABAMC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'knolls',nullif('knolls','knolls'),'MLC')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'knowhow',nullif('knowhow','knowhow'),'MABAB')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knowledgeable',nullif('knowledgeable','knowledgeable'),'MABLCABL')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'known',nullif('known','known'),'MABM')
;SELECT t1, t1, t1, coalesce(t1,t1)  FROM "main"."preceding" WHERE t1=0 AND t1>=?1 AND t1<?2
;;CREATE VIRTUAL TABLE t4 USING spellfix1;INSERT OR IGNORE INTO "main"."over"(following,following,following,following,following,following) VALUES(3,1,0,'Zeus',nullif('zeus','Zeus'),'CAC')
;;SELECT t1, t1, NULL, t1, t1 FROM "main"."preceding" WHERE rowid=?
;UPDATE OR IGNORE "main"."t0" SET v0=3, v0=1, v0=0, v0='Apollo', v0=nullif('apollo','Apollo'), v0='ABL' WHERE v0=2
;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'SEMI' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[ecmd SEMI]
parser: Input 'SELECT' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 1.
parser: ... then shift 'ecmd', pending reduce 318
parser: Reduce 318 [cmdlist ::= cmdlist ecmd], go to state 0.
parser: ... then shift 'cmdlist', go to state 1
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[cmdlist SELECT]
parser: Input 'FOLLOWING' in state 288
parser: FALLBACK FOLLOWING => ID
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: FALLBACK FOLLOWING => ID
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: FALLBACK FOLLOWING => ID
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', go to state 416
parser: Return. Stack=[cmdlist SELECT distinct sclp scanpt FOLLOWING]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[cmdlist SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[cmdlist SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[cmdlist SELECT distinct selcollist from WHERE]
parser: Input 'FOLLOWING' in state 93
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', go to state 416
parser: Return. Stack=[cmdlist SELECT distinct selcollist from WHERE FOLLOWING]
parser: Input 'IN' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'IN', pending reduce 200
parser: Return. Stack=[cmdlist SELECT distinct selcollist from WHERE expr IN]
parser: Input 'LP' with pending reduce 200
parser: Reduce 200 [in_op ::= IN], go to state 63.
parser: ... then shift 'in_op', go to state 209
parser: Shift 'LP', go to state 3
parser: Return. Stack=[cmdlist SELECT distinct selcollist from WHERE expr in_op LP]
parser: Input 'INTEGER' in state 3
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[cmdlist SELECT distinct selcollist from WHERE expr in_op LP INTEGER]
parser: Input 'RP' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 3.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 3.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 3.
parser: ... then shift 'exprlist', go to state 519
parser: Shift 'RP', pending reduce 202
parser: Return. Stack=[cmdlist SELECT distinct selcollist from WHERE expr in_op LP exprlist RP]
parser: Input 'SEMI' with pending reduce 202
parser: Reduce 202 [expr ::= expr in_op LP exprlist RP], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 1.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 1.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdlist cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping cmdlist
SQL: [;
;SELECT following FROM over WHERE following IN (5);]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    4 2             01 usesStmtJournal=0
  11 Integer          5    2    0               00 r[2]=5
REG[2] =  i:5
  12 Goto             0    1    0               00 
   1 OpenRead         0    4    0 1             00 root=4 iDb=0; over
   2 Explain          2    0    0 SCAN TABLE over 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=over.following
REG[1] =   s3[abc](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =  i:5
REG[1] =   s3[abc](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=over.following
REG[1] =   s3[ABD](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =  i:5
REG[1] =   s3[ABD](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=over.following
REG[1] =   s3[aBe](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =  i:5
REG[1] =   s3[aBe](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=over.following
REG[1] =   s3[AbF](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =  i:5
REG[1] =   s3[AbF](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=over.following
REG[1] =   s1[1](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =  i:5
REG[1] =   s1[1](8)
   8 Next             0    4    0               01 
   9 Halt             0    0    0               00 
parser: [[[SELECT typeof(CAST('-9.223372036e15' AS NUMERIC)) AS type, printf('%.5e',CAST('-9.223372036e15' AS NUMERIC)) AS value
;SELECT typeof( CAST('-9223372036854775809' AS numeric) ),  CAST('-9223372036854775809' AS numeric) 
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kennel',nullif('kennel','kennel'),'CAML')
;;SELECT * FROM preceding;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kennels',nullif('kennels','kennels'),'CAMLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kerchiefs',nullif('kerchiefs','kerchiefs'),'CRCABC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kernel',nullif('kernel','kernel'),'CRML')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kerosene',nullif('kerosene','kerosene'),'CRCAMA')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,c0) VALUES(1,0,'keystrokes',nullif('keystrokes','keystrokes'),'CACDRCAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kicked',nullif('kicked','kicked'),'CACAD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kickers',nullif('kickers','kickers'),'CACRC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kidnap',nullif('kidnap','kidnap'),'CADMAB')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'killingly',nullif('killingly','killingly'),'CLMCL')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobits',nullif('kilobits','kilobits'),'CLBADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobytes',nullif('kilobytes','kilobytes'),'CLBADAC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilovolt',nullif('kilovolt','kilovolt'),'CLBLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilowatt',nullif('kilowatt','kilowatt'),'CLBAD')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,v0) VALUES(1,0,'kindest',nullif('kindest','kindest'),'CAMDACD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindles',nullif('kindles','kindles'),'CAMDLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindred',nullif('kindred','kindred'),'CAMDRD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kinetic',nullif('kinetic','kinetic'),'CAMADAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kisser',nullif('kisser','kisser'),'CACR')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kit',nullif('kit','kit'),'CAD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kiting',nullif('kiting','kiting'),'CADAMC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kits',nullif('kits','kits'),'CADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kittenish',nullif('kittenish','kittenish'),'CADAMAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'knee',nullif('knee','knee'),'MA')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kneeled',nullif('kneeled','kneeled'),'MLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knifing',nullif('knifing','knifing'),'MABAMC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'knolls',nullif('knolls','knolls'),'MLC')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'knowhow',nullif('knowhow','knowhow'),'MABAB')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knowledgeable',nullif('knowledgeable','knowledgeable'),'MABLCABL')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'known',nullif('known','known'),'MABM')
;SELECT t1, t1, t1, coalesce(t1,t1)  FROM "main"."preceding" WHERE t1=0 AND t1>=?1 AND t1<?2
;;CREATE VIRTUAL TABLE t4 USING spellfix1;INSERT OR IGNORE INTO "main"."over"(following,following,following,following,following,following) VALUES(3,1,0,'Zeus',nullif('zeus','Zeus'),'CAC')
;;SELECT t1, t1, NULL, t1, t1 FROM "main"."preceding" WHERE rowid=?
;UPDATE OR IGNORE "main"."t0" SET v0=3, v0=1, v0=0, v0='Apollo', v0=nullif('apollo','Apollo'), v0='ABL' WHERE v0=2
;]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP]
parser: Input 'CAST' in state 266
parser: FALLBACK CAST => ID
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'CAST', go to state 530
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct CAST]
parser: Input 'LP' in state 530
parser: Shift 'LP', go to state 106
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct CAST LP]
parser: Input 'STRING' in state 106
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct CAST LP STRING]
parser: Input 'AS' in state 537
parser: Reduce 168 [term ::= STRING], go to state 106.
parser: ... then shift 'term', go to state 53
parser: Shift 'AS', go to state 193
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct CAST LP term AS]
parser: Input 'ID' in state 193
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct CAST LP term AS ID]
parser: Input 'RP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 193.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 193.
parser: ... then shift 'typetoken', go to state 528
parser: Shift 'RP', pending reduce 172
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct CAST LP term AS typetoken RP]
parser: Input 'RP' with pending reduce 172
parser: Reduce 172 [expr ::= CAST LP expr AS typetoken RP], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct exprlist RP]
parser: Input 'AS' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP]
parser: Input 'STRING' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 11.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct nexprlist COMMA]
parser: Input 'CAST' in state 107
parser: Shift 'CAST', go to state 530
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct nexprlist COMMA CAST]
parser: Input 'LP' in state 530
parser: Shift 'LP', go to state 106
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct nexprlist COMMA CAST LP]
parser: Input 'STRING' in state 106
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct nexprlist COMMA CAST LP STRING]
parser: Input 'AS' in state 537
parser: Reduce 168 [term ::= STRING], go to state 106.
parser: ... then shift 'term', go to state 53
parser: Shift 'AS', go to state 193
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct nexprlist COMMA CAST LP term AS]
parser: Input 'ID' in state 193
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct nexprlist COMMA CAST LP term AS ID]
parser: Input 'RP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 193.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 193.
parser: ... then shift 'typetoken', go to state 528
parser: Shift 'RP', pending reduce 172
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct nexprlist COMMA CAST LP term AS typetoken RP]
parser: Input 'RP' with pending reduce 172
parser: Reduce 172 [expr ::= CAST LP expr AS typetoken RP], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct exprlist RP]
parser: Input 'AS' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'SEMI' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Reduce 100 [from ::=].
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
SQL: [SELECT typeof(CAST('-9.223372036e15' AS NUMERIC)) AS type, printf('%.5e',CAST('-9.223372036e15' AS NUMERIC)) AS value
;]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    5    0 -9.223372036e15 00 r[5]='-9.223372036e15'
REG[5] =   t15[-9.223372036e15](8)
   6 Cast             5   67    0               00 affinity(r[5])
REG[5] =   t15[-9.223372036e15](8)
   7 Function0        1    5    3 typeof(1)     01 r[3]=func(r[5])
REG[5] =  r:-9.22337e+15
REG[3] =   t4[real](8)
   8 String8          0    6    0 %.5e          00 r[6]='%.5e'
REG[6] =   t4[%.5e](8)
   9 String8          0    7    0 -9.223372036e15 00 r[7]='-9.223372036e15'
REG[7] =   t15[-9.223372036e15](8)
  10 Cast             7   67    0               00 affinity(r[7])
REG[7] =   t15[-9.223372036e15](8)
  11 Function0        3    6    4 printf(-1)    02 r[4]=func(r[6..7])
REG[6] =   t4[%.5e](8)
REG[7] =  r:-9.22337e+15
REG[4] =   s12[-9.22337e+15](8)
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             3    1    1               00 r[1..2]=r[3..4]
REG[1] =   t4[real](8)
REG[2] =   s12[-9.22337e+15](8)
   3 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =   t4[real](8)
REG[2] =   s12[-9.22337e+15](8)
   4 Halt             0    0    0               00 
parser: [[[SELECT typeof( CAST('-9223372036854775809' AS numeric) ),  CAST('-9223372036854775809' AS numeric) 
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kennel',nullif('kennel','kennel'),'CAML')
;;SELECT * FROM preceding;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kennels',nullif('kennels','kennels'),'CAMLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kerchiefs',nullif('kerchiefs','kerchiefs'),'CRCABC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kernel',nullif('kernel','kernel'),'CRML')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kerosene',nullif('kerosene','kerosene'),'CRCAMA')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,c0) VALUES(1,0,'keystrokes',nullif('keystrokes','keystrokes'),'CACDRCAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kicked',nullif('kicked','kicked'),'CACAD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kickers',nullif('kickers','kickers'),'CACRC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kidnap',nullif('kidnap','kidnap'),'CADMAB')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'killingly',nullif('killingly','killingly'),'CLMCL')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobits',nullif('kilobits','kilobits'),'CLBADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobytes',nullif('kilobytes','kilobytes'),'CLBADAC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilovolt',nullif('kilovolt','kilovolt'),'CLBLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilowatt',nullif('kilowatt','kilowatt'),'CLBAD')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,v0) VALUES(1,0,'kindest',nullif('kindest','kindest'),'CAMDACD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindles',nullif('kindles','kindles'),'CAMDLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindred',nullif('kindred','kindred'),'CAMDRD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kinetic',nullif('kinetic','kinetic'),'CAMADAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kisser',nullif('kisser','kisser'),'CACR')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kit',nullif('kit','kit'),'CAD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kiting',nullif('kiting','kiting'),'CADAMC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kits',nullif('kits','kits'),'CADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kittenish',nullif('kittenish','kittenish'),'CADAMAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'knee',nullif('knee','knee'),'MA')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kneeled',nullif('kneeled','kneeled'),'MLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knifing',nullif('knifing','knifing'),'MABAMC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'knolls',nullif('knolls','knolls'),'MLC')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'knowhow',nullif('knowhow','knowhow'),'MABAB')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knowledgeable',nullif('knowledgeable','knowledgeable'),'MABLCABL')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'known',nullif('known','known'),'MABM')
;SELECT t1, t1, t1, coalesce(t1,t1)  FROM "main"."preceding" WHERE t1=0 AND t1>=?1 AND t1<?2
;;CREATE VIRTUAL TABLE t4 USING spellfix1;INSERT OR IGNORE INTO "main"."over"(following,following,following,following,following,following) VALUES(3,1,0,'Zeus',nullif('zeus','Zeus'),'CAC')
;;SELECT t1, t1, NULL, t1, t1 FROM "main"."preceding" WHERE rowid=?
;UPDATE OR IGNORE "main"."t0" SET v0=3, v0=1, v0=0, v0='Apollo', v0=nullif('apollo','Apollo'), v0='ABL' WHERE v0=2
;]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP]
parser: Input 'CAST' in state 266
parser: FALLBACK CAST => ID
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'CAST', go to state 530
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct CAST]
parser: Input 'LP' in state 530
parser: Shift 'LP', go to state 106
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct CAST LP]
parser: Input 'STRING' in state 106
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct CAST LP STRING]
parser: Input 'AS' in state 537
parser: Reduce 168 [term ::= STRING], go to state 106.
parser: ... then shift 'term', go to state 53
parser: Shift 'AS', go to state 193
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct CAST LP term AS]
parser: Input 'ID' in state 193
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct CAST LP term AS ID]
parser: Input 'RP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 193.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 193.
parser: ... then shift 'typetoken', go to state 528
parser: Shift 'RP', pending reduce 172
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct CAST LP term AS typetoken RP]
parser: Input 'RP' with pending reduce 172
parser: Reduce 172 [expr ::= CAST LP expr AS typetoken RP], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct exprlist RP]
parser: Input 'COMMA' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'CAST' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: FALLBACK CAST => ID
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'CAST', go to state 530
parser: Return. Stack=[SELECT distinct sclp scanpt CAST]
parser: Input 'LP' in state 530
parser: Shift 'LP', go to state 106
parser: Return. Stack=[SELECT distinct sclp scanpt CAST LP]
parser: Input 'STRING' in state 106
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct sclp scanpt CAST LP STRING]
parser: Input 'AS' in state 537
parser: Reduce 168 [term ::= STRING], go to state 106.
parser: ... then shift 'term', go to state 53
parser: Shift 'AS', go to state 193
parser: Return. Stack=[SELECT distinct sclp scanpt CAST LP term AS]
parser: Input 'ID' in state 193
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[SELECT distinct sclp scanpt CAST LP term AS ID]
parser: Input 'RP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 193.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 193.
parser: ... then shift 'typetoken', go to state 528
parser: Shift 'RP', pending reduce 172
parser: Return. Stack=[SELECT distinct sclp scanpt CAST LP term AS typetoken RP]
parser: Input 'SEMI' with pending reduce 172
parser: Reduce 172 [expr ::= CAST LP expr AS typetoken RP], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Reduce 100 [from ::=].
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
SQL: [SELECT typeof( CAST('-9223372036854775809' AS numeric) ),  CAST('-9223372036854775809' AS numeric) 
;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 String8          0    4    0 -9223372036854775809 00 r[4]='-9223372036854775809'
REG[4] =   t20[-92233720368547](8)
   8 Cast             4   67    0               00 affinity(r[4])
REG[4] =   t20[-92233720368547](8)
   9 Function0        1    4    3 typeof(1)     01 r[3]=func(r[4])
REG[4] =  r:-9.22337e+18
REG[3] =   t4[real](8)
  10 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             3    1    0               00 r[1]=r[3]
REG[1] =   t4[real](8)
   3 String8          0    2    0 -9223372036854775809 00 r[2]='-9223372036854775809'
REG[2] =   t20[-92233720368547](8)
   4 Cast             2   67    0               00 affinity(r[2])
REG[2] =   t20[-92233720368547](8)
   5 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =   t4[real](8)
REG[2] =  r:-9.22337e+18
   6 Halt             0    0    0               00 
parser: [[[INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kennel',nullif('kennel','kennel'),'CAML')
;;SELECT * FROM preceding;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kennels',nullif('kennels','kennels'),'CAMLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kerchiefs',nullif('kerchiefs','kerchiefs'),'CRCABC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kernel',nullif('kernel','kernel'),'CRML')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kerosene',nullif('kerosene','kerosene'),'CRCAMA')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,c0) VALUES(1,0,'keystrokes',nullif('keystrokes','keystrokes'),'CACDRCAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kicked',nullif('kicked','kicked'),'CACAD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kickers',nullif('kickers','kickers'),'CACRC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kidnap',nullif('kidnap','kidnap'),'CADMAB')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'killingly',nullif('killingly','killingly'),'CLMCL')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobits',nullif('kilobits','kilobits'),'CLBADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobytes',nullif('kilobytes','kilobytes'),'CLBADAC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilovolt',nullif('kilovolt','kilovolt'),'CLBLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilowatt',nullif('kilowatt','kilowatt'),'CLBAD')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,v0) VALUES(1,0,'kindest',nullif('kindest','kindest'),'CAMDACD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindles',nullif('kindles','kindles'),'CAMDLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindred',nullif('kindred','kindred'),'CAMDRD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kinetic',nullif('kinetic','kinetic'),'CAMADAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kisser',nullif('kisser','kisser'),'CACR')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kit',nullif('kit','kit'),'CAD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kiting',nullif('kiting','kiting'),'CADAMC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kits',nullif('kits','kits'),'CADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kittenish',nullif('kittenish','kittenish'),'CADAMAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'knee',nullif('knee','knee'),'MA')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kneeled',nullif('kneeled','kneeled'),'MLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knifing',nullif('knifing','knifing'),'MABAMC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'knolls',nullif('knolls','knolls'),'MLC')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'knowhow',nullif('knowhow','knowhow'),'MABAB')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knowledgeable',nullif('knowledgeable','knowledgeable'),'MABLCABL')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'known',nullif('known','known'),'MABM')
;SELECT t1, t1, t1, coalesce(t1,t1)  FROM "main"."preceding" WHERE t1=0 AND t1>=?1 AND t1<?2
;;CREATE VIRTUAL TABLE t4 USING spellfix1;INSERT OR IGNORE INTO "main"."over"(following,following,following,following,following,following) VALUES(3,1,0,'Zeus',nullif('zeus','Zeus'),'CAC')
;;SELECT t1, t1, NULL, t1, t1 FROM "main"."preceding" WHERE rowid=?
;UPDATE OR IGNORE "main"."t0" SET v0=3, v0=1, v0=0, v0='Apollo', v0=nullif('apollo','Apollo'), v0='ABL' WHERE v0=2
;]]]
parser: Input 'INSERT' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 156
parser: Reduce 156 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 427
parser: Shift 'INTO', go to state 164
parser: Return. Stack=[with insert_cmd INTO]
parser: Input 'ID' in state 164
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 164.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with insert_cmd INTO nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO nm DOT ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 164.
parser: ... then shift 'xfullname', go to state 298
parser: Shift 'LP', go to state 173
parser: Return. Stack=[with insert_cmd INTO xfullname LP]
parser: Input 'ID' in state 173
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname LP ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 173.
parser: ... then shift 'nm', pending reduce 161
parser: Reduce 161 [idlist ::= nm], go to state 173.
parser: ... then shift 'idlist', go to state 397
parser: Shift 'COMMA', go to state 241
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA]
parser: Input 'ID' in state 241
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 241.
parser: ... then shift 'nm', pending reduce 160
parser: Reduce 160 [idlist ::= idlist COMMA nm], go to state 173.
parser: ... then shift 'idlist', go to state 397
parser: Shift 'COMMA', go to state 241
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA]
parser: Input 'ID' in state 241
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 241.
parser: ... then shift 'nm', pending reduce 160
parser: Reduce 160 [idlist ::= idlist COMMA nm], go to state 173.
parser: ... then shift 'idlist', go to state 397
parser: Shift 'COMMA', go to state 241
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA]
parser: Input 'ID' in state 241
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 241.
parser: ... then shift 'nm', pending reduce 160
parser: Reduce 160 [idlist ::= idlist COMMA nm], go to state 173.
parser: ... then shift 'idlist', go to state 397
parser: Shift 'COMMA', go to state 241
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA]
parser: Input 'ID' in state 241
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA ID]
parser: Input 'RP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 241.
parser: ... then shift 'nm', pending reduce 160
parser: Reduce 160 [idlist ::= idlist COMMA nm], go to state 173.
parser: ... then shift 'idlist', go to state 397
parser: Shift 'RP', pending reduce 159
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist RP]
parser: Input 'VALUES' with pending reduce 159
parser: Reduce 159 [idlist_opt ::= LP idlist RP], go to state 298.
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'VALUES', go to state 526
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES]
parser: Input 'LP' in state 526
parser: Shift 'LP', go to state 28
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP]
parser: Input 'INTEGER' in state 28
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP INTEGER]
parser: Input 'COMMA' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 28.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA INTEGER]
parser: Input 'COMMA' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'ID' in state 107
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA ID LP]
parser: Input 'STRING' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA ID LP distinct STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 11.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA ID LP distinct nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA ID LP distinct nexprlist COMMA STRING]
parser: Input 'RP' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA ID LP distinct exprlist RP]
parser: Input 'COMMA' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'RP' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'RP', pending reduce 89
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist RP]
parser: Input 'SEMI' with pending reduce 89
parser: Reduce 89 [values ::= VALUES LP nexprlist RP], go to state 35.
parser: ... then shift 'values', go to state 532
parser: Reduce 348 [oneselect ::= values], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 152 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 150
parser: Reduce 150 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
SQL: [INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kennel',nullif('kennel','kennel'),'CAML')
;]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    1    4 2             01 usesStmtJournal=0
  32 Goto             0    1    0               00 
   1 OpenWrite        0    5    0 1             00 root=5 iDb=0; preceding
   2 OpenWrite        1    7    0 k(3,,,)       00 root=7 iDb=0; sqlite_autoindex_preceding_2
   3 OpenWrite        2    6    0 k(2,,)        00 root=6 iDb=0; sqlite_autoindex_preceding_1
   4 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   5 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   6 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_preceding_2
   7 SCopy            2    4    0               00 r[4]=r[2]; t1
REG[4] =  i:1
   8 SCopy            2    5    0               00 r[5]=r[2]; t1
REG[5] =  i:1
   9 IntCopy          1    6    0               00 r[6]=r[1]; rowid
REG[6] =  i:1
  10 MakeRecord       4    3    3               00 r[3]=mkrec(r[4..6]); for sqlite_autoindex_preceding_2
REG[3] =  s4[04090909....]
  11 NoConflict       1   19    4 2             00 key=r[4..5]
REG[4] =  i:1
REG[5] =  i:1
  19 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_preceding_1
  20 SCopy            2    8    0               00 r[8]=r[2]; t1
REG[8] =  i:1
  21 IntCopy          1    9    0               00 r[9]=r[1]; rowid
REG[9] =  i:1
  22 MakeRecord       8    2    7               00 r[7]=mkrec(r[8..9]); for sqlite_autoindex_preceding_1
REG[7] =  s3[030909...]
  23 Abortable        0    0    0               00 
  24 NoConflict       2   26    8 1             00 key=r[8]
REG[8] =  i:1
  26 IdxInsert        1    3    4 3             10 key=r[3]
REG[3] =  s4[04090909....]
  27 IdxInsert        2    7    8 2             10 key=r[7]
REG[7] =  s3[030909...]
  28 MakeRecord       2    1   10               00 r[10]=mkrec(r[2])
REG[10] =  s2[0209..]
  29 Insert           0   10    1 preceding     39 intkey=r[1] data=r[10]
REG[10] =  s2[0209..]
REG[1] =  i:1
  30 Halt             0    0    0               00 
parser: [[[;SELECT * FROM preceding;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kennels',nullif('kennels','kennels'),'CAMLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kerchiefs',nullif('kerchiefs','kerchiefs'),'CRCABC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kernel',nullif('kernel','kernel'),'CRML')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kerosene',nullif('kerosene','kerosene'),'CRCAMA')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,c0) VALUES(1,0,'keystrokes',nullif('keystrokes','keystrokes'),'CACDRCAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kicked',nullif('kicked','kicked'),'CACAD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kickers',nullif('kickers','kickers'),'CACRC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kidnap',nullif('kidnap','kidnap'),'CADMAB')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'killingly',nullif('killingly','killingly'),'CLMCL')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobits',nullif('kilobits','kilobits'),'CLBADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobytes',nullif('kilobytes','kilobytes'),'CLBADAC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilovolt',nullif('kilovolt','kilovolt'),'CLBLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilowatt',nullif('kilowatt','kilowatt'),'CLBAD')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,v0) VALUES(1,0,'kindest',nullif('kindest','kindest'),'CAMDACD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindles',nullif('kindles','kindles'),'CAMDLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindred',nullif('kindred','kindred'),'CAMDRD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kinetic',nullif('kinetic','kinetic'),'CAMADAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kisser',nullif('kisser','kisser'),'CACR')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kit',nullif('kit','kit'),'CAD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kiting',nullif('kiting','kiting'),'CADAMC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kits',nullif('kits','kits'),'CADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kittenish',nullif('kittenish','kittenish'),'CADAMAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'knee',nullif('knee','knee'),'MA')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kneeled',nullif('kneeled','kneeled'),'MLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knifing',nullif('knifing','knifing'),'MABAMC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'knolls',nullif('knolls','knolls'),'MLC')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'knowhow',nullif('knowhow','knowhow'),'MABAB')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knowledgeable',nullif('knowledgeable','knowledgeable'),'MABLCABL')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'known',nullif('known','known'),'MABM')
;SELECT t1, t1, t1, coalesce(t1,t1)  FROM "main"."preceding" WHERE t1=0 AND t1>=?1 AND t1<?2
;;CREATE VIRTUAL TABLE t4 USING spellfix1;INSERT OR IGNORE INTO "main"."over"(following,following,following,following,following,following) VALUES(3,1,0,'Zeus',nullif('zeus','Zeus'),'CAC')
;;SELECT t1, t1, NULL, t1, t1 FROM "main"."preceding" WHERE rowid=?
;UPDATE OR IGNORE "main"."t0" SET v0=3, v0=1, v0=0, v0='Apollo', v0=nullif('apollo','Apollo'), v0='ABL' WHERE v0=2
;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'SELECT' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[ecmd SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 96
parser: Return. Stack=[ecmd SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[ecmd SELECT distinct selcollist FROM]
parser: Input 'PRECEDING' in state 197
parser: FALLBACK PRECEDING => ID
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: FALLBACK PRECEDING => ID
parser: Shift 'PRECEDING', pending reduce 331
parser: Return. Stack=[ecmd SELECT distinct selcollist FROM stl_prefix PRECEDING]
parser: Input 'SEMI' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 1.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 1.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
SQL: [;SELECT * FROM preceding;]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    0    4 2             01 usesStmtJournal=0
   9 Goto             0    1    0               00 
   1 OpenRead         0    5    0 1             00 root=5 iDb=0; preceding
   2 Explain          2    0    0 SCAN TABLE preceding 00 
   3 Rewind           0    7    0               00 
   4 Column           0    0    1               00 r[1]=preceding.t1
REG[1] =  i:1
   5 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   6 Next             0    4    0               01 
   7 Halt             0    0    0               00 
parser: [[[INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kennels',nullif('kennels','kennels'),'CAMLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kerchiefs',nullif('kerchiefs','kerchiefs'),'CRCABC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kernel',nullif('kernel','kernel'),'CRML')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kerosene',nullif('kerosene','kerosene'),'CRCAMA')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,c0) VALUES(1,0,'keystrokes',nullif('keystrokes','keystrokes'),'CACDRCAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kicked',nullif('kicked','kicked'),'CACAD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kickers',nullif('kickers','kickers'),'CACRC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kidnap',nullif('kidnap','kidnap'),'CADMAB')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'killingly',nullif('killingly','killingly'),'CLMCL')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobits',nullif('kilobits','kilobits'),'CLBADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobytes',nullif('kilobytes','kilobytes'),'CLBADAC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilovolt',nullif('kilovolt','kilovolt'),'CLBLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilowatt',nullif('kilowatt','kilowatt'),'CLBAD')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,v0) VALUES(1,0,'kindest',nullif('kindest','kindest'),'CAMDACD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindles',nullif('kindles','kindles'),'CAMDLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindred',nullif('kindred','kindred'),'CAMDRD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kinetic',nullif('kinetic','kinetic'),'CAMADAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kisser',nullif('kisser','kisser'),'CACR')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kit',nullif('kit','kit'),'CAD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kiting',nullif('kiting','kiting'),'CADAMC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kits',nullif('kits','kits'),'CADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kittenish',nullif('kittenish','kittenish'),'CADAMAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'knee',nullif('knee','knee'),'MA')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kneeled',nullif('kneeled','kneeled'),'MLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knifing',nullif('knifing','knifing'),'MABAMC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'knolls',nullif('knolls','knolls'),'MLC')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'knowhow',nullif('knowhow','knowhow'),'MABAB')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knowledgeable',nullif('knowledgeable','knowledgeable'),'MABLCABL')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'known',nullif('known','known'),'MABM')
;SELECT t1, t1, t1, coalesce(t1,t1)  FROM "main"."preceding" WHERE t1=0 AND t1>=?1 AND t1<?2
;;CREATE VIRTUAL TABLE t4 USING spellfix1;INSERT OR IGNORE INTO "main"."over"(following,following,following,following,following,following) VALUES(3,1,0,'Zeus',nullif('zeus','Zeus'),'CAC')
;;SELECT t1, t1, NULL, t1, t1 FROM "main"."preceding" WHERE rowid=?
;UPDATE OR IGNORE "main"."t0" SET v0=3, v0=1, v0=0, v0='Apollo', v0=nullif('apollo','Apollo'), v0='ABL' WHERE v0=2
;]]]
parser: Input 'INSERT' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 156
parser: Reduce 156 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 427
parser: Shift 'INTO', go to state 164
parser: Return. Stack=[with insert_cmd INTO]
parser: Input 'ID' in state 164
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 164.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with insert_cmd INTO nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO nm DOT ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 164.
parser: ... then shift 'xfullname', go to state 298
parser: Shift 'LP', go to state 173
parser: Return. Stack=[with insert_cmd INTO xfullname LP]
parser: Input 'ID' in state 173
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname LP ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 173.
parser: ... then shift 'nm', pending reduce 161
parser: Reduce 161 [idlist ::= nm], go to state 173.
parser: ... then shift 'idlist', go to state 397
parser: Shift 'COMMA', go to state 241
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA]
parser: Input 'ID' in state 241
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 241.
parser: ... then shift 'nm', pending reduce 160
parser: Reduce 160 [idlist ::= idlist COMMA nm], go to state 173.
parser: ... then shift 'idlist', go to state 397
parser: Shift 'COMMA', go to state 241
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA]
parser: Input 'ID' in state 241
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 241.
parser: ... then shift 'nm', pending reduce 160
parser: Reduce 160 [idlist ::= idlist COMMA nm], go to state 173.
parser: ... then shift 'idlist', go to state 397
parser: Shift 'COMMA', go to state 241
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA]
parser: Input 'ID' in state 241
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 241.
parser: ... then shift 'nm', pending reduce 160
parser: Reduce 160 [idlist ::= idlist COMMA nm], go to state 173.
parser: ... then shift 'idlist', go to state 397
parser: Shift 'COMMA', go to state 241
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA]
parser: Input 'ID' in state 241
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA ID]
parser: Input 'RP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 241.
parser: ... then shift 'nm', pending reduce 160
parser: Reduce 160 [idlist ::= idlist COMMA nm], go to state 173.
parser: ... then shift 'idlist', go to state 397
parser: Shift 'RP', pending reduce 159
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist RP]
parser: Input 'VALUES' with pending reduce 159
parser: Reduce 159 [idlist_opt ::= LP idlist RP], go to state 298.
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'VALUES', go to state 526
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES]
parser: Input 'LP' in state 526
parser: Shift 'LP', go to state 28
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP]
parser: Input 'INTEGER' in state 28
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP INTEGER]
parser: Input 'COMMA' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 28.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA INTEGER]
parser: Input 'COMMA' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'ID' in state 107
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA ID LP]
parser: Input 'STRING' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA ID LP distinct STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 11.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA ID LP distinct nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA ID LP distinct nexprlist COMMA STRING]
parser: Input 'RP' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA ID LP distinct exprlist RP]
parser: Input 'COMMA' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'RP' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'RP', pending reduce 89
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist RP]
parser: Input 'SEMI' with pending reduce 89
parser: Reduce 89 [values ::= VALUES LP nexprlist RP], go to state 35.
parser: ... then shift 'values', go to state 532
parser: Reduce 348 [oneselect ::= values], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 152 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 150
parser: Reduce 150 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
SQL: [INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kennels',nullif('kennels','kennels'),'CAMLC')
;]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    1    4 2             01 usesStmtJournal=0
  25 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  26 Goto             0    1    0               00 
   1 OpenWrite        1    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t0_2
   2 OpenWrite        2    2    0 k(1,-)        00 root=2 iDb=0; sqlite_autoindex_t0_1
   3 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   4 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   5 HaltIfNull    1299    2    2 t0.c0         01 if r[2]=null halt
REG[2] =  i:1
   6 Affinity         2    1    0 D             00 affinity(r[2])
   7 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t0_2
   8 SCopy            3    5    0               00 r[5]=r[3]; v0
REG[5] =  NULL
   9 SCopy            2    6    0               00 r[6]=r[2]; c0
REG[6] =  i:1
  10 MakeRecord       5    2    4               00 r[4]=mkrec(r[5..6]); for sqlite_autoindex_t0_2
REG[4] =  s3[030009...]
  11 Abortable        0    0    0               00 
  12 NoConflict       1   14    5 1             00 key=r[5]
REG[5] =  NULL
  14 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t0_1
  15 SCopy            2    8    0               00 r[8]=r[2]; c0
REG[8] =  i:1
  16 SCopy            3    9    0               00 r[9]=r[3]; v0
REG[9] =  NULL
  17 MakeRecord       8    2    7               00 r[7]=mkrec(r[8..9]); for sqlite_autoindex_t0_1
REG[7] =  s3[030900...]
  18 Abortable        0    0    0               00 
  19 NoConflict       2   21    8 1             00 key=r[8]
REG[8] =  i:1
  21 IdxInsert        1    4    5 2             10 key=r[4]
REG[4] =  s3[030009...]
  22 IdxInsert        2    7    8 1             11 key=r[7]
REG[7] =  s3[030900...]
  23 Halt             0    0    0               00 
parser: [[[INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kerchiefs',nullif('kerchiefs','kerchiefs'),'CRCABC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kernel',nullif('kernel','kernel'),'CRML')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kerosene',nullif('kerosene','kerosene'),'CRCAMA')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,c0) VALUES(1,0,'keystrokes',nullif('keystrokes','keystrokes'),'CACDRCAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kicked',nullif('kicked','kicked'),'CACAD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kickers',nullif('kickers','kickers'),'CACRC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kidnap',nullif('kidnap','kidnap'),'CADMAB')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'killingly',nullif('killingly','killingly'),'CLMCL')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobits',nullif('kilobits','kilobits'),'CLBADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobytes',nullif('kilobytes','kilobytes'),'CLBADAC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilovolt',nullif('kilovolt','kilovolt'),'CLBLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilowatt',nullif('kilowatt','kilowatt'),'CLBAD')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,v0) VALUES(1,0,'kindest',nullif('kindest','kindest'),'CAMDACD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindles',nullif('kindles','kindles'),'CAMDLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindred',nullif('kindred','kindred'),'CAMDRD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kinetic',nullif('kinetic','kinetic'),'CAMADAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kisser',nullif('kisser','kisser'),'CACR')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kit',nullif('kit','kit'),'CAD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kiting',nullif('kiting','kiting'),'CADAMC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kits',nullif('kits','kits'),'CADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kittenish',nullif('kittenish','kittenish'),'CADAMAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'knee',nullif('knee','knee'),'MA')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kneeled',nullif('kneeled','kneeled'),'MLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knifing',nullif('knifing','knifing'),'MABAMC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'knolls',nullif('knolls','knolls'),'MLC')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'knowhow',nullif('knowhow','knowhow'),'MABAB')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knowledgeable',nullif('knowledgeable','knowledgeable'),'MABLCABL')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'known',nullif('known','known'),'MABM')
;SELECT t1, t1, t1, coalesce(t1,t1)  FROM "main"."preceding" WHERE t1=0 AND t1>=?1 AND t1<?2
;;CREATE VIRTUAL TABLE t4 USING spellfix1;INSERT OR IGNORE INTO "main"."over"(following,following,following,following,following,following) VALUES(3,1,0,'Zeus',nullif('zeus','Zeus'),'CAC')
;;SELECT t1, t1, NULL, t1, t1 FROM "main"."preceding" WHERE rowid=?
;UPDATE OR IGNORE "main"."t0" SET v0=3, v0=1, v0=0, v0='Apollo', v0=nullif('apollo','Apollo'), v0='ABL' WHERE v0=2
;]]]
parser: Input 'INSERT' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 156
parser: Reduce 156 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 427
parser: Shift 'INTO', go to state 164
parser: Return. Stack=[with insert_cmd INTO]
parser: Input 'ID' in state 164
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 164.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with insert_cmd INTO nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO nm DOT ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 164.
parser: ... then shift 'xfullname', go to state 298
parser: Shift 'LP', go to state 173
parser: Return. Stack=[with insert_cmd INTO xfullname LP]
parser: Input 'FOLLOWING' in state 173
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname LP FOLLOWING]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 173.
parser: ... then shift 'nm', pending reduce 161
parser: Reduce 161 [idlist ::= nm], go to state 173.
parser: ... then shift 'idlist', go to state 397
parser: Shift 'COMMA', go to state 241
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA]
parser: Input 'FOLLOWING' in state 241
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA FOLLOWING]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 241.
parser: ... then shift 'nm', pending reduce 160
parser: Reduce 160 [idlist ::= idlist COMMA nm], go to state 173.
parser: ... then shift 'idlist', go to state 397
parser: Shift 'COMMA', go to state 241
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA]
parser: Input 'FOLLOWING' in state 241
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA FOLLOWING]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 241.
parser: ... then shift 'nm', pending reduce 160
parser: Reduce 160 [idlist ::= idlist COMMA nm], go to state 173.
parser: ... then shift 'idlist', go to state 397
parser: Shift 'COMMA', go to state 241
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA]
parser: Input 'FOLLOWING' in state 241
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA FOLLOWING]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 241.
parser: ... then shift 'nm', pending reduce 160
parser: Reduce 160 [idlist ::= idlist COMMA nm], go to state 173.
parser: ... then shift 'idlist', go to state 397
parser: Shift 'COMMA', go to state 241
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA]
parser: Input 'FOLLOWING' in state 241
parser: FALLBACK FOLLOWING => ID
parser: Shift 'FOLLOWING', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA FOLLOWING]
parser: Input 'RP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 241.
parser: ... then shift 'nm', pending reduce 160
parser: Reduce 160 [idlist ::= idlist COMMA nm], go to state 173.
parser: ... then shift 'idlist', go to state 397
parser: Shift 'RP', pending reduce 159
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist RP]
parser: Input 'VALUES' with pending reduce 159
parser: Reduce 159 [idlist_opt ::= LP idlist RP], go to state 298.
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'VALUES', go to state 526
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES]
parser: Input 'LP' in state 526
parser: Shift 'LP', go to state 28
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP]
parser: Input 'INTEGER' in state 28
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP INTEGER]
parser: Input 'COMMA' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 28.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA INTEGER]
parser: Input 'COMMA' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'ID' in state 107
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA ID LP]
parser: Input 'STRING' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA ID LP distinct STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 11.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA ID LP distinct nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA ID LP distinct nexprlist COMMA STRING]
parser: Input 'RP' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA ID LP distinct exprlist RP]
parser: Input 'COMMA' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'RP' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'RP', pending reduce 89
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist RP]
parser: Input 'SEMI' with pending reduce 89
parser: Reduce 89 [values ::= VALUES LP nexprlist RP], go to state 35.
parser: ... then shift 'values', go to state 532
parser: Reduce 348 [oneselect ::= values], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 152 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 150
parser: Reduce 150 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
SQL: [INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kerchiefs',nullif('kerchiefs','kerchiefs'),'CRCABC')
;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    1    4 2             01 usesStmtJournal=0
   8 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 1             00 root=4 iDb=0; over
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 MakeRecord       2    1    3 B             00 r[3]=mkrec(r[2])
REG[3] =  s3[020F31..1]
   5 Insert           0    3    1 over          39 intkey=r[1] data=r[3]
REG[3] =  s3[020F31..1]
REG[1] =  i:6
   6 Halt             0    0    0               00 
parser: [[[INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kernel',nullif('kernel','kernel'),'CRML')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kerosene',nullif('kerosene','kerosene'),'CRCAMA')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,c0) VALUES(1,0,'keystrokes',nullif('keystrokes','keystrokes'),'CACDRCAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kicked',nullif('kicked','kicked'),'CACAD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kickers',nullif('kickers','kickers'),'CACRC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kidnap',nullif('kidnap','kidnap'),'CADMAB')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'killingly',nullif('killingly','killingly'),'CLMCL')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobits',nullif('kilobits','kilobits'),'CLBADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kilobytes',nullif('kilobytes','kilobytes'),'CLBADAC')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilovolt',nullif('kilovolt','kilovolt'),'CLBLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kilowatt',nullif('kilowatt','kilowatt'),'CLBAD')
;INSERT INTO "main"."t0"(c0,v0,v0,v0,v0) VALUES(1,0,'kindest',nullif('kindest','kindest'),'CAMDACD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindles',nullif('kindles','kindles'),'CAMDLC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kindred',nullif('kindred','kindred'),'CAMDRD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kinetic',nullif('kinetic','kinetic'),'CAMADAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kisser',nullif('kisser','kisser'),'CACR')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kit',nullif('kit','kit'),'CAD')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kiting',nullif('kiting','kiting'),'CADAMC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kits',nullif('kits','kits'),'CADC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'kittenish',nullif('kittenish','kittenish'),'CADAMAC')
;INSERT INTO "main"."over"(following,following,following,following,following) VALUES(1,0,'knee',nullif('knee','knee'),'MA')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kneeled',nullif('kneeled','kneeled'),'MLD')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knifing',nullif('knifing','knifing'),'MABAMC')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'knolls',nullif('knolls','knolls'),'MLC')
;INSERT INTO "main"."t0"(v0,v0,v0,v0,v0) VALUES(1,0,'knowhow',nullif('knowhow','knowhow'),'MABAB')
;INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'knowledgeable',nullif('knowledgeable','knowledgeable'),'MABLCABL')
;INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'known',nullif('known','known'),'MABM')
;SELECT t1, t1, t1, coalesce(t1,t1)  FROM "main"."preceding" WHERE t1=0 AND t1>=?1 AND t1<?2
;;CREATE VIRTUAL TABLE t4 USING spellfix1;INSERT OR IGNORE INTO "main"."over"(following,following,following,following,following,following) VALUES(3,1,0,'Zeus',nullif('zeus','Zeus'),'CAC')
;;SELECT t1, t1, NULL, t1, t1 FROM "main"."preceding" WHERE rowid=?
;UPDATE OR IGNORE "main"."t0" SET v0=3, v0=1, v0=0, v0='Apollo', v0=nullif('apollo','Apollo'), v0='ABL' WHERE v0=2
;]]]
parser: Input 'INSERT' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 156
parser: Reduce 156 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 427
parser: Shift 'INTO', go to state 164
parser: Return. Stack=[with insert_cmd INTO]
parser: Input 'ID' in state 164
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 164.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with insert_cmd INTO nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO nm DOT ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 164.
parser: ... then shift 'xfullname', go to state 298
parser: Shift 'LP', go to state 173
parser: Return. Stack=[with insert_cmd INTO xfullname LP]
parser: Input 'ID' in state 173
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname LP ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 173.
parser: ... then shift 'nm', pending reduce 161
parser: Reduce 161 [idlist ::= nm], go to state 173.
parser: ... then shift 'idlist', go to state 397
parser: Shift 'COMMA', go to state 241
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA]
parser: Input 'ID' in state 241
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 241.
parser: ... then shift 'nm', pending reduce 160
parser: Reduce 160 [idlist ::= idlist COMMA nm], go to state 173.
parser: ... then shift 'idlist', go to state 397
parser: Shift 'COMMA', go to state 241
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA]
parser: Input 'ID' in state 241
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 241.
parser: ... then shift 'nm', pending reduce 160
parser: Reduce 160 [idlist ::= idlist COMMA nm], go to state 173.
parser: ... then shift 'idlist', go to state 397
parser: Shift 'COMMA', go to state 241
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA]
parser: Input 'ID' in state 241
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 241.
parser: ... then shift 'nm', pending reduce 160
parser: Reduce 160 [idlist ::= idlist COMMA nm], go to state 173.
parser: ... then shift 'idlist', go to state 397
parser: Shift 'COMMA', go to state 241
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA]
parser: Input 'ID' in state 241
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist COMMA ID]
parser: Input 'RP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 241.
parser: ... then shift 'nm', pending reduce 160
parser: Reduce 160 [idlist ::= idlist COMMA nm], go to state 173.
parser: ... then shift 'idlist', go to state 397
parser: Shift 'RP', pending reduce 159
parser: Return. Stack=[with insert_cmd INTO xfullname LP idlist RP]
parser: Input 'VALUES' with pending reduce 159
parser: Reduce 159 [idlist_opt ::= LP idlist RP], go to state 298.
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'VALUES', go to state 526
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES]
parser: Input 'LP' in state 526
parser: Shift 'LP', go to state 28
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP]
parser: Input 'INTEGER' in state 28
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP INTEGER]
parser: Input 'COMMA' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 28.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA INTEGER]
parser: Input 'COMMA' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'ID' in state 107
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA ID LP]
parser: Input 'STRING' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA ID LP distinct STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 11.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA ID LP distinct nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA ID LP distinct nexprlist COMMA STRING]
parser: Input 'RP' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA ID LP distinct exprlist RP]
parser: Input 'COMMA' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'RP' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'RP', pending reduce 89
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist RP]
parser: Input 'SEMI' with pending reduce 89
parser: Reduce 89 [values ::= VALUES LP nexprlist RP], go to state 35.
parser: ... then shift 'values', go to state 532
parser: Reduce 348 [oneselect ::= values], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 152 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 150
parser: Reduce 150 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
SQL: [INSERT INTO "main"."preceding"(t1,t1,t1,t1,t1) VALUES(1,0,'kernel',nullif('kernel','kernel'),'CRML')
;]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    1    4 2             01 usesStmtJournal=0
  32 Goto             0    1    0               00 
   1 OpenWrite        0    5    0 1             00 root=5 iDb=0; preceding
   2 OpenWrite        1    7    0 k(3,,,)       00 root=7 iDb=0; sqlite_autoindex_preceding_2
   3 OpenWrite        2    6    0 k(2,,)        00 root=6 iDb=0; sqlite_autoindex_preceding_1
   4 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   5 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   6 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_preceding_2
   7 SCopy            2    4    0               00 r[4]=r[2]; t1
REG[4] =  i:1
   8 SCopy            2    5    0               00 r[5]=r[2]; t1
REG[5] =  i:1
   9 IntCopy          1    6    0               00 r[6]=r[1]; rowid
REG[6] =  i:2
  10 MakeRecord       4    3    3               00 r[3]=mkrec(r[4..6]); for sqlite_autoindex_preceding_2
REG[3] =  s5[0409090102.....]
  11 NoConflict       1   19    4 2             00 key=r[4..5]
REG[4] =  i:1
REG[5] =  i:1
  12 IdxRowid         1   10    0               00 r[10]=rowid
REG[10] =  i:1
  13 NotExists        0   19   10 1             00 intkey=r[10]
REG[10] =  i:1
  14 Column           0    0   11               00 r[11]=preceding.t1
REG[11] =  i:1
  15 Rowid            0   12    0               00 r[12]=rowid
REG[12] =  i:1
  16 IdxDelete        2   11    2               00 key=r[11..12]
  17 Delete           0    0    0 preceding     00 
  18 Delete           1    0    0               00 
  19 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_preceding_1
  20 SCopy            2    8    0               00 r[8]=r[2]; t1
REG[8] =  i:1
  21 IntCopy          1    9    0               00 r[9]=r[1]; rowid
REG[9] =  i:2
  22 MakeRecord       8    2    7               00 r[7]=mkrec(r[8..9]); for sqlite_autoindex_preceding_1
REG[7] =  s4[03090102....]
  23 Abortable        0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f4962da7859 in __GI_abort () at abort.c:79
#2  0x00007f4962da7729 in __assert_fail_base (fmt=0x7f4962f3d588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x213d8b "p->nWrite==0 || p->usesStmtJournal", file=0x22873d "sqlite3.c", line=77006, 
    function=<optimized out>) at assert.c:92
#3  0x00007f4962db8fd6 in __GI___assert_fail (assertion=0x213d8b "p->nWrite==0 || p->usesStmtJournal", file=0x22873d "sqlite3.c", line=77006, function=0x227155 "void sqlite3VdbeAssertAbortable(Vdbe *)") at assert.c:101
#4  0x00000000003e133c in sqlite3VdbeAssertAbortable (p=0x994e70) at sqlite3.c:77006
#5  0x00000000003e01da in sqlite3VdbeExec (p=0x994e70) at sqlite3.c:91079
#6  0x0000000000411104 in sqlite3Step (p=0x994e70) at sqlite3.c:81930
#7  0x000000000029128d in sqlite3_step (pStmt=0x994e70) at sqlite3.c:81995
#8  0x00000000002570b9 in main (argc=1, argv=0x7ffe33796418) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 58605] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
