GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000485,sig:11,src:019917+020234,time:16352438,execs:3177496,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT 2.0e-27 * '+0.5e+127'
;]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 Real             0    2    0 2e-27         00 r[2]=2e-27
REG[2] =  r:2e-27
   6 String8          0    3    0 +0.5e+127     00 r[3]='+0.5e+127'
REG[3] =   t9[+0.5e+127](8)
   7 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Multiply         3    2    1               00 r[1]=r[3]*r[2]
REG[3] =   t9[+0.5e+127](8)
REG[2] =  r:2e-27
REG[1] =  r:1e+100
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  r:1e+100
   4 Halt             0    0    0               00 
SQL: [SELECT 2.0e-27 * '+0.000005e+132'
;]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 Real             0    2    0 2e-27         00 r[2]=2e-27
REG[2] =  r:2e-27
   6 String8          0    3    0 +0.000005e+132 00 r[3]='+0.000005e+132'
REG[3] =   t14[+0.000005e+132](8)
   7 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Multiply         3    2    1               00 r[1]=r[3]*r[2]
REG[3] =   t14[+0.000005e+132](8)
REG[2] =  r:2e-27
REG[1] =  r:1e+100
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  r:1e+100
   4 Halt             0    0    0               00 
SQL: [PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0   87   84               00 Start at 87
  87 Transaction      0    0    4 1             01 usesStmtJournal=0
  88 Transaction      1    0    0 2             01 usesStmtJournal=0
  89 Goto             0    1    0               00 
   1 Integer         99    1    0               00 r[1]=99
REG[1] =  i:99
   2 IntegrityCk      2    5    1 [5,4,2,3,1]   00 
   3 IsNull           2    9    0               00 if r[2]==NULL goto 9
REG[2] =  NULL
   9 OpenRead         1    5    0 1             00 root=5 iDb=0; x
  10 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  11 Rewind           1   15    0               00 
  15 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  16 OpenRead         1    4    0 2             00 root=4 iDb=0; over
  17 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  18 Rewind           1   22    0               00 
  22 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  23 OpenRead         1    2    0 2             00 root=2 iDb=0; t0
  24 OpenRead         2    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t0_1
  25 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  26 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  27 Rewind           1   50    0               00 
  50 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  51 Count            2    3    0               00 r[3]=count()
REG[3] =  i:0
  52 Eq               8   58    3               90 if r[3]==r[8] goto 58
REG[8] =  i:0
REG[3] =  i:0
  58 OpenRead         1    1    0 5             00 root=1 iDb=0; sqlite_master
  59 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  60 Rewind           1   64    0               00 
  61 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  62 Column           1    4    3               80 r[3]=
REG[3] =   s29[CREATE TABLE t0](8)
  63 Next             1   61    0               00 
  61 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
  62 Column           1    4    3               80 r[3]=
REG[3] =  NULL
  63 Next             1   61    0               00 
  61 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:2
  62 Column           1    4    3               80 r[3]=
REG[3] =   s39[CREATE TABLE ov](8)
  63 Next             1   61    0               00 
  61 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:3
  62 Column           1    4    3               80 r[3]=
REG[3] =   s112[CREATE TRIGGER ](8)
  63 Next             1   61    0               00 
  61 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:4
  62 Column           1    4    3               80 r[3]=
REG[3] =   s23[CREATE TABLE x(](8)
  63 Next             1   61    0               00 
  64 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  65 IntegrityCk      2    1    1 [1]           01 
  66 IsNull           2   72    0               00 if r[2]==NULL goto 72
REG[2] =  NULL
  72 OpenRead         1    1    1 5             00 root=1 iDb=1; sqlite_temp_master
  73 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  74 Rewind           1   78    0               00 
  78 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  79 AddImm           1  -99    0               00 r[1]=r[1]+-99
REG[1] =  i:99
  80 IfNotZero        1   83    0               00 if r[1]!=0 then r[1]--, goto 83
REG[1] =  i:0
  81 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
  82 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
  83 Halt             0    0    0               00 
SQL: [CREATE TABLE last_field(test002 INT UNIQUE);]
VDBE Trace:
   0 Init             0   39    0               00 Start at 39
  39 Transaction      0    1    4 1             01 usesStmtJournal=0
  40 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:6
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:6
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      0    4    2               00 r[4]=root iDb=0 flags=2
REG[4] =  i:7
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:7
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_last_field_1 00 r[7]='sqlite_autoindex_last_field_1'
REG[7] =   t29[sqlite_autoinde](8)
  17 String8          0    8    0 last_field    00 r[8]='last_field'
REG[8] =   t10[last_field](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:7
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s51[061747210100696E64657873716C6974..G!..indexsqlit]
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  s51[061747210100696E64657873716C6974..G!..indexsqlit]
REG[5] =  i:7
  22 Close            0    0    0               00 
  23 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  24 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  25 Explain         25    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  26 SeekRowid        2   28    1               00 intkey=r[1]
REG[1] =  i:6
  27 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:6
  28 IsNull          13   36    0               00 if r[13]==NULL goto 36
REG[13] =  i:6
  29 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  30 String8          0   15    0 last_field    00 r[15]='last_field'
REG[15] =   t10[last_field](8)
  31 String8          0   16    0 last_field    00 r[16]='last_field'
REG[16] =   t10[last_field](8)
  32 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:6
  33 String8          0   18    0 CREATE TABLE last_field(test002 INT UNIQUE) 00 r[18]='CREATE TABLE last_field(test002 INT UNIQUE)'
REG[18] =   t43[CREATE TABLE la](8)
  34 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s75[0617212101637461626C656C6173745F..!!.ctablelast_]
  35 Insert           2   19   13               00 intkey=r[13] data=r[19]
REG[19] =  s75[0617212101637461626C656C6173745F..!!.ctablelast_]
REG[13] =  i:6
  36 SetCookie        0    1    5               00 
  37 ParseSchema      0    0    0 tbl_name='last_field' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    5 1             00 usesStmtJournal=0
  16 String8          0    2    0 last_field    00 r[2]='last_field'
REG[2] =   t10[last_field](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t10[last_field](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t10[last_field](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[over](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t10[last_field](8)
REG[1] =   s4[over](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t10[last_field](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t10[last_field](8)
REG[1] =   s1[x](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s10[last_field](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t10[last_field](8)
REG[1] =   s10[last_field](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s10[last_field](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:6
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s43[CREATE TABLE la](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s10[last_field](8)
REG[5] =  i:6
REG[6] =   s43[CREATE TABLE la](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s10[last_field](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t10[last_field](8)
REG[1] =   s10[last_field](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s29[sqlite_autoinde](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:7
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =  NULL
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s29[sqlite_autoinde](8)
REG[5] =  i:7
REG[6] =  NULL
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  38 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM x WHERE test001>=-2147483648 ORDER BY test001;]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    5 1             01 usesStmtJournal=0
  20 Int64            0    2    0 -2147483648   00 r[2]=-2147483648
REG[2] =  i:-2147483648
  21 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0    5    0 1             00 root=5 iDb=0; x
   3 Explain          3    0    0 SCAN TABLE x  00 
   4 Rewind           0   11    0               00 
  11 Explain         11    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  12 OpenPseudo       2    6    3               00 3 columns in r[6]
  13 SorterSort       1   18    0               00 
  18 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t0 WHERE c0>-2147483648 ORDER BY c0;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    5 1             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t0
   3 OpenRead         2    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t0_1
   4 Explain          4    0    0 SEARCH TABLE t0 USING INDEX sqlite_autoindex_t0_1 (c0>?) 00 
   5 Int64            0    1    0 -2147483648   00 r[1]=-2147483648
REG[1] =  i:-2147483648
   6 SeekGT           2   12    1 1             00 key=r[1]
REG[1] =  i:-2147483648
  12 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM x WHERE test001>=0 AND test001<2147483648 ORDER BY test001 DESC;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    0    5 1             01 usesStmtJournal=0
  22 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
  23 Int64            0    3    0 2147483648    00 r[3]=2147483648
REG[3] =  i:2147483648
  24 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,-B)       00 
   2 OpenRead         0    5    0 1             00 root=5 iDb=0; x
   3 Explain          3    0    0 SCAN TABLE x  00 
   4 Rewind           0   13    0               00 
  13 Explain         13    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  14 OpenPseudo       2    7    3               00 3 columns in r[7]
  15 SorterSort       1   20    0               00 
  20 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM over WHERE preceding>=0 AND preceding<=2147483647 ORDER BY preceding DESC;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0    5 1             01 usesStmtJournal=0
  24 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
  25 Integer       2147483647    3    0               00 r[3]=2147483647
REG[3] =  i:2147483647
  26 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,-B)       00 
   2 OpenRead         0    4    0 2             00 root=4 iDb=0; over
   3 Explain          3    0    0 SCAN TABLE over 00 
   4 Rewind           0   14    0               00 
  14 Explain         14    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  15 OpenPseudo       2    8    4               00 4 columns in r[8]
  16 SorterSort       1   22    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;CREATE TABLE field1(test003 INTEGER PRIMARY KEY, field2);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    5 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:8
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:8
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:8
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:8
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:8
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:8
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 field1        00 r[7]='field1'
REG[7] =   t6[field1](8)
  20 String8          0    8    0 field1        00 r[8]='field1'
REG[8] =   t6[field1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:8
  22 String8          0   10    0 CREATE TABLE field1(test003 INTEGER PRIMARY KEY, field2) 00 r[10]='CREATE TABLE field1(test003 INTEGER PRIMARY KEY, field2)'
REG[10] =   t56[CREATE TABLE fi](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s80[06171919017D7461626C656669656C64.....}tablefield]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s80[06171919017D7461626C656669656C64.....}tablefield]
REG[5] =  i:8
  25 SetCookie        0    1    6               00 
  26 ParseSchema      0    0    0 tbl_name='field1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    6 1             00 usesStmtJournal=0
  16 String8          0    2    0 field1        00 r[2]='field1'
REG[2] =   t6[field1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field1](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field1](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[over](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field1](8)
REG[1] =   s4[over](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field1](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field1](8)
REG[1] =   s1[x](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s10[last_field](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field1](8)
REG[1] =   s10[last_field](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s10[last_field](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field1](8)
REG[1] =   s10[last_field](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s6[field1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t6[field1](8)
REG[1] =   s6[field1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s6[field1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:8
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s56[CREATE TABLE fi](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s6[field1](8)
REG[5] =  i:8
REG[6] =   s56[CREATE TABLE fi](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 

Program received signal SIGSEGV, Segmentation fault.
__strcmp_avx2 () at ../sysdeps/x86_64/multiarch/strcmp-avx2.S:102
(gdb) #0  __strcmp_avx2 () at ../sysdeps/x86_64/multiarch/strcmp-avx2.S:102
#1  0x000000000034a642 in sqlite3ExprCodeTarget (pParse=0x2482590, pExpr=0x2488cb0, target=8) at sqlite3.c:100443
#2  0x000000000034e9ee in sqlite3ExprCodeExprList (pParse=0x2482590, pList=0x248dc60, target=8, srcReg=0, flags=1 '\001') at sqlite3.c:101202
#3  0x00000000003ae220 in pushOntoSorter (pParse=0x2482590, pSort=0x7ffca1945898, pSelect=0x2484fc0, regData=9, regOrigData=0, nData=1, nPrefixReg=1) at sqlite3.c:125256
#4  0x00000000003a9edf in selectInnerLoop (pParse=0x2482590, p=0x2484fc0, srcTab=-1, pSort=0x7ffca1945898, pDistinct=0x7ffca1945950, pDest=0x7ffca1945a38, iContinue=-4, iBreak=-2) at sqlite3.c:125809
#5  0x00000000002fe191 in sqlite3Select (pParse=0x2482590, p=0x2484fc0, pDest=0x7ffca1945a38) at sqlite3.c:130743
#6  0x00000000002fd24a in sqlite3Select (pParse=0x2482590, p=0x2481780, pDest=0x7ffca1945d58) at sqlite3.c:130524
#7  0x0000000000309aa3 in sqlite3Insert (pParse=0x2482590, pTabList=0x24820e0, pSelect=0x2481780, pColumn=0x0, onError=11, pUpsert=0x0) at sqlite3.c:117162
#8  0x00000000003949b6 in codeTriggerProgram (pParse=0x2482590, pStepList=0x2493700, orconf=11) at sqlite3.c:132245
#9  0x0000000000394209 in codeRowTrigger (pParse=0x7ffca1946f50, pTrigger=0x2493c60, pTab=0x2493cd0, orconf=11) at sqlite3.c:132398
#10 0x000000000039393d in getRowTrigger (pParse=0x7ffca1946f50, pTrigger=0x2493c60, pTab=0x2493cd0, orconf=11) at sqlite3.c:132455
#11 0x0000000000393453 in sqlite3CodeRowTriggerDirect (pParse=0x7ffca1946f50, p=0x2493c60, pTab=0x2493cd0, reg=4, orconf=11, ignoreJump=-1) at sqlite3.c:132477
#12 0x0000000000363845 in sqlite3CodeRowTrigger (pParse=0x7ffca1946f50, pTrigger=0x2493c60, op=120, pChanges=0x0, tr_tm=1, pTab=0x2493cd0, reg=4, orconf=11, ignoreJump=-1) at sqlite3.c:132571
#13 0x000000000030ad90 in sqlite3Insert (pParse=0x7ffca1946f50, pTabList=0x247da90, pSelect=0x0, pColumn=0x2484b10, onError=11, pUpsert=0x0) at sqlite3.c:117389
#14 0x00000000002ee6c8 in yy_reduce (yypParser=0x7ffca1946570, yyruleno=150, yyLookahead=1, yyLookaheadToken=..., pParse=0x7ffca1946f50) at sqlite3.c:151937
#15 0x00000000002e92f8 in sqlite3Parser (yyp=0x7ffca1946570, yymajor=1, yyminor=...) at sqlite3.c:152877
#16 0x00000000002a68b3 in sqlite3RunParser (pParse=0x7ffca1946f50, 
    zSql=0x2484681 ";;INSERT INTO x(test001) SELECT test001||'e' FROM x;;INSERT INTO x(test001) SELECT test001||'h' FROM x;;SELECT count(preceding), count(preceding) FROM over;;CREATE TABLE test004 (field3, test005);CREA"..., pzErrMsg=0x7ffca1947130) at sqlite3.c:154013
#17 0x00000000002a1683 in sqlite3Prepare (db=0x246e260, 
    zSql=0x246ee1e ";INSERT INTO t0(v0) VALUES('xyz');;INSERT INTO x(test001) SELECT test001||'e' FROM x;;INSERT INTO x(test001) SELECT test001||'h' FROM x;;SELECT count(preceding), count(preceding) FROM over;;CREATE TAB"..., nBytes=857, prepFlags=128, pReprepare=0x0, ppStmt=0x7ffca1947268, pzTail=0x7ffca1947250) at sqlite3.c:124303
#18 0x00000000002a0d4e in sqlite3LockAndPrepare (db=0x246e260, 
    zSql=0x246ee1e ";INSERT INTO t0(v0) VALUES('xyz');;INSERT INTO x(test001) SELECT test001||'e' FROM x;;INSERT INTO x(test001) SELECT test001||'h' FROM x;;SELECT count(preceding), count(preceding) FROM over;;CREATE TAB"..., nBytes=857, prepFlags=128, pOld=0x0, ppStmt=0x7ffca1947268, pzTail=0x7ffca1947250) at sqlite3.c:124403
#19 0x000000000029247f in sqlite3_prepare_v2 (db=0x246e260, 
    zSql=0x246ee1e ";INSERT INTO t0(v0) VALUES('xyz');;INSERT INTO x(test001) SELECT test001||'e' FROM x;;INSERT INTO x(test001) SELECT test001||'h' FROM x;;SELECT count(preceding), count(preceding) FROM over;;CREATE TAB"..., nBytes=857, ppStmt=0x7ffca1947268, pzTail=0x7ffca1947250) at sqlite3.c:124487
#20 0x0000000000256bd0 in main (argc=1, argv=0x7ffca1947418) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 58864] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
