GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000122,sig:06,src:019983+017956,time:1644556,execs:195420,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_listing=on;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [CREATE TABLE test001(last_field,test002);]
VDBE Program Listing:
   0 Init             0   28    0               00 Start at 28
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
  16 Rowid            1    5    0               00 r[5]=rowid
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
  18 String8          0    6    0 table         00 r[6]='table'
  19 String8          0    7    0 test001       00 r[7]='test001'
  20 String8          0    8    0 test001       00 r[8]='test001'
  21 Copy             2    9    0               00 r[9]=r[2]
  22 String8          0   10    0 CREATE TABLE test001(last_field,test002) 00 r[10]='CREATE TABLE test001(last_field,test002)'
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
  25 SetCookie        0    1    5               00 
  26 ParseSchema      0    0    0 tbl_name='test001' AND type!='trigger' 00 
  27 Halt             0    0    0               00 
  28 Transaction      0    1    4 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    5 1             00 usesStmtJournal=0
  16 String8          0    2    0 test001       00 r[2]='test001'
  17 String8          0    3    0 trigger       00 r[3]='trigger'
  18 Goto             0    1    0               00 
SQL: [;CREATE VIEW field1 AS SELECT following AS a, preceding AS b FROM over;]
VDBE Program Listing:
   0 Init             0   28    0               00 Start at 28
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 Integer          0    2    0               00 r[2]=0
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
  16 Rowid            1    5    0               00 r[5]=rowid
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
  18 String8          0    6    0 view          00 r[6]='view'
  19 String8          0    7    0 field1        00 r[7]='field1'
  20 String8          0    8    0 field1        00 r[8]='field1'
  21 Copy             2    9    0               00 r[9]=r[2]
  22 String8          0   10    0 CREATE VIEW field1 AS SELECT following AS a, preceding AS b FROM over 00 r[10]='CREATE VIEW field1 AS SELECT following AS a, preceding AS b FROM over'
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
  25 SetCookie        0    1    6               00 
  26 ParseSchema      0    0    0 tbl_name='field1' AND type!='trigger' 00 
  27 Halt             0    0    0               00 
  28 Transaction      0    1    5 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    6 1             00 usesStmtJournal=0
  16 String8          0    2    0 field1        00 r[2]='field1'
  17 String8          0    3    0 trigger       00 r[3]='trigger'
  18 Goto             0    1    0               00 
SQL: [DROP TABLE IF EXISTS test001;]
VDBE Program Listing:
   0 Init             0   38    0               00 Start at 38
   1 Null             0    1    0               00 r[1]=NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
   7 Column           0    0    2               00 r[2]=sqlite_master.type
   8 Eq               4   12    2 (BINARY)      52 if r[2]==r[4] goto 12
   9 Rowid            0    5    0               00 r[5]=rowid
  10 Once             0   11    0               00 
  11 Delete           0    0    0               02 
  12 Next             0    5    0               01 
  13 Destroy          4    2    0               00 
  14 Null             0    6    7               00 r[6..7]=NULL
  15 IfNot            2   24    1               00 
  16 OpenRead         1    1    0 4             00 root=1 iDb=0; sqlite_master
  17 Explain         17    0    0 SCAN TABLE sqlite_master 00 
  18 Rewind           1   24    0               00 
  19 Column           1    3   13               00 r[13]=sqlite_master.rootpage
  20 Ne               2   23   13 (BINARY)      54 if r[13]!=r[2] goto 23
  21 Rowid            1    7    0               00 r[7]=rowid
  22 RowSetAdd        6    7    0               00 rowset(6)=r[7]
  23 Next             1   19    0               01 
  24 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  25 RowSetRead       6   35    7               00 r[7]=rowset(6)
  26 NotExists        1   25    7               00 intkey=r[7]
  27 Column           1    0    8               00 r[8]=sqlite_master.type
  28 Column           1    1    9               00 r[9]=sqlite_master.name
  29 Column           1    2   10               00 r[10]=sqlite_master.tbl_name
  30 Integer          4   11    0               00 r[11]=4
  31 Column           1    4   12               00 r[12]=sqlite_master.sql
  32 MakeRecord       8    5   13 BBBDB         00 r[13]=mkrec(r[8..12])
  33 Insert           1   13    7               00 intkey=r[7] data=r[13]
  34 Goto             0   25    0               00 
  35 DropTable        0    0    0 test001       00 
  36 SetCookie        0    1    7               00 
  37 Halt             0    0    0               00 
  38 Transaction      0    1    6 1             01 usesStmtJournal=1
  39 String8          0    3    0 test001       00 r[3]='test001'
  40 String8          0    4    0 trigger       00 r[4]='trigger'
  41 Goto             0    1    0               00 
SQL: [;CREATE TABLE test003(field2 INT);]
VDBE Program Listing:
   0 Init             0   28    0               00 Start at 28
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
  16 Rowid            1    5    0               00 r[5]=rowid
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
  18 String8          0    6    0 table         00 r[6]='table'
  19 String8          0    7    0 test003       00 r[7]='test003'
  20 String8          0    8    0 test003       00 r[8]='test003'
  21 Copy             2    9    0               00 r[9]=r[2]
  22 String8          0   10    0 CREATE TABLE test003(field2 INT) 00 r[10]='CREATE TABLE test003(field2 INT)'
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
  25 SetCookie        0    1    8               00 
  26 ParseSchema      0    0    0 tbl_name='test003' AND type!='trigger' 00 
  27 Halt             0    0    0               00 
  28 Transaction      0    1    7 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    8 1             00 usesStmtJournal=0
  16 String8          0    2    0 test003       00 r[2]='test003'
  17 String8          0    3    0 trigger       00 r[3]='trigger'
  18 Goto             0    1    0               00 
SQL: [;INSERT INTO t0(c0) VALUES(123);]
VDBE Program Listing:
   0 Init             0    7    0               00 Start at 7
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t0
   2 NewRowid         0    1    0               00 r[1]=rowid
   3 Integer        123    2    0               00 r[2]=123
   4 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
   5 Insert           0    4    1 t0            39 intkey=r[1] data=r[4]
   6 Halt             0    0    0               00 
   7 Transaction      0    1    8 1             01 usesStmtJournal=0
   8 Null             0    3    0               00 r[3]=NULL
   9 Goto             0    1    0               00 
SQL: [;-- added 2019-08-10 to invalidate
  DROP TABLE IF EXISTS over;]
VDBE Program Listing:
   0 Init             0   38    0               00 Start at 38
   1 Null             0    1    0               00 r[1]=NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
   7 Column           0    0    2               00 r[2]=sqlite_master.type
   8 Eq               4   12    2 (BINARY)      52 if r[2]==r[4] goto 12
   9 Rowid            0    5    0               00 r[5]=rowid
  10 Once             0   11    0               00 
  11 Delete           0    0    0               02 
  12 Next             0    5    0               01 
  13 Destroy          3    2    0               00 
  14 Null             0    6    7               00 r[6..7]=NULL
  15 IfNot            2   24    1               00 
  16 OpenRead         1    1    0 4             00 root=1 iDb=0; sqlite_master
  17 Explain         17    0    0 SCAN TABLE sqlite_master 00 
  18 Rewind           1   24    0               00 
  19 Column           1    3   13               00 r[13]=sqlite_master.rootpage
  20 Ne               2   23   13 (BINARY)      54 if r[13]!=r[2] goto 23
  21 Rowid            1    7    0               00 r[7]=rowid
  22 RowSetAdd        6    7    0               00 rowset(6)=r[7]
  23 Next             1   19    0               01 
  24 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  25 RowSetRead       6   35    7               00 r[7]=rowset(6)
  26 NotExists        1   25    7               00 intkey=r[7]
  27 Column           1    0    8               00 r[8]=sqlite_master.type
  28 Column           1    1    9               00 r[9]=sqlite_master.name
  29 Column           1    2   10               00 r[10]=sqlite_master.tbl_name
  30 Integer          3   11    0               00 r[11]=3
  31 Column           1    4   12               00 r[12]=sqlite_master.sql
  32 MakeRecord       8    5   13 BBBDB         00 r[13]=mkrec(r[8..12])
  33 Insert           1   13    7               00 intkey=r[7] data=r[13]
  34 Goto             0   25    0               00 
  35 DropTable        0    0    0 over          00 
  36 SetCookie        0    1    9               00 
  37 Halt             0    0    0               00 
  38 Transaction      0    1    8 1             01 usesStmtJournal=1
  39 String8          0    3    0 over          00 r[3]='over'
  40 String8          0    4    0 trigger       00 r[4]='trigger'
  41 Goto             0    1    0               00 
SQL: [;-- added by ticket 3b44500725
  INSERT INTO test003 VALUES(17),(2),(99),(-3),(7);]
VDBE Program Listing:
   0 Init             0   21    0               00 Start at 21
   1 InitCoroutine    3   14    2               00 
   2 Explain          2    0    0 SCAN 5 CONSTANT ROWS 00 
   3 Integer         17    2    0               00 r[2]=17
   4 Yield            3    0    0               00 
   5 Integer          2    2    0               00 r[2]=2
   6 Yield            3    0    0               00 
   7 Integer         99    2    0               00 r[2]=99
   8 Yield            3    0    0               00 
   9 Integer         -3    2    0               00 r[2]=-3
  10 Yield            3    0    0               00 
  11 Integer          7    2    0               00 r[2]=7
  12 Yield            3    0    0               00 
  13 EndCoroutine     3    0    0               00 
  14 OpenWrite        0    4    0 1             00 root=4 iDb=0; test003
  15 Yield            3   20    0               00 
  16 NewRowid         0    1    0               00 r[1]=rowid
  17 MakeRecord       2    1    4 D             00 r[4]=mkrec(r[2])
  18 Insert           0    4    1 test003       39 intkey=r[1] data=r[4]
  19 Goto             0   15    0               00 
  20 Halt             0    0    0               00 
  21 Transaction      0    1    9 1             01 usesStmtJournal=0
  22 Goto             0    1    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fd544958859 in __GI_abort () at abort.c:79
#2  0x00007fd544958729 in __assert_fail_base (fmt=0x7fd544aee588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x211bd9 "pColExpr->op!=TK_AGG_COLUMN", file=0x22873d "sqlite3.c", line=126590, 
    function=<optimized out>) at assert.c:92
#3  0x00007fd544969fd6 in __GI___assert_fail (assertion=0x211bd9 "pColExpr->op!=TK_AGG_COLUMN", file=0x22873d "sqlite3.c", line=126590, 
    function=0x221122 "int sqlite3ColumnsFromExprList(Parse *, ExprList *, i16 *, Column **)") at assert.c:101
#4  0x000000000032d160 in sqlite3ColumnsFromExprList (pParse=0x7ffe42ca1b30, pEList=0x187cc00, pnCol=0x1882556, paCol=0x1882518) at sqlite3.c:126590
#5  0x000000000033cf65 in sqlite3ExpandSubquery (pParse=0x7ffe42ca1b30, pFrom=0x187bdf8) at sqlite3.c:129416
#6  0x00000000003a17f2 in sqlite3WindowRewrite (pParse=0x7ffe42ca1b30, p=0x1874d70) at sqlite3.c:146385
#7  0x00000000002fc6de in sqlite3Select (pParse=0x7ffe42ca1b30, p=0x1874d70, pDest=0x7ffe42ca0420) at sqlite3.c:130281
#8  0x00000000003a45ed in multiSelect (pParse=0x7ffe42ca1b30, p=0x1874d70, pDest=0x7ffe42ca0828) at sqlite3.c:127314
#9  0x00000000002fccf5 in sqlite3Select (pParse=0x7ffe42ca1b30, p=0x1874d70, pDest=0x7ffe42ca0828) at sqlite3.c:130384
#10 0x000000000034f659 in sqlite3CodeSubselect (pParse=0x7ffe42ca1b30, pExpr=0x18793c0) at sqlite3.c:99820
#11 0x000000000034bbfd in sqlite3ExprCodeTarget (pParse=0x7ffe42ca1b30, pExpr=0x18793c0, target=5) at sqlite3.c:100770
#12 0x000000000034e9ee in sqlite3ExprCodeExprList (pParse=0x7ffe42ca1b30, pList=0x1878a60, target=5, srcReg=0, flags=1 '\001') at sqlite3.c:101202
#13 0x00000000003addca in innerLoopLoadRow (pParse=0x7ffe42ca1b30, pSelect=0x187d0b0, pInfo=0x7ffe42ca0b70) at sqlite3.c:125172
#14 0x00000000003a92ea in selectInnerLoop (pParse=0x7ffe42ca1b30, p=0x187d0b0, srcTab=-1, pSort=0x0, pDistinct=0x0, pDest=0x7ffe42ca0f20, iContinue=-2, iBreak=-2) at sqlite3.c:125624
#15 0x00000000002fffb0 in sqlite3Select (pParse=0x7ffe42ca1b30, p=0x187d0b0, pDest=0x7ffe42ca0f20) at sqlite3.c:131196
#16 0x00000000002ecaa8 in yy_reduce (yypParser=0x7ffe42ca1150, yyruleno=79, yyLookahead=1, yyLookaheadToken=..., pParse=0x7ffe42ca1b30) at sqlite3.c:151581
#17 0x00000000002e92f8 in sqlite3Parser (yyp=0x7ffe42ca1150, yymajor=1, yyminor=...) at sqlite3.c:152877
#18 0x00000000002a68b3 in sqlite3RunParser (pParse=0x7ffe42ca1b30, 
    zSql=0x1879d69 ";;CREATE TABLE test004(\"with space\" TEXT);;DROP TABLE IF EXISTS test003;;CREATE TABLE test005 AS SELECT \"with space\" FROM test004;;\n;DROP TABLE IF EXISTS t3;", pzErrMsg=0x7ffe42ca1d10)
    at sqlite3.c:154013
#19 0x00000000002a1683 in sqlite3Prepare (db=0x18622b0, 
    zSql=0x18631b3 ";SELECT (SELECT avg(field2) UNION SELECT min(field2) OVER()) FROM test003;;CREATE TABLE test004(\"with space\" TEXT);;DROP TABLE IF EXISTS test003;;CREATE TABLE test005 AS SELECT \"with space\" FROM test0"..., nBytes=230, prepFlags=128, pReprepare=0x0, ppStmt=0x7ffe42ca1e48, pzTail=0x7ffe42ca1e30) at sqlite3.c:124303
#20 0x00000000002a0d4e in sqlite3LockAndPrepare (db=0x18622b0, 
    zSql=0x18631b3 ";SELECT (SELECT avg(field2) UNION SELECT min(field2) OVER()) FROM test003;;CREATE TABLE test004(\"with space\" TEXT);;DROP TABLE IF EXISTS test003;;CREATE TABLE test005 AS SELECT \"with space\" FROM test0"..., nBytes=230, prepFlags=128, pOld=0x0, ppStmt=0x7ffe42ca1e48, pzTail=0x7ffe42ca1e30) at sqlite3.c:124403
#21 0x000000000029247f in sqlite3_prepare_v2 (db=0x18622b0, 
    zSql=0x18631b3 ";SELECT (SELECT avg(field2) UNION SELECT min(field2) OVER()) FROM test003;;CREATE TABLE test004(\"with space\" TEXT);;DROP TABLE IF EXISTS test003;;CREATE TABLE test005 AS SELECT \"with space\" FROM test0"..., nBytes=230, ppStmt=0x7ffe42ca1e48, pzTail=0x7ffe42ca1e30) at sqlite3.c:124487
#22 0x0000000000256bd0 in main (argc=1, argv=0x7ffe42ca1ff8) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 55854] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
