GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000559,sig:06,src:024886+017956,time:23342450,execs:4464539,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_listing=on;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;CREATE TABLE test004(field3 INT);]
VDBE Program Listing:
   0 Init             0   28    0               00 Start at 28
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
  16 Rowid            1    5    0               00 r[5]=rowid
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
  18 String8          0    6    0 table         00 r[6]='table'
  19 String8          0    7    0 test004       00 r[7]='test004'
  20 String8          0    8    0 test004       00 r[8]='test004'
  21 Copy             2    9    0               00 r[9]=r[2]
  22 String8          0   10    0 CREATE TABLE test004(field3 INT) 00 r[10]='CREATE TABLE test004(field3 INT)'
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
  25 SetCookie        0    1   10               00 
  26 ParseSchema      0    0    0 tbl_name='test004' AND type!='trigger' 00 
  27 Halt             0    0    0               00 
  28 Transaction      0    1    9 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0   10 0             00 usesStmtJournal=0
  16 String8          0    2    0 test004       00 r[2]='test004'
  17 String8          0    3    0 trigger       00 r[3]='trigger'
  18 Goto             0    1    0               00 
SQL: [;DELETE FROM over;]
VDBE Program Listing:
   0 Init             0    3    0               00 Start at 3
   1 Clear            3    0   -1 over          00 
   2 Halt             0    0    0               00 
   3 Transaction      0    1   10 0             01 usesStmtJournal=0
   4 Goto             0    1    0               00 
SQL: [CREATE TABLE test005 AS SELECT field4 FROM (SELECT c0 AS field4 FROM t0);]
VDBE Program Listing:
   0 Init             0   43    0               00 Start at 43
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 OpenWrite        1    2    0               10 root=2 iDb=0
  13 InitCoroutine    4   21   14               00 
  14 OpenRead         3    2    0 1             00 root=2 iDb=0; t0
  15 Explain         15    0    0 SCAN TABLE t0 00 
  16 Rewind           3   20    0               00 
  17 Column           3    0    7               00 r[7]=t0.c0
  18 Yield            4    0    0               00 
  19 Next             3   17    0               01 
  20 EndCoroutine     4    0    0               00 
  21 Yield            4   26    0               00 
  22 MakeRecord       7    1    5               00 r[5]=mkrec(r[7])
  23 NewRowid         1    6    0               00 r[6]=rowid
  24 Insert           1    5    6               00 intkey=r[6] data=r[5]
  25 Goto             0   21    0               00 
  26 Close            1    0    0               00 
  27 Null             0    8    9               00 r[8..9]=NULL
  28 OpenWrite        4    1    0 5             00 root=1 iDb=0; sqlite_master
  29 Explain         29    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  30 SeekRowid        4   32    1               00 intkey=r[1]
  31 Rowid            4    9    0               00 r[9]=rowid
  32 IsNull           9   40    0               00 if r[9]==NULL goto 40
  33 String8          0   10    0 table         00 r[10]='table'
  34 String8          0   11    0 test005       00 r[11]='test005'
  35 String8          0   12    0 test005       00 r[12]='test005'
  36 Copy             2   13    0               00 r[13]=r[2]
  37 String8          0   14    0 CREATE TABLE test005(field4) 00 r[14]='CREATE TABLE test005(field4)'
  38 MakeRecord      10    5   15 BBBDB         00 r[15]=mkrec(r[10..14])
  39 Insert           4   15    9               00 intkey=r[9] data=r[15]
  40 SetCookie        0    1   11               00 
  41 ParseSchema      0    0    0 tbl_name='test005' AND type!='trigger' 00 
  42 Halt             0    0    0               00 
  43 Transaction      0    1   10 0             01 usesStmtJournal=1
  44 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0   11 0             00 usesStmtJournal=0
  16 String8          0    2    0 test005       00 r[2]='test005'
  17 String8          0    3    0 trigger       00 r[3]='trigger'
  18 Goto             0    1    0               00 
SQL: [;
;PRAGMA incremental_vacuum(5);]
VDBE Program Listing:
   0 Init             0    7    0               00 Start at 7
   1 Integer          5    1    0               00 r[1]=5
   2 IncrVacuum       0    6    0               00 
   3 ResultRow        1    0    0               00 output=r[1]
   4 AddImm           1   -1    0               00 r[1]=r[1]+-1
   5 IfPos            1    2    0               00 if r[1]>0 then r[1]-=0, goto 2
   6 Halt             0    0    0               00 
   7 Transaction      0    1   11 0             01 usesStmtJournal=0
   8 Goto             0    1    0               00 
SQL: [;
;ATTACH DATABASE 'test2.db' AS aux;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 String8          0    1    0 test2.db      00 r[1]='test2.db'
   2 String8          0    2    0 aux           00 r[2]='aux'
   3 Null             0    3    0               00 r[3]=NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
VDBE Program Listing:
   0 Init             0   11    0               00 Start at 11
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
   8 ResultRow        1    3    0               00 output=r[1..3]
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
  11 Transaction      2    0   30 0             00 usesStmtJournal=0
  12 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  13 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   11    0               00 Start at 11
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
   8 ResultRow        1    3    0               00 output=r[1..3]
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
  11 Transaction      0    0   11 1             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
SQL: [;-- added by ticket 3b44500725
  INSERT INTO test004 VALUES(17),(2),(99),(-3),(7);]
VDBE Program Listing:
   0 Init             0   21    0               00 Start at 21
   1 InitCoroutine    3   14    2               00 
   2 Explain          2    0    0 SCAN 5 CONSTANT ROWS 00 
   3 Integer         17    2    0               00 r[2]=17
   4 Yield            3    0    0               00 
   5 Integer          2    2    0               00 r[2]=2
   6 Yield            3    0    0               00 
   7 Integer         99    2    0               00 r[2]=99
   8 Yield            3    0    0               00 
   9 Integer         -3    2    0               00 r[2]=-3
  10 Yield            3    0    0               00 
  11 Integer          7    2    0               00 r[2]=7
  12 Yield            3    0    0               00 
  13 EndCoroutine     3    0    0               00 
  14 OpenWrite        0    4    0 1             00 root=4 iDb=0; test004
  15 Yield            3   20    0               00 
  16 NewRowid         0    1    0               00 r[1]=rowid
  17 MakeRecord       2    1    4 D             00 r[4]=mkrec(r[2])
  18 Insert           0    4    1 test004       39 intkey=r[1] data=r[4]
  19 Goto             0   15    0               00 
  20 Halt             0    0    0               00 
  21 Transaction      0    1   11 1             01 usesStmtJournal=0
  22 Goto             0    1    0               00 
SQL: [SELECT preceding, preceding FROM over WHERE (preceding,preceding) IN (SELECT preceding, preceding FROM over) ORDER BY preceding DESC
;]
VDBE Program Listing:
   0 Init             0   39    0               00 Start at 39
   1 SorterOpen       2    4    0 k(1,-B)       00 
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; over
   3 Explain          3    0    0 SCAN TABLE over 00 
   4 Rewind           0   30    0               00 
   5 Noop             0    0    0               00 begin IN expr
   6 Integer         18    1    0               00 r[1]=18; return address
   7 Once             0   18    0               00 
   8 OpenEphemeral    3    2    0 k(2,B,B)      00 nColumn=2; Result of SELECT 1
   9 Explain          9    0    0 LIST SUBQUERY 1 00 
  10 OpenRead         1    3    0 2             00 root=3 iDb=0; over
  11 Explain         11    9    0 SCAN TABLE over 00 
  12 Rewind           1   18    0               00 
  13 Column           1    1    2               00 r[2]=over.preceding
  14 Column           1    1    3               00 r[3]=over.preceding
  15 MakeRecord       2    2    4 AA            00 r[4]=mkrec(r[2..3])
  16 IdxInsert        3    4    2 2             00 key=r[4]
  17 Next             1   13    0               01 
  18 Return           1    0    0               00 
  19 Column           0    1    5               00 r[5]=over.preceding
  20 Column           0    1    6               00 r[6]=over.preceding
  21 IsNull           5   29    0               00 if r[5]==NULL goto 29
  22 IsNull           6   29    0               00 if r[6]==NULL goto 29
  23 Affinity         5    2    0 AA            00 affinity(r[5..6])
  24 NotFound         3   29    5 2             00 key=r[5..6]; end IN expr
  25 Column           0    1    8               00 r[8]=over.preceding
  26 Column           0    1    7               00 r[7]=over.preceding
  27 MakeRecord       7    2   10               00 r[10]=mkrec(r[7..8])
  28 SorterInsert     2   10    7 2             00 key=r[10]
  29 Next             0    5    0               01 
  30 Explain         30    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  31 OpenPseudo       4   11    4               00 4 columns in r[11]
  32 SorterSort       2   38    0               00 
  33 SorterData       2   11    4               00 r[11]=data
  34 Column           4    0    9               00 r[9]=preceding
  35 Column           4    1    8               00 r[8]=preceding
  36 ResultRow        8    2    0               00 output=r[8..9]
  37 SorterNext       2   33    0               00 
  38 Halt             0    0    0               00 
  39 Transaction      0    0   11 1             01 usesStmtJournal=0
  40 Goto             0    1    0               00 
SQL: [SELECT field3 FROM test004 WHERE (field3, field3) in (SELECT field3, field3 FROM test004) ORDER BY field3 ASC, field3 DESC
    
;]
VDBE Program Listing:
   0 Init             0   38    0               00 Start at 38
   1 SorterOpen       2    4    0 k(2,B,-B)     00 
   2 OpenRead         0    4    0 1             00 root=4 iDb=0; test004
   3 Explain          3    0    0 SCAN TABLE test004 00 
   4 Rewind           0   30    0               00 
   5 Noop             0    0    0               00 begin IN expr
   6 Integer         18    1    0               00 r[1]=18; return address
   7 Once             0   18    0               00 
   8 OpenEphemeral    3    2    0 k(2,B,B)      00 nColumn=2; Result of SELECT 1
   9 Explain          9    0    0 LIST SUBQUERY 1 00 
  10 OpenRead         1    4    0 1             00 root=4 iDb=0; test004
  11 Explain         11    9    0 SCAN TABLE test004 00 
  12 Rewind           1   18    0               00 
  13 Column           1    0    2               00 r[2]=test004.field3
  14 Column           1    0    3               00 r[3]=test004.field3
  15 MakeRecord       2    2    4 CC            00 r[4]=mkrec(r[2..3])
  16 IdxInsert        3    4    2 2             00 key=r[4]
  17 Next             1   13    0               01 
  18 Return           1    0    0               00 
  19 Column           0    0    5               00 r[5]=test004.field3
  20 Column           0    0    6               00 r[6]=test004.field3
  21 IsNull           5   29    0               00 if r[5]==NULL goto 29
  22 IsNull           6   29    0               00 if r[6]==NULL goto 29
  23 Affinity         5    2    0 CC            00 affinity(r[5..6])
  24 NotFound         3   29    5 2             00 key=r[5..6]; end IN expr
  25 Column           0    0    7               00 r[7]=test004.field3
  26 Column           0    0    8               00 r[8]=test004.field3
  27 MakeRecord       7    2   10               00 r[10]=mkrec(r[7..8])
  28 SorterInsert     2   10    7 2             00 key=r[10]
  29 Next             0    5    0               01 
  30 Explain         30    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  31 OpenPseudo       4   11    4               00 4 columns in r[11]
  32 SorterSort       2   37    0               00 
  33 SorterData       2   11    4               00 r[11]=data
  34 Column           4    1    9               00 r[9]=field3
  35 ResultRow        9    1    0               00 output=r[9]
  36 SorterNext       2   33    0               00 
  37 Halt             0    0    0               00 
  38 Transaction      0    0   11 1             01 usesStmtJournal=0
  39 Goto             0    1    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fabcc793859 in __GI_abort () at abort.c:79
#2  0x00007fabcc793729 in __assert_fail_base (fmt=0x7fabcc929588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x211bd9 "pColExpr->op!=TK_AGG_COLUMN", file=0x22873d "sqlite3.c", line=126590, 
    function=<optimized out>) at assert.c:92
#3  0x00007fabcc7a4fd6 in __GI___assert_fail (assertion=0x211bd9 "pColExpr->op!=TK_AGG_COLUMN", file=0x22873d "sqlite3.c", line=126590, 
    function=0x221122 "int sqlite3ColumnsFromExprList(Parse *, ExprList *, i16 *, Column **)") at assert.c:101
#4  0x000000000032d160 in sqlite3ColumnsFromExprList (pParse=0x7ffda1cc4ed0, pEList=0xb3a590, pnCol=0xb43bd6, paCol=0xb43b98) at sqlite3.c:126590
#5  0x000000000033cf65 in sqlite3ExpandSubquery (pParse=0x7ffda1cc4ed0, pFrom=0xb49e08) at sqlite3.c:129416
#6  0x00000000003a17f2 in sqlite3WindowRewrite (pParse=0x7ffda1cc4ed0, p=0xb3a0e0) at sqlite3.c:146385
#7  0x00000000002fc6de in sqlite3Select (pParse=0x7ffda1cc4ed0, p=0xb3a0e0, pDest=0x7ffda1cc37c0) at sqlite3.c:130281
#8  0x00000000003a45ed in multiSelect (pParse=0x7ffda1cc4ed0, p=0xb3a0e0, pDest=0x7ffda1cc3bc8) at sqlite3.c:127314
#9  0x00000000002fccf5 in sqlite3Select (pParse=0x7ffda1cc4ed0, p=0xb3a0e0, pDest=0x7ffda1cc3bc8) at sqlite3.c:130384
#10 0x000000000034f659 in sqlite3CodeSubselect (pParse=0x7ffda1cc4ed0, pExpr=0xb50070) at sqlite3.c:99820
#11 0x000000000034bbfd in sqlite3ExprCodeTarget (pParse=0x7ffda1cc4ed0, pExpr=0xb50070, target=5) at sqlite3.c:100770
#12 0x000000000034e9ee in sqlite3ExprCodeExprList (pParse=0x7ffda1cc4ed0, pList=0xb44040, target=5, srcReg=0, flags=1 '\001') at sqlite3.c:101202
#13 0x00000000003addca in innerLoopLoadRow (pParse=0x7ffda1cc4ed0, pSelect=0xb41160, pInfo=0x7ffda1cc3f10) at sqlite3.c:125172
#14 0x00000000003a92ea in selectInnerLoop (pParse=0x7ffda1cc4ed0, p=0xb41160, srcTab=-1, pSort=0x0, pDistinct=0x0, pDest=0x7ffda1cc42c0, iContinue=-2, iBreak=-2) at sqlite3.c:125624
#15 0x00000000002fffb0 in sqlite3Select (pParse=0x7ffda1cc4ed0, p=0xb41160, pDest=0x7ffda1cc42c0) at sqlite3.c:131196
#16 0x00000000002ecaa8 in yy_reduce (yypParser=0x7ffda1cc44f0, yyruleno=79, yyLookahead=1, yyLookaheadToken=..., pParse=0x7ffda1cc4ed0) at sqlite3.c:151581
#17 0x00000000002e92f8 in sqlite3Parser (yyp=0x7ffda1cc44f0, yymajor=1, yyminor=...) at sqlite3.c:152877
#18 0x00000000002a68b3 in sqlite3RunParser (pParse=0x7ffda1cc4ed0, zSql=0xb45349 ";;\n;BEGIN;;DROP TABLE IF EXISTS test004;;CREATE TABLE test006 AS SELECT \"with space\" FROM test005;;PRAGMA table_info(test005);", 
    pzErrMsg=0x7ffda1cc50b0) at sqlite3.c:154013
#19 0x00000000002a1683 in sqlite3Prepare (db=0xb302b0, 
    zSql=0xb3164e ";SELECT (SELECT avg(field3) UNION SELECT min(field3) OVER()) FROM test004;;\n;BEGIN;;DROP TABLE IF EXISTS test004;;CREATE TABLE test006 AS SELECT \"with space\" FROM test005;;PRAGMA table_info(test005);", nBytes=199, prepFlags=128, pReprepare=0x0, ppStmt=0x7ffda1cc51e8, pzTail=0x7ffda1cc51d0) at sqlite3.c:124303
#20 0x00000000002a0d4e in sqlite3LockAndPrepare (db=0xb302b0, 
    zSql=0xb3164e ";SELECT (SELECT avg(field3) UNION SELECT min(field3) OVER()) FROM test004;;\n;BEGIN;;DROP TABLE IF EXISTS test004;;CREATE TABLE test006 AS SELECT \"with space\" FROM test005;;PRAGMA table_info(test005);", nBytes=199, prepFlags=128, pOld=0x0, ppStmt=0x7ffda1cc51e8, pzTail=0x7ffda1cc51d0) at sqlite3.c:124403
#21 0x000000000029247f in sqlite3_prepare_v2 (db=0xb302b0, 
    zSql=0xb3164e ";SELECT (SELECT avg(field3) UNION SELECT min(field3) OVER()) FROM test004;;\n;BEGIN;;DROP TABLE IF EXISTS test004;;CREATE TABLE test006 AS SELECT \"with space\" FROM test005;;PRAGMA table_info(test005);", nBytes=199, ppStmt=0x7ffda1cc51e8, pzTail=0x7ffda1cc51d0) at sqlite3.c:124487
#22 0x0000000000256bd0 in main (argc=1, argv=0x7ffda1cc5398) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 59517] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
