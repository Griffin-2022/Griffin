GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000515,sig:06,src:022416+018369,time:19382522,execs:3710513,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_listing=on;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;SELECT * FROM t0 WHERE over=1;]
VDBE Program Listing:
   0 Init             0  132    0               00 Start at 132
   1 OpenRead         0    2    0 3             00 root=2 iDb=0; t0
   2 OpenRead         1    3    0 k(120,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, 02 root=3 iDb=0; following
   3 Explain          3    0    0 SEARCH TABLE t0 USING INDEX following (over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=? AND over=?) 00 
   4 Integer          1    1    0               00 r[1]=1
   5 Integer          1    2    0               00 r[2]=1
   6 Integer          1    3    0               00 r[3]=1
   7 Integer          1    4    0               00 r[4]=1
   8 Integer          1    5    0               00 r[5]=1
   9 Integer          1    6    0               00 r[6]=1
  10 Integer          1    7    0               00 r[7]=1
  11 Integer          1    8    0               00 r[8]=1
  12 Integer          1    9    0               00 r[9]=1
  13 Integer          1   10    0               00 r[10]=1
  14 Integer          1   11    0               00 r[11]=1
  15 Integer          1   12    0               00 r[12]=1
  16 Integer          1   13    0               00 r[13]=1
  17 Integer          1   14    0               00 r[14]=1
  18 Integer          1   15    0               00 r[15]=1
  19 Integer          1   16    0               00 r[16]=1
  20 Integer          1   17    0               00 r[17]=1
  21 Integer          1   18    0               00 r[18]=1
  22 Integer          1   19    0               00 r[19]=1
  23 Integer          1   20    0               00 r[20]=1
  24 Integer          1   21    0               00 r[21]=1
  25 Integer          1   22    0               00 r[22]=1
  26 Integer          1   23    0               00 r[23]=1
  27 Integer          1   24    0               00 r[24]=1
  28 Integer          1   25    0               00 r[25]=1
  29 Integer          1   26    0               00 r[26]=1
  30 Integer          1   27    0               00 r[27]=1
  31 Integer          1   28    0               00 r[28]=1
  32 Integer          1   29    0               00 r[29]=1
  33 Integer          1   30    0               00 r[30]=1
  34 Integer          1   31    0               00 r[31]=1
  35 Integer          1   32    0               00 r[32]=1
  36 Integer          1   33    0               00 r[33]=1
  37 Integer          1   34    0               00 r[34]=1
  38 Integer          1   35    0               00 r[35]=1
  39 Integer          1   36    0               00 r[36]=1
  40 Integer          1   37    0               00 r[37]=1
  41 Integer          1   38    0               00 r[38]=1
  42 Integer          1   39    0               00 r[39]=1
  43 Integer          1   40    0               00 r[40]=1
  44 Integer          1   41    0               00 r[41]=1
  45 Integer          1   42    0               00 r[42]=1
  46 Integer          1   43    0               00 r[43]=1
  47 Integer          1   44    0               00 r[44]=1
  48 Integer          1   45    0               00 r[45]=1
  49 Integer          1   46    0               00 r[46]=1
  50 Integer          1   47    0               00 r[47]=1
  51 Integer          1   48    0               00 r[48]=1
  52 Integer          1   49    0               00 r[49]=1
  53 Integer          1   50    0               00 r[50]=1
  54 Integer          1   51    0               00 r[51]=1
  55 Integer          1   52    0               00 r[52]=1
  56 Integer          1   53    0               00 r[53]=1
  57 Integer          1   54    0               00 r[54]=1
  58 Integer          1   55    0               00 r[55]=1
  59 Integer          1   56    0               00 r[56]=1
  60 Integer          1   57    0               00 r[57]=1
  61 Integer          1   58    0               00 r[58]=1
  62 Integer          1   59    0               00 r[59]=1
  63 Integer          1   60    0               00 r[60]=1
  64 Integer          1   61    0               00 r[61]=1
  65 Integer          1   62    0               00 r[62]=1
  66 Integer          1   63    0               00 r[63]=1
  67 Integer          1   64    0               00 r[64]=1
  68 Integer          1   65    0               00 r[65]=1
  69 Integer          1   66    0               00 r[66]=1
  70 Integer          1   67    0               00 r[67]=1
  71 Integer          1   68    0               00 r[68]=1
  72 Integer          1   69    0               00 r[69]=1
  73 Integer          1   70    0               00 r[70]=1
  74 Integer          1   71    0               00 r[71]=1
  75 Integer          1   72    0               00 r[72]=1
  76 Integer          1   73    0               00 r[73]=1
  77 Integer          1   74    0               00 r[74]=1
  78 Integer          1   75    0               00 r[75]=1
  79 Integer          1   76    0               00 r[76]=1
  80 Integer          1   77    0               00 r[77]=1
  81 Integer          1   78    0               00 r[78]=1
  82 Integer          1   79    0               00 r[79]=1
  83 Integer          1   80    0               00 r[80]=1
  84 Integer          1   81    0               00 r[81]=1
  85 Integer          1   82    0               00 r[82]=1
  86 Integer          1   83    0               00 r[83]=1
  87 Integer          1   84    0               00 r[84]=1
  88 Integer          1   85    0               00 r[85]=1
  89 Integer          1   86    0               00 r[86]=1
  90 Integer          1   87    0               00 r[87]=1
  91 Integer          1   88    0               00 r[88]=1
  92 Integer          1   89    0               00 r[89]=1
  93 Integer          1   90    0               00 r[90]=1
  94 Integer          1   91    0               00 r[91]=1
  95 Integer          1   92    0               00 r[92]=1
  96 Integer          1   93    0               00 r[93]=1
  97 Integer          1   94    0               00 r[94]=1
  98 Integer          1   95    0               00 r[95]=1
  99 Integer          1   96    0               00 r[96]=1
 100 Integer          1   97    0               00 r[97]=1
 101 Integer          1   98    0               00 r[98]=1
 102 Integer          1   99    0               00 r[99]=1
 103 Integer          1  100    0               00 r[100]=1
 104 Integer          1  101    0               00 r[101]=1
 105 Integer          1  102    0               00 r[102]=1
 106 Integer          1  103    0               00 r[103]=1
 107 Integer          1  104    0               00 r[104]=1
 108 Integer          1  105    0               00 r[105]=1
 109 Integer          1  106    0               00 r[106]=1
 110 Integer          1  107    0               00 r[107]=1
 111 Integer          1  108    0               00 r[108]=1
 112 Integer          1  109    0               00 r[109]=1
 113 Integer          1  110    0               00 r[110]=1
 114 Integer          1  111    0               00 r[111]=1
 115 Integer          1  112    0               00 r[112]=1
 116 Integer          1  113    0               00 r[113]=1
 117 Integer          1  114    0               00 r[114]=1
 118 Integer          1  115    0               00 r[115]=1
 119 Integer          1  116    0               00 r[116]=1
 120 Integer          1  117    0               00 r[117]=1
 121 Integer          1  118    0               00 r[118]=1
 122 Integer          1  119    0               00 r[119]=1
 123 SeekGE           1  131    1 119           00 key=r[1..119]
 124 IdxGT            1  131    1 119           00 key=r[1..119]
 125 DeferredSeek     1    0    0               00 Move 0 to 1.rowid if needed
 126 Column           0    0  120               00 r[120]=t0.c0
 127 Column           0    1  121               00 r[121]=t0.v0
 128 Column           1    0  122               00 r[122]=t0.over
 129 ResultRow      120    3    0               00 output=r[120..122]
 130 Next             1  124    1               00 
 131 Halt             0    0    0               00 
 132 Transaction      0    0    2 0             01 usesStmtJournal=0
 133 Goto             0    1    0               00 
SQL: [;
;ALTER TABLE t0 RENAME TO preceding;]
VDBE Program Listing:
   0 Init             0  140    0               00 Start at 140
   1 Null             0    1    2               00 r[1..2]=NULL
   2 OpenRead         0    1    0 3             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   15    0               00 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
   6 Ne               9    9    8 (BINARY)      42 if r[8]!=r[9] goto 9
   7 Column           0    2    8               00 r[8]=sqlite_master.tbl_name
   8 Ne              10   14    8 (NOCASE)      52 if r[8]!=r[10] goto 14
   9 Column           0    1   12               00 r[12]=sqlite_master.name
  10 Function0        1   11    8 like(2)       02 r[8]=func(r[11..12])
  11 If               8   14    1               00 
  12 Rowid            0    2    0               00 r[2]=rowid
  13 RowSetAdd        1    2    0               00 rowset(1)=r[2]
  14 Next             0    5    0               01 
  15 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
  16 RowSetRead       1   29    2               00 r[2]=rowset(1)
  17 NotExists        0   16    2               00 intkey=r[2]
  18 Column           0    0    3               00 r[3]=sqlite_master.type
  19 Column           0    1    4               00 r[4]=sqlite_master.name
  20 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
  21 Column           0    3    6               00 r[6]=sqlite_master.rootpage
  22 Column           0    0   14               00 r[14]=sqlite_master.type
  23 Column           0    1   15               00 r[15]=sqlite_master.name
  24 Column           0    4   16               00 r[16]=sqlite_master.sql
  25 Function0      113   13    7 sqlite_rename_table(7) 07 r[7]=func(r[13..19])
  26 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
  27 Insert           0    8    2               00 intkey=r[2] data=r[8]
  28 Goto             0   16    0               00 
  29 Null             0   20   21               00 r[20..21]=NULL
  30 OpenRead         1    1    0 3             00 root=1 iDb=0; sqlite_master
  31 Explain         31    0    0 SCAN TABLE sqlite_master 00 
  32 Rewind           1   44    0               00 
  33 Column           1    2   27               00 r[27]=sqlite_master.tbl_name
  34 Ne              10   43   27 (NOCASE)      52 if r[27]!=r[10] goto 43
  35 Column           1    0   27               00 r[27]=sqlite_master.type
  36 Eq              28   41   27 (BINARY)      42 if r[27]==r[28] goto 41
  37 Column           1    0   27               00 r[27]=sqlite_master.type
  38 Eq               9   41   27 (BINARY)      42 if r[27]==r[9] goto 41
  39 Column           1    0   27               00 r[27]=sqlite_master.type
  40 Ne              29   43   27 (BINARY)      52 if r[27]!=r[29] goto 43
  41 Rowid            1   21    0               00 r[21]=rowid
  42 RowSetAdd       20   21    0               00 rowset(20)=r[21]
  43 Next             1   33    0               01 
  44 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  45 RowSetRead      20   68   21               00 r[21]=rowset(20)
  46 NotExists        1   45   21               00 intkey=r[21]
  47 Column           1    0   22               00 r[22]=sqlite_master.type
  48 Column           1    0   27               00 r[27]=sqlite_master.type
  49 Ne              28   52   27 (BINARY)      52 if r[27]!=r[28] goto 52
  50 String8          0   23    0 preceding     00 r[23]='preceding'
  51 Goto             0   62    0               00 
  52 Column           1    1   31               00 r[31]=sqlite_master.name
  53 Function0        1   30   27 like(2)       02 r[27]=func(r[30..31])
  54 IfNot           27   61    1               00 
  55 Column           1    0   27               00 r[27]=sqlite_master.type
  56 Ne               9   61   27 (BINARY)      52 if r[27]!=r[9] goto 61
  57 Column           1    1   33               00 r[33]=sqlite_master.name
  58 Function0        2   33   27 substr(2)     02 r[27]=func(r[33..34])
  59 Concat          27   32   23               00 r[23]=r[32]+r[27]
  60 Goto             0   62    0               00 
  61 Column           1    1   23               00 r[23]=sqlite_master.name
  62 String8          0   24    0 preceding     00 r[24]='preceding'
  63 Column           1    3   25               00 r[25]=sqlite_master.rootpage
  64 Column           1    4   26               00 r[26]=sqlite_master.sql
  65 MakeRecord      22    5   27 BBBDB         00 r[27]=mkrec(r[22..26])
  66 Insert           1   27   21               00 intkey=r[21] data=r[27]
  67 Goto             0   45    0               00 
  68 Null             0   35   36               00 r[35..36]=NULL
  69 OpenRead         2    1    1 1             00 root=1 iDb=1; sqlite_temp_master
  70 Explain         70    0    0 SCAN TABLE sqlite_temp_master 00 
  71 Rewind           2   79    0               00 
  72 Noop             0    0    0               00 begin IN expr
  73 Column           2    0   42               00 r[42]=sqlite_temp_master.type
  74 Eq              42   76   43 (BINARY)      42 if r[43]==r[42] goto 76
  75 Ne              42   78   29 (BINARY)      52 if r[29]!=r[42] goto 78; end IN expr
  76 Rowid            2   36    0               00 r[36]=rowid
  77 RowSetAdd       35   36    0               00 rowset(35)=r[36]
  78 Next             2   72    0               01 
  79 OpenWrite        2    1    1 5             00 root=1 iDb=1; sqlite_temp_master
  80 RowSetRead      35  102   36               00 r[36]=rowset(35)
  81 NotExists        2   80   36               00 intkey=r[36]
  82 Column           2    0   37               00 r[37]=sqlite_temp_master.type
  83 Column           2    1   38               00 r[38]=sqlite_temp_master.name
  84 Column           2    2   44               00 r[44]=sqlite_temp_master.tbl_name
  85 Ne              10   93   44 (NOCASE)      52 if r[44]!=r[10] goto 93
  86 Column           2    4   46               00 r[46]=sqlite_temp_master.sql
  87 Column           2    0   47               00 r[47]=sqlite_temp_master.type
  88 Column           2    1   48               00 r[48]=sqlite_temp_master.name
  89 Function0       17   45   44 sqlite_rename_test(5) 05 r[44]=func(r[45..49])
  90 IfNot           44   93    1               00 
  91 String8          0   39    0 preceding     00 r[39]='preceding'
  92 Goto             0   94    0               00 
  93 Column           2    2   39               00 r[39]=sqlite_temp_master.tbl_name
  94 Column           2    3   40               00 r[40]=sqlite_temp_master.rootpage
  95 Column           2    0   51               00 r[51]=sqlite_temp_master.type
  96 Column           2    1   52               00 r[52]=sqlite_temp_master.name
  97 Column           2    4   53               00 r[53]=sqlite_temp_master.sql
  98 Function0      113   50   41 sqlite_rename_table(7) 07 r[41]=func(r[50..56])
  99 MakeRecord      37    5   44 BBBDB         00 r[44]=mkrec(r[37..41])
 100 Insert           2   44   36               00 intkey=r[36] data=r[44]
 101 Goto             0   80    0               00 
 102 SetCookie        0    1    3               00 
 103 ParseSchema      0    0    0               00 
 104 ParseSchema      1    0    0               00 
 105 OpenRead         4    1    0 5             00 root=1 iDb=0; sqlite_master
 106 Explain        106    0    0 SCAN TABLE sqlite_master 00 
 107 Rewind           4  122    0               00 
 108 Column           4    1   59               00 r[59]=sqlite_master.name
 109 Function0        1   58   57 like(2)       02 r[57]=func(r[58..59])
 110 If              57  121    1               00 
 111 Column           4    4   61               00 r[61]=sqlite_master.sql
 112 Function0        1   60   57 like(2)       02 r[57]=func(r[60..61])
 113 If              57  121    1               00 
 114 Column           4    4   63               00 r[63]=sqlite_master.sql
 115 Column           4    0   64               00 r[64]=sqlite_master.type
 116 Column           4    1   65               00 r[65]=sqlite_master.name
 117 Function0       17   62   57 sqlite_rename_test(5) 05 r[57]=func(r[62..66])
 118 Ne              67  121   57               51 if r[57]!=r[67] goto 121
 119 Integer          1   68    0               00 r[68]=1
 120 ResultRow       68    1    0               00 output=r[68]
 121 Next             4  108    0               01 
 122 OpenRead         5    1    1 5             00 root=1 iDb=1; sqlite_temp_master
 123 Explain        123    0    0 SCAN TABLE sqlite_master 00 
 124 Rewind           5  139    0               00 
 125 Column           5    1   70               00 r[70]=sqlite_temp_master.name
 126 Function0        1   69   57 like(2)       02 r[57]=func(r[69..70])
 127 If              57  138    1               00 
 128 Column           5    4   72               00 r[72]=sqlite_temp_master.sql
 129 Function0        1   71   57 like(2)       02 r[57]=func(r[71..72])
 130 If              57  138    1               00 
 131 Column           5    4   74               00 r[74]=sqlite_temp_master.sql
 132 Column           5    0   75               00 r[75]=sqlite_temp_master.type
 133 Column           5    1   76               00 r[76]=sqlite_temp_master.name
 134 Function0       17   73   57 sqlite_rename_test(5) 05 r[57]=func(r[73..77])
 135 Ne              67  138   57               51 if r[57]!=r[67] goto 138
 136 Integer          1   78    0               00 r[78]=1
 137 ResultRow       78    1    0               00 output=r[78]
 138 Next             5  125    0               01 
 139 Halt             0    0    0               00 
 140 Transaction      0    1    2 0             01 usesStmtJournal=1
 141 Transaction      1    1    0 0             01 usesStmtJournal=1
 142 String8          0    9    0 index         00 r[9]='index'
 143 String8          0   10    0 t0            00 r[10]='t0'
 144 String8          0   11    0 sqlite_%      00 r[11]='sqlite_%'
 145 String8          0   13    0 main          00 r[13]='main'
 146 String8          0   17    0 t0            00 r[17]='t0'
 147 String8          0   18    0 preceding     00 r[18]='preceding'
 148 Integer          0   19    0               00 r[19]=0
 149 String8          0   28    0 table         00 r[28]='table'
 150 String8          0   29    0 trigger       00 r[29]='trigger'
 151 String8          0   30    0 sqlite_autoindex% 00 r[30]='sqlite_autoindex%'
 152 String8          0   57    0 sqlite_autoindex_ 00 r[57]='sqlite_autoindex_'
 153 String8          0   79    0 preceding     00 r[79]='preceding'
 154 Concat          79   57   32               00 r[32]=r[57]+r[79]
 155 Integer          2   79    0               00 r[79]=2
 156 Integer         18   57    0               00 r[57]=18
 157 Add             57   79   34               00 r[34]=r[57]+r[79]
 158 String8          0   43    0 view          00 r[43]='view'
 159 String8          0   45    0 main          00 r[45]='main'
 160 Integer          1   49    0               00 r[49]=1
 161 String8          0   50    0 main          00 r[50]='main'
 162 String8          0   54    0 t0            00 r[54]='t0'
 163 String8          0   55    0 preceding     00 r[55]='preceding'
 164 Integer          1   56    0               00 r[56]=1
 165 String8          0   58    0 sqlite_%      00 r[58]='sqlite_%'
 166 String8          0   60    0 create virtual% 00 r[60]='create virtual%'
 167 String8          0   62    0 main          00 r[62]='main'
 168 Integer          0   66    0               00 r[66]=0
 169 Null             0   67    0               00 r[67]=NULL
 170 String8          0   69    0 sqlite_%      00 r[69]='sqlite_%'
 171 String8          0   71    0 create virtual% 00 r[71]='create virtual%'
 172 String8          0   73    0 main          00 r[73]='main'
 173 Integer          1   77    0               00 r[77]=1
 174 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   11    0               00 Start at 11
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
   8 ResultRow        1    3    0               00 output=r[1..3]
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
  11 Transaction      0    0    3 1             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   11    0               00 Start at 11
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_temp_master.name
   6 Column           0    3    2               00 r[2]=sqlite_temp_master.rootpage
   7 Column           0    4    3               00 r[3]=sqlite_temp_master.sql
   8 ResultRow        1    3    0               00 output=r[1..3]
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
  11 Transaction      1    0    0 1             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
SQL: [INSERT INTO preceding VALUES('abc', $i, $i);]
VDBE Program Listing:
   0 Init             0  133    0               00 Start at 133
   1 OpenWrite        0    2    0 3             00 root=2 iDb=0; preceding
   2 OpenWrite        1    3    0 k(120,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, 00 root=3 iDb=0; following
   3 NewRowid         0    1    0               00 r[1]=rowid
   4 String8          0    2    0 abc           00 r[2]='abc'
   5 Variable         1    3    0 $i            00 r[3]=parameter(1,$i)
   6 Variable         1    4    0 $i            00 r[4]=parameter(1,$i)
   7 Noop             0    0    0               00 uniqueness check for following
   8 SCopy            4    6    0               00 r[6]=r[4]; over
   9 SCopy            4    7    0               00 r[7]=r[4]; over
  10 SCopy            4    8    0               00 r[8]=r[4]; over
  11 SCopy            4    9    0               00 r[9]=r[4]; over
  12 SCopy            4   10    0               00 r[10]=r[4]; over
  13 SCopy            4   11    0               00 r[11]=r[4]; over
  14 SCopy            4   12    0               00 r[12]=r[4]; over
  15 SCopy            4   13    0               00 r[13]=r[4]; over
  16 SCopy            4   14    0               00 r[14]=r[4]; over
  17 SCopy            4   15    0               00 r[15]=r[4]; over
  18 SCopy            4   16    0               00 r[16]=r[4]; over
  19 SCopy            4   17    0               00 r[17]=r[4]; over
  20 SCopy            4   18    0               00 r[18]=r[4]; over
  21 SCopy            4   19    0               00 r[19]=r[4]; over
  22 SCopy            4   20    0               00 r[20]=r[4]; over
  23 SCopy            4   21    0               00 r[21]=r[4]; over
  24 SCopy            4   22    0               00 r[22]=r[4]; over
  25 SCopy            4   23    0               00 r[23]=r[4]; over
  26 SCopy            4   24    0               00 r[24]=r[4]; over
  27 SCopy            4   25    0               00 r[25]=r[4]; over
  28 SCopy            4   26    0               00 r[26]=r[4]; over
  29 SCopy            4   27    0               00 r[27]=r[4]; over
  30 SCopy            4   28    0               00 r[28]=r[4]; over
  31 SCopy            4   29    0               00 r[29]=r[4]; over
  32 SCopy            4   30    0               00 r[30]=r[4]; over
  33 SCopy            4   31    0               00 r[31]=r[4]; over
  34 SCopy            4   32    0               00 r[32]=r[4]; over
  35 SCopy            4   33    0               00 r[33]=r[4]; over
  36 SCopy            4   34    0               00 r[34]=r[4]; over
  37 SCopy            4   35    0               00 r[35]=r[4]; over
  38 SCopy            4   36    0               00 r[36]=r[4]; over
  39 SCopy            4   37    0               00 r[37]=r[4]; over
  40 SCopy            4   38    0               00 r[38]=r[4]; over
  41 SCopy            4   39    0               00 r[39]=r[4]; over
  42 SCopy            4   40    0               00 r[40]=r[4]; over
  43 SCopy            4   41    0               00 r[41]=r[4]; over
  44 SCopy            4   42    0               00 r[42]=r[4]; over
  45 SCopy            4   43    0               00 r[43]=r[4]; over
  46 SCopy            4   44    0               00 r[44]=r[4]; over
  47 SCopy            4   45    0               00 r[45]=r[4]; over
  48 SCopy            4   46    0               00 r[46]=r[4]; over
  49 SCopy            4   47    0               00 r[47]=r[4]; over
  50 SCopy            4   48    0               00 r[48]=r[4]; over
  51 SCopy            4   49    0               00 r[49]=r[4]; over
  52 SCopy            4   50    0               00 r[50]=r[4]; over
  53 SCopy            4   51    0               00 r[51]=r[4]; over
  54 SCopy            4   52    0               00 r[52]=r[4]; over
  55 SCopy            4   53    0               00 r[53]=r[4]; over
  56 SCopy            4   54    0               00 r[54]=r[4]; over
  57 SCopy            4   55    0               00 r[55]=r[4]; over
  58 SCopy            4   56    0               00 r[56]=r[4]; over
  59 SCopy            4   57    0               00 r[57]=r[4]; over
  60 SCopy            4   58    0               00 r[58]=r[4]; over
  61 SCopy            4   59    0               00 r[59]=r[4]; over
  62 SCopy            4   60    0               00 r[60]=r[4]; over
  63 SCopy            4   61    0               00 r[61]=r[4]; over
  64 SCopy            4   62    0               00 r[62]=r[4]; over
  65 SCopy            4   63    0               00 r[63]=r[4]; over
  66 SCopy            4   64    0               00 r[64]=r[4]; over
  67 SCopy            4   65    0               00 r[65]=r[4]; over
  68 SCopy            4   66    0               00 r[66]=r[4]; over
  69 SCopy            4   67    0               00 r[67]=r[4]; over
  70 SCopy            4   68    0               00 r[68]=r[4]; over
  71 SCopy            4   69    0               00 r[69]=r[4]; over
  72 SCopy            4   70    0               00 r[70]=r[4]; over
  73 SCopy            4   71    0               00 r[71]=r[4]; over
  74 SCopy            4   72    0               00 r[72]=r[4]; over
  75 SCopy            4   73    0               00 r[73]=r[4]; over
  76 SCopy            4   74    0               00 r[74]=r[4]; over
  77 SCopy            4   75    0               00 r[75]=r[4]; over
  78 SCopy            4   76    0               00 r[76]=r[4]; over
  79 SCopy            4   77    0               00 r[77]=r[4]; over
  80 SCopy            4   78    0               00 r[78]=r[4]; over
  81 SCopy            4   79    0               00 r[79]=r[4]; over
  82 SCopy            4   80    0               00 r[80]=r[4]; over
  83 SCopy            4   81    0               00 r[81]=r[4]; over
  84 SCopy            4   82    0               00 r[82]=r[4]; over
  85 SCopy            4   83    0               00 r[83]=r[4]; over
  86 SCopy            4   84    0               00 r[84]=r[4]; over
  87 SCopy            4   85    0               00 r[85]=r[4]; over
  88 SCopy            4   86    0               00 r[86]=r[4]; over
  89 SCopy            4   87    0               00 r[87]=r[4]; over
  90 SCopy            4   88    0               00 r[88]=r[4]; over
  91 SCopy            4   89    0               00 r[89]=r[4]; over
  92 SCopy            4   90    0               00 r[90]=r[4]; over
  93 SCopy            4   91    0               00 r[91]=r[4]; over
  94 SCopy            4   92    0               00 r[92]=r[4]; over
  95 SCopy            4   93    0               00 r[93]=r[4]; over
  96 SCopy            4   94    0               00 r[94]=r[4]; over
  97 SCopy            4   95    0               00 r[95]=r[4]; over
  98 SCopy            4   96    0               00 r[96]=r[4]; over
  99 SCopy            4   97    0               00 r[97]=r[4]; over
 100 SCopy            4   98    0               00 r[98]=r[4]; over
 101 SCopy            4   99    0               00 r[99]=r[4]; over
 102 SCopy            4  100    0               00 r[100]=r[4]; over
 103 SCopy            4  101    0               00 r[101]=r[4]; over
 104 SCopy            4  102    0               00 r[102]=r[4]; over
 105 SCopy            4  103    0               00 r[103]=r[4]; over
 106 SCopy            4  104    0               00 r[104]=r[4]; over
 107 SCopy            4  105    0               00 r[105]=r[4]; over
 108 SCopy            4  106    0               00 r[106]=r[4]; over
 109 SCopy            4  107    0               00 r[107]=r[4]; over
 110 SCopy            4  108    0               00 r[108]=r[4]; over
 111 SCopy            4  109    0               00 r[109]=r[4]; over
 112 SCopy            4  110    0               00 r[110]=r[4]; over
 113 SCopy            4  111    0               00 r[111]=r[4]; over
 114 SCopy            4  112    0               00 r[112]=r[4]; over
 115 SCopy            4  113    0               00 r[113]=r[4]; over
 116 SCopy            4  114    0               00 r[114]=r[4]; over
 117 SCopy            4  115    0               00 r[115]=r[4]; over
 118 SCopy            4  116    0               00 r[116]=r[4]; over
 119 SCopy            4  117    0               00 r[117]=r[4]; over
 120 SCopy            4  118    0               00 r[118]=r[4]; over
 121 SCopy            4  119    0               00 r[119]=r[4]; over
 122 SCopy            4  120    0               00 r[120]=r[4]; over
 123 SCopy            4  121    0               00 r[121]=r[4]; over
 124 SCopy            4  122    0               00 r[122]=r[4]; over
 125 SCopy            4  123    0               00 r[123]=r[4]; over
 126 SCopy            4  124    0               00 r[124]=r[4]; over
 127 IntCopy          1  125    0               00 r[125]=r[1]; rowid
 128 MakeRecord       6  120    5               00 r[5]=mkrec(r[6..125]); for following
 129 IdxInsert        1    5    6 120           10 key=r[5]
 130 MakeRecord       2    3  126               00 r[126]=mkrec(r[2..4])
 131 Insert           0  126    1 preceding     39 intkey=r[1] data=r[126]
 132 Halt             0    0    0               00 
 133 Transaction      0    1    3 1             01 usesStmtJournal=0
 134 Goto             0    1    0               00 
SQL: [;
;SELECT sql FROM sqlite_master

;]
VDBE Program Listing:
   0 Init             0    8    0               00 Start at 8
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          2    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0    7    0               00 
   4 Column           0    4    1               00 r[1]=sqlite_master.sql
   5 ResultRow        1    1    0               00 output=r[1]
   6 Next             0    4    0               01 
   7 Halt             0    0    0               00 
   8 Transaction      0    0    3 1             01 usesStmtJournal=0
   9 Goto             0    1    0               00 
SQL: [;
;ANALYZE 
;]
VDBE Program Listing:
   0 Init             0  525    0               00 Start at 525
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
  13 OpenWrite        3    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        3   17    1               00 intkey=r[1]
  16 Rowid            3    5    0               00 r[5]=rowid
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
  18 String8          0    6    0 table         00 r[6]='table'
  19 String8          0    7    0 sqlite_stat1  00 r[7]='sqlite_stat1'
  20 String8          0    8    0 sqlite_stat1  00 r[8]='sqlite_stat1'
  21 Copy             2    9    0               00 r[9]=r[2]
  22 String8          0   10    0 CREATE TABLE sqlite_stat1(tbl,idx,stat) 00 r[10]='CREATE TABLE sqlite_stat1(tbl,idx,stat)'
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  24 Insert           3   11    5               00 intkey=r[5] data=r[11]
  25 SetCookie        0    1    4               00 
  26 ParseSchema      0    0    0 tbl_name='sqlite_stat1' AND type!='trigger' 00 
  27 OpenWrite        0    2    0 3             10 root=2 iDb=0; sqlite_stat1
  28 OpenRead         4    2    0 3             00 root=2 iDb=0; preceding
  29 String8          0   16    0 preceding     00 r[16]='preceding'
  30 String8          0   17    0 following     00 r[17]='following'; Analysis for preceding.following
  31 OpenRead         5    3    0 k(120,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, 00 root=3 iDb=0; following
  32 Integer        120   14    0               00 r[14]=120
  33 Integer        119   15    0               00 r[15]=119
  34 Function0        0   14   13 stat_init(2)  02 r[13]=func(r[14..15])
  35 Rewind           5  522    0               00 
  36 Integer          0   14    0               00 r[14]=0
  37 Goto             0  397    0               00 
  38 Integer          0   14    0               00 r[14]=0
  39 Column           5    0   15               00 r[15]=
  40 Ne              15  397   19 (BINARY)      80 if r[19]!=r[15] goto 397
  41 Integer          1   14    0               00 r[14]=1
  42 Column           5    1   15               00 r[15]=
  43 Ne              15  398   20 (BINARY)      80 if r[20]!=r[15] goto 398
  44 Integer          2   14    0               00 r[14]=2
  45 Column           5    2   15               00 r[15]=
  46 Ne              15  399   21 (BINARY)      80 if r[21]!=r[15] goto 399
  47 Integer          3   14    0               00 r[14]=3
  48 Column           5    3   15               00 r[15]=
  49 Ne              15  400   22 (BINARY)      80 if r[22]!=r[15] goto 400
  50 Integer          4   14    0               00 r[14]=4
  51 Column           5    4   15               00 r[15]=
  52 Ne              15  401   23 (BINARY)      80 if r[23]!=r[15] goto 401
  53 Integer          5   14    0               00 r[14]=5
  54 Column           5    5   15               00 r[15]=
  55 Ne              15  402   24 (BINARY)      80 if r[24]!=r[15] goto 402
  56 Integer          6   14    0               00 r[14]=6
  57 Column           5    6   15               00 r[15]=
  58 Ne              15  403   25 (BINARY)      80 if r[25]!=r[15] goto 403
  59 Integer          7   14    0               00 r[14]=7
  60 Column           5    7   15               00 r[15]=
  61 Ne              15  404   26 (BINARY)      80 if r[26]!=r[15] goto 404
  62 Integer          8   14    0               00 r[14]=8
  63 Column           5    8   15               00 r[15]=
  64 Ne              15  405   27 (BINARY)      80 if r[27]!=r[15] goto 405
  65 Integer          9   14    0               00 r[14]=9
  66 Column           5    9   15               00 r[15]=
  67 Ne              15  406   28 (BINARY)      80 if r[28]!=r[15] goto 406
  68 Integer         10   14    0               00 r[14]=10
  69 Column           5   10   15               00 r[15]=
  70 Ne              15  407   29 (BINARY)      80 if r[29]!=r[15] goto 407
  71 Integer         11   14    0               00 r[14]=11
  72 Column           5   11   15               00 r[15]=
  73 Ne              15  408   30 (BINARY)      80 if r[30]!=r[15] goto 408
  74 Integer         12   14    0               00 r[14]=12
  75 Column           5   12   15               00 r[15]=
  76 Ne              15  409   31 (BINARY)      80 if r[31]!=r[15] goto 409
  77 Integer         13   14    0               00 r[14]=13
  78 Column           5   13   15               00 r[15]=
  79 Ne              15  410   32 (BINARY)      80 if r[32]!=r[15] goto 410
  80 Integer         14   14    0               00 r[14]=14
  81 Column           5   14   15               00 r[15]=
  82 Ne              15  411   33 (BINARY)      80 if r[33]!=r[15] goto 411
  83 Integer         15   14    0               00 r[14]=15
  84 Column           5   15   15               00 r[15]=
  85 Ne              15  412   34 (BINARY)      80 if r[34]!=r[15] goto 412
  86 Integer         16   14    0               00 r[14]=16
  87 Column           5   16   15               00 r[15]=
  88 Ne              15  413   35 (BINARY)      80 if r[35]!=r[15] goto 413
  89 Integer         17   14    0               00 r[14]=17
  90 Column           5   17   15               00 r[15]=
  91 Ne              15  414   36 (BINARY)      80 if r[36]!=r[15] goto 414
  92 Integer         18   14    0               00 r[14]=18
  93 Column           5   18   15               00 r[15]=
  94 Ne              15  415   37 (BINARY)      80 if r[37]!=r[15] goto 415
  95 Integer         19   14    0               00 r[14]=19
  96 Column           5   19   15               00 r[15]=
  97 Ne              15  416   38 (BINARY)      80 if r[38]!=r[15] goto 416
  98 Integer         20   14    0               00 r[14]=20
  99 Column           5   20   15               00 r[15]=
 100 Ne              15  417   39 (BINARY)      80 if r[39]!=r[15] goto 417
 101 Integer         21   14    0               00 r[14]=21
 102 Column           5   21   15               00 r[15]=
 103 Ne              15  418   40 (BINARY)      80 if r[40]!=r[15] goto 418
 104 Integer         22   14    0               00 r[14]=22
 105 Column           5   22   15               00 r[15]=
 106 Ne              15  419   41 (BINARY)      80 if r[41]!=r[15] goto 419
 107 Integer         23   14    0               00 r[14]=23
 108 Column           5   23   15               00 r[15]=
 109 Ne              15  420   42 (BINARY)      80 if r[42]!=r[15] goto 420
 110 Integer         24   14    0               00 r[14]=24
 111 Column           5   24   15               00 r[15]=
 112 Ne              15  421   43 (BINARY)      80 if r[43]!=r[15] goto 421
 113 Integer         25   14    0               00 r[14]=25
 114 Column           5   25   15               00 r[15]=
 115 Ne              15  422   44 (BINARY)      80 if r[44]!=r[15] goto 422
 116 Integer         26   14    0               00 r[14]=26
 117 Column           5   26   15               00 r[15]=
 118 Ne              15  423   45 (BINARY)      80 if r[45]!=r[15] goto 423
 119 Integer         27   14    0               00 r[14]=27
 120 Column           5   27   15               00 r[15]=
 121 Ne              15  424   46 (BINARY)      80 if r[46]!=r[15] goto 424
 122 Integer         28   14    0               00 r[14]=28
 123 Column           5   28   15               00 r[15]=
 124 Ne              15  425   47 (BINARY)      80 if r[47]!=r[15] goto 425
 125 Integer         29   14    0               00 r[14]=29
 126 Column           5   29   15               00 r[15]=
 127 Ne              15  426   48 (BINARY)      80 if r[48]!=r[15] goto 426
 128 Integer         30   14    0               00 r[14]=30
 129 Column           5   30   15               00 r[15]=
 130 Ne              15  427   49 (BINARY)      80 if r[49]!=r[15] goto 427
 131 Integer         31   14    0               00 r[14]=31
 132 Column           5   31   15               00 r[15]=
 133 Ne              15  428   50 (BINARY)      80 if r[50]!=r[15] goto 428
 134 Integer         32   14    0               00 r[14]=32
 135 Column           5   32   15               00 r[15]=
 136 Ne              15  429   51 (BINARY)      80 if r[51]!=r[15] goto 429
 137 Integer         33   14    0               00 r[14]=33
 138 Column           5   33   15               00 r[15]=
 139 Ne              15  430   52 (BINARY)      80 if r[52]!=r[15] goto 430
 140 Integer         34   14    0               00 r[14]=34
 141 Column           5   34   15               00 r[15]=
 142 Ne              15  431   53 (BINARY)      80 if r[53]!=r[15] goto 431
 143 Integer         35   14    0               00 r[14]=35
 144 Column           5   35   15               00 r[15]=
 145 Ne              15  432   54 (BINARY)      80 if r[54]!=r[15] goto 432
 146 Integer         36   14    0               00 r[14]=36
 147 Column           5   36   15               00 r[15]=
 148 Ne              15  433   55 (BINARY)      80 if r[55]!=r[15] goto 433
 149 Integer         37   14    0               00 r[14]=37
 150 Column           5   37   15               00 r[15]=
 151 Ne              15  434   56 (BINARY)      80 if r[56]!=r[15] goto 434
 152 Integer         38   14    0               00 r[14]=38
 153 Column           5   38   15               00 r[15]=
 154 Ne              15  435   57 (BINARY)      80 if r[57]!=r[15] goto 435
 155 Integer         39   14    0               00 r[14]=39
 156 Column           5   39   15               00 r[15]=
 157 Ne              15  436   58 (BINARY)      80 if r[58]!=r[15] goto 436
 158 Integer         40   14    0               00 r[14]=40
 159 Column           5   40   15               00 r[15]=
 160 Ne              15  437   59 (BINARY)      80 if r[59]!=r[15] goto 437
 161 Integer         41   14    0               00 r[14]=41
 162 Column           5   41   15               00 r[15]=
 163 Ne              15  438   60 (BINARY)      80 if r[60]!=r[15] goto 438
 164 Integer         42   14    0               00 r[14]=42
 165 Column           5   42   15               00 r[15]=
 166 Ne              15  439   61 (BINARY)      80 if r[61]!=r[15] goto 439
 167 Integer         43   14    0               00 r[14]=43
 168 Column           5   43   15               00 r[15]=
 169 Ne              15  440   62 (BINARY)      80 if r[62]!=r[15] goto 440
 170 Integer         44   14    0               00 r[14]=44
 171 Column           5   44   15               00 r[15]=
 172 Ne              15  441   63 (BINARY)      80 if r[63]!=r[15] goto 441
 173 Integer         45   14    0               00 r[14]=45
 174 Column           5   45   15               00 r[15]=
 175 Ne              15  442   64 (BINARY)      80 if r[64]!=r[15] goto 442
 176 Integer         46   14    0               00 r[14]=46
 177 Column           5   46   15               00 r[15]=
 178 Ne              15  443   65 (BINARY)      80 if r[65]!=r[15] goto 443
 179 Integer         47   14    0               00 r[14]=47
 180 Column           5   47   15               00 r[15]=
 181 Ne              15  444   66 (BINARY)      80 if r[66]!=r[15] goto 444
 182 Integer         48   14    0               00 r[14]=48
 183 Column           5   48   15               00 r[15]=
 184 Ne              15  445   67 (BINARY)      80 if r[67]!=r[15] goto 445
 185 Integer         49   14    0               00 r[14]=49
 186 Column           5   49   15               00 r[15]=
 187 Ne              15  446   68 (BINARY)      80 if r[68]!=r[15] goto 446
 188 Integer         50   14    0               00 r[14]=50
 189 Column           5   50   15               00 r[15]=
 190 Ne              15  447   69 (BINARY)      80 if r[69]!=r[15] goto 447
 191 Integer         51   14    0               00 r[14]=51
 192 Column           5   51   15               00 r[15]=
 193 Ne              15  448   70 (BINARY)      80 if r[70]!=r[15] goto 448
 194 Integer         52   14    0               00 r[14]=52
 195 Column           5   52   15               00 r[15]=
 196 Ne              15  449   71 (BINARY)      80 if r[71]!=r[15] goto 449
 197 Integer         53   14    0               00 r[14]=53
 198 Column           5   53   15               00 r[15]=
 199 Ne              15  450   72 (BINARY)      80 if r[72]!=r[15] goto 450
 200 Integer         54   14    0               00 r[14]=54
 201 Column           5   54   15               00 r[15]=
 202 Ne              15  451   73 (BINARY)      80 if r[73]!=r[15] goto 451
 203 Integer         55   14    0               00 r[14]=55
 204 Column           5   55   15               00 r[15]=
 205 Ne              15  452   74 (BINARY)      80 if r[74]!=r[15] goto 452
 206 Integer         56   14    0               00 r[14]=56
 207 Column           5   56   15               00 r[15]=
 208 Ne              15  453   75 (BINARY)      80 if r[75]!=r[15] goto 453
 209 Integer         57   14    0               00 r[14]=57
 210 Column           5   57   15               00 r[15]=
 211 Ne              15  454   76 (BINARY)      80 if r[76]!=r[15] goto 454
 212 Integer         58   14    0               00 r[14]=58
 213 Column           5   58   15               00 r[15]=
 214 Ne              15  455   77 (BINARY)      80 if r[77]!=r[15] goto 455
 215 Integer         59   14    0               00 r[14]=59
 216 Column           5   59   15               00 r[15]=
 217 Ne              15  456   78 (BINARY)      80 if r[78]!=r[15] goto 456
 218 Integer         60   14    0               00 r[14]=60
 219 Column           5   60   15               00 r[15]=
 220 Ne              15  457   79 (BINARY)      80 if r[79]!=r[15] goto 457
 221 Integer         61   14    0               00 r[14]=61
 222 Column           5   61   15               00 r[15]=
 223 Ne              15  458   80 (BINARY)      80 if r[80]!=r[15] goto 458
 224 Integer         62   14    0               00 r[14]=62
 225 Column           5   62   15               00 r[15]=
 226 Ne              15  459   81 (BINARY)      80 if r[81]!=r[15] goto 459
 227 Integer         63   14    0               00 r[14]=63
 228 Column           5   63   15               00 r[15]=
 229 Ne              15  460   82 (BINARY)      80 if r[82]!=r[15] goto 460
 230 Integer         64   14    0               00 r[14]=64
 231 Column           5   64   15               00 r[15]=
 232 Ne              15  461   83 (BINARY)      80 if r[83]!=r[15] goto 461
 233 Integer         65   14    0               00 r[14]=65
 234 Column           5   65   15               00 r[15]=
 235 Ne              15  462   84 (BINARY)      80 if r[84]!=r[15] goto 462
 236 Integer         66   14    0               00 r[14]=66
 237 Column           5   66   15               00 r[15]=
 238 Ne              15  463   85 (BINARY)      80 if r[85]!=r[15] goto 463
 239 Integer         67   14    0               00 r[14]=67
 240 Column           5   67   15               00 r[15]=
 241 Ne              15  464   86 (BINARY)      80 if r[86]!=r[15] goto 464
 242 Integer         68   14    0               00 r[14]=68
 243 Column           5   68   15               00 r[15]=
 244 Ne              15  465   87 (BINARY)      80 if r[87]!=r[15] goto 465
 245 Integer         69   14    0               00 r[14]=69
 246 Column           5   69   15               00 r[15]=
 247 Ne              15  466   88 (BINARY)      80 if r[88]!=r[15] goto 466
 248 Integer         70   14    0               00 r[14]=70
 249 Column           5   70   15               00 r[15]=
 250 Ne              15  467   89 (BINARY)      80 if r[89]!=r[15] goto 467
 251 Integer         71   14    0               00 r[14]=71
 252 Column           5   71   15               00 r[15]=
 253 Ne              15  468   90 (BINARY)      80 if r[90]!=r[15] goto 468
 254 Integer         72   14    0               00 r[14]=72
 255 Column           5   72   15               00 r[15]=
 256 Ne              15  469   91 (BINARY)      80 if r[91]!=r[15] goto 469
 257 Integer         73   14    0               00 r[14]=73
 258 Column           5   73   15               00 r[15]=
 259 Ne              15  470   92 (BINARY)      80 if r[92]!=r[15] goto 470
 260 Integer         74   14    0               00 r[14]=74
 261 Column           5   74   15               00 r[15]=
 262 Ne              15  471   93 (BINARY)      80 if r[93]!=r[15] goto 471
 263 Integer         75   14    0               00 r[14]=75
 264 Column           5   75   15               00 r[15]=
 265 Ne              15  472   94 (BINARY)      80 if r[94]!=r[15] goto 472
 266 Integer         76   14    0               00 r[14]=76
 267 Column           5   76   15               00 r[15]=
 268 Ne              15  473   95 (BINARY)      80 if r[95]!=r[15] goto 473
 269 Integer         77   14    0               00 r[14]=77
 270 Column           5   77   15               00 r[15]=
 271 Ne              15  474   96 (BINARY)      80 if r[96]!=r[15] goto 474
 272 Integer         78   14    0               00 r[14]=78
 273 Column           5   78   15               00 r[15]=
 274 Ne              15  475   97 (BINARY)      80 if r[97]!=r[15] goto 475
 275 Integer         79   14    0               00 r[14]=79
 276 Column           5   79   15               00 r[15]=
 277 Ne              15  476   98 (BINARY)      80 if r[98]!=r[15] goto 476
 278 Integer         80   14    0               00 r[14]=80
 279 Column           5   80   15               00 r[15]=
 280 Ne              15  477   99 (BINARY)      80 if r[99]!=r[15] goto 477
 281 Integer         81   14    0               00 r[14]=81
 282 Column           5   81   15               00 r[15]=
 283 Ne              15  478  100 (BINARY)      80 if r[100]!=r[15] goto 478
 284 Integer         82   14    0               00 r[14]=82
 285 Column           5   82   15               00 r[15]=
 286 Ne              15  479  101 (BINARY)      80 if r[101]!=r[15] goto 479
 287 Integer         83   14    0               00 r[14]=83
 288 Column           5   83   15               00 r[15]=
 289 Ne              15  480  102 (BINARY)      80 if r[102]!=r[15] goto 480
 290 Integer         84   14    0               00 r[14]=84
 291 Column           5   84   15               00 r[15]=
 292 Ne              15  481  103 (BINARY)      80 if r[103]!=r[15] goto 481
 293 Integer         85   14    0               00 r[14]=85
 294 Column           5   85   15               00 r[15]=
 295 Ne              15  482  104 (BINARY)      80 if r[104]!=r[15] goto 482
 296 Integer         86   14    0               00 r[14]=86
 297 Column           5   86   15               00 r[15]=
 298 Ne              15  483  105 (BINARY)      80 if r[105]!=r[15] goto 483
 299 Integer         87   14    0               00 r[14]=87
 300 Column           5   87   15               00 r[15]=
 301 Ne              15  484  106 (BINARY)      80 if r[106]!=r[15] goto 484
 302 Integer         88   14    0               00 r[14]=88
 303 Column           5   88   15               00 r[15]=
 304 Ne              15  485  107 (BINARY)      80 if r[107]!=r[15] goto 485
 305 Integer         89   14    0               00 r[14]=89
 306 Column           5   89   15               00 r[15]=
 307 Ne              15  486  108 (BINARY)      80 if r[108]!=r[15] goto 486
 308 Integer         90   14    0               00 r[14]=90
 309 Column           5   90   15               00 r[15]=
 310 Ne              15  487  109 (BINARY)      80 if r[109]!=r[15] goto 487
 311 Integer         91   14    0               00 r[14]=91
 312 Column           5   91   15               00 r[15]=
 313 Ne              15  488  110 (BINARY)      80 if r[110]!=r[15] goto 488
 314 Integer         92   14    0               00 r[14]=92
 315 Column           5   92   15               00 r[15]=
 316 Ne              15  489  111 (BINARY)      80 if r[111]!=r[15] goto 489
 317 Integer         93   14    0               00 r[14]=93
 318 Column           5   93   15               00 r[15]=
 319 Ne              15  490  112 (BINARY)      80 if r[112]!=r[15] goto 490
 320 Integer         94   14    0               00 r[14]=94
 321 Column           5   94   15               00 r[15]=
 322 Ne              15  491  113 (BINARY)      80 if r[113]!=r[15] goto 491
 323 Integer         95   14    0               00 r[14]=95
 324 Column           5   95   15               00 r[15]=
 325 Ne              15  492  114 (BINARY)      80 if r[114]!=r[15] goto 492
 326 Integer         96   14    0               00 r[14]=96
 327 Column           5   96   15               00 r[15]=
 328 Ne              15  493  115 (BINARY)      80 if r[115]!=r[15] goto 493
 329 Integer         97   14    0               00 r[14]=97
 330 Column           5   97   15               00 r[15]=
 331 Ne              15  494  116 (BINARY)      80 if r[116]!=r[15] goto 494
 332 Integer         98   14    0               00 r[14]=98
 333 Column           5   98   15               00 r[15]=
 334 Ne              15  495  117 (BINARY)      80 if r[117]!=r[15] goto 495
 335 Integer         99   14    0               00 r[14]=99
 336 Column           5   99   15               00 r[15]=
 337 Ne              15  496  118 (BINARY)      80 if r[118]!=r[15] goto 496
 338 Integer        100   14    0               00 r[14]=100
 339 Column           5  100   15               00 r[15]=
 340 Ne              15  497  119 (BINARY)      80 if r[119]!=r[15] goto 497
 341 Integer        101   14    0               00 r[14]=101
 342 Column           5  101   15               00 r[15]=
 343 Ne              15  498  120 (BINARY)      80 if r[120]!=r[15] goto 498
 344 Integer        102   14    0               00 r[14]=102
 345 Column           5  102   15               00 r[15]=
 346 Ne              15  499  121 (BINARY)      80 if r[121]!=r[15] goto 499
 347 Integer        103   14    0               00 r[14]=103
 348 Column           5  103   15               00 r[15]=
 349 Ne              15  500  122 (BINARY)      80 if r[122]!=r[15] goto 500
 350 Integer        104   14    0               00 r[14]=104
 351 Column           5  104   15               00 r[15]=
 352 Ne              15  501  123 (BINARY)      80 if r[123]!=r[15] goto 501
 353 Integer        105   14    0               00 r[14]=105
 354 Column           5  105   15               00 r[15]=
 355 Ne              15  502  124 (BINARY)      80 if r[124]!=r[15] goto 502
 356 Integer        106   14    0               00 r[14]=106
 357 Column           5  106   15               00 r[15]=
 358 Ne              15  503  125 (BINARY)      80 if r[125]!=r[15] goto 503
 359 Integer        107   14    0               00 r[14]=107
 360 Column           5  107   15               00 r[15]=
 361 Ne              15  504  126 (BINARY)      80 if r[126]!=r[15] goto 504
 362 Integer        108   14    0               00 r[14]=108
 363 Column           5  108   15               00 r[15]=
 364 Ne              15  505  127 (BINARY)      80 if r[127]!=r[15] goto 505
 365 Integer        109   14    0               00 r[14]=109
 366 Column           5  109   15               00 r[15]=
 367 Ne              15  506  128 (BINARY)      80 if r[128]!=r[15] goto 506
 368 Integer        110   14    0               00 r[14]=110
 369 Column           5  110   15               00 r[15]=
 370 Ne              15  507  129 (BINARY)      80 if r[129]!=r[15] goto 507
 371 Integer        111   14    0               00 r[14]=111
 372 Column           5  111   15               00 r[15]=
 373 Ne              15  508  130 (BINARY)      80 if r[130]!=r[15] goto 508
 374 Integer        112   14    0               00 r[14]=112
 375 Column           5  112   15               00 r[15]=
 376 Ne              15  509  131 (BINARY)      80 if r[131]!=r[15] goto 509
 377 Integer        113   14    0               00 r[14]=113
 378 Column           5  113   15               00 r[15]=
 379 Ne              15  510  132 (BINARY)      80 if r[132]!=r[15] goto 510
 380 Integer        114   14    0               00 r[14]=114
 381 Column           5  114   15               00 r[15]=
 382 Ne              15  511  133 (BINARY)      80 if r[133]!=r[15] goto 511
 383 Integer        115   14    0               00 r[14]=115
 384 Column           5  115   15               00 r[15]=
 385 Ne              15  512  134 (BINARY)      80 if r[134]!=r[15] goto 512
 386 Integer        116   14    0               00 r[14]=116
 387 Column           5  116   15               00 r[15]=
 388 Ne              15  513  135 (BINARY)      80 if r[135]!=r[15] goto 513
 389 Integer        117   14    0               00 r[14]=117
 390 Column           5  117   15               00 r[15]=
 391 Ne              15  514  136 (BINARY)      80 if r[136]!=r[15] goto 514
 392 Integer        118   14    0               00 r[14]=118
 393 Column           5  118   15               00 r[15]=
 394 Ne              15  515  137 (BINARY)      80 if r[137]!=r[15] goto 515
 395 Integer        119   14    0               00 r[14]=119
 396 Goto             0  516    0               00 
 397 Column           5    0   19               00 r[19]=
 398 Column           5    1   20               00 r[20]=
 399 Column           5    2   21               00 r[21]=
 400 Column           5    3   22               00 r[22]=
 401 Column           5    4   23               00 r[23]=
 402 Column           5    5   24               00 r[24]=
 403 Column           5    6   25               00 r[25]=
 404 Column           5    7   26               00 r[26]=
 405 Column           5    8   27               00 r[27]=
 406 Column           5    9   28               00 r[28]=
 407 Column           5   10   29               00 r[29]=
 408 Column           5   11   30               00 r[30]=
 409 Column           5   12   31               00 r[31]=
 410 Column           5   13   32               00 r[32]=
 411 Column           5   14   33               00 r[33]=
 412 Column           5   15   34               00 r[34]=
 413 Column           5   16   35               00 r[35]=
 414 Column           5   17   36               00 r[36]=
 415 Column           5   18   37               00 r[37]=
 416 Column           5   19   38               00 r[38]=
 417 Column           5   20   39               00 r[39]=
 418 Column           5   21   40               00 r[40]=
 419 Column           5   22   41               00 r[41]=
 420 Column           5   23   42               00 r[42]=
 421 Column           5   24   43               00 r[43]=
 422 Column           5   25   44               00 r[44]=
 423 Column           5   26   45               00 r[45]=
 424 Column           5   27   46               00 r[46]=
 425 Column           5   28   47               00 r[47]=
 426 Column           5   29   48               00 r[48]=
 427 Column           5   30   49               00 r[49]=
 428 Column           5   31   50               00 r[50]=
 429 Column           5   32   51               00 r[51]=
 430 Column           5   33   52               00 r[52]=
 431 Column           5   34   53               00 r[53]=
 432 Column           5   35   54               00 r[54]=
 433 Column           5   36   55               00 r[55]=
 434 Column           5   37   56               00 r[56]=
 435 Column           5   38   57               00 r[57]=
 436 Column           5   39   58               00 r[58]=
 437 Column           5   40   59               00 r[59]=
 438 Column           5   41   60               00 r[60]=
 439 Column           5   42   61               00 r[61]=
 440 Column           5   43   62               00 r[62]=
 441 Column           5   44   63               00 r[63]=
 442 Column           5   45   64               00 r[64]=
 443 Column           5   46   65               00 r[65]=
 444 Column           5   47   66               00 r[66]=
 445 Column           5   48   67               00 r[67]=
 446 Column           5   49   68               00 r[68]=
 447 Column           5   50   69               00 r[69]=
 448 Column           5   51   70               00 r[70]=
 449 Column           5   52   71               00 r[71]=
 450 Column           5   53   72               00 r[72]=
 451 Column           5   54   73               00 r[73]=
 452 Column           5   55   74               00 r[74]=
 453 Column           5   56   75               00 r[75]=
 454 Column           5   57   76               00 r[76]=
 455 Column           5   58   77               00 r[77]=
 456 Column           5   59   78               00 r[78]=
 457 Column           5   60   79               00 r[79]=
 458 Column           5   61   80               00 r[80]=
 459 Column           5   62   81               00 r[81]=
 460 Column           5   63   82               00 r[82]=
 461 Column           5   64   83               00 r[83]=
 462 Column           5   65   84               00 r[84]=
 463 Column           5   66   85               00 r[85]=
 464 Column           5   67   86               00 r[86]=
 465 Column           5   68   87               00 r[87]=
 466 Column           5   69   88               00 r[88]=
 467 Column           5   70   89               00 r[89]=
 468 Column           5   71   90               00 r[90]=
 469 Column           5   72   91               00 r[91]=
 470 Column           5   73   92               00 r[92]=
 471 Column           5   74   93               00 r[93]=
 472 Column           5   75   94               00 r[94]=
 473 Column           5   76   95               00 r[95]=
 474 Column           5   77   96               00 r[96]=
 475 Column           5   78   97               00 r[97]=
 476 Column           5   79   98               00 r[98]=
 477 Column           5   80   99               00 r[99]=
 478 Column           5   81  100               00 r[100]=
 479 Column           5   82  101               00 r[101]=
 480 Column           5   83  102               00 r[102]=
 481 Column           5   84  103               00 r[103]=
 482 Column           5   85  104               00 r[104]=
 483 Column           5   86  105               00 r[105]=
 484 Column           5   87  106               00 r[106]=
 485 Column           5   88  107               00 r[107]=
 486 Column           5   89  108               00 r[108]=
 487 Column           5   90  109               00 r[109]=
 488 Column           5   91  110               00 r[110]=
 489 Column           5   92  111               00 r[111]=
 490 Column           5   93  112               00 r[112]=
 491 Column           5   94  113               00 r[113]=
 492 Column           5   95  114               00 r[114]=
 493 Column           5   96  115               00 r[115]=
 494 Column           5   97  116               00 r[116]=
 495 Column           5   98  117               00 r[117]=
 496 Column           5   99  118               00 r[118]=
 497 Column           5  100  119               00 r[119]=
 498 Column           5  101  120               00 r[120]=
 499 Column           5  102  121               00 r[121]=
 500 Column           5  103  122               00 r[122]=
 501 Column           5  104  123               00 r[123]=
 502 Column           5  105  124               00 r[124]=
 503 Column           5  106  125               00 r[125]=
 504 Column           5  107  126               00 r[126]=
 505 Column           5  108  127               00 r[127]=
 506 Column           5  109  128               00 r[128]=
 507 Column           5  110  129               00 r[129]=
 508 Column           5  111  130               00 r[130]=
 509 Column           5  112  131               00 r[131]=
 510 Column           5  113  132               00 r[132]=
 511 Column           5  114  133               00 r[133]=
 512 Column           5  115  134               00 r[134]=
 513 Column           5  116  135               00 r[135]=
 514 Column           5  117  136               00 r[136]=
 515 Column           5  118  137               00 r[137]=
 516 Function0        1   13   15 stat_push(2)  02 r[15]=func(r[13..14])
 517 Next             5   38    0               00 
 518 Function0        0   13   18 stat_get(1)   01 r[18]=func(r[13])
 519 MakeRecord      16    3   15 BBB           00 r[15]=mkrec(r[16..18])
 520 NewRowid         0   12    0               00 r[12]=rowid
 521 Insert           0   15   12               08 intkey=r[12] data=r[15]
 522 LoadAnalysis     0    0    0               00 
 523 Expire           0    0    0               00 
 524 Halt             0    0    0               00 
 525 Transaction      0    1    3 1             01 usesStmtJournal=0
 526 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    4 1             00 usesStmtJournal=0
  16 String8          0    2    0 sqlite_stat1  00 r[2]='sqlite_stat1'
  17 String8          0    3    0 trigger       00 r[3]='trigger'
  18 Goto             0    1    0               00 
SQL: [SELECT tbl,idx,stat FROM 'main'.sqlite_stat1]
VDBE Program Listing:
   0 Init             0   10    0               00 Start at 10
   1 OpenRead         0    4    0 3             00 root=4 iDb=0; sqlite_stat1
   2 Explain          2    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_stat1.tbl
   5 Column           0    1    2               00 r[2]=sqlite_stat1.idx
   6 Column           0    2    3               00 r[3]=sqlite_stat1.stat
   7 ResultRow        1    3    0               00 output=r[1..3]
   8 Next             0    4    0               01 
   9 Halt             0    0    0               00 
  10 Transaction      0    0    4 1             01 usesStmtJournal=0
  11 Goto             0    1    0               00 
SQL: [SELECT tbl,idx,stat FROM 'main'.sqlite_stat1
;]
VDBE Program Listing:
   0 Init             0   10    0               00 Start at 10
   1 OpenRead         0    4    0 3             00 root=4 iDb=0; sqlite_stat1
   2 Explain          2    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_stat1.tbl
   5 Column           0    1    2               00 r[2]=sqlite_stat1.idx
   6 Column           0    2    3               00 r[3]=sqlite_stat1.stat
   7 ResultRow        1    3    0               00 output=r[1..3]
   8 Next             0    4    0               01 
   9 Halt             0    0    0               00 
  10 Transaction      0    0    4 1             01 usesStmtJournal=0
  11 Goto             0    1    0               00 
SQL: [DROP TABLE IF EXISTS preceding;]
VDBE Program Listing:
   0 Init             0   70    0               00 Start at 70
   1 Null             0    1    0               00 r[1]=NULL
   2 OpenWrite        0    4    0 3             00 root=4 iDb=0; sqlite_stat1
   3 Explain          3    0    0 SCAN TABLE sqlite_stat1 00 
   4 Rewind           0   11    0               00 
   5 Column           0    0    2               00 r[2]=sqlite_stat1.tbl
   6 Ne               3   10    2 (BINARY)      51 if r[2]!=r[3] goto 10
   7 Rowid            0    4    0               00 r[4]=rowid
   8 Once             0    9    0               00 
   9 Delete           0    0    0 sqlite_stat1  02 
  10 Next             0    5    0               01 
  11 Null             0    5    0               00 r[5]=NULL
  12 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  13 Explain         13    0    0 SCAN TABLE sqlite_master 00 
  14 Rewind           1   23    0               00 
  15 Column           1    2    2               00 r[2]=sqlite_master.tbl_name
  16 Ne               3   22    2 (BINARY)      52 if r[2]!=r[3] goto 22
  17 Column           1    0    2               00 r[2]=sqlite_master.type
  18 Eq               6   22    2 (BINARY)      52 if r[2]==r[6] goto 22
  19 Rowid            1    7    0               00 r[7]=rowid
  20 Once             0   21    0               00 
  21 Delete           1    0    0               02 
  22 Next             1   15    0               01 
  23 Destroy          3    2    0               00 
  24 Null             0    8    9               00 r[8..9]=NULL
  25 IfNot            2   34    1               00 
  26 OpenRead         2    1    0 4             00 root=1 iDb=0; sqlite_master
  27 Explain         27    0    0 SCAN TABLE sqlite_master 00 
  28 Rewind           2   34    0               00 
  29 Column           2    3   15               00 r[15]=sqlite_master.rootpage
  30 Ne               2   33   15 (BINARY)      54 if r[15]!=r[2] goto 33
  31 Rowid            2    9    0               00 r[9]=rowid
  32 RowSetAdd        8    9    0               00 rowset(8)=r[9]
  33 Next             2   29    0               01 
  34 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  35 RowSetRead       8   45    9               00 r[9]=rowset(8)
  36 NotExists        2   35    9               00 intkey=r[9]
  37 Column           2    0   10               00 r[10]=sqlite_master.type
  38 Column           2    1   11               00 r[11]=sqlite_master.name
  39 Column           2    2   12               00 r[12]=sqlite_master.tbl_name
  40 Integer          3   13    0               00 r[13]=3
  41 Column           2    4   14               00 r[14]=sqlite_master.sql
  42 MakeRecord      10    5   15 BBBDB         00 r[15]=mkrec(r[10..14])
  43 Insert           2   15    9               00 intkey=r[9] data=r[15]
  44 Goto             0   35    0               00 
  45 Destroy          2    2    0               00 
  46 Null             0   17   18               00 r[17..18]=NULL
  47 IfNot            2   56    1               00 
  48 OpenRead         3    1    0 4             00 root=1 iDb=0; sqlite_master
  49 Explain         49    0    0 SCAN TABLE sqlite_master 00 
  50 Rewind           3   56    0               00 
  51 Column           3    3   16               00 r[16]=sqlite_master.rootpage
  52 Ne               2   55   16 (BINARY)      54 if r[16]!=r[2] goto 55
  53 Rowid            3   18    0               00 r[18]=rowid
  54 RowSetAdd       17   18    0               00 rowset(17)=r[18]
  55 Next             3   51    0               01 
  56 OpenWrite        3    1    0 5             00 root=1 iDb=0; sqlite_master
  57 RowSetRead      17   67   18               00 r[18]=rowset(17)
  58 NotExists        3   57   18               00 intkey=r[18]
  59 Column           3    0   19               00 r[19]=sqlite_master.type
  60 Column           3    1   20               00 r[20]=sqlite_master.name
  61 Column           3    2   21               00 r[21]=sqlite_master.tbl_name
  62 Integer          2   22    0               00 r[22]=2
  63 Column           3    4   23               00 r[23]=sqlite_master.sql
  64 MakeRecord      19    5   16 BBBDB         00 r[16]=mkrec(r[19..23])
  65 Insert           3   16   18               00 intkey=r[18] data=r[16]
  66 Goto             0   57    0               00 
  67 DropTable        0    0    0 preceding     00 
  68 SetCookie        0    1    5               00 
  69 Halt             0    0    0               00 
  70 Transaction      0    1    4 1             01 usesStmtJournal=1
  71 String8          0    3    0 preceding     00 r[3]='preceding'
  72 String8          0    6    0 trigger       00 r[6]='trigger'
  73 Goto             0    1    0               00 
SQL: [;CREATE TABLE preceding(t1 int, x char);]
VDBE Program Listing:
   0 Init             0   28    0               00 Start at 28
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
  16 Rowid            1    5    0               00 r[5]=rowid
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
  18 String8          0    6    0 table         00 r[6]='table'
  19 String8          0    7    0 preceding     00 r[7]='preceding'
  20 String8          0    8    0 preceding     00 r[8]='preceding'
  21 Copy             2    9    0               00 r[9]=r[2]
  22 String8          0   10    0 CREATE TABLE preceding(t1 int, x char) 00 r[10]='CREATE TABLE preceding(t1 int, x char)'
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
  25 SetCookie        0    1    6               00 
  26 ParseSchema      0    0    0 tbl_name='preceding' AND type!='trigger' 00 
  27 Halt             0    0    0               00 
  28 Transaction      0    1    5 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    6 1             00 usesStmtJournal=0
  16 String8          0    2    0 preceding     00 r[2]='preceding'
  17 String8          0    3    0 trigger       00 r[3]='trigger'
  18 Goto             0    1    0               00 
SQL: [;CREATE TABLE test001(last_field, test002, PRIMARY KEY(last_field,test002));]
VDBE Program Listing:
   0 Init             0   39    0               00 Start at 39
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      0    4    2               00 r[4]=root iDb=0 flags=2
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
  15 String8          0    6    0 index         00 r[6]='index'
  16 String8          0    7    0 sqlite_autoindex_test001_1 00 r[7]='sqlite_autoindex_test001_1'
  17 String8          0    8    0 test001       00 r[8]='test001'
  18 Copy             4    9    0               00 r[9]=r[4]
  19 Null             0   10    0               00 r[10]=NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
  22 Close            0    0    0               00 
  23 Null             0   12   13               00 r[12..13]=NULL
  24 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  25 Explain         25    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  26 SeekRowid        2   28    1               00 intkey=r[1]
  27 Rowid            2   13    0               00 r[13]=rowid
  28 IsNull          13   36    0               00 if r[13]==NULL goto 36
  29 String8          0   14    0 table         00 r[14]='table'
  30 String8          0   15    0 test001       00 r[15]='test001'
  31 String8          0   16    0 test001       00 r[16]='test001'
  32 Copy             2   17    0               00 r[17]=r[2]
  33 String8          0   18    0 CREATE TABLE test001(last_field, test002, PRIMARY KEY(last_field,test002)) 00 r[18]='CREATE TABLE test001(last_field, test002, PRIMARY KEY(last_field,test002))'
  34 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
  35 Insert           2   19   13               00 intkey=r[13] data=r[19]
  36 SetCookie        0    1    7               00 
  37 ParseSchema      0    0    0 tbl_name='test001' AND type!='trigger' 00 
  38 Halt             0    0    0               00 
  39 Transaction      0    1    6 1             01 usesStmtJournal=0
  40 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    7 1             00 usesStmtJournal=0
  16 String8          0    2    0 test001       00 r[2]='test001'
  17 String8          0    3    0 trigger       00 r[3]='trigger'
  18 Goto             0    1    0               00 
SQL: [;INSERT INTO test001 VALUES(9,1),(1,2);]
VDBE Program Listing:
   0 Init             0   27    0               00 Start at 27
   1 InitCoroutine    4   10    2               00 
   2 Explain          2    0    0 SCAN 2 CONSTANT ROWS 00 
   3 Integer          9    2    0               00 r[2]=9
   4 Integer          1    3    0               00 r[3]=1
   5 Yield            4    0    0               00 
   6 Integer          1    2    0               00 r[2]=1
   7 Integer          2    3    0               00 r[3]=2
   8 Yield            4    0    0               00 
   9 EndCoroutine     4    0    0               00 
  10 OpenWrite        0    3    0 2             00 root=3 iDb=0; test001
  11 OpenWrite        1    5    0 k(3,,,)       00 root=5 iDb=0; sqlite_autoindex_test001_1
  12 Yield            4   26    0               00 
  13 NewRowid         0    1    0               00 r[1]=rowid
  14 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_test001_1
  15 SCopy            2    6    0               00 r[6]=r[2]; last_field
  16 SCopy            3    7    0               00 r[7]=r[3]; test002
  17 IntCopy          1    8    0               00 r[8]=r[1]; rowid
  18 MakeRecord       6    3    5               00 r[5]=mkrec(r[6..8]); for sqlite_autoindex_test001_1
  19 Abortable        0    0    0               00 
  20 NoConflict       1   22    6 2             00 key=r[6..7]
  21 Halt          1555    2    0 test001.last_field, test001.test002 02 
  22 IdxInsert        1    5    6 3             10 key=r[5]
  23 MakeRecord       2    2    9               00 r[9]=mkrec(r[2..3])
  24 Insert           0    9    1 test001       39 intkey=r[1] data=r[9]
  25 Goto             0   12    0               00 
  26 Halt             0    0    0               00 
  27 Transaction      0    1    7 1             01 usesStmtJournal=1
  28 Goto             0    1    0               00 
SQL: [;CREATE TABLE field1 (test003);]
VDBE Program Listing:
   0 Init             0   28    0               00 Start at 28
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
  16 Rowid            1    5    0               00 r[5]=rowid
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
  18 String8          0    6    0 table         00 r[6]='table'
  19 String8          0    7    0 field1        00 r[7]='field1'
  20 String8          0    8    0 field1        00 r[8]='field1'
  21 Copy             2    9    0               00 r[9]=r[2]
  22 String8          0   10    0 CREATE TABLE field1 (test003) 00 r[10]='CREATE TABLE field1 (test003)'
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
  25 SetCookie        0    1    8               00 
  26 ParseSchema      0    0    0 tbl_name='field1' AND type!='trigger' 00 
  27 Halt             0    0    0               00 
  28 Transaction      0    1    7 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    8 1             00 usesStmtJournal=0
  16 String8          0    2    0 field1        00 r[2]='field1'
  17 String8          0    3    0 trigger       00 r[3]='trigger'
  18 Goto             0    1    0               00 
SQL: [;INSERT INTO test001(test002) VALUES ('a');]
VDBE Program Listing:
   0 Init             0   17    0               00 Start at 17
   1 OpenWrite        0    3    0 2             00 root=3 iDb=0; test001
   2 OpenWrite        1    5    0 k(3,,,)       00 root=5 iDb=0; sqlite_autoindex_test001_1
   3 NewRowid         0    1    0               00 r[1]=rowid
   4 String8          0    3    0 a             00 r[3]='a'
   5 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_test001_1
   6 SCopy            2    5    0               00 r[5]=r[2]; last_field
   7 SCopy            3    6    0               00 r[6]=r[3]; test002
   8 IntCopy          1    7    0               00 r[7]=r[1]; rowid
   9 MakeRecord       5    3    4               00 r[4]=mkrec(r[5..7]); for sqlite_autoindex_test001_1
  10 Abortable        0    0    0               00 
  11 NoConflict       1   13    5 2             00 key=r[5..6]
  12 Halt          1555    2    0 test001.last_field, test001.test002 02 
  13 IdxInsert        1    4    5 3             10 key=r[4]
  14 MakeRecord       2    2    8               00 r[8]=mkrec(r[2..3])
  15 Insert           0    8    1 test001       39 intkey=r[1] data=r[8]
  16 Halt             0    0    0               00 
  17 Transaction      0    1    8 1             01 usesStmtJournal=0
  18 Null             0    2    0               00 r[2]=NULL
  19 Goto             0    1    0               00 
SQL: [;SELECT LIKELY(field1.rowid) <= '0' FROM field1;]
VDBE Program Listing:
   0 Init             0    9    0               00 Start at 9
   1 OpenRead         0    6    0 0             00 root=6 iDb=0; field1
   2 Explain          2    0    0 SCAN TABLE field1 00 
   3 Rewind           0    8    0               00 
   4 Rowid            0    2    0               00 r[2]=rowid
   5 Le               3    1    2               64 r[1] = (r[2]<=r[3])
   6 ResultRow        1    1    0               00 output=r[1]
   7 Next             0    4    0               01 
   8 Halt             0    0    0               00 
   9 Transaction      0    0    8 1             01 usesStmtJournal=0
  10 String8          0    3    0 0             00 r[3]='0'
  11 Goto             0    1    0               00 
SQL: [;
;SELECT * FROM field1 WHERE LIKELY(field1.rowid) <= '0';]
VDBE Program Listing:
   0 Init             0   11    0               00 Start at 11
   1 OpenRead         0    6    0 1             00 root=6 iDb=0; field1
   2 Explain          2    0    0 SEARCH TABLE field1 USING INTEGER PRIMARY KEY (rowid<?) 00 
   3 Rewind           0   10    0               00 
   4 String8          0    1    0 0             00 r[1]='0'
   5 Rowid            0    2    0               00 r[2]=rowid
   6 Gt               1   10    2               53 if r[2]>r[1] goto 10
   7 Column           0    0    3               00 r[3]=field1.test003
   8 ResultRow        3    1    0               00 output=r[3]
   9 Next             0    5    0               00 
  10 Halt             0    0    0               00 
  11 Transaction      0    0    8 1             01 usesStmtJournal=0
  12 Goto             0    1    0               00 
SQL: [;
;SELECT * FROM preceding WHERE (preceding.rowid) <= '0';]
VDBE Program Listing:
   0 Init             0   12    0               00 Start at 12
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; preceding
   2 Explain          2    0    0 SEARCH TABLE preceding USING INTEGER PRIMARY KEY (rowid<?) 00 
   3 Rewind           0   11    0               00 
   4 String8          0    1    0 0             00 r[1]='0'
   5 Rowid            0    2    0               00 r[2]=rowid
   6 Gt               1   11    2               53 if r[2]>r[1] goto 11
   7 Column           0    0    3               00 r[3]=preceding.t1
   8 Column           0    1    4               00 r[4]=preceding.x
   9 ResultRow        3    2    0               00 output=r[3..4]
  10 Next             0    5    0               00 
  11 Halt             0    0    0               00 
  12 Transaction      0    0    8 1             01 usesStmtJournal=0
  13 Goto             0    1    0               00 
SQL: [;
;SELECT unlikely(field1.rowid) <= '0', likelihood(field1.rowid,0.5) <= '0' FROM field1;]
VDBE Program Listing:
   0 Init             0   11    0               00 Start at 11
   1 OpenRead         0    6    0 0             00 root=6 iDb=0; field1
   2 Explain          2    0    0 SCAN TABLE field1 00 
   3 Rewind           0   10    0               00 
   4 Rowid            0    3    0               00 r[3]=rowid
   5 Le               4    1    3               64 r[1] = (r[3]<=r[4])
   6 Rowid            0    3    0               00 r[3]=rowid
   7 Le               4    2    3               64 r[2] = (r[3]<=r[4])
   8 ResultRow        1    2    0               00 output=r[1..2]
   9 Next             0    4    0               01 
  10 Halt             0    0    0               00 
  11 Transaction      0    0    8 1             01 usesStmtJournal=0
  12 String8          0    4    0 0             00 r[4]='0'
  13 Goto             0    1    0               00 
SQL: [;
;SELECT * FROM test001 WHERE unlikely(test001.rowid) <= '0';]
VDBE Program Listing:
   0 Init             0   12    0               00 Start at 12
   1 OpenRead         0    3    0 2             00 root=3 iDb=0; test001
   2 Explain          2    0    0 SEARCH TABLE test001 USING INTEGER PRIMARY KEY (rowid<?) 00 
   3 Rewind           0   11    0               00 
   4 String8          0    1    0 0             00 r[1]='0'
   5 Rowid            0    2    0               00 r[2]=rowid
   6 Gt               1   11    2               53 if r[2]>r[1] goto 11
   7 Column           0    0    3               00 r[3]=test001.last_field
   8 Column           0    1    4               00 r[4]=test001.test002
   9 ResultRow        3    2    0               00 output=r[3..4]
  10 Next             0    5    0               00 
  11 Halt             0    0    0               00 
  12 Transaction      0    0    8 1             01 usesStmtJournal=0
  13 Goto             0    1    0               00 
SQL: [;
;DROP TABLE IF EXISTS preceding;]
VDBE Program Listing:
   0 Init             0   48    0               00 Start at 48
   1 Null             0    1    0               00 r[1]=NULL
   2 OpenWrite        0    4    0 3             00 root=4 iDb=0; sqlite_stat1
   3 Explain          3    0    0 SCAN TABLE sqlite_stat1 00 
   4 Rewind           0   11    0               00 
   5 Column           0    0    2               00 r[2]=sqlite_stat1.tbl
   6 Ne               3   10    2 (BINARY)      51 if r[2]!=r[3] goto 10
   7 Rowid            0    4    0               00 r[4]=rowid
   8 Once             0    9    0               00 
   9 Delete           0    0    0 sqlite_stat1  02 
  10 Next             0    5    0               01 
  11 Null             0    5    0               00 r[5]=NULL
  12 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  13 Explain         13    0    0 SCAN TABLE sqlite_master 00 
  14 Rewind           1   23    0               00 
  15 Column           1    2    2               00 r[2]=sqlite_master.tbl_name
  16 Ne               3   22    2 (BINARY)      52 if r[2]!=r[3] goto 22
  17 Column           1    0    2               00 r[2]=sqlite_master.type
  18 Eq               6   22    2 (BINARY)      52 if r[2]==r[6] goto 22
  19 Rowid            1    7    0               00 r[7]=rowid
  20 Once             0   21    0               00 
  21 Delete           1    0    0               02 
  22 Next             1   15    0               01 
  23 Destroy          2    2    0               00 
  24 Null             0    8    9               00 r[8..9]=NULL
  25 IfNot            2   34    1               00 
  26 OpenRead         2    1    0 4             00 root=1 iDb=0; sqlite_master
  27 Explain         27    0    0 SCAN TABLE sqlite_master 00 
  28 Rewind           2   34    0               00 
  29 Column           2    3   15               00 r[15]=sqlite_master.rootpage
  30 Ne               2   33   15 (BINARY)      54 if r[15]!=r[2] goto 33
  31 Rowid            2    9    0               00 r[9]=rowid
  32 RowSetAdd        8    9    0               00 rowset(8)=r[9]
  33 Next             2   29    0               01 
  34 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  35 RowSetRead       8   45    9               00 r[9]=rowset(8)
  36 NotExists        2   35    9               00 intkey=r[9]
  37 Column           2    0   10               00 r[10]=sqlite_master.type
  38 Column           2    1   11               00 r[11]=sqlite_master.name
  39 Column           2    2   12               00 r[12]=sqlite_master.tbl_name
  40 Integer          2   13    0               00 r[13]=2
  41 Column           2    4   14               00 r[14]=sqlite_master.sql
  42 MakeRecord      10    5   15 BBBDB         00 r[15]=mkrec(r[10..14])
  43 Insert           2   15    9               00 intkey=r[9] data=r[15]
  44 Goto             0   35    0               00 
  45 DropTable        0    0    0 preceding     00 
  46 SetCookie        0    1    9               00 
  47 Halt             0    0    0               00 
  48 Transaction      0    1    8 1             01 usesStmtJournal=1
  49 String8          0    3    0 preceding     00 r[3]='preceding'
  50 String8          0    6    0 trigger       00 r[6]='trigger'
  51 Goto             0    1    0               00 
SQL: [;INSERT INTO test001(test002) VALUES(''),(NULL),('X'),(NULL);]
VDBE Program Listing:
   0 Init             0   30    0               00 Start at 30
   1 InitCoroutine    4   12    2               00 
   2 Explain          2    0    0 SCAN 4 CONSTANT ROWS 00 
   3 String8          0    5    0               00 r[5]=''
   4 Yield            4    0    0               00 
   5 Null             0    5    0               00 r[5]=NULL
   6 Yield            4    0    0               00 
   7 String8          0    5    0 X             00 r[5]='X'
   8 Yield            4    0    0               00 
   9 Null             0    5    0               00 r[5]=NULL
  10 Yield            4    0    0               00 
  11 EndCoroutine     4    0    0               00 
  12 OpenWrite        0    3    0 2             00 root=3 iDb=0; test001
  13 OpenWrite        1    5    0 k(3,,,)       00 root=5 iDb=0; sqlite_autoindex_test001_1
  14 Yield            4   29    0               00 
  15 NewRowid         0    1    0               00 r[1]=rowid
  16 SCopy            5    3    0               00 r[3]=r[5]
  17 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_test001_1
  18 SCopy            2    8    0               00 r[8]=r[2]; last_field
  19 SCopy            3    9    0               00 r[9]=r[3]; test002
  20 IntCopy          1   10    0               00 r[10]=r[1]; rowid
  21 MakeRecord       8    3    7               00 r[7]=mkrec(r[8..10]); for sqlite_autoindex_test001_1
  22 Abortable        0    0    0               00 
  23 NoConflict       1   25    8 2             00 key=r[8..9]
  24 Halt          1555    2    0 test001.last_field, test001.test002 02 
  25 IdxInsert        1    7    8 3             10 key=r[7]
  26 MakeRecord       2    2   11               00 r[11]=mkrec(r[2..3])
  27 Insert           0   11    1 test001       39 intkey=r[1] data=r[11]
  28 Goto             0   14    0               00 
  29 Halt             0    0    0               00 
  30 Transaction      0    1    9 1             01 usesStmtJournal=1
  31 Null             0    2    0               00 r[2]=NULL
  32 Goto             0    1    0               00 
SQL: [;SELECT coalesce(max(quote(last_field)),10) FROM test001 GROUP BY last_field;]
VDBE Program Listing:
   0 Init             0   37    0               00 Start at 37
   1 Noop             1    1    0               00 
   2 Integer          0    4    0               00 r[4]=0; clear abort flag
   3 Null             0    7    7               00 r[7..7]=NULL
   4 Gosub            6   33    0               00 
   5 OpenRead         2    5    0 k(3,,,)       00 root=5 iDb=0; sqlite_autoindex_test001_1
   6 Explain          6    0    0 SCAN TABLE test001 USING COVERING INDEX sqlite_autoindex_test001_1 00 
   7 Rewind           2   21    9 0             00 
   8 Column           2    0    8               00 r[8]=test001.last_field
   9 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
  10 Jump            11   15   11               00 
  11 Move             8    7    1               00 r[7]=r[8]
  12 Gosub            5   25    0               00 output one row
  13 IfPos            4   36    0               00 if r[4]>0 then r[4]-=0, goto 36; check abort flag
  14 Gosub            6   33    0               00 reset accumulator
  15 Column           2    0   10               00 r[10]=test001.last_field
  16 Function0        0   10    9 quote(1)      01 r[9]=func(r[10])
  17 CollSeq          0    0    0 (BINARY)      00 
  18 AggStep          0    9    1 max(1)        01 accum=r[1] step(r[9])
  19 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
  20 Next             2    8    0               01 
  21 Gosub            5   25    0               00 output final row
  22 Goto             0   36    0               00 
  23 Integer          1    4    0               00 r[4]=1; set abort flag
  24 Return           5    0    0               00 
  25 IfPos            3   27    0               00 if r[3]>0 then r[3]-=0, goto 27; Groupby result generator entry point
  26 Return           5    0    0               00 
  27 AggFinal         1    1    0 max(1)        00 accum=r[1] N=1
  28 SCopy            1   11    0               00 r[11]=r[1]
  29 NotNull         11   31    0               00 if r[11]!=NULL goto 31
  30 Integer         10   11    0               00 r[11]=10
  31 ResultRow       11    1    0               00 output=r[11]
  32 Return           5    0    0               00 end groupby result generator
  33 Null             0    1    2               00 r[1..2]=NULL
  34 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
  35 Return           6    0    0               00 
  36 Halt             0    0    0               00 
  37 Transaction      0    0    9 1             01 usesStmtJournal=0
  38 Goto             0    1    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f55639c0859 in __GI_abort () at abort.c:79
#2  0x00007f55639c0729 in __assert_fail_base (fmt=0x7f5563b56588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x221a82 "(mFlags&MEM_Str)==0 || (pMem->n==pX->n && pMem->z==pX->z)", file=0x22873d "sqlite3.c", 
    line=75351, function=<optimized out>) at assert.c:92
#3  0x00007f55639d1fd6 in __GI___assert_fail (assertion=0x221a82 "(mFlags&MEM_Str)==0 || (pMem->n==pX->n && pMem->z==pX->z)", file=0x22873d "sqlite3.c", line=75351, 
    function=0x208940 "void sqlite3VdbeMemAboutToChange(Vdbe *, Mem *)") at assert.c:101
#4  0x00000000003e1103 in sqlite3VdbeMemAboutToChange (pVdbe=0x882170, pMem=0x8cc740) at sqlite3.c:75351
#5  0x00000000003c031d in sqlite3VdbeExec (p=0x882170) at sqlite3.c:84329
#6  0x0000000000411104 in sqlite3Step (p=0x882170) at sqlite3.c:81930
#7  0x000000000029128d in sqlite3_step (pStmt=0x882170) at sqlite3.c:81995
#8  0x00000000002570b9 in main (argc=1, argv=0x7ffe0ba853a8) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 59141] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
