GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000626,sig:06,src:020310+020387,time:33161671,execs:6392670,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_listing=on;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;BEGIN;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT c0, count(*) FROM t0 GROUP BY c0 ORDER BY c0
;]
VDBE Program Listing:
   0 Init             0   43    0               00 Start at 43
   1 Noop             1    4    0               00 
   2 SorterOpen       2    1    0 k(1,B)        00 
   3 Integer          0    4    0               00 r[4]=0; clear abort flag
   4 Null             0    7    7               00 r[7..7]=NULL
   5 Gosub            6   39    0               00 
   6 OpenRead         0    3    0 1             00 root=3 iDb=0; t0
   7 Explain          7    0    0 SCAN TABLE t0 00 
   8 Rewind           0   14    0               00 
   9 Explain          9    0    0 USE TEMP B-TREE FOR GROUP BY 00 
  10 Column           0    0    9               00 r[9]=t0.c0
  11 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
  12 SorterInsert     2   10    0               00 key=r[10]
  13 Next             0    9    0               01 
  14 OpenPseudo       3    9    1               00 1 columns in r[9]
  15 SorterSort       2   42    0               00 GROUP BY sort
  16 SorterData       2    9    3               00 r[9]=data
  17 Column           3    0    8               00 r[8]=
  18 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
  19 Jump            20   24   20               00 
  20 Move             8    7    1               00 r[7]=r[8]
  21 Gosub            5   33    0               00 output one row
  22 IfPos            4   42    0               00 if r[4]>0 then r[4]-=0, goto 42; check abort flag
  23 Gosub            6   39    0               00 reset accumulator
  24 AggStep          0    0    2 count(0)      00 accum=r[2] step(r[0])
  25 If               3   27    0               00 
  26 Column           3    0    1               00 r[1]=
  27 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
  28 SorterNext       2   16    0               00 
  29 Gosub            5   33    0               00 output final row
  30 Goto             0   42    0               00 
  31 Integer          1    4    0               00 r[4]=1; set abort flag
  32 Return           5    0    0               00 
  33 IfPos            3   35    0               00 if r[3]>0 then r[3]-=0, goto 35; Groupby result generator entry point
  34 Return           5    0    0               00 
  35 AggFinal         2    0    0 count(0)      00 accum=r[2] N=0
  36 Copy             1   11    1               00 r[11..12]=r[1..2]
  37 ResultRow       11    2    0               00 output=r[11..12]
  38 Return           5    0    0               00 end groupby result generator
  39 Null             0    1    2               00 r[1..2]=NULL
  40 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
  41 Return           6    0    0               00 
  42 Halt             0    0    0               00 
  43 Transaction      0    0    3 0             01 usesStmtJournal=0
  44 Goto             0    1    0               00 
SQL: [SELECT t1*2+1 AS x, count(*) AS y FROM preceding GROUP BY x ORDER BY 10-(x+y)
  
;]
VDBE Program Listing:
   0 Init             0   61    0               00 Start at 61
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 SorterOpen       2    2    0 k(1,B)        00 
   3 Integer          0    4    0               00 r[4]=0; clear abort flag
   4 Null             0    7    7               00 r[7..7]=NULL
   5 Gosub            6   49    0               00 
   6 OpenRead         0    6    0 1             00 root=6 iDb=0; preceding
   7 Explain          7    0    0 SCAN TABLE preceding 00 
   8 Rewind           0   17    0               00 
   9 Explain          9    0    0 USE TEMP B-TREE FOR GROUP BY 00 
  10 Column           0    0   12               00 r[12]=preceding.t1
  11 Multiply        13   12   11               00 r[11]=r[13]*r[12]
  12 Add             14   11    9               00 r[9]=r[14]+r[11]
  13 Column           0    0   10               00 r[10]=preceding.t1
  14 MakeRecord       9    2   11               00 r[11]=mkrec(r[9..10])
  15 SorterInsert     2   11    0               00 key=r[11]
  16 Next             0    9    0               01 
  17 OpenPseudo       3   11    2               00 2 columns in r[11]
  18 SorterSort       2   52    0               00 GROUP BY sort
  19 SorterData       2   11    3               00 r[11]=data
  20 Column           3    0    8               00 r[8]=
  21 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
  22 Jump            23   27   23               00 
  23 Move             8    7    1               00 r[7]=r[8]
  24 Gosub            5   36    0               00 output one row
  25 IfPos            4   52    0               00 if r[4]>0 then r[4]-=0, goto 52; check abort flag
  26 Gosub            6   49    0               00 reset accumulator
  27 AggStep          0    0    2 count(0)      00 accum=r[2] step(r[0])
  28 If               3   30    0               00 
  29 Column           3    1    1               00 r[1]=
  30 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
  31 SorterNext       2   19    0               00 
  32 Gosub            5   36    0               00 output final row
  33 Goto             0   52    0               00 
  34 Integer          1    4    0               00 r[4]=1; set abort flag
  35 Return           5    0    0               00 
  36 IfPos            3   38    0               00 if r[3]>0 then r[3]-=0, goto 38; Groupby result generator entry point
  37 Return           5    0    0               00 
  38 AggFinal         2    0    0 count(0)      00 accum=r[2] N=0
  39 Multiply        13    1   12               00 r[12]=r[13]*r[1]
  40 Add             14   12   16               00 r[16]=r[14]+r[12]
  41 Copy             2   17    0               00 r[17]=r[2]
  42 Multiply        13    1   20               00 r[20]=r[13]*r[1]
  43 Add             14   20   18               00 r[18]=r[14]+r[20]
  44 Add              2   18   12               00 r[12]=r[2]+r[18]
  45 Subtract        12   19   15               00 r[15]=r[19]-r[12]
  46 MakeRecord      15    3   22               00 r[22]=mkrec(r[15..17])
  47 SorterInsert     1   22   15 3             00 key=r[22]
  48 Return           5    0    0               00 end groupby result generator
  49 Null             0    1    2               00 r[1..2]=NULL
  50 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
  51 Return           6    0    0               00 
  52 Explain         52    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  53 OpenPseudo       4   23    4               00 4 columns in r[23]
  54 SorterSort       1   60    0               00 
  55 SorterData       1   23    4               00 r[23]=data
  56 Column           4    2   17               00 r[17]=y
  57 Column           4    1   16               00 r[16]=x
  58 ResultRow       16    2    0               00 output=r[16..17]
  59 SorterNext       1   55    0               00 
  60 Halt             0    0    0               00 
  61 Transaction      0    0    3 0             01 usesStmtJournal=0
  62 Integer          2   13    0               00 r[13]=2
  63 Integer          1   14    0               00 r[14]=1
  64 Integer         10   19    0               00 r[19]=10
  65 Goto             0    1    0               00 
SQL: [;
;SELECT t1, min(t1) FROM preceding GROUP BY t1 ORDER BY t1 DESC;]
VDBE Program Listing:
   0 Init             0   55    0               00 Start at 55
   1 SorterOpen       1    4    0 k(1,-B)       00 
   2 SorterOpen       2    1    0 k(1,B)        00 
   3 Integer          0    4    0               00 r[4]=0; clear abort flag
   4 Null             0    7    7               00 r[7..7]=NULL
   5 Gosub            6   43    0               00 
   6 OpenRead         0    6    0 1             00 root=6 iDb=0; preceding
   7 Explain          7    0    0 SCAN TABLE preceding 00 
   8 Rewind           0   14    0               00 
   9 Explain          9    0    0 USE TEMP B-TREE FOR GROUP BY 00 
  10 Column           0    0    9               00 r[9]=preceding.t1
  11 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
  12 SorterInsert     2   10    0               00 key=r[10]
  13 Next             0    9    0               01 
  14 OpenPseudo       3    9    1               00 1 columns in r[9]
  15 SorterSort       2   46    0               00 GROUP BY sort
  16 SorterData       2    9    3               00 r[9]=data
  17 Column           3    0    8               00 r[8]=
  18 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
  19 Jump            20   24   20               00 
  20 Move             8    7    1               00 r[7]=r[8]
  21 Gosub            5   35    0               00 output one row
  22 IfPos            4   46    0               00 if r[4]>0 then r[4]-=0, goto 46; check abort flag
  23 Gosub            6   43    0               00 reset accumulator
  24 Column           3    0   10               00 r[10]=
  25 CollSeq         11    0    0 (BINARY)      00 
  26 AggStep          0   10    2 min(1)        01 accum=r[2] step(r[10])
  27 If              11   29    0               00 
  28 Column           3    0    1               00 r[1]=
  29 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
  30 SorterNext       2   16    0               00 
  31 Gosub            5   35    0               00 output final row
  32 Goto             0   46    0               00 
  33 Integer          1    4    0               00 r[4]=1; set abort flag
  34 Return           5    0    0               00 
  35 IfPos            3   37    0               00 if r[3]>0 then r[3]-=0, goto 37; Groupby result generator entry point
  36 Return           5    0    0               00 
  37 AggFinal         2    1    0 min(1)        00 accum=r[2] N=1
  38 Copy             2   13    0               00 r[13]=r[2]
  39 Copy             1   12    0               00 r[12]=r[1]
  40 MakeRecord      12    2   15               00 r[15]=mkrec(r[12..13])
  41 SorterInsert     1   15   12 2             00 key=r[15]
  42 Return           5    0    0               00 end groupby result generator
  43 Null             0    1    2               00 r[1..2]=NULL
  44 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
  45 Return           6    0    0               00 
  46 Explain         46    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  47 OpenPseudo       4   16    4               00 4 columns in r[16]
  48 SorterSort       1   54    0               00 
  49 SorterData       1   16    4               00 r[16]=data
  50 Column           4    1   14               00 r[14]=min(t1)
  51 Column           4    0   13               00 r[13]=t1
  52 ResultRow       13    2    0               00 output=r[13..14]
  53 SorterNext       1   49    0               00 
  54 Halt             0    0    0               00 
  55 Transaction      0    0    3 0             01 usesStmtJournal=0
  56 Goto             0    1    0               00 
SQL: [;
;SELECT over, min(over) FROM v0 GROUP BY over ORDER BY over DESC;]
VDBE Program Listing:
   0 Init             0   55    0               00 Start at 55
   1 SorterOpen       1    4    0 k(1,-B)       00 
   2 SorterOpen       2    1    0 k(1,B)        00 
   3 Integer          0    4    0               00 r[4]=0; clear abort flag
   4 Null             0    7    7               00 r[7..7]=NULL
   5 Gosub            6   43    0               00 
   6 OpenRead         0    4    0 1             00 root=4 iDb=0; v0
   7 Explain          7    0    0 SCAN TABLE v0 00 
   8 Rewind           0   14    0               00 
   9 Explain          9    0    0 USE TEMP B-TREE FOR GROUP BY 00 
  10 Column           0    0    9               00 r[9]=v0.over
  11 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
  12 SorterInsert     2   10    0               00 key=r[10]
  13 Next             0    9    0               01 
  14 OpenPseudo       3    9    1               00 1 columns in r[9]
  15 SorterSort       2   46    0               00 GROUP BY sort
  16 SorterData       2    9    3               00 r[9]=data
  17 Column           3    0    8               00 r[8]=
  18 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
  19 Jump            20   24   20               00 
  20 Move             8    7    1               00 r[7]=r[8]
  21 Gosub            5   35    0               00 output one row
  22 IfPos            4   46    0               00 if r[4]>0 then r[4]-=0, goto 46; check abort flag
  23 Gosub            6   43    0               00 reset accumulator
  24 Column           3    0   10               00 r[10]=
  25 CollSeq         11    0    0 (BINARY)      00 
  26 AggStep          0   10    2 min(1)        01 accum=r[2] step(r[10])
  27 If              11   29    0               00 
  28 Column           3    0    1               00 r[1]=
  29 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
  30 SorterNext       2   16    0               00 
  31 Gosub            5   35    0               00 output final row
  32 Goto             0   46    0               00 
  33 Integer          1    4    0               00 r[4]=1; set abort flag
  34 Return           5    0    0               00 
  35 IfPos            3   37    0               00 if r[3]>0 then r[3]-=0, goto 37; Groupby result generator entry point
  36 Return           5    0    0               00 
  37 AggFinal         2    1    0 min(1)        00 accum=r[2] N=1
  38 Copy             2   13    0               00 r[13]=r[2]
  39 Copy             1   12    0               00 r[12]=r[1]
  40 MakeRecord      12    2   15               00 r[15]=mkrec(r[12..13])
  41 SorterInsert     1   15   12 2             00 key=r[15]
  42 Return           5    0    0               00 end groupby result generator
  43 Null             0    1    2               00 r[1..2]=NULL
  44 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
  45 Return           6    0    0               00 
  46 Explain         46    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  47 OpenPseudo       4   16    4               00 4 columns in r[16]
  48 SorterSort       1   54    0               00 
  49 SorterData       1   16    4               00 r[16]=data
  50 Column           4    1   14               00 r[14]=min(over)
  51 Column           4    0   13               00 r[13]=over
  52 ResultRow       13    2    0               00 output=r[13..14]
  53 SorterNext       1   49    0               00 
  54 Halt             0    0    0               00 
  55 Transaction      0    0    3 0             01 usesStmtJournal=0
  56 Goto             0    1    0               00 
SQL: [DROP TABLE IF EXISTS tbl1;]
VDBE Program Listing:
   0 Init             0    2    0               00 Start at 2
   1 Halt             0    0    0               00 
   2 Transaction      0    0    3 0             01 usesStmtJournal=0
   3 Transaction      1    0    1 0             01 usesStmtJournal=0
   4 Goto             0    1    0               00 
SQL: [;
;SELECT over, min(following) FROM v0 GROUP BY over ORDER BY 1 DESC;]
VDBE Program Listing:
   0 Init             0   57    0               00 Start at 57
   1 SorterOpen       1    4    0 k(1,-B)       00 
   2 SorterOpen       2    2    0 k(1,B)        00 
   3 Integer          0    5    0               00 r[5]=0; clear abort flag
   4 Null             0    8    8               00 r[8..8]=NULL
   5 Gosub            7   45    0               00 
   6 OpenRead         0    4    0 2             00 root=4 iDb=0; v0
   7 Explain          7    0    0 SCAN TABLE v0 00 
   8 Rewind           0   16    0               00 
   9 Explain          9    0    0 USE TEMP B-TREE FOR GROUP BY 00 
  10 Column           0    0   10               00 r[10]=v0.over
  11 Column           0    1   11               00 r[11]=v0.following
  12 RealAffinity    11    0    0               00 
  13 MakeRecord      10    2   12               00 r[12]=mkrec(r[10..11])
  14 SorterInsert     2   12    0               00 key=r[12]
  15 Next             0    9    0               01 
  16 OpenPseudo       3   12    2               00 2 columns in r[12]
  17 SorterSort       2   48    0               00 GROUP BY sort
  18 SorterData       2   12    3               00 r[12]=data
  19 Column           3    0    9               00 r[9]=
  20 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
  21 Jump            22   26   22               00 
  22 Move             9    8    1               00 r[8]=r[9]
  23 Gosub            6   37    0               00 output one row
  24 IfPos            5   48    0               00 if r[5]>0 then r[5]-=0, goto 48; check abort flag
  25 Gosub            7   45    0               00 reset accumulator
  26 Column           3    1   13               00 r[13]=
  27 CollSeq         14    0    0 (BINARY)      00 
  28 AggStep          0   13    2 min(1)        01 accum=r[2] step(r[13])
  29 If              14   31    0               00 
  30 Column           3    0    1               00 r[1]=
  31 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
  32 SorterNext       2   18    0               00 
  33 Gosub            6   37    0               00 output final row
  34 Goto             0   48    0               00 
  35 Integer          1    5    0               00 r[5]=1; set abort flag
  36 Return           6    0    0               00 
  37 IfPos            4   39    0               00 if r[4]>0 then r[4]-=0, goto 39; Groupby result generator entry point
  38 Return           6    0    0               00 
  39 AggFinal         2    1    0 min(1)        00 accum=r[2] N=1
  40 Copy             2   16    0               00 r[16]=r[2]
  41 Copy             1   15    0               00 r[15]=r[1]
  42 MakeRecord      15    2   18               00 r[18]=mkrec(r[15..16])
  43 SorterInsert     1   18   15 2             00 key=r[18]
  44 Return           6    0    0               00 end groupby result generator
  45 Null             0    1    3               00 r[1..3]=NULL
  46 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
  47 Return           7    0    0               00 
  48 Explain         48    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  49 OpenPseudo       4   19    4               00 4 columns in r[19]
  50 SorterSort       1   56    0               00 
  51 SorterData       1   19    4               00 r[19]=data
  52 Column           4    1   17               00 r[17]=min(following)
  53 Column           4    0   16               00 r[16]=over
  54 ResultRow       16    2    0               00 output=r[16..17]
  55 SorterNext       1   51    0               00 
  56 Halt             0    0    0               00 
  57 Transaction      0    0    3 0             01 usesStmtJournal=0
  58 Goto             0    1    0               00 
SQL: [;
;SELECT typeof(sum(c0)) FROM t0 GROUP BY c0;]
VDBE Program Listing:
   0 Init             0   42    0               00 Start at 42
   1 SorterOpen       1    1    0 k(1,B)        00 
   2 Integer          0    4    0               00 r[4]=0; clear abort flag
   3 Null             0    7    7               00 r[7..7]=NULL
   4 Gosub            6   38    0               00 
   5 OpenRead         0    3    0 1             00 root=3 iDb=0; t0
   6 Explain          6    0    0 SCAN TABLE t0 00 
   7 Rewind           0   13    0               00 
   8 Explain          8    0    0 USE TEMP B-TREE FOR GROUP BY 00 
   9 Column           0    0    9               00 r[9]=t0.c0
  10 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
  11 SorterInsert     1   10    0               00 key=r[10]
  12 Next             0    8    0               01 
  13 OpenPseudo       2    9    1               00 1 columns in r[9]
  14 SorterSort       1   41    0               00 GROUP BY sort
  15 SorterData       1    9    2               00 r[9]=data
  16 Column           2    0    8               00 r[8]=
  17 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
  18 Jump            19   23   19               00 
  19 Move             8    7    1               00 r[7]=r[8]
  20 Gosub            5   31    0               00 output one row
  21 IfPos            4   41    0               00 if r[4]>0 then r[4]-=0, goto 41; check abort flag
  22 Gosub            6   38    0               00 reset accumulator
  23 Column           2    0   10               00 r[10]=
  24 AggStep          0   10    1 sum(1)        01 accum=r[1] step(r[10])
  25 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
  26 SorterNext       1   15    0               00 
  27 Gosub            5   31    0               00 output final row
  28 Goto             0   41    0               00 
  29 Integer          1    4    0               00 r[4]=1; set abort flag
  30 Return           5    0    0               00 
  31 IfPos            3   33    0               00 if r[3]>0 then r[3]-=0, goto 33; Groupby result generator entry point
  32 Return           5    0    0               00 
  33 AggFinal         1    1    0 sum(1)        00 accum=r[1] N=1
  34 Copy             1   10    0               00 r[10]=r[1]
  35 Function0        0   10   11 typeof(1)     01 r[11]=func(r[10])
  36 ResultRow       11    1    0               00 output=r[11]
  37 Return           5    0    0               00 end groupby result generator
  38 Null             0    1    2               00 r[1..2]=NULL
  39 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
  40 Return           6    0    0               00 
  41 Halt             0    0    0               00 
  42 Transaction      0    0    3 0             01 usesStmtJournal=0
  43 Goto             0    1    0               00 
SQL: [;
;SELECT following FROM v0
;]
VDBE Program Listing:
   0 Init             0    9    0               00 Start at 9
   1 OpenRead         1    5    0 k(2,,)        00 root=5 iDb=0; sqlite_autoindex_v0_1
   2 Explain          2    0    0 SCAN TABLE v0 USING COVERING INDEX sqlite_autoindex_v0_1 00 
   3 Rewind           1    8    1 0             00 
   4 Column           1    0    1               00 r[1]=v0.following
   5 RealAffinity     1    0    0               00 
   6 ResultRow        1    1    0               00 output=r[1]
   7 Next             1    4    0               01 
   8 Halt             0    0    0               00 
   9 Transaction      0    0    3 0             01 usesStmtJournal=0
  10 Goto             0    1    0               00 
SQL: [;CREATE TABLE last_field(test002, field1);]
VDBE Program Listing:
   0 Init             0   28    0               00 Start at 28
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
  16 Rowid            1    5    0               00 r[5]=rowid
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
  18 String8          0    6    0 table         00 r[6]='table'
  19 String8          0    7    0 last_field    00 r[7]='last_field'
  20 String8          0    8    0 last_field    00 r[8]='last_field'
  21 Copy             2    9    0               00 r[9]=r[2]
  22 String8          0   10    0 CREATE TABLE last_field(test002, field1) 00 r[10]='CREATE TABLE last_field(test002, field1)'
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
  25 SetCookie        0    1    4               00 
  26 ParseSchema      0    0    0 tbl_name='last_field' AND type!='trigger' 00 
  27 Halt             0    0    0               00 
  28 Transaction      0    1    3 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    4 0             00 usesStmtJournal=0
  16 String8          0    2    0 last_field    00 r[2]='last_field'
  17 String8          0    3    0 trigger       00 r[3]='trigger'
  18 Goto             0    1    0               00 
SQL: [;CREATE TABLE test003 (field2, test004 REAL PRIMARY KEY);]
VDBE Program Listing:
   0 Init             0   39    0               00 Start at 39
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      0    4    2               00 r[4]=root iDb=0 flags=2
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
  15 String8          0    6    0 index         00 r[6]='index'
  16 String8          0    7    0 sqlite_autoindex_test003_1 00 r[7]='sqlite_autoindex_test003_1'
  17 String8          0    8    0 test003       00 r[8]='test003'
  18 Copy             4    9    0               00 r[9]=r[4]
  19 Null             0   10    0               00 r[10]=NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
  22 Close            0    0    0               00 
  23 Null             0   12   13               00 r[12..13]=NULL
  24 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  25 Explain         25    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  26 SeekRowid        2   28    1               00 intkey=r[1]
  27 Rowid            2   13    0               00 r[13]=rowid
  28 IsNull          13   36    0               00 if r[13]==NULL goto 36
  29 String8          0   14    0 table         00 r[14]='table'
  30 String8          0   15    0 test003       00 r[15]='test003'
  31 String8          0   16    0 test003       00 r[16]='test003'
  32 Copy             2   17    0               00 r[17]=r[2]
  33 String8          0   18    0 CREATE TABLE test003 (field2, test004 REAL PRIMARY KEY) 00 r[18]='CREATE TABLE test003 (field2, test004 REAL PRIMARY KEY)'
  34 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
  35 Insert           2   19   13               00 intkey=r[13] data=r[19]
  36 SetCookie        0    1    5               00 
  37 ParseSchema      0    0    0 tbl_name='test003' AND type!='trigger' 00 
  38 Halt             0    0    0               00 
  39 Transaction      0    1    4 0             01 usesStmtJournal=0
  40 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    5 0             00 usesStmtJournal=0
  16 String8          0    2    0 test003       00 r[2]='test003'
  17 String8          0    3    0 trigger       00 r[3]='trigger'
  18 Goto             0    1    0               00 
SQL: [;UPDATE preceding SET t1 = NULL;]
VDBE Program Listing:
   0 Init             0   16    0               00 Start at 16
   1 Null             0    1    2               00 r[1..2]=NULL
   2 OpenWrite        0    6    0 1             00 root=6 iDb=0; preceding
   3 Explain          3    0    0 SCAN TABLE preceding 00 
   4 Rewind           0   15    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
   6 IsNull           2   15    0               00 if r[2]==NULL goto 15
   7 Null             0    3    0               00 r[3]=NULL
   8 Abortable        0    0    0               00 
   9 Lt               3   12    3 (BINARY)      52 if r[3]<r[3] goto 12
  10 Gt               5   12    3 (BINARY)      52 if r[3]>r[5] goto 12
  11 Halt           275    2    0 preceding     03 
  12 MakeRecord       3    1    4 B             00 r[4]=mkrec(r[3])
  13 Insert           0    4    2 preceding     07 intkey=r[2] data=r[4]
  14 Next             0    5    0               01 
  15 Halt             0    0    0               00 
  16 Transaction      0    1    5 0             01 usesStmtJournal=1
  17 Integer       999999    5    0               00 r[5]=999999
  18 Goto             0    1    0               00 
SQL: [CREATE TABLE field3(test005, field4);]
VDBE Program Listing:
   0 Init             0   28    0               00 Start at 28
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
  16 Rowid            1    5    0               00 r[5]=rowid
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
  18 String8          0    6    0 table         00 r[6]='table'
  19 String8          0    7    0 field3        00 r[7]='field3'
  20 String8          0    8    0 field3        00 r[8]='field3'
  21 Copy             2    9    0               00 r[9]=r[2]
  22 String8          0   10    0 CREATE TABLE field3(test005, field4) 00 r[10]='CREATE TABLE field3(test005, field4)'
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
  25 SetCookie        0    1    6               00 
  26 ParseSchema      0    0    0 tbl_name='field3' AND type!='trigger' 00 
  27 Halt             0    0    0               00 
  28 Transaction      0    1    5 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    6 0             00 usesStmtJournal=0
  16 String8          0    2    0 field3        00 r[2]='field3'
  17 String8          0    3    0 trigger       00 r[3]='trigger'
  18 Goto             0    1    0               00 
SQL: [;CREATE TABLE test006 (field5, test007 REAL PRIMARY KEY);]
VDBE Program Listing:
   0 Init             0   39    0               00 Start at 39
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      0    4    2               00 r[4]=root iDb=0 flags=2
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
  15 String8          0    6    0 index         00 r[6]='index'
  16 String8          0    7    0 sqlite_autoindex_test006_1 00 r[7]='sqlite_autoindex_test006_1'
  17 String8          0    8    0 test006       00 r[8]='test006'
  18 Copy             4    9    0               00 r[9]=r[4]
  19 Null             0   10    0               00 r[10]=NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
  22 Close            0    0    0               00 
  23 Null             0   12   13               00 r[12..13]=NULL
  24 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  25 Explain         25    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  26 SeekRowid        2   28    1               00 intkey=r[1]
  27 Rowid            2   13    0               00 r[13]=rowid
  28 IsNull          13   36    0               00 if r[13]==NULL goto 36
  29 String8          0   14    0 table         00 r[14]='table'
  30 String8          0   15    0 test006       00 r[15]='test006'
  31 String8          0   16    0 test006       00 r[16]='test006'
  32 Copy             2   17    0               00 r[17]=r[2]
  33 String8          0   18    0 CREATE TABLE test006 (field5, test007 REAL PRIMARY KEY) 00 r[18]='CREATE TABLE test006 (field5, test007 REAL PRIMARY KEY)'
  34 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
  35 Insert           2   19   13               00 intkey=r[13] data=r[19]
  36 SetCookie        0    1    7               00 
  37 ParseSchema      0    0    0 tbl_name='test006' AND type!='trigger' 00 
  38 Halt             0    0    0               00 
  39 Transaction      0    1    6 0             01 usesStmtJournal=0
  40 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    7 0             00 usesStmtJournal=0
  16 String8          0    2    0 test006       00 r[2]='test006'
  17 String8          0    3    0 trigger       00 r[3]='trigger'
  18 Goto             0    1    0               00 
SQL: [CREATE TABLE field6(test008, field7);]
VDBE Program Listing:
   0 Init             0   28    0               00 Start at 28
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
  16 Rowid            1    5    0               00 r[5]=rowid
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
  18 String8          0    6    0 table         00 r[6]='table'
  19 String8          0    7    0 field6        00 r[7]='field6'
  20 String8          0    8    0 field6        00 r[8]='field6'
  21 Copy             2    9    0               00 r[9]=r[2]
  22 String8          0   10    0 CREATE TABLE field6(test008, field7) 00 r[10]='CREATE TABLE field6(test008, field7)'
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
  25 SetCookie        0    1    8               00 
  26 ParseSchema      0    0    0 tbl_name='field6' AND type!='trigger' 00 
  27 Halt             0    0    0               00 
  28 Transaction      0    1    7 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    8 0             00 usesStmtJournal=0
  16 String8          0    2    0 field6        00 r[2]='field6'
  17 String8          0    3    0 trigger       00 r[3]='trigger'
  18 Goto             0    1    0               00 
SQL: [;PRAGMA integrity_check;]
VDBE Program Listing:
   0 Init             0  204  201               00 Start at 204
   1 Integer         99    1    0               00 r[1]=99
   2 IntegrityCk      2   12    1 [13,11,12,10,8,9,7,6,4,5,3,1] 00 
   3 IsNull           2    9    0               00 if r[2]==NULL goto 9
   4 String8          0    3    0 *** in database main ***
 00 r[3]='*** in database main ***
'
   5 Concat           2    3    3               00 r[3]=r[3]+r[2]
   6 ResultRow        3    1    0               00 output=r[3]
   7 IfPos            1    9    1               00 if r[1]>0 then r[1]-=1, goto 9
   8 Halt             0    0    0               00 
   9 OpenRead         1   13    0 2             00 root=13 iDb=0; field6
  10 Integer          0    7    0               00 r[7]=0
  11 Rewind           1   15    0               00 
  12 AddImm           7    1    0               00 r[7]=r[7]+1
  13 Column           1    1    3               80 r[3]=
  14 Next             1   12    0               00 
  15 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
  16 OpenRead         1   11    0 2             00 root=11 iDb=0; test006
  17 OpenRead         2   12    0 k(2,,)        00 root=12 iDb=0; sqlite_autoindex_test006_1
  18 Integer          0    7    0               00 r[7]=0
  19 Integer          0    8    0               00 r[8]=0
  20 Rewind           1   44    0               00 
  21 AddImm           7    1    0               00 r[7]=r[7]+1
  22 Column           1    1    3               80 r[3]=
  23 Column           1    1   10               00 r[10]=test006.test007
  24 Noop            10    0    0               00 
  25 Rowid            1   11    0               00 r[11]=rowid
  26 AddImm           8    1    0               00 r[8]=r[8]+1
  27 Found            2   37   10 2             00 key=r[10..11]
  28 String8          0    3    0 row           00 r[3]='row '
  29 Concat           7    3    3               00 r[3]=r[3]+r[7]
  30 String8          0    4    0  missing from index  00 r[4]=' missing from index '
  31 Concat           4    3    3               00 r[3]=r[3]+r[4]
  32 String8          0    4    0 sqlite_autoindex_test006_1 00 r[4]='sqlite_autoindex_test006_1'
  33 Concat           4    3    3               00 r[3]=r[3]+r[4]
  34 ResultRow        3    1    0               00 output=r[3]
  35 IfPos            1   43    1               00 if r[1]>0 then r[1]-=1, goto 43
  36 Halt             0    0    0               00 
  37 IsNull          10   43    0               00 if r[10]==NULL goto 43
  38 Next             2   40    0               00 
  39 Goto             0   43    0               00 
  40 IdxGT            2   43   10 1             00 key=r[10]
  41 String8          0    3    0 non-unique entry in index  00 r[3]='non-unique entry in index '
  42 Goto             0   32    0               00 
  43 Next             1   21    0               00 
  44 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
  45 Count            2    3    0               00 r[3]=count()
  46 Eq               8   52    3               90 if r[3]==r[8] goto 52
  47 String8          0    4    0 sqlite_autoindex_test006_1 00 r[4]='sqlite_autoindex_test006_1'
  48 Concat           4    2    3               00 r[3]=r[2]+r[4]
  49 ResultRow        3    1    0               00 output=r[3]
  50 IfPos            1   52    1               00 if r[1]>0 then r[1]-=1, goto 52
  51 Halt             0    0    0               00 
  52 OpenRead         1   10    0 2             00 root=10 iDb=0; field3
  53 Integer          0    7    0               00 r[7]=0
  54 Rewind           1   58    0               00 
  55 AddImm           7    1    0               00 r[7]=r[7]+1
  56 Column           1    1    3               80 r[3]=
  57 Next             1   55    0               00 
  58 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
  59 OpenRead         1    8    0 2             00 root=8 iDb=0; test003
  60 OpenRead         2    9    0 k(2,,)        00 root=9 iDb=0; sqlite_autoindex_test003_1
  61 Integer          0    7    0               00 r[7]=0
  62 Integer          0    8    0               00 r[8]=0
  63 Rewind           1   87    0               00 
  64 AddImm           7    1    0               00 r[7]=r[7]+1
  65 Column           1    1    3               80 r[3]=
  66 Column           1    1   10               00 r[10]=test003.test004
  67 Noop            10    0    0               00 
  68 Rowid            1   11    0               00 r[11]=rowid
  69 AddImm           8    1    0               00 r[8]=r[8]+1
  70 Found            2   80   10 2             00 key=r[10..11]
  71 String8          0    3    0 row           00 r[3]='row '
  72 Concat           7    3    3               00 r[3]=r[3]+r[7]
  73 String8          0    4    0  missing from index  00 r[4]=' missing from index '
  74 Concat           4    3    3               00 r[3]=r[3]+r[4]
  75 String8          0    4    0 sqlite_autoindex_test003_1 00 r[4]='sqlite_autoindex_test003_1'
  76 Concat           4    3    3               00 r[3]=r[3]+r[4]
  77 ResultRow        3    1    0               00 output=r[3]
  78 IfPos            1   86    1               00 if r[1]>0 then r[1]-=1, goto 86
  79 Halt             0    0    0               00 
  80 IsNull          10   86    0               00 if r[10]==NULL goto 86
  81 Next             2   83    0               00 
  82 Goto             0   86    0               00 
  83 IdxGT            2   86   10 1             00 key=r[10]
  84 String8          0    3    0 non-unique entry in index  00 r[3]='non-unique entry in index '
  85 Goto             0   75    0               00 
  86 Next             1   64    0               00 
  87 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
  88 Count            2    3    0               00 r[3]=count()
  89 Eq               8   95    3               90 if r[3]==r[8] goto 95
  90 String8          0    4    0 sqlite_autoindex_test003_1 00 r[4]='sqlite_autoindex_test003_1'
  91 Concat           4    2    3               00 r[3]=r[2]+r[4]
  92 ResultRow        3    1    0               00 output=r[3]
  93 IfPos            1   95    1               00 if r[1]>0 then r[1]-=1, goto 95
  94 Halt             0    0    0               00 
  95 OpenRead         1    7    0 2             00 root=7 iDb=0; last_field
  96 Integer          0    7    0               00 r[7]=0
  97 Rewind           1  101    0               00 
  98 AddImm           7    1    0               00 r[7]=r[7]+1
  99 Column           1    1    3               80 r[3]=
 100 Next             1   98    0               00 
 101 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
 102 OpenRead         1    6    0 1             00 root=6 iDb=0; preceding
 103 Integer          0    7    0               00 r[7]=0
 104 Rewind           1  116    0               00 
 105 AddImm           7    1    0               00 r[7]=r[7]+1
 106 Column           1    0    3               80 r[3]=
 107 Column           1    0   12               00 r[12]=preceding.t1
 108 Column           1    0   13               00 r[13]=preceding.t1
 109 Lt              13  115   12 (BINARY)      52 if r[12]<r[13] goto 115
 110 Gt              14  115   12 (BINARY)      52 if r[12]>r[14] goto 115
 111 String8          0    3    0 CHECK constraint failed in preceding 00 r[3]='CHECK constraint failed in preceding'
 112 ResultRow        3    1    0               00 output=r[3]
 113 IfPos            1  115    1               00 if r[1]>0 then r[1]-=1, goto 115
 114 Halt             0    0    0               00 
 115 Next             1  105    0               00 
 116 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
 117 OpenRead         1    4    0 2             00 root=4 iDb=0; v0
 118 OpenRead         2    5    0 k(2,,)        00 root=5 iDb=0; sqlite_autoindex_v0_1
 119 Integer          0    7    0               00 r[7]=0
 120 Integer          0    8    0               00 r[8]=0
 121 Rewind           1  145    0               00 
 122 AddImm           7    1    0               00 r[7]=r[7]+1
 123 Column           1    1    3               80 r[3]=
 124 Column           1    1   10               00 r[10]=v0.following
 125 Noop            10    0    0               00 
 126 Rowid            1   11    0               00 r[11]=rowid
 127 AddImm           8    1    0               00 r[8]=r[8]+1
 128 Found            2  138   10 2             00 key=r[10..11]
 129 String8          0    3    0 row           00 r[3]='row '
 130 Concat           7    3    3               00 r[3]=r[3]+r[7]
 131 String8          0    4    0  missing from index  00 r[4]=' missing from index '
 132 Concat           4    3    3               00 r[3]=r[3]+r[4]
 133 String8          0    4    0 sqlite_autoindex_v0_1 00 r[4]='sqlite_autoindex_v0_1'
 134 Concat           4    3    3               00 r[3]=r[3]+r[4]
 135 ResultRow        3    1    0               00 output=r[3]
 136 IfPos            1  144    1               00 if r[1]>0 then r[1]-=1, goto 144
 137 Halt             0    0    0               00 
 138 IsNull          10  144    0               00 if r[10]==NULL goto 144
 139 Next             2  141    0               00 
 140 Goto             0  144    0               00 
 141 IdxGT            2  144   10 1             00 key=r[10]
 142 String8          0    3    0 non-unique entry in index  00 r[3]='non-unique entry in index '
 143 Goto             0  133    0               00 
 144 Next             1  122    0               00 
 145 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
 146 Count            2    3    0               00 r[3]=count()
 147 Eq               8  153    3               90 if r[3]==r[8] goto 153
 148 String8          0    4    0 sqlite_autoindex_v0_1 00 r[4]='sqlite_autoindex_v0_1'
 149 Concat           4    2    3               00 r[3]=r[2]+r[4]
 150 ResultRow        3    1    0               00 output=r[3]
 151 IfPos            1  153    1               00 if r[1]>0 then r[1]-=1, goto 153
 152 Halt             0    0    0               00 
 153 OpenRead         1    3    0 1             00 root=3 iDb=0; t0
 154 Integer          0    7    0               00 r[7]=0
 155 Rewind           1  167    0               00 
 156 AddImm           7    1    0               00 r[7]=r[7]+1
 157 Column           1    0    3               80 r[3]=
 158 Column           1    0   12               00 r[12]=t0.c0
 159 Column           1    0   13               00 r[13]=t0.c0
 160 Lt              13  162   12 (BINARY)      42 if r[12]<r[13] goto 162
 161 Le              14  166   12 (BINARY)      52 if r[12]<=r[14] goto 166
 162 String8          0    3    0 CHECK constraint failed in t0 00 r[3]='CHECK constraint failed in t0'
 163 ResultRow        3    1    0               00 output=r[3]
 164 IfPos            1  166    1               00 if r[1]>0 then r[1]-=1, goto 166
 165 Halt             0    0    0               00 
 166 Next             1  156    0               00 
 167 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
 168 OpenRead         1    1    0 5             00 root=1 iDb=0; sqlite_master
 169 Integer          0    7    0               00 r[7]=0
 170 Rewind           1  174    0               00 
 171 AddImm           7    1    0               00 r[7]=r[7]+1
 172 Column           1    4    3               80 r[3]=
 173 Next             1  171    0               00 
 174 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
 175 IntegrityCk      2    2    1 [2,1]         01 
 176 IsNull           2  182    0               00 if r[2]==NULL goto 182
 177 String8          0    3    0 *** in database temp ***
 00 r[3]='*** in database temp ***
'
 178 Concat           2    3    3               00 r[3]=r[3]+r[2]
 179 ResultRow        3    1    0               00 output=r[3]
 180 IfPos            1  182    1               00 if r[1]>0 then r[1]-=1, goto 182
 181 Halt             0    0    0               00 
 182 OpenRead         1    2    1 1             00 root=2 iDb=1; x
 183 Integer          0    7    0               00 r[7]=0
 184 Rewind           1  188    0               00 
 185 AddImm           7    1    0               00 r[7]=r[7]+1
 186 Column           1    0    3               80 r[3]=
 187 Next             1  185    0               00 
 188 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
 189 OpenRead         1    1    1 5             00 root=1 iDb=1; sqlite_temp_master
 190 Integer          0    7    0               00 r[7]=0
 191 Rewind           1  195    0               00 
 192 AddImm           7    1    0               00 r[7]=r[7]+1
 193 Column           1    4    3               80 r[3]=
 194 Next             1  192    0               00 
 195 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
 196 AddImm           1  -99    0               00 r[1]=r[1]+-99
 197 IfNotZero        1  200    0               00 if r[1]!=0 then r[1]--, goto 200
 198 String8          0    3    0 ok            00 r[3]='ok'
 199 ResultRow        3    1    0               00 output=r[3]
 200 Halt             0    0    0               00 
 201 String8          0    3    0 database disk image is malformed 00 r[3]='database disk image is malformed'
 202 Goto             0  199    0               00 
 203 Halt             0    0    0               00 
 204 Transaction      0    0    8 0             01 usesStmtJournal=0
 205 Transaction      1    0    1 0             01 usesStmtJournal=0
 206 Integer       999999   14    0               00 r[14]=999999
 207 Goto             0    1    0               00 
SQL: [;PRAGMA incremental_vacuum;]
VDBE Program Listing:
   0 Init             0    7    0               00 Start at 7
   1 Integer       2147483647    1    0               00 r[1]=2147483647
   2 IncrVacuum       0    6    0               00 
   3 ResultRow        1    0    0               00 output=r[1]
   4 AddImm           1   -1    0               00 r[1]=r[1]+-1
   5 IfPos            1    2    0               00 if r[1]>0 then r[1]-=0, goto 2
   6 Halt             0    0    0               00 
   7 Transaction      0    1    8 0             01 usesStmtJournal=0
   8 Goto             0    1    0               00 
SQL: [;CREATE TABLE test009(field8, test010);]
VDBE Program Listing:
   0 Init             0   28    0               00 Start at 28
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
  16 Rowid            1    5    0               00 r[5]=rowid
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
  18 String8          0    6    0 table         00 r[6]='table'
  19 String8          0    7    0 test009       00 r[7]='test009'
  20 String8          0    8    0 test009       00 r[8]='test009'
  21 Copy             2    9    0               00 r[9]=r[2]
  22 String8          0   10    0 CREATE TABLE test009(field8, test010) 00 r[10]='CREATE TABLE test009(field8, test010)'
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
  25 SetCookie        0    1    9               00 
  26 ParseSchema      0    0    0 tbl_name='test009' AND type!='trigger' 00 
  27 Halt             0    0    0               00 
  28 Transaction      0    1    8 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    9 0             00 usesStmtJournal=0
  16 String8          0    2    0 test009       00 r[2]='test009'
  17 String8          0    3    0 trigger       00 r[3]='trigger'
  18 Goto             0    1    0               00 
SQL: [;UPDATE OR REPLACE test006 SET test007 = 1;]
VDBE Program Listing:
   0 Init             0   35    0               00 Start at 35
   1 Null             0    4    5               00 r[4..5]=NULL
   2 OpenRead         0   11    0 0             00 root=11 iDb=0; test006
   3 Explain          3    0    0 SCAN TABLE test006 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    5    0               00 r[5]=rowid
   6 RowSetAdd        4    5    0               00 rowset(4)=r[5]
   7 Next             0    5    0               01 
   8 OpenWrite        0   11    0 2             00 root=11 iDb=0; test006
   9 OpenWrite        1   12    0 k(2,,)        00 root=12 iDb=0; sqlite_autoindex_test006_1
  10 RowSetRead       4   34    5               00 r[5]=rowset(4)
  11 NotExists        0   10    5               00 intkey=r[5]
  12 Column           0    0    6               00 r[6]=test006.field5
  13 Integer          1    7    0               00 r[7]=1
  14 Affinity         6    2    0 AE            00 affinity(r[6..7])
  15 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_test006_1
  16 SCopy            7    2    0               00 r[2]=r[7]; test007
  17 IntCopy          5    3    0               00 r[3]=r[5]; rowid
  18 MakeRecord       2    2    1               00 r[1]=mkrec(r[2..3]); for sqlite_autoindex_test006_1
  19 NoConflict       1   25    2 1             00 key=r[2]
  20 IdxRowid         1    8    0               00 r[8]=rowid
  21 Eq               8   25    5               90 if r[5]==r[8] goto 25
  22 NotExists        0   25    8 1             00 intkey=r[8]
  23 Delete           0    0    0 test006       00 
  24 Delete           1    0    0               00 
  25 NotExists        0   30    5               00 intkey=r[5]
  26 Column           0    1    9               00 r[9]=test006.test007
  27 Noop             9    0    0               00 
  28 Rowid            0   10    0               00 r[10]=rowid
  29 IdxDelete        1    9    2               00 key=r[9..10]
  30 IdxInsert        1    1    2 2             00 key=r[1]
  31 MakeRecord       6    2    8               00 r[8]=mkrec(r[6..7])
  32 Insert           0    8    5 test006       05 intkey=r[5] data=r[8]
  33 Goto             0   10    0               00 
  34 Halt             0    0    0               00 
  35 Transaction      0    1    9 0             01 usesStmtJournal=0
  36 Goto             0    1    0               00 
SQL: [;SELECT DISTINCT * FROM last_field WHERE (last_field.field1 IS NULL);]
VDBE Program Listing:
   0 Init             0   16    0               00 Start at 16
   1 OpenEphemeral    1    0    0 k(2,B,B)      08 nColumn=0
   2 OpenRead         0    7    0 2             00 root=7 iDb=0; last_field
   3 Explain          3    0    0 SCAN TABLE last_field 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=last_field.field1
   6 NotNull          1   13    0               00 if r[1]!=NULL goto 13
   7 Column           0    0    2               00 r[2]=last_field.test002
   8 Column           0    1    3               00 r[3]=last_field.field1
   9 Found            1   13    2 2             00 key=r[2..3]
  10 MakeRecord       2    2    1               00 r[1]=mkrec(r[2..3])
  11 IdxInsert        1    1    2 2             10 key=r[1]
  12 ResultRow        2    2    0               00 output=r[2..3]
  13 Next             0    5    0               01 
  14 Explain         14    0    0 USE TEMP B-TREE FOR DISTINCT 00 
  15 Halt             0    0    0               00 
  16 Transaction      0    0    9 0             01 usesStmtJournal=0
  17 Goto             0    1    0               00 
SQL: [;CREATE TABLE field9 (test011, field10 REAL PRIMARY KEY);]
VDBE Program Listing:
   0 Init             0   39    0               00 Start at 39
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      0    4    2               00 r[4]=root iDb=0 flags=2
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
  15 String8          0    6    0 index         00 r[6]='index'
  16 String8          0    7    0 sqlite_autoindex_field9_1 00 r[7]='sqlite_autoindex_field9_1'
  17 String8          0    8    0 field9        00 r[8]='field9'
  18 Copy             4    9    0               00 r[9]=r[4]
  19 Null             0   10    0               00 r[10]=NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
  22 Close            0    0    0               00 
  23 Null             0   12   13               00 r[12..13]=NULL
  24 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  25 Explain         25    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  26 SeekRowid        2   28    1               00 intkey=r[1]
  27 Rowid            2   13    0               00 r[13]=rowid
  28 IsNull          13   36    0               00 if r[13]==NULL goto 36
  29 String8          0   14    0 table         00 r[14]='table'
  30 String8          0   15    0 field9        00 r[15]='field9'
  31 String8          0   16    0 field9        00 r[16]='field9'
  32 Copy             2   17    0               00 r[17]=r[2]
  33 String8          0   18    0 CREATE TABLE field9 (test011, field10 REAL PRIMARY KEY) 00 r[18]='CREATE TABLE field9 (test011, field10 REAL PRIMARY KEY)'
  34 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
  35 Insert           2   19   13               00 intkey=r[13] data=r[19]
  36 SetCookie        0    1   10               00 
  37 ParseSchema      0    0    0 tbl_name='field9' AND type!='trigger' 00 
  38 Halt             0    0    0               00 
  39 Transaction      0    1    9 0             01 usesStmtJournal=0
  40 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0   10 0             00 usesStmtJournal=0
  16 String8          0    2    0 field9        00 r[2]='field9'
  17 String8          0    3    0 trigger       00 r[3]='trigger'
  18 Goto             0    1    0               00 
SQL: [;CREATE TABLE test012 (field11, test013 REAL PRIMARY KEY);]
VDBE Program Listing:
   0 Init             0   39    0               00 Start at 39
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      0    4    2               00 r[4]=root iDb=0 flags=2
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
  15 String8          0    6    0 index         00 r[6]='index'
  16 String8          0    7    0 sqlite_autoindex_test012_1 00 r[7]='sqlite_autoindex_test012_1'
  17 String8          0    8    0 test012       00 r[8]='test012'
  18 Copy             4    9    0               00 r[9]=r[4]
  19 Null             0   10    0               00 r[10]=NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
  22 Close            0    0    0               00 
  23 Null             0   12   13               00 r[12..13]=NULL
  24 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  25 Explain         25    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  26 SeekRowid        2   28    1               00 intkey=r[1]
  27 Rowid            2   13    0               00 r[13]=rowid
  28 IsNull          13   36    0               00 if r[13]==NULL goto 36
  29 String8          0   14    0 table         00 r[14]='table'
  30 String8          0   15    0 test012       00 r[15]='test012'
  31 String8          0   16    0 test012       00 r[16]='test012'
  32 Copy             2   17    0               00 r[17]=r[2]
  33 String8          0   18    0 CREATE TABLE test012 (field11, test013 REAL PRIMARY KEY) 00 r[18]='CREATE TABLE test012 (field11, test013 REAL PRIMARY KEY)'
  34 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
  35 Insert           2   19   13               00 intkey=r[13] data=r[19]
  36 SetCookie        0    1   11               00 
  37 ParseSchema      0    0    0 tbl_name='test012' AND type!='trigger' 00 
  38 Halt             0    0    0               00 
  39 Transaction      0    1   10 0             01 usesStmtJournal=0
  40 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0   11 0             00 usesStmtJournal=0
  16 String8          0    2    0 test012       00 r[2]='test012'
  17 String8          0    3    0 trigger       00 r[3]='trigger'
  18 Goto             0    1    0               00 
SQL: [;CREATE TABLE field12 (test014, field13 REAL PRIMARY KEY);]
VDBE Program Listing:
   0 Init             0   39    0               00 Start at 39
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      0    4    2               00 r[4]=root iDb=0 flags=2
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
  15 String8          0    6    0 index         00 r[6]='index'
  16 String8          0    7    0 sqlite_autoindex_field12_1 00 r[7]='sqlite_autoindex_field12_1'
  17 String8          0    8    0 field12       00 r[8]='field12'
  18 Copy             4    9    0               00 r[9]=r[4]
  19 Null             0   10    0               00 r[10]=NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
  22 Close            0    0    0               00 
  23 Null             0   12   13               00 r[12..13]=NULL
  24 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  25 Explain         25    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  26 SeekRowid        2   28    1               00 intkey=r[1]
  27 Rowid            2   13    0               00 r[13]=rowid
  28 IsNull          13   36    0               00 if r[13]==NULL goto 36
  29 String8          0   14    0 table         00 r[14]='table'
  30 String8          0   15    0 field12       00 r[15]='field12'
  31 String8          0   16    0 field12       00 r[16]='field12'
  32 Copy             2   17    0               00 r[17]=r[2]
  33 String8          0   18    0 CREATE TABLE field12 (test014, field13 REAL PRIMARY KEY) 00 r[18]='CREATE TABLE field12 (test014, field13 REAL PRIMARY KEY)'
  34 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
  35 Insert           2   19   13               00 intkey=r[13] data=r[19]
  36 SetCookie        0    1   12               00 
  37 ParseSchema      0    0    0 tbl_name='field12' AND type!='trigger' 00 
  38 Halt             0    0    0               00 
  39 Transaction      0    1   11 0             01 usesStmtJournal=0
  40 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0   12 0             00 usesStmtJournal=0
  16 String8          0    2    0 field12       00 r[2]='field12'
  17 String8          0    3    0 trigger       00 r[3]='trigger'
  18 Goto             0    1    0               00 
SQL: [;CREATE TABLE test015 (field14, test016 REAL PRIMARY KEY);]
VDBE Program Listing:
   0 Init             0   39    0               00 Start at 39
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      0    4    2               00 r[4]=root iDb=0 flags=2
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
  15 String8          0    6    0 index         00 r[6]='index'
  16 String8          0    7    0 sqlite_autoindex_test015_1 00 r[7]='sqlite_autoindex_test015_1'
  17 String8          0    8    0 test015       00 r[8]='test015'
  18 Copy             4    9    0               00 r[9]=r[4]
  19 Null             0   10    0               00 r[10]=NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
  22 Close            0    0    0               00 
  23 Null             0   12   13               00 r[12..13]=NULL
  24 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  25 Explain         25    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  26 SeekRowid        2   28    1               00 intkey=r[1]
  27 Rowid            2   13    0               00 r[13]=rowid
  28 IsNull          13   36    0               00 if r[13]==NULL goto 36
  29 String8          0   14    0 table         00 r[14]='table'
  30 String8          0   15    0 test015       00 r[15]='test015'
  31 String8          0   16    0 test015       00 r[16]='test015'
  32 Copy             2   17    0               00 r[17]=r[2]
  33 String8          0   18    0 CREATE TABLE test015 (field14, test016 REAL PRIMARY KEY) 00 r[18]='CREATE TABLE test015 (field14, test016 REAL PRIMARY KEY)'
  34 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
  35 Insert           2   19   13               00 intkey=r[13] data=r[19]
  36 SetCookie        0    1   13               00 
  37 ParseSchema      0    0    0 tbl_name='test015' AND type!='trigger' 00 
  38 Halt             0    0    0               00 
  39 Transaction      0    1   12 0             01 usesStmtJournal=0
  40 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0   13 0             00 usesStmtJournal=0
  16 String8          0    2    0 test015       00 r[2]='test015'
  17 String8          0    3    0 trigger       00 r[3]='trigger'
  18 Goto             0    1    0               00 
SQL: [;INSERT INTO preceding(t1, t1) VALUES (0, $test009), (0, 0);]
VDBE Program Listing:
   0 Init             0   22    0               00 Start at 22
   1 InitCoroutine    3   10    2               00 
   2 Explain          2    0    0 SCAN 2 CONSTANT ROWS 00 
   3 Integer          0    4    0               00 r[4]=0
   4 Variable         1    5    0 $test009      00 r[5]=parameter(1,$test009)
   5 Yield            3    0    0               00 
   6 Integer          0    4    0               00 r[4]=0
   7 Integer          0    5    0               00 r[5]=0
   8 Yield            3    0    0               00 
   9 EndCoroutine     3    0    0               00 
  10 OpenWrite        0    6    0 1             00 root=6 iDb=0; preceding
  11 Yield            3   21    0               00 
  12 NewRowid         0    1    0               00 r[1]=rowid
  13 SCopy            4    2    0               00 r[2]=r[4]
  14 Abortable        0    0    0               00 
  15 Lt               2   18    2 (BINARY)      52 if r[2]<r[2] goto 18
  16 Gt               9   18    2 (BINARY)      52 if r[2]>r[9] goto 18
  17 Halt           275    2    0 preceding     03 
  18 MakeRecord       2    1    8 B             00 r[8]=mkrec(r[2])
  19 Insert           0    8    1 preceding     39 intkey=r[1] data=r[8]
  20 Goto             0   11    0               00 
  21 Halt             0    0    0               00 
  22 Transaction      0    1   13 0             01 usesStmtJournal=1
  23 Integer       999999    9    0               00 r[9]=999999
  24 Goto             0    1    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f607b255859 in __GI_abort () at abort.c:79
#2  0x00007f607b255729 in __assert_fail_base (fmt=0x7f607b3eb588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21d368 "pIn1!=pIn3", file=0x22873d "sqlite3.c", line=85580, function=<optimized out>) at assert.c:92
#3  0x00007f607b266fd6 in __GI___assert_fail (assertion=0x21d368 "pIn1!=pIn3", file=0x22873d "sqlite3.c", line=85580, function=0x216524 "int sqlite3VdbeExec(Vdbe *)") at assert.c:101
#4  0x00000000003c5c6a in sqlite3VdbeExec (p=0x17d7d30) at sqlite3.c:85580
#5  0x0000000000411104 in sqlite3Step (p=0x17d7d30) at sqlite3.c:81930
#6  0x000000000029128d in sqlite3_step (pStmt=0x17d7d30) at sqlite3.c:81995
#7  0x00000000002570b9 in main (argc=1, argv=0x7ffc2149b628) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 60053] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
