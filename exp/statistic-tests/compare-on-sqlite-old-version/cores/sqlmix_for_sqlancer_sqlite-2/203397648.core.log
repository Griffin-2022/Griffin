GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000551,sig:06,src:020689+025906,time:22643738,execs:4318020,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT coalesce(strftime('%H:%M:%f',1237962480.009,'unixepoch'),'NULL')
;]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 %H:%M:%f      00 r[3]='%H:%M:%f'
REG[3] =   t8[%H:%M:%f](8)
   6 Real             0    4    0 1237962480.009 00 r[4]=1237962480.009
REG[4] =  r:1.23796e+09
   7 String8          0    5    0 unixepoch     00 r[5]='unixepoch'
REG[5] =   t9[unixepoch](8)
   8 Function0        7    3    2 strftime(-1)  03 r[2]=func(r[3..5])
REG[3] =   t8[%H:%M:%f](8)
REG[4] =  r:1.23796e+09
REG[5] =   t9[unixepoch](8)
REG[2] =   s12[06:28:00.009](8)
   9 NotNull          2   11    0               00 if r[2]!=NULL goto 11
REG[2] =   s12[06:28:00.009](8)
  11 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s12[06:28:00.009](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s12[06:28:00.009](8)
   4 Halt             0    0    0               00 
SQL: [PRAGMA journal_mode = memory;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 JournalMode      0    1    4               00 
REG[1] =   t6[memory](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t6[memory](8)
   3 Halt             0    0    0               00 
SQL: [SELECT coalesce(strftime('%H:%M:%f',1237962480.022,'unixepoch'),'NULL')
;]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 %H:%M:%f      00 r[3]='%H:%M:%f'
REG[3] =   t8[%H:%M:%f](8)
   6 Real             0    4    0 1237962480.022 00 r[4]=1237962480.022
REG[4] =  r:1.23796e+09
   7 String8          0    5    0 unixepoch     00 r[5]='unixepoch'
REG[5] =   t9[unixepoch](8)
   8 Function0        7    3    2 strftime(-1)  03 r[2]=func(r[3..5])
REG[3] =   t8[%H:%M:%f](8)
REG[4] =  r:1.23796e+09
REG[5] =   t9[unixepoch](8)
REG[2] =   s12[06:28:00.022](8)
   9 NotNull          2   11    0               00 if r[2]!=NULL goto 11
REG[2] =   s12[06:28:00.022](8)
  11 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s12[06:28:00.022](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s12[06:28:00.022](8)
   4 Halt             0    0    0               00 
SQL: [SELECT coalesce(strftime('%H:%M:%f',1237962480.099,'unixepoch'),'NULL')
;]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 %H:%M:%f      00 r[3]='%H:%M:%f'
REG[3] =   t8[%H:%M:%f](8)
   6 Real             0    4    0 1237962480.099 00 r[4]=1237962480.099
REG[4] =  r:1.23796e+09
   7 String8          0    5    0 unixepoch     00 r[5]='unixepoch'
REG[5] =   t9[unixepoch](8)
   8 Function0        7    3    2 strftime(-1)  03 r[2]=func(r[3..5])
REG[3] =   t8[%H:%M:%f](8)
REG[4] =  r:1.23796e+09
REG[5] =   t9[unixepoch](8)
REG[2] =   s12[06:28:00.099](8)
   9 NotNull          2   11    0               00 if r[2]!=NULL goto 11
REG[2] =   s12[06:28:00.099](8)
  11 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s12[06:28:00.099](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s12[06:28:00.099](8)
   4 Halt             0    0    0               00 
SQL: [;SELECT instr('abcdefg','efg');]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 abcdefg       00 r[3]='abcdefg'
REG[3] =   t7[abcdefg](8)
   6 String8          0    4    0 efg           00 r[4]='efg'
REG[4] =   t3[efg](8)
   7 Function0        3    3    2 instr(2)      02 r[2]=func(r[3..4])
REG[3] =   t7[abcdefg](8)
REG[4] =   t3[efg](8)
REG[2] =  i:5
   8 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =  i:5
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:5
   4 Halt             0    0    0               00 
SQL: [;BEGIN;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
SQL: [;SELECT instr('abcdefg','fg');]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 abcdefg       00 r[3]='abcdefg'
REG[3] =   t7[abcdefg](8)
   6 String8          0    4    0 fg            00 r[4]='fg'
REG[4] =   t2[fg](8)
   7 Function0        3    3    2 instr(2)      02 r[2]=func(r[3..4])
REG[3] =   t7[abcdefg](8)
REG[4] =   t2[fg](8)
REG[2] =  i:6
   8 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =  i:6
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:6
   4 Halt             0    0    0               00 
SQL: [SELECT coalesce(strftime('%H:%M:%f',1237962480.393,'unixepoch'),'NULL')
;]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 %H:%M:%f      00 r[3]='%H:%M:%f'
REG[3] =   t8[%H:%M:%f](8)
   6 Real             0    4    0 1237962480.393 00 r[4]=1237962480.393
REG[4] =  r:1.23796e+09
   7 String8          0    5    0 unixepoch     00 r[5]='unixepoch'
REG[5] =   t9[unixepoch](8)
   8 Function0        7    3    2 strftime(-1)  03 r[2]=func(r[3..5])
REG[3] =   t8[%H:%M:%f](8)
REG[4] =  r:1.23796e+09
REG[5] =   t9[unixepoch](8)
REG[2] =   s12[06:28:00.393](8)
   9 NotNull          2   11    0               00 if r[2]!=NULL goto 11
REG[2] =   s12[06:28:00.393](8)
  11 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s12[06:28:00.393](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s12[06:28:00.393](8)
   4 Halt             0    0    0               00 
SQL: [SELECT coalesce(strftime('%H:%M:%f',1237962480.394,'unixepoch'),'NULL')
;]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 %H:%M:%f      00 r[3]='%H:%M:%f'
REG[3] =   t8[%H:%M:%f](8)
   6 Real             0    4    0 1237962480.394 00 r[4]=1237962480.394
REG[4] =  r:1.23796e+09
   7 String8          0    5    0 unixepoch     00 r[5]='unixepoch'
REG[5] =   t9[unixepoch](8)
   8 Function0        7    3    2 strftime(-1)  03 r[2]=func(r[3..5])
REG[3] =   t8[%H:%M:%f](8)
REG[4] =  r:1.23796e+09
REG[5] =   t9[unixepoch](8)
REG[2] =   s12[06:28:00.394](8)
   9 NotNull          2   11    0               00 if r[2]!=NULL goto 11
REG[2] =   s12[06:28:00.394](8)
  11 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s12[06:28:00.394](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s12[06:28:00.394](8)
   4 Halt             0    0    0               00 
SQL: [;SELECT instr('abcdefg','fgh');]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 abcdefg       00 r[3]='abcdefg'
REG[3] =   t7[abcdefg](8)
   6 String8          0    4    0 fgh           00 r[4]='fgh'
REG[4] =   t3[fgh](8)
   7 Function0        3    3    2 instr(2)      02 r[2]=func(r[3..4])
REG[3] =   t7[abcdefg](8)
REG[4] =   t3[fgh](8)
REG[2] =  i:0
   8 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =  i:0
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   4 Halt             0    0    0               00 
SQL: [SELECT coalesce(strftime('%H:%M:%f',1237962480.427,'unixepoch'),'NULL')
;]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 %H:%M:%f      00 r[3]='%H:%M:%f'
REG[3] =   t8[%H:%M:%f](8)
   6 Real             0    4    0 1237962480.427 00 r[4]=1237962480.427
REG[4] =  r:1.23796e+09
   7 String8          0    5    0 unixepoch     00 r[5]='unixepoch'
REG[5] =   t9[unixepoch](8)
   8 Function0        7    3    2 strftime(-1)  03 r[2]=func(r[3..5])
REG[3] =   t8[%H:%M:%f](8)
REG[4] =  r:1.23796e+09
REG[5] =   t9[unixepoch](8)
REG[2] =   s12[06:28:00.427](8)
   9 NotNull          2   11    0               00 if r[2]!=NULL goto 11
REG[2] =   s12[06:28:00.427](8)
  11 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s12[06:28:00.427](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s12[06:28:00.427](8)
   4 Halt             0    0    0               00 
SQL: [;COMMIT;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    0    0               00 
SQL: [;SELECT instr(12345,34);]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 Integer       12345    3    0               00 r[3]=12345
REG[3] =  i:12345
   6 Integer         34    4    0               00 r[4]=34
REG[4] =  i:34
   7 Function0        3    3    2 instr(2)      02 r[2]=func(r[3..4])
REG[3] =  i:12345
REG[4] =  i:34
REG[2] =  i:3
   8 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =  i:3
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:3
   4 Halt             0    0    0               00 
SQL: [;SELECT instr('äbcdefg','efg');]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 äbcdefg      00 r[3]='äbcdefg'
REG[3] =   t8[..bcdefg](8)
   6 String8          0    4    0 efg           00 r[4]='efg'
REG[4] =   t3[efg](8)
   7 Function0        3    3    2 instr(2)      02 r[2]=func(r[3..4])
REG[3] =   t8[..bcdefg](8)
REG[4] =   t3[efg](8)
REG[2] =  i:5
   8 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =  i:5
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:5
   4 Halt             0    0    0               00 
SQL: [;SELECT instr('€xyzzy','xyz');]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 €xyzzy      00 r[3]='€xyzzy'
REG[3] =   t8[...xyzzy](8)
   6 String8          0    4    0 xyz           00 r[4]='xyz'
REG[4] =   t3[xyz](8)
   7 Function0        3    3    2 instr(2)      02 r[2]=func(r[3..4])
REG[3] =   t8[...xyzzy](8)
REG[4] =   t3[xyz](8)
REG[2] =  i:2
   8 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =  i:2
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:2
   4 Halt             0    0    0               00 
SQL: [;PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0  102   99               00 Start at 102
 102 Transaction      0    0    1 0             01 usesStmtJournal=0
 103 Transaction      1    0    0 0             01 usesStmtJournal=0
 104 Goto             0    1    0               00 
   1 Integer         99    1    0               00 r[1]=99
REG[1] =  i:99
   2 IntegrityCk      2    4    1 [2,4,3,1]     00 
   3 IsNull           2    9    0               00 if r[2]==NULL goto 9
REG[2] =  NULL
   9 OpenRead         1    2    0 1             00 root=2 iDb=0; t0
  10 OpenRead         2    4    0 k(3,,,)       00 root=4 iDb=0; sqlite_autoindex_t0_2
  11 OpenRead         3    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t0_1
  12 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  13 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  14 Integer          0    9    0               00 r[9]=0
REG[9] =  i:0
  15 Rewind           1   58    0               00 
  58 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  59 Count            2    3    0               00 r[3]=count()
REG[3] =  i:0
  60 Eq               8   66    3               90 if r[3]==r[8] goto 66
REG[8] =  i:0
REG[3] =  i:0
  66 Count            3    3    0               00 r[3]=count()
REG[3] =  i:0
  67 Eq               9   73    3               90 if r[3]==r[9] goto 73
REG[9] =  i:0
REG[3] =  i:0
  73 OpenRead         1    1    0 5             00 root=1 iDb=0; sqlite_master
  74 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  75 Rewind           1   79    0               00 
  76 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  77 Column           1    4    3               80 r[3]=
REG[3] =   s97[CREATE TABLE t0](8)
  78 Next             1   76    0               00 
  76 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
  77 Column           1    4    3               80 r[3]=
REG[3] =  NULL
  78 Next             1   76    0               00 
  76 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:2
  77 Column           1    4    3               80 r[3]=
REG[3] =  NULL
  78 Next             1   76    0               00 
  79 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  80 IntegrityCk      2    1    1 [1]           01 
  81 IsNull           2   87    0               00 if r[2]==NULL goto 87
REG[2] =  NULL
  87 OpenRead         1    1    1 5             00 root=1 iDb=1; sqlite_temp_master
  88 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  89 Rewind           1   93    0               00 
  93 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  94 AddImm           1  -99    0               00 r[1]=r[1]+-99
REG[1] =  i:99
  95 IfNotZero        1   98    0               00 if r[1]!=0 then r[1]--, goto 98
REG[1] =  i:0
  96 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
  97 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
  98 Halt             0    0    0               00 
SQL: [SELECT coalesce(strftime('%s','now',null),'NULL')
;]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 %s            00 r[3]='%s'
REG[3] =   t2[%s](8)
   6 String8          0    4    0 now           00 r[4]='now'
REG[4] =   t3[now](8)
   7 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
   8 Function0        7    3    2 strftime(-1)  03 r[2]=func(r[3..5])
REG[3] =   t2[%s](8)
REG[4] =   t3[now](8)
REG[5] =  NULL
REG[2] =  NULL
   9 NotNull          2   11    0               00 if r[2]!=NULL goto 11
REG[2] =  NULL
  10 String8          0    2    0 NULL          00 r[2]='NULL'
REG[2] =   t4[NULL](8)
  11 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   t4[NULL](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t4[NULL](8)
   4 Halt             0    0    0               00 
SQL: [;SELECT instr('abc€xyzzy','xyz');]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 abc€xyzzy   00 r[3]='abc€xyzzy'
REG[3] =   t11[abc...xyzzy](8)
   6 String8          0    4    0 xyz           00 r[4]='xyz'
REG[4] =   t3[xyz](8)
   7 Function0        3    3    2 instr(2)      02 r[2]=func(r[3..4])
REG[3] =   t11[abc...xyzzy](8)
REG[4] =   t3[xyz](8)
REG[2] =  i:5
   8 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =  i:5
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:5
   4 Halt             0    0    0               00 
SQL: [;SELECT instr('abc€xyzzy','€xyz');]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 abc€xyzzy   00 r[3]='abc€xyzzy'
REG[3] =   t11[abc...xyzzy](8)
   6 String8          0    4    0 €xyz        00 r[4]='€xyz'
REG[4] =   t6[...xyz](8)
   7 Function0        3    3    2 instr(2)      02 r[2]=func(r[3..4])
REG[3] =   t11[abc...xyzzy](8)
REG[4] =   t6[...xyz](8)
REG[2] =  i:4
   8 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =  i:4
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:4
   4 Halt             0    0    0               00 
SQL: [;SELECT instr('abc€xyzzy','c€xyz');]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 abc€xyzzy   00 r[3]='abc€xyzzy'
REG[3] =   t11[abc...xyzzy](8)
   6 String8          0    4    0 c€xyz       00 r[4]='c€xyz'
REG[4] =   t7[c...xyz](8)
   7 Function0        3    3    2 instr(2)      02 r[2]=func(r[3..4])
REG[3] =   t11[abc...xyzzy](8)
REG[4] =   t7[c...xyz](8)
REG[2] =  i:3
   8 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =  i:3
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:3
   4 Halt             0    0    0               00 
SQL: [;PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0  102   99               00 Start at 102
 102 Transaction      0    0    1 0             01 usesStmtJournal=0
 103 Transaction      1    0    0 0             01 usesStmtJournal=0
 104 Goto             0    1    0               00 
   1 Integer         99    1    0               00 r[1]=99
REG[1] =  i:99
   2 IntegrityCk      2    4    1 [2,4,3,1]     00 
   3 IsNull           2    9    0               00 if r[2]==NULL goto 9
REG[2] =  NULL
   9 OpenRead         1    2    0 1             00 root=2 iDb=0; t0
  10 OpenRead         2    4    0 k(3,,,)       00 root=4 iDb=0; sqlite_autoindex_t0_2
  11 OpenRead         3    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t0_1
  12 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  13 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  14 Integer          0    9    0               00 r[9]=0
REG[9] =  i:0
  15 Rewind           1   58    0               00 
  58 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  59 Count            2    3    0               00 r[3]=count()
REG[3] =  i:0
  60 Eq               8   66    3               90 if r[3]==r[8] goto 66
REG[8] =  i:0
REG[3] =  i:0
  66 Count            3    3    0               00 r[3]=count()
REG[3] =  i:0
  67 Eq               9   73    3               90 if r[3]==r[9] goto 73
REG[9] =  i:0
REG[3] =  i:0
  73 OpenRead         1    1    0 5             00 root=1 iDb=0; sqlite_master
  74 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  75 Rewind           1   79    0               00 
  76 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  77 Column           1    4    3               80 r[3]=
REG[3] =   s97[CREATE TABLE t0](8)
  78 Next             1   76    0               00 
  76 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
  77 Column           1    4    3               80 r[3]=
REG[3] =  NULL
  78 Next             1   76    0               00 
  76 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:2
  77 Column           1    4    3               80 r[3]=
REG[3] =  NULL
  78 Next             1   76    0               00 
  79 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  80 IntegrityCk      2    1    1 [1]           01 
  81 IsNull           2   87    0               00 if r[2]==NULL goto 87
REG[2] =  NULL
  87 OpenRead         1    1    1 5             00 root=1 iDb=1; sqlite_temp_master
  88 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  89 Rewind           1   93    0               00 
  93 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  94 AddImm           1  -99    0               00 r[1]=r[1]+-99
REG[1] =  i:99
  95 IfNotZero        1   98    0               00 if r[1]!=0 then r[1]--, goto 98
REG[1] =  i:0
  96 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
  97 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
  98 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'keenness',nullif('keenness','keenness'),'CAMAC')
;]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    1    1 0             01 usesStmtJournal=0
  32 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 1             00 root=2 iDb=0; t0
   2 OpenWrite        1    4    0 k(3,,,)       00 root=4 iDb=0; sqlite_autoindex_t0_2
   3 OpenWrite        2    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t0_1
   4 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   5 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   6 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t0_2
   7 SCopy            2    4    0               00 r[4]=r[2]; c0
REG[4] =  i:1
   8 SCopy            2    5    0               00 r[5]=r[2]; c0
REG[5] =  i:1
   9 IntCopy          1    6    0               00 r[6]=r[1]; rowid
REG[6] =  i:1
  10 MakeRecord       4    3    3               00 r[3]=mkrec(r[4..6]); for sqlite_autoindex_t0_2
REG[3] =  s4[04090909....]
  11 NoConflict       1   19    4 2             00 key=r[4..5]
REG[4] =  i:1
REG[5] =  i:1
  19 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t0_1
  20 SCopy            2    8    0               00 r[8]=r[2]; c0
REG[8] =  i:1
  21 IntCopy          1    9    0               00 r[9]=r[1]; rowid
REG[9] =  i:1
  22 MakeRecord       8    2    7               00 r[7]=mkrec(r[8..9]); for sqlite_autoindex_t0_1
REG[7] =  s3[030909...]
  23 Abortable        0    0    0               00 
  24 NoConflict       2   26    8 1             00 key=r[8]
REG[8] =  i:1
  26 IdxInsert        1    3    4 3             10 key=r[3]
REG[3] =  s4[04090909....]
  27 IdxInsert        2    7    8 2             10 key=r[7]
REG[7] =  s3[030909...]
  28 MakeRecord       2    1   10               00 r[10]=mkrec(r[2])
REG[10] =  s2[0209..]
  29 Insert           0   10    1 t0            39 intkey=r[1] data=r[10]
REG[10] =  s2[0209..]
REG[1] =  i:1
  30 Halt             0    0    0               00 
SQL: [;SELECT instr(x'0102030405',x'02');]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 Blob             5    3    0          00 r[3]= (len=5)
REG[3] =  t5[0102030405.....]
   6 Blob             1    4    0              00 r[4]= (len=1)
REG[4] =  t1[02.]
   7 Function0        3    3    2 instr(2)      02 r[2]=func(r[3..4])
REG[3] =  t5[0102030405.....]
REG[4] =  t1[02.]
REG[2] =  i:2
   8 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =  i:2
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:2
   4 Halt             0    0    0               00 
SQL: [;SELECT instr(x'',x'');]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 Blob             0    3    0               00 r[3]= (len=0)
REG[3] =  t0[]
   6 Blob             0    4    0               00 r[4]= (len=0)
REG[4] =  t0[]
   7 Function0        3    3    2 instr(2)      02 r[2]=func(r[3..4])
REG[3] =  t0[]
REG[4] =  t0[]
REG[2] =  i:1
   8 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =  i:1
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   4 Halt             0    0    0               00 
SQL: [;SELECT instr($longstr,'Y');]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 Variable         1    3    0 $longstr      00 r[3]=parameter(1,$longstr)
REG[3] =  NULL
   6 String8          0    4    0 Y             00 r[4]='Y'
REG[4] =   t1[Y](8)
   7 Function0        3    3    2 instr(2)      02 r[2]=func(r[3..4])
REG[3] =  NULL
REG[4] =   t1[Y](8)
REG[2] =  NULL
   8 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =  NULL
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   4 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."t0"(c0,c0,c0,c0,c0) VALUES(1,0,'kings',nullif('kings','kings'),'CAMC')
;]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    1    1 0             01 usesStmtJournal=0
  32 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 1             00 root=2 iDb=0; t0
   2 OpenWrite        1    4    0 k(3,,,)       00 root=4 iDb=0; sqlite_autoindex_t0_2
   3 OpenWrite        2    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t0_1
   4 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   5 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   6 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t0_2
   7 SCopy            2    4    0               00 r[4]=r[2]; c0
REG[4] =  i:1
   8 SCopy            2    5    0               00 r[5]=r[2]; c0
REG[5] =  i:1
   9 IntCopy          1    6    0               00 r[6]=r[1]; rowid
REG[6] =  i:2
  10 MakeRecord       4    3    3               00 r[3]=mkrec(r[4..6]); for sqlite_autoindex_t0_2
REG[3] =  s5[0409090102.....]
  11 NoConflict       1   19    4 2             00 key=r[4..5]
REG[4] =  i:1
REG[5] =  i:1
  12 IdxRowid         1   10    0               00 r[10]=rowid
REG[10] =  i:1
  13 NotExists        0   19   10 1             00 intkey=r[10]
REG[10] =  i:1
  14 Column           0    0   11               00 r[11]=t0.c0
REG[11] =  i:1
  15 Rowid            0   12    0               00 r[12]=rowid
REG[12] =  i:1
  16 IdxDelete        2   11    2               00 key=r[11..12]
  17 Delete           0    0    0 t0            00 
  18 Delete           1    0    0               00 
  19 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t0_1
  20 SCopy            2    8    0               00 r[8]=r[2]; c0
REG[8] =  i:1
  21 IntCopy          1    9    0               00 r[9]=r[1]; rowid
REG[9] =  i:2
  22 MakeRecord       8    2    7               00 r[7]=mkrec(r[8..9]); for sqlite_autoindex_t0_1
REG[7] =  s4[03090102....]
  23 Abortable        0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007ff159e18859 in __GI_abort () at abort.c:79
#2  0x00007ff159e18729 in __assert_fail_base (fmt=0x7ff159fae588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x213d8b "p->nWrite==0 || p->usesStmtJournal", file=0x22873d "sqlite3.c", line=77006, 
    function=<optimized out>) at assert.c:92
#3  0x00007ff159e29fd6 in __GI___assert_fail (assertion=0x213d8b "p->nWrite==0 || p->usesStmtJournal", file=0x22873d "sqlite3.c", line=77006, function=0x227155 "void sqlite3VdbeAssertAbortable(Vdbe *)") at assert.c:101
#4  0x00000000003e133c in sqlite3VdbeAssertAbortable (p=0xebc910) at sqlite3.c:77006
#5  0x00000000003e01da in sqlite3VdbeExec (p=0xebc910) at sqlite3.c:91079
#6  0x0000000000411104 in sqlite3Step (p=0xebc910) at sqlite3.c:81930
#7  0x000000000029128d in sqlite3_step (pStmt=0xebc910) at sqlite3.c:81995
#8  0x00000000002570b9 in main (argc=1, argv=0x7ffdcb046ff8) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 59461] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
