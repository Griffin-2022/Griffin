GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000669,sig:08,src:025432+027085,time:40622095,execs:7779950,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_listing=on;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;CREATE TABLE over(following);]
VDBE Program Listing:
   0 Init             0   28    0               00 Start at 28
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
  16 Rowid            1    5    0               00 r[5]=rowid
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
  18 String8          0    6    0 table         00 r[6]='table'
  19 String8          0    7    0 over          00 r[7]='over'
  20 String8          0    8    0 over          00 r[8]='over'
  21 Copy             2    9    0               00 r[9]=r[2]
  22 String8          0   10    0 CREATE TABLE over(following) 00 r[10]='CREATE TABLE over(following)'
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
  25 SetCookie        0    1    4               00 
  26 ParseSchema      0    0    0 tbl_name='over' AND type!='trigger' 00 
  27 Halt             0    0    0               00 
  28 Transaction      0    1    3 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    4 0             00 usesStmtJournal=0
  16 String8          0    2    0 over          00 r[2]='over'
  17 String8          0    3    0 trigger       00 r[3]='trigger'
  18 Goto             0    1    0               00 
SQL: [;CREATE INDEX preceding ON over(abs(15+3));]
VDBE Program Listing:
   0 Init             0   33    0               00 Start at 33
   1 Noop             0   32    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
   5 String8          0    3    0 index         00 r[3]='index'
   6 String8          0    4    0 preceding     00 r[4]='preceding'
   7 String8          0    5    0 over          00 r[5]='over'
   8 Copy             1    6    0               00 r[6]=r[1]
   9 String8          0    7    0 CREATE INDEX preceding ON over(abs(15+3)) 00 r[7]='CREATE INDEX preceding ON over(abs(15+3))'
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
  12 SorterOpen       3    0    1 k(2,,)        00 
  13 OpenRead         1    5    0 1             00 root=5 iDb=0; over
  14 Rewind           1   20    0               00 
  15 SCopy           12   10    0               00 r[10]=r[12]
  16 Rowid            1   11    0               00 r[11]=rowid
  17 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
  18 SorterInsert     3    9    0               00 key=r[9]
  19 Next             1   15    0               00 
  20 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  21 SorterSort       3   26    0               00 
  22 SorterData       3    9    2               00 r[9]=data
  23 SeekEnd          2    0    0               00 
  24 IdxInsert        2    9    0               10 key=r[9]
  25 SorterNext       3   22    0               00 
  26 Close            1    0    0               00 
  27 Close            2    0    0               00 
  28 Close            3    0    0               00 
  29 SetCookie        0    1    5               00 
  30 ParseSchema      0    0    0 name='preceding' AND type='index' 00 
  31 Expire           0    1    0               00 
  32 Halt             0    0    0               00 
  33 Transaction      0    1    4 0             01 usesStmtJournal=0
  34 Integer         15    9    0               00 r[9]=15
  35 Integer          3   14    0               00 r[14]=3
  36 Add             14    9   13               00 r[13]=r[14]+r[9]
  37 Function0        1   13   12 abs(1)        01 r[12]=func(r[13])
  38 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    5 0             00 usesStmtJournal=0
  16 String8          0    2    0 preceding     00 r[2]='preceding'
  17 String8          0    3    0 index         00 r[3]='index'
  18 Goto             0    1    0               00 
SQL: [;CREATE INDEX t1 ON t0(c0);]
VDBE Program Listing:
   0 Init             0   33    0               00 Start at 33
   1 Noop             0   32    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
   5 String8          0    3    0 index         00 r[3]='index'
   6 String8          0    4    0 t1            00 r[4]='t1'
   7 String8          0    5    0 t0            00 r[5]='t0'
   8 Copy             1    6    0               00 r[6]=r[1]
   9 String8          0    7    0 CREATE INDEX t1 ON t0(c0) 00 r[7]='CREATE INDEX t1 ON t0(c0)'
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
  12 SorterOpen       3    0    1 k(2,,)        00 
  13 OpenRead         1    3    0 1             00 root=3 iDb=0; t0
  14 Rewind           1   20    0               00 
  15 Column           1    0   10               00 r[10]=t0.c0
  16 Rowid            1   11    0               00 r[11]=rowid
  17 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
  18 SorterInsert     3    9    0               00 key=r[9]
  19 Next             1   15    0               00 
  20 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  21 SorterSort       3   26    0               00 
  22 SorterData       3    9    2               00 r[9]=data
  23 SeekEnd          2    0    0               00 
  24 IdxInsert        2    9    0               10 key=r[9]
  25 SorterNext       3   22    0               00 
  26 Close            1    0    0               00 
  27 Close            2    0    0               00 
  28 Close            3    0    0               00 
  29 SetCookie        0    1    6               00 
  30 ParseSchema      0    0    0 name='t1' AND type='index' 00 
  31 Expire           0    1    0               00 
  32 Halt             0    0    0               00 
  33 Transaction      0    1    5 0             01 usesStmtJournal=0
  34 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    6 0             00 usesStmtJournal=0
  16 String8          0    2    0 t1            00 r[2]='t1'
  17 String8          0    3    0 index         00 r[3]='index'
  18 Goto             0    1    0               00 
SQL: [;CREATE INDEX x ON t0(c0);]
VDBE Program Listing:
   0 Init             0   33    0               00 Start at 33
   1 Noop             0   32    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
   5 String8          0    3    0 index         00 r[3]='index'
   6 String8          0    4    0 x             00 r[4]='x'
   7 String8          0    5    0 t0            00 r[5]='t0'
   8 Copy             1    6    0               00 r[6]=r[1]
   9 String8          0    7    0 CREATE INDEX x ON t0(c0) 00 r[7]='CREATE INDEX x ON t0(c0)'
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
  12 SorterOpen       3    0    1 k(2,,)        00 
  13 OpenRead         1    3    0 1             00 root=3 iDb=0; t0
  14 Rewind           1   20    0               00 
  15 Column           1    0   10               00 r[10]=t0.c0
  16 Rowid            1   11    0               00 r[11]=rowid
  17 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
  18 SorterInsert     3    9    0               00 key=r[9]
  19 Next             1   15    0               00 
  20 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  21 SorterSort       3   26    0               00 
  22 SorterData       3    9    2               00 r[9]=data
  23 SeekEnd          2    0    0               00 
  24 IdxInsert        2    9    0               10 key=r[9]
  25 SorterNext       3   22    0               00 
  26 Close            1    0    0               00 
  27 Close            2    0    0               00 
  28 Close            3    0    0               00 
  29 SetCookie        0    1    7               00 
  30 ParseSchema      0    0    0 name='x' AND type='index' 00 
  31 Expire           0    1    0               00 
  32 Halt             0    0    0               00 
  33 Transaction      0    1    6 0             01 usesStmtJournal=0
  34 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    7 0             00 usesStmtJournal=0
  16 String8          0    2    0 x             00 r[2]='x'
  17 String8          0    3    0 index         00 r[3]='index'
  18 Goto             0    1    0               00 
SQL: [;CREATE INDEX test001 ON t0(c0,c0);]
VDBE Program Listing:
   0 Init             0   34    0               00 Start at 34
   1 Noop             0   33    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
   5 String8          0    3    0 index         00 r[3]='index'
   6 String8          0    4    0 test001       00 r[4]='test001'
   7 String8          0    5    0 t0            00 r[5]='t0'
   8 Copy             1    6    0               00 r[6]=r[1]
   9 String8          0    7    0 CREATE INDEX test001 ON t0(c0,c0) 00 r[7]='CREATE INDEX test001 ON t0(c0,c0)'
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
  12 SorterOpen       3    0    2 k(3,,,)       00 
  13 OpenRead         1    3    0 1             00 root=3 iDb=0; t0
  14 Rewind           1   21    0               00 
  15 Column           1    0   10               00 r[10]=t0.c0
  16 Column           1    0   11               00 r[11]=t0.c0
  17 Rowid            1   12    0               00 r[12]=rowid
  18 MakeRecord      10    3    9               00 r[9]=mkrec(r[10..12])
  19 SorterInsert     3    9    0               00 key=r[9]
  20 Next             1   15    0               00 
  21 OpenWrite        2    1    0 k(3,,,)       11 root=1 iDb=0
  22 SorterSort       3   27    0               00 
  23 SorterData       3    9    2               00 r[9]=data
  24 SeekEnd          2    0    0               00 
  25 IdxInsert        2    9    0               10 key=r[9]
  26 SorterNext       3   23    0               00 
  27 Close            1    0    0               00 
  28 Close            2    0    0               00 
  29 Close            3    0    0               00 
  30 SetCookie        0    1    8               00 
  31 ParseSchema      0    0    0 name='test001' AND type='index' 00 
  32 Expire           0    1    0               00 
  33 Halt             0    0    0               00 
  34 Transaction      0    1    7 0             01 usesStmtJournal=0
  35 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    8 0             00 usesStmtJournal=0
  16 String8          0    2    0 test001       00 r[2]='test001'
  17 String8          0    3    0 index         00 r[3]='index'
  18 Goto             0    1    0               00 
SQL: [;CREATE INDEX last_field ON t0(c0,c0);]
VDBE Program Listing:
   0 Init             0   34    0               00 Start at 34
   1 Noop             0   33    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
   5 String8          0    3    0 index         00 r[3]='index'
   6 String8          0    4    0 last_field    00 r[4]='last_field'
   7 String8          0    5    0 t0            00 r[5]='t0'
   8 Copy             1    6    0               00 r[6]=r[1]
   9 String8          0    7    0 CREATE INDEX last_field ON t0(c0,c0) 00 r[7]='CREATE INDEX last_field ON t0(c0,c0)'
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
  12 SorterOpen       3    0    2 k(3,,,)       00 
  13 OpenRead         1    3    0 1             00 root=3 iDb=0; t0
  14 Rewind           1   21    0               00 
  15 Column           1    0   10               00 r[10]=t0.c0
  16 Column           1    0   11               00 r[11]=t0.c0
  17 Rowid            1   12    0               00 r[12]=rowid
  18 MakeRecord      10    3    9               00 r[9]=mkrec(r[10..12])
  19 SorterInsert     3    9    0               00 key=r[9]
  20 Next             1   15    0               00 
  21 OpenWrite        2    1    0 k(3,,,)       11 root=1 iDb=0
  22 SorterSort       3   27    0               00 
  23 SorterData       3    9    2               00 r[9]=data
  24 SeekEnd          2    0    0               00 
  25 IdxInsert        2    9    0               10 key=r[9]
  26 SorterNext       3   23    0               00 
  27 Close            1    0    0               00 
  28 Close            2    0    0               00 
  29 Close            3    0    0               00 
  30 SetCookie        0    1    9               00 
  31 ParseSchema      0    0    0 name='last_field' AND type='index' 00 
  32 Expire           0    1    0               00 
  33 Halt             0    0    0               00 
  34 Transaction      0    1    8 0             01 usesStmtJournal=0
  35 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    9 0             00 usesStmtJournal=0
  16 String8          0    2    0 last_field    00 r[2]='last_field'
  17 String8          0    3    0 index         00 r[3]='index'
  18 Goto             0    1    0               00 
SQL: [;CREATE TABLE test002(field1 INTEGER PRIMARY KEY,test003,field2,test004,field3,test005,field4);]
VDBE Program Listing:
   0 Init             0   28    0               00 Start at 28
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
  16 Rowid            1    5    0               00 r[5]=rowid
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
  18 String8          0    6    0 table         00 r[6]='table'
  19 String8          0    7    0 test002       00 r[7]='test002'
  20 String8          0    8    0 test002       00 r[8]='test002'
  21 Copy             2    9    0               00 r[9]=r[2]
  22 String8          0   10    0 CREATE TABLE test002(field1 INTEGER PRIMARY KEY,test003,field2,test004,field3,test005,field4) 00 r[10]='CREATE TABLE test002(field1 INTEGER PRIMARY KEY,test003,field2,test004,field3,test005,field4
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
  25 SetCookie        0    1   10               00 
  26 ParseSchema      0    0    0 tbl_name='test002' AND type!='trigger' 00 
  27 Halt             0    0    0               00 
  28 Transaction      0    1    9 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0   10 0             00 usesStmtJournal=0
  16 String8          0    2    0 test002       00 r[2]='test002'
  17 String8          0    3    0 trigger       00 r[3]='trigger'
  18 Goto             0    1    0               00 
SQL: [SELECT c0 FROM t0
     WHERE +c0 IS NULL
        OR c0 IS NULL
        OR c0 IS NULL
    ORDER BY c0
  
;]
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    3    0               00 
   2 OpenRead         2    8    0 k(2,,)        00 root=8 iDb=0; x
   3 Explain          3    0    0 SCAN TABLE t0 USING COVERING INDEX x 00 
   4 Rewind           2   14    1 0             00 
   5 Column           2    0    1               00 r[1]=t0.c0
   6 IsNull           1   11    0               00 if r[1]==NULL goto 11
   7 Column           2    0    1               00 r[1]=t0.c0
   8 IsNull           1   11    0               00 if r[1]==NULL goto 11
   9 Column           2    0    1               00 r[1]=t0.c0
  10 NotNull          1   13    0               00 if r[1]!=NULL goto 13
  11 Column           2    0    2               00 r[2]=t0.c0
  12 ResultRow        2    1    0               00 output=r[2]
  13 Next             2    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0   10 0             01 usesStmtJournal=0
  16 Goto             0    1    0               00 
SQL: [SELECT following FROM (over)
     WHERE (following IS NULL AND following NOT NULL AND following NOT NULL)
        OR (following NOT NULL AND following NOT NULL AND following IS NULL)
        OR (following NOT NULL AND following IS NULL AND following NOT NULL)
    ORDER BY following
  
;]
VDBE Program Listing:
   0 Init             0   35    0               00 Start at 35
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0    5    0 1             00 root=5 iDb=0; over
   3 Explain          3    0    0 SCAN TABLE over 00 
   4 Rewind           0   27    0               00 
   5 Column           0    0    1               00 r[1]=over.following
   6 NotNull          1   11    0               00 if r[1]!=NULL goto 11
   7 Column           0    0    1               00 r[1]=over.following
   8 IsNull           1   11    0               00 if r[1]==NULL goto 11
   9 Column           0    0    1               00 r[1]=over.following
  10 NotNull          1   23    0               00 if r[1]!=NULL goto 23
  11 Column           0    0    1               00 r[1]=over.following
  12 IsNull           1   17    0               00 if r[1]==NULL goto 17
  13 Column           0    0    1               00 r[1]=over.following
  14 IsNull           1   17    0               00 if r[1]==NULL goto 17
  15 Column           0    0    1               00 r[1]=over.following
  16 IsNull           1   23    0               00 if r[1]==NULL goto 23
  17 Column           0    0    1               00 r[1]=over.following
  18 IsNull           1   26    0               00 if r[1]==NULL goto 26
  19 Column           0    0    1               00 r[1]=over.following
  20 NotNull          1   26    0               00 if r[1]!=NULL goto 26
  21 Column           0    0    1               00 r[1]=over.following
  22 IsNull           1   26    0               00 if r[1]==NULL goto 26
  23 Column           0    0    2               00 r[2]=over.following
  24 MakeRecord       2    1    4               00 r[4]=mkrec(r[2])
  25 SorterInsert     1    4    2 1             00 key=r[4]
  26 Next             0    5    0               01 
  27 Explain         27    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  28 OpenPseudo       2    5    3               00 3 columns in r[5]
  29 SorterSort       1   34    0               00 
  30 SorterData       1    5    2               00 r[5]=data
  31 Column           2    0    3               00 r[3]=following
  32 ResultRow        3    1    0               00 output=r[3]
  33 SorterNext       1   30    0               00 
  34 Halt             0    0    0               00 
  35 Transaction      0    0   10 0             01 usesStmtJournal=0
  36 Goto             0    1    0               00 
SQL: [;DELETE FROM t0
     WHERE c0 IS NULL
        OR c0 IS NULL
        OR c0 IS NULL
  
;]
VDBE Program Listing:
   0 Init             0   56    0               00 Start at 56
   1 Null             0    1    0               00 r[1]=NULL
   2 OpenWrite        0    3    0 1             00 root=3 iDb=0; t0
   3 Integer         38    2    0               00 r[2]=38
   4 Explain          4    0    0 MULTI-INDEX OR 00 
   5 Explain          5    4    0 INDEX 1       00 
   6 ReopenIdx        5   10    0 k(3,,,)       02 root=10 iDb=0; last_field
   7 Null             0    3    0               00 r[3]=NULL
   8 Null             0    4    0               00 r[4]=NULL
   9 SeekGE           5   16    3 2             00 key=r[3..4]
  10 IdxGT            5   16    3 2             00 key=r[3..4]
  11 IdxRowid         5    5    0               00 r[5]=rowid
  12 NotExists        0    0    5               00 intkey=r[5]
  13 Explain         13    5    0 SEARCH TABLE t0 USING COVERING INDEX last_field (c0=? AND c0=?) 00 
  14 Gosub            2   39    0               00 
  15 Next             5   10    0               00 
  16 Explain         16    4    0 INDEX 2       00 
  17 ReopenIdx        5   10    0 k(3,,,)       02 root=10 iDb=0; last_field
  18 Null             0    6    0               00 r[6]=NULL
  19 Null             0    7    0               00 r[7]=NULL
  20 SeekGE           5   27    6 2             00 key=r[6..7]
  21 IdxGT            5   27    6 2             00 key=r[6..7]
  22 IdxRowid         5    8    0               00 r[8]=rowid
  23 NotExists        0    0    8               00 intkey=r[8]
  24 Explain         24   16    0 SEARCH TABLE t0 USING COVERING INDEX last_field (c0=? AND c0=?) 00 
  25 Gosub            2   39    0               00 
  26 Next             5   21    0               00 
  27 Explain         27    4    0 INDEX 3       00 
  28 ReopenIdx        5   10    0 k(3,,,)       02 root=10 iDb=0; last_field
  29 Null             0    9    0               00 r[9]=NULL
  30 Null             0   10    0               00 r[10]=NULL
  31 SeekGE           5   38    9 2             00 key=r[9..10]
  32 IdxGT            5   38    9 2             00 key=r[9..10]
  33 IdxRowid         5   11    0               00 r[11]=rowid
  34 NotExists        0    0   11               00 intkey=r[11]
  35 Explain         35   27    0 SEARCH TABLE t0 USING COVERING INDEX last_field (c0=? AND c0=?) 00 
  36 Gosub            2   39    0               00 
  37 Next             5   32    0               00 
  38 Goto             0   55    0               00 
  39 Rowid            0   12    0               00 r[12]=rowid
  40 Once             0   45    0               00 
  41 OpenWrite        1   10    0 k(3,,,)       08 root=10 iDb=0; last_field
  42 OpenWrite        2    9    0 k(3,,,)       08 root=9 iDb=0; test001
  43 OpenWrite        3    8    0 k(2,,)        08 root=8 iDb=0; x
  44 OpenWrite        4    7    0 k(2,,)        08 root=7 iDb=0; t1
  45 Column           0    0   13               00 r[13]=t0.c0
  46 Column           0    0   14               00 r[14]=t0.c0
  47 Rowid            0   15    0               00 r[15]=rowid
  48 IdxDelete        1   13    3               00 key=r[13..15]
  49 IdxDelete        2   13    3               00 key=r[13..15]
  50 Rowid            0   14    0               00 r[14]=rowid
  51 IdxDelete        3   13    2               00 key=r[13..14]
  52 IdxDelete        4   13    2               00 key=r[13..14]
  53 Delete           0    1    0 t0            02 
  54 Return           2    0    0               00 
  55 Halt             0    0    0               00 
  56 Transaction      0    1   10 0             01 usesStmtJournal=0
  57 Goto             0    1    0               00 
SQL: [;DELETE FROM t0
     WHERE +c0 IS NULL
        OR c0 IS NULL
        OR c0 IS NULL
  
;]
VDBE Program Listing:
   0 Init             0   28    0               00 Start at 28
   1 Null             0    1    0               00 r[1]=NULL
   2 OpenWrite        0    3    0 1             00 root=3 iDb=0; t0
   3 Explain          3    0    0 SCAN TABLE t0 00 
   4 Rewind           0   27    0               00 
   5 Column           0    0    2               00 r[2]=t0.c0
   6 IsNull           2   11    0               00 if r[2]==NULL goto 11
   7 Column           0    0    2               00 r[2]=t0.c0
   8 IsNull           2   11    0               00 if r[2]==NULL goto 11
   9 Column           0    0    2               00 r[2]=t0.c0
  10 NotNull          2   26    0               00 if r[2]!=NULL goto 26
  11 Rowid            0    3    0               00 r[3]=rowid
  12 Once             0   17    0               00 
  13 OpenWrite        1   10    0 k(3,,,)       08 root=10 iDb=0; last_field
  14 OpenWrite        2    9    0 k(3,,,)       08 root=9 iDb=0; test001
  15 OpenWrite        3    8    0 k(2,,)        08 root=8 iDb=0; x
  16 OpenWrite        4    7    0 k(2,,)        08 root=7 iDb=0; t1
  17 Column           0    0    4               00 r[4]=t0.c0
  18 Column           0    0    5               00 r[5]=t0.c0
  19 Rowid            0    6    0               00 r[6]=rowid
  20 IdxDelete        1    4    3               00 key=r[4..6]
  21 IdxDelete        2    4    3               00 key=r[4..6]
  22 Rowid            0    5    0               00 r[5]=rowid
  23 IdxDelete        3    4    2               00 key=r[4..5]
  24 IdxDelete        4    4    2               00 key=r[4..5]
  25 Delete           0    1    0 t0            02 
  26 Next             0    5    0               01 
  27 Halt             0    0    0               00 
  28 Transaction      0    1   10 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
SQL: [;ROLLBACK;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    1    0               00 
   2 Halt             0    0    0               00 
SQL: [;ROLLBACK
  
;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    1    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT count(*) FROM over UNION ALL
    SELECT following FROM over WHERE following BETWEEN 85 AND 100;]
VDBE Program Listing:
   0 Init             0   19    0               00 Start at 19
   1 Explain          1    0    0 COMPOUND QUERY 00 
   2 Explain          2    1    0 LEFT-MOST SUBQUERY 00 
   3 OpenRead         2    5    0 1             00 root=5 iDb=0
   4 Count            2    1    0               00 r[1]=count()
   5 Close            2    0    0               00 
   6 Copy             1    2    0               00 r[2]=r[1]
   7 ResultRow        2    1    0               00 output=r[2]
   8 Explain          8    1    0 UNION ALL     00 
   9 OpenRead         0    5    0 1             00 root=5 iDb=0; over
  10 Explain         10    8    0 SCAN TABLE over 00 
  11 Rewind           0   18    0               00 
  12 Column           0    0    3               00 r[3]=over.following
  13 Lt               5   17    3 (BINARY)      51 if r[3]<r[5] goto 17
  14 Gt               6   17    3 (BINARY)      51 if r[3]>r[6] goto 17
  15 Column           0    0    2               00 r[2]=over.following
  16 ResultRow        2    1    0               00 output=r[2]
  17 Next             0   12    0               01 
  18 Halt             0    0    0               00 
  19 Transaction      0    0   10 0             01 usesStmtJournal=0
  20 Integer         85    5    0               00 r[5]=85
  21 Integer        100    6    0               00 r[6]=100
  22 Goto             0    1    0               00 
SQL: [;ROLLBACK;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    1    0               00 
   2 Halt             0    0    0               00 
SQL: [;UPDATE t0 SET c0=c0+100
     WHERE (c0>=950 AND c0<=1010) OR (c0 IS NULL AND c0 NOT NULL)
  
;]
VDBE Program Listing:
   0 Init             0   83    0               00 Start at 83
   1 Null             0   15   16               00 r[15..16]=NULL
   2 OpenRead         0    3    0 1             00 root=3 iDb=0; t0
   3 Null             0   21    0               00 r[21]=NULL
   4 Integer         32   20    0               00 r[20]=32
   5 Explain          5    0    0 MULTI-INDEX OR 00 
   6 Explain          6    5    0 INDEX 1       00 
   7 ReopenIdx        5    8    0 k(2,,)        00 root=8 iDb=0; x
   8 Integer        950   23    0               00 r[23]=950
   9 SeekGE           5   18   23 1             00 key=r[23]
  10 Integer       1010   23    0               00 r[23]=1010
  11 IdxGT            5   18   23 1             00 key=r[23]
  12 DeferredSeek     5    0    0               00 Move 0 to 5.rowid if needed
  13 Explain         13    6    0 SEARCH TABLE t0 USING COVERING INDEX x (c0>? AND c0<?) 00 
  14 IdxRowid         5   22    0               00 r[22]=rowid
  15 RowSetTest      21   17   22 0             00 if r[22] in rowset(21) goto 17
  16 Gosub           20   33    0               00 
  17 Next             5   11    0               00 
  18 Explain         18    5    0 INDEX 2       00 
  19 ReopenIdx        5   10    0 k(3,,,)       02 root=10 iDb=0; last_field
  20 Null             0   24    0               00 r[24]=NULL
  21 Null             0   25    0               00 r[25]=NULL
  22 SeekGE           5   32   24 2             00 key=r[24..25]
  23 IdxGT            5   32   24 2             00 key=r[24..25]
  24 DeferredSeek     5    0    0               00 Move 0 to 5.rowid if needed
  25 Column           5    0   26               00 r[26]=t0.c0
  26 IsNull          26   31    0               00 if r[26]==NULL goto 31
  27 Explain         27   18    0 SEARCH TABLE t0 USING COVERING INDEX last_field (c0=? AND c0=?) 00 
  28 IdxRowid         5   22    0               00 r[22]=rowid
  29 RowSetTest      21   31   22 -1            00 if r[22] in rowset(21) goto 31
  30 Gosub           20   33    0               00 
  31 Next             5   23    0               00 
  32 Goto             0   36    0               00 
  33 Rowid            0   16    0               00 r[16]=rowid
  34 RowSetAdd       15   16    0               00 rowset(15)=r[16]
  35 Return          20    0    0               00 
  36 OpenWrite        0    3    0 1             00 root=3 iDb=0; t0
  37 OpenWrite        1   10    0 k(3,,,)       00 root=10 iDb=0; last_field
  38 OpenWrite        2    9    0 k(3,,,)       00 root=9 iDb=0; test001
  39 OpenWrite        3    8    0 k(2,,)        00 root=8 iDb=0; x
  40 OpenWrite        4    7    0 k(2,,)        00 root=7 iDb=0; t1
  41 RowSetRead      15   82   16               00 r[16]=rowset(15)
  42 NotExists        0   41   16               00 intkey=r[16]
  43 Column           0    0   17               00 r[17]=t0.c0
  44 Copy            16   18    0               00 r[18]=r[16]
  45 Column           0    0   26               00 r[26]=t0.c0
  46 Add             27   26   19               00 r[19]=r[27]+r[26]
  47 Program         16   41   28 program       01 Call: v0.default
  48 NotExists        0   41   16               00 intkey=r[16]
  49 Noop             0    0    0               00 uniqueness check for last_field
  50 SCopy           19    2    0               00 r[2]=r[19]; c0
  51 SCopy           19    3    0               00 r[3]=r[19]; c0
  52 IntCopy         18    4    0               00 r[4]=r[18]; rowid
  53 MakeRecord       2    3    1               00 r[1]=mkrec(r[2..4]); for last_field
  54 Noop             0    0    0               00 uniqueness check for test001
  55 SCopy           19    6    0               00 r[6]=r[19]; c0
  56 SCopy           19    7    0               00 r[7]=r[19]; c0
  57 IntCopy         18    8    0               00 r[8]=r[18]; rowid
  58 MakeRecord       6    3    5               00 r[5]=mkrec(r[6..8]); for test001
  59 Noop             0    0    0               00 uniqueness check for x
  60 SCopy           19   10    0               00 r[10]=r[19]; c0
  61 IntCopy         18   11    0               00 r[11]=r[18]; rowid
  62 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11]); for x
  63 Noop             0    0    0               00 uniqueness check for t1
  64 SCopy           19   13    0               00 r[13]=r[19]; c0
  65 IntCopy         18   14    0               00 r[14]=r[18]; rowid
  66 MakeRecord      13    2   12               00 r[12]=mkrec(r[13..14]); for t1
  67 Column           0    0   29               00 r[29]=t0.c0
  68 Column           0    0   30               00 r[30]=t0.c0
  69 Rowid            0   31    0               00 r[31]=rowid
  70 IdxDelete        1   29    3               00 key=r[29..31]
  71 IdxDelete        2   29    3               00 key=r[29..31]
  72 Rowid            0   30    0               00 r[30]=rowid
  73 IdxDelete        3   29    2               00 key=r[29..30]
  74 IdxDelete        4   29    2               00 key=r[29..30]
  75 IdxInsert        1    1    2 3             00 key=r[1]
  76 IdxInsert        2    5    6 3             00 key=r[5]
  77 IdxInsert        3    9   10 2             00 key=r[9]
  78 IdxInsert        4   12   13 2             00 key=r[12]
  79 MakeRecord      19    1   26               00 r[26]=mkrec(r[19])
  80 Insert           0   26   18 t0            05 intkey=r[18] data=r[26]
  81 Goto             0   41    0               00 
  82 Halt             0    0    0               00 
  83 Transaction      0    1   10 0             01 usesStmtJournal=0
  84 Integer        100   27    0               00 r[27]=100
  85 Goto             0    1    0               00 
SQL: [SELECT count(*) FROM t0 UNION ALL
    SELECT c0 FROM t0 WHERE c0 BETWEEN 85 AND 100;]
VDBE Program Listing:
   0 Init             0   19    0               00 Start at 19
   1 Explain          1    0    0 COMPOUND QUERY 00 
   2 Explain          2    1    0 LEFT-MOST SUBQUERY 00 
   3 OpenRead         2    3    0 1             00 root=3 iDb=0
   4 Count            2    1    0               00 r[1]=count()
   5 Close            2    0    0               00 
   6 Copy             1    2    0               00 r[2]=r[1]
   7 ResultRow        2    1    0               00 output=r[2]
   8 Explain          8    1    0 UNION ALL     00 
   9 OpenRead         3    8    0 k(2,,)        00 root=8 iDb=0; x
  10 Explain         10    8    0 SEARCH TABLE t0 USING COVERING INDEX x (c0>? AND c0<?) 00 
  11 Integer         85    3    0               00 r[3]=85
  12 SeekGE           3   18    3 1             00 key=r[3]
  13 Integer        100    3    0               00 r[3]=100
  14 IdxGT            3   18    3 1             00 key=r[3]
  15 Column           3    0    2               00 r[2]=t0.c0
  16 ResultRow        2    1    0               00 output=r[2]
  17 Next             3   14    0               00 
  18 Halt             0    0    0               00 
  19 Transaction      0    0   10 0             01 usesStmtJournal=0
  20 Goto             0    1    0               00 
SQL: [;DELETE FROM over NOT INDEXED
     WHERE (following IS NULL AND following NOT NULL AND following NOT NULL)
        OR (following NOT NULL AND following IS NULL AND following NOT NULL)
        OR (following NOT NULL AND following NOT NULL AND following IS NULL)
  
;]
VDBE Program Listing:
   0 Init             0   32    0               00 Start at 32
   1 Null             0    1    0               00 r[1]=NULL
   2 OpenWrite        0    5    0 1             00 root=5 iDb=0; over
   3 Explain          3    0    0 SCAN TABLE over 00 
   4 Rewind           0   31    0               00 
   5 Column           0    0    2               00 r[2]=over.following
   6 NotNull          2   11    0               00 if r[2]!=NULL goto 11
   7 Column           0    0    2               00 r[2]=over.following
   8 IsNull           2   11    0               00 if r[2]==NULL goto 11
   9 Column           0    0    2               00 r[2]=over.following
  10 NotNull          2   23    0               00 if r[2]!=NULL goto 23
  11 Column           0    0    2               00 r[2]=over.following
  12 IsNull           2   17    0               00 if r[2]==NULL goto 17
  13 Column           0    0    2               00 r[2]=over.following
  14 NotNull          2   17    0               00 if r[2]!=NULL goto 17
  15 Column           0    0    2               00 r[2]=over.following
  16 NotNull          2   23    0               00 if r[2]!=NULL goto 23
  17 Column           0    0    2               00 r[2]=over.following
  18 IsNull           2   30    0               00 if r[2]==NULL goto 30
  19 Column           0    0    2               00 r[2]=over.following
  20 IsNull           2   30    0               00 if r[2]==NULL goto 30
  21 Column           0    0    2               00 r[2]=over.following
  22 NotNull          2   30    0               00 if r[2]!=NULL goto 30
  23 Rowid            0    3    0               00 r[3]=rowid
  24 Once             0   26    0               00 
  25 OpenWrite        1    6    0 k(2,,)        08 root=6 iDb=0; preceding
  26 SCopy            6    4    0               00 r[4]=r[6]
  27 Rowid            0    5    0               00 r[5]=rowid
  28 IdxDelete        1    4    2               00 key=r[4..5]
  29 Delete           0    1    0 over          02 
  30 Next             0    5    0               01 
  31 Halt             0    0    0               00 
  32 Transaction      0    1   10 0             01 usesStmtJournal=0
  33 Integer         15    2    0               00 r[2]=15
  34 Integer          3    8    0               00 r[8]=3
  35 Add              8    2    7               00 r[7]=r[8]+r[2]
  36 Function0        1    7    6 abs(1)        01 r[6]=func(r[7])
  37 Goto             0    1    0               00 
SQL: [;CREATE TABLE test006(test007, field6, field7, field8, test009, test010, field9, field5, test008);]
VDBE Program Listing:
   0 Init             0   28    0               00 Start at 28
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
  16 Rowid            1    5    0               00 r[5]=rowid
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
  18 String8          0    6    0 table         00 r[6]='table'
  19 String8          0    7    0 test006       00 r[7]='test006'
  20 String8          0    8    0 test006       00 r[8]='test006'
  21 Copy             2    9    0               00 r[9]=r[2]
  22 String8          0   10    0 CREATE TABLE test006(test007, field6, field7, field8, test009, test010, field9, field5, test008) 00 r[10]='CREATE TABLE test006(test007, field6, field7, field8, test009, test010, field9, field5, test
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
  25 SetCookie        0    1   11               00 
  26 ParseSchema      0    0    0 tbl_name='test006' AND type!='trigger' 00 
  27 Halt             0    0    0               00 
  28 Transaction      0    1   10 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0   11 0             00 usesStmtJournal=0
  16 String8          0    2    0 test006       00 r[2]='test006'
  17 String8          0    3    0 trigger       00 r[3]='trigger'
  18 Goto             0    1    0               00 
SQL: [;ANALYZE over;]
VDBE Program Listing:
   0 Init             0   37    0               00 Start at 37
   1 Null             0    1    0               00 r[1]=NULL
   2 OpenWrite        3    4    0 3             00 root=4 iDb=0; sqlite_stat1
   3 Explain          3    0    0 SCAN TABLE sqlite_stat1 00 
   4 Rewind           3   11    0               00 
   5 Column           3    0    2               00 r[2]=sqlite_stat1.tbl
   6 Ne               3   10    2 (BINARY)      51 if r[2]!=r[3] goto 10
   7 Rowid            3    4    0               00 r[4]=rowid
   8 Once             0    9    0               00 
   9 Delete           3    0    0 sqlite_stat1  02 
  10 Next             3    5    0               01 
  11 OpenWrite        0    4    0 3             00 root=4 iDb=0; sqlite_stat1
  12 OpenRead         4    5    0 1             00 root=5 iDb=0; over
  13 String8          0    9    0 over          00 r[9]='over'
  14 String8          0   10    0 preceding     00 r[10]='preceding'; Analysis for over.preceding
  15 OpenRead         5    6    0 k(2,,)        00 root=6 iDb=0; preceding
  16 Integer          2    7    0               00 r[7]=2
  17 Integer          1    8    0               00 r[8]=1
  18 Function0        0    7    6 stat_init(2)  02 r[6]=func(r[7..8])
  19 Rewind           5   34    0               00 
  20 Integer          0    7    0               00 r[7]=0
  21 Goto             0   27    0               00 
  22 Integer          0    7    0               00 r[7]=0
  23 Column           5    0    8               00 r[8]=
  24 Ne               8   27   12 (BINARY)      80 if r[12]!=r[8] goto 27
  25 Integer          1    7    0               00 r[7]=1
  26 Goto             0   28    0               00 
  27 Column           5    0   12               00 r[12]=
  28 Function0        1    6    8 stat_push(2)  02 r[8]=func(r[6..7])
  29 Next             5   22    0               00 
  30 Function0        0    6   11 stat_get(1)   01 r[11]=func(r[6])
  31 MakeRecord       9    3    8 BBB           00 r[8]=mkrec(r[9..11])
  32 NewRowid         0    5    0               00 r[5]=rowid
  33 Insert           0    8    5               08 intkey=r[5] data=r[8]
  34 LoadAnalysis     0    0    0               00 
  35 Expire           0    0    0               00 
  36 Halt             0    0    0               00 
  37 Transaction      0    1   11 0             01 usesStmtJournal=0
  38 String8          0    3    0 over          00 r[3]='over'
  39 Goto             0    1    0               00 
SQL: [SELECT tbl,idx,stat FROM 'main'.sqlite_stat1]
VDBE Program Listing:
   0 Init             0   10    0               00 Start at 10
   1 OpenRead         0    4    0 3             00 root=4 iDb=0; sqlite_stat1
   2 Explain          2    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_stat1.tbl
   5 Column           0    1    2               00 r[2]=sqlite_stat1.idx
   6 Column           0    2    3               00 r[3]=sqlite_stat1.stat
   7 ResultRow        1    3    0               00 output=r[1..3]
   8 Next             0    4    0               01 
   9 Halt             0    0    0               00 
  10 Transaction      0    0   11 0             01 usesStmtJournal=0
  11 Goto             0    1    0               00 

Program received signal SIGFPE, Arithmetic exception.
0x000000000038263a in whereLoopAddBtree (pBuilder=0x7ffcc8619d98, mPrereq=0) at sqlite3.c:143060
143060	        pNew->rRun = rSize + 1 + (15*pProbe->szIdxRow)/pTab->szTabRow;
(gdb) #0  0x000000000038263a in whereLoopAddBtree (pBuilder=0x7ffcc8619d98, mPrereq=0) at sqlite3.c:143060
#1  0x000000000036fb8f in whereLoopAddAll (pBuilder=0x7ffcc8619d98) at sqlite3.c:143616
#2  0x000000000036a9df in sqlite3WhereBegin (pParse=0x7ffcc861ae00, pTabList=0x183f8f0, pWhere=0x184c730, pOrderBy=0x184cbe0, pResultSet=0x1852040, wctrlFlags=0, iAuxArg=320) at sqlite3.c:144811
#3  0x00000000002fdcea in sqlite3Select (pParse=0x7ffcc861ae00, p=0x1847c30, pDest=0x7ffcc861a1f0) at sqlite3.c:130695
#4  0x00000000002ecaa8 in yy_reduce (yypParser=0x7ffcc861a420, yyruleno=79, yyLookahead=1, yyLookaheadToken=..., pParse=0x7ffcc861ae00) at sqlite3.c:151581
#5  0x00000000002e92f8 in sqlite3Parser (yyp=0x7ffcc861a420, yymajor=1, yyminor=...) at sqlite3.c:152877
#6  0x00000000002a68b3 in sqlite3RunParser (pParse=0x7ffcc861ae00, 
    zSql=0x1845247 ";;SELECT 7 FROM over LEFT JOIN t0 ON c0=2 AND c0=3 WHERE c0 IS NULL;;\n;CREATE TABLE test011 (field10 TEXT UNIQUE NOT NULL);;SELECT * FROM over AS over\n         LEFT JOIN over AS test011 ON test011.fol"..., pzErrMsg=0x7ffcc861afe0) at sqlite3.c:154013
#7  0x00000000002a1683 in sqlite3Prepare (db=0x18337b0, 
    zSql=0x1834a5b ";\n;SELECT c0 FROM t0 WHERE c0='c0' AND (c0=913 OR c0=27027) ORDER BY c0;;SELECT 7 FROM over LEFT JOIN t0 ON c0=2 AND c0=3 WHERE c0 IS NULL;;\n;CREATE TABLE test011 (field10 TEXT UNIQUE NOT NULL);;SELEC"..., nBytes=428, prepFlags=128, pReprepare=0x0, ppStmt=0x7ffcc861b118, pzTail=0x7ffcc861b100) at sqlite3.c:124303
#8  0x00000000002a0d4e in sqlite3LockAndPrepare (db=0x18337b0, 
    zSql=0x1834a5b ";\n;SELECT c0 FROM t0 WHERE c0='c0' AND (c0=913 OR c0=27027) ORDER BY c0;;SELECT 7 FROM over LEFT JOIN t0 ON c0=2 AND c0=3 WHERE c0 IS NULL;;\n;CREATE TABLE test011 (field10 TEXT UNIQUE NOT NULL);;SELEC"..., nBytes=428, prepFlags=128, pOld=0x0, ppStmt=0x7ffcc861b118, pzTail=0x7ffcc861b100) at sqlite3.c:124403
#9  0x000000000029247f in sqlite3_prepare_v2 (db=0x18337b0, 
    zSql=0x1834a5b ";\n;SELECT c0 FROM t0 WHERE c0='c0' AND (c0=913 OR c0=27027) ORDER BY c0;;SELECT 7 FROM over LEFT JOIN t0 ON c0=2 AND c0=3 WHERE c0 IS NULL;;\n;CREATE TABLE test011 (field10 TEXT UNIQUE NOT NULL);;SELEC"..., nBytes=428, ppStmt=0x7ffcc861b118, pzTail=0x7ffcc861b100) at sqlite3.c:124487
#10 0x0000000000256bd0 in main (argc=1, argv=0x7ffcc861b2c8) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 60354] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
