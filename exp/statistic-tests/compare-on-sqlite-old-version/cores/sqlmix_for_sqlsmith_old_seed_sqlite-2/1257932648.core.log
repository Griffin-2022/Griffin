GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000178,sig:06,src:006601+005571,time:19172589,execs:1541723,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    1 0             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[t a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s29[CREATE TABLE "t](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s3[t a](8)
REG[2] =  i:2
REG[3] =   s29[CREATE TABLE "t](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
CREATE TABLE a(b, x);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    1 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:2
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:2
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:2
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 a             00 r[7]='a'
REG[7] =   t1[a](8)
  21 String8          0    8    0 a             00 r[8]='a'
REG[8] =   t1[a](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  23 String8          0   10    0 CREATE TABLE a(b, x) 00 r[10]='CREATE TABLE a(b, x)'
REG[10] =   t20[CREATE TABLE a(](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s34[06170F0F01357461626C656161034352.....5tableaa.CR](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s34[06170F0F01357461626C656161034352.....5tableaa.CR](8)
REG[5] =  i:2
  26 Close            1    0    0               00 
  27 SetCookie        0    1    2               00 
  28 ParseSchema      0    0    0 tbl_name='a' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s3[t a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[a](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s20[CREATE TABLE a(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[a](8)
REG[6] =  i:3
REG[7] =   s20[CREATE TABLE a(](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    2 0             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[t a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s29[CREATE TABLE "t](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s3[t a](8)
REG[2] =  i:2
REG[3] =   s29[CREATE TABLE "t](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s20[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:3
REG[3] =   s20[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [pragma auto_vacuum=2;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [;
pragma cache_size=16;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [PRAGMA journal_mode=WAL;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 JournalMode      0    1    5               00 
REG[1] =   t6[memory](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t6[memory](8)
   3 Halt             0    0    0               00 
SQL: [;
INSERT INTO a SELECT b+4,  randomblob(400) FROM a;]
VDBE Trace:
   0 Init             0   29    0               00 Start at 29
  29 Transaction      0    1    2 0             01 usesStmtJournal=0
  30 TableLock        0    3    1 a             00 iDb=0 root=3 write=1
  31 Integer          4    6    0               00 r[6]=4
REG[6] =  i:4
  32 Integer        400    7    0               00 r[7]=400
REG[7] =  i:400
  33 Goto             0    1    0               00 
   1 InitCoroutine    4   12    2               00 
  12 OpenEphemeral    1    2    0               00 nColumn=2
  13 Yield            4   18    0               00 
REG[4] =  i:1
REG[4] =  i:13
   2 OpenRead         0    3    0 1             00 root=3 iDb=0; a
   3 Explain          0    0    0 SCAN TABLE a  00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 EndCoroutine     4    0    0               00 
REG[4] =  i:13
  18 OpenWrite        2    3    0 2             00 root=3 iDb=0; a
  19 Rewind           1   26    0               00 
  26 Close            1    0    0               00 
  27 Noop             2    0    0               00 
  28 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='a' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s3[t a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[a](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s20[CREATE TABLE a(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[a](8)
REG[6] =  i:3
REG[7] =   s20[CREATE TABLE a(](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='a' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s3[t a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[a](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s20[CREATE TABLE a(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[a](8)
REG[6] =  i:3
REG[7] =   s20[CREATE TABLE a(](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [CREATE TABLE sqlsim0(sqlsim1, t2, newtable);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    2 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:3
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:3
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:3
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 sqlsim0       00 r[7]='sqlsim0'
REG[7] =   t7[sqlsim0](8)
  21 String8          0    8    0 sqlsim0       00 r[8]='sqlsim0'
REG[8] =   t7[sqlsim0](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  23 String8          0   10    0 CREATE TABLE sqlsim0(sqlsim1, t2, newtable) 00 r[10]='CREATE TABLE sqlsim0(sqlsim1, t2, newtable)'
REG[10] =   t43[CREATE TABLE sq](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s69[06171B1B01637461626C6573716C7369.....ctablesqlsi](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s69[06171B1B01637461626C6573716C7369.....ctablesqlsi](8)
REG[5] =  i:3
  26 Close            1    0    0               00 
  27 SetCookie        0    1    3               00 
  28 ParseSchema      0    0    0 tbl_name='sqlsim0' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 sqlsim0       00 r[2]='sqlsim0'
REG[2] =   t7[sqlsim0](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[sqlsim0](8)
REG[1] =   s3[t a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[sqlsim0](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[sqlsim0](8)
REG[1] =   s7[sqlsim0](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s7[sqlsim0](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s43[CREATE TABLE sq](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s7[sqlsim0](8)
REG[6] =  i:4
REG[7] =   s43[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    3 0             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[t a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s29[CREATE TABLE "t](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s3[t a](8)
REG[2] =  i:2
REG[3] =   s29[CREATE TABLE "t](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s20[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:3
REG[3] =   s20[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[sqlsim0](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s43[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s7[sqlsim0](8)
REG[2] =  i:4
REG[3] =   s43[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [ATTACH 'test.db6' AS aux6;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0 test.db6      00 r[1]='test.db6'
REG[1] =   t8[test.db6](8)
   2 String8          0    2    0 aux6          00 r[2]='aux6'
REG[2] =   t4[aux6](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t8[test.db6](8)
REG[2] =   t4[aux6](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      2    0    2 0             00 usesStmtJournal=0
  13 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tbl](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s19[CREATE TABLE tb](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s3[tbl](8)
REG[2] =  i:2
REG[3] =   s19[CREATE TABLE tb](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s12[sqlite_stat1](8)
REG[2] =  i:3
REG[3] =   s39[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      2    0    2 0             00 usesStmtJournal=0
  12 TableLock        2    3    0 sqlite_stat1  00 iDb=2 root=3 write=0
  13 Goto             0    1    0               00 
   1 OpenRead         0    3    2 3             00 root=3 iDb=2; sqlite_stat1
   2 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_stat1.tbl
REG[1] =   s3[tbl](8)
   5 Column           0    1    2               00 r[2]=sqlite_stat1.idx
REG[2] =  NULL
   6 Column           0    2    3               00 r[3]=sqlite_stat1.stat
REG[3] =   s1[3](8)
   7 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s3[tbl](8)
REG[2] =  NULL
REG[3] =   s1[3](8)
   8 Next             0    4    0               01 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [;
pragma locking_mode=exclusive ;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0 exclusive     00 r[1]='exclusive'
REG[1] =   t9[exclusive](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t9[exclusive](8)
   3 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    3 0             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[t a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s29[CREATE TABLE "t](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s3[t a](8)
REG[2] =  i:2
REG[3] =   s29[CREATE TABLE "t](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s20[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:3
REG[3] =   s20[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[sqlsim0](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s43[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s7[sqlsim0](8)
REG[2] =  i:4
REG[3] =   s43[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [CREATE TABLE c(db12, one, two);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    3 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:4
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:4
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:4
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 c             00 r[7]='c'
REG[7] =   t1[c](8)
  21 String8          0    8    0 c             00 r[8]='c'
REG[8] =   t1[c](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  23 String8          0   10    0 CREATE TABLE c(db12, one, two) 00 r[10]='CREATE TABLE c(db12, one, two)'
REG[10] =   t30[CREATE TABLE c(](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s44[06170F0F01497461626C656363054352.....Itablecc.CR](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s44[06170F0F01497461626C656363054352.....Itablecc.CR](8)
REG[5] =  i:4
  26 Close            1    0    0               00 
  27 SetCookie        0    1    4               00 
  28 ParseSchema      0    0    0 tbl_name='c' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 c             00 r[2]='c'
REG[2] =   t1[c](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[c](8)
REG[1] =   s3[t a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[c](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[c](8)
REG[1] =   s7[sqlsim0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[c](8)
REG[1] =   s1[c](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[c](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s30[CREATE TABLE c(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[c](8)
REG[6] =  i:5
REG[7] =   s30[CREATE TABLE c(](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;
PRAGMA freelist_count;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Transaction      0    0    0               00 
   2 ReadCookie       0    1    0               00 
REG[1] =  i:0
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   4 Halt             0    0    0               00 
SQL: [ATTACH DATABASE 'test.db' AS two;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0 test.db       00 r[1]='test.db'
REG[1] =   t7[test.db](8)
   2 String8          0    2    0 two           00 r[2]='two'
REG[2] =   t3[two](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t7[test.db](8)
REG[2] =   t3[two](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      3    0    4 0             00 usesStmtJournal=0
  13 TableLock        3    1    0 sqlite_master 00 iDb=3 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    3 5             00 root=1 iDb=3; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s12[sqlite_stat1](8)
REG[2] =  i:2
REG[3] =   s39[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[c03](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s19[CREATE TABLE c0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s3[c03](8)
REG[2] =  i:4
REG[3] =   s19[CREATE TABLE c0](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      3    0    4 0             00 usesStmtJournal=0
  12 TableLock        3    2    0 sqlite_stat1  00 iDb=3 root=2 write=0
  13 Goto             0    1    0               00 
   1 OpenRead         0    2    3 3             00 root=2 iDb=3; sqlite_stat1
   2 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_stat1.tbl
REG[1] =   s2[t2](8)
   5 Column           0    1    2               00 r[2]=sqlite_stat1.idx
REG[2] =   s2[x8](8)
   6 Column           0    2    3               00 r[3]=sqlite_stat1.stat
REG[3] =   s11[9819 2455 3](8)
   7 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t2](8)
REG[2] =   s2[x8](8)
REG[3] =   s11[9819 2455 3](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_stat1.tbl
REG[1] =   s2[t2](8)
   5 Column           0    1    2               00 r[2]=sqlite_stat1.idx
REG[2] =   s4[t3x6](8)
   6 Column           0    2    3               00 r[3]=sqlite_stat1.stat
REG[3] =   s7[569 285](8)
   7 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t2](8)
REG[2] =   s4[t3x6](8)
REG[3] =   s7[569 285](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_stat1.tbl
REG[1] =   s2[t2](8)
   5 Column           0    1    2               00 r[2]=sqlite_stat1.idx
REG[2] =   s4[t3x0](8)
   6 Column           0    2    3               00 r[3]=sqlite_stat1.stat
REG[3] =   s5[569 1](8)
   7 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t2](8)
REG[2] =   s4[t3x0](8)
REG[3] =   s5[569 1](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_stat1.tbl
REG[1] =   s2[t1](8)
   5 Column           0    1    2               00 r[2]=sqlite_stat1.idx
REG[2] =   s5[t1abc](8)
   6 Column           0    2    3               00 r[3]=sqlite_stat1.stat
REG[3] =   s18[10000 5000 2000](8)
   7 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =   s5[t1abc](8)
REG[3] =   s18[10000 5000 2000](8)
   8 Next             0    4    0               01 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [PRAGMA auto_vacuum = incremental;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='c' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 0             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 c             00 r[2]='c'
REG[2] =   t1[c](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[c](8)
REG[1] =   s3[t a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[c](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[c](8)
REG[1] =   s7[sqlsim0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[c](8)
REG[1] =   s1[c](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[c](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s30[CREATE TABLE c(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[c](8)
REG[6] =  i:5
REG[7] =   s30[CREATE TABLE c(](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [CREATE TABLE t0(t3, i1, t5);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    4 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:6
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:5
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:5
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:5
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:5
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:5
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t0            00 r[7]='t0'
REG[7] =   t2[t0](8)
  21 String8          0    8    0 t0            00 r[8]='t0'
REG[8] =   t2[t0](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:6
  23 String8          0   10    0 CREATE TABLE t0(t3, i1, t5) 00 r[10]='CREATE TABLE t0(t3, i1, t5)'
REG[10] =   t27[CREATE TABLE t0](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s43[0617111101437461626C657430743006.....Ctablet0t0.](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s43[0617111101437461626C657430743006.....Ctablet0t0.](8)
REG[5] =  i:5
  26 Close            1    0    0               00 
  27 SetCookie        0    1    5               00 
  28 ParseSchema      0    0    0 tbl_name='t0' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    5 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t0            00 r[2]='t0'
REG[2] =   t2[t0](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s3[t a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s7[sqlsim0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s2[t0](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t0](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:6
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s27[CREATE TABLE t0](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t0](8)
REG[6] =  i:6
REG[7] =   s27[CREATE TABLE t0](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [DETACH DATABASE two;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
   3 String8          0    3    0 two           00 r[3]='two'
REG[3] =   t3[two](8)
   4 Function0        0    3    4 sqlite_detach(1) 01 r[4]=func(r[3])
REG[3] =   t3[two](8)
REG[4] =  NULL
   5 Expire           0    0    0               00 
   6 Halt             0    0    0               00 
SQL: [CREATE TABLE y(t4, foo, yy);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    5 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:7
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:6
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:6
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:6
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:6
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:6
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 y             00 r[7]='y'
REG[7] =   t1[y](8)
  21 String8          0    8    0 y             00 r[8]='y'
REG[8] =   t1[y](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:7
  23 String8          0   10    0 CREATE TABLE y(t4, foo, yy) 00 r[10]='CREATE TABLE y(t4, foo, yy)'
REG[10] =   t27[CREATE TABLE y(](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s41[06170F0F01437461626C657979074352.....Ctableyy.CR](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s41[06170F0F01437461626C657979074352.....Ctableyy.CR](8)
REG[5] =  i:6
  26 Close            1    0    0               00 
  27 SetCookie        0    1    6               00 
  28 ParseSchema      0    0    0 tbl_name='y' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 y             00 r[2]='y'
REG[2] =   t1[y](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s3[t a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s7[sqlsim0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s1[y](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[y](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:7
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s27[CREATE TABLE y(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[y](8)
REG[6] =  i:7
REG[7] =   s27[CREATE TABLE y(](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [CREATE VIEW tkt3376 AS SELECT t1+1,t1+1 FROM tkt3376;]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    6 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:7
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:7
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:7
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:7
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:7
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:7
  19 String8          0    6    0 view          00 r[6]='view'
REG[6] =   t4[view](8)
  20 String8          0    7    0 tkt3376       00 r[7]='tkt3376'
REG[7] =   t7[tkt3376](8)
  21 String8          0    8    0 tkt3376       00 r[8]='tkt3376'
REG[8] =   t7[tkt3376](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:0
  23 String8          0   10    0 CREATE VIEW tkt3376 AS SELECT t1+1,t1+1 FROM tkt3376 00 r[10]='CREATE VIEW tkt3376 AS SELECT t1+1,t1+1 FROM tkt3376'
REG[10] =   t52[CREATE VIEW tkt](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s76[06151B1B087576696577746B74333337.....uviewtkt337](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s76[06151B1B087576696577746B74333337.....uviewtkt337](8)
REG[5] =  i:7
  26 Close            1    0    0               00 
  27 SetCookie        0    1    7               00 
  28 ParseSchema      0    0    0 tbl_name='tkt3376' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    7 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 tkt3376       00 r[2]='tkt3376'
REG[2] =   t7[tkt3376](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[tkt3376](8)
REG[1] =   s3[t a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[tkt3376](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[tkt3376](8)
REG[1] =   s7[sqlsim0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[tkt3376](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[tkt3376](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[tkt3376](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[tkt3376](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[tkt3376](8)
REG[1] =   s7[tkt3376](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s4[view](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s4[view](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s7[tkt3376](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:0
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s52[CREATE VIEW tkt](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s7[tkt3376](8)
REG[6] =  i:0
REG[7] =   s52[CREATE VIEW tkt](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [VACUUM;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Vacuum           0    0    0               00 
SQL: [ATTACH '' AS vacuum_db;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0               00 r[1]=''
REG[1] =   t0[](8)
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
REG[2] =   t9[vacuum_db](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t0[](8)
REG[2] =   t9[vacuum_db](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      3    0    0 0             00 usesStmtJournal=0
  13 TableLock        3    1    0 sqlite_master 00 iDb=3 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    3 5             00 root=1 iDb=3; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [PRAGMA vacuum_db.synchronous=OFF]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [SELECT 'CREATE TABLE vacuum_db.' || substr(sql,14)   FROM sqlite_master WHERE type='table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    7 0             01 usesStmtJournal=0
  20 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  21 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  22 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  23 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  24 String8          0    8    0 CREATE TABLE vacuum_db. 00 r[8]='CREATE TABLE vacuum_db.'
REG[8] =   t23[CREATE TABLE va](8)
  25 Integer         14   10    0               00 r[10]=14
REG[10] =  i:14
  26 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   17    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s3[t a](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s3[t a](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:2
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:2
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s29[CREATE TABLE "t](8)
  13 Function0        2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s29[CREATE TABLE "t](8)
REG[10] =  i:14
REG[5] =   s16["t a" ("""cb"""](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s16["t a" ("""cb"""](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s39[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s39[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db."t a" ("""cb""")]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      3    1    0 0             01 usesStmtJournal=0
  31 TableLock        3    1    1 sqlite_master 00 iDb=3 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       3    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        3    2    4               00 
   4 SetCookie        3    5    1               00 
   5 CreateTable      3    2    0               00 r[2]=root iDb=3
REG[2] =  i:3
   6 OpenWrite        0    1    3 5             00 root=1 iDb=3
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    3 5             00 root=1 iDb=3; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:1
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:1
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:1
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t a           00 r[7]='t a'
REG[7] =   t3[t a](8)
  21 String8          0    8    0 t a           00 r[8]='t a'
REG[8] =   t3[t a](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  23 String8          0   10    0 CREATE TABLE "t a" ("""cb""") 00 r[10]='CREATE TABLE "t a" ("""cb""")'
REG[10] =   t29[CREATE TABLE "t](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s47[0617131301477461626C657420617420.....Gtablet at ](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s47[0617131301477461626C657420617420.....Gtablet at ](8)
REG[5] =  i:1
  26 Close            1    0    0               00 
  27 SetCookie        3    1    1               00 
  28 ParseSchema      3    0    0 tbl_name='t a' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      3    0    1 0             00 usesStmtJournal=0
  17 TableLock        3    1    0 sqlite_master 00 iDb=3 root=1 write=0
  18 String8          0    2    0 t a           00 r[2]='t a'
REG[2] =   t3[t a](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    3 5             00 root=1 iDb=3; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[t a](8)
REG[1] =   s3[t a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s3[t a](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s29[CREATE TABLE "t](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s3[t a](8)
REG[6] =  i:3
REG[7] =   s29[CREATE TABLE "t](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s1[a](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s1[a](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:3
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:3
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s20[CREATE TABLE a(](8)
  13 Function         2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s20[CREATE TABLE a(](8)
REG[10] =  i:14
REG[5] =   s7[a(b, x)](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s7[a(b, x)](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s30[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s30[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.a(b, x)]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      3    1    1 0             01 usesStmtJournal=0
  31 TableLock        3    1    1 sqlite_master 00 iDb=3 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       3    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      3    2    0               00 r[2]=root iDb=3
REG[2] =  i:4
   6 OpenWrite        0    1    3 5             00 root=1 iDb=3
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    3 5             00 root=1 iDb=3; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:2
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:2
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:2
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 a             00 r[7]='a'
REG[7] =   t1[a](8)
  21 String8          0    8    0 a             00 r[8]='a'
REG[8] =   t1[a](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  23 String8          0   10    0 CREATE TABLE a(b, x) 00 r[10]='CREATE TABLE a(b, x)'
REG[10] =   t20[CREATE TABLE a(](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s34[06170F0F01357461626C656161044352.....5tableaa.CR](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s34[06170F0F01357461626C656161044352.....5tableaa.CR](8)
REG[5] =  i:2
  26 Close            1    0    0               00 
  27 SetCookie        3    1    2               00 
  28 ParseSchema      3    0    0 tbl_name='a' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      3    0    2 0             00 usesStmtJournal=0
  17 TableLock        3    1    0 sqlite_master 00 iDb=3 root=1 write=0
  18 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    3 5             00 root=1 iDb=3; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s3[t a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[a](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s20[CREATE TABLE a(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[a](8)
REG[6] =  i:4
REG[7] =   s20[CREATE TABLE a(](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s7[sqlsim0](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s7[sqlsim0](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:4
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:4
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s43[CREATE TABLE sq](8)
  13 Function         2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s43[CREATE TABLE sq](8)
REG[10] =  i:14
REG[5] =   s30[sqlsim0(sqlsim1](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s30[sqlsim0(sqlsim1](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s53[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s53[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.sqlsim0(sqlsim1, t2, newtable)]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      3    1    2 0             01 usesStmtJournal=0
  31 TableLock        3    1    1 sqlite_master 00 iDb=3 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       3    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      3    2    0               00 r[2]=root iDb=3
REG[2] =  i:5
   6 OpenWrite        0    1    3 5             00 root=1 iDb=3
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    3 5             00 root=1 iDb=3; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:3
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:3
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:3
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 sqlsim0       00 r[7]='sqlsim0'
REG[7] =   t7[sqlsim0](8)
  21 String8          0    8    0 sqlsim0       00 r[8]='sqlsim0'
REG[8] =   t7[sqlsim0](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  23 String8          0   10    0 CREATE TABLE sqlsim0(sqlsim1, t2, newtable) 00 r[10]='CREATE TABLE sqlsim0(sqlsim1, t2, newtable)'
REG[10] =   t43[CREATE TABLE sq](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s69[06171B1B01637461626C6573716C7369.....ctablesqlsi](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s69[06171B1B01637461626C6573716C7369.....ctablesqlsi](8)
REG[5] =  i:3
  26 Close            1    0    0               00 
  27 SetCookie        3    1    3               00 
  28 ParseSchema      3    0    0 tbl_name='sqlsim0' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      3    0    3 0             00 usesStmtJournal=0
  17 TableLock        3    1    0 sqlite_master 00 iDb=3 root=1 write=0
  18 String8          0    2    0 sqlsim0       00 r[2]='sqlsim0'
REG[2] =   t7[sqlsim0](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    3 5             00 root=1 iDb=3; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[sqlsim0](8)
REG[1] =   s3[t a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[sqlsim0](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[sqlsim0](8)
REG[1] =   s7[sqlsim0](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s7[sqlsim0](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s43[CREATE TABLE sq](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s7[sqlsim0](8)
REG[6] =  i:5
REG[7] =   s43[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s1[c](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s1[c](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:5
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:5
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:5
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s30[CREATE TABLE c(](8)
  13 Function         2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s30[CREATE TABLE c(](8)
REG[10] =  i:14
REG[5] =   s17[c(db12, one, tw](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s17[c(db12, one, tw](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s40[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s40[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.c(db12, one, two)]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      3    1    3 0             01 usesStmtJournal=0
  31 TableLock        3    1    1 sqlite_master 00 iDb=3 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       3    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      3    2    0               00 r[2]=root iDb=3
REG[2] =  i:6
   6 OpenWrite        0    1    3 5             00 root=1 iDb=3
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    3 5             00 root=1 iDb=3; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:4
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:4
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:4
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 c             00 r[7]='c'
REG[7] =   t1[c](8)
  21 String8          0    8    0 c             00 r[8]='c'
REG[8] =   t1[c](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:6
  23 String8          0   10    0 CREATE TABLE c(db12, one, two) 00 r[10]='CREATE TABLE c(db12, one, two)'
REG[10] =   t30[CREATE TABLE c(](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s44[06170F0F01497461626C656363064352.....Itablecc.CR](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s44[06170F0F01497461626C656363064352.....Itablecc.CR](8)
REG[5] =  i:4
  26 Close            1    0    0               00 
  27 SetCookie        3    1    4               00 
  28 ParseSchema      3    0    0 tbl_name='c' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      3    0    4 0             00 usesStmtJournal=0
  17 TableLock        3    1    0 sqlite_master 00 iDb=3 root=1 write=0
  18 String8          0    2    0 c             00 r[2]='c'
REG[2] =   t1[c](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    3 5             00 root=1 iDb=3; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[c](8)
REG[1] =   s3[t a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[c](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[c](8)
REG[1] =   s7[sqlsim0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[c](8)
REG[1] =   s1[c](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[c](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:6
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s30[CREATE TABLE c(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[c](8)
REG[6] =  i:6
REG[7] =   s30[CREATE TABLE c(](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t0](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[t0](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:6
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:6
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:6
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s27[CREATE TABLE t0](8)
  13 Function         2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s27[CREATE TABLE t0](8)
REG[10] =  i:14
REG[5] =   s14[t0(t3, i1, t5)](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s14[t0(t3, i1, t5)](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s37[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s37[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.t0(t3, i1, t5)]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      3    1    4 0             01 usesStmtJournal=0
  31 TableLock        3    1    1 sqlite_master 00 iDb=3 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       3    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      3    2    0               00 r[2]=root iDb=3
REG[2] =  i:7
   6 OpenWrite        0    1    3 5             00 root=1 iDb=3
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:5
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    3 5             00 root=1 iDb=3; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:5
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:5
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:5
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:5
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t0            00 r[7]='t0'
REG[7] =   t2[t0](8)
  21 String8          0    8    0 t0            00 r[8]='t0'
REG[8] =   t2[t0](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:7
  23 String8          0   10    0 CREATE TABLE t0(t3, i1, t5) 00 r[10]='CREATE TABLE t0(t3, i1, t5)'
REG[10] =   t27[CREATE TABLE t0](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s43[0617111101437461626C657430743007.....Ctablet0t0.](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s43[0617111101437461626C657430743007.....Ctablet0t0.](8)
REG[5] =  i:5
  26 Close            1    0    0               00 
  27 SetCookie        3    1    5               00 
  28 ParseSchema      3    0    0 tbl_name='t0' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      3    0    5 0             00 usesStmtJournal=0
  17 TableLock        3    1    0 sqlite_master 00 iDb=3 root=1 write=0
  18 String8          0    2    0 t0            00 r[2]='t0'
REG[2] =   t2[t0](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    3 5             00 root=1 iDb=3; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s3[t a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s7[sqlsim0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s2[t0](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t0](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:7
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s27[CREATE TABLE t0](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t0](8)
REG[6] =  i:7
REG[7] =   s27[CREATE TABLE t0](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s1[y](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s1[y](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:7
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:7
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:7
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s27[CREATE TABLE y(](8)
  13 Function         2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s27[CREATE TABLE y(](8)
REG[10] =  i:14
REG[5] =   s14[y(t4, foo, yy)](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s14[y(t4, foo, yy)](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s37[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s37[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.y(t4, foo, yy)]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      3    1    5 0             01 usesStmtJournal=0
  31 TableLock        3    1    1 sqlite_master 00 iDb=3 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       3    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      3    2    0               00 r[2]=root iDb=3
REG[2] =  i:8
   6 OpenWrite        0    1    3 5             00 root=1 iDb=3
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:6
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    3 5             00 root=1 iDb=3; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:6
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:6
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:6
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:6
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 y             00 r[7]='y'
REG[7] =   t1[y](8)
  21 String8          0    8    0 y             00 r[8]='y'
REG[8] =   t1[y](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:8
  23 String8          0   10    0 CREATE TABLE y(t4, foo, yy) 00 r[10]='CREATE TABLE y(t4, foo, yy)'
REG[10] =   t27[CREATE TABLE y(](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s41[06170F0F01437461626C657979084352.....Ctableyy.CR](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s41[06170F0F01437461626C657979084352.....Ctableyy.CR](8)
REG[5] =  i:6
  26 Close            1    0    0               00 
  27 SetCookie        3    1    6               00 
  28 ParseSchema      3    0    0 tbl_name='y' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      3    0    6 0             00 usesStmtJournal=0
  17 TableLock        3    1    0 sqlite_master 00 iDb=3 root=1 write=0
  18 String8          0    2    0 y             00 r[2]='y'
REG[2] =   t1[y](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    3 5             00 root=1 iDb=3; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s3[t a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s7[sqlsim0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s1[y](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[y](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:8
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s27[CREATE TABLE y(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[y](8)
REG[6] =  i:8
REG[7] =   s27[CREATE TABLE y(](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s4[view](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s4[view](8)
  16 Next             0    4    0               01 
  17 Close            0    0    0               00 
  18 Halt             0    0    0               00 
SQL: [SELECT 'CREATE INDEX vacuum_db.' || substr(sql,14)  FROM sqlite_master WHERE sql LIKE 'CREATE INDEX %' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    7 0             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE INDEX % 00 r[2]='CREATE INDEX %'
REG[2] =   t14[CREATE INDEX %](8)
  17 String8          0    5    0 CREATE INDEX vacuum_db. 00 r[5]='CREATE INDEX vacuum_db.'
REG[5] =   t23[CREATE INDEX va](8)
  18 Integer         14    7    0               00 r[7]=14
REG[7] =  i:14
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s29[CREATE TABLE "t](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s29[CREATE TABLE "t](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s20[CREATE TABLE a(](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s20[CREATE TABLE a(](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s43[CREATE TABLE sq](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s43[CREATE TABLE sq](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s30[CREATE TABLE c(](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s30[CREATE TABLE c(](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE TABLE t0](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s27[CREATE TABLE t0](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE TABLE y(](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s27[CREATE TABLE y(](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s52[CREATE VIEW tkt](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s52[CREATE VIEW tkt](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'CREATE UNIQUE INDEX vacuum_db.' || substr(sql,21)   FROM sqlite_master WHERE sql LIKE 'CREATE UNIQUE INDEX %']
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    7 0             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE UNIQUE INDEX % 00 r[2]='CREATE UNIQUE INDEX %'
REG[2] =   t21[CREATE UNIQUE I](8)
  17 String8          0    5    0 CREATE UNIQUE INDEX vacuum_db. 00 r[5]='CREATE UNIQUE INDEX vacuum_db.'
REG[5] =   t30[CREATE UNIQUE I](8)
  18 Integer         21    7    0               00 r[7]=21
REG[7] =  i:21
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s29[CREATE TABLE "t](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s29[CREATE TABLE "t](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s20[CREATE TABLE a(](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s20[CREATE TABLE a(](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s43[CREATE TABLE sq](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s43[CREATE TABLE sq](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s30[CREATE TABLE c(](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s30[CREATE TABLE c(](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE TABLE t0](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s27[CREATE TABLE t0](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE TABLE y(](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s27[CREATE TABLE y(](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s52[CREATE VIEW tkt](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s52[CREATE VIEW tkt](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';'FROM main.sqlite_master WHERE type = 'table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    0    7 0             01 usesStmtJournal=0
  25 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  26 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  27 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  28 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  29 String8          0   10    0 INSERT INTO vacuum_db. 00 r[10]='INSERT INTO vacuum_db.'
REG[10] =   t22[INSERT INTO vac](8)
  30 String8          0   13    0  SELECT * FROM main. 00 r[13]=' SELECT * FROM main.'
REG[13] =   t20[ SELECT * FROM ](8)
  31 String8          0   14    0 ;             00 r[14]=';'
REG[14] =   t1[;](8)
  32 Goto             0    1    0               00 
   1 OpenRead         0    1    0 4             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   22    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s3[t a](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s3[t a](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:2
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:2
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s3[t a](8)
  13 Function0        0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s3[t a](8)
REG[11] =   z5['t a'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z5['t a'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s27[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s27[INSERT INTO vac](8)
REG[8] =   s47[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s3[t a](8)
  17 Function0        0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s3[t a](8)
REG[9] =   z5['t a'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z5['t a'](8)
REG[8] =   s47[INSERT INTO vac](8)
REG[5] =   s52[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s52[INSERT INTO vac](8)
REG[7] =   s53[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s53[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'t a' SELECT * FROM main.'t a';]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    7 0             01 usesStmtJournal=0
  12 Transaction      3    1    6 0             01 usesStmtJournal=0
  13 TableLock        3    3    1 t a           00 iDb=3 root=3 write=1
  14 TableLock        0    2    0 t a           00 iDb=0 root=2 write=0
  15 Goto             0    1    0               00 
   1 OpenWrite        1    3    3 1             00 root=3 iDb=3; t a
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t a
   3 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s1[a](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s1[a](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:3
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:3
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s1[a](8)
  13 Function         0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s1[a](8)
REG[11] =   z3['a'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z3['a'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s25[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s25[INSERT INTO vac](8)
REG[8] =   s45[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s1[a](8)
  17 Function         0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s1[a](8)
REG[9] =   z3['a'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z3['a'](8)
REG[8] =   s45[INSERT INTO vac](8)
REG[5] =   s48[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s48[INSERT INTO vac](8)
REG[7] =   s49[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s49[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'a' SELECT * FROM main.'a';]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    7 0             01 usesStmtJournal=0
  12 Transaction      3    1    6 0             01 usesStmtJournal=0
  13 TableLock        3    4    1 a             00 iDb=3 root=4 write=1
  14 TableLock        0    3    0 a             00 iDb=0 root=3 write=0
  15 Goto             0    1    0               00 
   1 OpenWrite        1    4    3 2             00 root=4 iDb=3; a
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; a
   3 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s7[sqlsim0](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s7[sqlsim0](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:4
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:4
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s7[sqlsim0](8)
  13 Function         0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s7[sqlsim0](8)
REG[11] =   z9['sqlsim0'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z9['sqlsim0'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s31[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s31[INSERT INTO vac](8)
REG[8] =   s51[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s7[sqlsim0](8)
  17 Function         0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s7[sqlsim0](8)
REG[9] =   z9['sqlsim0'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z9['sqlsim0'](8)
REG[8] =   s51[INSERT INTO vac](8)
REG[5] =   s60[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s60[INSERT INTO vac](8)
REG[7] =   s61[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s61[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'sqlsim0' SELECT * FROM main.'sqlsim0';]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    7 0             01 usesStmtJournal=0
  12 Transaction      3    1    6 0             01 usesStmtJournal=0
  13 TableLock        3    5    1 sqlsim0       00 iDb=3 root=5 write=1
  14 TableLock        0    4    0 sqlsim0       00 iDb=0 root=4 write=0
  15 Goto             0    1    0               00 
   1 OpenWrite        1    5    3 3             00 root=5 iDb=3; sqlsim0
   2 OpenRead         0    4    0 3             00 root=4 iDb=0; sqlsim0
   3 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s1[c](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s1[c](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:5
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:5
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:5
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s1[c](8)
  13 Function         0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s1[c](8)
REG[11] =   z3['c'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z3['c'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s25[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s25[INSERT INTO vac](8)
REG[8] =   s45[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s1[c](8)
  17 Function         0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s1[c](8)
REG[9] =   z3['c'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z3['c'](8)
REG[8] =   s45[INSERT INTO vac](8)
REG[5] =   s48[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s48[INSERT INTO vac](8)
REG[7] =   s49[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s49[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'c' SELECT * FROM main.'c';]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    7 0             01 usesStmtJournal=0
  12 Transaction      3    1    6 0             01 usesStmtJournal=0
  13 TableLock        3    6    1 c             00 iDb=3 root=6 write=1
  14 TableLock        0    5    0 c             00 iDb=0 root=5 write=0
  15 Goto             0    1    0               00 
   1 OpenWrite        1    6    3 3             00 root=6 iDb=3; c
   2 OpenRead         0    5    0 3             00 root=5 iDb=0; c
   3 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t0](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[t0](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:6
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:6
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:6
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[t0](8)
  13 Function         0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s2[t0](8)
REG[11] =   z4['t0'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z4['t0'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s26[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s26[INSERT INTO vac](8)
REG[8] =   s46[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[t0](8)
  17 Function         0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s2[t0](8)
REG[9] =   z4['t0'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z4['t0'](8)
REG[8] =   s46[INSERT INTO vac](8)
REG[5] =   s50[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s50[INSERT INTO vac](8)
REG[7] =   s51[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s51[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'t0' SELECT * FROM main.'t0';]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    7 0             01 usesStmtJournal=0
  12 Transaction      3    1    6 0             01 usesStmtJournal=0
  13 TableLock        3    7    1 t0            00 iDb=3 root=7 write=1
  14 TableLock        0    6    0 t0            00 iDb=0 root=6 write=0
  15 Goto             0    1    0               00 
   1 OpenWrite        1    7    3 3             00 root=7 iDb=3; t0
   2 OpenRead         0    6    0 3             00 root=6 iDb=0; t0
   3 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s1[y](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s1[y](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:7
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:7
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:7
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s1[y](8)
  13 Function         0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s1[y](8)
REG[11] =   z3['y'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z3['y'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s25[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s25[INSERT INTO vac](8)
REG[8] =   s45[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s1[y](8)
  17 Function         0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s1[y](8)
REG[9] =   z3['y'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z3['y'](8)
REG[8] =   s45[INSERT INTO vac](8)
REG[5] =   s48[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s48[INSERT INTO vac](8)
REG[7] =   s49[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s49[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'y' SELECT * FROM main.'y';]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    7 0             01 usesStmtJournal=0
  12 Transaction      3    1    6 0             01 usesStmtJournal=0
  13 TableLock        3    8    1 y             00 iDb=3 root=8 write=1
  14 TableLock        0    7    0 y             00 iDb=0 root=7 write=0
  15 Goto             0    1    0               00 
   1 OpenWrite        1    8    3 3             00 root=8 iDb=3; y
   2 OpenRead         0    7    0 3             00 root=7 iDb=0; y
   3 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s4[view](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s4[view](8)
  21 Next             0    4    0               01 
  22 Close            0    0    0               00 
  23 Halt             0    0    0               00 
SQL: [SELECT 'DELETE FROM vacuum_db.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name='sqlite_sequence' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      3    0    6 0             01 usesStmtJournal=0
  15 TableLock        3    1    0 sqlite_master 00 iDb=3 root=1 write=0
  16 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  17 String8          0    5    0 DELETE FROM vacuum_db. 00 r[5]='DELETE FROM vacuum_db.'
REG[5] =   t22[DELETE FROM vac](8)
  18 String8          0    8    0 ;             00 r[8]=';'
REG[8] =   t1[;](8)
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    3 2             00 root=1 iDb=3; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[t a](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s3[t a](8)
  11 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s1[a](8)
  11 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[sqlsim0](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s7[sqlsim0](8)
  11 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s1[c](8)
  11 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t0](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t0](8)
  11 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[y](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s1[y](8)
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name=='sqlite_sequence';]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      3    0    6 0             01 usesStmtJournal=0
  19 TableLock        3    1    0 sqlite_master 00 iDb=3 root=1 write=0
  20 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  21 String8          0    7    0 INSERT INTO vacuum_db. 00 r[7]='INSERT INTO vacuum_db.'
REG[7] =   t22[INSERT INTO vac](8)
  22 String8          0   10    0  SELECT * FROM main. 00 r[10]=' SELECT * FROM main.'
REG[10] =   t20[ SELECT * FROM ](8)
  23 String8          0   11    0 ;             00 r[11]=';'
REG[11] =   t1[;](8)
  24 Goto             0    1    0               00 
   1 OpenRead         0    1    3 2             00 root=1 iDb=3; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   16    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[t a](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s3[t a](8)
  15 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s1[a](8)
  15 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[sqlsim0](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s7[sqlsim0](8)
  15 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s1[c](8)
  15 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t0](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t0](8)
  15 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[y](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s1[y](8)
  15 Next             0    4    0               01 
  16 Close            0    0    0               00 
  17 Halt             0    0    0               00 
SQL: [INSERT INTO vacuum_db.sqlite_master   SELECT type, name, tbl_name, rootpage, sql    FROM main.sqlite_master   WHERE type='view' OR type='trigger'      OR (type='table' AND rootpage=0)]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    0    7 0             01 usesStmtJournal=0
  29 Transaction      3    1    6 0             01 usesStmtJournal=0
  30 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  31 TableLock        3    1    1 sqlite_master 00 iDb=3 root=1 write=1
  32 String8          0    9    0 view          00 r[9]='view'
REG[9] =   t4[view](8)
  33 String8          0   11    0 trigger       00 r[11]='trigger'
REG[11] =   t7[trigger](8)
  34 String8          0   12    0 table         00 r[12]='table'
REG[12] =   t5[table](8)
  35 Integer          0   13    0               00 r[13]=0
REG[13] =  i:0
  36 Goto             0    1    0               00 
   1 InitCoroutine    7   20    2               00 
  20 OpenWrite        1    1    3 5             00 root=1 iDb=3; sqlite_master
  21 Yield            7   26    0               00 
REG[7] =  i:1
REG[7] =  i:21
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   18    0               00 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[table](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[table](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[table](8)
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
REG[10] =  i:2
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
REG[13] =  i:0
REG[10] =  i:2
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[table](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[table](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[table](8)
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
REG[10] =  i:3
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
REG[13] =  i:0
REG[10] =  i:3
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[table](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[table](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[table](8)
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
REG[10] =  i:4
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
REG[13] =  i:0
REG[10] =  i:4
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[table](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[table](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[table](8)
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
REG[10] =  i:5
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
REG[13] =  i:0
REG[10] =  i:5
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[table](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[table](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[table](8)
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
REG[10] =  i:6
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
REG[13] =  i:0
REG[10] =  i:6
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[table](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[table](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[table](8)
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
REG[10] =  i:7
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
REG[13] =  i:0
REG[10] =  i:7
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s4[view](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s4[view](8)
  11 Copy             8    2    0               00 r[2]=r[8]
REG[2] =   s4[view](8)
  12 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s7[tkt3376](8)
  13 Column           0    2    4               00 r[4]=sqlite_master.tbl_name
REG[4] =   s7[tkt3376](8)
  14 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:0
  15 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s52[CREATE VIEW tkt](8)
  16 Yield            7    0    0               00 
REG[7] =  i:21
REG[7] =  i:16
  22 NewRowid         1    1    0               00 r[1]=rowid
REG[1] =  i:7
  23 MakeRecord       2    5   14 BBBDB         00 r[14]=mkrec(r[2..6])
REG[14] =  s76[06151B1B087576696577746B74333337.....uviewtkt337](8)
  24 Insert           1   14    1 sqlite_master 1B intkey=r[1] data=r[14]
REG[14] =  s76[06151B1B087576696577746B74333337.....uviewtkt337](8)
REG[1] =  i:7
  25 Goto             0   21    0               00 
  21 Yield            7   26    0               00 
REG[7] =  i:16
REG[7] =  i:21
  17 Next             0    5    0               01 
  18 Close            0    0    0               00 
  19 EndCoroutine     7    0    0               00 
REG[7] =  i:21
  26 Noop             1    0    0               00 
  27 Halt             0    0    0               00 
   2 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    8 1             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[t a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s29[CREATE TABLE "t](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s3[t a](8)
REG[2] =  i:3
REG[3] =   s29[CREATE TABLE "t](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s20[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:4
REG[3] =   s20[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[sqlsim0](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s43[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s7[sqlsim0](8)
REG[2] =  i:5
REG[3] =   s43[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:6
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s30[CREATE TABLE c(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[c](8)
REG[2] =  i:6
REG[3] =   s30[CREATE TABLE c(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t0](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:7
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE TABLE t0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t0](8)
REG[2] =  i:7
REG[3] =   s27[CREATE TABLE t0](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[y](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:8
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE TABLE y(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[y](8)
REG[2] =  i:8
REG[3] =   s27[CREATE TABLE y(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[tkt3376](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s52[CREATE VIEW tkt](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s7[tkt3376](8)
REG[2] =  i:0
REG[3] =   s52[CREATE VIEW tkt](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      2    0    2 1             00 usesStmtJournal=0
  13 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tbl](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s19[CREATE TABLE tb](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s3[tbl](8)
REG[2] =  i:2
REG[3] =   s19[CREATE TABLE tb](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s12[sqlite_stat1](8)
REG[2] =  i:3
REG[3] =   s39[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      2    0    2 1             00 usesStmtJournal=0
  12 TableLock        2    3    0 sqlite_stat1  00 iDb=2 root=3 write=0
  13 Goto             0    1    0               00 
   1 OpenRead         0    3    2 3             00 root=3 iDb=2; sqlite_stat1
   2 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_stat1.tbl
REG[1] =   s3[tbl](8)
   5 Column           0    1    2               00 r[2]=sqlite_stat1.idx
REG[2] =  NULL
   6 Column           0    2    3               00 r[3]=sqlite_stat1.stat
REG[3] =   s1[3](8)
   7 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s3[tbl](8)
REG[2] =  NULL
REG[3] =   s1[3](8)
   8 Next             0    4    0               01 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
SQL: [PRAGMA journal_mode=PERSIST;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 JournalMode      2    1    1               00 
REG[1] =   t7[persist](8)
   2 JournalMode      0    1    1               00 
REG[1] =   t6[memory](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t6[memory](8)
   4 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    8 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s3[t a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s7[sqlsim0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[tkt3376](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s7[tkt3376](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='a' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    8 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s3[t a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[a](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s20[CREATE TABLE a(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[a](8)
REG[6] =  i:4
REG[7] =   s20[CREATE TABLE a(](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s7[sqlsim0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[tkt3376](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s7[tkt3376](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    8 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s3[t a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s7[sqlsim0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[tkt3376](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s7[tkt3376](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    8 1             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[t a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s29[CREATE TABLE "t](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s3[t a](8)
REG[2] =  i:3
REG[3] =   s29[CREATE TABLE "t](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s20[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:4
REG[3] =   s20[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[sqlsim0](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s43[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s7[sqlsim0](8)
REG[2] =  i:5
REG[3] =   s43[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:6
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s30[CREATE TABLE c(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[c](8)
REG[2] =  i:6
REG[3] =   s30[CREATE TABLE c(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t0](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:7
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE TABLE t0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t0](8)
REG[2] =  i:7
REG[3] =   s27[CREATE TABLE t0](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[y](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:8
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE TABLE y(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[y](8)
REG[2] =  i:8
REG[3] =   s27[CREATE TABLE y(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[tkt3376](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s52[CREATE VIEW tkt](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s7[tkt3376](8)
REG[2] =  i:0
REG[3] =   s52[CREATE VIEW tkt](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [PRAGMA secure_delete;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Int64            0    1    0 0             00 r[1]=0
REG[1] =  i:0
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   3 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE type='trigger' AND name='a' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    8 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  19 String8          0    4    0 a             00 r[4]='a'
REG[4] =   t1[a](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s4[view](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s4[view](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    8 1             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[t a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s29[CREATE TABLE "t](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s3[t a](8)
REG[2] =  i:3
REG[3] =   s29[CREATE TABLE "t](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s20[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:4
REG[3] =   s20[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[sqlsim0](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s43[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s7[sqlsim0](8)
REG[2] =  i:5
REG[3] =   s43[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:6
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s30[CREATE TABLE c(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[c](8)
REG[2] =  i:6
REG[3] =   s30[CREATE TABLE c(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t0](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:7
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE TABLE t0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t0](8)
REG[2] =  i:7
REG[3] =   s27[CREATE TABLE t0](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[y](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:8
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE TABLE y(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[y](8)
REG[2] =  i:8
REG[3] =   s27[CREATE TABLE y(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[tkt3376](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s52[CREATE VIEW tkt](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s7[tkt3376](8)
REG[2] =  i:0
REG[3] =   s52[CREATE VIEW tkt](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM 'temp'.sqlite_temp_master WHERE type='trigger' AND (name='a') ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      1    0    0 1             01 usesStmtJournal=0
  17 TableLock        1    1    0 sqlite_temp_master 00 iDb=1 root=1 write=0
  18 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  19 String8          0    4    0 a             00 r[4]='a'
REG[4] =   t1[a](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          0    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   14    0               00 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
COMMIT;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       1    0    0               00 
SQL: [;
PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    0    8 1             01 usesStmtJournal=0
  32 Transaction      1    0    0 1             01 usesStmtJournal=0
  33 Transaction      2    0    2 1             01 usesStmtJournal=0
  34 Goto             0    1    0               00 
   1 Integer        100    1    0               00 r[1]=100
REG[1] =  i:100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
REG[1] =  i:100
   4 IntegrityCk      2    8    1 ]             00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
REG[2] =  NULL
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
REG[1] =  i:100
  12 IntegrityCk      2    1    1 ]             01 
  13 IsNull           2   18    0               00 if r[2]==NULL goto 18
REG[2] =  NULL
  18 IfPos            1   20    0               00 if r[1]>0 then r[1]-=0, goto 20
REG[1] =  i:100
  20 IntegrityCk      2    3    1 [2,1]         02 
  21 IsNull           2   26    0               00 if r[2]==NULL goto 26
REG[2] =  NULL
  26 AddImm           1 -100    0               00 r[1]=r[1]+-100
REG[1] =  i:100
  27 If               1   30    0               00 
REG[1] =  i:0
  28 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
  29 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
  30 Halt             0    0    0               00 
SQL: [SELECT * FROM sqlsim0 AS sqlsim0, sqlsim0 AS t2;]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    8 1             01 usesStmtJournal=0
  20 TableLock        0    5    0 sqlsim0       00 iDb=0 root=5 write=0
  21 Goto             0    1    0               00 
   1 OpenRead         0    5    0 3             00 root=5 iDb=0; sqlsim0
   2 OpenRead         1    5    0 3             00 root=5 iDb=0; sqlsim0
   3 Explain          0    0    0 SCAN TABLE sqlsim0 AS sqlsim0 00 
   4 Rewind           0   16    0               00 
  16 Close            0    0    0               00 
  17 Close            1    0    0               00 
  18 Halt             0    0    0               00 
SQL: [SELECT x FROM a WHERE x = 't1' ORDER BY x;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    8 1             01 usesStmtJournal=0
  13 TableLock        0    4    0 a             00 iDb=0 root=4 write=0
  14 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  15 Goto             0    1    0               00 
   1 Noop             1    3    0               00 
   2 OpenRead         0    4    0 2             00 root=4 iDb=0; a
   3 Explain          0    0    0 SCAN TABLE a  00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
CREATE TABLE tx(x1,x2);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    8 1             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:9
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:8
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:8
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:8
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:8
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:8
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:8
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 tx            00 r[7]='tx'
REG[7] =   t2[tx](8)
  21 String8          0    8    0 tx            00 r[8]='tx'
REG[8] =   t2[tx](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:9
  23 String8          0   10    0 CREATE TABLE tx(x1,x2) 00 r[10]='CREATE TABLE tx(x1,x2)'
REG[10] =   t22[CREATE TABLE tx](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s38[0617111101397461626C657478747809.....9tabletxtx.](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s38[0617111101397461626C657478747809.....9tabletxtx.](8)
REG[5] =  i:8
  26 Close            1    0    0               00 
  27 SetCookie        0    1    9               00 
  28 ParseSchema      0    0    0 tbl_name='tx' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    9 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 tx            00 r[2]='tx'
REG[2] =   t2[tx](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[tx](8)
REG[1] =   s3[t a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[tx](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[tx](8)
REG[1] =   s7[sqlsim0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[tx](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[tx](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[tx](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[tkt3376](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[tx](8)
REG[1] =   s7[tkt3376](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[tx](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[tx](8)
REG[1] =   s2[tx](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[tx](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:9
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s22[CREATE TABLE tx](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[tx](8)
REG[6] =  i:9
REG[7] =   s22[CREATE TABLE tx](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [SELECT x FROM a ORDER BY '8.4'
  ;]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      0    0    9 1             01 usesStmtJournal=0
  19 TableLock        0    4    0 a             00 iDb=0 root=4 write=0
  20 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0    4    0 2             00 root=4 iDb=0; a
   3 Explain          0    0    0 SCAN TABLE a  00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 OpenPseudo       2    4    3               00 3 columns in r[4]
  12 SorterSort       1   17    0               00 
  17 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    9 1             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[t a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s29[CREATE TABLE "t](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s3[t a](8)
REG[2] =  i:3
REG[3] =   s29[CREATE TABLE "t](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s20[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:4
REG[3] =   s20[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[sqlsim0](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s43[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s7[sqlsim0](8)
REG[2] =  i:5
REG[3] =   s43[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:6
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s30[CREATE TABLE c(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[c](8)
REG[2] =  i:6
REG[3] =   s30[CREATE TABLE c(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t0](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:7
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE TABLE t0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t0](8)
REG[2] =  i:7
REG[3] =   s27[CREATE TABLE t0](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[y](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:8
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE TABLE y(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[y](8)
REG[2] =  i:8
REG[3] =   s27[CREATE TABLE y(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[tkt3376](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s52[CREATE VIEW tkt](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s7[tkt3376](8)
REG[2] =  i:0
REG[3] =   s52[CREATE VIEW tkt](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[tx](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:9
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s22[CREATE TABLE tx](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[tx](8)
REG[2] =  i:9
REG[3] =   s22[CREATE TABLE tx](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    0    9 1             01 usesStmtJournal=0
  32 Transaction      1    0    0 1             01 usesStmtJournal=0
  33 Transaction      2    0    2 1             01 usesStmtJournal=0
  34 Goto             0    1    0               00 
   1 Integer        100    1    0               00 r[1]=100
REG[1] =  i:100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
REG[1] =  i:100
   4 IntegrityCk      2    9    1 [0,8,7,6,5,4,3,1] 00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
REG[2] =  NULL
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
REG[1] =  i:100
  12 IntegrityCk      2    1    1 ]             01 
  13 IsNull           2   18    0               00 if r[2]==NULL goto 18
REG[2] =  NULL
  18 IfPos            1   20    0               00 if r[1]>0 then r[1]-=0, goto 20
REG[1] =  i:100
  20 IntegrityCk      2    3    1 [2,1]         02 
  21 IsNull           2   26    0               00 if r[2]==NULL goto 26
REG[2] =  NULL
  26 AddImm           1 -100    0               00 r[1]=r[1]+-100
REG[1] =  i:100
  27 If               1   30    0               00 
REG[1] =  i:0
  28 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
  29 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
  30 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    9 1             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[t a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s29[CREATE TABLE "t](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s3[t a](8)
REG[2] =  i:3
REG[3] =   s29[CREATE TABLE "t](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s20[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:4
REG[3] =   s20[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[sqlsim0](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s43[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s7[sqlsim0](8)
REG[2] =  i:5
REG[3] =   s43[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:6
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s30[CREATE TABLE c(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[c](8)
REG[2] =  i:6
REG[3] =   s30[CREATE TABLE c(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t0](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:7
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE TABLE t0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t0](8)
REG[2] =  i:7
REG[3] =   s27[CREATE TABLE t0](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[y](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:8
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE TABLE y(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[y](8)
REG[2] =  i:8
REG[3] =   s27[CREATE TABLE y(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[tkt3376](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s52[CREATE VIEW tkt](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s7[tkt3376](8)
REG[2] =  i:0
REG[3] =   s52[CREATE VIEW tkt](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[tx](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:9
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s22[CREATE TABLE tx](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[tx](8)
REG[2] =  i:9
REG[3] =   s22[CREATE TABLE tx](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [PRAGMA main.secure_delete=ON;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Int64            0    1    0 1             00 r[1]=1
REG[1] =  i:1
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   3 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='y' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    9 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 y             00 r[2]='y'
REG[2] =   t1[y](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s3[t a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s7[sqlsim0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s1[y](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[y](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:8
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s27[CREATE TABLE y(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[y](8)
REG[6] =  i:8
REG[7] =   s27[CREATE TABLE y(](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[tkt3376](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s7[tkt3376](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[tx](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s2[tx](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    9 1             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[t a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s29[CREATE TABLE "t](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s3[t a](8)
REG[2] =  i:3
REG[3] =   s29[CREATE TABLE "t](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s20[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:4
REG[3] =   s20[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[sqlsim0](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s43[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s7[sqlsim0](8)
REG[2] =  i:5
REG[3] =   s43[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:6
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s30[CREATE TABLE c(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[c](8)
REG[2] =  i:6
REG[3] =   s30[CREATE TABLE c(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t0](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:7
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE TABLE t0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t0](8)
REG[2] =  i:7
REG[3] =   s27[CREATE TABLE t0](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[y](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:8
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE TABLE y(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[y](8)
REG[2] =  i:8
REG[3] =   s27[CREATE TABLE y(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[tkt3376](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s52[CREATE VIEW tkt](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s7[tkt3376](8)
REG[2] =  i:0
REG[3] =   s52[CREATE VIEW tkt](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[tx](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:9
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s22[CREATE TABLE tx](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[tx](8)
REG[2] =  i:9
REG[3] =   s22[CREATE TABLE tx](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    9 1             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[t a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s29[CREATE TABLE "t](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s3[t a](8)
REG[2] =  i:3
REG[3] =   s29[CREATE TABLE "t](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s20[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:4
REG[3] =   s20[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[sqlsim0](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s43[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s7[sqlsim0](8)
REG[2] =  i:5
REG[3] =   s43[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:6
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s30[CREATE TABLE c(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[c](8)
REG[2] =  i:6
REG[3] =   s30[CREATE TABLE c(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t0](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:7
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE TABLE t0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t0](8)
REG[2] =  i:7
REG[3] =   s27[CREATE TABLE t0](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[y](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:8
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE TABLE y(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[y](8)
REG[2] =  i:8
REG[3] =   s27[CREATE TABLE y(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[tkt3376](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s52[CREATE VIEW tkt](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s7[tkt3376](8)
REG[2] =  i:0
REG[3] =   s52[CREATE VIEW tkt](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[tx](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:9
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s22[CREATE TABLE tx](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[tx](8)
REG[2] =  i:9
REG[3] =   s22[CREATE TABLE tx](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    9 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s3[t a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s7[sqlsim0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[tkt3376](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s7[tkt3376](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[tx](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[tx](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM 'temp'.sqlite_temp_master WHERE tbl_name='t1' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      1    0    0 1             01 usesStmtJournal=0
  15 TableLock        1    1    0 sqlite_temp_master 00 iDb=1 root=1 write=0
  16 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  17 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          0    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   12    0               00 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t2x' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    9 1             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 t2x           00 r[2]='t2x'
REG[2] =   t3[t2x](8)
  17 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t a](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t3[t2x](8)
REG[1] =   s3[t a](8)
  11 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t3[t2x](8)
REG[1] =   s1[a](8)
  11 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t3[t2x](8)
REG[1] =   s7[sqlsim0](8)
  11 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t3[t2x](8)
REG[1] =   s1[c](8)
  11 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t3[t2x](8)
REG[1] =   s2[t0](8)
  11 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t3[t2x](8)
REG[1] =   s1[y](8)
  11 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[tkt3376](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t3[t2x](8)
REG[1] =   s7[tkt3376](8)
  11 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[tx](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t3[t2x](8)
REG[1] =   s2[tx](8)
  11 Next             0    5    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    9 1             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[t a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s29[CREATE TABLE "t](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s3[t a](8)
REG[2] =  i:3
REG[3] =   s29[CREATE TABLE "t](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s20[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:4
REG[3] =   s20[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[sqlsim0](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s43[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s7[sqlsim0](8)
REG[2] =  i:5
REG[3] =   s43[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:6
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s30[CREATE TABLE c(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[c](8)
REG[2] =  i:6
REG[3] =   s30[CREATE TABLE c(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t0](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:7
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE TABLE t0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t0](8)
REG[2] =  i:7
REG[3] =   s27[CREATE TABLE t0](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[y](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:8
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE TABLE y(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[y](8)
REG[2] =  i:8
REG[3] =   s27[CREATE TABLE y(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[tkt3376](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s52[CREATE VIEW tkt](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s7[tkt3376](8)
REG[2] =  i:0
REG[3] =   s52[CREATE VIEW tkt](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[tx](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:9
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s22[CREATE TABLE tx](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[tx](8)
REG[2] =  i:9
REG[3] =   s22[CREATE TABLE tx](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [PRAGMA page_size = 1024 ;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [PRAGMA auto_vacuum = FULL ;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Transaction      0    1    0               00 
   2 ReadCookie       0    1    4               00 
REG[1] =  i:9
   3 If               1    5    0               00 
REG[1] =  i:9
   5 SetCookie        0    7    0               00 
   6 Halt             0    0    0               00 
SQL: [CREATE INDEX y1 ON y(foo COLLATE BINARY);]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      0    1    9 1             01 usesStmtJournal=0
  35 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  36 TableLock        0    8    1 y             00 iDb=0 root=8 write=1
  37 Goto             0    1    0               00 
   1 Noop             0   33    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:10
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:9
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 y1            00 r[4]='y1'
REG[4] =   t2[y1](8)
   7 String8          0    5    0 y             00 r[5]='y'
REG[5] =   t1[y](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:10
   9 String8          0    7    0 CREATE INDEX y1 ON y(foo COLLATE BINARY) 00 r[7]='CREATE INDEX y1 ON y(foo COLLATE BINARY)'
REG[7] =   t40[CREATE INDEX y1](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s55[0617110F015D696E6465787931790A43.....]indexy1y.C](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s55[0617110F015D696E6465787931790A43.....]indexy1y.C](8)
REG[2] =  i:9
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    1 k(2,B,)       00 
  14 OpenRead         1    8    0 3             00 root=8 iDb=0; y
  15 Rewind           1   21    0               00 
  21 OpenWrite        2    1    0 k(2,B,)       11 root=1 iDb=0
  22 SorterSort       3   27    0               00 
  27 Close            1    0    0               00 
  28 Close            2    0    0               00 
  29 Close            3    0    0               00 
  30 SetCookie        0    1   10               00 
  31 ParseSchema      0    0    0 name='y1' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0   10 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 y1            00 r[2]='y1'
REG[2] =   t2[y1](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y1](8)
REG[1] =   s3[t a](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y1](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y1](8)
REG[1] =   s7[sqlsim0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y1](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y1](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y1](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[tkt3376](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y1](8)
REG[1] =   s7[tkt3376](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[tx](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y1](8)
REG[1] =   s2[tx](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[y1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y1](8)
REG[1] =   s2[y1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s2[y1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:10
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s40[CREATE INDEX y1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[y1](8)
REG[6] =  i:10
REG[7] =   s40[CREATE INDEX y1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  32 Expire           0    0    0               00 
  33 Halt             0    0    0               00 
SQL: [PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0   63    0               00 Start at 63
  63 Transaction      0    0   10 1             01 usesStmtJournal=0
  64 Transaction      1    0    0 1             01 usesStmtJournal=0
  65 Transaction      2    0    2 1             01 usesStmtJournal=0
  66 TableLock        0    8    0 y             00 iDb=0 root=8 write=0
  67 Goto             0    1    0               00 
   1 Integer        100    1    0               00 r[1]=100
REG[1] =  i:100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
REG[1] =  i:100
   4 IntegrityCk      2   10    1 [0,8,10,7,6,5,4,3] 00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
REG[2] =  NULL
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
REG[1] =  i:100
  12 OpenRead         1    8    0 3             00 root=8 iDb=0; y
  13 OpenRead         2   10    0 k(2,B,)       00 root=10 iDb=0; y1
  14 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  15 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  16 Rewind           1   33    0               00 
  33 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  34 IfPos            1   36    0               00 if r[1]>0 then r[1]-=0, goto 36
REG[1] =  i:100
  36 Count            2    3    0               00 r[3]=count()
REG[3] =  i:0
  37 Eq               8   42    3               90 if r[8]==r[3] goto 42
REG[8] =  i:0
REG[3] =  i:0
  42 IfPos            1   44    0               00 if r[1]>0 then r[1]-=0, goto 44
REG[1] =  i:100
  44 IntegrityCk      2    1    1 ]             01 
  45 IsNull           2   50    0               00 if r[2]==NULL goto 50
REG[2] =  NULL
  50 IfPos            1   52    0               00 if r[1]>0 then r[1]-=0, goto 52
REG[1] =  i:100
  52 IntegrityCk      2    3    1 [2,1]         02 
  53 IsNull           2   58    0               00 if r[2]==NULL goto 58
REG[2] =  NULL
  58 AddImm           1 -100    0               00 r[1]=r[1]+-100
REG[1] =  i:100
  59 If               1   62    0               00 
REG[1] =  i:0
  60 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
  61 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
  62 Halt             0    0    0               00 
SQL: [;
REINDEX BINARY;]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      0    1   10 1             01 usesStmtJournal=0
  21 TableLock        0    8    1 y             00 iDb=0 root=8 write=1
  22 Goto             0    1    0               00 
   1 SorterOpen       2    0    1 k(2,B,)       00 
   2 OpenRead         0    8    0 3             00 root=8 iDb=0; y
   3 Rewind           0    9    0               00 
   9 Clear           10    0    0               00 
  10 OpenWrite        1   10    0 k(2,B,)       01 root=10 iDb=0
  11 SorterSort       2   16    0               00 
  16 Close            0    0    0               00 
  17 Close            1    0    0               00 
  18 Noop             2    0    0               00 
  19 Halt             0    0    0               00 
SQL: [SELECT foo FROM y WHERE foo!=11;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0   10 1             01 usesStmtJournal=0
  12 TableLock        0    8    0 y             00 iDb=0 root=8 write=0
  13 Integer         11    2    0               00 r[2]=11
REG[2] =  i:11
  14 Goto             0    1    0               00 
   1 OpenRead         1   10    0 k(2,B,)       00 root=10 iDb=0; y1
   2 Explain          0    0    0 SCAN TABLE y USING COVERING INDEX y1 00 
   3 Rewind           1    9    1 0             00 
   9 Close            1    0    0               00 
  10 Halt             0    0    0               00 
SQL: [;
CREATE TABLE y2(tr1,d);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1   10 1             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:11
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:10
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:10
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:10
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:10
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:10
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:10
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 y2            00 r[7]='y2'
REG[7] =   t2[y2](8)
  21 String8          0    8    0 y2            00 r[8]='y2'
REG[8] =   t2[y2](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:11
  23 String8          0   10    0 CREATE TABLE y2(tr1,d) 00 r[10]='CREATE TABLE y2(tr1,d)'
REG[10] =   t22[CREATE TABLE y2](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s38[0617111101397461626C65793279320B.....9tabley2y2.](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s38[0617111101397461626C65793279320B.....9tabley2y2.](8)
REG[5] =  i:10
  26 Close            1    0    0               00 
  27 SetCookie        0    1   11               00 
  28 ParseSchema      0    0    0 tbl_name='y2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0   11 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 y2            00 r[2]='y2'
REG[2] =   t2[y2](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y2](8)
REG[1] =   s3[t a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y2](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y2](8)
REG[1] =   s7[sqlsim0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y2](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y2](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y2](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[tkt3376](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y2](8)
REG[1] =   s7[tkt3376](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[tx](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y2](8)
REG[1] =   s2[tx](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y2](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[y2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y2](8)
REG[1] =   s2[y2](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[y2](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:11
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s22[CREATE TABLE y2](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[y2](8)
REG[6] =  i:11
REG[7] =   s22[CREATE TABLE y2](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0   63    0               00 Start at 63
  63 Transaction      0    0   11 1             01 usesStmtJournal=0
  64 Transaction      1    0    0 1             01 usesStmtJournal=0
  65 Transaction      2    0    2 1             01 usesStmtJournal=0
  66 TableLock        0    8    0 y             00 iDb=0 root=8 write=0
  67 Goto             0    1    0               00 
   1 Integer        100    1    0               00 r[1]=100
REG[1] =  i:100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
REG[1] =  i:100
   4 IntegrityCk      2   11    1 ]             00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
REG[2] =  NULL
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
REG[1] =  i:100
  12 OpenRead         1    8    0 3             00 root=8 iDb=0; y
  13 OpenRead         2   10    0 k(2,B,)       00 root=10 iDb=0; y1
  14 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  15 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  16 Rewind           1   33    0               00 
  33 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  34 IfPos            1   36    0               00 if r[1]>0 then r[1]-=0, goto 36
REG[1] =  i:100
  36 Count            2    3    0               00 r[3]=count()
REG[3] =  i:0
  37 Eq               8   42    3               90 if r[8]==r[3] goto 42
REG[8] =  i:0
REG[3] =  i:0
  42 IfPos            1   44    0               00 if r[1]>0 then r[1]-=0, goto 44
REG[1] =  i:100
  44 IntegrityCk      2    1    1 ]             01 
  45 IsNull           2   50    0               00 if r[2]==NULL goto 50
REG[2] =  NULL
  50 IfPos            1   52    0               00 if r[1]>0 then r[1]-=0, goto 52
REG[1] =  i:100
  52 IntegrityCk      2    3    1 [2,1]         02 
  53 IsNull           2   58    0               00 if r[2]==NULL goto 58
REG[2] =  NULL
  58 AddImm           1 -100    0               00 r[1]=r[1]+-100
REG[1] =  i:100
  59 If               1   62    0               00 
REG[1] =  i:0
  60 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
  61 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
  62 Halt             0    0    0               00 
SQL: [PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0   63    0               00 Start at 63
  63 Transaction      0    0   11 1             01 usesStmtJournal=0
  64 Transaction      1    0    0 1             01 usesStmtJournal=0
  65 Transaction      2    0    2 1             01 usesStmtJournal=0
  66 TableLock        0    8    0 y             00 iDb=0 root=8 write=0
  67 Goto             0    1    0               00 
   1 Integer        100    1    0               00 r[1]=100
REG[1] =  i:100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
REG[1] =  i:100
   4 IntegrityCk      2   11    1 ]             00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
REG[2] =  NULL
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
REG[1] =  i:100
  12 OpenRead         1    8    0 3             00 root=8 iDb=0; y
  13 OpenRead         2   10    0 k(2,B,)       00 root=10 iDb=0; y1
  14 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  15 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  16 Rewind           1   33    0               00 
  33 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  34 IfPos            1   36    0               00 if r[1]>0 then r[1]-=0, goto 36
REG[1] =  i:100
  36 Count            2    3    0               00 r[3]=count()
REG[3] =  i:0
  37 Eq               8   42    3               90 if r[8]==r[3] goto 42
REG[8] =  i:0
REG[3] =  i:0
  42 IfPos            1   44    0               00 if r[1]>0 then r[1]-=0, goto 44
REG[1] =  i:100
  44 IntegrityCk      2    1    1 ]             01 
  45 IsNull           2   50    0               00 if r[2]==NULL goto 50
REG[2] =  NULL
  50 IfPos            1   52    0               00 if r[1]>0 then r[1]-=0, goto 52
REG[1] =  i:100
  52 IntegrityCk      2    3    1 [2,1]         02 
  53 IsNull           2   58    0               00 if r[2]==NULL goto 58
REG[2] =  NULL
  58 AddImm           1 -100    0               00 r[1]=r[1]+-100
REG[1] =  i:100
  59 If               1   62    0               00 
REG[1] =  i:0
  60 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
  61 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
  62 Halt             0    0    0               00 
SQL: [;
PRAGMA journal_mode = WAL;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 JournalMode      2    1    5               00 
REG[1] =   t3[wal](8)
   2 JournalMode      1    1    5               00 
REG[1] =   t6[delete](8)
   3 JournalMode      0    1    5               00 
REG[1] =   t6[memory](8)
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t6[memory](8)
   5 Halt             0    0    0               00 
SQL: [;
ANALYZE;]
VDBE Trace:
   0 Init             0  122    0               00 Start at 122
 122 Transaction      0    1   11 1             01 usesStmtJournal=0
 123 Transaction      2    1    2 1             01 usesStmtJournal=0
 124 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
 125 TableLock        0    4    0 a             00 iDb=0 root=4 write=0
 126 TableLock        0    5    0 sqlsim0       00 iDb=0 root=5 write=0
 127 TableLock        0   11    0 y2            00 iDb=0 root=11 write=0
 128 TableLock        0    6    0 c             00 iDb=0 root=6 write=0
 129 TableLock        0    7    0 t0            00 iDb=0 root=7 write=0
 130 TableLock        0    3    0 t a           00 iDb=0 root=3 write=0
 131 TableLock        0    8    0 y             00 iDb=0 root=8 write=0
 132 TableLock        0    9    0 tx            00 iDb=0 root=9 write=0
 133 TableLock        2    3    1 sqlite_stat1  00 iDb=2 root=3 write=1
 134 TableLock        2    2    0 tbl           00 iDb=2 root=2 write=0
 135 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:12
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:11
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:11
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        3    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:11
  16 NotExists        3   18    1               00 intkey=r[1]; pk
REG[1] =  i:11
  17 Rowid            3    5    0               00 r[5]=rowid
REG[5] =  i:11
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:11
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 sqlite_stat1  00 r[7]='sqlite_stat1'
REG[7] =   t12[sqlite_stat1](8)
  21 String8          0    8    0 sqlite_stat1  00 r[8]='sqlite_stat1'
REG[8] =   t12[sqlite_stat1](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:12
  23 String8          0   10    0 CREATE TABLE sqlite_stat1(tbl,idx,stat) 00 r[10]='CREATE TABLE sqlite_stat1(tbl,idx,stat)'
REG[10] =   t39[CREATE TABLE sq](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit](8)
  25 Insert           3   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit](8)
REG[5] =  i:11
  26 Close            3    0    0               00 
  27 SetCookie        0    1   12               00 
  28 ParseSchema      0    0    0 tbl_name='sqlite_stat1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0   12 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 sqlite_stat1  00 r[2]='sqlite_stat1'
REG[2] =   t12[sqlite_stat1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s3[t a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s7[sqlsim0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[tkt3376](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s7[tkt3376](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[tx](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[tx](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[y2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[y2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s12[sqlite_stat1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s12[sqlite_stat1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:12
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s39[CREATE TABLE sq](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s12[sqlite_stat1](8)
REG[6] =  i:12
REG[7] =   s39[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 OpenWrite        0    2    0 3             10 root=2 iDb=0; sqlite_stat1
  30 OpenRead         4    4    0 2             00 root=4 iDb=0; a
  31 String8          0   16    0 a             00 r[16]='a'; a
REG[16] =   t1[a](8)
  32 Count            4   18    0               00 r[18]=count()
REG[18] =  i:0
  33 IfNot           18   38    0               00 
REG[18] =  i:0
  38 OpenRead         4    5    0 3             00 root=5 iDb=0; sqlsim0
  39 String8          0   16    0 sqlsim0       00 r[16]='sqlsim0'; sqlsim0
REG[16] =   t7[sqlsim0](8)
  40 Count            4   18    0               00 r[18]=count()
REG[18] =  i:0
  41 IfNot           18   46    0               00 
REG[18] =  i:0
  46 OpenRead         4   11    0 2             00 root=11 iDb=0; y2
  47 String8          0   16    0 y2            00 r[16]='y2'; y2
REG[16] =   t2[y2](8)
  48 Count            4   18    0               00 r[18]=count()
REG[18] =  i:0
  49 IfNot           18   54    0               00 
REG[18] =  i:0
  54 OpenRead         4    6    0 3             00 root=6 iDb=0; c
  55 String8          0   16    0 c             00 r[16]='c'; c
REG[16] =   t1[c](8)
  56 Count            4   18    0               00 r[18]=count()
REG[18] =  i:0
  57 IfNot           18   62    0               00 
REG[18] =  i:0
  62 OpenRead         4    7    0 3             00 root=7 iDb=0; t0
  63 String8          0   16    0 t0            00 r[16]='t0'; t0
REG[16] =   t2[t0](8)
  64 Count            4   18    0               00 r[18]=count()
REG[18] =  i:0
  65 IfNot           18   70    0               00 
REG[18] =  i:0
  70 OpenRead         4    3    0 1             00 root=3 iDb=0; t a
  71 String8          0   16    0 t a           00 r[16]='t a'; t a
REG[16] =   t3[t a](8)
  72 Count            4   18    0               00 r[18]=count()
REG[18] =  i:0
  73 IfNot           18   78    0               00 
REG[18] =  i:0
  78 OpenRead         4    8    0 3             00 root=8 iDb=0; y
  79 String8          0   16    0 y             00 r[16]='y'
REG[16] =   t1[y](8)
  80 String8          0   17    0 y1            00 r[17]='y1'; Analysis for y.y1
REG[17] =   t2[y1](8)
  81 OpenRead         5   10    0 k(2,B,)       00 root=10 iDb=0; y1
  82 Integer          2   14    0               00 r[14]=2
REG[14] =  i:2
  83 Integer          1   15    0               00 r[15]=1
REG[15] =  i:1
  84 Function0        0   14   13 stat_init(2)  02 r[13]=func(r[14..15])
REG[14] =  i:2
REG[15] =  i:1
REG[13] =  z88[00000000000000000200000001000000................](8)
  85 Rewind           5  100    0               00 
 100 OpenRead         4    9    0 2             00 root=9 iDb=0; tx
 101 String8          0   16    0 tx            00 r[16]='tx'; tx
REG[16] =   t2[tx](8)
 102 Count            4   18    0               00 r[18]=count()
REG[18] =  i:0
 103 IfNot           18  108    0               00 
REG[18] =  i:0
 108 LoadAnalysis     0    0    0               00 
SQL: [SELECT tbl,idx,stat FROM 'main'.sqlite_stat1]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0   12 1             01 usesStmtJournal=0
  12 TableLock        0   12    0 sqlite_stat1  00 iDb=0 root=12 write=0
  13 Goto             0    1    0               00 
   1 OpenRead         0   12    0 3             00 root=12 iDb=0; sqlite_stat1
   2 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
 109 Clear            3    2    0               00 
 110 OpenWrite        6    3    2 3             00 root=3 iDb=2; sqlite_stat1
 111 OpenRead         9    2    2 1             00 root=2 iDb=2; tbl
 112 String8          0   25    0 tbl           00 r[25]='tbl'; tbl
REG[25] =   t3[tbl](8)
 113 Count            9   27    0               00 r[27]=count()
REG[27] =  i:3
 114 IfNot           27  119    0               00 
REG[27] =  i:3
 115 Null             0   26    0               00 r[26]=NULL
REG[26] =  NULL
 116 MakeRecord      25    3   24 BBB           00 r[24]=mkrec(r[25..27])
REG[24] =  s8[0413000F74626C33....tbl3](8)
 117 NewRowid         6   21    0               00 r[21]=rowid
REG[21] =  i:1
 118 Insert           6   24   21               08 intkey=r[21] data=r[24]
REG[24] =  s8[0413000F74626C33....tbl3](8)
REG[21] =  i:1
 119 LoadAnalysis     2    0    0               00 
SQL: [SELECT tbl,idx,stat FROM 'aux6'.sqlite_stat1]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      2    0    2 1             01 usesStmtJournal=0
  12 TableLock        2    3    0 sqlite_stat1  00 iDb=2 root=3 write=0
  13 Goto             0    1    0               00 
   1 OpenRead         0    3    2 3             00 root=3 iDb=2; sqlite_stat1
   2 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_stat1.tbl
REG[1] =   s3[tbl](8)
   5 Column           0    1    2               00 r[2]=sqlite_stat1.idx
REG[2] =  NULL
   6 Column           0    2    3               00 r[3]=sqlite_stat1.stat
REG[3] =   s1[3](8)
   7 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s3[tbl](8)
REG[2] =  NULL
REG[3] =   s1[3](8)
   8 Next             0    4    0               01 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
 120 Expire           0    0    0               00 
 121 Halt             0    0    0               00 
SQL: [;
VACUUM ;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Vacuum           0    0    0               00 
SQL: [ATTACH '' AS vacuum_db;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0               00 r[1]=''
REG[1] =   t0[](8)
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
REG[2] =   t9[vacuum_db](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t0[](8)
REG[2] =   t9[vacuum_db](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      3    0    0 0             00 usesStmtJournal=0
  13 TableLock        3    1    0 sqlite_master 00 iDb=3 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    3 5             00 root=1 iDb=3; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [PRAGMA vacuum_db.synchronous=OFF]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [SELECT 'CREATE TABLE vacuum_db.' || substr(sql,14)   FROM sqlite_master WHERE type='table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0   12 1             01 usesStmtJournal=0
  20 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  21 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  22 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  23 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  24 String8          0    8    0 CREATE TABLE vacuum_db. 00 r[8]='CREATE TABLE vacuum_db.'
REG[8] =   t23[CREATE TABLE va](8)
  25 Integer         14   10    0               00 r[10]=14
REG[10] =  i:14
  26 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   17    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s3[t a](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s3[t a](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:3
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:3
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s29[CREATE TABLE "t](8)
  13 Function0        2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s29[CREATE TABLE "t](8)
REG[10] =  i:14
REG[5] =   s16["t a" ("""cb"""](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s16["t a" ("""cb"""](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s39[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s39[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db."t a" ("""cb""")]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      3    1    0 0             01 usesStmtJournal=0
  31 TableLock        3    1    1 sqlite_master 00 iDb=3 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       3    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        3    2    4               00 
   4 SetCookie        3    5    1               00 
   5 CreateTable      3    2    0               00 r[2]=root iDb=3
REG[2] =  i:3
   6 OpenWrite        0    1    3 5             00 root=1 iDb=3
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    3 5             00 root=1 iDb=3; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:1
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:1
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:1
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t a           00 r[7]='t a'
REG[7] =   t3[t a](8)
  21 String8          0    8    0 t a           00 r[8]='t a'
REG[8] =   t3[t a](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  23 String8          0   10    0 CREATE TABLE "t a" ("""cb""") 00 r[10]='CREATE TABLE "t a" ("""cb""")'
REG[10] =   t29[CREATE TABLE "t](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s47[0617131301477461626C657420617420.....Gtablet at ](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s47[0617131301477461626C657420617420.....Gtablet at ](8)
REG[5] =  i:1
  26 Close            1    0    0               00 
  27 SetCookie        3    1    1               00 
  28 ParseSchema      3    0    0 tbl_name='t a' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      3    0    1 0             00 usesStmtJournal=0
  17 TableLock        3    1    0 sqlite_master 00 iDb=3 root=1 write=0
  18 String8          0    2    0 t a           00 r[2]='t a'
REG[2] =   t3[t a](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    3 5             00 root=1 iDb=3; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[t a](8)
REG[1] =   s3[t a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s3[t a](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s29[CREATE TABLE "t](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s3[t a](8)
REG[6] =  i:3
REG[7] =   s29[CREATE TABLE "t](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s1[a](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s1[a](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:4
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:4
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s20[CREATE TABLE a(](8)
  13 Function         2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s20[CREATE TABLE a(](8)
REG[10] =  i:14
REG[5] =   s7[a(b, x)](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s7[a(b, x)](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s30[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s30[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.a(b, x)]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      3    1    1 0             01 usesStmtJournal=0
  31 TableLock        3    1    1 sqlite_master 00 iDb=3 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       3    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      3    2    0               00 r[2]=root iDb=3
REG[2] =  i:4
   6 OpenWrite        0    1    3 5             00 root=1 iDb=3
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    3 5             00 root=1 iDb=3; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:2
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:2
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:2
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 a             00 r[7]='a'
REG[7] =   t1[a](8)
  21 String8          0    8    0 a             00 r[8]='a'
REG[8] =   t1[a](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  23 String8          0   10    0 CREATE TABLE a(b, x) 00 r[10]='CREATE TABLE a(b, x)'
REG[10] =   t20[CREATE TABLE a(](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s34[06170F0F01357461626C656161044352.....5tableaa.CR](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s34[06170F0F01357461626C656161044352.....5tableaa.CR](8)
REG[5] =  i:2
  26 Close            1    0    0               00 
  27 SetCookie        3    1    2               00 
  28 ParseSchema      3    0    0 tbl_name='a' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      3    0    2 0             00 usesStmtJournal=0
  17 TableLock        3    1    0 sqlite_master 00 iDb=3 root=1 write=0
  18 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    3 5             00 root=1 iDb=3; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s3[t a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[a](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s20[CREATE TABLE a(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[a](8)
REG[6] =  i:4
REG[7] =   s20[CREATE TABLE a(](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s7[sqlsim0](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s7[sqlsim0](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:5
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:5
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:5
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s43[CREATE TABLE sq](8)
  13 Function         2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s43[CREATE TABLE sq](8)
REG[10] =  i:14
REG[5] =   s30[sqlsim0(sqlsim1](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s30[sqlsim0(sqlsim1](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s53[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s53[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.sqlsim0(sqlsim1, t2, newtable)]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      3    1    2 0             01 usesStmtJournal=0
  31 TableLock        3    1    1 sqlite_master 00 iDb=3 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       3    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      3    2    0               00 r[2]=root iDb=3
REG[2] =  i:5
   6 OpenWrite        0    1    3 5             00 root=1 iDb=3
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    3 5             00 root=1 iDb=3; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:3
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:3
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:3
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 sqlsim0       00 r[7]='sqlsim0'
REG[7] =   t7[sqlsim0](8)
  21 String8          0    8    0 sqlsim0       00 r[8]='sqlsim0'
REG[8] =   t7[sqlsim0](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  23 String8          0   10    0 CREATE TABLE sqlsim0(sqlsim1, t2, newtable) 00 r[10]='CREATE TABLE sqlsim0(sqlsim1, t2, newtable)'
REG[10] =   t43[CREATE TABLE sq](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s69[06171B1B01637461626C6573716C7369.....ctablesqlsi](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s69[06171B1B01637461626C6573716C7369.....ctablesqlsi](8)
REG[5] =  i:3
  26 Close            1    0    0               00 
  27 SetCookie        3    1    3               00 
  28 ParseSchema      3    0    0 tbl_name='sqlsim0' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      3    0    3 0             00 usesStmtJournal=0
  17 TableLock        3    1    0 sqlite_master 00 iDb=3 root=1 write=0
  18 String8          0    2    0 sqlsim0       00 r[2]='sqlsim0'
REG[2] =   t7[sqlsim0](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    3 5             00 root=1 iDb=3; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[sqlsim0](8)
REG[1] =   s3[t a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[sqlsim0](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[sqlsim0](8)
REG[1] =   s7[sqlsim0](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s7[sqlsim0](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s43[CREATE TABLE sq](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s7[sqlsim0](8)
REG[6] =  i:5
REG[7] =   s43[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s1[c](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s1[c](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:6
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:6
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:6
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s30[CREATE TABLE c(](8)
  13 Function         2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s30[CREATE TABLE c(](8)
REG[10] =  i:14
REG[5] =   s17[c(db12, one, tw](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s17[c(db12, one, tw](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s40[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s40[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.c(db12, one, two)]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      3    1    3 0             01 usesStmtJournal=0
  31 TableLock        3    1    1 sqlite_master 00 iDb=3 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       3    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      3    2    0               00 r[2]=root iDb=3
REG[2] =  i:6
   6 OpenWrite        0    1    3 5             00 root=1 iDb=3
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    3 5             00 root=1 iDb=3; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:4
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:4
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:4
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 c             00 r[7]='c'
REG[7] =   t1[c](8)
  21 String8          0    8    0 c             00 r[8]='c'
REG[8] =   t1[c](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:6
  23 String8          0   10    0 CREATE TABLE c(db12, one, two) 00 r[10]='CREATE TABLE c(db12, one, two)'
REG[10] =   t30[CREATE TABLE c(](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s44[06170F0F01497461626C656363064352.....Itablecc.CR](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s44[06170F0F01497461626C656363064352.....Itablecc.CR](8)
REG[5] =  i:4
  26 Close            1    0    0               00 
  27 SetCookie        3    1    4               00 
  28 ParseSchema      3    0    0 tbl_name='c' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      3    0    4 0             00 usesStmtJournal=0
  17 TableLock        3    1    0 sqlite_master 00 iDb=3 root=1 write=0
  18 String8          0    2    0 c             00 r[2]='c'
REG[2] =   t1[c](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    3 5             00 root=1 iDb=3; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[c](8)
REG[1] =   s3[t a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[c](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[c](8)
REG[1] =   s7[sqlsim0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[c](8)
REG[1] =   s1[c](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[c](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:6
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s30[CREATE TABLE c(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[c](8)
REG[6] =  i:6
REG[7] =   s30[CREATE TABLE c(](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t0](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[t0](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:7
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:7
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:7
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s27[CREATE TABLE t0](8)
  13 Function         2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s27[CREATE TABLE t0](8)
REG[10] =  i:14
REG[5] =   s14[t0(t3, i1, t5)](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s14[t0(t3, i1, t5)](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s37[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s37[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.t0(t3, i1, t5)]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      3    1    4 0             01 usesStmtJournal=0
  31 TableLock        3    1    1 sqlite_master 00 iDb=3 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       3    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      3    2    0               00 r[2]=root iDb=3
REG[2] =  i:7
   6 OpenWrite        0    1    3 5             00 root=1 iDb=3
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:5
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    3 5             00 root=1 iDb=3; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:5
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:5
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:5
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:5
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t0            00 r[7]='t0'
REG[7] =   t2[t0](8)
  21 String8          0    8    0 t0            00 r[8]='t0'
REG[8] =   t2[t0](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:7
  23 String8          0   10    0 CREATE TABLE t0(t3, i1, t5) 00 r[10]='CREATE TABLE t0(t3, i1, t5)'
REG[10] =   t27[CREATE TABLE t0](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s43[0617111101437461626C657430743007.....Ctablet0t0.](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s43[0617111101437461626C657430743007.....Ctablet0t0.](8)
REG[5] =  i:5
  26 Close            1    0    0               00 
  27 SetCookie        3    1    5               00 
  28 ParseSchema      3    0    0 tbl_name='t0' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      3    0    5 0             00 usesStmtJournal=0
  17 TableLock        3    1    0 sqlite_master 00 iDb=3 root=1 write=0
  18 String8          0    2    0 t0            00 r[2]='t0'
REG[2] =   t2[t0](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    3 5             00 root=1 iDb=3; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s3[t a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s7[sqlsim0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s2[t0](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t0](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:7
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s27[CREATE TABLE t0](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t0](8)
REG[6] =  i:7
REG[7] =   s27[CREATE TABLE t0](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s1[y](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s1[y](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:8
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:8
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:8
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s27[CREATE TABLE y(](8)
  13 Function         2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s27[CREATE TABLE y(](8)
REG[10] =  i:14
REG[5] =   s14[y(t4, foo, yy)](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s14[y(t4, foo, yy)](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s37[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s37[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.y(t4, foo, yy)]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      3    1    5 0             01 usesStmtJournal=0
  31 TableLock        3    1    1 sqlite_master 00 iDb=3 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       3    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      3    2    0               00 r[2]=root iDb=3
REG[2] =  i:8
   6 OpenWrite        0    1    3 5             00 root=1 iDb=3
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:6
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    3 5             00 root=1 iDb=3; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:6
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:6
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:6
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:6
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 y             00 r[7]='y'
REG[7] =   t1[y](8)
  21 String8          0    8    0 y             00 r[8]='y'
REG[8] =   t1[y](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:8
  23 String8          0   10    0 CREATE TABLE y(t4, foo, yy) 00 r[10]='CREATE TABLE y(t4, foo, yy)'
REG[10] =   t27[CREATE TABLE y(](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s41[06170F0F01437461626C657979084352.....Ctableyy.CR](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s41[06170F0F01437461626C657979084352.....Ctableyy.CR](8)
REG[5] =  i:6
  26 Close            1    0    0               00 
  27 SetCookie        3    1    6               00 
  28 ParseSchema      3    0    0 tbl_name='y' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      3    0    6 0             00 usesStmtJournal=0
  17 TableLock        3    1    0 sqlite_master 00 iDb=3 root=1 write=0
  18 String8          0    2    0 y             00 r[2]='y'
REG[2] =   t1[y](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    3 5             00 root=1 iDb=3; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s3[t a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s7[sqlsim0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s1[y](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[y](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:8
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s27[CREATE TABLE y(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[y](8)
REG[6] =  i:8
REG[7] =   s27[CREATE TABLE y(](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s4[view](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s4[view](8)
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[tx](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[tx](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:9
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:9
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:9
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s22[CREATE TABLE tx](8)
  13 Function         2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s22[CREATE TABLE tx](8)
REG[10] =  i:14
REG[5] =   s9[tx(x1,x2)](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s9[tx(x1,x2)](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s32[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s32[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.tx(x1,x2)]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      3    1    6 0             01 usesStmtJournal=0
  31 TableLock        3    1    1 sqlite_master 00 iDb=3 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       3    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      3    2    0               00 r[2]=root iDb=3
REG[2] =  i:9
   6 OpenWrite        0    1    3 5             00 root=1 iDb=3
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:7
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:7
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    3 5             00 root=1 iDb=3; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:7
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:7
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:7
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:7
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 tx            00 r[7]='tx'
REG[7] =   t2[tx](8)
  21 String8          0    8    0 tx            00 r[8]='tx'
REG[8] =   t2[tx](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:9
  23 String8          0   10    0 CREATE TABLE tx(x1,x2) 00 r[10]='CREATE TABLE tx(x1,x2)'
REG[10] =   t22[CREATE TABLE tx](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s38[0617111101397461626C657478747809.....9tabletxtx.](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s38[0617111101397461626C657478747809.....9tabletxtx.](8)
REG[5] =  i:7
  26 Close            1    0    0               00 
  27 SetCookie        3    1    7               00 
  28 ParseSchema      3    0    0 tbl_name='tx' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      3    0    7 0             00 usesStmtJournal=0
  17 TableLock        3    1    0 sqlite_master 00 iDb=3 root=1 write=0
  18 String8          0    2    0 tx            00 r[2]='tx'
REG[2] =   t2[tx](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    3 5             00 root=1 iDb=3; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[tx](8)
REG[1] =   s3[t a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[tx](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[tx](8)
REG[1] =   s7[sqlsim0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[tx](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[tx](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[tx](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[tx](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[tx](8)
REG[1] =   s2[tx](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[tx](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:9
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s22[CREATE TABLE tx](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[tx](8)
REG[6] =  i:9
REG[7] =   s22[CREATE TABLE tx](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[y2](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[y2](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:11
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:11
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:11
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s22[CREATE TABLE y2](8)
  13 Function         2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s22[CREATE TABLE y2](8)
REG[10] =  i:14
REG[5] =   s9[y2(tr1,d)](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s9[y2(tr1,d)](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s32[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s32[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.y2(tr1,d)]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      3    1    7 0             01 usesStmtJournal=0
  31 TableLock        3    1    1 sqlite_master 00 iDb=3 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       3    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      3    2    0               00 r[2]=root iDb=3
REG[2] =  i:10
   6 OpenWrite        0    1    3 5             00 root=1 iDb=3
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:8
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:8
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    3 5             00 root=1 iDb=3; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:8
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:8
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:8
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:8
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 y2            00 r[7]='y2'
REG[7] =   t2[y2](8)
  21 String8          0    8    0 y2            00 r[8]='y2'
REG[8] =   t2[y2](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:10
  23 String8          0   10    0 CREATE TABLE y2(tr1,d) 00 r[10]='CREATE TABLE y2(tr1,d)'
REG[10] =   t22[CREATE TABLE y2](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s38[0617111101397461626C65793279320A.....9tabley2y2.](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s38[0617111101397461626C65793279320A.....9tabley2y2.](8)
REG[5] =  i:8
  26 Close            1    0    0               00 
  27 SetCookie        3    1    8               00 
  28 ParseSchema      3    0    0 tbl_name='y2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      3    0    8 0             00 usesStmtJournal=0
  17 TableLock        3    1    0 sqlite_master 00 iDb=3 root=1 write=0
  18 String8          0    2    0 y2            00 r[2]='y2'
REG[2] =   t2[y2](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    3 5             00 root=1 iDb=3; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y2](8)
REG[1] =   s3[t a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y2](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y2](8)
REG[1] =   s7[sqlsim0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y2](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y2](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y2](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[tx](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y2](8)
REG[1] =   s2[tx](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[y2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y2](8)
REG[1] =   s2[y2](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[y2](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:10
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s22[CREATE TABLE y2](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[y2](8)
REG[6] =  i:10
REG[7] =   s22[CREATE TABLE y2](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s12[sqlite_stat1](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s12[sqlite_stat1](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:12
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:12
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:12
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s39[CREATE TABLE sq](8)
  13 Function         2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s39[CREATE TABLE sq](8)
REG[10] =  i:14
REG[5] =   s26[sqlite_stat1(tb](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s26[sqlite_stat1(tb](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s49[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s49[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.sqlite_stat1(tbl,idx,stat)]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      3    1    8 0             01 usesStmtJournal=0
  31 TableLock        3    1    1 sqlite_master 00 iDb=3 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       3    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      3    2    0               00 r[2]=root iDb=3
REG[2] =  i:11
   6 OpenWrite        0    1    3 5             00 root=1 iDb=3
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:9
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:9
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    3 5             00 root=1 iDb=3; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:9
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:9
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:9
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:9
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 sqlite_stat1  00 r[7]='sqlite_stat1'
REG[7] =   t12[sqlite_stat1](8)
  21 String8          0    8    0 sqlite_stat1  00 r[8]='sqlite_stat1'
REG[8] =   t12[sqlite_stat1](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:11
  23 String8          0   10    0 CREATE TABLE sqlite_stat1(tbl,idx,stat) 00 r[10]='CREATE TABLE sqlite_stat1(tbl,idx,stat)'
REG[10] =   t39[CREATE TABLE sq](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit](8)
REG[5] =  i:9
  26 Close            1    0    0               00 
  27 SetCookie        3    1    9               00 
  28 ParseSchema      3    0    0 tbl_name='sqlite_stat1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      3    0    9 0             00 usesStmtJournal=0
  17 TableLock        3    1    0 sqlite_master 00 iDb=3 root=1 write=0
  18 String8          0    2    0 sqlite_stat1  00 r[2]='sqlite_stat1'
REG[2] =   t12[sqlite_stat1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    3 5             00 root=1 iDb=3; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s3[t a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s7[sqlsim0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[tx](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[tx](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[y2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[y2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s12[sqlite_stat1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s12[sqlite_stat1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:11
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s39[CREATE TABLE sq](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s12[sqlite_stat1](8)
REG[6] =  i:11
REG[7] =   s39[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
  16 Next             0    4    0               01 
  17 Close            0    0    0               00 
  18 Halt             0    0    0               00 
SQL: [SELECT 'CREATE INDEX vacuum_db.' || substr(sql,14)  FROM sqlite_master WHERE sql LIKE 'CREATE INDEX %' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0   12 1             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE INDEX % 00 r[2]='CREATE INDEX %'
REG[2] =   t14[CREATE INDEX %](8)
  17 String8          0    5    0 CREATE INDEX vacuum_db. 00 r[5]='CREATE INDEX vacuum_db.'
REG[5] =   t23[CREATE INDEX va](8)
  18 Integer         14    7    0               00 r[7]=14
REG[7] =  i:14
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s29[CREATE TABLE "t](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s29[CREATE TABLE "t](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s20[CREATE TABLE a(](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s20[CREATE TABLE a(](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s43[CREATE TABLE sq](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s43[CREATE TABLE sq](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s30[CREATE TABLE c(](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s30[CREATE TABLE c(](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE TABLE t0](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s27[CREATE TABLE t0](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE TABLE y(](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s27[CREATE TABLE y(](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s52[CREATE VIEW tkt](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s52[CREATE VIEW tkt](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s22[CREATE TABLE tx](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s22[CREATE TABLE tx](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s40[CREATE INDEX y1](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s40[CREATE INDEX y1](8)
REG[1] =  i:1
   6 IfNot            1   11    1               00 
REG[1] =  i:1
   7 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s40[CREATE INDEX y1](8)
   8 Function0        2    6    1 substr(2)     02 r[1]=func(r[6..7])
REG[6] =   s40[CREATE INDEX y1](8)
REG[7] =  i:14
REG[1] =   s27[y1 ON y(foo COL](8)
   9 Concat           1    5    4               00 r[4]=r[5]+r[1]
REG[1] =   s27[y1 ON y(foo COL](8)
REG[5] =   t23[CREATE INDEX va](8)
REG[4] =   s50[CREATE INDEX va](8)
  10 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s50[CREATE INDEX va](8)
SQL: [CREATE INDEX vacuum_db.y1 ON y(foo COLLATE BINARY)]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      3    1    9 0             01 usesStmtJournal=0
  35 TableLock        3    1    1 sqlite_master 00 iDb=3 root=1 write=1
  36 TableLock        3    8    1 y             00 iDb=3 root=8 write=1
  37 Goto             0    1    0               00 
   1 Noop             0   33    0               00 
   2 CreateIndex      3    1    0               00 r[1]=root iDb=3
REG[1] =  i:12
   3 OpenWrite        0    1    3 5             00 root=1 iDb=3; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:10
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 y1            00 r[4]='y1'
REG[4] =   t2[y1](8)
   7 String8          0    5    0 y             00 r[5]='y'
REG[5] =   t1[y](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:12
   9 String8          0    7    0 CREATE INDEX y1 ON y(foo COLLATE BINARY) 00 r[7]='CREATE INDEX y1 ON y(foo COLLATE BINARY)'
REG[7] =   t40[CREATE INDEX y1](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s55[0617110F015D696E6465787931790C43.....]indexy1y.C](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s55[0617110F015D696E6465787931790C43.....]indexy1y.C](8)
REG[2] =  i:10
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    1 k(2,B,)       00 
  14 OpenRead         1    8    3 3             00 root=8 iDb=3; y
  15 Rewind           1   21    0               00 
  21 OpenWrite        2    1    3 k(2,B,)       11 root=1 iDb=3
  22 SorterSort       3   27    0               00 
  27 Close            1    0    0               00 
  28 Close            2    0    0               00 
  29 Close            3    0    0               00 
  30 SetCookie        3    1   10               00 
  31 ParseSchema      3    0    0 name='y1' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      3    0   10 0             00 usesStmtJournal=0
  17 TableLock        3    1    0 sqlite_master 00 iDb=3 root=1 write=0
  18 String8          0    2    0 y1            00 r[2]='y1'
REG[2] =   t2[y1](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    3 5             00 root=1 iDb=3; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[t a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y1](8)
REG[1] =   s3[t a](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y1](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y1](8)
REG[1] =   s7[sqlsim0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y1](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y1](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y1](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[tx](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y1](8)
REG[1] =   s2[tx](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[y2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y1](8)
REG[1] =   s2[y2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y1](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[y1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y1](8)
REG[1] =   s2[y1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s2[y1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:12
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s40[CREATE INDEX y1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[y1](8)
REG[6] =  i:12
REG[7] =   s40[CREATE INDEX y1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  32 Expire           0    0    0               00 
  33 Halt             0    0    0               00 
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s22[CREATE TABLE y2](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s22[CREATE TABLE y2](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE sq](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s39[CREATE TABLE sq](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'CREATE UNIQUE INDEX vacuum_db.' || substr(sql,21)   FROM sqlite_master WHERE sql LIKE 'CREATE UNIQUE INDEX %']
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0   12 1             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE UNIQUE INDEX % 00 r[2]='CREATE UNIQUE INDEX %'
REG[2] =   t21[CREATE UNIQUE I](8)
  17 String8          0    5    0 CREATE UNIQUE INDEX vacuum_db. 00 r[5]='CREATE UNIQUE INDEX vacuum_db.'
REG[5] =   t30[CREATE UNIQUE I](8)
  18 Integer         21    7    0               00 r[7]=21
REG[7] =  i:21
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s29[CREATE TABLE "t](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s29[CREATE TABLE "t](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s20[CREATE TABLE a(](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s20[CREATE TABLE a(](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s43[CREATE TABLE sq](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s43[CREATE TABLE sq](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s30[CREATE TABLE c(](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s30[CREATE TABLE c(](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE TABLE t0](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s27[CREATE TABLE t0](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE TABLE y(](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s27[CREATE TABLE y(](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s52[CREATE VIEW tkt](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s52[CREATE VIEW tkt](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s22[CREATE TABLE tx](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s22[CREATE TABLE tx](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s40[CREATE INDEX y1](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s40[CREATE INDEX y1](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s22[CREATE TABLE y2](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s22[CREATE TABLE y2](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE sq](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s39[CREATE TABLE sq](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';'FROM main.sqlite_master WHERE type = 'table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    0   12 1             01 usesStmtJournal=0
  25 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  26 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  27 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  28 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  29 String8          0   10    0 INSERT INTO vacuum_db. 00 r[10]='INSERT INTO vacuum_db.'
REG[10] =   t22[INSERT INTO vac](8)
  30 String8          0   13    0  SELECT * FROM main. 00 r[13]=' SELECT * FROM main.'
REG[13] =   t20[ SELECT * FROM ](8)
  31 String8          0   14    0 ;             00 r[14]=';'
REG[14] =   t1[;](8)
  32 Goto             0    1    0               00 
   1 OpenRead         0    1    0 4             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   22    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s3[t a](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s3[t a](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:3
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:3
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s3[t a](8)
  13 Function0        0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s3[t a](8)
REG[11] =   z5['t a'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z5['t a'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s27[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s27[INSERT INTO vac](8)
REG[8] =   s47[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s3[t a](8)
  17 Function0        0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s3[t a](8)
REG[9] =   z5['t a'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z5['t a'](8)
REG[8] =   s47[INSERT INTO vac](8)
REG[5] =   s52[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s52[INSERT INTO vac](8)
REG[7] =   s53[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s53[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'t a' SELECT * FROM main.'t a';]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0   12 1             01 usesStmtJournal=0
  12 Transaction      3    1   10 0             01 usesStmtJournal=0
  13 TableLock        3    3    1 t a           00 iDb=3 root=3 write=1
  14 TableLock        0    3    0 t a           00 iDb=0 root=3 write=0
  15 Goto             0    1    0               00 
   1 OpenWrite        1    3    3 1             00 root=3 iDb=3; t a
   2 OpenRead         0    3    0 1             00 root=3 iDb=0; t a
   3 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s1[a](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s1[a](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:4
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:4
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s1[a](8)
  13 Function         0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s1[a](8)
REG[11] =   z3['a'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z3['a'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s25[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s25[INSERT INTO vac](8)
REG[8] =   s45[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s1[a](8)
  17 Function         0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s1[a](8)
REG[9] =   z3['a'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z3['a'](8)
REG[8] =   s45[INSERT INTO vac](8)
REG[5] =   s48[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s48[INSERT INTO vac](8)
REG[7] =   s49[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s49[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'a' SELECT * FROM main.'a';]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0   12 1             01 usesStmtJournal=0
  12 Transaction      3    1   10 0             01 usesStmtJournal=0
  13 TableLock        3    4    1 a             00 iDb=3 root=4 write=1
  14 TableLock        0    4    0 a             00 iDb=0 root=4 write=0
  15 Goto             0    1    0               00 
   1 OpenWrite        1    4    3 2             00 root=4 iDb=3; a
   2 OpenRead         0    4    0 2             00 root=4 iDb=0; a
   3 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s7[sqlsim0](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s7[sqlsim0](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:5
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:5
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:5
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s7[sqlsim0](8)
  13 Function         0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s7[sqlsim0](8)
REG[11] =   z9['sqlsim0'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z9['sqlsim0'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s31[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s31[INSERT INTO vac](8)
REG[8] =   s51[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s7[sqlsim0](8)
  17 Function         0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s7[sqlsim0](8)
REG[9] =   z9['sqlsim0'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z9['sqlsim0'](8)
REG[8] =   s51[INSERT INTO vac](8)
REG[5] =   s60[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s60[INSERT INTO vac](8)
REG[7] =   s61[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s61[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'sqlsim0' SELECT * FROM main.'sqlsim0';]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0   12 1             01 usesStmtJournal=0
  12 Transaction      3    1   10 0             01 usesStmtJournal=0
  13 TableLock        3    5    1 sqlsim0       00 iDb=3 root=5 write=1
  14 TableLock        0    5    0 sqlsim0       00 iDb=0 root=5 write=0
  15 Goto             0    1    0               00 
   1 OpenWrite        1    5    3 3             00 root=5 iDb=3; sqlsim0
   2 OpenRead         0    5    0 3             00 root=5 iDb=0; sqlsim0
   3 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s1[c](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s1[c](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:6
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:6
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:6
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s1[c](8)
  13 Function         0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s1[c](8)
REG[11] =   z3['c'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z3['c'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s25[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s25[INSERT INTO vac](8)
REG[8] =   s45[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s1[c](8)
  17 Function         0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s1[c](8)
REG[9] =   z3['c'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z3['c'](8)
REG[8] =   s45[INSERT INTO vac](8)
REG[5] =   s48[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s48[INSERT INTO vac](8)
REG[7] =   s49[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s49[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'c' SELECT * FROM main.'c';]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0   12 1             01 usesStmtJournal=0
  12 Transaction      3    1   10 0             01 usesStmtJournal=0
  13 TableLock        3    6    1 c             00 iDb=3 root=6 write=1
  14 TableLock        0    6    0 c             00 iDb=0 root=6 write=0
  15 Goto             0    1    0               00 
   1 OpenWrite        1    6    3 3             00 root=6 iDb=3; c
   2 OpenRead         0    6    0 3             00 root=6 iDb=0; c
   3 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t0](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[t0](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:7
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:7
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:7
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[t0](8)
  13 Function         0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s2[t0](8)
REG[11] =   z4['t0'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z4['t0'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s26[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s26[INSERT INTO vac](8)
REG[8] =   s46[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[t0](8)
  17 Function         0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s2[t0](8)
REG[9] =   z4['t0'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z4['t0'](8)
REG[8] =   s46[INSERT INTO vac](8)
REG[5] =   s50[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s50[INSERT INTO vac](8)
REG[7] =   s51[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s51[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'t0' SELECT * FROM main.'t0';]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0   12 1             01 usesStmtJournal=0
  12 Transaction      3    1   10 0             01 usesStmtJournal=0
  13 TableLock        3    7    1 t0            00 iDb=3 root=7 write=1
  14 TableLock        0    7    0 t0            00 iDb=0 root=7 write=0
  15 Goto             0    1    0               00 
   1 OpenWrite        1    7    3 3             00 root=7 iDb=3; t0
   2 OpenRead         0    7    0 3             00 root=7 iDb=0; t0
   3 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s1[y](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s1[y](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:8
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:8
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:8
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s1[y](8)
  13 Function         0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s1[y](8)
REG[11] =   z3['y'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z3['y'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s25[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s25[INSERT INTO vac](8)
REG[8] =   s45[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s1[y](8)
  17 Function         0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s1[y](8)
REG[9] =   z3['y'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z3['y'](8)
REG[8] =   s45[INSERT INTO vac](8)
REG[5] =   s48[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s48[INSERT INTO vac](8)
REG[7] =   s49[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f748d347859 in __GI_abort () at abort.c:79
#2  0x00007f748d347729 in __assert_fail_base (fmt=0x7f748d4dd588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x227729 "sqlite3_stricmp(sqlite3StrBINARY, zColl)!=0 || sqlite3StrBINARY==zColl", 
    file=0x222c23 "sqlite3.c", line=108020, function=<optimized out>) at assert.c:92
#3  0x00007f748d358fd6 in __GI___assert_fail (assertion=0x227729 "sqlite3_stricmp(sqlite3StrBINARY, zColl)!=0 || sqlite3StrBINARY==zColl", file=0x222c23 "sqlite3.c", line=108020, 
    function=0x20a00b "int xferOptimization(Parse *, Table *, Select *, int, int)") at assert.c:101
#4  0x0000000000345560 in sqlite3Insert (pParse=<optimized out>, pTabList=<optimized out>, pSelect=<optimized out>, pColumn=0x0, onError=<optimized out>) at sqlite3.c:108019
#5  0x00000000003066b3 in yy_reduce (yypParser=0xb9da00, yyruleno=<optimized out>) at sqlite3.c:133484
#6  0x00000000002fef8e in sqlite3Parser (yyp=0xb9da00, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#7  0x00000000002fc544 in sqlite3RunParser (pParse=0xa993d0, zSql=0xaaa6c0 "INSERT INTO vacuum_db.'y' SELECT * FROM main.'y';", pzErrMsg=0x7ffcf544faa8) at sqlite3.c:135186
#8  0x00000000002facac in sqlite3Prepare (db=0xa96850, zSql=0xaaa6c0 "INSERT INTO vacuum_db.'y' SELECT * FROM main.'y';", nBytes=<optimized out>, saveSqlFlag=0, pReprepare=<optimized out>, ppStmt=0x7ffcf544fb68, pzTail=0x0)
    at sqlite3.c:112596
#9  0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0xa96850, zSql=0xaaa6c0 "INSERT INTO vacuum_db.'y' SELECT * FROM main.'y';", nBytes=-1, saveSqlFlag=0, pOld=0x0, ppStmt=<optimized out>, pzTail=0x0) at sqlite3.c:112688
#10 0x00000000003fb16b in execSql (db=0xa96850, pzErrMsg=0xaade98, zSql=<optimized out>) at sqlite3.c:112752
#11 0x00000000003fb5ec in execExecSql (db=0xa96850, pzErrMsg=0xaade98, zSql=<optimized out>) at sqlite3.c:120748
#12 0x00000000003de49e in sqlite3VdbeExec (p=<optimized out>) at sqlite3.c:120939
#13 0x000000000028b140 in sqlite3_step (pStmt=<optimized out>) at sqlite3.c:75131
#14 0x000000000024b5e9 in main (argc=1, argv=0x7ffcf5450308) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 130391] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
