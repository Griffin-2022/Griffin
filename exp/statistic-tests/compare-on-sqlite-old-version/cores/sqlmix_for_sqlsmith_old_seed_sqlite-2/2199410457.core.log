GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000237,sig:06,src:006928+005635,time:27409955,execs:2203474,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL-trace: ;
PRAGMA sql_trace=on;
SQL-trace: ;BEGIN;
SQL-trace: ;
SELECT CAST('?' AS blob)=x'3F' AS x;
SQL-trace: ;
INSERT INTO t1 VALUES(1, NULL);
SQL-trace: -- TRIGGER x
SQL-trace: ;
INSERT INTO t1 VALUES(2, NULL);
SQL-trace: -- TRIGGER x
SQL-trace: pragma page_size=512;
SQL-trace: CREATE VIRTUAL TABLE x1 USING tcl(vtab_command);
SQL-trace: ;
pragma cache_size=16;
SQL-trace: ;
SELECT a<>a FROM t1;
SQL-trace: ;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: ;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: PRAGMA journal_mode=WAL;
SQL-trace: ;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='i1w' AND type='index' ORDER BY rowid;
SQL-trace: ;
SELECT a>=a FROM t1;
SQL-trace: ;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: COMMIT;
SQL-trace: ;
CREATE VIEW sqlsim0 AS
    SELECT
      CAST(t1.t1 AS VARCHAR(50)) AS ElemId,
     t1.t1 AS ElemCode,
     t1.a AS ElemName,
     tx.t1 AS InnerCode,
     tx.x1 AS x1,
     tx.a AS a,
     tx.t1 AS t1,
     0 AS Level,
     0 AS IsOrElem
    FROM t1 JOIN tx ON tx.a=t1.t1
    WHERE tx.a NOT IN (SELECT a FROM t1)
    UNION ALL
    SELECT
      CAST(t1.a AS VARCHAR(50)) AS ElemId,
      t1.t1 AS ElemCode,
      t1.a AS ElemName,
      t1.t1 AS InnerCode,
      NULL AS x1,
      NULL ASQL-trace: ;
SELECT name, rootpage, sql FROM 'temp'.sqlite_temp_master WHERE tbl_name='t3' AND type!='trigger' ORDER BY rowid;
SQL-trace: ;
SELECT -b FROM t1;
SQL-trace: ;
pragma cache_size=16;
SQL-trace: ;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: ;
SELECT ~b FROM t1;
SQL-trace: ATTACH 'test2.db' AS t2;
SQL-trace: ;
UPDATE t1 SET b=NULL, b=NULL;
SQL-trace: ;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE type='trigger' AND name='t1' ORDER BY rowid;
SQL-trace: SELECT name, rootpage, sql FROM 'temp'.sqlite_temp_master WHERE type='trigger' AND (name='t1') ORDER BY rowid;
SQL-trace: ;
UPDATE t1 SET a=0;
SQL-trace: CREATE TABLE sqlsim1(t2 real, newtable real);
SQL-trace: ;
CREATE TABLE c(db12,one);
SQL-trace: PRAGMA journal_mode = WAL;
SQL-trace: PRAGMA main.secure_delete=ON;
SQL-trace: ;
UPDATE sqlsim1 SET newtable=6, newtable=6;
SQL-trace: SELECT *, min(newtable,newtable), max(newtable,newtable) FROM sqlsim1;
SQL-trace: ;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='sqlsim1' AND type!='trigger' ORDER BY rowid;
SQL-trace: ;
SELECT a-a FROM t1;
SQL-trace: ;
UPDATE t1 SET b=-9223372036854775807, b=2;
SQL-trace: ;
CREATE TABLE two(t0,t3);
SQL-trace: CREATE TABLE i1(t5,y,t4 PRIMARY KEY);
SQL-trace: ;
SELECT b/b FROM t1;
SQL-trace: SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: ;
SELECT db12 FROM c WHERE 4.3+2.4 OR 1 ORDER BY db12;
SQL-trace: SELECT 1+2+3
  ;
SQL-trace: ;
SELECT * FROM sqlsim1 WHERE newtable=(SELECT 2);
SQL-trace: ;
SELECT * FROM sqlite_master WHERE rowid<10;
SQL-trace: ;
UPDATE c SET db12='abc', db12='Abc';
SQL-trace: ;
UPDATE t1 SET a='ac', a='a%_c';
SQL-trace: ;
UPDATE c SET one='one', one='A__';
SQL-trace: ;
UPDATE c SET one='abcde', one='A7%E';
SQL-trace: ;
UPDATE sqlsim1 SET t2='a7cde', t2='A77%E';
SQL-trace: ;
UPDATE t1 SET a='abc7', a='a%77';
SQL-trace: ;
UPDATE sqlsim1 SET t2='abc7', newtable='t2%77';
SQL-trace: ;
UPDATE sqlsim1 SET t2='abc', t2='abc?';
SQL-trace: ;
UPDATE sqlsim1 SET t2='abc', t2='t2[^t2-Dc]c';
SQL-trace: ;
UPDATE sqlsim1 SET t2='abcdefg', t2='sqlsim1*[d-h]g';
SQL-trace: ;
UPDATE c SET one='one￿sqlsim1', one='one?sqlsim1';
SQL-trace: ;
UPDATE sqlsim1 SET t2='newtableሴnewtable', t2='newtable[newtable-ሴ]newtable';
SQL-trace: ;
UPDATE t1 SET a='ABC', a='a?t1';
SQL-trace: ;
UPDATE c SET db12='ABxyzzyC', db12='two*db12';
SQL-trace: ;
UPDATE sqlsim1 SET newtable='AC', newtable='newtable*?sqlsim1';
SQL-trace: ;
UPDATE sqlsim1 SET newtable='ac', newtable=NULL;
SQL-trace: INSERT INTO t1 VALUES(17,131072);
SQL-trace: -- TRIGGER x
SQL-trace: SELECT db12 FROM c WHERE db12!=4 AND db12<=3 ORDER BY db12;
SQL-trace: SELECT one FROM c WHERE one LIKE '10%' ORDER BY one;
SQL-trace: SELECT newtable FROM sqlsim1 WHERE newtable ISNULL ORDER BY newtable;
SQL-trace: SELECT a FROM t1 WHERE a NOTNULL AND a<3 ORDER BY a;
SQL-trace: SELECT newtable FROM sqlsim1 WHERE newtable<1 OR newtable>20 ORDER BY newtable;
SQL-trace: SELECT newtable FROM sqlsim1 WHERE (newtable=0 OR newtable<0) AND newtable IS NULL ORDER BY newtable;
SQL-trace: SELECT a FROM t1 WHERE a<2 OR (a<0 OR a=0) ORDER BY a;
SQL-trace: SELECT t2 FROM sqlsim1 WHERE t2<2 OR (t2=0 OR t2<0) ORDER BY t2;
SQL-trace: SELECT db12 FROM c WHERE ((db12>0 IS NULL OR 0) AND 1) OR 0 ORDER BY db12;
SQL-trace: SELECT t2 FROM sqlsim1 WHERE LIKE('10%',newtable) ORDER BY t2;
SQL-trace: ;
SELECT CURRENT_TIMESTAMP==datetime('now');
SQL-trace: SELECT typeof(+000000009223372036854775807);
SQL-trace: SELECT '9223372036854775807.0'+0
  ;
SQL-trace: ;
SELECT '' <= "";
SQL-trace: ;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='sqlsim1' AND type!='trigger' ORDER BY rowid;
SQL-trace: INSERT INTO t1 VALUES(1, zeroblob(1024*900)) ;
SQL-trace: -- TRIGGER x

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f15cb727859 in __GI_abort () at abort.c:79
#2  0x00007f15cb727729 in __assert_fail_base (fmt=0x7f15cb8bd588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", 
    assertion=0x216480 "((p->szMalloc>0 && p->z==p->zMalloc)? 1 : 0) + ((p->flags&MEM_Dyn)!=0 ? 1 : 0) + ((p->flags&MEM_Ephem)!=0 ? 1 : 0) + ((p->flags&MEM_Static)!=0 ? 1 : 0) == 1", file=0x222c23 "sqlite3.c", line=68297, 
    function=<optimized out>) at assert.c:92
#3  0x00007f15cb738fd6 in __GI___assert_fail (
    assertion=0x216480 "((p->szMalloc>0 && p->z==p->zMalloc)? 1 : 0) + ((p->flags&MEM_Dyn)!=0 ? 1 : 0) + ((p->flags&MEM_Ephem)!=0 ? 1 : 0) + ((p->flags&MEM_Static)!=0 ? 1 : 0) == 1", file=0x222c23 "sqlite3.c", line=68297, 
    function=0x21e154 "int sqlite3VdbeCheckMemInvariants(Mem *)") at assert.c:101
#4  0x00000000002795e3 in sqlite3VdbeCheckMemInvariants (p=0xeb21f0) at sqlite3.c:68292
#5  0x00000000002c8632 in releaseMemArray (p=0xeb21f0, N=<optimized out>) at sqlite3.c:71417
#6  0x00000000002e366e in sqlite3VdbeHalt (p=0xeace90) at sqlite3.c:71458
#7  0x00000000003e1666 in sqlite3VdbeExec (p=<optimized out>) at sqlite3.c:77673
#8  0x000000000028b140 in sqlite3_step (pStmt=<optimized out>) at sqlite3.c:75131
#9  0x000000000024b5e9 in main (argc=1, argv=0x7ffcf5efcd78) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 130871] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
