GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000018,sig:06,src:007638+007661,time:3749552,execs:253568,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL-trace: ;
PRAGMA sql_trace=on;
SQL-trace: ;
SELECT a*a FROM t1;
SQL-trace: ;
pragma page_size=512;
SQL-trace: ;
pragma cache_size=16;
SQL-trace: CREATE TABLE x(sqlsim0, sqlsim1);
SQL-trace: ;
PRAGMA page_size;
SQL-trace: ;
pragma cache_size=16;
SQL-trace: ;
PRAGMA page_size
    ;
SQL-trace: ;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: COMMIT ;
SQL-trace: CREATE TABLE t2(newtable INTEGER PRIMARY KEY, c TEXT);
SQL-trace: ;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: ;
INSERT INTO x VALUES(3, randomblob(2500));
SQL-trace: ;
pragma cache_size=16;
SQL-trace: ;
ROLLBACK TO one;
SQL-trace: ;
CREATE TEMP TABLE db12(one);
SQL-trace: ATTACH 'test2.db' AS t2;
SQL-trace: ;
PRAGMA integrity_check;
SQL-trace: PRAGMA main.page_size;
SQL-trace: ;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: PRAGMA cache_size = 10;
SQL-trace: ;
BEGIN;
SQL-trace: ;
SELECT b=2 OR b=2 FROM t1;
SQL-trace: ;
INSERT INTO x(sqlsim0) VALUES('angelfish');
SQL-trace: ;
INSERT INTO t2(c) VALUES('ape');
SQL-trace: CREATE TABLE two(t0 real, t3 real);
SQL-trace: ;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t2' AND type!='trigger' ORDER BY rowid;
SQL-trace: ;
SELECT coalesce(newtable=5 OR newtable IS NULL,99) FROM t2;
SQL-trace: ;
COMMIT;
SQL-trace: ;
INSERT INTO x(sqlsim0) VALUES('bird');
SQL-trace: pragma page_size=512;
SQL-trace: ;
pragma cache_size=16;
SQL-trace: ;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='db12' AND type!='trigger' ORDER BY rowid;
SQL-trace: ;
ROLLBACK TO one;
SQL-trace: PRAGMA integrity_check;
SQL-trace: ;
SAVEPOINT two;
SQL-trace: ;
UPDATE x SET sqlsim1=sqlsim1+1;
SQL-trace: pragma auto_vacuum=2;
SQL-trace: ;
COMMIT;
SQL-trace: ;
BEGIN;
SQL-trace: CREATE TABLE i1(t5, y, t4);
SQL-trace: ;
ROLLBACK TO one;
SQL-trace: ;
SELECT t3||' hi '||t3 FROM two;
SQL-trace: ;
pragma locking_mode=exclusive ;
SQL-trace: SELECT count(*) FROM two;
SQL-trace: ;
PRAGMA integrity_check ;
SQL-trace: ;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='db12' AND type!='trigger' ORDER BY rowid;
SQL-trace: ;
BEGIN;
SQL-trace: ;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;
SQL-trace: ;
SAVEPOINT two;
SQL-trace: ;
PRAGMA integrity_check;
SQL-trace: RELEASE save1 ;
SQL-trace: ;
COMMIT;
SQL-trace: ;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: pragma auto_vacuum=2;
SQL-trace: ;
UPDATE t1 SET a='ac', a='a%_c';
SQL-trace: SELECT count(*) FROM i1;
SQL-trace: ;
COMMIT;
SQL-trace: ;
RELEASE one;
SQL-trace: ;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='x' AND type!='trigger' ORDER BY rowid;
SQL-trace: ;
UPDATE db12 SET one='abxyzzyc', one='one%_C';
SQL-trace: SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: PRAGMA auto_vacuum=OFF;
SQL-trace: PRAGMA main.page_size;
SQL-trace: SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: ;
pragma locking_mode=exclusive ;
SQL-trace: DROP TABLE i1;
SQL-trace: ;
UPDATE t1 SET b='abc7', b='b%7_';
SQL-trace: ;
CREATE TABLE main.i1(t5, y);
SQL-trace: PRAGMA integrity_check;
SQL-trace: ;
COMMIT;
SQL-trace: SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: ;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;
SQL-trace: PRAGMA integrity_check;
SQL-trace: SAVEPOINT one;
SQL-trace: PRAGMA integrity_check;
SQL-trace: SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: ;
SELECT DISTINCT p.b
      FROM t1 p, t1 d
     WHERE d.b=p.b
       AND NOT EXISTS (
             SELECT b FROM t1 d1 WHERE d1.b=p.b
             EXCEPT
             SELECT b FROM t1 w
           );
SQL-trace: ;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: ;
UPDATE x SET sqlsim1='ABC', sqlsim1='sqlsim1[]sqlsim1]tx';
SQL-trace: SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: ;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='db12' AND type!='trigger' ORDER BY rowid;
SQL-trace: ;
ANALYZE;
SQL-trace: SELECT tbl,idx,stat FROM 'main'.sqlite_stat1
SQL-trace: SELECT 'a', * FROM t1 ;
SQL-trace: SELECT tbl,idx,stat FROM 'main'.sqlite_stat1;
SQL-trace: SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: RELEASE one;
SQL-trace: ;
SAVEPOINT three;
SQL-trace: SELECT a FROM t1 WHERE GLOB('1*4',a) ORDER BY a;
SQL-trace: PRAGMA integrity_check;
SQL-trace: ;
ROLLBACK TO two;
SQL-trace: SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: PRAGMA integrity_check;
SQL-trace: SELECT CURRENT_TIMESTAMP;
SQL-trace: SELECT * FROM sqlite_master;
SQL-trace: ;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='db12' AND type!='trigger' ORDER BY rowid;
SQL-trace: PRAGMA integrity_check;
SQL-trace: ;
SAVEPOINT one;
SQL-trace: ;
CREATE TABLE t4(foo, yy, UNIQUE(foo, yy));
SQL-trace: ;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='x' AND type!='trigger' ORDER BY rowid;
SQL-trace: PRAGMA integrity_check;
SQL-trace: ;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='tx' AND type='index' ORDER BY rowid;
SQL-trace: ;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: SELECT name, rootpage, sql FROM "temp".sqlite_temp_master ORDER BY rowid;
SQL-trace: DROP TABLE IF EXISTS t2;
SQL-trace: ;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: ;
DROP TABLE IF EXISTS t2;
SQL-trace: ;
DROP TABLE IF EXISTS t3;
SQL-trace: CREATE TABLE tkt3376(tx, x1);
SQL-trace: ;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='x' AND type!='trigger' ORDER BY rowid;
SQL-trace: INSERT INTO i1 VALUES(1, 2);
SQL-trace: ;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: ;
COMMIT;
SQL-trace: ;
PRAGMA journal_mode = off;
SQL-trace: ;
ROLLBACK;
SQL-trace: ;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: CREATE TABLE x2(y1);
[Inferior 1 (process 129137) exited normally]
(gdb) (gdb) quit
