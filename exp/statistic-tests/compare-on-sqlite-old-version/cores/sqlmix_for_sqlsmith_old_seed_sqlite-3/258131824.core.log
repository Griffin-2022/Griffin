GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000601,sig:06,src:011217+009044,time:41660992,execs:6351011,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [PRAGMA writable_schema = 1;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [PRAGMA locking_mode=EXCLUSIVE;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0 exclusive     00 r[1]='exclusive'
REG[1] =   t9[exclusive](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t9[exclusive](8)
   3 Halt             0    0    0               00 
SQL: [ROLLBACK ;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       1    1    0               00 
SQL: [CREATE TABLE a(b INTEGER PRIMARY KEY);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    1 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:2
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:2
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:2
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 a             00 r[7]='a'
REG[7] =   t1[a](8)
  21 String8          0    8    0 a             00 r[8]='a'
REG[8] =   t1[a](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  23 String8          0   10    0 CREATE TABLE a(b INTEGER PRIMARY KEY) 00 r[10]='CREATE TABLE a(b INTEGER PRIMARY KEY)'
REG[10] =   t37[CREATE TABLE a(](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s51[06170F0F01577461626C656161034352.....Wtableaa.CR](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s51[06170F0F01577461626C656161034352.....Wtableaa.CR](8)
REG[5] =  i:2
  26 Close            1    0    0               00 
  27 SetCookie        0    1    2               00 
  28 ParseSchema      0    0    0 tbl_name='a' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[a](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s37[CREATE TABLE a(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[a](8)
REG[6] =  i:3
REG[7] =   s37[CREATE TABLE a(](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;
INSERT INTO a(b,b) VALUES(1000000,77);]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    1    2 0             01 usesStmtJournal=0
  14 TableLock        0    3    1 a             00 iDb=0 root=3 write=1
  15 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 1             00 root=3 iDb=0; a
   2 Integer         77    1    0               00 r[1]=77
REG[1] =  i:77
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  i:77
   5 MustBeInt        1    0    0               00 
REG[1] =  i:77
   6 SoftNull         2    0    0               00 r[2]=NULL
   7 NotExists        0    9    1               00 intkey=r[1]
REG[1] =  i:77
   9 MakeRecord       2    1    3 D             00 r[3]=mkrec(r[2])
REG[3] =  s2[0200..](8)
  10 Insert           0    3    1 a             13 intkey=r[1] data=r[3]
REG[3] =  s2[0200..](8)
REG[1] =  i:77
  11 Noop             0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    2 0             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s12[sqlite_stat1](8)
REG[2] =  i:2
REG[3] =   s39[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s37[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:3
REG[3] =   s37[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
RELEASE sp1;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        1    0    0 sp1           00 
SQL: [;
CREATE INDEX temp_store_directory_test ON a(substr(b,b,3));]
VDBE Trace:
   0 Init             0   36    0               00 Start at 36
  36 Transaction      0    1    2 0             01 usesStmtJournal=0
  37 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  38 TableLock        0    3    1 a             00 iDb=0 root=3 write=1
  39 Integer          3   14    0               00 r[14]=3
REG[14] =  i:3
  40 Goto             0    1    0               00 
   1 Noop             0   35    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:4
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:3
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 temp_store_directory_test 00 r[4]='temp_store_directory_test'
REG[4] =   t25[temp_store_dire](8)
   7 String8          0    5    0 a             00 r[5]='a'
REG[5] =   t1[a](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:4
   9 String8          0    7    0 CREATE INDEX temp_store_directory_test ON a(substr(b,b,3)) 00 r[7]='CREATE INDEX temp_store_directory_test ON a(substr(b,b,3))'
REG[7] =   t58[CREATE INDEX te](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s97[07173F0F018101696E64657874656D70..?....indextemp](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s97[07173F0F018101696E64657874656D70..?....indextemp](8)
REG[2] =  i:3
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    1 k(2,,)        00 
  14 OpenRead         1    3    0 1             00 root=3 iDb=0; a
  15 Rewind           1   23    0               00 
  16 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:77
  17 Copy            12   13    0               00 r[13]=r[12]
REG[13] =  i:77
  18 Function0        4   12   10 substr(3)     03 r[10]=func(r[12..14])
REG[12] =  i:77
REG[13] =  i:77
REG[14] =  i:3
REG[10] =   s0[](8)
  19 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:77
  20 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s4[030D014D...M](8)
  21 SorterInsert     3    9    0               00 
REG[9] =  s4[030D014D...M](8)
  22 Next             1   16    0               00 
  23 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  24 SorterSort       3   29    0               00 
  25 SorterData       3    9    2               00 r[9]=data
  26 Last             2    0   -1               00 
  27 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s4[030D014D...M](8)
  28 SorterNext       3   25    0               00 
  29 Close            1    0    0               00 
  30 Close            2    0    0               00 
  31 Close            3    0    0               00 
  32 SetCookie        0    1    3               00 
  33 ParseSchema      0    0    0 name='temp_store_directory_test' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 temp_store_directory_test 00 r[2]='temp_store_directory_test'
REG[2] =   t25[temp_store_dire](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s25[temp_store_dire](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s25[temp_store_dire](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s58[CREATE INDEX te](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s25[temp_store_dire](8)
REG[6] =  i:4
REG[7] =   s58[CREATE INDEX te](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  34 Expire           0    0    0               00 
  35 Halt             0    0    0               00 
SQL: [;
UPDATE a SET b=b||hex(randomblob(700));]
VDBE Trace:
   0 Init             0   42    0               00 Start at 42
  42 Transaction      0    1    3 0             01 usesStmtJournal=1
  43 TableLock        0    3    1 a             00 iDb=0 root=3 write=1
  44 Integer        700    9    0               00 r[9]=700
REG[9] =  i:700
  45 Integer          3   14    0               00 r[14]=3
REG[14] =  i:3
  46 Integer          3   17    0               00 r[17]=3
REG[17] =  i:3
  47 Goto             0    1    0               00 
   1 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
   2 OpenRead         0    3    0 0             00 root=3 iDb=0; a
   3 Explain          0    0    0 SCAN TABLE a  00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:77
   6 RowSetAdd        2    3    0               00 rowset(2)=r[3]
REG[2] =  NULL
REG[3] =  i:77
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 OpenWrite        0    3    0 1             00 root=3 iDb=0; a
  10 OpenWrite        1    4    0 k(2,,)        00 root=4 iDb=0; temp_store_directory_test
  11 RowSetRead       2   39    3               00 r[3]=rowset(2)
REG[2] =  (rowset)
REG[3] =  i:77
  12 NotExists        0   11    3               00 intkey=r[3]
REG[3] =  i:77
  13 Rowid            0    6    0               00 r[6]=rowid
REG[6] =  i:77
  14 Function0        1    9    8 randomblob(1) 01 r[8]=func(r[9])
REG[9] =  i:700
REG[8] =  z700[966966B99969E30BF4F38F3BBEAE2A93.if..i.....;..*.](8)
  15 Function0        0    8    7 hex(1)        01 r[7]=func(r[8])
REG[8] =  z700[966966B99969E30BF4F38F3BBEAE2A93.if..i.....;..*.](8)
REG[7] =   z1400[966966B99969E30](8)
  16 Concat           7    6    4               00 r[4]=r[6]+r[7]
REG[7] =   z1400[966966B99969E30](8)
REG[6] =  i:77
REG[4] =   s1402[77966966B99969E](8)
  17 MustBeInt        4    0    0               00 
REG[4] =   s1402[77966966B99969E](8)
SQL: [CREATE TRIGGER temp_table AFTER UPDATE ON a BEGIN
      UPDATE a SET b = b+1;
    END;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    1    3 0             01 usesStmtJournal=0
  15 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  16 Goto             0    1    0               00 
   1 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   3 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   4 String8          0    3    0 temp_table    00 r[3]='temp_table'
REG[3] =   t10[temp_table](8)
   5 String8          0    4    0 a             00 r[4]='a'
REG[4] =   t1[a](8)
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 String8          0    6    0 CREATE TRIGGER temp_table AFTER UPDATE ON a BEGIN
      UPDATE a SET b = b+1;
    END 00 r[6]='CREATE TRIGGER temp_table AFTER UPDATE ON a BEGIN
      UPDATE a SET b = b+1;
    END'
REG[6] =   t85[CREATE TRIGGER ](8)
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
REG[7] =  s110[071B210F088137747269676765727465..!...7triggerte](8)
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
REG[7] =  s110[071B210F088137747269676765727465..!...7triggerte](8)
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 SetCookie        0    1    4               00 
  12 ParseSchema      0    0    0 type='trigger' AND name='temp_table' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  19 String8          0    4    0 temp_table    00 r[4]='temp_table'
REG[4] =   t10[temp_table](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[index](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s10[temp_table](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t10[temp_table](8)
REG[3] =   s10[temp_table](8)
   9 Copy             3    5    0               00 r[5]=r[3]
REG[5] =   s10[temp_table](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:0
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s85[CREATE TRIGGER ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s10[temp_table](8)
REG[6] =  i:0
REG[7] =   s85[CREATE TRIGGER ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [;
SELECT rowid, * FROM a;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    4 0             01 usesStmtJournal=0
  11 TableLock        0    3    0 a             00 iDb=0 root=3 write=0
  12 Goto             0    1    0               00 
   1 OpenRead         0    3    0 0             00 root=3 iDb=0; a
   2 Explain          0    0    0 SCAN TABLE a  00 
   3 Rewind           0    8    0               00 
   4 Rowid            0    1    0               00 r[1]=rowid
REG[1] =  i:77
   5 Copy             1    2    0               00 r[2]=r[1]
REG[2] =  i:77
   6 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =  i:77
REG[2] =  i:77
   7 Next             0    4    0               01 
   8 Close            0    0    0               00 
   9 Halt             0    0    0               00 
SQL: [;
UPDATE a SET b=1, b=-3;]
VDBE Trace:
   0 Init             0   41    0               00 Start at 41
  41 Transaction      0    1    4 0             01 usesStmtJournal=1
  42 TableLock        0    3    1 a             00 iDb=0 root=3 write=1
  43 Integer          3   11    0               00 r[11]=3
REG[11] =  i:3
  44 Integer          3   14    0               00 r[14]=3
REG[14] =  i:3
  45 Goto             0    1    0               00 
   1 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
   2 OpenRead         0    3    0 0             00 root=3 iDb=0; a
   3 Explain          0    0    0 SCAN TABLE a  00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:77
   6 RowSetAdd        2    3    0               00 rowset(2)=r[3]
REG[2] =  NULL
REG[3] =  i:77
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 OpenWrite        0    3    0 1             00 root=3 iDb=0; a
  10 OpenWrite        1    4    0 k(2,,)        00 root=4 iDb=0; temp_store_directory_test
  11 RowSetRead       2   38    3               00 r[3]=rowset(2)
REG[2] =  (rowset)
REG[3] =  i:77
  12 NotExists        0   11    3               00 intkey=r[3]
REG[3] =  i:77
  13 Integer         -3    5    0               00 r[5]=-3
REG[5] =  i:-3
  14 MustBeInt        5    0    0               00 
REG[5] =  i:-3
  15 Rowid            0    4    0               00 r[4]=rowid; a.b
REG[4] =  i:77
  16 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  17 Eq               5   20    3               90 if r[5]==r[3] goto 20
REG[5] =  i:-3
REG[3] =  i:77
  18 NotExists        0   20    5               00 intkey=r[5]
REG[5] =  i:-3
  20 Affinity         6    1    0 D             00 affinity(r[6])
  21 Copy             5    9    0               00 r[9]=r[5]
REG[9] =  i:-3
  22 Copy             5   10    0               00 r[10]=r[5]
REG[10] =  i:-3
  23 Function0        4    9    7 substr(3)     03 r[7]=func(r[9..11]); temp_store_directory_test column 0
REG[9] =  i:-3
REG[10] =  i:-3
REG[11] =  i:3
REG[7] =   s2[-3](8)
  24 IntCopy          5    8    0               00 r[8]=r[5]; rowid
REG[8] =  i:-3
  25 MakeRecord       7    2    1               00 r[1]=mkrec(r[7..8]); for temp_store_directory_test
REG[1] =  s6[0311012D33FD...-3.](8)
  26 NotExists        0   33    3               00 intkey=r[3]
REG[3] =  i:77
  27 Rowid            0   12    0               00 r[12]=rowid
REG[12] =  i:77
  28 Copy            12   13    0               00 r[13]=r[12]
REG[13] =  i:77
  29 Function0        4   12    7 substr(3)     03 r[7]=func(r[12..14])
REG[12] =  i:77
REG[13] =  i:77
REG[14] =  i:3
REG[7] =   s0[](8)
  30 Rowid            0    8    0               00 r[8]=rowid
REG[8] =  i:77
  31 IdxDelete        1    7    2               00 key=r[7..8]
  32 Delete           0    0    0               00 
  33 IdxInsert        1    1    0               00 key=r[1]
REG[1] =  s6[0311012D33FD...-3.](8)
  34 MakeRecord       6    1   15               00 r[15]=mkrec(r[6])
REG[15] =  s2[0200..](8)
  35 Insert           0   15    5 a             05 intkey=r[5] data=r[15]
REG[15] =  s2[0200..](8)
REG[5] =  i:-3
  36 Program          3   11   16 program       01 Call: temp_table.default
   0 Init             0    0    0 -- TRIGGER temp_table 00 Start at 0; Start: temp_table.default (AFTER UPDATE ON a)
   1 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
   2 OpenRead         0    3    0 0             00 root=3 iDb=0; a
   3 Explain          0    0    0 SCAN TABLE a  00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:-3
   6 RowSetAdd        2    3    0               00 rowset(2)=r[3]
REG[2] =  NULL
REG[3] =  i:-3
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 OpenWrite        0    3    0 1             00 root=3 iDb=0; a
  10 OpenWrite        1    4    0 k(2,,)        00 root=4 iDb=0; temp_store_directory_test
  11 RowSetRead       2   42    3               00 r[3]=rowset(2)
REG[2] =  (rowset)
REG[3] =  i:-3
  12 NotExists        0   11    3               00 intkey=r[3]
REG[3] =  i:-3
  13 Rowid            0    7    0               00 r[7]=rowid
REG[7] =  i:-3
  14 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  15 Add              8    7    5               00 r[5]=r[8]+r[7]
REG[8] =  i:1
REG[7] =  i:-3
REG[5] =  i:-2
  16 MustBeInt        5    0    0               00 
REG[5] =  i:-2
  17 Rowid            0    4    0               00 r[4]=rowid; a.b
REG[4] =  i:-3
  18 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  19 Eq               5   22    3               90 if r[5]==r[3] goto 22
REG[5] =  i:-2
REG[3] =  i:-3
  20 NotExists        0   22    5               00 intkey=r[5]
REG[5] =  i:-2
  22 Affinity         6    1    0 D             00 affinity(r[6])
  23 Copy             5   11    0               00 r[11]=r[5]
REG[11] =  i:-2
  24 Copy             5   12    0               00 r[12]=r[5]
REG[12] =  i:-2
  25 Integer          3   13    0               00 r[13]=3
REG[13] =  i:3
  26 Function0        4   11    9 substr(3)     03 r[9]=func(r[11..13]); temp_store_directory_test column 0
REG[11] =  i:-2
REG[12] =  i:-2
REG[13] =  i:3
REG[9] =   s2[-2](8)
  27 IntCopy          5   10    0               00 r[10]=r[5]; rowid
REG[10] =  i:-2
  28 MakeRecord       9    2    1               00 r[1]=mkrec(r[9..10]); for temp_store_directory_test
REG[1] =  s6[0311012D32FE...-2.](8)
  29 NotExists        0   37    3               00 intkey=r[3]
REG[3] =  i:-3
  30 Copy             7   14    0               00 r[14]=r[7]
REG[14] =  i:-3
  31 Copy             7   15    0               00 r[15]=r[7]
REG[15] =  i:-3
  32 Integer          3   16    0               00 r[16]=3
REG[16] =  i:3
  33 Function0        4   14    9 substr(3)     03 r[9]=func(r[14..16])
REG[14] =  i:-3
REG[15] =  i:-3
REG[16] =  i:3
REG[9] =   s2[-3](8)
  34 Rowid            0   10    0               00 r[10]=rowid
REG[10] =  i:-3
  35 IdxDelete        1    9    2               00 key=r[9..10]
  36 Delete           0    0    0               00 
  37 IdxInsert        1    1    0               00 key=r[1]
REG[1] =  s6[0311012D32FE...-2.](8)
  38 MakeRecord       6    1    8               00 r[8]=mkrec(r[6])
REG[8] =  s2[0200..](8)
  39 Insert           0    8    5 a             05 intkey=r[5] data=r[8]
REG[8] =  s2[0200..](8)
REG[5] =  i:-2
  40 Program          3   11   17 program       01 Call: temp_table.default
  41 Goto             0   11    0               00 
  11 RowSetRead       2   42    3               00 r[3]=rowset(2)
REG[2] =  (rowset)
REG[3] =  i:-3
  42 Close            1    0    0               00 
  43 Close            0    0    0               00 
  44 ResetCount       0    0    0               00 
  45 Halt             0    0    0               00 End: temp_table.default
  37 Goto             0   11    0               00 
  11 RowSetRead       2   38    3               00 r[3]=rowset(2)
REG[2] =  (rowset)
REG[3] =  i:77
  38 Close            1    0    0               00 
  39 Noop             0    0    0               00 
  40 Halt             0    0    0               00 
SQL: [;
SELECT -9223372036854775808%-1 FROM a;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    4 0             01 usesStmtJournal=0
  10 TableLock        0    3    0 a             00 iDb=0 root=3 write=0
  11 Int64            0    2    0 -9223372036854775808 00 r[2]=-9223372036854775808
REG[2] =  i:-9223372036854775808
  12 Integer         -1    3    0               00 r[3]=-1
REG[3] =  i:-1
  13 Goto             0    1    0               00 
   1 OpenRead         0    3    0 0             00 root=3 iDb=0; a
   2 Explain          0    0    0 SCAN TABLE a  00 
   3 Rewind           0    7    0               00 
   4 Remainder        3    2    1               00 r[1]=r[2]%r[3]
REG[3] =  i:-1
REG[2] =  i:-9223372036854775808
REG[1] =  i:0
   5 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   6 Next             0    4    0               01 
   7 Close            0    0    0               00 
   8 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [;
ALTER TABLE a ADD t CHECK (temp_table>t);]
VDBE Trace:
   0 Init             0   37    0               00 Start at 37
  37 Transaction      0    1    4 0             01 usesStmtJournal=0
  38 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  39 String8          0    9    0 table         00 r[9]='table'
REG[9] =   t5[table](8)
  40 String8          0   11    0 a             00 r[11]='a'
REG[11] =   t1[a](8)
  41 Integer          1   14    0               00 r[14]=1
REG[14] =  i:1
  42 Integer         36   15    0               00 r[15]=36
REG[15] =  i:36
  43 String8          0   16    0 ,             00 r[16]=', '
REG[16] =   t2[, ](8)
  44 String8          0   17    0 t CHECK (temp_table>t) 00 r[17]='t CHECK (temp_table>t)'
REG[17] =   t22[t CHECK (temp_t](8)
  45 Integer         37   19    0               00 r[19]=37
REG[19] =  i:37
  46 Goto             0    1    0               00 
   1 SetCookie        0    1    5               00 
   2 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   3 OpenRead         0    1    0 2             00 root=1 iDb=0; sqlite_master
   4 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   5 Rewind           0   13    0               00 
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   7 Ne               9   12    8 (BINARY)      52 if r[9]!=r[8] goto 12
REG[9] =   t5[table](8)
REG[8] =   s5[table](8)
   8 Column           0    1   10               00 r[10]=sqlite_master.name
REG[10] =   s12[sqlite_stat1](8)
   9 Ne              11   12   10 (BINARY)      52 if r[11]!=r[10] goto 12
REG[11] =   t1[a](8)
REG[10] =   s12[sqlite_stat1](8)
  12 Next             0    6    0               01 
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   7 Ne               9   12    8 (BINARY)      52 if r[9]!=r[8] goto 12
REG[9] =   t5[table](8)
REG[8] =   s5[table](8)
   8 Column           0    1   10               00 r[10]=sqlite_master.name
REG[10] =   s1[a](8)
   9 Ne              11   12   10 (BINARY)      52 if r[11]!=r[10] goto 12
REG[11] =   t1[a](8)
REG[10] =   s1[a](8)
  10 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
  11 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:2
  12 Next             0    6    0               01 
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   7 Ne               9   12    8 (BINARY)      52 if r[9]!=r[8] goto 12
REG[9] =   t5[table](8)
REG[8] =   s5[index](8)
  12 Next             0    6    0               01 
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s7[trigger](8)
   7 Ne               9   12    8 (BINARY)      52 if r[9]!=r[8] goto 12
REG[9] =   t5[table](8)
REG[8] =   s7[trigger](8)
  12 Next             0    6    0               01 
  13 Close            0    0    0               00 
  14 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
  15 RowSetRead       1   31    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  16 NotExists        0   15    2               00 intkey=r[2]
REG[2] =  i:2
  17 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
  18 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[a](8)
  19 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
REG[5] =   s1[a](8)
  20 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  21 Column           0    4   13               00 r[13]=sqlite_master.sql
REG[13] =   s37[CREATE TABLE a(](8)
  22 Function0        6   13   12 substr(3)     03 r[12]=func(r[13..15])
REG[13] =   s37[CREATE TABLE a(](8)
REG[14] =  i:1
REG[15] =  i:36
REG[12] =   s36[CREATE TABLE a(](8)
  23 Concat          16   12    8               00 r[8]=r[12]+r[16]
REG[16] =   t2[, ](8)
REG[12] =   s36[CREATE TABLE a(](8)
REG[8] =   s38[CREATE TABLE a(](8)
  24 Concat          17    8   10               00 r[10]=r[8]+r[17]
REG[17] =   t22[t CHECK (temp_t](8)
REG[8] =   s38[CREATE TABLE a(](8)
REG[10] =   s60[CREATE TABLE a(](8)
  25 Column           0    4   18               00 r[18]=sqlite_master.sql
REG[18] =   s37[CREATE TABLE a(](8)
  26 Function0        2   18    8 substr(2)     02 r[8]=func(r[18..19])
REG[18] =   s37[CREATE TABLE a(](8)
REG[19] =  i:37
REG[8] =   s1[)](8)
  27 Concat           8   10    7               00 r[7]=r[10]+r[8]
REG[8] =   s1[)](8)
REG[10] =   s60[CREATE TABLE a(](8)
REG[7] =   s61[CREATE TABLE a(](8)
  28 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s76[07170F0F0181077461626C6561610343.......tableaa.C](8)
  29 Insert           0    8    2               00 intkey=r[2] data=r[8]
REG[8] =  s76[07170F0F0181077461626C6561610343.......tableaa.C](8)
REG[2] =  i:2
  30 Goto             0   15    0               00 
  15 RowSetRead       1   31    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  31 Close            0    0    0               00 
  32 SetCookie        0    2    4               00 
  33 DropTrigger      0    0    0 temp_table    00 
  34 DropTable        0    0    0 a             00 
  35 ParseSchema      0    0    0 tbl_name='a'  00 
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    5 0             00 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  17 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t1[a](8)
REG[1] =   s12[sqlite_stat1](8)
  11 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s1[a](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:3
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s61[CREATE TABLE a(](8)
  10 ResultRow        3    3    0               00 output=r[3..5]
REG[3] =   s1[a](8)
REG[4] =  i:3
REG[5] =   s61[CREATE TABLE a(](8)
  11 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s25[temp_store_dire](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:4
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s58[CREATE INDEX te](8)
  10 ResultRow        3    3    0               00 output=r[3..5]
REG[3] =   s25[temp_store_dire](8)
REG[4] =  i:4
REG[5] =   s58[CREATE INDEX te](8)
  11 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s10[temp_table](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:0
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s85[CREATE TRIGGER ](8)
  10 ResultRow        3    3    0               00 output=r[3..5]
REG[3] =   s10[temp_table](8)
REG[4] =  i:0
REG[5] =   s85[CREATE TRIGGER ](8)
  11 Next             0    5    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    5 1             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s12[sqlite_stat1](8)
REG[2] =  i:2
REG[3] =   s39[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s61[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:3
REG[3] =   s61[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s25[temp_store_dire](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s58[CREATE INDEX te](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s25[temp_store_dire](8)
REG[2] =  i:4
REG[3] =   s58[CREATE INDEX te](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s10[temp_table](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s85[CREATE TRIGGER ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s10[temp_table](8)
REG[2] =  i:0
REG[3] =   s85[CREATE TRIGGER ](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
SELECT b-b FROM a;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    5 1             01 usesStmtJournal=0
  11 TableLock        0    3    0 a             00 iDb=0 root=3 write=0
  12 Goto             0    1    0               00 
   1 OpenRead         0    3    0 0             00 root=3 iDb=0; a
   2 Explain          0    0    0 SCAN TABLE a  00 
   3 Rewind           0    8    0               00 
   4 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:-2
   5 Subtract         2    2    1               00 r[1]=r[2]-r[2]
REG[2] =  i:-2
REG[2] =  i:-2
REG[1] =  i:0
   6 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   7 Next             0    4    0               01 
   8 Close            0    0    0               00 
   9 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    5 1             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s12[sqlite_stat1](8)
REG[2] =  i:2
REG[3] =   s39[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s61[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:3
REG[3] =   s61[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s25[temp_store_dire](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s58[CREATE INDEX te](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s25[temp_store_dire](8)
REG[2] =  i:4
REG[3] =   s58[CREATE INDEX te](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s10[temp_table](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s85[CREATE TRIGGER ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s10[temp_table](8)
REG[2] =  i:0
REG[3] =   s85[CREATE TRIGGER ](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007ff86989b859 in __GI_abort () at abort.c:79
#2  0x00007ff86989b729 in __assert_fail_base (fmt=0x7ff869a31588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x20d94f "op==TK_CASE", file=0x222c23 "sqlite3.c", line=92150, function=<optimized out>) at assert.c:92
#3  0x00007ff8698acfd6 in __GI___assert_fail (assertion=0x20d94f "op==TK_CASE", file=0x222c23 "sqlite3.c", line=92150, function=0x21a1ea "int sqlite3ExprCodeTarget(Parse *, Expr *, int)") at assert.c:101
#4  0x000000000037b938 in sqlite3ExprCodeTarget (pParse=0x24fd450, pExpr=0x250c470, target=12) at sqlite3.c:92150
#5  0x000000000037228a in sqlite3ExprCodeTemp (pParse=0x24fd450, pExpr=0x250c470, pReg=0x7ffc0ae63774) at sqlite3.c:92302
#6  0x0000000000371435 in sqlite3ExprIfTrue (pParse=0x24fd450, pExpr=0x250c700, dest=<optimized out>, jumpIfNull=16) at sqlite3.c:92559
#7  0x0000000000384b90 in sqlite3GenerateConstraintChecks (pParse=<optimized out>, pTab=0x2502130, aRegIdx=<optimized out>, iDataCur=0, iIdxCur=1, regNewData=1, regOldData=0, pkChng=0 '\000', overrideError=10 '\n', 
    ignoreDest=-13, pbMayReplace=0x7ffc0ae63a60, aiChng=0x0) at sqlite3.c:107197
#8  0x00000000003418e6 in sqlite3Insert (pParse=<optimized out>, pTabList=<optimized out>, pSelect=<optimized out>, pColumn=0x24fc9c0, onError=<optimized out>) at sqlite3.c:106860
#9  0x00000000003066b3 in yy_reduce (yypParser=0x2508fd0, yyruleno=<optimized out>) at sqlite3.c:133484
#10 0x00000000002fef8e in sqlite3Parser (yyp=0x2508fd0, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#11 0x00000000002fc544 in sqlite3RunParser (pParse=0x24fd450, 
    zSql=0x250b5e0 "INSERT INTO a(t,t,t)\n    VALUES(1,2,3),(7,8,9),(4,5,6),(10,11,12),(4,8,12),(1,11,111);;\nUPDATE a SET t=-9223372036854775808, t=0;PRAGMA integrity_check;;\nSELECT 500 = 500.0 FROM a;SELECT 1 FROM a WHER"..., pzErrMsg=0x7ffc0ae63ce8) at sqlite3.c:135186
#12 0x00000000002fac4e in sqlite3Prepare (db=0x24ea850, 
    zSql=0x24eb9d7 "INSERT INTO a(t,t,t)\n    VALUES(1,2,3),(7,8,9),(4,5,6),(10,11,12),(4,8,12),(1,11,111);;\nUPDATE a SET t=-9223372036854775808, t=0;PRAGMA integrity_check;;\nSELECT 500 = 500.0 FROM a;SELECT 1 FROM a WHER"..., nBytes=<optimized out>, saveSqlFlag=1, pReprepare=<optimized out>, ppStmt=0x7ffc0ae63e18, pzTail=0x7ffc0ae63e00) at sqlite3.c:112589
#13 0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0x24ea850, 
    zSql=0x24eb9d7 "INSERT INTO a(t,t,t)\n    VALUES(1,2,3),(7,8,9),(4,5,6),(10,11,12),(4,8,12),(1,11,111);;\nUPDATE a SET t=-9223372036854775808, t=0;PRAGMA integrity_check;;\nSELECT 500 = 500.0 FROM a;SELECT 1 FROM a WHER"..., nBytes=845, saveSqlFlag=1, pOld=0x0, ppStmt=<optimized out>, pzTail=0x7ffc0ae63e00) at sqlite3.c:112688
#14 0x000000000028f38c in sqlite3_prepare_v2 (db=0x2, zSql=0x7ffc0ae632e0 "", nBytes=0, ppStmt=0x7ffc0ae63e18, pzTail=<optimized out>) at sqlite3.c:112764
#15 0x000000000024b100 in main (argc=1, argv=0x7ffc0ae63fc8) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 17264] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
