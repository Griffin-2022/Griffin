GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000311,sig:06,src:005627+009641,time:18347353,execs:2625690,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    0 0             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    0 0             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [CREATE TABLE a(b COLLATE nocase PRIMARY KEY);]
VDBE Trace:
   0 Init             0   42    0               00 Start at 42
  42 Transaction      0    1    0 0             01 usesStmtJournal=0
  43 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  44 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Noop             0   23    0               00 
  12 CreateIndex      0    4    0               00 r[4]=root iDb=0
REG[4] =  i:3
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:2
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_a_1 00 r[7]='sqlite_autoindex_a_1'
REG[7] =   t20[sqlite_autoinde](8)
  17 String8          0    8    0 a             00 r[8]='a'
REG[8] =   t1[a](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:3
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s33[0617350F0100696E64657873716C6974..5...indexsqlit](8)
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  s33[0617350F0100696E64657873716C6974..5...indexsqlit](8)
REG[5] =  i:2
  22 Close            1    0    0               00 
  23 Close            0    0    0               00 
  24 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  25 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  26 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  27 MustBeInt        1   30    0               00 
REG[1] =  i:1
  28 NotExists        2   30    1               00 intkey=r[1]; pk
REG[1] =  i:1
  29 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:1
  30 IsNull          13   38    0               00 if r[13]==NULL goto 38
REG[13] =  i:1
  31 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  32 String8          0   15    0 a             00 r[15]='a'
REG[15] =   t1[a](8)
  33 String8          0   16    0 a             00 r[16]='a'
REG[16] =   t1[a](8)
  34 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:2
  35 String8          0   18    0 CREATE TABLE a(b COLLATE nocase PRIMARY KEY) 00 r[18]='CREATE TABLE a(b COLLATE nocase PRIMARY KEY)'
REG[18] =   t44[CREATE TABLE a(](8)
  36 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s58[06170F0F01657461626C656161024352.....etableaa.CR](8)
  37 Insert           2   19   13               00 intkey=r[13] data=r[19]
REG[19] =  s58[06170F0F01657461626C656161024352.....etableaa.CR](8)
REG[13] =  i:1
  38 Close            2    0    0               00 
  39 SetCookie        0    1    1               00 
  40 ParseSchema      0    0    0 tbl_name='a' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    1 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[a](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s44[CREATE TABLE a(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[a](8)
REG[6] =  i:2
REG[7] =   s44[CREATE TABLE a(](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s20[sqlite_autoinde](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =  NULL
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s20[sqlite_autoinde](8)
REG[6] =  i:3
REG[7] =  NULL
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  41 Halt             0    0    0               00 
SQL: [;
PRAGMA page_size = 1024;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [PRAGMA page_size=1024;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='a' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    1 0             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[a](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s44[CREATE TABLE a(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[a](8)
REG[6] =  i:2
REG[7] =   s44[CREATE TABLE a(](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s20[sqlite_autoinde](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =  NULL
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s20[sqlite_autoinde](8)
REG[6] =  i:3
REG[7] =  NULL
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [INSERT INTO a VALUES('abc');]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1    1 0             01 usesStmtJournal=0
  17 TableLock        0    2    1 a             00 iDb=0 root=2 write=1
  18 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 1             00 root=2 iDb=0; a
   2 OpenWrite        1    3    0 k(2,NOCASE,)  00 root=3 iDb=0; sqlite_autoindex_a_1
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   4 String8          0    2    0 abc           00 r[2]='abc'
REG[2] =   t3[abc](8)
   5 SCopy            2    4    0               00 r[4]=r[2]; b
REG[4] =   t3[abc](8)
   6 IntCopy          1    5    0               00 r[5]=r[1]; rowid
REG[5] =  i:1
   7 MakeRecord       4    2    3               00 r[3]=mkrec(r[4..5]); for sqlite_autoindex_a_1
REG[3] =  s6[031309616263...abc](8)
   8 NoConflict       1   10    4 1             00 key=r[4]
REG[4] =   t3[abc](8)
  10 IdxInsert        1    3    0               10 key=r[3]
REG[3] =  s6[031309616263...abc](8)
  11 MakeRecord       2    1    7               00 r[7]=mkrec(r[2])
REG[7] =  s5[0213616263..abc](8)
  12 Insert           0    7    1 a             1B intkey=r[1] data=r[7]
REG[7] =  s5[0213616263..abc](8)
REG[1] =  i:1
  13 Close            0    0    0               00 
  14 Noop             1    0    0               00 
  15 Halt             0    0    0               00 
SQL: [INSERT INTO a VALUES(randomblob(2048))
  ;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1    1 0             01 usesStmtJournal=0
  17 TableLock        0    2    1 a             00 iDb=0 root=2 write=1
  18 Integer       2048    4    0               00 r[4]=2048
REG[4] =  i:2048
  19 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 1             00 root=2 iDb=0; a
   2 OpenWrite        1    3    0 k(2,NOCASE,)  00 root=3 iDb=0; sqlite_autoindex_a_1
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   4 Function0        1    4    2 randomblob(1) 01 r[2]=func(r[4])
REG[4] =  i:2048
REG[2] =  z2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
   5 SCopy            2    5    0               00 r[5]=r[2]; b
REG[5] =  e2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
   6 IntCopy          1    6    0               00 r[6]=r[1]; rowid
REG[6] =  i:2
   7 MakeRecord       5    2    3               00 r[3]=mkrec(r[5..6]); for sqlite_autoindex_a_1
REG[3] =  s2053[04A00C01124C27C6729238C9A264C17C.....L'.r.8..d.|](8)
   8 NoConflict       1   10    5 1             00 key=r[5]
REG[5] =  e2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  10 IdxInsert        1    3    0               10 key=r[3]
REG[3] =  s2053[04A00C01124C27C6729238C9A264C17C.....L'.r.8..d.|](8)
  11 MakeRecord       2    1    8               00 r[8]=mkrec(r[2])
REG[8] =  s2051[03A00C124C27C6729238C9A264C17C0A....L'.r.8..d.|.](8)
  12 Insert           0    8    1 a             1B intkey=r[1] data=r[8]
REG[8] =  s2051[03A00C124C27C6729238C9A264C17C0A....L'.r.8..d.|.](8)
REG[1] =  i:2
  13 Close            0    0    0               00 
  14 Noop             1    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
SELECT * FROM a;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 TableLock        0    2    0 a             00 iDb=0 root=2 write=0
  11 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; a
   2 Explain          0    0    0 SCAN TABLE a  00 
   3 Rewind           0    7    0               00 
   4 Column           0    0    1               00 r[1]=a.b
REG[1] =   s3[abc](8)
   5 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s3[abc](8)
   6 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=a.b
REG[1] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
   5 ResultRow        1    1    0               00 output=r[1]
REG[1] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
   6 Next             0    4    0               01 
   7 Close            0    0    0               00 
   8 Halt             0    0    0               00 
SQL: [SELECT abs(b), abs(b) FROM a
    UNION ALL
    SELECT b, b FROM a
  ;]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      0    0    1 0             01 usesStmtJournal=0
  21 TableLock        0    2    0 a             00 iDb=0 root=2 write=0
  22 Goto             0    1    0               00 
   1 OpenRead         1    2    0 1             00 root=2 iDb=0; a
   2 Explain          1    0    0 SCAN TABLE a  00 
   3 Rewind           1   10    0               00 
   4 Column           1    0    3               00 r[3]=a.b
REG[3] =   s3[abc](8)
   5 Function0        0    3    1 abs(1)        01 r[1]=func(r[3])
REG[3] =   s3[abc](8)
REG[1] =  r:0
   6 Column           1    0    3               00 r[3]=a.b
REG[3] =   s3[abc](8)
   7 Function0        0    3    2 abs(1)        01 r[2]=func(r[3])
REG[3] =   s3[abc](8)
REG[2] =  r:0
   8 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =  r:0
REG[2] =  r:0
   9 Next             1    4    0               01 
   4 Column           1    0    3               00 r[3]=a.b
REG[3] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
   5 Function         0    3    1 abs(1)        01 r[1]=func(r[3])
REG[3] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[1] =  r:0
   6 Column           1    0    3               00 r[3]=a.b
REG[3] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
   7 Function         0    3    2 abs(1)        01 r[2]=func(r[3])
REG[3] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[2] =  r:0
   8 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =  r:0
REG[2] =  r:0
   9 Next             1    4    0               01 
  10 Close            1    0    0               00 
  11 OpenRead         0    2    0 1             00 root=2 iDb=0; a
  12 Explain          2    0    0 SCAN TABLE a  00 
  13 Rewind           0   18    0               00 
  14 Column           0    0    1               00 r[1]=a.b
REG[1] =   s3[abc](8)
  15 Copy             1    2    0               00 r[2]=r[1]
REG[2] =   s3[abc](8)
  16 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =   s3[abc](8)
REG[2] =   s3[abc](8)
  17 Next             0   14    0               01 
  14 Column           0    0    1               00 r[1]=a.b
REG[1] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  15 Copy             1    2    0               00 r[2]=r[1]
REG[2] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  16 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[2] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  17 Next             0   14    0               01 
  18 Close            0    0    0               00 
  19 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    1 0             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s44[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:2
REG[3] =   s44[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s20[sqlite_autoinde](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s20[sqlite_autoinde](8)
REG[2] =  i:3
REG[3] =  NULL
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [SELECT b, b FROM a
    UNION 
    SELECT b, abs(b) FROM a
    ORDER BY 1
  ;]
VDBE Trace:
   0 Init             0  106    0               00 Start at 106
 106 Transaction      0    0    1 0             01 usesStmtJournal=0
 107 TableLock        0    2    0 a             00 iDb=0 root=2 write=0
 108 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 InitCoroutine    4   33    3               00 left SELECT
  33 InitCoroutine    5  100   34               00 right SELECT
 100 Yield            4   83    0               00 
REG[4] =  i:2
REG[4] =  i:100
   3 SorterOpen       2    3    0 k(1,NOCASE)   00 
   4 OpenRead         3    3    0 k(2,NOCASE,)  00 root=3 iDb=0; sqlite_autoindex_a_1
   5 Explain          1    0    0 SCAN TABLE a USING COVERING INDEX sqlite_autoindex_a_1 00 
   6 Rewind           3   20    8 0             00 
   7 Column           3    0   10               00 r[10]=a.b
REG[10] =   s3[abc](8)
   8 Copy            10   11    0               00 r[11]=r[10]
REG[11] =   s3[abc](8)
   9 Copy            10    8    0               00 r[8]=r[10]
REG[8] =   s3[abc](8)
  10 Copy            11    9    0               00 r[9]=r[11]
REG[9] =   s3[abc](8)
  11 MakeRecord       9    3   12               00 r[12]=mkrec(r[9..11])
REG[12] =  s13[04131313616263616263616263....abcabcabc](8)
  12 SequenceTest     2   17    0               00 if( cursor[2].ctr++ ) pc = 17
  17 Move             8   13    1               00 r[13]=r[8]
REG[13] =   s3[abc](8)
  18 SorterInsert     2   12    0               00 
REG[12] =  s13[04131313616263616263616263....abcabcabc](8)
  19 Next             3    7    0               01 
   7 Column           3    0   10               00 r[10]=a.b
REG[10] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
   8 Copy            10   11    0               00 r[11]=r[10]
REG[11] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
   9 Copy            10    8    0               00 r[8]=r[10]
REG[8] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  10 Copy            11    9    0               00 r[9]=r[11]
REG[9] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  11 MakeRecord       9    3   12               00 r[12]=mkrec(r[9..11])
REG[12] =  s6151[07A00CA00CA00C124C27C6729238C9A2........L'.r.8..](8)
  12 SequenceTest     2   17    0               00 if( cursor[2].ctr++ ) pc = 17
  13 Compare         13    8    1 k(2,NOCASE,NOCASE) 00 r[13] <-> r[8]
REG[13] =   s3[abc](8)
REG[8] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  14 Jump            15   18   15               00 
  15 Gosub           14   23    0               00 
REG[14] =  i:15
  23 Once             0   25    0               00 
  24 OpenPseudo       4   15    4               00 4 columns in r[15]
  25 SorterSort       2   32    0               00 
  26 SorterData       2   15    4               00 r[15]=data
  27 Column           4    1   10               00 r[10]=b
REG[10] =   s3[abc](8)
  28 Column           4    2   11               00 r[11]=b
REG[11] =   s3[abc](8)
  29 Yield            4    0    0               00 
REG[4] =  i:100
REG[4] =  i:29
 101 Yield            5   86    0               00 
REG[5] =  i:33
REG[5] =  i:101
  34 SorterOpen       5    3    0 k(1,NOCASE)   00 
  35 OpenRead         6    3    0 k(2,NOCASE,)  00 root=3 iDb=0; sqlite_autoindex_a_1
  36 Explain          2    0    0 SCAN TABLE a USING COVERING INDEX sqlite_autoindex_a_1 00 
  37 Rewind           6   52   16 0             00 
  38 Column           6    0   18               00 r[18]=a.b
REG[18] =   s3[abc](8)
  39 Copy            18   20    0               00 r[20]=r[18]
REG[20] =   s3[abc](8)
  40 Function0        0   20   19 abs(1)        01 r[19]=func(r[20])
REG[20] =   s3[abc](8)
REG[19] =  r:0
  41 Copy            18   16    0               00 r[16]=r[18]
REG[16] =   s3[abc](8)
  42 Copy            19   17    0               00 r[17]=r[19]
REG[17] =  r:0
  43 MakeRecord      17    3   21               00 r[21]=mkrec(r[17..19])
REG[21] =  s23[04071307000000000000000061626300............abc.](8)
  44 SequenceTest     5   49    0               00 if( cursor[5].ctr++ ) pc = 49
  49 Move            16   22    1               00 r[22]=r[16]
REG[22] =   s3[abc](8)
  50 SorterInsert     5   21    0               00 
REG[21] =  s23[04071307000000000000000061626300............abc.](8)
  51 Next             6   38    0               01 
  38 Column           6    0   18               00 r[18]=a.b
REG[18] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  39 Copy            18   20    0               00 r[20]=r[18]
REG[20] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  40 Function         0   20   19 abs(1)        01 r[19]=func(r[20])
REG[20] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[19] =  r:0
  41 Copy            18   16    0               00 r[16]=r[18]
REG[16] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  42 Copy            19   17    0               00 r[17]=r[19]
REG[17] =  r:0
  43 MakeRecord      17    3   21               00 r[21]=mkrec(r[17..19])
REG[21] =  s2069[0507A00C070000000000000000124C27..............L'](8)
  44 SequenceTest     5   49    0               00 if( cursor[5].ctr++ ) pc = 49
  45 Compare         22   16    1 k(2,NOCASE,NOCASE) 00 r[22] <-> r[16]
REG[22] =   s3[abc](8)
REG[16] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  46 Jump            47   50   47               00 
  47 Gosub           23   55    0               00 
REG[23] =  i:47
  55 Once             1   57    0               00 
  56 OpenPseudo       7   24    4               00 4 columns in r[24]
  57 SorterSort       5   64    0               00 
  58 SorterData       5   24    7               00 r[24]=data
  59 Column           7    1   18               00 r[18]=b
REG[18] =   s3[abc](8)
  60 Column           7    2   19               00 r[19]=abs(b)
REG[19] =  r:0
  61 Yield            5    0    0               00 
REG[5] =  i:101
REG[5] =  i:61
 102 Permutation      0    0    0 [0]           00 
 103 Compare         10   18    2 k(3,NOCASE,NOCASE,) 01 r[10..11] <-> r[18..19]
REG[10] =   s3[abc](8)
REG[18] =   s3[abc](8)
REG[11] =   s3[abc](8)
REG[19] =  r:0
 104 Jump            90   94   97               00 
  97 Gosub            7   74    0               00 
REG[7] =  i:97
  74 IfNot            1   77    0               00 
REG[1] =  i:0
  77 Copy            18    2    1               00 r[2..3]=r[18..19]
REG[2] =   s3[abc](8)
REG[3] =  r:0
  78 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  79 ResultRow       18    2    0               00 output=r[18..19]
REG[18] =   s3[abc](8)
REG[19] =  r:0
  80 Return           7    0    0               00 
REG[7] =  i:97
  98 Yield            5   86    0               00 
REG[5] =  i:61
REG[5] =  i:98
  62 SorterNext       5   58    0               00 
  63 Return          23    0    0               00 
REG[23] =  i:47
  48 ResetSorter      5    0    0               00 
  49 Move            16   22    1               00 r[22]=r[16]
REG[22] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  50 SorterInsert     5   21    0               00 
REG[21] =  s2069[0507A00C070000000000000000124C27..............L'](8)
  51 Next             6   38    0               01 
  52 Close            6    0    0               00 
  53 Gosub           23   55    0               00 
REG[23] =  i:53
  55 Once             1   57    0               00 
  57 SorterSort       5   64    0               00 
  58 SorterData       5   24    7               00 r[24]=data
  59 Column           7    1   18               00 r[18]=b
REG[18] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  60 Column           7    2   19               00 r[19]=abs(b)
REG[19] =  r:0
  61 Yield            5    0    0               00 
REG[5] =  i:98
REG[5] =  i:61
  99 Goto             0  102    0               00 
 102 Permutation      0    0    0 [0]           00 
 103 Compare         10   18    2 k(3,NOCASE,NOCASE,) 01 r[10..11] <-> r[18..19]
REG[10] =   s3[abc](8)
REG[18] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
 104 Jump            90   94   97               00 
  90 Gosub            6   66    0               00 
REG[6] =  i:90
  66 IfNot            1   69    0               00 
REG[1] =  i:1
  67 Compare         10    2    2 k(2,NOCASE,NOCASE) 00 r[10..11] <-> r[2..3]
REG[10] =   s3[abc](8)
REG[2] =   s3[abc](8)
REG[11] =   s3[abc](8)
REG[3] =  r:0
  68 Jump            69   72   69               00 
  69 Copy            10    2    1               00 r[2..3]=r[10..11]
REG[2] =   s3[abc](8)
REG[3] =   s3[abc](8)
  70 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  71 ResultRow       10    2    0               00 output=r[10..11]
REG[10] =   s3[abc](8)
REG[11] =   s3[abc](8)
  72 Return           6    0    0               00 
REG[6] =  i:90
  91 Yield            4   82    0               00 
REG[4] =  i:29
REG[4] =  i:91
  30 SorterNext       2   26    0               00 
  31 Return          14    0    0               00 
REG[14] =  i:15
  16 ResetSorter      2    0    0               00 
  17 Move             8   13    1               00 r[13]=r[8]
REG[13] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  18 SorterInsert     2   12    0               00 
REG[12] =  s6151[07A00CA00CA00C124C27C6729238C9A2........L'.r.8..](8)
  19 Next             3    7    0               01 
  20 Close            3    0    0               00 
  21 Gosub           14   23    0               00 
REG[14] =  i:21
  23 Once             0   25    0               00 
  25 SorterSort       2   32    0               00 
  26 SorterData       2   15    4               00 r[15]=data
  27 Column           4    1   10               00 r[10]=b
REG[10] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  28 Column           4    2   11               00 r[11]=b
REG[11] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  29 Yield            4    0    0               00 
REG[4] =  i:91
REG[4] =  i:29
  92 Goto             0  102    0               00 
 102 Permutation      0    0    0 [0]           00 
 103 Compare         10   18    2 k(3,NOCASE,NOCASE,) 01 r[10..11] <-> r[18..19]
REG[10] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[18] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[11] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[19] =  r:0
 104 Jump            90   94   97               00 
  97 Gosub            7   74    0               00 
REG[7] =  i:97
  74 IfNot            1   77    0               00 
REG[1] =  i:1
  75 Compare         18    2    2 k(2,NOCASE,NOCASE) 00 r[18..19] <-> r[2..3]
REG[18] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[2] =   s3[abc](8)
  76 Jump            77   80   77               00 
  77 Copy            18    2    1               00 r[2..3]=r[18..19]
REG[2] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[3] =  r:0
  78 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  79 ResultRow       18    2    0               00 output=r[18..19]
REG[18] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[19] =  r:0
  80 Return           7    0    0               00 
REG[7] =  i:97
  98 Yield            5   86    0               00 
REG[5] =  i:61
REG[5] =  i:98
  62 SorterNext       5   58    0               00 
  63 Return          23    0    0               00 
REG[23] =  i:53
  54 Goto             0   64    0               00 
  64 EndCoroutine     5    0    0               00 
REG[5] =  i:98
  86 Gosub            6   66    0               00 
REG[6] =  i:86
  66 IfNot            1   69    0               00 
REG[1] =  i:1
  67 Compare         10    2    2 k(2,NOCASE,NOCASE) 00 r[10..11] <-> r[2..3]
REG[10] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[2] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[11] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[3] =  r:0
  68 Jump            69   72   69               00 
  69 Copy            10    2    1               00 r[2..3]=r[10..11]
REG[2] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[3] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  70 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  71 ResultRow       10    2    0               00 output=r[10..11]
REG[10] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[11] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  72 Return           6    0    0               00 
REG[6] =  i:86
  87 Yield            4  105    0               00 
REG[4] =  i:29
REG[4] =  i:87
  30 SorterNext       2   26    0               00 
  31 Return          14    0    0               00 
REG[14] =  i:21
  22 Goto             0   32    0               00 
  32 EndCoroutine     4    0    0               00 
REG[4] =  i:87
 105 Halt             0    0    0               00 
SQL: [pragma page_size;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Int64            0    1    0 4096          00 r[1]=4096
REG[1] =  i:4096
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:4096
   3 Halt             0    0    0               00 
SQL: [SELECT b, abs(b) FROM a
    UNION 
    SELECT b, b FROM a
    ORDER BY 1
  ;]
VDBE Trace:
   0 Init             0  106    0               00 Start at 106
 106 Transaction      0    0    1 0             01 usesStmtJournal=0
 107 TableLock        0    2    0 a             00 iDb=0 root=2 write=0
 108 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 InitCoroutine    4   34    3               00 left SELECT
  34 InitCoroutine    5  100   35               00 right SELECT
 100 Yield            4   83    0               00 
REG[4] =  i:2
REG[4] =  i:100
   3 SorterOpen       2    3    0 k(1,NOCASE)   00 
   4 OpenRead         3    3    0 k(2,NOCASE,)  00 root=3 iDb=0; sqlite_autoindex_a_1
   5 Explain          1    0    0 SCAN TABLE a USING COVERING INDEX sqlite_autoindex_a_1 00 
   6 Rewind           3   21    8 0             00 
   7 Column           3    0   10               00 r[10]=a.b
REG[10] =   s3[abc](8)
   8 Copy            10   12    0               00 r[12]=r[10]
REG[12] =   s3[abc](8)
   9 Function0        0   12   11 abs(1)        01 r[11]=func(r[12])
REG[12] =   s3[abc](8)
REG[11] =  r:0
  10 Copy            10    8    0               00 r[8]=r[10]
REG[8] =   s3[abc](8)
  11 Copy            11    9    0               00 r[9]=r[11]
REG[9] =  r:0
  12 MakeRecord       9    3   13               00 r[13]=mkrec(r[9..11])
REG[13] =  s23[04071307000000000000000061626300............abc.](8)
  13 SequenceTest     2   18    0               00 if( cursor[2].ctr++ ) pc = 18
  18 Move             8   14    1               00 r[14]=r[8]
REG[14] =   s3[abc](8)
  19 SorterInsert     2   13    0               00 
REG[13] =  s23[04071307000000000000000061626300............abc.](8)
  20 Next             3    7    0               01 
   7 Column           3    0   10               00 r[10]=a.b
REG[10] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
   8 Copy            10   12    0               00 r[12]=r[10]
REG[12] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
   9 Function         0   12   11 abs(1)        01 r[11]=func(r[12])
REG[12] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[11] =  r:0
  10 Copy            10    8    0               00 r[8]=r[10]
REG[8] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  11 Copy            11    9    0               00 r[9]=r[11]
REG[9] =  r:0
  12 MakeRecord       9    3   13               00 r[13]=mkrec(r[9..11])
REG[13] =  s2069[0507A00C070000000000000000124C27..............L'](8)
  13 SequenceTest     2   18    0               00 if( cursor[2].ctr++ ) pc = 18
  14 Compare         14    8    1 k(2,NOCASE,NOCASE) 00 r[14] <-> r[8]
REG[14] =   s3[abc](8)
REG[8] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  15 Jump            16   19   16               00 
  16 Gosub           15   24    0               00 
REG[15] =  i:16
  24 Once             0   26    0               00 
  25 OpenPseudo       4   16    4               00 4 columns in r[16]
  26 SorterSort       2   33    0               00 
  27 SorterData       2   16    4               00 r[16]=data
  28 Column           4    1   10               00 r[10]=b
REG[10] =   s3[abc](8)
  29 Column           4    2   11               00 r[11]=abs(b)
REG[11] =  r:0
  30 Yield            4    0    0               00 
REG[4] =  i:100
REG[4] =  i:30
 101 Yield            5   86    0               00 
REG[5] =  i:34
REG[5] =  i:101
  35 SorterOpen       5    3    0 k(1,NOCASE)   00 
  36 OpenRead         6    3    0 k(2,NOCASE,)  00 root=3 iDb=0; sqlite_autoindex_a_1
  37 Explain          2    0    0 SCAN TABLE a USING COVERING INDEX sqlite_autoindex_a_1 00 
  38 Rewind           6   52   17 0             00 
  39 Column           6    0   19               00 r[19]=a.b
REG[19] =   s3[abc](8)
  40 Copy            19   20    0               00 r[20]=r[19]
REG[20] =   s3[abc](8)
  41 Copy            19   17    0               00 r[17]=r[19]
REG[17] =   s3[abc](8)
  42 Copy            20   18    0               00 r[18]=r[20]
REG[18] =   s3[abc](8)
  43 MakeRecord      18    3   21               00 r[21]=mkrec(r[18..20])
REG[21] =  s13[04131313616263616263616263....abcabcabc](8)
  44 SequenceTest     5   49    0               00 if( cursor[5].ctr++ ) pc = 49
  49 Move            17   22    1               00 r[22]=r[17]
REG[22] =   s3[abc](8)
  50 SorterInsert     5   21    0               00 
REG[21] =  s13[04131313616263616263616263....abcabcabc](8)
  51 Next             6   39    0               01 
  39 Column           6    0   19               00 r[19]=a.b
REG[19] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  40 Copy            19   20    0               00 r[20]=r[19]
REG[20] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  41 Copy            19   17    0               00 r[17]=r[19]
REG[17] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  42 Copy            20   18    0               00 r[18]=r[20]
REG[18] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  43 MakeRecord      18    3   21               00 r[21]=mkrec(r[18..20])
REG[21] =  s6151[07A00CA00CA00C124C27C6729238C9A2........L'.r.8..](8)
  44 SequenceTest     5   49    0               00 if( cursor[5].ctr++ ) pc = 49
  45 Compare         22   17    1 k(2,NOCASE,NOCASE) 00 r[22] <-> r[17]
REG[22] =   s3[abc](8)
REG[17] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  46 Jump            47   50   47               00 
  47 Gosub           23   55    0               00 
REG[23] =  i:47
  55 Once             1   57    0               00 
  56 OpenPseudo       7   24    4               00 4 columns in r[24]
  57 SorterSort       5   64    0               00 
  58 SorterData       5   24    7               00 r[24]=data
  59 Column           7    1   19               00 r[19]=b
REG[19] =   s3[abc](8)
  60 Column           7    2   20               00 r[20]=b
REG[20] =   s3[abc](8)
  61 Yield            5    0    0               00 
REG[5] =  i:101
REG[5] =  i:61
 102 Permutation      0    0    0 [0]           00 
 103 Compare         10   19    2 k(3,NOCASE,NOCASE,) 01 r[10..11] <-> r[19..20]
REG[10] =   s3[abc](8)
REG[19] =   s3[abc](8)
REG[11] =  r:0
REG[20] =   s3[abc](8)
 104 Jump            90   94   97               00 
  90 Gosub            6   66    0               00 
REG[6] =  i:90
  66 IfNot            1   69    0               00 
REG[1] =  i:0
  69 Copy            10    2    1               00 r[2..3]=r[10..11]
REG[2] =   s3[abc](8)
REG[3] =  r:0
  70 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  71 ResultRow       10    2    0               00 output=r[10..11]
REG[10] =   s3[abc](8)
REG[11] =  r:0
  72 Return           6    0    0               00 
REG[6] =  i:90
  91 Yield            4   82    0               00 
REG[4] =  i:30
REG[4] =  i:91
  31 SorterNext       2   27    0               00 
  32 Return          15    0    0               00 
REG[15] =  i:16
  17 ResetSorter      2    0    0               00 
  18 Move             8   14    1               00 r[14]=r[8]
REG[14] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  19 SorterInsert     2   13    0               00 
REG[13] =  s2069[0507A00C070000000000000000124C27..............L'](8)
  20 Next             3    7    0               01 
  21 Close            3    0    0               00 
  22 Gosub           15   24    0               00 
REG[15] =  i:22
  24 Once             0   26    0               00 
  26 SorterSort       2   33    0               00 
  27 SorterData       2   16    4               00 r[16]=data
  28 Column           4    1   10               00 r[10]=b
REG[10] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  29 Column           4    2   11               00 r[11]=abs(b)
REG[11] =  r:0
  30 Yield            4    0    0               00 
REG[4] =  i:91
REG[4] =  i:30
  92 Goto             0  102    0               00 
 102 Permutation      0    0    0 [0]           00 
 103 Compare         10   19    2 k(3,NOCASE,NOCASE,) 01 r[10..11] <-> r[19..20]
REG[10] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[19] =   s3[abc](8)
 104 Jump            90   94   97               00 
  97 Gosub            7   74    0               00 
REG[7] =  i:97
  74 IfNot            1   77    0               00 
REG[1] =  i:1
  75 Compare         19    2    2 k(2,NOCASE,NOCASE) 00 r[19..20] <-> r[2..3]
REG[19] =   s3[abc](8)
REG[2] =   s3[abc](8)
REG[20] =   s3[abc](8)
REG[3] =  r:0
  76 Jump            77   80   77               00 
  77 Copy            19    2    1               00 r[2..3]=r[19..20]
REG[2] =   s3[abc](8)
REG[3] =   s3[abc](8)
  78 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  79 ResultRow       19    2    0               00 output=r[19..20]
REG[19] =   s3[abc](8)
REG[20] =   s3[abc](8)
  80 Return           7    0    0               00 
REG[7] =  i:97
  98 Yield            5   86    0               00 
REG[5] =  i:61
REG[5] =  i:98
  62 SorterNext       5   58    0               00 
  63 Return          23    0    0               00 
REG[23] =  i:47
  48 ResetSorter      5    0    0               00 
  49 Move            17   22    1               00 r[22]=r[17]
REG[22] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  50 SorterInsert     5   21    0               00 
REG[21] =  s6151[07A00CA00CA00C124C27C6729238C9A2........L'.r.8..](8)
  51 Next             6   39    0               01 
  52 Close            6    0    0               00 
  53 Gosub           23   55    0               00 
REG[23] =  i:53
  55 Once             1   57    0               00 
  57 SorterSort       5   64    0               00 
  58 SorterData       5   24    7               00 r[24]=data
  59 Column           7    1   19               00 r[19]=b
REG[19] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  60 Column           7    2   20               00 r[20]=b
REG[20] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  61 Yield            5    0    0               00 
REG[5] =  i:98
REG[5] =  i:61
  99 Goto             0  102    0               00 
 102 Permutation      0    0    0 [0]           00 
 103 Compare         10   19    2 k(3,NOCASE,NOCASE,) 01 r[10..11] <-> r[19..20]
REG[10] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[19] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[11] =  r:0
REG[20] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
 104 Jump            90   94   97               00 
  90 Gosub            6   66    0               00 
REG[6] =  i:90
  66 IfNot            1   69    0               00 
REG[1] =  i:1
  67 Compare         10    2    2 k(2,NOCASE,NOCASE) 00 r[10..11] <-> r[2..3]
REG[10] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[2] =   s3[abc](8)
  68 Jump            69   72   69               00 
  69 Copy            10    2    1               00 r[2..3]=r[10..11]
REG[2] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[3] =  r:0
  70 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  71 ResultRow       10    2    0               00 output=r[10..11]
REG[10] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[11] =  r:0
  72 Return           6    0    0               00 
REG[6] =  i:90
  91 Yield            4   82    0               00 
REG[4] =  i:30
REG[4] =  i:91
  31 SorterNext       2   27    0               00 
  32 Return          15    0    0               00 
REG[15] =  i:22
  23 Goto             0   33    0               00 
  33 EndCoroutine     4    0    0               00 
REG[4] =  i:91
  82 Gosub            7   74    0               00 
REG[7] =  i:82
  74 IfNot            1   77    0               00 
REG[1] =  i:1
  75 Compare         19    2    2 k(2,NOCASE,NOCASE) 00 r[19..20] <-> r[2..3]
REG[19] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[2] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[20] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[3] =  r:0
  76 Jump            77   80   77               00 
  77 Copy            19    2    1               00 r[2..3]=r[19..20]
REG[2] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[3] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  78 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  79 ResultRow       19    2    0               00 output=r[19..20]
REG[19] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[20] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  80 Return           7    0    0               00 
REG[7] =  i:82
  83 Yield            5  105    0               00 
REG[5] =  i:61
REG[5] =  i:83
  62 SorterNext       5   58    0               00 
  63 Return          23    0    0               00 
REG[23] =  i:53
  54 Goto             0   64    0               00 
  64 EndCoroutine     5    0    0               00 
REG[5] =  i:83
 105 Halt             0    0    0               00 
SQL: [SELECT abs(b), b FROM a
    UNION 
    SELECT b, abs(b) FROM a
    ORDER BY 1
  ;]
VDBE Trace:
   0 Init             0   97    0               00 Start at 97
  97 Transaction      0    0    1 0             01 usesStmtJournal=0
  98 TableLock        0    2    0 a             00 iDb=0 root=2 write=0
  99 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 InitCoroutine    4   24    3               00 left SELECT
  24 InitCoroutine    5   91   25               00 right SELECT
  91 Yield            4   74    0               00 
REG[4] =  i:2
REG[4] =  i:91
   3 SorterOpen       2    5    0 k(2,NOCASE,NOCASE) 00 
   4 OpenRead         1    2    0 1             00 root=2 iDb=0; a
   5 Explain          1    0    0 SCAN TABLE a  00 
   6 Rewind           1   15    0               00 
   7 Column           1    0   12               00 r[12]=a.b
REG[12] =   s3[abc](8)
   8 Function0        0   12   10 abs(1)        01 r[10]=func(r[12])
REG[12] =   s3[abc](8)
REG[10] =  r:0
   9 Column           1    0   11               00 r[11]=a.b
REG[11] =   s3[abc](8)
  10 Copy            10    8    0               00 r[8]=r[10]
REG[8] =  r:0
  11 Copy            11    9    0               00 r[9]=r[11]
REG[9] =   s3[abc](8)
  12 MakeRecord       8    4   13               00 r[13]=mkrec(r[8..11])
REG[13] =  s27[05071307130000000000000000616263.............abc](8)
  13 SorterInsert     2   13    0               00 
REG[13] =  s27[05071307130000000000000000616263.............abc](8)
  14 Next             1    7    0               01 
   7 Column           1    0   12               00 r[12]=a.b
REG[12] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
   8 Function         0   12   10 abs(1)        01 r[10]=func(r[12])
REG[12] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[10] =  r:0
   9 Column           1    0   11               00 r[11]=a.b
REG[11] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  10 Copy            10    8    0               00 r[8]=r[10]
REG[8] =  r:0
  11 Copy            11    9    0               00 r[9]=r[11]
REG[9] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  12 MakeRecord       8    4   13               00 r[13]=mkrec(r[8..11])
REG[13] =  s4119[0707A00C07A00C000000000000000012................](8)
  13 SorterInsert     2   13    0               00 
REG[13] =  s4119[0707A00C07A00C000000000000000012................](8)
  14 Next             1    7    0               01 
  15 Close            1    0    0               00 
  16 OpenPseudo       3   14    5               00 5 columns in r[14]
  17 SorterSort       2   23    0               00 
  18 SorterData       2   14    3               00 r[14]=data
  19 Column           3    2   10               00 r[10]=abs(b)
REG[10] =  r:0
  20 Column           3    3   11               00 r[11]=b
REG[11] =   s3[abc](8)
  21 Yield            4    0    0               00 
REG[4] =  i:91
REG[4] =  i:21
  92 Yield            5   77    0               00 
REG[5] =  i:24
REG[5] =  i:92
  25 SorterOpen       4    3    0 k(1,NOCASE)   00 
  26 OpenRead         5    3    0 k(2,NOCASE,)  00 root=3 iDb=0; sqlite_autoindex_a_1
  27 Explain          2    0    0 SCAN TABLE a USING COVERING INDEX sqlite_autoindex_a_1 00 
  28 Rewind           5   43   15 0             00 
  29 Column           5    0   17               00 r[17]=a.b
REG[17] =   s3[abc](8)
  30 Copy            17   19    0               00 r[19]=r[17]
REG[19] =   s3[abc](8)
  31 Function0        0   19   18 abs(1)        01 r[18]=func(r[19])
REG[19] =   s3[abc](8)
REG[18] =  r:0
  32 Copy            17   15    0               00 r[15]=r[17]
REG[15] =   s3[abc](8)
  33 Copy            18   16    0               00 r[16]=r[18]
REG[16] =  r:0
  34 MakeRecord      16    3   20               00 r[20]=mkrec(r[16..18])
REG[20] =  s23[04071307000000000000000061626300............abc.](8)
  35 SequenceTest     4   40    0               00 if( cursor[4].ctr++ ) pc = 40
  40 Move            15   21    1               00 r[21]=r[15]
REG[21] =   s3[abc](8)
  41 SorterInsert     4   20    0               00 
REG[20] =  s23[04071307000000000000000061626300............abc.](8)
  42 Next             5   29    0               01 
  29 Column           5    0   17               00 r[17]=a.b
REG[17] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  30 Copy            17   19    0               00 r[19]=r[17]
REG[19] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  31 Function         0   19   18 abs(1)        01 r[18]=func(r[19])
REG[19] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[18] =  r:0
  32 Copy            17   15    0               00 r[15]=r[17]
REG[15] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  33 Copy            18   16    0               00 r[16]=r[18]
REG[16] =  r:0
  34 MakeRecord      16    3   20               00 r[20]=mkrec(r[16..18])
REG[20] =  s2069[0507A00C070000000000000000124C27..............L'](8)
  35 SequenceTest     4   40    0               00 if( cursor[4].ctr++ ) pc = 40
  36 Compare         21   15    1 k(2,NOCASE,NOCASE) 00 r[21] <-> r[15]
REG[21] =   s3[abc](8)
REG[15] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  37 Jump            38   41   38               00 
  38 Gosub           22   46    0               00 
REG[22] =  i:38
  46 Once             0   48    0               00 
  47 OpenPseudo       6   23    4               00 4 columns in r[23]
  48 SorterSort       4   55    0               00 
  49 SorterData       4   23    6               00 r[23]=data
  50 Column           6    1   17               00 r[17]=b
REG[17] =   s3[abc](8)
  51 Column           6    2   18               00 r[18]=abs(b)
REG[18] =  r:0
  52 Yield            5    0    0               00 
REG[5] =  i:92
REG[5] =  i:52
  93 Permutation      0    0    0 [0]           00 
  94 Compare         10   17    2 k(3,NOCASE,NOCASE,) 01 r[10..11] <-> r[17..18]
REG[10] =  r:0
REG[17] =   s3[abc](8)
  95 Jump            81   85   88               00 
  81 Gosub            6   57    0               00 
REG[6] =  i:81
  57 IfNot            1   60    0               00 
REG[1] =  i:0
  60 Copy            10    2    1               00 r[2..3]=r[10..11]
REG[2] =  r:0
REG[3] =   s3[abc](8)
  61 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  62 ResultRow       10    2    0               00 output=r[10..11]
REG[10] =  r:0
REG[11] =   s3[abc](8)
  63 Return           6    0    0               00 
REG[6] =  i:81
  82 Yield            4   73    0               00 
REG[4] =  i:21
REG[4] =  i:82
  22 SorterNext       2   18    0               00 
  18 SorterData       2   14    3               00 r[14]=data
  19 Column           3    2   10               00 r[10]=abs(b)
REG[10] =  r:0
  20 Column           3    3   11               00 r[11]=b
REG[11] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  21 Yield            4    0    0               00 
REG[4] =  i:82
REG[4] =  i:21
  83 Goto             0   93    0               00 
  93 Permutation      0    0    0 [0]           00 
  94 Compare         10   17    2 k(3,NOCASE,NOCASE,) 01 r[10..11] <-> r[17..18]
REG[10] =  r:0
REG[17] =   s3[abc](8)
  95 Jump            81   85   88               00 
  81 Gosub            6   57    0               00 
REG[6] =  i:81
  57 IfNot            1   60    0               00 
REG[1] =  i:1
  58 Compare         10    2    2 k(2,NOCASE,NOCASE) 00 r[10..11] <-> r[2..3]
REG[10] =  r:0
REG[2] =  r:0
REG[11] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[3] =   s3[abc](8)
  59 Jump            60   63   60               00 
  60 Copy            10    2    1               00 r[2..3]=r[10..11]
REG[2] =  r:0
REG[3] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  61 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  62 ResultRow       10    2    0               00 output=r[10..11]
REG[10] =  r:0
REG[11] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  63 Return           6    0    0               00 
REG[6] =  i:81
  82 Yield            4   73    0               00 
REG[4] =  i:21
REG[4] =  i:82
  22 SorterNext       2   18    0               00 
  23 EndCoroutine     4    0    0               00 
REG[4] =  i:82
  73 Gosub            7   65    0               00 
REG[7] =  i:73
  65 IfNot            1   68    0               00 
REG[1] =  i:1
  66 Compare         17    2    2 k(2,NOCASE,NOCASE) 00 r[17..18] <-> r[2..3]
REG[17] =   s3[abc](8)
REG[2] =  r:0
  67 Jump            68   71   68               00 
  68 Copy            17    2    1               00 r[2..3]=r[17..18]
REG[2] =   s3[abc](8)
REG[3] =  r:0
  69 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  70 ResultRow       17    2    0               00 output=r[17..18]
REG[17] =   s3[abc](8)
REG[18] =  r:0
  71 Return           7    0    0               00 
REG[7] =  i:73
  74 Yield            5   96    0               00 
REG[5] =  i:52
REG[5] =  i:74
  53 SorterNext       4   49    0               00 
  54 Return          22    0    0               00 
REG[22] =  i:38
  39 ResetSorter      4    0    0               00 
  40 Move            15   21    1               00 r[21]=r[15]
REG[21] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  41 SorterInsert     4   20    0               00 
REG[20] =  s2069[0507A00C070000000000000000124C27..............L'](8)
  42 Next             5   29    0               01 
  43 Close            5    0    0               00 
  44 Gosub           22   46    0               00 
REG[22] =  i:44
  46 Once             0   48    0               00 
  48 SorterSort       4   55    0               00 
  49 SorterData       4   23    6               00 r[23]=data
  50 Column           6    1   17               00 r[17]=b
REG[17] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  51 Column           6    2   18               00 r[18]=abs(b)
REG[18] =  r:0
  52 Yield            5    0    0               00 
REG[5] =  i:74
REG[5] =  i:52
  75 Goto             0   73    0               00 
  73 Gosub            7   65    0               00 
REG[7] =  i:73
  65 IfNot            1   68    0               00 
REG[1] =  i:1
  66 Compare         17    2    2 k(2,NOCASE,NOCASE) 00 r[17..18] <-> r[2..3]
REG[17] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[2] =   s3[abc](8)
  67 Jump            68   71   68               00 
  68 Copy            17    2    1               00 r[2..3]=r[17..18]
REG[2] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[3] =  r:0
  69 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  70 ResultRow       17    2    0               00 output=r[17..18]
REG[17] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[18] =  r:0
  71 Return           7    0    0               00 
REG[7] =  i:73
  74 Yield            5   96    0               00 
REG[5] =  i:52
REG[5] =  i:74
  53 SorterNext       4   49    0               00 
  54 Return          22    0    0               00 
REG[22] =  i:44
  45 Goto             0   55    0               00 
  55 EndCoroutine     5    0    0               00 
REG[5] =  i:74
  96 Halt             0    0    0               00 
SQL: [SELECT abs(b), abs(b) FROM a
    UNION 
    SELECT abs(b), abs(b) FROM a
    ORDER BY 1
  ;]
VDBE Trace:
   0 Init             0   89    0               00 Start at 89
  89 Transaction      0    0    1 0             01 usesStmtJournal=0
  90 TableLock        0    2    0 a             00 iDb=0 root=2 write=0
  91 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 InitCoroutine    4   25    3               00 left SELECT
  25 InitCoroutine    5   83   26               00 right SELECT
  83 Yield            4   66    0               00 
REG[4] =  i:2
REG[4] =  i:83
   3 SorterOpen       2    5    0 k(2,B,B)      00 
   4 OpenRead         1    2    0 1             00 root=2 iDb=0; a
   5 Explain          1    0    0 SCAN TABLE a  00 
   6 Rewind           1   16    0               00 
   7 Column           1    0   12               00 r[12]=a.b
REG[12] =   s3[abc](8)
   8 Function0        0   12   10 abs(1)        01 r[10]=func(r[12])
REG[12] =   s3[abc](8)
REG[10] =  r:0
   9 Column           1    0   12               00 r[12]=a.b
REG[12] =   s3[abc](8)
  10 Function0        0   12   11 abs(1)        01 r[11]=func(r[12])
REG[12] =   s3[abc](8)
REG[11] =  r:0
  11 Copy            10    8    0               00 r[8]=r[10]
REG[8] =  r:0
  12 Copy            11    9    0               00 r[9]=r[11]
REG[9] =  r:0
  13 MakeRecord       8    4   13               00 r[13]=mkrec(r[8..11])
REG[13] =  s37[05070707070000000000000000000000................](8)
  14 SorterInsert     2   13    0               00 
REG[13] =  s37[05070707070000000000000000000000................](8)
  15 Next             1    7    0               01 
   7 Column           1    0   12               00 r[12]=a.b
REG[12] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
   8 Function         0   12   10 abs(1)        01 r[10]=func(r[12])
REG[12] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[10] =  r:0
   9 Column           1    0   12               00 r[12]=a.b
REG[12] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  10 Function         0   12   11 abs(1)        01 r[11]=func(r[12])
REG[12] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[11] =  r:0
  11 Copy            10    8    0               00 r[8]=r[10]
REG[8] =  r:0
  12 Copy            11    9    0               00 r[9]=r[11]
REG[9] =  r:0
  13 MakeRecord       8    4   13               00 r[13]=mkrec(r[8..11])
REG[13] =  s37[05070707070000000000000000000000................](8)
  14 SorterInsert     2   13    0               00 
REG[13] =  s37[05070707070000000000000000000000................](8)
  15 Next             1    7    0               01 
  16 Close            1    0    0               00 
  17 OpenPseudo       3   14    5               00 5 columns in r[14]
  18 SorterSort       2   24    0               00 
  19 SorterData       2   14    3               00 r[14]=data
  20 Column           3    2   10               00 r[10]=abs(b)
REG[10] =  r:0
  21 Column           3    3   11               00 r[11]=abs(b)
REG[11] =  r:0
  22 Yield            4    0    0               00 
REG[4] =  i:83
REG[4] =  i:22
  84 Yield            5   69    0               00 
REG[5] =  i:25
REG[5] =  i:84
  26 SorterOpen       4    5    0 k(2,B,B)      00 
  27 OpenRead         0    2    0 1             00 root=2 iDb=0; a
  28 Explain          2    0    0 SCAN TABLE a  00 
  29 Rewind           0   39    0               00 
  30 Column           0    0   19               00 r[19]=a.b
REG[19] =   s3[abc](8)
  31 Function0        0   19   17 abs(1)        01 r[17]=func(r[19])
REG[19] =   s3[abc](8)
REG[17] =  r:0
  32 Column           0    0   19               00 r[19]=a.b
REG[19] =   s3[abc](8)
  33 Function0        0   19   18 abs(1)        01 r[18]=func(r[19])
REG[19] =   s3[abc](8)
REG[18] =  r:0
  34 Copy            17   15    0               00 r[15]=r[17]
REG[15] =  r:0
  35 Copy            18   16    0               00 r[16]=r[18]
REG[16] =  r:0
  36 MakeRecord      15    4   20               00 r[20]=mkrec(r[15..18])
REG[20] =  s37[05070707070000000000000000000000................](8)
  37 SorterInsert     4   20    0               00 
REG[20] =  s37[05070707070000000000000000000000................](8)
  38 Next             0   30    0               01 
  30 Column           0    0   19               00 r[19]=a.b
REG[19] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  31 Function         0   19   17 abs(1)        01 r[17]=func(r[19])
REG[19] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[17] =  r:0
  32 Column           0    0   19               00 r[19]=a.b
REG[19] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  33 Function         0   19   18 abs(1)        01 r[18]=func(r[19])
REG[19] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[18] =  r:0
  34 Copy            17   15    0               00 r[15]=r[17]
REG[15] =  r:0
  35 Copy            18   16    0               00 r[16]=r[18]
REG[16] =  r:0
  36 MakeRecord      15    4   20               00 r[20]=mkrec(r[15..18])
REG[20] =  s37[05070707070000000000000000000000................](8)
  37 SorterInsert     4   20    0               00 
REG[20] =  s37[05070707070000000000000000000000................](8)
  38 Next             0   30    0               01 
  39 Close            0    0    0               00 
  40 OpenPseudo       5   21    5               00 5 columns in r[21]
  41 SorterSort       4   47    0               00 
  42 SorterData       4   21    5               00 r[21]=data
  43 Column           5    2   17               00 r[17]=abs(b)
REG[17] =  r:0
  44 Column           5    3   18               00 r[18]=abs(b)
REG[18] =  r:0
  45 Yield            5    0    0               00 
REG[5] =  i:84
REG[5] =  i:45
  85 Permutation      0    0    0 [0]           00 
  86 Compare         10   17    2 k(3,B,B,)     01 r[10..11] <-> r[17..18]
REG[10] =  r:0
REG[17] =  r:0
REG[11] =  r:0
REG[18] =  r:0
  87 Jump            73   77   80               00 
  77 Yield            4   65    0               00 
REG[4] =  i:22
REG[4] =  i:77
  23 SorterNext       2   19    0               00 
  19 SorterData       2   14    3               00 r[14]=data
  20 Column           3    2   10               00 r[10]=abs(b)
REG[10] =  r:0
  21 Column           3    3   11               00 r[11]=abs(b)
REG[11] =  r:0
  22 Yield            4    0    0               00 
REG[4] =  i:77
REG[4] =  i:22
  78 Goto             0   85    0               00 
  85 Permutation      0    0    0 [0]           00 
  86 Compare         10   17    2 k(3,B,B,)     01 r[10..11] <-> r[17..18]
REG[10] =  r:0
REG[17] =  r:0
REG[11] =  r:0
REG[18] =  r:0
  87 Jump            73   77   80               00 
  77 Yield            4   65    0               00 
REG[4] =  i:22
REG[4] =  i:77
  23 SorterNext       2   19    0               00 
  24 EndCoroutine     4    0    0               00 
REG[4] =  i:77
  65 Gosub            7   57    0               00 
REG[7] =  i:65
  57 IfNot            1   60    0               00 
REG[1] =  i:0
  60 Copy            17    2    1               00 r[2..3]=r[17..18]
REG[2] =  r:0
REG[3] =  r:0
  61 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  62 ResultRow       17    2    0               00 output=r[17..18]
REG[17] =  r:0
REG[18] =  r:0
  63 Return           7    0    0               00 
REG[7] =  i:65
  66 Yield            5   88    0               00 
REG[5] =  i:45
REG[5] =  i:66
  46 SorterNext       4   42    0               00 
  42 SorterData       4   21    5               00 r[21]=data
  43 Column           5    2   17               00 r[17]=abs(b)
REG[17] =  r:0
  44 Column           5    3   18               00 r[18]=abs(b)
REG[18] =  r:0
  45 Yield            5    0    0               00 
REG[5] =  i:66
REG[5] =  i:45
  67 Goto             0   65    0               00 
  65 Gosub            7   57    0               00 
REG[7] =  i:65
  57 IfNot            1   60    0               00 
REG[1] =  i:1
  58 Compare         17    2    2 k(2,,)        00 r[17..18] <-> r[2..3]
REG[17] =  r:0
REG[2] =  r:0
REG[18] =  r:0
REG[3] =  r:0
  59 Jump            60   63   60               00 
  63 Return           7    0    0               00 
REG[7] =  i:65
  66 Yield            5   88    0               00 
REG[5] =  i:45
REG[5] =  i:66
  46 SorterNext       4   42    0               00 
  47 EndCoroutine     5    0    0               00 
REG[5] =  i:66
  88 Halt             0    0    0               00 
SQL: [;
UPDATE a SET b = zeroblob(10000);]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    1    1 0             01 usesStmtJournal=1
  32 TableLock        0    2    1 a             00 iDb=0 root=2 write=1
  33 Integer       10000    5    0               00 r[5]=10000
REG[5] =  i:10000
  34 Goto             0    1    0               00 
   1 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; a
   3 Explain          0    0    0 SCAN TABLE a  00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:1
   6 RowSetAdd        2    3    0               00 rowset(2)=r[3]
REG[2] =  NULL
REG[3] =  i:1
   7 Next             0    5    0               01 
   5 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:2
   6 RowSetAdd        2    3    0               00 rowset(2)=r[3]
REG[2] =  (rowset)
REG[3] =  i:2
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 OpenWrite        0    2    0 1             00 root=2 iDb=0; a
  10 OpenWrite        1    3    0 k(2,NOCASE,)  00 root=3 iDb=0; sqlite_autoindex_a_1
  11 RowSetRead       2   28    3               00 r[3]=rowset(2)
REG[2] =  (rowset)
REG[3] =  i:1
  12 NotExists        0   11    3               00 intkey=r[3]
REG[3] =  i:1
  13 Function0        1    5    4 zeroblob(1)   01 r[4]=func(r[5])
REG[5] =  i:10000
REG[4] =  s0[](8)+10000z
  14 SCopy            4    6    0               00 r[6]=r[4]; b
REG[6] =  e0[](8)+10000z
  15 IntCopy          3    7    0               00 r[7]=r[3]; rowid
REG[7] =  i:1
  16 MakeRecord       6    2    1               00 r[1]=mkrec(r[6..7]); for sqlite_autoindex_a_1
REG[1] =  s5[05819C2C09...,.](8)+10000z
  17 NoConflict       1   21    6 1             00 key=r[6]
REG[6] =  e0[](8)+10000z
  21 Column           0    0    6               00 r[6]=a.b
REG[6] =   s3[abc](8)
  22 Rowid            0    7    0               00 r[7]=rowid
REG[7] =  i:1
  23 IdxDelete        1    6    2               00 key=r[6..7]
  24 IdxInsert        1    1    0               00 key=r[1]
REG[1] =  s5[05819C2C09...,.](8)+10000z
  25 MakeRecord       4    1    9               00 r[9]=mkrec(r[4])
REG[9] =  s4[04819C2C...,](8)+10000z
  26 Insert           0    9    3 a             05 intkey=r[3] data=r[9]
REG[9] =  s4[04819C2C...,](8)+10000z
REG[3] =  i:1
  27 Goto             0   11    0               00 
  11 RowSetRead       2   28    3               00 r[3]=rowset(2)
REG[2] =  (rowset)
REG[3] =  i:2
  12 NotExists        0   11    3               00 intkey=r[3]
REG[3] =  i:2
  13 Function         1    5    4 zeroblob(1)   01 r[4]=func(r[5])
REG[5] =  i:10000
REG[4] =  s0[](8)+10000z
  14 SCopy            4    6    0               00 r[6]=r[4]; b
REG[6] =  e0[](8)+10000z
  15 IntCopy          3    7    0               00 r[7]=r[3]; rowid
REG[7] =  i:2
  16 MakeRecord       6    2    1               00 r[1]=mkrec(r[6..7]); for sqlite_autoindex_a_1
REG[1] =  s10006[05819C2C010000000000000000000000...,............](8)
  17 NoConflict       1   21    6 1             00 key=r[6]
REG[6] =  s10000[00000000000000000000000000000000................](8)
  18 IdxRowid         1    8    0               00 r[8]=rowid
REG[8] =  i:1
  19 Eq               8   21    3               90 if r[8]==r[3] goto 21
REG[8] =  i:1
REG[3] =  i:2
  20 Halt          1555    2    0 a.b           02 
SQL: [SELECT b+b, b-b, b, b FROM a
    UNION ALL
    SELECT b+b, b-b, b, abs(b) FROM a
  ;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0    1 0             01 usesStmtJournal=0
  26 TableLock        0    2    0 a             00 iDb=0 root=2 write=0
  27 Goto             0    1    0               00 
   1 OpenRead         1    2    0 1             00 root=2 iDb=0; a
   2 Explain          1    0    0 SCAN TABLE a  00 
   3 Rewind           1   11    0               00 
   4 Column           1    0    5               00 r[5]=a.b
REG[5] =   s3[abc](8)
   5 Add              5    5    1               00 r[1]=r[5]+r[5]
REG[5] =   s3[abc](8)
REG[5] =   s3[abc](8)
REG[1] =  i:0
   6 Subtract         5    5    2               00 r[2]=r[5]-r[5]
REG[5] =   s3[abc](8)
REG[5] =   s3[abc](8)
REG[2] =  i:0
   7 Copy             5    3    0               00 r[3]=r[5]
REG[3] =   s3[abc](8)
   8 Copy             5    4    0               00 r[4]=r[5]
REG[4] =   s3[abc](8)
   9 ResultRow        1    4    0               00 output=r[1..4]
REG[1] =  i:0
REG[2] =  i:0
REG[3] =   s3[abc](8)
REG[4] =   s3[abc](8)
  10 Next             1    4    0               01 
   4 Column           1    0    5               00 r[5]=a.b
REG[5] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
   5 Add              5    5    1               00 r[1]=r[5]+r[5]
REG[5] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[5] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[1] =  i:0
   6 Subtract         5    5    2               00 r[2]=r[5]-r[5]
REG[5] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[5] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[2] =  i:0
   7 Copy             5    3    0               00 r[3]=r[5]
REG[3] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
   8 Copy             5    4    0               00 r[4]=r[5]
REG[4] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
   9 ResultRow        1    4    0               00 output=r[1..4]
REG[1] =  i:0
REG[2] =  i:0
REG[3] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[4] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  10 Next             1    4    0               01 
  11 Close            1    0    0               00 
  12 OpenRead         0    2    0 1             00 root=2 iDb=0; a
  13 Explain          2    0    0 SCAN TABLE a  00 
  14 Rewind           0   23    0               00 
  15 Column           0    0    6               00 r[6]=a.b
REG[6] =   s3[abc](8)
  16 Add              6    6    1               00 r[1]=r[6]+r[6]
REG[6] =   s3[abc](8)
REG[6] =   s3[abc](8)
REG[1] =  i:0
  17 Subtract         6    6    2               00 r[2]=r[6]-r[6]
REG[6] =   s3[abc](8)
REG[6] =   s3[abc](8)
REG[2] =  i:0
  18 Copy             6    3    0               00 r[3]=r[6]
REG[3] =   s3[abc](8)
  19 Copy             6    8    0               00 r[8]=r[6]
REG[8] =   s3[abc](8)
  20 Function0        0    8    4 abs(1)        01 r[4]=func(r[8])
REG[8] =   s3[abc](8)
REG[4] =  r:0
  21 ResultRow        1    4    0               00 output=r[1..4]
REG[1] =  i:0
REG[2] =  i:0
REG[3] =   s3[abc](8)
REG[4] =  r:0
  22 Next             0   15    0               01 
  15 Column           0    0    6               00 r[6]=a.b
REG[6] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  16 Add              6    6    1               00 r[1]=r[6]+r[6]
REG[6] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[6] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[1] =  i:0
  17 Subtract         6    6    2               00 r[2]=r[6]-r[6]
REG[6] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[6] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[2] =  i:0
  18 Copy             6    3    0               00 r[3]=r[6]
REG[3] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  19 Copy             6    8    0               00 r[8]=r[6]
REG[8] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  20 Function         0    8    4 abs(1)        01 r[4]=func(r[8])
REG[8] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[4] =  r:0
  21 ResultRow        1    4    0               00 output=r[1..4]
REG[1] =  i:0
REG[2] =  i:0
REG[3] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[4] =  r:0
  22 Next             0   15    0               01 
  23 Close            0    0    0               00 
  24 Halt             0    0    0               00 
SQL: [SELECT b+b, b-b, b, b FROM a
    UNION ALL
    SELECT b+b, b-b, abs(b), abs(b) FROM a
  ;]
VDBE Trace:
   0 Init             0   26    0               00 Start at 26
  26 Transaction      0    0    1 0             01 usesStmtJournal=0
  27 TableLock        0    2    0 a             00 iDb=0 root=2 write=0
  28 Goto             0    1    0               00 
   1 OpenRead         1    2    0 1             00 root=2 iDb=0; a
   2 Explain          1    0    0 SCAN TABLE a  00 
   3 Rewind           1   11    0               00 
   4 Column           1    0    5               00 r[5]=a.b
REG[5] =   s3[abc](8)
   5 Add              5    5    1               00 r[1]=r[5]+r[5]
REG[5] =   s3[abc](8)
REG[5] =   s3[abc](8)
REG[1] =  i:0
   6 Subtract         5    5    2               00 r[2]=r[5]-r[5]
REG[5] =   s3[abc](8)
REG[5] =   s3[abc](8)
REG[2] =  i:0
   7 Copy             5    3    0               00 r[3]=r[5]
REG[3] =   s3[abc](8)
   8 Copy             5    4    0               00 r[4]=r[5]
REG[4] =   s3[abc](8)
   9 ResultRow        1    4    0               00 output=r[1..4]
REG[1] =  i:0
REG[2] =  i:0
REG[3] =   s3[abc](8)
REG[4] =   s3[abc](8)
  10 Next             1    4    0               01 
   4 Column           1    0    5               00 r[5]=a.b
REG[5] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
   5 Add              5    5    1               00 r[1]=r[5]+r[5]
REG[5] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[5] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[1] =  i:0
   6 Subtract         5    5    2               00 r[2]=r[5]-r[5]
REG[5] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[5] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[2] =  i:0
   7 Copy             5    3    0               00 r[3]=r[5]
REG[3] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
   8 Copy             5    4    0               00 r[4]=r[5]
REG[4] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
   9 ResultRow        1    4    0               00 output=r[1..4]
REG[1] =  i:0
REG[2] =  i:0
REG[3] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[4] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  10 Next             1    4    0               01 
  11 Close            1    0    0               00 
  12 OpenRead         0    2    0 1             00 root=2 iDb=0; a
  13 Explain          2    0    0 SCAN TABLE a  00 
  14 Rewind           0   24    0               00 
  15 Column           0    0    6               00 r[6]=a.b
REG[6] =   s3[abc](8)
  16 Add              6    6    1               00 r[1]=r[6]+r[6]
REG[6] =   s3[abc](8)
REG[6] =   s3[abc](8)
REG[1] =  i:0
  17 Subtract         6    6    2               00 r[2]=r[6]-r[6]
REG[6] =   s3[abc](8)
REG[6] =   s3[abc](8)
REG[2] =  i:0
  18 Copy             6    8    0               00 r[8]=r[6]
REG[8] =   s3[abc](8)
  19 Function0        0    8    3 abs(1)        01 r[3]=func(r[8])
REG[8] =   s3[abc](8)
REG[3] =  r:0
  20 Copy             6    8    0               00 r[8]=r[6]
REG[8] =   s3[abc](8)
  21 Function0        0    8    4 abs(1)        01 r[4]=func(r[8])
REG[8] =   s3[abc](8)
REG[4] =  r:0
  22 ResultRow        1    4    0               00 output=r[1..4]
REG[1] =  i:0
REG[2] =  i:0
REG[3] =  r:0
REG[4] =  r:0
  23 Next             0   15    0               01 
  15 Column           0    0    6               00 r[6]=a.b
REG[6] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  16 Add              6    6    1               00 r[1]=r[6]+r[6]
REG[6] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[6] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[1] =  i:0
  17 Subtract         6    6    2               00 r[2]=r[6]-r[6]
REG[6] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[6] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[2] =  i:0
  18 Copy             6    8    0               00 r[8]=r[6]
REG[8] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  19 Function         0    8    3 abs(1)        01 r[3]=func(r[8])
REG[8] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[3] =  r:0
  20 Copy             6    8    0               00 r[8]=r[6]
REG[8] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  21 Function         0    8    4 abs(1)        01 r[4]=func(r[8])
REG[8] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[4] =  r:0
  22 ResultRow        1    4    0               00 output=r[1..4]
REG[1] =  i:0
REG[2] =  i:0
REG[3] =  r:0
REG[4] =  r:0
  23 Next             0   15    0               01 
  24 Close            0    0    0               00 
  25 Halt             0    0    0               00 
SQL: [SELECT b, abs(b) FROM a
    INTERSECT
    SELECT b, b FROM a
    ORDER BY 1
  ;]
VDBE Trace:
   0 Init             0   86    0               00 Start at 86
  86 Transaction      0    0    1 0             01 usesStmtJournal=0
  87 TableLock        0    2    0 a             00 iDb=0 root=2 write=0
  88 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 InitCoroutine    4   34    3               00 left SELECT
  34 InitCoroutine    5   80   35               00 right SELECT
  80 Yield            4   85    0               00 
REG[4] =  i:2
REG[4] =  i:80
   3 SorterOpen       2    3    0 k(1,NOCASE)   00 
   4 OpenRead         3    3    0 k(2,NOCASE,)  00 root=3 iDb=0; sqlite_autoindex_a_1
   5 Explain          1    0    0 SCAN TABLE a USING COVERING INDEX sqlite_autoindex_a_1 00 
   6 Rewind           3   21    8 0             00 
   7 Column           3    0   10               00 r[10]=a.b
REG[10] =   s3[abc](8)
   8 Copy            10   12    0               00 r[12]=r[10]
REG[12] =   s3[abc](8)
   9 Function0        0   12   11 abs(1)        01 r[11]=func(r[12])
REG[12] =   s3[abc](8)
REG[11] =  r:0
  10 Copy            10    8    0               00 r[8]=r[10]
REG[8] =   s3[abc](8)
  11 Copy            11    9    0               00 r[9]=r[11]
REG[9] =  r:0
  12 MakeRecord       9    3   13               00 r[13]=mkrec(r[9..11])
REG[13] =  s23[04071307000000000000000061626300............abc.](8)
  13 SequenceTest     2   18    0               00 if( cursor[2].ctr++ ) pc = 18
  18 Move             8   14    1               00 r[14]=r[8]
REG[14] =   s3[abc](8)
  19 SorterInsert     2   13    0               00 
REG[13] =  s23[04071307000000000000000061626300............abc.](8)
  20 Next             3    7    0               01 
   7 Column           3    0   10               00 r[10]=a.b
REG[10] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
   8 Copy            10   12    0               00 r[12]=r[10]
REG[12] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
   9 Function         0   12   11 abs(1)        01 r[11]=func(r[12])
REG[12] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[11] =  r:0
  10 Copy            10    8    0               00 r[8]=r[10]
REG[8] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  11 Copy            11    9    0               00 r[9]=r[11]
REG[9] =  r:0
  12 MakeRecord       9    3   13               00 r[13]=mkrec(r[9..11])
REG[13] =  s2069[0507A00C070000000000000000124C27..............L'](8)
  13 SequenceTest     2   18    0               00 if( cursor[2].ctr++ ) pc = 18
  14 Compare         14    8    1 k(2,NOCASE,NOCASE) 00 r[14] <-> r[8]
REG[14] =   s3[abc](8)
REG[8] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  15 Jump            16   19   16               00 
  16 Gosub           15   24    0               00 
REG[15] =  i:16
  24 Once             0   26    0               00 
  25 OpenPseudo       4   16    4               00 4 columns in r[16]
  26 SorterSort       2   33    0               00 
  27 SorterData       2   16    4               00 r[16]=data
  28 Column           4    1   10               00 r[10]=b
REG[10] =   s3[abc](8)
  29 Column           4    2   11               00 r[11]=abs(b)
REG[11] =  r:0
  30 Yield            4    0    0               00 
REG[4] =  i:80
REG[4] =  i:30
  81 Yield            5   85    0               00 
REG[5] =  i:34
REG[5] =  i:81
  35 SorterOpen       5    3    0 k(1,NOCASE)   00 
  36 OpenRead         6    3    0 k(2,NOCASE,)  00 root=3 iDb=0; sqlite_autoindex_a_1
  37 Explain          2    0    0 SCAN TABLE a USING COVERING INDEX sqlite_autoindex_a_1 00 
  38 Rewind           6   52   17 0             00 
  39 Column           6    0   19               00 r[19]=a.b
REG[19] =   s3[abc](8)
  40 Copy            19   20    0               00 r[20]=r[19]
REG[20] =   s3[abc](8)
  41 Copy            19   17    0               00 r[17]=r[19]
REG[17] =   s3[abc](8)
  42 Copy            20   18    0               00 r[18]=r[20]
REG[18] =   s3[abc](8)
  43 MakeRecord      18    3   21               00 r[21]=mkrec(r[18..20])
REG[21] =  s13[04131313616263616263616263....abcabcabc](8)
  44 SequenceTest     5   49    0               00 if( cursor[5].ctr++ ) pc = 49
  49 Move            17   22    1               00 r[22]=r[17]
REG[22] =   s3[abc](8)
  50 SorterInsert     5   21    0               00 
REG[21] =  s13[04131313616263616263616263....abcabcabc](8)
  51 Next             6   39    0               01 
  39 Column           6    0   19               00 r[19]=a.b
REG[19] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  40 Copy            19   20    0               00 r[20]=r[19]
REG[20] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  41 Copy            19   17    0               00 r[17]=r[19]
REG[17] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  42 Copy            20   18    0               00 r[18]=r[20]
REG[18] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  43 MakeRecord      18    3   21               00 r[21]=mkrec(r[18..20])
REG[21] =  s6151[07A00CA00CA00C124C27C6729238C9A2........L'.r.8..](8)
  44 SequenceTest     5   49    0               00 if( cursor[5].ctr++ ) pc = 49
  45 Compare         22   17    1 k(2,NOCASE,NOCASE) 00 r[22] <-> r[17]
REG[22] =   s3[abc](8)
REG[17] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  46 Jump            47   50   47               00 
  47 Gosub           23   55    0               00 
REG[23] =  i:47
  55 Once             1   57    0               00 
  56 OpenPseudo       7   24    4               00 4 columns in r[24]
  57 SorterSort       5   64    0               00 
  58 SorterData       5   24    7               00 r[24]=data
  59 Column           7    1   19               00 r[19]=b
REG[19] =   s3[abc](8)
  60 Column           7    2   20               00 r[20]=b
REG[20] =   s3[abc](8)
  61 Yield            5    0    0               00 
REG[5] =  i:81
REG[5] =  i:61
  82 Permutation      0    0    0 [0]           00 
  83 Compare         10   19    2 k(3,NOCASE,NOCASE,) 01 r[10..11] <-> r[19..20]
REG[10] =   s3[abc](8)
REG[19] =   s3[abc](8)
REG[11] =  r:0
REG[20] =   s3[abc](8)
  84 Jump            75   74   78               00 
  75 Yield            4   85    0               00 
REG[4] =  i:30
REG[4] =  i:75
  31 SorterNext       2   27    0               00 
  32 Return          15    0    0               00 
REG[15] =  i:16
  17 ResetSorter      2    0    0               00 
  18 Move             8   14    1               00 r[14]=r[8]
REG[14] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  19 SorterInsert     2   13    0               00 
REG[13] =  s2069[0507A00C070000000000000000124C27..............L'](8)
  20 Next             3    7    0               01 
  21 Close            3    0    0               00 
  22 Gosub           15   24    0               00 
REG[15] =  i:22
  24 Once             0   26    0               00 
  26 SorterSort       2   33    0               00 
  27 SorterData       2   16    4               00 r[16]=data
  28 Column           4    1   10               00 r[10]=b
REG[10] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  29 Column           4    2   11               00 r[11]=abs(b)
REG[11] =  r:0
  30 Yield            4    0    0               00 
REG[4] =  i:75
REG[4] =  i:30
  76 Goto             0   82    0               00 
  82 Permutation      0    0    0 [0]           00 
  83 Compare         10   19    2 k(3,NOCASE,NOCASE,) 01 r[10..11] <-> r[19..20]
REG[10] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[19] =   s3[abc](8)
  84 Jump            75   74   78               00 
  78 Yield            5   85    0               00 
REG[5] =  i:61
REG[5] =  i:78
  62 SorterNext       5   58    0               00 
  63 Return          23    0    0               00 
REG[23] =  i:47
  48 ResetSorter      5    0    0               00 
  49 Move            17   22    1               00 r[22]=r[17]
REG[22] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  50 SorterInsert     5   21    0               00 
REG[21] =  s6151[07A00CA00CA00C124C27C6729238C9A2........L'.r.8..](8)
  51 Next             6   39    0               01 
  52 Close            6    0    0               00 
  53 Gosub           23   55    0               00 
REG[23] =  i:53
  55 Once             1   57    0               00 
  57 SorterSort       5   64    0               00 
  58 SorterData       5   24    7               00 r[24]=data
  59 Column           7    1   19               00 r[19]=b
REG[19] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  60 Column           7    2   20               00 r[20]=b
REG[20] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  61 Yield            5    0    0               00 
REG[5] =  i:78
REG[5] =  i:61
  79 Goto             0   82    0               00 
  82 Permutation      0    0    0 [0]           00 
  83 Compare         10   19    2 k(3,NOCASE,NOCASE,) 01 r[10..11] <-> r[19..20]
REG[10] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[19] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[11] =  r:0
REG[20] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  84 Jump            75   74   78               00 
  75 Yield            4   85    0               00 
REG[4] =  i:30
REG[4] =  i:75
  31 SorterNext       2   27    0               00 
  32 Return          15    0    0               00 
REG[15] =  i:22
  23 Goto             0   33    0               00 
  33 EndCoroutine     4    0    0               00 
REG[4] =  i:75
  85 Halt             0    0    0               00 
SQL: [CREATE INDEX temp_store_directory_test ON a('b' COLLATE binary ASC);]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      0    1    1 0             01 usesStmtJournal=0
  35 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  36 TableLock        0    2    1 a             00 iDb=0 root=2 write=1
  37 Goto             0    1    0               00 
   1 Noop             0   33    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:5
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:3
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 temp_store_directory_test 00 r[4]='temp_store_directory_test'
REG[4] =   t25[temp_store_dire](8)
   7 String8          0    5    0 a             00 r[5]='a'
REG[5] =   t1[a](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:5
   9 String8          0    7    0 CREATE INDEX temp_store_directory_test ON a('b' COLLATE binary ASC) 00 r[7]='CREATE INDEX temp_store_directory_test ON a('b' COLLATE binary ASC)'
REG[7] =   t67[CREATE INDEX te](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s106[07173F0F018113696E64657874656D70..?....indextemp](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s106[07173F0F018113696E64657874656D70..?....indextemp](8)
REG[2] =  i:3
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    1 k(2,B,)       00 
  14 OpenRead         1    2    0 1             00 root=2 iDb=0; a
  15 Rewind           1   21    0               00 
  16 Column           1    0   10               00 r[10]=a.b
REG[10] =   s3[abc](8)
  17 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:1
  18 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s6[031309616263...abc](8)
  19 SorterInsert     3    9    0               00 
REG[9] =  s6[031309616263...abc](8)
  20 Next             1   16    0               00 
  16 Column           1    0   10               00 r[10]=a.b
REG[10] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  17 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:2
  18 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s2053[04A00C01124C27C6729238C9A264C17C.....L'.r.8..d.|](8)
  19 SorterInsert     3    9    0               00 
REG[9] =  s2053[04A00C01124C27C6729238C9A264C17C.....L'.r.8..d.|](8)
  20 Next             1   16    0               00 
  21 OpenWrite        2    1    0 k(2,B,)       11 root=1 iDb=0
  22 SorterSort       3   27    0               00 
  23 SorterData       3    9    2               00 r[9]=data
  24 Last             2    0   -1               00 
  25 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s6[031309616263...abc](8)
  26 SorterNext       3   23    0               00 
  23 SorterData       3    9    2               00 r[9]=data
  24 Last             2    0   -1               00 
  25 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s2053[04A00C01124C27C6729238C9A264C17C.....L'.r.8..d.|](8)
  26 SorterNext       3   23    0               00 
  27 Close            1    0    0               00 
  28 Close            2    0    0               00 
  29 Close            3    0    0               00 
  30 SetCookie        0    1    2               00 
  31 ParseSchema      0    0    0 name='temp_store_directory_test' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 temp_store_directory_test 00 r[2]='temp_store_directory_test'
REG[2] =   t25[temp_store_dire](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s20[sqlite_autoinde](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s20[sqlite_autoinde](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s25[temp_store_dire](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s25[temp_store_dire](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s67[CREATE INDEX te](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s25[temp_store_dire](8)
REG[6] =  i:5
REG[7] =   s67[CREATE INDEX te](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  32 Expire           0    0    0               00 
  33 Halt             0    0    0               00 
SQL: [SELECT b, abs(b) FROM a
    INTERSECT
    SELECT abs(b), abs(b) FROM a
    ORDER BY 1
  ;]
VDBE Trace:
   0 Init             0   78    0               00 Start at 78
  78 Transaction      0    0    2 0             01 usesStmtJournal=0
  79 TableLock        0    2    0 a             00 iDb=0 root=2 write=0
  80 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 InitCoroutine    4   34    3               00 left SELECT
  34 InitCoroutine    5   72   35               00 right SELECT
  72 Yield            4   77    0               00 
REG[4] =  i:2
REG[4] =  i:72
   3 SorterOpen       2    3    0 k(1,B)        00 
   4 OpenRead         3    3    0 k(2,NOCASE,)  00 root=3 iDb=0; sqlite_autoindex_a_1
   5 Explain          1    0    0 SCAN TABLE a USING COVERING INDEX sqlite_autoindex_a_1 00 
   6 Rewind           3   21    8 0             00 
   7 Column           3    0   10               00 r[10]=a.b
REG[10] =   s3[abc](8)
   8 Copy            10   12    0               00 r[12]=r[10]
REG[12] =   s3[abc](8)
   9 Function0        0   12   11 abs(1)        01 r[11]=func(r[12])
REG[12] =   s3[abc](8)
REG[11] =  r:0
  10 Copy            10    8    0               00 r[8]=r[10]
REG[8] =   s3[abc](8)
  11 Copy            11    9    0               00 r[9]=r[11]
REG[9] =  r:0
  12 MakeRecord       9    3   13               00 r[13]=mkrec(r[9..11])
REG[13] =  s23[04071307000000000000000061626300............abc.](8)
  13 SequenceTest     2   18    0               00 if( cursor[2].ctr++ ) pc = 18
  18 Move             8   14    1               00 r[14]=r[8]
REG[14] =   s3[abc](8)
  19 SorterInsert     2   13    0               00 
REG[13] =  s23[04071307000000000000000061626300............abc.](8)
  20 Next             3    7    0               01 
   7 Column           3    0   10               00 r[10]=a.b
REG[10] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
   8 Copy            10   12    0               00 r[12]=r[10]
REG[12] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
   9 Function         0   12   11 abs(1)        01 r[11]=func(r[12])
REG[12] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[11] =  r:0
  10 Copy            10    8    0               00 r[8]=r[10]
REG[8] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  11 Copy            11    9    0               00 r[9]=r[11]
REG[9] =  r:0
  12 MakeRecord       9    3   13               00 r[13]=mkrec(r[9..11])
REG[13] =  s2069[0507A00C070000000000000000124C27..............L'](8)
  13 SequenceTest     2   18    0               00 if( cursor[2].ctr++ ) pc = 18
  14 Compare         14    8    1 k(2,NOCASE,B) 00 r[14] <-> r[8]
REG[14] =   s3[abc](8)
REG[8] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  15 Jump            16   19   16               00 
  16 Gosub           15   24    0               00 
REG[15] =  i:16
  24 Once             0   26    0               00 
  25 OpenPseudo       4   16    4               00 4 columns in r[16]
  26 SorterSort       2   33    0               00 
  27 SorterData       2   16    4               00 r[16]=data
  28 Column           4    1   10               00 r[10]=b
REG[10] =   s3[abc](8)
  29 Column           4    2   11               00 r[11]=abs(b)
REG[11] =  r:0
  30 Yield            4    0    0               00 
REG[4] =  i:72
REG[4] =  i:30
  73 Yield            5   77    0               00 
REG[5] =  i:34
REG[5] =  i:73
  35 SorterOpen       5    5    0 k(2,NOCASE,B) 00 
  36 OpenRead         0    2    0 1             00 root=2 iDb=0; a
  37 Explain          2    0    0 SCAN TABLE a  00 
  38 Rewind           0   48    0               00 
  39 Column           0    0   21               00 r[21]=a.b
REG[21] =   s3[abc](8)
  40 Function0        0   21   19 abs(1)        01 r[19]=func(r[21])
REG[21] =   s3[abc](8)
REG[19] =  r:0
  41 Column           0    0   21               00 r[21]=a.b
REG[21] =   s3[abc](8)
  42 Function0        0   21   20 abs(1)        01 r[20]=func(r[21])
REG[21] =   s3[abc](8)
REG[20] =  r:0
  43 Copy            19   17    0               00 r[17]=r[19]
REG[17] =  r:0
  44 Copy            20   18    0               00 r[18]=r[20]
REG[18] =  r:0
  45 MakeRecord      17    4   22               00 r[22]=mkrec(r[17..20])
REG[22] =  s37[05070707070000000000000000000000................](8)
  46 SorterInsert     5   22    0               00 
REG[22] =  s37[05070707070000000000000000000000................](8)
  47 Next             0   39    0               01 
  39 Column           0    0   21               00 r[21]=a.b
REG[21] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  40 Function         0   21   19 abs(1)        01 r[19]=func(r[21])
REG[21] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[19] =  r:0
  41 Column           0    0   21               00 r[21]=a.b
REG[21] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
  42 Function         0   21   20 abs(1)        01 r[20]=func(r[21])
REG[21] =  s2048[124C27C6729238C9A264C17C0A01E4DC.L'.r.8..d.|....](8)
REG[20] =  r:0
  43 Copy            19   17    0               00 r[17]=r[19]
REG[17] =  r:0
  44 Copy            20   18    0               00 r[18]=r[20]
REG[18] =  r:0
  45 MakeRecord      17    4   22               00 r[22]=mkrec(r[17..20])
REG[22] =  s37[05070707070000000000000000000000................](8)
  46 SorterInsert     5   22    0               00 
REG[22] =  s37[05070707070000000000000000000000................](8)
  47 Next             0   39    0               01 
  48 Close            0    0    0               00 
  49 OpenPseudo       6   23    5               00 5 columns in r[23]
  50 SorterSort       5   56    0               00 
  51 SorterData       5   23    6               00 r[23]=data
  52 Column           6    2   19               00 r[19]=abs(b)
REG[19] =  r:0
  53 Column           6    3   20               00 r[20]=abs(b)
REG[20] =  r:0
  54 Yield            5    0    0               00 
REG[5] =  i:73
REG[5] =  i:54
  74 Permutation      0    0    0 [0]           00 
  75 Compare         10   19    2 k(3,NOCASE,B,) 01 r[10..11] <-> r[19..20]
REG[10] =   s3[abc](8)
REG[19] =  r:0
  76 Jump            67   66   70               00 
  70 Yield            5   77    0               00 
REG[5] =  i:54
REG[5] =  i:70
  55 SorterNext       5   51    0               00 
  51 SorterData       5   23    6               00 r[23]=data
  52 Column           6    2   19               00 r[19]=abs(b)
REG[19] =  r:0
  53 Column           6    3   20               00 r[20]=abs(b)
REG[20] =  r:0
  54 Yield            5    0    0               00 
REG[5] =  i:70
REG[5] =  i:54
  71 Goto             0   74    0               00 
  74 Permutation      0    0    0 [0]           00 
  75 Compare         10   19    2 k(3,NOCASE,B,) 01 r[10..11] <-> r[19..20]
REG[10] =   s3[abc](8)
REG[19] =  r:0
  76 Jump            67   66   70               00 
  70 Yield            5   77    0               00 
REG[5] =  i:54
REG[5] =  i:70
  55 SorterNext       5   51    0               00 
  56 EndCoroutine     5    0    0               00 
REG[5] =  i:70
  77 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='a' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[a](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s44[CREATE TABLE a(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[a](8)
REG[6] =  i:2
REG[7] =   s44[CREATE TABLE a(](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s20[sqlite_autoinde](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =  NULL
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s20[sqlite_autoinde](8)
REG[6] =  i:3
REG[7] =  NULL
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s25[temp_store_dire](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s67[CREATE INDEX te](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s25[temp_store_dire](8)
REG[6] =  i:5
REG[7] =   s67[CREATE INDEX te](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
VACUUM;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Vacuum           0    0    0               00 
SQL: [ATTACH '' AS vacuum_db;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0               00 r[1]=''
REG[1] =   t0[](8)
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
REG[2] =   t9[vacuum_db](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t0[](8)
REG[2] =   t9[vacuum_db](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      2    0    0 0             00 usesStmtJournal=0
  13 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [PRAGMA vacuum_db.synchronous=OFF]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [SELECT 'CREATE TABLE vacuum_db.' || substr(sql,14)   FROM sqlite_master WHERE type='table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    2 0             01 usesStmtJournal=0
  20 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  21 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  22 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  23 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  24 String8          0    8    0 CREATE TABLE vacuum_db. 00 r[8]='CREATE TABLE vacuum_db.'
REG[8] =   t23[CREATE TABLE va](8)
  25 Integer         14   10    0               00 r[10]=14
REG[10] =  i:14
  26 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   17    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s1[a](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s1[a](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:2
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:2
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s44[CREATE TABLE a(](8)
  13 Function0        2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s44[CREATE TABLE a(](8)
REG[10] =  i:14
REG[5] =   s31[a(b COLLATE noc](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s31[a(b COLLATE noc](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s54[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s54[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.a(b COLLATE nocase PRIMARY KEY)]
VDBE Trace:
   0 Init             0   42    0               00 Start at 42
  42 Transaction      2    1    0 0             01 usesStmtJournal=0
  43 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  44 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        2    2    4               00 
   4 SetCookie        2    5    1               00 
   5 CreateTable      2    2    0               00 r[2]=root iDb=2
REG[2] =  i:2
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Noop             0   23    0               00 
  12 CreateIndex      2    4    0               00 r[4]=root iDb=2
REG[4] =  i:3
  13 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:2
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_a_1 00 r[7]='sqlite_autoindex_a_1'
REG[7] =   t20[sqlite_autoinde](8)
  17 String8          0    8    0 a             00 r[8]='a'
REG[8] =   t1[a](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:3
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s33[0617350F0100696E64657873716C6974..5...indexsqlit](8)
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  s33[0617350F0100696E64657873716C6974..5...indexsqlit](8)
REG[5] =  i:2
  22 Close            1    0    0               00 
  23 Close            0    0    0               00 
  24 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  25 OpenWrite        2    1    2 5             00 root=1 iDb=2; sqlite_master
  26 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  27 MustBeInt        1   30    0               00 
REG[1] =  i:1
  28 NotExists        2   30    1               00 intkey=r[1]; pk
REG[1] =  i:1
  29 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:1
  30 IsNull          13   38    0               00 if r[13]==NULL goto 38
REG[13] =  i:1
  31 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  32 String8          0   15    0 a             00 r[15]='a'
REG[15] =   t1[a](8)
  33 String8          0   16    0 a             00 r[16]='a'
REG[16] =   t1[a](8)
  34 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:2
  35 String8          0   18    0 CREATE TABLE a(b COLLATE nocase PRIMARY KEY) 00 r[18]='CREATE TABLE a(b COLLATE nocase PRIMARY KEY)'
REG[18] =   t44[CREATE TABLE a(](8)
  36 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s58[06170F0F01657461626C656161024352.....etableaa.CR](8)
  37 Insert           2   19   13               00 intkey=r[13] data=r[19]
REG[19] =  s58[06170F0F01657461626C656161024352.....etableaa.CR](8)
REG[13] =  i:1
  38 Close            2    0    0               00 
  39 SetCookie        2    1    1               00 
  40 ParseSchema      2    0    0 tbl_name='a' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    1 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[a](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s44[CREATE TABLE a(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[a](8)
REG[6] =  i:2
REG[7] =   s44[CREATE TABLE a(](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s20[sqlite_autoinde](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =  NULL
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s20[sqlite_autoinde](8)
REG[6] =  i:3
REG[7] =  NULL
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  41 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  16 Next             0    4    0               01 
  17 Close            0    0    0               00 
  18 Halt             0    0    0               00 
SQL: [SELECT 'CREATE INDEX vacuum_db.' || substr(sql,14)  FROM sqlite_master WHERE sql LIKE 'CREATE INDEX %' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    2 0             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE INDEX % 00 r[2]='CREATE INDEX %'
REG[2] =   t14[CREATE INDEX %](8)
  17 String8          0    5    0 CREATE INDEX vacuum_db. 00 r[5]='CREATE INDEX vacuum_db.'
REG[5] =   t23[CREATE INDEX va](8)
  18 Integer         14    7    0               00 r[7]=14
REG[7] =  i:14
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s44[CREATE TABLE a(](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s44[CREATE TABLE a(](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =  NULL
REG[1] =  NULL
   6 IfNot            1   11    1               00 
REG[1] =  NULL
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s67[CREATE INDEX te](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s67[CREATE INDEX te](8)
REG[1] =  i:1
   6 IfNot            1   11    1               00 
REG[1] =  i:1
   7 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s67[CREATE INDEX te](8)
   8 Function0        2    6    1 substr(2)     02 r[1]=func(r[6..7])
REG[6] =   s67[CREATE INDEX te](8)
REG[7] =  i:14
REG[1] =   s54[temp_store_dire](8)
   9 Concat           1    5    4               00 r[4]=r[5]+r[1]
REG[1] =   s54[temp_store_dire](8)
REG[5] =   t23[CREATE INDEX va](8)
REG[4] =   s77[CREATE INDEX va](8)
  10 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s77[CREATE INDEX va](8)
SQL: [CREATE INDEX vacuum_db.temp_store_directory_test ON a('b' COLLATE binary ASC)]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      2    1    1 0             01 usesStmtJournal=0
  35 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  36 TableLock        2    2    1 a             00 iDb=2 root=2 write=1
  37 Goto             0    1    0               00 
   1 Noop             0   33    0               00 
   2 CreateIndex      2    1    0               00 r[1]=root iDb=2
REG[1] =  i:4
   3 OpenWrite        0    1    2 5             00 root=1 iDb=2; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:3
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 temp_store_directory_test 00 r[4]='temp_store_directory_test'
REG[4] =   t25[temp_store_dire](8)
   7 String8          0    5    0 a             00 r[5]='a'
REG[5] =   t1[a](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:4
   9 String8          0    7    0 CREATE INDEX temp_store_directory_test ON a('b' COLLATE binary ASC) 00 r[7]='CREATE INDEX temp_store_directory_test ON a('b' COLLATE binary ASC)'
REG[7] =   t67[CREATE INDEX te](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s106[07173F0F018113696E64657874656D70..?....indextemp](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s106[07173F0F018113696E64657874656D70..?....indextemp](8)
REG[2] =  i:3
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    1 k(2,B,)       00 
  14 OpenRead         1    2    2 1             00 root=2 iDb=2; a
  15 Rewind           1   21    0               00 
  21 OpenWrite        2    1    2 k(2,B,)       11 root=1 iDb=2
  22 SorterSort       3   27    0               00 
  27 Close            1    0    0               00 
  28 Close            2    0    0               00 
  29 Close            3    0    0               00 
  30 SetCookie        2    1    2               00 
  31 ParseSchema      2    0    0 name='temp_store_directory_test' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    2 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 temp_store_directory_test 00 r[2]='temp_store_directory_test'
REG[2] =   t25[temp_store_dire](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s20[sqlite_autoinde](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s20[sqlite_autoinde](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s25[temp_store_dire](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s25[temp_store_dire](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s67[CREATE INDEX te](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s25[temp_store_dire](8)
REG[6] =  i:4
REG[7] =   s67[CREATE INDEX te](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  32 Expire           0    0    0               00 
  33 Halt             0    0    0               00 
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'CREATE UNIQUE INDEX vacuum_db.' || substr(sql,21)   FROM sqlite_master WHERE sql LIKE 'CREATE UNIQUE INDEX %']
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    2 0             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE UNIQUE INDEX % 00 r[2]='CREATE UNIQUE INDEX %'
REG[2] =   t21[CREATE UNIQUE I](8)
  17 String8          0    5    0 CREATE UNIQUE INDEX vacuum_db. 00 r[5]='CREATE UNIQUE INDEX vacuum_db.'
REG[5] =   t30[CREATE UNIQUE I](8)
  18 Integer         21    7    0               00 r[7]=21
REG[7] =  i:21
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s44[CREATE TABLE a(](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s44[CREATE TABLE a(](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =  NULL
REG[1] =  NULL
   6 IfNot            1   11    1               00 
REG[1] =  NULL
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s67[CREATE INDEX te](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s67[CREATE INDEX te](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';'FROM main.sqlite_master WHERE type = 'table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    0    2 0             01 usesStmtJournal=0
  25 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  26 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  27 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  28 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  29 String8          0   10    0 INSERT INTO vacuum_db. 00 r[10]='INSERT INTO vacuum_db.'
REG[10] =   t22[INSERT INTO vac](8)
  30 String8          0   13    0  SELECT * FROM main. 00 r[13]=' SELECT * FROM main.'
REG[13] =   t20[ SELECT * FROM ](8)
  31 String8          0   14    0 ;             00 r[14]=';'
REG[14] =   t1[;](8)
  32 Goto             0    1    0               00 
   1 OpenRead         0    1    0 4             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   22    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s1[a](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s1[a](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:2
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:2
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s1[a](8)
  13 Function0        0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s1[a](8)
REG[11] =   z3['a'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z3['a'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s25[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s25[INSERT INTO vac](8)
REG[8] =   s45[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s1[a](8)
  17 Function0        0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s1[a](8)
REG[9] =   z3['a'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z3['a'](8)
REG[8] =   s45[INSERT INTO vac](8)
REG[5] =   s48[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s48[INSERT INTO vac](8)
REG[7] =   s49[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f4983b1f859 in __GI_abort () at abort.c:79
#2  0x00007f4983b1f729 in __assert_fail_base (fmt=0x7f4983cb5588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x227729 "sqlite3_stricmp(sqlite3StrBINARY, zColl)!=0 || sqlite3StrBINARY==zColl", 
    file=0x222c23 "sqlite3.c", line=108020, function=<optimized out>) at assert.c:92
#3  0x00007f4983b30fd6 in __GI___assert_fail (assertion=0x227729 "sqlite3_stricmp(sqlite3StrBINARY, zColl)!=0 || sqlite3StrBINARY==zColl", file=0x222c23 "sqlite3.c", line=108020, 
    function=0x20a00b "int xferOptimization(Parse *, Table *, Select *, int, int)") at assert.c:101
#4  0x0000000000345560 in sqlite3Insert (pParse=<optimized out>, pTabList=<optimized out>, pSelect=<optimized out>, pColumn=0x0, onError=<optimized out>) at sqlite3.c:108019
#5  0x00000000003066b3 in yy_reduce (yypParser=0x24869e0, yyruleno=<optimized out>) at sqlite3.c:133484
#6  0x00000000002fef8e in sqlite3Parser (yyp=0x24869e0, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#7  0x00000000002fc544 in sqlite3RunParser (pParse=0x23f6450, zSql=0x23f4440 "INSERT INTO vacuum_db.'a' SELECT * FROM main.'a';", pzErrMsg=0x7ffe0bb43f58) at sqlite3.c:135186
#8  0x00000000002facac in sqlite3Prepare (db=0x23e3850, zSql=0x23f4440 "INSERT INTO vacuum_db.'a' SELECT * FROM main.'a';", nBytes=<optimized out>, saveSqlFlag=0, pReprepare=<optimized out>, ppStmt=0x7ffe0bb44018, 
    pzTail=0x0) at sqlite3.c:112596
#9  0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0x23e3850, zSql=0x23f4440 "INSERT INTO vacuum_db.'a' SELECT * FROM main.'a';", nBytes=-1, saveSqlFlag=0, pOld=0x0, ppStmt=<optimized out>, pzTail=0x0) at sqlite3.c:112688
#10 0x00000000003fb16b in execSql (db=0x23e3850, pzErrMsg=0x23f7a78, zSql=<optimized out>) at sqlite3.c:112752
#11 0x00000000003fb5ec in execExecSql (db=0x23e3850, pzErrMsg=0x23f7a78, zSql=<optimized out>) at sqlite3.c:120748
#12 0x00000000003de49e in sqlite3VdbeExec (p=<optimized out>) at sqlite3.c:120939
#13 0x000000000028b140 in sqlite3_step (pStmt=<optimized out>) at sqlite3.c:75131
#14 0x000000000024b5e9 in main (argc=1, argv=0x7ffe0bb447b8) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 14899] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
