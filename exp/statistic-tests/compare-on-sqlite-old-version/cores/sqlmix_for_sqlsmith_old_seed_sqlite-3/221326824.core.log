GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000400,sig:06,src:010128+002254,time:24065532,execs:3590383,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fd1e1d16859 in __GI_abort () at abort.c:79
#2  0x00007fd1e1d16729 in __assert_fail_base (fmt=0x7fd1e1eac588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x20d94f "op==TK_CASE", file=0x222c23 "sqlite3.c", line=92150, function=<optimized out>) at assert.c:92
#3  0x00007fd1e1d27fd6 in __GI___assert_fail (assertion=0x20d94f "op==TK_CASE", file=0x222c23 "sqlite3.c", line=92150, function=0x21a1ea "int sqlite3ExprCodeTarget(Parse *, Expr *, int)") at assert.c:101
#4  0x000000000037b938 in sqlite3ExprCodeTarget (pParse=0x1141b00, pExpr=0x11c9510, target=11) at sqlite3.c:92150
#5  0x000000000037228a in sqlite3ExprCodeTemp (pParse=0x1141b00, pExpr=0x11c9510, pReg=0x7ffd25954a84) at sqlite3.c:92302
#6  0x0000000000371435 in sqlite3ExprIfTrue (pParse=0x1141b00, pExpr=0x11c95d0, dest=<optimized out>, jumpIfNull=16) at sqlite3.c:92559
#7  0x0000000000384b90 in sqlite3GenerateConstraintChecks (pParse=<optimized out>, pTab=0x1142a50, aRegIdx=<optimized out>, iDataCur=0, iIdxCur=1, regNewData=1, regOldData=0, pkChng=0 '\000', overrideError=10 '\n', 
    ignoreDest=-1, pbMayReplace=0x7ffd25954d70, aiChng=0x0) at sqlite3.c:107197
#8  0x00000000003418e6 in sqlite3Insert (pParse=<optimized out>, pTabList=<optimized out>, pSelect=<optimized out>, pColumn=0x113dec0, onError=<optimized out>) at sqlite3.c:106860
#9  0x00000000003af91b in getRowTrigger (pParse=0x1140450, pTrigger=0x11c94c0, pTab=<optimized out>, orconf=<optimized out>) at sqlite3.c:119466
#10 0x00000000003b2546 in sqlite3CodeRowTriggerDirect (pParse=0x1140450, p=0x11c94c0, pTab=0x1142a50, reg=4, orconf=10, ignoreJump=-5) at sqlite3.c:119695
#11 0x0000000000383cae in sqlite3CodeRowTrigger (pParse=0x1140450, pTrigger=<optimized out>, op=108, pChanges=0x0, tr_tm=1, pTab=0x1142a50, reg=4, orconf=10, ignoreJump=-5) at sqlite3.c:119789
#12 0x0000000000340d75 in sqlite3Insert (pParse=<optimized out>, pTabList=<optimized out>, pSelect=<optimized out>, pColumn=0x0, onError=<optimized out>) at sqlite3.c:106752
#13 0x00000000003066b3 in yy_reduce (yypParser=0x11c9d20, yyruleno=<optimized out>) at sqlite3.c:133484
#14 0x00000000002fef8e in sqlite3Parser (yyp=0x11c9d20, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#15 0x00000000002fc544 in sqlite3RunParser (pParse=0x1140450, 
    zSql=0x1147b70 "EXPLAIN INSERT INTO a SELECT * FROM a ;SELECT count(*) FROM (SELECT DISTINCT * FROM (SELECT b FROM a));PRAGMA journal_mode=PERSIST ;ROLLBACK;PRAGMA locking_mode=NORMAL ;END TRANSACTION;;\nSAVEPOINT one"..., pzErrMsg=0x7ffd25955318) at sqlite3.c:135186
#16 0x00000000002fac4e in sqlite3Prepare (db=0x112d850, 
    zSql=0x112ec4d "EXPLAIN INSERT INTO a SELECT * FROM a ;SELECT count(*) FROM (SELECT DISTINCT * FROM (SELECT b FROM a));PRAGMA journal_mode=PERSIST ;ROLLBACK;PRAGMA locking_mode=NORMAL ;END TRANSACTION;;\nSAVEPOINT one"..., nBytes=<optimized out>, saveSqlFlag=1, pReprepare=<optimized out>, ppStmt=0x7ffd25955448, pzTail=0x7ffd25955430) at sqlite3.c:112589
#17 0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0x112d850, 
    zSql=0x112ec4d "EXPLAIN INSERT INTO a SELECT * FROM a ;SELECT count(*) FROM (SELECT DISTINCT * FROM (SELECT b FROM a));PRAGMA journal_mode=PERSIST ;ROLLBACK;PRAGMA locking_mode=NORMAL ;END TRANSACTION;;\nSAVEPOINT one"..., nBytes=642, saveSqlFlag=1, pOld=0x0, ppStmt=<optimized out>, pzTail=0x7ffd25955430) at sqlite3.c:112688
#18 0x000000000028f38c in sqlite3_prepare_v2 (db=0x2, zSql=0x7ffd259545f0 "", nBytes=0, ppStmt=0x7ffd25955448, pzTail=<optimized out>) at sqlite3.c:112764
#19 0x000000000024b100 in main (argc=1, argv=0x7ffd259555f8) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 15656] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
