GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000546,sig:06,src:010484+008456,time:32508204,execs:4827896,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL-trace: ;
PRAGMA sql_trace=on;
SQL-trace: ;
ATTACH 'test.db' AS db2;
SQL-trace: CREATE TRIGGER temp_table AFTER UPDATE ON a BEGIN
      UPDATE a SET b = b+1;
    END;
SQL-trace: ;
PRAGMA main.user_version;
SQL-trace: CREATE TABLE t(t1_mirror text , t1 text);
SQL-trace: CREATE TABLE t1_mirror2
          (t1_bi TEXT NOT NULL,
           t1_ai INTEGER NOT NULL,
           t1_bu INTEGER NOT NULL,
           t1_au TEXT NOT NULL,
           PRIMARY KEY (t1_bi, t1_ai));
SQL-trace: PRAGMA journal_mode = delete;
SQL-trace: SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: BEGIN;
SQL-trace: SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: ;
ALTER TABLE a ADD t1_bd CHECK (temp_table>t1_bd);
SQL-trace: ATTACH 'test.dbxxxxxx2' AS aux;
SQL-trace: SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: ;
SELECT name, rootpage, sql FROM 'temp'.sqlite_temp_master WHERE tbl_name='t1_mirror2' AND type!='trigger' ORDER BY rowid;
SQL-trace: ;
UPDATE sqlite_master SET sql='CREATE TABLE a(
    a TEXT PRIMARY KEY,
    t1_bd TEXT,
    FOREIGN KEY(t1_bd COLLATE nocase) REFERENCES a(a)
  )' WHERE name='a';

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f2b846cb859 in __GI_abort () at abort.c:79
#2  0x00007f2b846cb729 in __assert_fail_base (fmt=0x7f2b84861588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x20d94f "op==TK_CASE", file=0x222c23 "sqlite3.c", line=92150, function=<optimized out>) at assert.c:92
#3  0x00007f2b846dcfd6 in __GI___assert_fail (assertion=0x20d94f "op==TK_CASE", file=0x222c23 "sqlite3.c", line=92150, function=0x21a1ea "int sqlite3ExprCodeTarget(Parse *, Expr *, int)") at assert.c:101
#4  0x000000000037b938 in sqlite3ExprCodeTarget (pParse=0x213cb40, pExpr=0x2157d00, target=15) at sqlite3.c:92150
#5  0x000000000037228a in sqlite3ExprCodeTemp (pParse=0x213cb40, pExpr=0x2157d00, pReg=0x7ffea7987044) at sqlite3.c:92302
#6  0x0000000000371435 in sqlite3ExprIfTrue (pParse=0x213cb40, pExpr=0x21565b0, dest=<optimized out>, jumpIfNull=16) at sqlite3.c:92559
#7  0x0000000000384b90 in sqlite3GenerateConstraintChecks (pParse=<optimized out>, pTab=0x2151840, aRegIdx=<optimized out>, iDataCur=1, iIdxCur=1, regNewData=7, regOldData=3, pkChng=1 '\001', overrideError=10 '\n', 
    ignoreDest=-5, pbMayReplace=0x7ffea798733c, aiChng=0x214eaf0) at sqlite3.c:107197
#8  0x000000000033c4b3 in sqlite3Update (pParse=<optimized out>, pTabList=<optimized out>, pChanges=<optimized out>, pWhere=<optimized out>, onError=<optimized out>) at sqlite3.c:120426
#9  0x00000000003afa86 in getRowTrigger (pParse=0x213d350, pTrigger=0x2158380, pTab=<optimized out>, orconf=<optimized out>) at sqlite3.c:119457
#10 0x000000000033bc42 in sqlite3Update (pParse=<optimized out>, pTabList=<optimized out>, pChanges=<optimized out>, pWhere=<optimized out>, onError=<optimized out>) at sqlite3.c:119838
#11 0x000000000030729a in yy_reduce (yypParser=0x215a450, yyruleno=<optimized out>) at sqlite3.c:133465
#12 0x00000000002fef8e in sqlite3Parser (yyp=0x215a450, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#13 0x00000000002fc544 in sqlite3RunParser (pParse=0x213d350, 
    zSql=0x2159680 ";\nUPDATE a SET t1_bd = '';;\nATTACH 'test.db0' AS aux0;PRAGMA locking_mode=NORMAL ;;\nSELECT count(*) FROM t;BEGIN;SELECT name, rootpage, sql FROM \"main\".sqlite_master ORDER BY rowid;SELECT name, rootpa"..., pzErrMsg=0x7ffea7987898) at sqlite3.c:135186
#14 0x00000000002fac4e in sqlite3Prepare (db=0x213de60, 
    zSql=0x213eae0 ";\nUPDATE a SET t1_bd = '';;\nATTACH 'test.db0' AS aux0;PRAGMA locking_mode=NORMAL ;;\nSELECT count(*) FROM t;BEGIN;SELECT name, rootpage, sql FROM \"main\".sqlite_master ORDER BY rowid;SELECT name, rootpa"..., nBytes=<optimized out>, saveSqlFlag=1, pReprepare=<optimized out>, ppStmt=0x7ffea79879c8, pzTail=0x7ffea79879b0) at sqlite3.c:112589
#15 0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0x213de60, 
    zSql=0x213eae0 ";\nUPDATE a SET t1_bd = '';;\nATTACH 'test.db0' AS aux0;PRAGMA locking_mode=NORMAL ;;\nSELECT count(*) FROM t;BEGIN;SELECT name, rootpage, sql FROM \"main\".sqlite_master ORDER BY rowid;SELECT name, rootpa"..., nBytes=2270, saveSqlFlag=1, pOld=0x0, ppStmt=<optimized out>, pzTail=0x7ffea79879b0) at sqlite3.c:112688
#16 0x000000000028f38c in sqlite3_prepare_v2 (db=0x2, zSql=0x7ffea7986bb0 "", nBytes=0, ppStmt=0x7ffea79879c8, pzTail=<optimized out>) at sqlite3.c:112764
#17 0x000000000024b100 in main (argc=1, argv=0x7ffea7987b78) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 16812] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
