GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000255,sig:06,src:004066+006029,time:12008316,execs:1500418,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL-trace: ;
PRAGMA sql_trace=on;
SQL-trace: ;
ANALYZE;
SQL-trace: SELECT tbl,idx,stat FROM 'main'.sqlite_stat1
SQL-trace: SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='index03' AND type='index' ORDER BY rowid;
SQL-trace: SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='index14' AND type='index' ORDER BY rowid;
SQL-trace: SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='index18' AND type='index' ORDER BY rowid;
SQL-trace: SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='index43' AND type='index' ORDER BY rowid;
SQL-trace: SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='index49' AND type='index' ORDER BY rowid;
SQL-trace: SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='index63' AND type='index' ORDER BY rowid;
SQL-trace: SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='index68' AND type='index' ORDER BY rowid;
SQL-trace: SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='index73' AND type='index' ORDER BY rowid;
SQL-trace: SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='index79' AND type='index' ORDER BY rowid;
SQL-trace: SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='index83' AND type='index' ORDER BY rowid;
SQL-trace: SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='index89' AND type='index' ORDER BY rowid;
SQL-trace: SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='index94' AND type='index' ORDER BY rowid;
SQL-trace: SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='index99' AND type='index' ORDER BY rowid;
SQL-trace: PRAGMA integrity_check;
SQL-trace: CREATE TABLE a(b int, temp_store_directory_test int primary key);
SQL-trace: SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='a' AND type!='trigger' ORDER BY rowid;
SQL-trace: INSERT INTO a VALUES(1,2);
SQL-trace: INSERT INTO a VALUES(12,4096);
SQL-trace: INSERT INTO a VALUES(17,131072);
SQL-trace: SELECT count(*) FROM a;
SQL-trace: SELECT name FROM sqlite_master 
    WHERE type='index' AND tbl_name='a'
  ;
SQL-trace: ;
PRAGMA integrity_check;
SQL-trace: CREATE TABLE temp_table(t NUM,t1);
SQL-trace: ;
INSERT INTO temp_table VALUES('abc',3);
SQL-trace: ;
INSERT INTO temp_table VALUES('0',6);
SQL-trace: ;
SELECT b FROM a ORDER BY b;
SQL-trace: ;
SELECT b FROM a WHERE b==0 ORDER BY b
  ;
SQL-trace: SELECT temp_store_directory_test FROM a WHERE temp_store_directory_test>-0.5 ORDER BY temp_store_directory_test
  ;
SQL-trace: PRAGMA integrity_check;
SQL-trace: ;
SELECT name FROM sqlite_master WHERE type="index" AND tbl_name="temp_table";
SQL-trace: ;
SELECT * FROM temp_table;
SQL-trace: ;
INSERT INTO a VALUES('12.33e04',2);
SQL-trace: ;
INSERT INTO a VALUES('12.35E4',3);
SQL-trace: ;
INSERT INTO temp_table VALUES('12.34e',4);
SQL-trace: ;
INSERT INTO a VALUES('12.36E+',7);
SQL-trace: ;
INSERT INTO a VALUES('+12347.E+02',10);
SQL-trace: ;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='a' AND type!='trigger' ORDER BY rowid;
SQL-trace: SELECT name FROM sqlite_master WHERE tbl_name = 'temp_table' AND type = 'index';
SQL-trace: ;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='temp_table' AND type!='trigger' ORDER BY rowid;
SQL-trace: ;
DROP TABLE temp_table;
SQL-trace: ;
BEGIN;
SQL-trace: ;
CREATE TABLE temp_table(t, t1, t1_mirror, t1_mirror2, t1_bi, 
                  PRIMARY KEY('t'), UNIQUE('t1' COLLATE nocase DESC));
SQL-trace: CREATE INDEX t1_ai ON a('b' COLLATE binary ASC);
SQL-trace: CREATE TABLE t1_bu("t1_au" integer, t1_bd, PRIMARY KEY("t1_au"));
SQL-trace: ;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1_bu' AND type!='trigger' ORDER BY rowid;
SQL-trace: CREATE TABLE t1_ad([t2] integer, x, PRIMARY KEY([t2]));
SQL-trace: ;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: ;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1_ad' AND type!='trigger' ORDER BY rowid;
SQL-trace: PRAGMA integrity_check 
;
SQL-trace: ;
CREATE TABLE y(x1);
SQL-trace: ;
CREATE INDEX z ON a(b);
SQL-trace: PRAGMA integrity_check
;
SQL-trace: ;
DROP TABLE temp_table;
SQL-trace: ;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='a' AND type!='trigger' ORDER BY rowid;
SQL-trace: ;
COMMIT;
SQL-trace: ;
CREATE UNIQUE INDEX x2 ON t1_bu(t1_au);
SQL-trace: ;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1_bu' AND type!='trigger' ORDER BY rowid;
SQL-trace: DROP INDEX z;
SQL-trace: ;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: CREATE INDEX x3 ON t1_bu(t1_au) ;
SQL-trace: SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: ;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='t1b' AND type='index' ORDER BY rowid;
SQL-trace: ;
ANALYZE;
SQL-trace: SELECT tbl,idx,stat FROM 'main'.sqlite_stat1
SQL-trace: SELECT idx, stat FROM sqlite_stat1 ORDER BY idx;
SQL-trace: ;
SELECT tbl,idx,stat FROM 'main'.sqlite_stat1;
SQL-trace: REINDEX;
SQL-trace: ;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='t1c' AND type='index' ORDER BY rowid;
SQL-trace: VACUUM;
SQL-trace: ATTACH '' AS vacuum_db;
SQL-trace: PRAGMA vacuum_db.synchronous=OFF
SQL-trace: BEGIN;
SQL-trace: SELECT 'CREATE TABLE vacuum_db.' || substr(sql,14)   FROM sqlite_master WHERE type='table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0
SQL-trace: CREATE TABLE vacuum_db.sqlite_stat1(tbl,idx,stat)
SQL-trace: CREATE TABLE vacuum_db.a(b int, temp_store_directory_test int primary key)
SQL-trace: CREATE TABLE vacuum_db.t1_bu("t1_au" integer, t1_bd, PRIMARY KEY("t1_au"))
SQL-trace: CREATE TABLE vacuum_db.t1_ad([t2] integer, x, PRIMARY KEY([t2]))
SQL-trace: CREATE TABLE vacuum_db.y(x1)
SQL-trace: SELECT 'CREATE INDEX vacuum_db.' || substr(sql,14)  FROM sqlite_master WHERE sql LIKE 'CREATE INDEX %' 
SQL-trace: CREATE INDEX vacuum_db.t1_ai ON a('b' COLLATE binary ASC)
SQL-trace: CREATE INDEX vacuum_db.x3 ON t1_bu(t1_au) 
SQL-trace: SELECT 'CREATE UNIQUE INDEX vacuum_db.' || substr(sql,21)   FROM sqlite_master WHERE sql LIKE 'CREATE UNIQUE INDEX %'
SQL-trace: CREATE UNIQUE INDEX vacuum_db.x2 ON t1_bu(t1_au)
SQL-trace: SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';'FROM main.sqlite_master WHERE type = 'table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0
SQL-trace: INSERT INTO vacuum_db.'sqlite_stat1' SELECT * FROM main.'sqlite_stat1';

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f9e6d675859 in __GI_abort () at abort.c:79
#2  0x00007f9e6d675729 in __assert_fail_base (fmt=0x7f9e6d80b588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x227729 "sqlite3_stricmp(sqlite3StrBINARY, zColl)!=0 || sqlite3StrBINARY==zColl", 
    file=0x222c23 "sqlite3.c", line=108020, function=<optimized out>) at assert.c:92
#3  0x00007f9e6d686fd6 in __GI___assert_fail (assertion=0x227729 "sqlite3_stricmp(sqlite3StrBINARY, zColl)!=0 || sqlite3StrBINARY==zColl", file=0x222c23 "sqlite3.c", line=108020, 
    function=0x20a00b "int xferOptimization(Parse *, Table *, Select *, int, int)") at assert.c:101
#4  0x0000000000345560 in sqlite3Insert (pParse=<optimized out>, pTabList=<optimized out>, pSelect=<optimized out>, pColumn=0x0, onError=<optimized out>) at sqlite3.c:108019
#5  0x00000000003066b3 in yy_reduce (yypParser=0x8c42f0, yyruleno=<optimized out>) at sqlite3.c:133484
#6  0x00000000002fef8e in sqlite3Parser (yyp=0x8c42f0, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#7  0x00000000002fc544 in sqlite3RunParser (pParse=0x829ad0, zSql=0x840d20 "INSERT INTO vacuum_db.'a' SELECT * FROM main.'a';", pzErrMsg=0x7ffef5f3da98) at sqlite3.c:135186
#8  0x00000000002facac in sqlite3Prepare (db=0x827850, zSql=0x840d20 "INSERT INTO vacuum_db.'a' SELECT * FROM main.'a';", nBytes=<optimized out>, saveSqlFlag=0, pReprepare=<optimized out>, ppStmt=0x7ffef5f3db58, pzTail=0x0)
    at sqlite3.c:112596
#9  0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0x827850, zSql=0x840d20 "INSERT INTO vacuum_db.'a' SELECT * FROM main.'a';", nBytes=-1, saveSqlFlag=0, pOld=0x0, ppStmt=<optimized out>, pzTail=0x0) at sqlite3.c:112688
#10 0x00000000003fb16b in execSql (db=0x827850, pzErrMsg=0x829dc8, zSql=<optimized out>) at sqlite3.c:112752
#11 0x00000000003fb5ec in execExecSql (db=0x827850, pzErrMsg=0x829dc8, zSql=<optimized out>) at sqlite3.c:120748
#12 0x00000000003de49e in sqlite3VdbeExec (p=<optimized out>) at sqlite3.c:120939
#13 0x000000000028b140 in sqlite3_step (pStmt=<optimized out>) at sqlite3.c:75131
#14 0x000000000024b5e9 in main (argc=1, argv=0x7ffef5f3e2f8) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 14440] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
