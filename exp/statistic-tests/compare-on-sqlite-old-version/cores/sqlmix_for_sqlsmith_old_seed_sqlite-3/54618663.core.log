GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000180,sig:06,src:008793+008496,time:7465476,execs:866793,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL-trace: ;
PRAGMA sql_trace=on;
SQL-trace: ;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: ;
DELETE FROM autoinc;
SQL-trace: SELECT * FROM sqlite_sequence;
SQL-trace: PRAGMA default_synchronous;
SQL-trace: SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='index98' AND type='index' ORDER BY rowid;
SQL-trace: CREATE TABLE a(b);
SQL-trace: SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='index54' AND type='index' ORDER BY rowid;
SQL-trace: ;
PRAGMA writable_schema=ON;
SQL-trace: ;
CREATE INDEX temp_store_directory_test ON a(b,b,b);
SQL-trace: SELECT b FROM a WHERE b=3 ORDER BY b;
SQL-trace: SELECT b FROM a ORDER BY b;
SQL-trace: ;
PRAGMA temp_store=MEMORY;
SQL-trace: ATTACH 'testerr.db' AS 'aux';
SQL-trace: ;
PRAGMA main.integrity_check;
SQL-trace: ;
SELECT b FROM a WHERE b>=123;
SQL-trace: CREATE TABLE temp_table(
      t1_mirror INTEGER PRIMARY KEY,
      t TEXT COLLATE nocase,
      t1 TEXT COLLATE rtrim,
      t1_mirror2 TEXT COLLATE binary
    );
SQL-trace: ;
CREATE TABLE t1_bi(
      t1_ai TEXT DEFAULT CURRENT_TIMESTAMP, 
      t1_bu DEFAULT (5+3),
      t1_au TEXT,
      t1_bd INTEGER DEFAULT NULL,
      t1_ad TEXT DEFAULT '',
      UNIQUE(t1_bu,t1_au,t1_bd),
      PRIMARY KEY(t1_ad,t1_bu,t1_au)
    );
SQL-trace: ;
VACUUM;
SQL-trace: ATTACH ':memory:' AS vacuum_db;
SQL-trace: PRAGMA vacuum_db.synchronous=OFF
SQL-trace: BEGIN;
SQL-trace: SELECT 'CREATE TABLE vacuum_db.' || substr(sql,14)   FROM sqlite_master WHERE type='table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0
SQL-trace: CREATE TABLE vacuum_db.autoinc(a INTEGER PRIMARY KEY AUTOINCREMENT, b)
SQL-trace: CREATE TABLE vacuum_db.a(b)
SQL-trace: CREATE TABLE vacuum_db.temp_table(
      t1_mirror INTEGER PRIMARY KEY,
      t TEXT COLLATE nocase,
      t1 TEXT COLLATE rtrim,
      t1_mirror2 TEXT COLLATE binary
    )
SQL-trace: CREATE TABLE vacuum_db.t1_bi(
      t1_ai TEXT DEFAULT CURRENT_TIMESTAMP, 
      t1_bu DEFAULT (5+3),
      t1_au TEXT,
      t1_bd INTEGER DEFAULT NULL,
      t1_ad TEXT DEFAULT '',
      UNIQUE(t1_bu,t1_au,t1_bd),
      PRIMARY KEY(t1_ad,t1_bu,t1_au)
    )
SQL-trace: SELECT 'CREATE INDEX vacuum_db.' || substr(sql,14)  FROM sqlite_master WHERE sql LIKE 'CREATE INDEX %' 
SQL-trace: CREATE INDEX vacuum_db.temp_store_directory_test ON a(b,b,b)
SQL-trace: SELECT 'CREATE UNIQUE INDEX vacuum_db.' || substr(sql,21)   FROM sqlite_master WHERE sql LIKE 'CREATE UNIQUE INDEX %'
SQL-trace: SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';'FROM main.sqlite_master WHERE type = 'table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0
SQL-trace: INSERT INTO vacuum_db.'autoinc' SELECT * FROM main.'autoinc';
SQL-trace: INSERT INTO vacuum_db.'a' SELECT * FROM main.'a';
SQL-trace: INSERT INTO vacuum_db.'temp_table' SELECT * FROM main.'temp_table';
SQL-trace: INSERT INTO vacuum_db.'t1_bi' SELECT * FROM main.'t1_bi';
SQL-trace: SELECT 'DELETE FROM vacuum_db.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name='sqlite_sequence' 
SQL-trace: DELETE FROM vacuum_db.'sqlite_sequence';
SQL-trace: SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name=='sqlite_sequence';
SQL-trace: INSERT INTO vacuum_db.'sqlite_sequence' SELECT * FROM main.'sqlite_sequence';
SQL-trace: INSERT INTO vacuum_db.sqlite_master   SELECT type, name, tbl_name, rootpage, sql    FROM main.sqlite_master   WHERE type='view' OR type='trigger'      OR (type='table' AND rootpage=0)
SQL-trace: CREATE INDEX t2 ON a(b);
SQL-trace: ;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='t2' AND type='index' ORDER BY rowid;
SQL-trace: CREATE INDEX x ON a(b COLLATE rtrim);
SQL-trace: ;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='temp_table' AND type!='trigger' ORDER BY rowid;
SQL-trace: SELECT count(*) FROM temp_table;
SQL-trace: ;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='temp_store_directory_test' AND type='index' ORDER BY rowid;
SQL-trace: pragma page_size;
SQL-trace: ;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='nums' AND type='table' ORDER BY rowid;
SQL-trace: ;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1_bi' AND type!='trigger' ORDER BY rowid;
SQL-trace: SELECT * FROM temp_table;
SQL-trace: ;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1_bi' AND type!='trigger' ORDER BY rowid;
SQL-trace: ;
PRAGMA journal_mode=DELETE;
SQL-trace: ;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='t2' AND type='index' ORDER BY rowid;
SQL-trace: ;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1_bi' AND type!='trigger' ORDER BY rowid;
SQL-trace: ;
CREATE UNIQUE INDEX y ON temp_table(t1_mirror2);
SQL-trace: SELECT name, rootpage, sql FROM "temp".sqlite_temp_master ORDER BY rowid;
SQL-trace: CREATE INDEX x1 ON a(b) ;
SQL-trace: CREATE VIRTUAL TABLE nums USING wholenumber;
SQL-trace: ;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='t1alen' AND type='index' ORDER BY rowid;
SQL-trace: ;
CREATE INDEX z ON a(b,b);
SQL-trace: ;
CREATE VIRTUAL TABLE temp.x2 USING dbstat ;
SQL-trace: ;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='i2' AND type='index' ORDER BY rowid;
SQL-trace: ;
CREATE INDEX t6 ON a(SUBSTR(b, 27, 3)) WHERE b>=29;
SQL-trace: CREATE TABLE t7(t8,t9);
SQL-trace: SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;
SQL-trace: ;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t7' AND type!='trigger' ORDER BY rowid;
SQL-trace: ;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t7' AND type!='trigger' ORDER BY rowid;
SQL-trace: ;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1_bi' AND type!='trigger' ORDER BY rowid;
SQL-trace: WITH RECURSIVE t1_ai(t6) AS (VALUES(1) UNION ALL SELECT t6+1 FROM t1_ai WHERE t6<250)
    INSERT INTO t1_bi(t1_ai,t1_ai) SELECT t6, randomblob(200) FROM t1_ai;
SQL-trace: PRAGMA page_size = 1024 ;
SQL-trace: PRAGMA automatic_index=OFF;
SQL-trace: VACUUM 
;
SQL-trace: ATTACH ':memory:' AS vacuum_db;
SQL-trace: PRAGMA vacuum_db.synchronous=OFF
SQL-trace: BEGIN;
SQL-trace: SELECT 'CREATE TABLE vacuum_db.' || substr(sql,14)   FROM sqlite_master WHERE type='table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0
SQL-trace: CREATE TABLE vacuum_db.autoinc(a INTEGER PRIMARY KEY AUTOINCREMENT, b)
SQL-trace: CREATE TABLE vacuum_db.a(b)
SQL-trace: CREATE TABLE vacuum_db.temp_table(
      t1_mirror INTEGER PRIMARY KEY,
      t TEXT COLLATE nocase,
      t1 TEXT COLLATE rtrim,
      t1_mirror2 TEXT COLLATE binary
    )
SQL-trace: CREATE TABLE vacuum_db.t1_bi(
      t1_ai TEXT DEFAULT CURRENT_TIMESTAMP, 
      t1_bu DEFAULT (5+3),
      t1_au TEXT,
      t1_bd INTEGER DEFAULT NULL,
      t1_ad TEXT DEFAULT '',
      UNIQUE(t1_bu,t1_au,t1_bd),
      PRIMARY KEY(t1_ad,t1_bu,t1_au)
    )
SQL-trace: CREATE TABLE vacuum_db.t7(t8,t9)
SQL-trace: SELECT 'CREATE INDEX vacuum_db.' || substr(sql,14)  FROM sqlite_master WHERE sql LIKE 'CREATE INDEX %' 
SQL-trace: CREATE INDEX vacuum_db.temp_store_directory_test ON a(b,b,b)
SQL-trace: CREATE INDEX vacuum_db.t2 ON a(b)
SQL-trace: CREATE INDEX vacuum_db.x ON a(b COLLATE rtrim)
SQL-trace: CREATE INDEX vacuum_db.x1 ON a(b) 
SQL-trace: CREATE INDEX vacuum_db.z ON a(b,b)
SQL-trace: CREATE INDEX vacuum_db.t6 ON a(SUBSTR(b, 27, 3)) WHERE b>=29
SQL-trace: SELECT 'CREATE UNIQUE INDEX vacuum_db.' || substr(sql,21)   FROM sqlite_master WHERE sql LIKE 'CREATE UNIQUE INDEX %'
SQL-trace: CREATE UNIQUE INDEX vacuum_db.y ON temp_table(t1_mirror2)
SQL-trace: SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';'FROM main.sqlite_master WHERE type = 'table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0
SQL-trace: INSERT INTO vacuum_db.'autoinc' SELECT * FROM main.'autoinc';
SQL-trace: INSERT INTO vacuum_db.'a' SELECT * FROM main.'a';

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f3a65699859 in __GI_abort () at abort.c:79
#2  0x00007f3a65699729 in __assert_fail_base (fmt=0x7f3a6582f588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x227729 "sqlite3_stricmp(sqlite3StrBINARY, zColl)!=0 || sqlite3StrBINARY==zColl", 
    file=0x222c23 "sqlite3.c", line=108020, function=<optimized out>) at assert.c:92
#3  0x00007f3a656aafd6 in __GI___assert_fail (assertion=0x227729 "sqlite3_stricmp(sqlite3StrBINARY, zColl)!=0 || sqlite3StrBINARY==zColl", file=0x222c23 "sqlite3.c", line=108020, 
    function=0x20a00b "int xferOptimization(Parse *, Table *, Select *, int, int)") at assert.c:101
#4  0x0000000000345560 in sqlite3Insert (pParse=<optimized out>, pTabList=<optimized out>, pSelect=<optimized out>, pColumn=0x0, onError=<optimized out>) at sqlite3.c:108019
#5  0x00000000003066b3 in yy_reduce (yypParser=0x23830d0, yyruleno=<optimized out>) at sqlite3.c:133484
#6  0x00000000002fef8e in sqlite3Parser (yyp=0x23830d0, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#7  0x00000000002fc544 in sqlite3RunParser (pParse=0x23362c0, zSql=0x2345380 "INSERT INTO vacuum_db.'temp_table' SELECT * FROM main.'temp_table';", pzErrMsg=0x7ffcd6b08e98) at sqlite3.c:135186
#8  0x00000000002facac in sqlite3Prepare (db=0x2333850, zSql=0x2345380 "INSERT INTO vacuum_db.'temp_table' SELECT * FROM main.'temp_table';", nBytes=<optimized out>, saveSqlFlag=0, pReprepare=<optimized out>, 
    ppStmt=0x7ffcd6b08f58, pzTail=0x0) at sqlite3.c:112596
#9  0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0x2333850, zSql=0x2345380 "INSERT INTO vacuum_db.'temp_table' SELECT * FROM main.'temp_table';", nBytes=-1, saveSqlFlag=0, pOld=0x0, ppStmt=<optimized out>, pzTail=0x0)
    at sqlite3.c:112688
#10 0x00000000003fb16b in execSql (db=0x2333850, pzErrMsg=0x234ad88, zSql=<optimized out>) at sqlite3.c:112752
#11 0x00000000003fb5ec in execExecSql (db=0x2333850, pzErrMsg=0x234ad88, zSql=<optimized out>) at sqlite3.c:120748
#12 0x00000000003de49e in sqlite3VdbeExec (p=<optimized out>) at sqlite3.c:120939
#13 0x000000000028b140 in sqlite3_step (pStmt=<optimized out>) at sqlite3.c:75131
#14 0x000000000024b5e9 in main (argc=1, argv=0x7ffcd6b096f8) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 13848] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
