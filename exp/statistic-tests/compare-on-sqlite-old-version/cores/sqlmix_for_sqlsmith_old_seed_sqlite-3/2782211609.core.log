GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000579,sig:06,src:011029+011062,time:36279543,execs:5450900,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL-trace: ;
PRAGMA sql_trace=on;
SQL-trace: ;
ANALYZE;
SQL-trace: SELECT tbl,idx,stat FROM 'main'.sqlite_stat1
SQL-trace: ;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;
SQL-trace: CREATE TABLE t1_bi(t1_ai INT, t1_bu INT, t1_au CHAR(100));
SQL-trace: PRAGMA writable_schema = 1;
SQL-trace: PRAGMA auto_vacuum = full;
SQL-trace: CREATE TRIGGER t1_bd AFTER UPDATE ON t1 BEGIN
      UPDATE t1 SET t1_mirror = t1_mirror+1;
    END;
SQL-trace: BEGIN;
SQL-trace: ;
INSERT INTO a(b,temp_store_directory_test) VALUES(3, 4);
SQL-trace: -- TRIGGER t
SQL-trace: ;
ALTER TABLE t1 ADD t1_ad CHECK (t1_bd>t1_ad);
SQL-trace: PRAGMA journal_mode = WAL ;
SQL-trace: ;
ANALYZE;
SQL-trace: SELECT tbl,idx,stat FROM 'main'.sqlite_stat1
SQL-trace: SELECT randomblob($pgsz);
SQL-trace: PRAGMA foreign_keys;

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fde00c3c859 in __GI_abort () at abort.c:79
#2  0x00007fde00c3c729 in __assert_fail_base (fmt=0x7fde00dd2588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x20d94f "op==TK_CASE", file=0x222c23 "sqlite3.c", line=92150, function=<optimized out>) at assert.c:92
#3  0x00007fde00c4dfd6 in __GI___assert_fail (assertion=0x20d94f "op==TK_CASE", file=0x222c23 "sqlite3.c", line=92150, function=0x21a1ea "int sqlite3ExprCodeTarget(Parse *, Expr *, int)") at assert.c:101
#4  0x000000000037b938 in sqlite3ExprCodeTarget (pParse=0x1ed7bb0, pExpr=0x1edb740, target=12) at sqlite3.c:92150
#5  0x000000000037228a in sqlite3ExprCodeTemp (pParse=0x1ed7bb0, pExpr=0x1edb740, pReg=0x7fff33c03914) at sqlite3.c:92302
#6  0x0000000000371435 in sqlite3ExprIfTrue (pParse=0x1ed7bb0, pExpr=0x1ed8820, dest=<optimized out>, jumpIfNull=16) at sqlite3.c:92559
#7  0x0000000000384b90 in sqlite3GenerateConstraintChecks (pParse=<optimized out>, pTab=0x1ed78b0, aRegIdx=<optimized out>, iDataCur=0, iIdxCur=1, regNewData=7, regOldData=3, pkChng=0 '\000', overrideError=10 '\n', 
    ignoreDest=11, pbMayReplace=0x7fff33c03c0c, aiChng=0x1ed4680) at sqlite3.c:107197
#8  0x000000000033c4b3 in sqlite3Update (pParse=<optimized out>, pTabList=<optimized out>, pChanges=<optimized out>, pWhere=<optimized out>, onError=<optimized out>) at sqlite3.c:120426
#9  0x00000000003afa86 in getRowTrigger (pParse=0x1ed5c10, pTrigger=0x1edb910, pTab=<optimized out>, orconf=<optimized out>) at sqlite3.c:119457
#10 0x000000000033bc42 in sqlite3Update (pParse=<optimized out>, pTabList=<optimized out>, pChanges=<optimized out>, pWhere=<optimized out>, onError=<optimized out>) at sqlite3.c:119838
#11 0x000000000030729a in yy_reduce (yypParser=0x1ee8b10, yyruleno=<optimized out>) at sqlite3.c:133465
#12 0x00000000002fef8e in sqlite3Parser (yyp=0x1ee8b10, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#13 0x00000000002fc544 in sqlite3RunParser (pParse=0x1ed5c10, 
    zSql=0x1eeb2b0 ";\nUPDATE t1 SET t1_ad='ABxyzzy', t1_ad='t1*C';;\nPRAGMA freelist_count;DROP table \"t1_bi\";ROLLBACK;SAVEPOINT _tcl_transaction;PRAGMA page_size = 1024;PRAGMA auto_vacuum = incremental;;;\nSELECT name, ro"..., pzErrMsg=0x7fff33c04168) at sqlite3.c:135186
#14 0x00000000002fac4e in sqlite3Prepare (db=0x1ec3b70, 
    zSql=0x1ec46a1 ";\nUPDATE t1 SET t1_ad='ABxyzzy', t1_ad='t1*C';;\nPRAGMA freelist_count;DROP table \"t1_bi\";ROLLBACK;SAVEPOINT _tcl_transaction;PRAGMA page_size = 1024;PRAGMA auto_vacuum = incremental;;;\nSELECT name, ro"..., nBytes=<optimized out>, saveSqlFlag=1, pReprepare=<optimized out>, ppStmt=0x7fff33c04298, pzTail=0x7fff33c04280) at sqlite3.c:112589
#15 0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0x1ec3b70, 
    zSql=0x1ec46a1 ";\nUPDATE t1 SET t1_ad='ABxyzzy', t1_ad='t1*C';;\nPRAGMA freelist_count;DROP table \"t1_bi\";ROLLBACK;SAVEPOINT _tcl_transaction;PRAGMA page_size = 1024;PRAGMA auto_vacuum = incremental;;;\nSELECT name, ro"..., nBytes=1862, saveSqlFlag=1, pOld=0x0, ppStmt=<optimized out>, pzTail=0x7fff33c04280) at sqlite3.c:112688
#16 0x000000000028f38c in sqlite3_prepare_v2 (db=0x2, zSql=0x7fff33c03480 "", nBytes=0, ppStmt=0x7fff33c04298, pzTail=<optimized out>) at sqlite3.c:112764
#17 0x000000000024b100 in main (argc=1, argv=0x7fff33c04448) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 17043] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
