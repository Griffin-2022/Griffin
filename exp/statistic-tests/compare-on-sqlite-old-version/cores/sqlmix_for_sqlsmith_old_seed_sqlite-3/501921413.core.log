GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000370,sig:06,src:010000+005876,time:23473950,execs:3511245,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [CREATE TABLE a(b,temp_store_directory_test);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    0 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:1
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:1
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:1
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 a             00 r[7]='a'
REG[7] =   t1[a](8)
  21 String8          0    8    0 a             00 r[8]='a'
REG[8] =   t1[a](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  23 String8          0   10    0 CREATE TABLE a(b,temp_store_directory_test) 00 r[10]='CREATE TABLE a(b,temp_store_directory_test)'
REG[10] =   t43[CREATE TABLE a(](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s57[06170F0F01637461626C656161024352.....ctableaa.CR](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s57[06170F0F01637461626C656161024352.....ctableaa.CR](8)
REG[5] =  i:1
  26 Close            1    0    0               00 
  27 SetCookie        0    1    1               00 
  28 ParseSchema      0    0    0 tbl_name='a' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    1 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[a](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s43[CREATE TABLE a(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[a](8)
REG[6] =  i:2
REG[7] =   s43[CREATE TABLE a(](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [INSERT INTO a VALUES(0, 0);]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    1    1 0             01 usesStmtJournal=0
  10 TableLock        0    2    1 a             00 iDb=0 root=2 write=1
  11 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; a
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   4 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
   5 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s3[030808...](8)
   6 Insert           0    4    1 a             1B intkey=r[1] data=r[4]
REG[4] =  s3[030808...](8)
REG[1] =  i:1
   7 Noop             0    0    0               00 
   8 Halt             0    0    0               00 
SQL: [PRAGMA writable_schema = 1;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [PRAGMA auto_vacuum = 0;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [INSERT INTO a(b, b, b, b) VALUES(1, 2, 3, 4);]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    1    1 0             01 usesStmtJournal=0
   9 TableLock        0    2    1 a             00 iDb=0 root=2 write=1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; a
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s3[030900...](8)
   5 Insert           0    4    1 a             1B intkey=r[1] data=r[4]
REG[4] =  s3[030900...](8)
REG[1] =  i:2
   6 Noop             0    0    0               00 
   7 Halt             0    0    0               00 
SQL: [;
SELECT b<>b FROM a;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    1 0             01 usesStmtJournal=0
  11 TableLock        0    2    0 a             00 iDb=0 root=2 write=0
  12 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; a
   2 Explain          0    0    0 SCAN TABLE a  00 
   3 Rewind           0    8    0               00 
   4 Column           0    0    2               00 r[2]=a.b
REG[2] =  i:0
   5 Ne               2    1    2 (BINARY)      61 if r[2]!=r[2] goto 1
REG[2] =  i:0
REG[2] =  i:0
REG[1] =  i:0
   6 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   7 Next             0    4    0               01 
   4 Column           0    0    2               00 r[2]=a.b
REG[2] =  i:1
   5 Ne               2    1    2 (BINARY)      61 if r[2]!=r[2] goto 1
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   6 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   7 Next             0    4    0               01 
   8 Close            0    0    0               00 
   9 Halt             0    0    0               00 
SQL: [CREATE TRIGGER temp_table AFTER UPDATE ON a BEGIN
      UPDATE a SET temp_store_directory_test = temp_store_directory_test+1;
    END;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    1    1 0             01 usesStmtJournal=0
  15 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  16 Goto             0    1    0               00 
   1 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   3 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   4 String8          0    3    0 temp_table    00 r[3]='temp_table'
REG[3] =   t10[temp_table](8)
   5 String8          0    4    0 a             00 r[4]='a'
REG[4] =   t1[a](8)
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 String8          0    6    0 CREATE TRIGGER temp_table AFTER UPDATE ON a BEGIN
      UPDATE a SET temp_store_directory_test = temp_store_directory_test+1;
    END 00 r[6]='CREATE TRIGGER temp_table AFTER UPDATE ON a BEGIN
      UPDATE a SET temp_store_directory_tes
REG[6] =   t133[CREATE TRIGGER ](8)
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
REG[7] =  s158[071B210F088217747269676765727465..!....triggerte](8)
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
REG[7] =  s158[071B210F088217747269676765727465..!....triggerte](8)
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 SetCookie        0    1    2               00 
  12 ParseSchema      0    0    0 type='trigger' AND name='temp_table' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  19 String8          0    4    0 temp_table    00 r[4]='temp_table'
REG[4] =   t10[temp_table](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s10[temp_table](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t10[temp_table](8)
REG[3] =   s10[temp_table](8)
   9 Copy             3    5    0               00 r[5]=r[3]
REG[5] =   s10[temp_table](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:0
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s133[CREATE TRIGGER ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s10[temp_table](8)
REG[6] =  i:0
REG[7] =   s133[CREATE TRIGGER ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [;
PRAGMA main.page_count;]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 Transaction      0    0    2 0             01 usesStmtJournal=0
   5 Goto             0    1    0               00 
   1 Pagecount        0    3    0               00 
REG[3] =  i:2
   2 ResultRow        3    1    0               00 output=r[3]
REG[3] =  i:2
   3 Halt             0    0    0               00 
SQL: [;
PRAGMA journal_mode = WAL;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 JournalMode      0    1    5               00 
REG[1] =   t6[memory](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t6[memory](8)
   3 Halt             0    0    0               00 
SQL: [;
SAVEPOINT sp1 ;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp1           00 
   2 Halt             0    0    0               00 
SQL: [;
CREATE TABLE t(t1 UNIQUE);]
VDBE Trace:
   0 Init             0   42    0               00 Start at 42
  42 Transaction      0    1    2 0             01 usesStmtJournal=0
  43 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  44 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Noop             0   23    0               00 
  12 CreateIndex      0    4    0               00 r[4]=root iDb=0
REG[4] =  i:4
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:4
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_t_1 00 r[7]='sqlite_autoindex_t_1'
REG[7] =   t20[sqlite_autoinde](8)
  17 String8          0    8    0 t             00 r[8]='t'
REG[8] =   t1[t](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:4
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s33[0617350F0100696E64657873716C6974..5...indexsqlit](8)
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  s33[0617350F0100696E64657873716C6974..5...indexsqlit](8)
REG[5] =  i:4
  22 Close            1    0    0               00 
  23 Close            0    0    0               00 
  24 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  25 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  26 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  27 MustBeInt        1   30    0               00 
REG[1] =  i:3
  28 NotExists        2   30    1               00 intkey=r[1]; pk
REG[1] =  i:3
  29 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:3
  30 IsNull          13   38    0               00 if r[13]==NULL goto 38
REG[13] =  i:3
  31 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  32 String8          0   15    0 t             00 r[15]='t'
REG[15] =   t1[t](8)
  33 String8          0   16    0 t             00 r[16]='t'
REG[16] =   t1[t](8)
  34 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:3
  35 String8          0   18    0 CREATE TABLE t(t1 UNIQUE) 00 r[18]='CREATE TABLE t(t1 UNIQUE)'
REG[18] =   t25[CREATE TABLE t(](8)
  36 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s39[06170F0F013F7461626C657474034352.....?tablett.CR](8)
  37 Insert           2   19   13               00 intkey=r[13] data=r[19]
REG[19] =  s39[06170F0F013F7461626C657474034352.....?tablett.CR](8)
REG[13] =  i:3
  38 Close            2    0    0               00 
  39 SetCookie        0    1    3               00 
  40 ParseSchema      0    0    0 tbl_name='t' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t             00 r[2]='t'
REG[2] =   t1[t](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[t](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[t](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[t](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[t](8)
REG[1] =   s1[t](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[t](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s25[CREATE TABLE t(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[t](8)
REG[6] =  i:3
REG[7] =   s25[CREATE TABLE t(](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[t](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[t](8)
REG[1] =   s1[t](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s20[sqlite_autoinde](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =  NULL
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s20[sqlite_autoinde](8)
REG[6] =  i:4
REG[7] =  NULL
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  41 Halt             0    0    0               00 
SQL: [;
SELECT 1, name FROM sqlite_master WHERE type='table';]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    3 0             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  15 Goto             0    1    0               00 
   1 OpenRead         0    1    0 2             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   10    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2    9    1 (BINARY)      52 if r[2]!=r[1] goto 9
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   7 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[a](8)
   8 ResultRow        3    2    0               00 output=r[3..4]
REG[3] =  i:1
REG[4] =   s1[a](8)
   9 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   5 Ne               2    9    1 (BINARY)      52 if r[2]!=r[1] goto 9
REG[2] =   t5[table](8)
REG[1] =   s7[trigger](8)
   9 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2    9    1 (BINARY)      52 if r[2]!=r[1] goto 9
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   7 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[t](8)
   8 ResultRow        3    2    0               00 output=r[3..4]
REG[3] =  i:1
REG[4] =   s1[t](8)
   9 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2    9    1 (BINARY)      52 if r[2]!=r[1] goto 9
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
   9 Next             0    4    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
ALTER TABLE t ADD t1_mirror CHECK (temp_table>t1_mirror);]
VDBE Trace:
   0 Init             0   36    0               00 Start at 36
  36 Transaction      0    1    3 0             01 usesStmtJournal=0
  37 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  38 String8          0    9    0 table         00 r[9]='table'
REG[9] =   t5[table](8)
  39 String8          0   11    0 t             00 r[11]='t'
REG[11] =   t1[t](8)
  40 Integer          1   14    0               00 r[14]=1
REG[14] =  i:1
  41 Integer         24   15    0               00 r[15]=24
REG[15] =  i:24
  42 String8          0   16    0 ,             00 r[16]=', '
REG[16] =   t2[, ](8)
  43 String8          0   17    0 t1_mirror CHECK (temp_table>t1_mirror) 00 r[17]='t1_mirror CHECK (temp_table>t1_mirror)'
REG[17] =   t38[t1_mirror CHECK](8)
  44 Integer         25   19    0               00 r[19]=25
REG[19] =  i:25
  45 Goto             0    1    0               00 
   1 SetCookie        0    1    4               00 
   2 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   3 OpenRead         0    1    0 2             00 root=1 iDb=0; sqlite_master
   4 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   5 Rewind           0   13    0               00 
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   7 Ne               9   12    8 (BINARY)      52 if r[9]!=r[8] goto 12
REG[9] =   t5[table](8)
REG[8] =   s5[table](8)
   8 Column           0    1   10               00 r[10]=sqlite_master.name
REG[10] =   s1[a](8)
   9 Ne              11   12   10 (BINARY)      52 if r[11]!=r[10] goto 12
REG[11] =   t1[t](8)
REG[10] =   s1[a](8)
  12 Next             0    6    0               01 
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s7[trigger](8)
   7 Ne               9   12    8 (BINARY)      52 if r[9]!=r[8] goto 12
REG[9] =   t5[table](8)
REG[8] =   s7[trigger](8)
  12 Next             0    6    0               01 
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   7 Ne               9   12    8 (BINARY)      52 if r[9]!=r[8] goto 12
REG[9] =   t5[table](8)
REG[8] =   s5[table](8)
   8 Column           0    1   10               00 r[10]=sqlite_master.name
REG[10] =   s1[t](8)
   9 Ne              11   12   10 (BINARY)      52 if r[11]!=r[10] goto 12
REG[11] =   t1[t](8)
REG[10] =   s1[t](8)
  10 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:3
  11 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:3
  12 Next             0    6    0               01 
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   7 Ne               9   12    8 (BINARY)      52 if r[9]!=r[8] goto 12
REG[9] =   t5[table](8)
REG[8] =   s5[index](8)
  12 Next             0    6    0               01 
  13 Close            0    0    0               00 
  14 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
  15 RowSetRead       1   31    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:3
  16 NotExists        0   15    2               00 intkey=r[2]
REG[2] =  i:3
  17 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
  18 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[t](8)
  19 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
REG[5] =   s1[t](8)
  20 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  21 Column           0    4   13               00 r[13]=sqlite_master.sql
REG[13] =   s25[CREATE TABLE t(](8)
  22 Function0        6   13   12 substr(3)     03 r[12]=func(r[13..15])
REG[13] =   s25[CREATE TABLE t(](8)
REG[14] =  i:1
REG[15] =  i:24
REG[12] =   s24[CREATE TABLE t(](8)
  23 Concat          16   12    8               00 r[8]=r[12]+r[16]
REG[16] =   t2[, ](8)
REG[12] =   s24[CREATE TABLE t(](8)
REG[8] =   s26[CREATE TABLE t(](8)
  24 Concat          17    8   10               00 r[10]=r[8]+r[17]
REG[17] =   t38[t1_mirror CHECK](8)
REG[8] =   s26[CREATE TABLE t(](8)
REG[10] =   s64[CREATE TABLE t(](8)
  25 Column           0    4   18               00 r[18]=sqlite_master.sql
REG[18] =   s25[CREATE TABLE t(](8)
  26 Function0        2   18    8 substr(2)     02 r[8]=func(r[18..19])
REG[18] =   s25[CREATE TABLE t(](8)
REG[19] =  i:25
REG[8] =   s1[)](8)
  27 Concat           8   10    7               00 r[7]=r[10]+r[8]
REG[8] =   s1[)](8)
REG[10] =   s64[CREATE TABLE t(](8)
REG[7] =   s65[CREATE TABLE t(](8)
  28 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s80[07170F0F01810F7461626C6574740343.......tablett.C](8)
  29 Insert           0    8    2               00 intkey=r[2] data=r[8]
REG[8] =  s80[07170F0F01810F7461626C6574740343.......tablett.C](8)
REG[2] =  i:3
  30 Goto             0   15    0               00 
  15 RowSetRead       1   31    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:3
  31 Close            0    0    0               00 
  32 SetCookie        0    2    4               00 
  33 DropTable        0    0    0 t             00 
  34 ParseSchema      0    0    0 tbl_name='t'  00 
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    4 0             00 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 t             00 r[2]='t'
REG[2] =   t1[t](8)
  17 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t1[t](8)
REG[1] =   s1[a](8)
  11 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t1[t](8)
REG[1] =   s1[a](8)
  11 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[t](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t1[t](8)
REG[1] =   s1[t](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s1[t](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:3
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s65[CREATE TABLE t(](8)
  10 ResultRow        3    3    0               00 output=r[3..5]
REG[3] =   s1[t](8)
REG[4] =  i:3
REG[5] =   s65[CREATE TABLE t(](8)
  11 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[t](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t1[t](8)
REG[1] =   s1[t](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s20[sqlite_autoinde](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:4
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =  NULL
  10 ResultRow        3    3    0               00 output=r[3..5]
REG[3] =   s20[sqlite_autoinde](8)
REG[4] =  i:4
REG[5] =  NULL
  11 Next             0    5    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    4 1             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s43[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:2
REG[3] =   s43[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s10[temp_table](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s133[CREATE TRIGGER ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s10[temp_table](8)
REG[2] =  i:0
REG[3] =   s133[CREATE TRIGGER ](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[t](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s65[CREATE TABLE t(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[t](8)
REG[2] =  i:3
REG[3] =   s65[CREATE TABLE t(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s20[sqlite_autoinde](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s20[sqlite_autoinde](8)
REG[2] =  i:4
REG[3] =  NULL
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
SELECT count(*), sum(temp_store_directory_test), sum(temp_store_directory_test) FROM a;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 1             01 usesStmtJournal=0
  17 TableLock        0    2    0 a             00 iDb=0 root=2 write=0
  18 Goto             0    1    0               00 
   1 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; a
   3 Explain          0    0    0 SCAN TABLE a  00 
   4 Rewind           0    9    0               00 
   5 AggStep0         0    0    1 count(0)      00 accum=r[1] step(r[0])
   6 Column           0    1    4               00 r[4]=a.temp_store_directory_test
REG[4] =  i:0
   7 AggStep0         0    4    2 sum(1)        01 accum=r[2] step(r[4])
REG[4] =  i:0
   8 Next             0    5    0               01 
   5 AggStep          0    0    1 count(0)      00 accum=r[1] step(r[0])
   6 Column           0    1    4               00 r[4]=a.temp_store_directory_test
REG[4] =  NULL
   7 AggStep          0    4    2 sum(1)        01 accum=r[2] step(r[4])
REG[4] =  NULL
   8 Next             0    5    0               01 
   9 Close            0    0    0               00 
  10 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  11 AggFinal         2    1    0 sum(1)        00 accum=r[2] N=1
  12 Copy             1    5    1               00 r[5..6]=r[1..2]
REG[5] =  i:2
REG[6] =  i:0
  13 Copy             2    7    0               00 r[7]=r[2]
REG[7] =  i:0
  14 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =  i:2
REG[6] =  i:0
REG[7] =  i:0
  15 Halt             0    0    0               00 
SQL: [;
SELECT coalesce(temp_store_directory_test>=temp_store_directory_test,99) FROM a;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    4 1             01 usesStmtJournal=0
  13 TableLock        0    2    0 a             00 iDb=0 root=2 write=0
  14 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; a
   2 Explain          0    0    0 SCAN TABLE a  00 
   3 Rewind           0   10    0               00 
   4 Column           0    1    2               00 r[2]=a.temp_store_directory_test
REG[2] =  i:0
   5 Ge               2    1    2 (BINARY)      61 if r[2]>=r[2] goto 1
REG[2] =  i:0
REG[2] =  i:0
REG[1] =  i:1
   6 NotNull          1    8    0               00 if r[1]!=NULL goto 8
REG[1] =  i:1
   8 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   9 Next             0    4    0               01 
   4 Column           0    1    2               00 r[2]=a.temp_store_directory_test
REG[2] =  NULL
   5 Ge               2    1    2 (BINARY)      61 if r[2]>=r[2] goto 1
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   6 NotNull          1    8    0               00 if r[1]!=NULL goto 8
REG[1] =  NULL
   7 Integer         99    1    0               00 r[1]=99
REG[1] =  i:99
   8 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:99
   9 Next             0    4    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [DELETE FROM t;]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 Transaction      0    1    4 1             01 usesStmtJournal=0
   5 TableLock        0    3    1 t             00 iDb=0 root=3 write=1
   6 Goto             0    1    0               00 
   1 Clear            3    0   -1 t             00 
   2 Clear            4    0    0               00 
   3 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t             00 r[2]='t'
REG[2] =   t1[t](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[t](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[t](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[t](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[t](8)
REG[1] =   s1[t](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[t](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s65[CREATE TABLE t(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[t](8)
REG[6] =  i:3
REG[7] =   s65[CREATE TABLE t(](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[t](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[t](8)
REG[1] =   s1[t](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s20[sqlite_autoinde](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =  NULL
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s20[sqlite_autoinde](8)
REG[6] =  i:4
REG[7] =  NULL
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [CREATE TABLE t1_mirror2(t1_bi INTEGER PRIMARY KEY, t1_ai BLOB);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    4 1             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:5
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:5
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:5
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:5
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:5
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t1_mirror2    00 r[7]='t1_mirror2'
REG[7] =   t10[t1_mirror2](8)
  21 String8          0    8    0 t1_mirror2    00 r[8]='t1_mirror2'
REG[8] =   t10[t1_mirror2](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  23 String8          0   10    0 CREATE TABLE t1_mirror2(t1_bi INTEGER PRIMARY KEY, t1_ai BLOB) 00 r[10]='CREATE TABLE t1_mirror2(t1_bi INTEGER PRIMARY KEY, t1_ai BLOB)'
REG[10] =   t62[CREATE TABLE t1](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s95[071721210181097461626C6574315F6D..!!...tablet1_m](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s95[071721210181097461626C6574315F6D..!!...tablet1_m](8)
REG[5] =  i:5
  26 Close            1    0    0               00 
  27 SetCookie        0    1    5               00 
  28 ParseSchema      0    0    0 tbl_name='t1_mirror2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    5 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1_mirror2    00 r[2]='t1_mirror2'
REG[2] =   t10[t1_mirror2](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t10[t1_mirror2](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t10[t1_mirror2](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[t](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t10[t1_mirror2](8)
REG[1] =   s1[t](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[t](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t10[t1_mirror2](8)
REG[1] =   s1[t](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s10[t1_mirror2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t10[t1_mirror2](8)
REG[1] =   s10[t1_mirror2](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s10[t1_mirror2](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s62[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s10[t1_mirror2](8)
REG[6] =  i:5
REG[7] =   s62[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;
INSERT INTO a VALUES(5, zeroblob(10240));]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    1    5 1             01 usesStmtJournal=0
  10 TableLock        0    2    1 a             00 iDb=0 root=2 write=1
  11 Integer       10240    4    0               00 r[4]=10240
REG[4] =  i:10240
  12 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; a
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   3 Integer          5    2    0               00 r[2]=5
REG[2] =  i:5
   4 Function0        1    4    3 zeroblob(1)   01 r[3]=func(r[4])
REG[4] =  i:10240
REG[3] =  s0[](8)+10240z
   5 MakeRecord       2    2    5               00 r[5]=mkrec(r[2..3])
REG[5] =  s6[050181A00C05......](8)+10240z
   6 Insert           0    5    1 a             1B intkey=r[1] data=r[5]
REG[5] =  s6[050181A00C05......](8)+10240z
REG[1] =  i:3
   7 Noop             0    0    0               00 
   8 Halt             0    0    0               00 
SQL: [;
UPDATE a SET b=6, b=6;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    1    5 1             01 usesStmtJournal=0
  24 TableLock        0    2    1 a             00 iDb=0 root=2 write=1
  25 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; a
   3 Explain          0    0    0 SCAN TABLE a  00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:2
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:3
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:3
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 OpenWrite        0    2    0 2             00 root=2 iDb=0; a
  10 RowSetRead       1   21    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:1
  12 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  13 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  14 Copy             2    5    0               00 r[5]=r[2]
REG[5] =  i:1
  15 Integer          6    6    0               00 r[6]=6
REG[6] =  i:6
  16 Column           0    1    7               00 r[7]=a.temp_store_directory_test
REG[7] =  i:0
  17 MakeRecord       6    2    8               00 r[8]=mkrec(r[6..7])
REG[8] =  s4[03010806....](8)
  18 Insert           0    8    5 a             05 intkey=r[5] data=r[8]
REG[8] =  s4[03010806....](8)
REG[5] =  i:1
  19 Program          2   10    9 program       01 Call: temp_table.default
   0 Init             0    0    0 -- TRIGGER temp_table 00 Start at 0; Start: temp_table.default (AFTER UPDATE ON a)
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; a
   3 Explain          0    0    0 SCAN TABLE a  00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:2
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:3
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:3
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 OpenWrite        0    2    0 2             00 root=2 iDb=0; a
  10 RowSetRead       1   23    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:1
  12 Column           0    0    3               00 r[3]=a.b
REG[3] =  i:6
  13 Column           0    1    4               00 r[4]=a.temp_store_directory_test
REG[4] =  i:0
  14 Copy             2    5    0               00 r[5]=r[2]
REG[5] =  i:1
  15 Column           0    0    6               00 r[6]=a.b
REG[6] =  i:6
  16 Column           0    1    8               00 r[8]=a.temp_store_directory_test
REG[8] =  i:0
  17 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  18 Add              9    8    7               00 r[7]=r[9]+r[8]
REG[9] =  i:1
REG[8] =  i:0
REG[7] =  i:1
  19 MakeRecord       6    2    9               00 r[9]=mkrec(r[6..7])
REG[9] =  s4[03010906....](8)
  20 Insert           0    9    5 a             05 intkey=r[5] data=r[9]
REG[9] =  s4[03010906....](8)
REG[5] =  i:1
  21 Program          2   10   10 program       01 Call: temp_table.default
  22 Goto             0   10    0               00 
  10 RowSetRead       1   23    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:2
  12 Column           0    0    3               00 r[3]=a.b
REG[3] =  i:1
  13 Column           0    1    4               00 r[4]=a.temp_store_directory_test
REG[4] =  NULL
  14 Copy             2    5    0               00 r[5]=r[2]
REG[5] =  i:2
  15 Column           0    0    6               00 r[6]=a.b
REG[6] =  i:1
  16 Column           0    1    8               00 r[8]=a.temp_store_directory_test
REG[8] =  NULL
  17 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  18 Add              9    8    7               00 r[7]=r[9]+r[8]
REG[9] =  i:1
REG[8] =  NULL
REG[7] =  NULL
  19 MakeRecord       6    2    9               00 r[9]=mkrec(r[6..7])
REG[9] =  s3[030900...](8)
  20 Insert           0    9    5 a             05 intkey=r[5] data=r[9]
REG[9] =  s3[030900...](8)
REG[5] =  i:2
  21 Program          2   10   10 program       01 Call: temp_table.default
  22 Goto             0   10    0               00 
  10 RowSetRead       1   23    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:3
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:3
  12 Column           0    0    3               00 r[3]=a.b
REG[3] =  i:5
  13 Column           0    1    4               00 r[4]=a.temp_store_directory_test
REG[4] =  s10240[00000000000000000000000000000000................](8)
  14 Copy             2    5    0               00 r[5]=r[2]
REG[5] =  i:3
  15 Column           0    0    6               00 r[6]=a.b
REG[6] =  i:5
  16 Column           0    1    8               00 r[8]=a.temp_store_directory_test
REG[8] =  s10240[00000000000000000000000000000000................](8)
  17 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  18 Add              9    8    7               00 r[7]=r[9]+r[8]
REG[9] =  i:1
REG[8] =  s10240[00000000000000000000000000000000................](8)
REG[7] =  i:1
  19 MakeRecord       6    2    9               00 r[9]=mkrec(r[6..7])
REG[9] =  s4[03010905....](8)
  20 Insert           0    9    5 a             05 intkey=r[5] data=r[9]
REG[9] =  s4[03010905....](8)
REG[5] =  i:3
  21 Program          2   10   10 program       01 Call: temp_table.default
  22 Goto             0   10    0               00 
  10 RowSetRead       1   23    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:3
  23 Close            0    0    0               00 
  24 ResetCount       0    0    0               00 
  25 Halt             0    0    0               00 End: temp_table.default
  20 Goto             0   10    0               00 
  10 RowSetRead       1   21    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:2
  12 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  13 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  14 Copy             2    5    0               00 r[5]=r[2]
REG[5] =  i:2
  15 Integer          6    6    0               00 r[6]=6
REG[6] =  i:6
  16 Column           0    1    7               00 r[7]=a.temp_store_directory_test
REG[7] =  NULL
  17 MakeRecord       6    2    8               00 r[8]=mkrec(r[6..7])
REG[8] =  s4[03010006....](8)
  18 Insert           0    8    5 a             05 intkey=r[5] data=r[8]
REG[8] =  s4[03010006....](8)
REG[5] =  i:2
  19 Program          2   10    9 program       01 Call: temp_table.default
   0 Init             0    0    0 -- TRIGGER temp_table 00 Start at 0; Start: temp_table.default (AFTER UPDATE ON a)
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; a
   3 Explain          0    0    0 SCAN TABLE a  00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:2
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:3
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:3
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 OpenWrite        0    2    0 2             00 root=2 iDb=0; a
  10 RowSetRead       1   23    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:1
  12 Column           0    0    3               00 r[3]=a.b
REG[3] =  i:6
  13 Column           0    1    4               00 r[4]=a.temp_store_directory_test
REG[4] =  i:1
  14 Copy             2    5    0               00 r[5]=r[2]
REG[5] =  i:1
  15 Column           0    0    6               00 r[6]=a.b
REG[6] =  i:6
  16 Column           0    1    8               00 r[8]=a.temp_store_directory_test
REG[8] =  i:1
  17 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  18 Add              9    8    7               00 r[7]=r[9]+r[8]
REG[9] =  i:1
REG[8] =  i:1
REG[7] =  i:2
  19 MakeRecord       6    2    9               00 r[9]=mkrec(r[6..7])
REG[9] =  s5[0301010602.....](8)
  20 Insert           0    9    5 a             05 intkey=r[5] data=r[9]
REG[9] =  s5[0301010602.....](8)
REG[5] =  i:1
  21 Program          2   10   10 program       01 Call: temp_table.default
  22 Goto             0   10    0               00 
  10 RowSetRead       1   23    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:2
  12 Column           0    0    3               00 r[3]=a.b
REG[3] =  i:6
  13 Column           0    1    4               00 r[4]=a.temp_store_directory_test
REG[4] =  NULL
  14 Copy             2    5    0               00 r[5]=r[2]
REG[5] =  i:2
  15 Column           0    0    6               00 r[6]=a.b
REG[6] =  i:6
  16 Column           0    1    8               00 r[8]=a.temp_store_directory_test
REG[8] =  NULL
  17 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  18 Add              9    8    7               00 r[7]=r[9]+r[8]
REG[9] =  i:1
REG[8] =  NULL
REG[7] =  NULL
  19 MakeRecord       6    2    9               00 r[9]=mkrec(r[6..7])
REG[9] =  s4[03010006....](8)
  20 Insert           0    9    5 a             05 intkey=r[5] data=r[9]
REG[9] =  s4[03010006....](8)
REG[5] =  i:2
  21 Program          2   10   10 program       01 Call: temp_table.default
  22 Goto             0   10    0               00 
  10 RowSetRead       1   23    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:3
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:3
  12 Column           0    0    3               00 r[3]=a.b
REG[3] =  i:5
  13 Column           0    1    4               00 r[4]=a.temp_store_directory_test
REG[4] =  i:1
  14 Copy             2    5    0               00 r[5]=r[2]
REG[5] =  i:3
  15 Column           0    0    6               00 r[6]=a.b
REG[6] =  i:5
  16 Column           0    1    8               00 r[8]=a.temp_store_directory_test
REG[8] =  i:1
  17 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  18 Add              9    8    7               00 r[7]=r[9]+r[8]
REG[9] =  i:1
REG[8] =  i:1
REG[7] =  i:2
  19 MakeRecord       6    2    9               00 r[9]=mkrec(r[6..7])
REG[9] =  s5[0301010502.....](8)
  20 Insert           0    9    5 a             05 intkey=r[5] data=r[9]
REG[9] =  s5[0301010502.....](8)
REG[5] =  i:3
  21 Program          2   10   10 program       01 Call: temp_table.default
  22 Goto             0   10    0               00 
  10 RowSetRead       1   23    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:3
  23 Close            0    0    0               00 
  24 ResetCount       0    0    0               00 
  25 Halt             0    0    0               00 End: temp_table.default
  20 Goto             0   10    0               00 
  10 RowSetRead       1   21    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:3
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:3
  12 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  13 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  14 Copy             2    5    0               00 r[5]=r[2]
REG[5] =  i:3
  15 Integer          6    6    0               00 r[6]=6
REG[6] =  i:6
  16 Column           0    1    7               00 r[7]=a.temp_store_directory_test
REG[7] =  i:2
  17 MakeRecord       6    2    8               00 r[8]=mkrec(r[6..7])
REG[8] =  s5[0301010602.....](8)
  18 Insert           0    8    5 a             05 intkey=r[5] data=r[8]
REG[8] =  s5[0301010602.....](8)
REG[5] =  i:3
  19 Program          2   10    9 program       01 Call: temp_table.default
   0 Init             0    0    0 -- TRIGGER temp_table 00 Start at 0; Start: temp_table.default (AFTER UPDATE ON a)
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; a
   3 Explain          0    0    0 SCAN TABLE a  00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:2
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:3
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:3
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 OpenWrite        0    2    0 2             00 root=2 iDb=0; a
  10 RowSetRead       1   23    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:1
  12 Column           0    0    3               00 r[3]=a.b
REG[3] =  i:6
  13 Column           0    1    4               00 r[4]=a.temp_store_directory_test
REG[4] =  i:2
  14 Copy             2    5    0               00 r[5]=r[2]
REG[5] =  i:1
  15 Column           0    0    6               00 r[6]=a.b
REG[6] =  i:6
  16 Column           0    1    8               00 r[8]=a.temp_store_directory_test
REG[8] =  i:2
  17 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  18 Add              9    8    7               00 r[7]=r[9]+r[8]
REG[9] =  i:1
REG[8] =  i:2
REG[7] =  i:3
  19 MakeRecord       6    2    9               00 r[9]=mkrec(r[6..7])
REG[9] =  s5[0301010603.....](8)
  20 Insert           0    9    5 a             05 intkey=r[5] data=r[9]
REG[9] =  s5[0301010603.....](8)
REG[5] =  i:1
  21 Program          2   10   10 program       01 Call: temp_table.default
  22 Goto             0   10    0               00 
  10 RowSetRead       1   23    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:2
  12 Column           0    0    3               00 r[3]=a.b
REG[3] =  i:6
  13 Column           0    1    4               00 r[4]=a.temp_store_directory_test
REG[4] =  NULL
  14 Copy             2    5    0               00 r[5]=r[2]
REG[5] =  i:2
  15 Column           0    0    6               00 r[6]=a.b
REG[6] =  i:6
  16 Column           0    1    8               00 r[8]=a.temp_store_directory_test
REG[8] =  NULL
  17 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  18 Add              9    8    7               00 r[7]=r[9]+r[8]
REG[9] =  i:1
REG[8] =  NULL
REG[7] =  NULL
  19 MakeRecord       6    2    9               00 r[9]=mkrec(r[6..7])
REG[9] =  s4[03010006....](8)
  20 Insert           0    9    5 a             05 intkey=r[5] data=r[9]
REG[9] =  s4[03010006....](8)
REG[5] =  i:2
  21 Program          2   10   10 program       01 Call: temp_table.default
  22 Goto             0   10    0               00 
  10 RowSetRead       1   23    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:3
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:3
  12 Column           0    0    3               00 r[3]=a.b
REG[3] =  i:6
  13 Column           0    1    4               00 r[4]=a.temp_store_directory_test
REG[4] =  i:2
  14 Copy             2    5    0               00 r[5]=r[2]
REG[5] =  i:3
  15 Column           0    0    6               00 r[6]=a.b
REG[6] =  i:6
  16 Column           0    1    8               00 r[8]=a.temp_store_directory_test
REG[8] =  i:2
  17 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  18 Add              9    8    7               00 r[7]=r[9]+r[8]
REG[9] =  i:1
REG[8] =  i:2
REG[7] =  i:3
  19 MakeRecord       6    2    9               00 r[9]=mkrec(r[6..7])
REG[9] =  s5[0301010603.....](8)
  20 Insert           0    9    5 a             05 intkey=r[5] data=r[9]
REG[9] =  s5[0301010603.....](8)
REG[5] =  i:3
  21 Program          2   10   10 program       01 Call: temp_table.default
  22 Goto             0   10    0               00 
  10 RowSetRead       1   23    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:3
  23 Close            0    0    0               00 
  24 ResetCount       0    0    0               00 
  25 Halt             0    0    0               00 End: temp_table.default
  20 Goto             0   10    0               00 
  10 RowSetRead       1   21    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:3
  21 Noop             0    0    0               00 
  22 Halt             0    0    0               00 
SQL: [INSERT INTO a VALUES(0,1),(2,2);]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    1    5 1             01 usesStmtJournal=0
  18 TableLock        0    2    1 a             00 iDb=0 root=2 write=1
  19 Goto             0    1    0               00 
   1 InitCoroutine    4    9    2               00 
   9 OpenWrite        0    2    0 2             00 root=2 iDb=0; a
  10 Yield            4   15    0               00 
REG[4] =  i:1
REG[4] =  i:10
   2 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   3 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   4 Yield            4    0    0               00 
REG[4] =  i:10
REG[4] =  i:4
  11 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
  12 MakeRecord       2    2    5               00 r[5]=mkrec(r[2..3])
REG[5] =  s3[030809...](8)
  13 Insert           0    5    1 a             1B intkey=r[1] data=r[5]
REG[5] =  s3[030809...](8)
REG[1] =  i:4
  14 Goto             0   10    0               00 
  10 Yield            4   15    0               00 
REG[4] =  i:4
REG[4] =  i:10
   5 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
   6 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   7 Yield            4    0    0               00 
REG[4] =  i:10
REG[4] =  i:7
  11 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
  12 MakeRecord       2    2    5               00 r[5]=mkrec(r[2..3])
REG[5] =  s5[0301010202.....](8)
  13 Insert           0    5    1 a             1B intkey=r[1] data=r[5]
REG[5] =  s5[0301010202.....](8)
REG[1] =  i:5
  14 Goto             0   10    0               00 
  10 Yield            4   15    0               00 
REG[4] =  i:7
REG[4] =  i:10
   8 EndCoroutine     4    0    0               00 
REG[4] =  i:10
  15 Noop             0    0    0               00 
  16 Halt             0    0    0               00 
SQL: [;
UPDATE t SET t1_mirror='abc', t1_mirror='Bbc';]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    1    5 1             01 usesStmtJournal=0
  20 TableLock        0    3    1 t             00 iDb=0 root=3 write=1
  21 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    3    0 0             00 root=3 iDb=0; t
   3 Explain          0    0    0 SCAN TABLE t  00 
   4 Rewind           0    8    0               00 
   8 Close            0    0    0               00 
   9 OpenWrite        0    3    0 2             00 root=3 iDb=0; t
  10 RowSetRead       1   17    2               00 r[2]=rowset(1)
REG[1] =  NULL
REG[2] =  NULL
  17 Noop             0    0    0               00 
  18 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fc9ce994859 in __GI_abort () at abort.c:79
#2  0x00007fc9ce994729 in __assert_fail_base (fmt=0x7fc9ceb2a588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x20d94f "op==TK_CASE", file=0x222c23 "sqlite3.c", line=92150, function=<optimized out>) at assert.c:92
#3  0x00007fc9ce9a5fd6 in __GI___assert_fail (assertion=0x20d94f "op==TK_CASE", file=0x222c23 "sqlite3.c", line=92150, function=0x21a1ea "int sqlite3ExprCodeTarget(Parse *, Expr *, int)") at assert.c:101
#4  0x000000000037b938 in sqlite3ExprCodeTarget (pParse=0x1c83a00, pExpr=0x1c97610, target=5) at sqlite3.c:92150
#5  0x000000000037228a in sqlite3ExprCodeTemp (pParse=0x1c83a00, pExpr=0x1c97610, pReg=0x7ffcd01d3cf4) at sqlite3.c:92302
#6  0x0000000000371435 in sqlite3ExprIfTrue (pParse=0x1c83a00, pExpr=0x1ca0fe0, dest=<optimized out>, jumpIfNull=16) at sqlite3.c:92559
#7  0x0000000000384b90 in sqlite3GenerateConstraintChecks (pParse=<optimized out>, pTab=0x1ca0ab0, aRegIdx=<optimized out>, iDataCur=0, iIdxCur=1, regNewData=1, regOldData=0, pkChng=0 '\000', overrideError=10 '\n', 
    ignoreDest=-1, pbMayReplace=0x7ffcd01d3fe0, aiChng=0x0) at sqlite3.c:107197
#8  0x00000000003418e6 in sqlite3Insert (pParse=<optimized out>, pTabList=<optimized out>, pSelect=<optimized out>, pColumn=0x0, onError=<optimized out>) at sqlite3.c:106860
#9  0x00000000003066b3 in yy_reduce (yypParser=0x1ca86b0, yyruleno=<optimized out>) at sqlite3.c:133484
#10 0x00000000002fef8e in sqlite3Parser (yyp=0x1ca86b0, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#11 0x00000000002fc544 in sqlite3RunParser (pParse=0x1c83a00, 
    zSql=0x1ca63e0 "INSERT INTO t VALUES(1,2);;\nSELECT t1_mirror-t1_mirror FROM t;;\nCREATE TABLE t1_bu(t1_au INTEGER PRIMARY KEY, t1_bd);;\nSELECT tbl,idx,stat FROM 'main'.sqlite_stat1;;\nSELECT rowid, t1_ai FROM t1_mirror"..., pzErrMsg=0x7ffcd01d4268) at sqlite3.c:135186
#12 0x00000000002fac4e in sqlite3Prepare (db=0x1c82840, 
    zSql=0x1c84353 "INSERT INTO t VALUES(1,2);;\nSELECT t1_mirror-t1_mirror FROM t;;\nCREATE TABLE t1_bu(t1_au INTEGER PRIMARY KEY, t1_bd);;\nSELECT tbl,idx,stat FROM 'main'.sqlite_stat1;;\nSELECT rowid, t1_ai FROM t1_mirror"..., nBytes=<optimized out>, saveSqlFlag=1, pReprepare=<optimized out>, ppStmt=0x7ffcd01d4398, pzTail=0x7ffcd01d4380) at sqlite3.c:112589
#13 0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0x1c82840, 
    zSql=0x1c84353 "INSERT INTO t VALUES(1,2);;\nSELECT t1_mirror-t1_mirror FROM t;;\nCREATE TABLE t1_bu(t1_au INTEGER PRIMARY KEY, t1_bd);;\nSELECT tbl,idx,stat FROM 'main'.sqlite_stat1;;\nSELECT rowid, t1_ai FROM t1_mirror"..., nBytes=4866, saveSqlFlag=1, pOld=0x0, ppStmt=<optimized out>, pzTail=0x7ffcd01d4380) at sqlite3.c:112688
#14 0x000000000028f38c in sqlite3_prepare_v2 (db=0x2, zSql=0x7ffcd01d3860 "", nBytes=0, ppStmt=0x7ffcd01d4398, pzTail=<optimized out>) at sqlite3.c:112764
#15 0x000000000024b100 in main (argc=1, argv=0x7ffcd01d4548) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 15379] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
