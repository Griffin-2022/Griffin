GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000478,sig:06,src:006977+009643,time:26623604,execs:3938884,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
SELECT printf('%*.*f',5,2,3.141592653);]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 String8          0    2    0 %*.*f         00 r[2]='%*.*f'
REG[2] =   t5[%*.*f](8)
   5 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
   6 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
   7 Real             0    5    0 3.141592653   00 r[5]=3.141592653
REG[5] =  r:3.14159
   8 Goto             0    1    0               00 
   1 Function0       15    2    1 printf(-1)    04 r[1]=func(r[2..5])
REG[2] =   t5[%*.*f](8)
REG[3] =  i:5
REG[4] =  i:2
REG[5] =  r:3.14159
REG[1] =   s5[ 3.14](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s5[ 3.14](8)
   3 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    0 0             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [PRAGMA main.auto_vacuum = 0;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    0 0             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [CREATE TABLE a(b);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    0 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:1
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:1
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:1
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 a             00 r[7]='a'
REG[7] =   t1[a](8)
  21 String8          0    8    0 a             00 r[8]='a'
REG[8] =   t1[a](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  23 String8          0   10    0 CREATE TABLE a(b) 00 r[10]='CREATE TABLE a(b)'
REG[10] =   t17[CREATE TABLE a(](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s31[06170F0F012F7461626C656161024352...../tableaa.CR](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s31[06170F0F012F7461626C656161024352...../tableaa.CR](8)
REG[5] =  i:1
  26 Close            1    0    0               00 
  27 SetCookie        0    1    1               00 
  28 ParseSchema      0    0    0 tbl_name='a' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    1 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[a](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s17[CREATE TABLE a(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[a](8)
REG[6] =  i:2
REG[7] =   s17[CREATE TABLE a(](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='a' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    1 0             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[a](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s17[CREATE TABLE a(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[a](8)
REG[6] =  i:2
REG[7] =   s17[CREATE TABLE a(](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [SELECT name FROM sqlite_master WHERE type!='meta' ORDER BY name;]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      0    0    1 0             01 usesStmtJournal=0
  21 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  22 String8          0    2    0 meta          00 r[2]='meta'
REG[2] =   t4[meta](8)
  23 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0    1    0 2             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Eq               2   11    1 (BINARY)      52 if r[2]==r[1] goto 11
REG[2] =   t4[meta](8)
REG[1] =   s5[table](8)
   7 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[a](8)
   8 Copy             4    3    0               00 r[3]=r[4]
REG[3] =   s1[a](8)
   9 MakeRecord       3    2    5               00 r[5]=mkrec(r[3..4])
REG[5] =  s5[030F0F6161...aa](8)
  10 SorterInsert     1    5    0               00 
REG[5] =  s5[030F0F6161...aa](8)
  11 Next             0    5    0               01 
  12 Close            0    0    0               00 
  13 OpenPseudo       2    6    3               00 3 columns in r[6]
  14 SorterSort       1   19    0               00 
  15 SorterData       1    6    2               00 r[6]=data
  16 Column           2    1    4               00 r[4]=name
REG[4] =   s1[a](8)
  17 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s1[a](8)
  18 SorterNext       1   15    0               00 
  19 Halt             0    0    0               00 
SQL: [PRAGMA writable_schema = 1;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [INSERT INTO a(b, b, b, b) VALUES(1, 2, 3, 4);]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    1    1 0             01 usesStmtJournal=0
   9 TableLock        0    2    1 a             00 iDb=0 root=2 write=1
  10 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 1             00 root=2 iDb=0; a
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 MakeRecord       2    1    3               00 r[3]=mkrec(r[2])
REG[3] =  s2[0209..](8)
   5 Insert           0    3    1 a             1B intkey=r[1] data=r[3]
REG[3] =  s2[0209..](8)
REG[1] =  i:1
   6 Noop             0    0    0               00 
   7 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='a' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    1 0             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[a](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s17[CREATE TABLE a(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[a](8)
REG[6] =  i:2
REG[7] =   s17[CREATE TABLE a(](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [CREATE TABLE temp_store_directory_test(temp_table INTEGER PRIMARY KEY, t BLOB);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    1 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:2
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:2
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:2
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 temp_store_directory_test 00 r[7]='temp_store_directory_test'
REG[7] =   t25[temp_store_dire](8)
  21 String8          0    8    0 temp_store_directory_test 00 r[8]='temp_store_directory_test'
REG[8] =   t25[temp_store_dire](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  23 String8          0   10    0 CREATE TABLE temp_store_directory_test(temp_table INTEGER PRIMARY KEY, t BLOB) 00 r[10]='CREATE TABLE temp_store_directory_test(temp_table INTEGER PRIMARY KEY, t BLOB)'
REG[10] =   t78[CREATE TABLE te](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s141[07173F3F0181297461626C6574656D70..??..)tabletemp](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s141[07173F3F0181297461626C6574656D70..??..)tabletemp](8)
REG[5] =  i:2
  26 Close            1    0    0               00 
  27 SetCookie        0    1    2               00 
  28 ParseSchema      0    0    0 tbl_name='temp_store_directory_test' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 temp_store_directory_test 00 r[2]='temp_store_directory_test'
REG[2] =   t25[temp_store_dire](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s25[temp_store_dire](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s25[temp_store_dire](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s78[CREATE TABLE te](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s25[temp_store_dire](8)
REG[6] =  i:3
REG[7] =   s78[CREATE TABLE te](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    2 0             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s17[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:2
REG[3] =   s17[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s25[temp_store_dire](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s78[CREATE TABLE te](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s25[temp_store_dire](8)
REG[2] =  i:3
REG[3] =   s78[CREATE TABLE te](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
ALTER TABLE temp_store_directory_test ADD t1 CHECK (temp_store_directory_test>t1);]
VDBE Trace:
   0 Init             0   36    0               00 Start at 36
  36 Transaction      0    1    2 0             01 usesStmtJournal=0
  37 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  38 String8          0    9    0 table         00 r[9]='table'
REG[9] =   t5[table](8)
  39 String8          0   11    0 temp_store_directory_test 00 r[11]='temp_store_directory_test'
REG[11] =   t25[temp_store_dire](8)
  40 Integer          1   14    0               00 r[14]=1
REG[14] =  i:1
  41 Integer         77   15    0               00 r[15]=77
REG[15] =  i:77
  42 String8          0   16    0 ,             00 r[16]=', '
REG[16] =   t2[, ](8)
  43 String8          0   17    0 t1 CHECK (temp_store_directory_test>t1) 00 r[17]='t1 CHECK (temp_store_directory_test>t1)'
REG[17] =   t39[t1 CHECK (temp_](8)
  44 Integer         78   19    0               00 r[19]=78
REG[19] =  i:78
  45 Goto             0    1    0               00 
   1 SetCookie        0    1    3               00 
   2 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   3 OpenRead         0    1    0 2             00 root=1 iDb=0; sqlite_master
   4 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   5 Rewind           0   13    0               00 
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   7 Ne               9   12    8 (BINARY)      52 if r[9]!=r[8] goto 12
REG[9] =   t5[table](8)
REG[8] =   s5[table](8)
   8 Column           0    1   10               00 r[10]=sqlite_master.name
REG[10] =   s1[a](8)
   9 Ne              11   12   10 (BINARY)      52 if r[11]!=r[10] goto 12
REG[11] =   t25[temp_store_dire](8)
REG[10] =   s1[a](8)
  12 Next             0    6    0               01 
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   7 Ne               9   12    8 (BINARY)      52 if r[9]!=r[8] goto 12
REG[9] =   t5[table](8)
REG[8] =   s5[table](8)
   8 Column           0    1   10               00 r[10]=sqlite_master.name
REG[10] =   s25[temp_store_dire](8)
   9 Ne              11   12   10 (BINARY)      52 if r[11]!=r[10] goto 12
REG[11] =   t25[temp_store_dire](8)
REG[10] =   s25[temp_store_dire](8)
  10 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
  11 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:2
  12 Next             0    6    0               01 
  13 Close            0    0    0               00 
  14 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
  15 RowSetRead       1   31    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  16 NotExists        0   15    2               00 intkey=r[2]
REG[2] =  i:2
  17 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
  18 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s25[temp_store_dire](8)
  19 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
REG[5] =   s25[temp_store_dire](8)
  20 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  21 Column           0    4   13               00 r[13]=sqlite_master.sql
REG[13] =   s78[CREATE TABLE te](8)
  22 Function0        6   13   12 substr(3)     03 r[12]=func(r[13..15])
REG[13] =   s78[CREATE TABLE te](8)
REG[14] =  i:1
REG[15] =  i:77
REG[12] =   s77[CREATE TABLE te](8)
  23 Concat          16   12    8               00 r[8]=r[12]+r[16]
REG[16] =   t2[, ](8)
REG[12] =   s77[CREATE TABLE te](8)
REG[8] =   s79[CREATE TABLE te](8)
  24 Concat          17    8   10               00 r[10]=r[8]+r[17]
REG[17] =   t39[t1 CHECK (temp_](8)
REG[8] =   s79[CREATE TABLE te](8)
REG[10] =   s118[CREATE TABLE te](8)
  25 Column           0    4   18               00 r[18]=sqlite_master.sql
REG[18] =   s78[CREATE TABLE te](8)
  26 Function0        2   18    8 substr(2)     02 r[8]=func(r[18..19])
REG[18] =   s78[CREATE TABLE te](8)
REG[19] =  i:78
REG[8] =   s1[)](8)
  27 Concat           8   10    7               00 r[7]=r[10]+r[8]
REG[8] =   s1[)](8)
REG[10] =   s118[CREATE TABLE te](8)
REG[7] =   s119[CREATE TABLE te](8)
  28 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s182[07173F3F01817B7461626C6574656D70..??..{tabletemp](8)
  29 Insert           0    8    2               00 intkey=r[2] data=r[8]
REG[8] =  s182[07173F3F01817B7461626C6574656D70..??..{tabletemp](8)
REG[2] =  i:2
  30 Goto             0   15    0               00 
  15 RowSetRead       1   31    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  31 Close            0    0    0               00 
  32 SetCookie        0    2    4               00 
  33 DropTable        0    0    0 temp_store_directory_test 00 
  34 ParseSchema      0    0    0 tbl_name='temp_store_directory_test' 00 
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    3 0             00 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 temp_store_directory_test 00 r[2]='temp_store_directory_test'
REG[2] =   t25[temp_store_dire](8)
  17 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s1[a](8)
  11 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s25[temp_store_dire](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s25[temp_store_dire](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:3
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s119[CREATE TABLE te](8)
  10 ResultRow        3    3    0               00 output=r[3..5]
REG[3] =   s25[temp_store_dire](8)
REG[4] =  i:3
REG[5] =   s119[CREATE TABLE te](8)
  11 Next             0    5    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [;
SELECT printf('%*.*f',5,2,3.141592653);]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 String8          0    2    0 %*.*f         00 r[2]='%*.*f'
REG[2] =   t5[%*.*f](8)
   5 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
   6 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
   7 Real             0    5    0 3.141592653   00 r[5]=3.141592653
REG[5] =  r:3.14159
   8 Goto             0    1    0               00 
   1 Function0       15    2    1 printf(-1)    04 r[1]=func(r[2..5])
REG[2] =   t5[%*.*f](8)
REG[3] =  i:5
REG[4] =  i:2
REG[5] =  r:3.14159
REG[1] =   s5[ 3.14](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s5[ 3.14](8)
   3 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    3 1             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s17[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:2
REG[3] =   s17[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s25[temp_store_dire](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s119[CREATE TABLE te](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s25[temp_store_dire](8)
REG[2] =  i:3
REG[3] =   s119[CREATE TABLE te](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='temp_store_directory_test' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 temp_store_directory_test 00 r[2]='temp_store_directory_test'
REG[2] =   t25[temp_store_dire](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s25[temp_store_dire](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s25[temp_store_dire](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s119[CREATE TABLE te](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s25[temp_store_dire](8)
REG[6] =  i:3
REG[7] =   s119[CREATE TABLE te](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [COMMIT;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       1    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    3 1             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s17[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:2
REG[3] =   s17[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s25[temp_store_dire](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s119[CREATE TABLE te](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s25[temp_store_dire](8)
REG[2] =  i:3
REG[3] =   s119[CREATE TABLE te](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [COMMIT;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       1    0    0               00 
SQL: [SELECT sql FROM sqlite_master WHERE tbl_name = 'temp_store_directory_test' AND type = 'table';]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    3 1             01 usesStmtJournal=0
  14 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  15 String8          0    2    0 temp_store_directory_test 00 r[2]='temp_store_directory_test'
REG[2] =   t25[temp_store_dire](8)
  16 String8          0    4    0 table         00 r[4]='table'
REG[4] =   t5[table](8)
  17 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   11    0               00 
   4 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   5 Ne               2   10    1 (BINARY)      52 if r[2]!=r[1] goto 10
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s1[a](8)
  10 Next             0    4    0               01 
   4 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   5 Ne               2   10    1 (BINARY)      52 if r[2]!=r[1] goto 10
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s25[temp_store_dire](8)
   6 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   7 Ne               4   10    3 (BINARY)      52 if r[4]!=r[3] goto 10
REG[4] =   t5[table](8)
REG[3] =   s5[table](8)
   8 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s119[CREATE TABLE te](8)
   9 ResultRow        5    1    0               00 output=r[5]
REG[5] =   s119[CREATE TABLE te](8)
  10 Next             0    4    0               01 
  11 Close            0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    3 1             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s17[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:2
REG[3] =   s17[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s25[temp_store_dire](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s119[CREATE TABLE te](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s25[temp_store_dire](8)
REG[2] =  i:3
REG[3] =   s119[CREATE TABLE te](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
PRAGMA count_changes = 1;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
-- 16 
;
SELECT b, b FROM a;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    3 1             01 usesStmtJournal=0
  11 TableLock        0    2    0 a             00 iDb=0 root=2 write=0
  12 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; a
   2 Explain          0    0    0 SCAN TABLE a  00 
   3 Rewind           0    8    0               00 
   4 Column           0    0    1               00 r[1]=a.b
REG[1] =  i:1
   5 Copy             1    2    0               00 r[2]=r[1]
REG[2] =  i:1
   6 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =  i:1
REG[2] =  i:1
   7 Next             0    4    0               01 
   8 Close            0    0    0               00 
   9 Halt             0    0    0               00 
SQL: [;
SELECT coalesce(b<b,99) FROM a;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    3 1             01 usesStmtJournal=0
  13 TableLock        0    2    0 a             00 iDb=0 root=2 write=0
  14 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; a
   2 Explain          0    0    0 SCAN TABLE a  00 
   3 Rewind           0   10    0               00 
   4 Column           0    0    2               00 r[2]=a.b
REG[2] =  i:1
   5 Lt               2    1    2 (BINARY)      61 if r[2]<r[2] goto 1
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   6 NotNull          1    8    0               00 if r[1]!=NULL goto 8
REG[1] =  i:0
   8 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   9 Next             0    4    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
SELECT coalesce(b>b,99) FROM a;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    3 1             01 usesStmtJournal=0
  13 TableLock        0    2    0 a             00 iDb=0 root=2 write=0
  14 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; a
   2 Explain          0    0    0 SCAN TABLE a  00 
   3 Rewind           0   10    0               00 
   4 Column           0    0    2               00 r[2]=a.b
REG[2] =  i:1
   5 Gt               2    1    2 (BINARY)      61 if r[2]>r[2] goto 1
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   6 NotNull          1    8    0               00 if r[1]!=NULL goto 8
REG[1] =  i:0
   8 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   9 Next             0    4    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [VACUUM;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Vacuum           0    0    0               00 
SQL: [ATTACH '' AS vacuum_db;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0               00 r[1]=''
REG[1] =   t0[](8)
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
REG[2] =   t9[vacuum_db](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t0[](8)
REG[2] =   t9[vacuum_db](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      2    0    0 0             00 usesStmtJournal=0
  13 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [PRAGMA vacuum_db.synchronous=OFF]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [SELECT 'CREATE TABLE vacuum_db.' || substr(sql,14)   FROM sqlite_master WHERE type='table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    3 1             01 usesStmtJournal=0
  20 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  21 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  22 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  23 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  24 String8          0    8    0 CREATE TABLE vacuum_db. 00 r[8]='CREATE TABLE vacuum_db.'
REG[8] =   t23[CREATE TABLE va](8)
  25 Integer         14   10    0               00 r[10]=14
REG[10] =  i:14
  26 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   17    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s1[a](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s1[a](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:2
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:2
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s17[CREATE TABLE a(](8)
  13 Function0        2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s17[CREATE TABLE a(](8)
REG[10] =  i:14
REG[5] =   s4[a(b)](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s4[a(b)](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s27[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s27[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.a(b)]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      2    1    0 0             01 usesStmtJournal=0
  33 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  34 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        2    2    4               00 
   4 SetCookie        2    5    1               00 
   5 CreateTable      2    2    0               00 r[2]=root iDb=2
REG[2] =  i:2
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:1
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:1
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  18 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  19 IsNull           5   28    0               00 if r[5]==NULL goto 28
REG[5] =  i:1
  20 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  21 String8          0    7    0 a             00 r[7]='a'
REG[7] =   t1[a](8)
  22 String8          0    8    0 a             00 r[8]='a'
REG[8] =   t1[a](8)
  23 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  24 String8          0   10    0 CREATE TABLE a(b) 00 r[10]='CREATE TABLE a(b)'
REG[10] =   t17[CREATE TABLE a(](8)
  25 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s31[06170F0F012F7461626C656161024352...../tableaa.CR](8)
  26 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s31[06170F0F012F7461626C656161024352...../tableaa.CR](8)
REG[5] =  i:1
  27 AddImm          12    1    0               00 r[12]=r[12]+1
REG[12] =  i:0
  28 Close            1    0    0               00 
  29 SetCookie        2    1    1               00 
  30 ParseSchema      2    0    0 tbl_name='a' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    1 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[a](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s17[CREATE TABLE a(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[a](8)
REG[6] =  i:2
REG[7] =   s17[CREATE TABLE a(](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  31 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s25[temp_store_dire](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s25[temp_store_dire](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:3
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:3
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s119[CREATE TABLE te](8)
  13 Function         2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s119[CREATE TABLE te](8)
REG[10] =  i:14
REG[5] =   s106[temp_store_dire](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s106[temp_store_dire](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s129[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s129[CREATE TABLE va](8)
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    3 2             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s17[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:2
REG[3] =   s17[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s25[temp_store_dire](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s119[CREATE TABLE te](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s25[temp_store_dire](8)
REG[2] =  i:3
REG[3] =   s119[CREATE TABLE te](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [SELECT count(*) FROM a
  ;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    0    3 2             01 usesStmtJournal=0
   8 TableLock        0    2    0 a             00 iDb=0 root=2 write=0
   9 Goto             0    1    0               00 
   1 OpenRead         1    2    0 1             00 root=2 iDb=0
   2 Count            1    1    0               00 r[1]=count()
REG[1] =  i:1
   3 Close            1    0    0               00 
   4 Copy             1    2    0               00 r[2]=r[1]
REG[2] =  i:1
   5 ResultRow        2    1    0               00 output=r[2]
REG[2] =  i:1
   6 Halt             0    0    0               00 
SQL: [VACUUM;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Vacuum           0    0    0               00 
SQL: [ATTACH '' AS vacuum_db;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0               00 r[1]=''
REG[1] =   t0[](8)
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
REG[2] =   t9[vacuum_db](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t0[](8)
REG[2] =   t9[vacuum_db](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      2    0    0 0             00 usesStmtJournal=0
  13 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [PRAGMA vacuum_db.synchronous=OFF]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [SELECT 'CREATE TABLE vacuum_db.' || substr(sql,14)   FROM sqlite_master WHERE type='table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    3 2             01 usesStmtJournal=0
  20 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  21 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  22 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  23 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  24 String8          0    8    0 CREATE TABLE vacuum_db. 00 r[8]='CREATE TABLE vacuum_db.'
REG[8] =   t23[CREATE TABLE va](8)
  25 Integer         14   10    0               00 r[10]=14
REG[10] =  i:14
  26 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   17    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s1[a](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s1[a](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:2
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:2
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s17[CREATE TABLE a(](8)
  13 Function0        2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s17[CREATE TABLE a(](8)
REG[10] =  i:14
REG[5] =   s4[a(b)](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s4[a(b)](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s27[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s27[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.a(b)]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      2    1    0 0             01 usesStmtJournal=0
  33 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  34 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        2    2    4               00 
   4 SetCookie        2    5    1               00 
   5 CreateTable      2    2    0               00 r[2]=root iDb=2
REG[2] =  i:2
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:1
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:1
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  18 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  19 IsNull           5   28    0               00 if r[5]==NULL goto 28
REG[5] =  i:1
  20 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  21 String8          0    7    0 a             00 r[7]='a'
REG[7] =   t1[a](8)
  22 String8          0    8    0 a             00 r[8]='a'
REG[8] =   t1[a](8)
  23 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  24 String8          0   10    0 CREATE TABLE a(b) 00 r[10]='CREATE TABLE a(b)'
REG[10] =   t17[CREATE TABLE a(](8)
  25 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s31[06170F0F012F7461626C656161024352...../tableaa.CR](8)
  26 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s31[06170F0F012F7461626C656161024352...../tableaa.CR](8)
REG[5] =  i:1
  27 AddImm          12    1    0               00 r[12]=r[12]+1
REG[12] =  i:0
  28 Close            1    0    0               00 
  29 SetCookie        2    1    1               00 
  30 ParseSchema      2    0    0 tbl_name='a' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    1 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[a](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s17[CREATE TABLE a(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[a](8)
REG[6] =  i:2
REG[7] =   s17[CREATE TABLE a(](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  31 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s25[temp_store_dire](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s25[temp_store_dire](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:3
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:3
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s119[CREATE TABLE te](8)
  13 Function         2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s119[CREATE TABLE te](8)
REG[10] =  i:14
REG[5] =   s106[temp_store_dire](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s106[temp_store_dire](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s129[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s129[CREATE TABLE va](8)
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    3 3             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s17[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:2
REG[3] =   s17[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s25[temp_store_dire](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s119[CREATE TABLE te](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s25[temp_store_dire](8)
REG[2] =  i:3
REG[3] =   s119[CREATE TABLE te](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [INSERT INTO a VALUES(randomblob(400)) ;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    1    3 3             01 usesStmtJournal=0
  12 TableLock        0    2    1 a             00 iDb=0 root=2 write=1
  13 Integer        400    4    0               00 r[4]=400
REG[4] =  i:400
  14 Goto             0    1    0               00 
   1 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
   2 OpenWrite        0    2    0 1             00 root=2 iDb=0; a
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   4 Function0        1    4    2 randomblob(1) 01 r[2]=func(r[4])
REG[4] =  i:400
REG[2] =  z400[65EF7BDAFDC2FE334946905DD88E829Be.{....3IF.]....](8)
   5 MakeRecord       2    1    5               00 r[5]=mkrec(r[2])
REG[5] =  s403[03862C65EF7BDAFDC2FE334946905DD8..,e.{....3IF.].](8)
   6 Insert           0    5    1 a             1B intkey=r[1] data=r[5]
REG[5] =  s403[03862C65EF7BDAFDC2FE334946905DD8..,e.{....3IF.].](8)
REG[1] =  i:2
   7 AddImm           3    1    0               00 r[3]=r[3]+1
REG[3] =  i:0
   8 Close            0    0    0               00 
   9 ResultRow        3    1    0               00 output=r[3]
REG[3] =  i:1
  10 Halt             0    0    0               00 
SQL: [REINDEX;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [;
BEGIN;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='index28' AND type='index' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 3             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 index28       00 r[2]='index28'
REG[2] =   t7[index28](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[index28](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[index28](8)
REG[1] =   s25[temp_store_dire](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    3 3             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s17[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:2
REG[3] =   s17[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s25[temp_store_dire](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s119[CREATE TABLE te](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s25[temp_store_dire](8)
REG[2] =  i:3
REG[3] =   s119[CREATE TABLE te](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
UPDATE a SET b=3, b=8;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    1    3 3             01 usesStmtJournal=0
  22 TableLock        0    2    1 a             00 iDb=0 root=2 write=1
  23 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; a
   3 Explain          0    0    0 SCAN TABLE a  00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:2
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  10 OpenWrite        0    2    0 1             00 root=2 iDb=0; a
  11 RowSetRead       1   18    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  12 NotExists        0   11    2               00 intkey=r[2]
REG[2] =  i:1
  13 Integer          8    3    0               00 r[3]=8
REG[3] =  i:8
  14 MakeRecord       3    1    5               00 r[5]=mkrec(r[3])
REG[5] =  s3[020108...](8)
  15 Insert           0    5    2 a             05 intkey=r[2] data=r[5]
REG[5] =  s3[020108...](8)
REG[2] =  i:1
  16 AddImm           4    1    0               00 r[4]=r[4]+1
REG[4] =  i:0
  17 Goto             0   11    0               00 
  11 RowSetRead       1   18    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  12 NotExists        0   11    2               00 intkey=r[2]
REG[2] =  i:2
  13 Integer          8    3    0               00 r[3]=8
REG[3] =  i:8
  14 MakeRecord       3    1    5               00 r[5]=mkrec(r[3])
REG[5] =  s3[020108...](8)
  15 Insert           0    5    2 a             05 intkey=r[2] data=r[5]
REG[5] =  s3[020108...](8)
REG[2] =  i:2
  16 AddImm           4    1    0               00 r[4]=r[4]+1
REG[4] =  i:1
  17 Goto             0   11    0               00 
  11 RowSetRead       1   18    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  18 Close            0    0    0               00 
  19 ResultRow        4    1    0               00 output=r[4]
REG[4] =  i:2
  20 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='index43' AND type='index' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 3             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 index43       00 r[2]='index43'
REG[2] =   t7[index43](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[index43](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[index43](8)
REG[1] =   s25[temp_store_dire](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
UPDATE a SET b=32, b=NULL;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    1    3 3             01 usesStmtJournal=0
  22 TableLock        0    2    1 a             00 iDb=0 root=2 write=1
  23 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; a
   3 Explain          0    0    0 SCAN TABLE a  00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:2
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  10 OpenWrite        0    2    0 1             00 root=2 iDb=0; a
  11 RowSetRead       1   18    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  12 NotExists        0   11    2               00 intkey=r[2]
REG[2] =  i:1
  13 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  14 MakeRecord       3    1    5               00 r[5]=mkrec(r[3])
REG[5] =  s2[0200..](8)
  15 Insert           0    5    2 a             05 intkey=r[2] data=r[5]
REG[5] =  s2[0200..](8)
REG[2] =  i:1
  16 AddImm           4    1    0               00 r[4]=r[4]+1
REG[4] =  i:0
  17 Goto             0   11    0               00 
  11 RowSetRead       1   18    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  12 NotExists        0   11    2               00 intkey=r[2]
REG[2] =  i:2
  13 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  14 MakeRecord       3    1    5               00 r[5]=mkrec(r[3])
REG[5] =  s2[0200..](8)
  15 Insert           0    5    2 a             05 intkey=r[2] data=r[5]
REG[5] =  s2[0200..](8)
REG[2] =  i:2
  16 AddImm           4    1    0               00 r[4]=r[4]+1
REG[4] =  i:1
  17 Goto             0   11    0               00 
  11 RowSetRead       1   18    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  18 Close            0    0    0               00 
  19 ResultRow        4    1    0               00 output=r[4]
REG[4] =  i:2
  20 Halt             0    0    0               00 
SQL: [;
UPDATE a SET b=1, b='';]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    1    3 3             01 usesStmtJournal=0
  22 TableLock        0    2    1 a             00 iDb=0 root=2 write=1
  23 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; a
   3 Explain          0    0    0 SCAN TABLE a  00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:2
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  10 OpenWrite        0    2    0 1             00 root=2 iDb=0; a
  11 RowSetRead       1   18    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  12 NotExists        0   11    2               00 intkey=r[2]
REG[2] =  i:1
  13 String8          0    3    0               00 r[3]=''
REG[3] =   t0[](8)
  14 MakeRecord       3    1    5               00 r[5]=mkrec(r[3])
REG[5] =  s2[020D..](8)
  15 Insert           0    5    2 a             05 intkey=r[2] data=r[5]
REG[5] =  s2[020D..](8)
REG[2] =  i:1
  16 AddImm           4    1    0               00 r[4]=r[4]+1
REG[4] =  i:0
  17 Goto             0   11    0               00 
  11 RowSetRead       1   18    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  12 NotExists        0   11    2               00 intkey=r[2]
REG[2] =  i:2
  13 String           0    3    0               00 r[3]='' (len=0)
REG[3] =   t0[](8)
  14 MakeRecord       3    1    5               00 r[5]=mkrec(r[3])
REG[5] =  s2[020D..](8)
  15 Insert           0    5    2 a             05 intkey=r[2] data=r[5]
REG[5] =  s2[020D..](8)
REG[2] =  i:2
  16 AddImm           4    1    0               00 r[4]=r[4]+1
REG[4] =  i:1
  17 Goto             0   11    0               00 
  11 RowSetRead       1   18    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  18 Close            0    0    0               00 
  19 ResultRow        4    1    0               00 output=r[4]
REG[4] =  i:2
  20 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    3 3             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s17[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:2
REG[3] =   s17[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s25[temp_store_dire](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s119[CREATE TABLE te](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s25[temp_store_dire](8)
REG[2] =  i:3
REG[3] =   s119[CREATE TABLE te](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_47;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_47         00 
   2 Halt             0    0    0               00 
SQL: [;
PRAGMA journal_mode=DELETE;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 JournalMode      0    1    0               00 
REG[1] =   t6[memory](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t6[memory](8)
   3 Halt             0    0    0               00 
SQL: [BEGIN EXCLUSIVE;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Transaction      0    2    0               00 
   2 Transaction      1    2    0               00 
   3 AutoCommit       0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='index73' AND type='index' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 3             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 index73       00 r[2]='index73'
REG[2] =   t7[index73](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[index73](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[index73](8)
REG[1] =   s25[temp_store_dire](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [SAVEPOINT _tcl_transaction;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 _tcl_transaction 00 
   2 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='index89' AND type='index' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 3             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 index89       00 r[2]='index89'
REG[2] =   t7[index89](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[index89](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[index89](8)
REG[1] =   s25[temp_store_dire](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_42;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_42         00 
   2 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_81;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_81         00 
   2 Halt             0    0    0               00 
SQL: [;
pragma cache_size=16;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [REINDEX;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='temp_store_directory_test' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 3             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 temp_store_directory_test 00 r[2]='temp_store_directory_test'
REG[2] =   t25[temp_store_dire](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s25[temp_store_dire](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s25[temp_store_dire](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s119[CREATE TABLE te](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s25[temp_store_dire](8)
REG[6] =  i:3
REG[7] =   s119[CREATE TABLE te](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
UPDATE a SET b=8, b=8;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    1    3 3             01 usesStmtJournal=0
  22 TableLock        0    2    1 a             00 iDb=0 root=2 write=1
  23 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; a
   3 Explain          0    0    0 SCAN TABLE a  00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:2
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  10 OpenWrite        0    2    0 1             00 root=2 iDb=0; a
  11 RowSetRead       1   18    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  12 NotExists        0   11    2               00 intkey=r[2]
REG[2] =  i:1
  13 Integer          8    3    0               00 r[3]=8
REG[3] =  i:8
  14 MakeRecord       3    1    5               00 r[5]=mkrec(r[3])
REG[5] =  s3[020108...](8)
  15 Insert           0    5    2 a             05 intkey=r[2] data=r[5]
REG[5] =  s3[020108...](8)
REG[2] =  i:1
  16 AddImm           4    1    0               00 r[4]=r[4]+1
REG[4] =  i:0
  17 Goto             0   11    0               00 
  11 RowSetRead       1   18    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  12 NotExists        0   11    2               00 intkey=r[2]
REG[2] =  i:2
  13 Integer          8    3    0               00 r[3]=8
REG[3] =  i:8
  14 MakeRecord       3    1    5               00 r[5]=mkrec(r[3])
REG[5] =  s3[020108...](8)
  15 Insert           0    5    2 a             05 intkey=r[2] data=r[5]
REG[5] =  s3[020108...](8)
REG[2] =  i:2
  16 AddImm           4    1    0               00 r[4]=r[4]+1
REG[4] =  i:1
  17 Goto             0   11    0               00 
  11 RowSetRead       1   18    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  18 Close            0    0    0               00 
  19 ResultRow        4    1    0               00 output=r[4]
REG[4] =  i:2
  20 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_65;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_65         00 
   2 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_16;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_16         00 
   2 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    3 3             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s17[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:2
REG[3] =   s17[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s25[temp_store_dire](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s119[CREATE TABLE te](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s25[temp_store_dire](8)
REG[2] =  i:3
REG[3] =   s119[CREATE TABLE te](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0    3 3             01 usesStmtJournal=0
  24 Transaction      1    0    0 3             01 usesStmtJournal=0
  25 Goto             0    1    0               00 
   1 Integer        100    1    0               00 r[1]=100
REG[1] =  i:100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
REG[1] =  i:100
   4 IntegrityCk      2    3    1 [2,1]         00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
REG[2] =  NULL
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
REG[1] =  i:100
  12 IntegrityCk      2    1    1 ]             01 
  13 IsNull           2   18    0               00 if r[2]==NULL goto 18
REG[2] =  NULL
  18 AddImm           1 -100    0               00 r[1]=r[1]+-100
REG[1] =  i:100
  19 If               1   22    0               00 
REG[1] =  i:0
  20 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
  21 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
  22 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    3 3             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s17[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:2
REG[3] =   s17[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s25[temp_store_dire](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s119[CREATE TABLE te](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s25[temp_store_dire](8)
REG[2] =  i:3
REG[3] =   s119[CREATE TABLE te](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    3 3             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s17[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:2
REG[3] =   s17[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s25[temp_store_dire](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s119[CREATE TABLE te](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s25[temp_store_dire](8)
REG[2] =  i:3
REG[3] =   s119[CREATE TABLE te](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
SELECT CASE WHEN b IS NOT b THEN 'yes' ELSE 'no' END FROM a;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    3 3             01 usesStmtJournal=0
  14 TableLock        0    2    0 a             00 iDb=0 root=2 write=0
  15 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; a
   2 Explain          0    0    0 SCAN TABLE a  00 
   3 Rewind           0   11    0               00 
   4 Column           0    0    2               00 r[2]=a.b
REG[2] =  i:8
   5 Eq               2    8    2 (BINARY)      C1 if r[2]==r[2] goto 8
REG[2] =  i:8
REG[2] =  i:8
   8 String8          0    1    0 no            00 r[1]='no'
REG[1] =   t2[no](8)
   9 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t2[no](8)
  10 Next             0    4    0               01 
   4 Column           0    0    2               00 r[2]=a.b
REG[2] =  i:8
   5 Eq               2    8    2 (BINARY)      C1 if r[2]==r[2] goto 8
REG[2] =  i:8
REG[2] =  i:8
   8 String           2    1    0 no            00 r[1]='no' (len=2)
REG[1] =   t2[no](8)
   9 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t2[no](8)
  10 Next             0    4    0               01 
  11 Close            0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;
SELECT b+b FROM a;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    3 3             01 usesStmtJournal=0
  11 TableLock        0    2    0 a             00 iDb=0 root=2 write=0
  12 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; a
   2 Explain          0    0    0 SCAN TABLE a  00 
   3 Rewind           0    8    0               00 
   4 Column           0    0    2               00 r[2]=a.b
REG[2] =  i:8
   5 Add              2    2    1               00 r[1]=r[2]+r[2]
REG[2] =  i:8
REG[2] =  i:8
REG[1] =  i:16
   6 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:16
   7 Next             0    4    0               01 
   4 Column           0    0    2               00 r[2]=a.b
REG[2] =  i:8
   5 Add              2    2    1               00 r[1]=r[2]+r[2]
REG[2] =  i:8
REG[2] =  i:8
REG[1] =  i:16
   6 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:16
   7 Next             0    4    0               01 
   8 Close            0    0    0               00 
   9 Halt             0    0    0               00 
SQL: [;
UPDATE a SET b=9223372036854775807, b=1;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    1    3 3             01 usesStmtJournal=0
  22 TableLock        0    2    1 a             00 iDb=0 root=2 write=1
  23 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; a
   3 Explain          0    0    0 SCAN TABLE a  00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:2
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  10 OpenWrite        0    2    0 1             00 root=2 iDb=0; a
  11 RowSetRead       1   18    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  12 NotExists        0   11    2               00 intkey=r[2]
REG[2] =  i:1
  13 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  14 MakeRecord       3    1    5               00 r[5]=mkrec(r[3])
REG[5] =  s2[0209..](8)
  15 Insert           0    5    2 a             05 intkey=r[2] data=r[5]
REG[5] =  s2[0209..](8)
REG[2] =  i:1
  16 AddImm           4    1    0               00 r[4]=r[4]+1
REG[4] =  i:0
  17 Goto             0   11    0               00 
  11 RowSetRead       1   18    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  12 NotExists        0   11    2               00 intkey=r[2]
REG[2] =  i:2
  13 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  14 MakeRecord       3    1    5               00 r[5]=mkrec(r[3])
REG[5] =  s2[0209..](8)
  15 Insert           0    5    2 a             05 intkey=r[2] data=r[5]
REG[5] =  s2[0209..](8)
REG[2] =  i:2
  16 AddImm           4    1    0               00 r[4]=r[4]+1
REG[4] =  i:1
  17 Goto             0   11    0               00 
  11 RowSetRead       1   18    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  18 Close            0    0    0               00 
  19 ResultRow        4    1    0               00 output=r[4]
REG[4] =  i:2
  20 Halt             0    0    0               00 
SQL: [SELECT randomblob($pgsz);]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 Variable         1    2    0 $pgsz         00 r[2]=parameter(1,$pgsz)
REG[2] =  NULL
   5 Goto             0    1    0               00 
   1 Function0        1    2    1 randomblob(1) 01 r[1]=func(r[2])
REG[2] =  NULL
REG[1] =  z1[89.](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  z1[89.](8)
   3 Halt             0    0    0               00 
SQL: [;
SELECT DISTINCT count(*) FROM a GROUP BY b ORDER BY 1 LIMIT 3;]
VDBE Trace:
   0 Init             0   56    0               00 Start at 56
  56 Transaction      0    0    3 3             01 usesStmtJournal=0
  57 TableLock        0    2    0 a             00 iDb=0 root=2 write=0
  58 Goto             0    1    0               00 
   1 OpenEphemeral    1    3    0 k(1,B)        00 nColumn=3
   2 Integer          3    1    0               00 r[1]=3; LIMIT counter
REG[1] =  i:3
   3 OpenEphemeral    2    0    0 k(1,B)        08 nColumn=0
   4 SorterOpen       3    1    0 k(1,B)        00 
   5 Integer          0    4    0               00 r[4]=0; clear abort flag
REG[4] =  i:0
   6 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
REG[3] =  i:0
   7 Null             0    7    7               00 r[7..7]=NULL
REG[7] =  NULL
   8 Gosub            6   49    0               00 
REG[6] =  i:8
  49 Null             0    2    2               00 r[2..2]=NULL
REG[2] =  NULL
  50 Return           6    0    0               00 
REG[6] =  i:8
   9 OpenRead         0    2    0 1             00 root=2 iDb=0; a
  10 Explain          0    0    0 SCAN TABLE a  00 
  11 Rewind           0   16    0               00 
  12 Column           0    0    9               00 r[9]=a.b
REG[9] =  i:1
  13 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s2[0209..](8)
  14 SorterInsert     3   10    0               00 
REG[10] =  s2[0209..](8)
  15 Next             0   12    0               01 
  12 Column           0    0    9               00 r[9]=a.b
REG[9] =  i:1
  13 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s2[0209..](8)
  14 SorterInsert     3   10    0               00 
REG[10] =  s2[0209..](8)
  15 Next             0   12    0               01 
  16 Close            0    0    0               00 
  17 OpenPseudo       4   10    1               00 1 columns in r[10]
  18 SorterSort       3   51    0               00 GROUP BY sort
  19 SorterData       3   10    4               00 r[10]=data
  20 Column           4    0    8               00 r[8]=
REG[8] =  i:1
  21 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  NULL
REG[8] =  i:1
  22 Jump            23   27   23               00 
  23 Move             8    7    1               00 r[7]=r[8]
REG[7] =  i:1
  24 Gosub            5   34    0               00 output one row
REG[5] =  i:24
  34 IfPos            3   36    0               00 if r[3]>0 then r[3]-=0, goto 36; Groupby result generator entry point
REG[3] =  i:0
  35 Return           5    0    0               00 
REG[5] =  i:24
  25 IfPos            4   51    0               00 if r[4]>0 then r[4]-=0, goto 51; check abort flag
REG[4] =  i:0
  26 Gosub            6   49    0               00 reset accumulator
REG[6] =  i:26
  49 Null             0    2    2               00 r[2..2]=NULL
REG[2] =  NULL
  50 Return           6    0    0               00 
REG[6] =  i:26
  27 AggStep0         0    0    2 count(0)      00 accum=r[2] step(r[0])
  28 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  29 SorterNext       3   19    0               00 
  19 SorterData       3   10    4               00 r[10]=data
  20 Column           4    0    8               00 r[8]=
REG[8] =  i:1
  21 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  i:1
REG[8] =  i:1
  22 Jump            23   27   23               00 
  27 AggStep          0    0    2 count(0)      00 accum=r[2] step(r[0])
  28 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  29 SorterNext       3   19    0               00 
  30 Gosub            5   34    0               00 output final row
REG[5] =  i:30
  34 IfPos            3   36    0               00 if r[3]>0 then r[3]-=0, goto 36; Groupby result generator entry point
REG[3] =  i:1
  36 AggFinal         2    0    0 count(0)      00 accum=r[2] N=0
  37 Copy             2   13    0               00 r[13]=r[2]
REG[13] =  i:2
  38 Found            2   35   13 1             00 key=r[13]
REG[13] =  i:2
  39 MakeRecord      13    1   14               00 r[14]=mkrec(r[13])
REG[14] =  s3[020102...](8)
  40 IdxInsert        2   14    0               00 key=r[14]
REG[14] =  s3[020102...](8)
  41 Copy            13   11    0               00 r[11]=r[13]
REG[11] =  i:2
  42 Sequence         1   12    0               00 r[12]=cursor[1].ctr++
REG[12] =  i:0
  43 MakeRecord      11    3   15               00 r[15]=mkrec(r[11..13])
REG[15] =  s6[040108010202......](8)
  44 IdxInsert        1   15    0               00 key=r[15]
REG[15] =  s6[040108010202......](8)
  45 IfNotZero        1   48    1               00 if r[1]!=0 then r[1]-=1, goto 48
REG[1] =  i:3
  48 Return           5    0    0               00 end groupby result generator
REG[5] =  i:30
  31 Goto             0   51    0               00 
  51 Sort             1   55    0               00 
  52 Column           1    2   13               00 r[13]=count(*)
REG[13] =  i:2
  53 ResultRow       13    1    0               00 output=r[13]
REG[13] =  i:2
  54 Next             1   52    0               00 
  55 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_22;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_22         00 
   2 Halt             0    0    0               00 
SQL: [;
SELECT DISTINCT p.b
      FROM a p CROSS JOIN a d
     WHERE d.b=p.b
       AND NOT EXISTS (
             SELECT b FROM a d1 WHERE d1.b=p.b
             EXCEPT
             SELECT b FROM a w
           );]
VDBE Trace:
   0 Init             0   56    0               00 Start at 56
  56 Transaction      0    0    3 3             01 usesStmtJournal=0
  57 TableLock        0    2    0 a             00 iDb=0 root=2 write=0
  58 Goto             0    1    0               00 
   1 OpenEphemeral    4    0    0 k(1,B)        08 nColumn=0
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; a
   3 OpenRead         1    2    0 1             00 root=2 iDb=0; a
   4 Explain          0    0    0 SCAN TABLE a AS p 00 
   5 Rewind           0   54    0               00 
   6 Integer          0    2    0               00 r[2]=0; Init EXISTS result
REG[2] =  i:0
   7 OpenEphemeral    5    1    0 k(1,B)        00 nColumn=1
   8 OpenRead         3    2    0 1             00 root=2 iDb=0; a
   9 Explain          2    0    0 SCAN TABLE a AS d1 00 
  10 Rewind           3   18    0               00 
  11 Column           3    0    3               00 r[3]=a.b
REG[3] =  i:1
  12 Column           0    0    4               00 r[4]=a.b
REG[4] =  i:1
  13 Ne               4   17    3 (BINARY)      51 if r[4]!=r[3] goto 17
REG[4] =  i:1
REG[3] =  i:1
  14 SCopy            3    5    0               00 r[5]=r[3]
REG[5] =  i:1
  15 MakeRecord       5    1    6               00 r[6]=mkrec(r[5])
REG[6] =  s2[0209..](8)
  16 IdxInsert        5    6    0               00 key=r[6]
REG[6] =  s2[0209..](8)
  17 Next             3   11    0               01 
  11 Column           3    0    3               00 r[3]=a.b
REG[3] =  i:1
  12 Column           0    0    4               00 r[4]=a.b
REG[4] =  i:1
  13 Ne               4   17    3 (BINARY)      51 if r[4]!=r[3] goto 17
REG[4] =  i:1
REG[3] =  i:1
  14 SCopy            3    5    0               00 r[5]=r[3]
REG[5] =  i:1
  15 MakeRecord       5    1    6               00 r[6]=mkrec(r[5])
REG[6] =  s2[0209..](8)
  16 IdxInsert        5    6    0               00 key=r[6]
REG[6] =  s2[0209..](8)
  17 Next             3   11    0               01 
  18 Close            3    0    0               00 
  19 OpenRead         2    2    0 1             00 root=2 iDb=0; a
  20 Explain          3    0    0 SCAN TABLE a AS w 00 
  21 Rewind           2   25    0               00 
  22 Column           2    0    5               00 r[5]=a.b
REG[5] =  i:1
  23 IdxDelete        5    5    1               00 key=r[5]
  24 Next             2   22    0               01 
  22 Column           2    0    5               00 r[5]=a.b
REG[5] =  i:1
  23 IdxDelete        5    5    1               00 key=r[5]
  24 Next             2   22    0               01 
  25 Close            2    0    0               00 
  26 Integer          1    7    0               00 r[7]=1; LIMIT counter
REG[7] =  i:1
  27 Rewind           5   32    0               00 
  32 Close            5    0    0               00 
  33 If               2   53    1               00 
REG[2] =  i:0
  34 Once             0   42    0               00 
  35 OpenAutoindex    6    2    0 k(2,B,)       00 nColumn=2; for a
  36 Rewind           1   42    0               00 
  37 Column           1    0    9               00 r[9]=a.b
REG[9] =  i:1
  38 Rowid            1   10    0               00 r[10]=rowid
REG[10] =  i:1
  39 MakeRecord       9    2    1               00 r[1]=mkrec(r[9..10])
REG[1] =  s3[030909...](8)
  40 IdxInsert        6    1    0               10 key=r[1]
REG[1] =  s3[030909...](8)
  41 Next             1   37    0               03 
  37 Column           1    0    9               00 r[9]=a.b
REG[9] =  i:1
  38 Rowid            1   10    0               00 r[10]=rowid
REG[10] =  i:2
  39 MakeRecord       9    2    1               00 r[1]=mkrec(r[9..10])
REG[1] =  s4[03090102....](8)
  40 IdxInsert        6    1    0               10 key=r[1]
REG[1] =  s4[03090102....](8)
  41 Next             1   37    0               03 
  42 Explain          0    1    1 SEARCH TABLE a AS d USING AUTOMATIC COVERING INDEX (b=?) 00 
  43 Column           0    0   11               00 r[11]=a.b
REG[11] =  i:1
  44 IsNull          11   53    0               00 if r[11]==NULL goto 53
REG[11] =  i:1
  45 SeekGE           6   53   11 1             00 key=r[11]
REG[11] =  i:1
  46 IdxGT            6   53   11 1             00 key=r[11]
  47 Copy            11   12    0               00 r[12]=r[11]
REG[12] =  i:1
  48 Found            4   52   12 1             00 key=r[12]
REG[12] =  i:1
  49 MakeRecord      12    1    1               00 r[1]=mkrec(r[12])
REG[1] =  s2[0209..](8)
  50 IdxInsert        4    1    0               00 key=r[1]
REG[1] =  s2[0209..](8)
  51 ResultRow       12    1    0               00 output=r[12]
REG[12] =  i:1
  52 Next             6   46    0               00 
  46 IdxGT            6   53   11 1             00 key=r[11]
  47 Copy            11   12    0               00 r[12]=r[11]
REG[12] =  i:1
  48 Found            4   52   12 1             00 key=r[12]
REG[12] =  i:1
  52 Next             6   46    0               00 
  53 Next             0    6    0               01 
   6 Integer          0    2    0               00 r[2]=0; Init EXISTS result
REG[2] =  i:0
   7 OpenEphemeral    5    1    0 k(1,B)        00 nColumn=1
   8 OpenRead         3    2    0 1             00 root=2 iDb=0; a
   9 Explain          2    0    0 SCAN TABLE a AS d1 00 
  10 Rewind           3   18    0               00 
  11 Column           3    0    3               00 r[3]=a.b
REG[3] =  i:1
  12 Column           0    0    4               00 r[4]=a.b
REG[4] =  i:1
  13 Ne               4   17    3 (BINARY)      51 if r[4]!=r[3] goto 17
REG[4] =  i:1
REG[3] =  i:1
  14 SCopy            3    5    0               00 r[5]=r[3]
REG[5] =  i:1
  15 MakeRecord       5    1    6               00 r[6]=mkrec(r[5])
REG[6] =  s2[0209..](8)
  16 IdxInsert        5    6    0               00 key=r[6]
REG[6] =  s2[0209..](8)
  17 Next             3   11    0               01 
  11 Column           3    0    3               00 r[3]=a.b
REG[3] =  i:1
  12 Column           0    0    4               00 r[4]=a.b
REG[4] =  i:1
  13 Ne               4   17    3 (BINARY)      51 if r[4]!=r[3] goto 17
REG[4] =  i:1
REG[3] =  i:1
  14 SCopy            3    5    0               00 r[5]=r[3]
REG[5] =  i:1
  15 MakeRecord       5    1    6               00 r[6]=mkrec(r[5])
REG[6] =  s2[0209..](8)
  16 IdxInsert        5    6    0               00 key=r[6]
REG[6] =  s2[0209..](8)
  17 Next             3   11    0               01 
  18 Close            3    0    0               00 
  19 OpenRead         2    2    0 1             00 root=2 iDb=0; a
  20 Explain          3    0    0 SCAN TABLE a AS w 00 
  21 Rewind           2   25    0               00 
  22 Column           2    0    5               00 r[5]=a.b
REG[5] =  i:1
  23 IdxDelete        5    5    1               00 key=r[5]
  24 Next             2   22    0               01 
  22 Column           2    0    5               00 r[5]=a.b
REG[5] =  i:1
  23 IdxDelete        5    5    1               00 key=r[5]
  24 Next             2   22    0               01 
  25 Close            2    0    0               00 
  26 Integer          1    7    0               00 r[7]=1; LIMIT counter
REG[7] =  i:1
  27 Rewind           5   32    0               00 
  32 Close            5    0    0               00 
  33 If               2   53    1               00 
REG[2] =  i:0
  34 Once             0   42    0               00 
  42 Explain          0    1    1 SEARCH TABLE a AS d USING AUTOMATIC COVERING INDEX (b=?) 00 
  43 Column           0    0   11               00 r[11]=a.b
REG[11] =  i:1
  44 IsNull          11   53    0               00 if r[11]==NULL goto 53
REG[11] =  i:1
  45 SeekGE           6   53   11 1             00 key=r[11]
REG[11] =  i:1
  46 IdxGT            6   53   11 1             00 key=r[11]
  47 Copy            11   12    0               00 r[12]=r[11]
REG[12] =  i:1
  48 Found            4   52   12 1             00 key=r[12]
REG[12] =  i:1
  52 Next             6   46    0               00 
  46 IdxGT            6   53   11 1             00 key=r[11]
  47 Copy            11   12    0               00 r[12]=r[11]
REG[12] =  i:1
  48 Found            4   52   12 1             00 key=r[12]
REG[12] =  i:1
  52 Next             6   46    0               00 
  53 Next             0    6    0               01 
  54 Close            0    0    0               00 
  55 Halt             0    0    0               00 
SQL: [;
-- BEFORE triggers that invoke raise(ignore).  The effect of
    -- these triggers should be to make INSERTs, UPDATEs, and DELETEs
    -- into no-ops.
    CREATE TRIGGER t1_mirror BEFORE UPDATE ON temp_store_directory_test BEGIN
      SELECT raise(ignore);
    END;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1    3 3             01 usesStmtJournal=0
  17 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  18 Goto             0    1    0               00 
   1 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   4 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   5 String8          0    3    0 t1_mirror     00 r[3]='t1_mirror'
REG[3] =   t9[t1_mirror](8)
   6 String8          0    4    0 temp_store_directory_test 00 r[4]='temp_store_directory_test'
REG[4] =   t25[temp_store_dire](8)
   7 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   8 String8          0    6    0 CREATE TRIGGER t1_mirror BEFORE UPDATE ON temp_store_directory_test BEGIN
      SELECT raise(ignore);
    END 00 r[6]='CREATE TRIGGER t1_mirror BEFORE UPDATE ON temp_store_directory_test BEGIN
      SELECT raise(
REG[6] =   t109[CREATE TRIGGER ](8)
   9 MakeRecord       2    5    8 BBBDB         00 r[8]=mkrec(r[2..6])
REG[8] =  s157[071B1F3F088167747269676765727431...?..gtriggert1](8)
  10 Insert           0    8    1               18 intkey=r[1] data=r[8]
REG[8] =  s157[071B1F3F088167747269676765727431...?..gtriggert1](8)
REG[1] =  i:3
  11 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  12 Close            0    0    0               00 
  13 SetCookie        0    1    4               00 
  14 ParseSchema      0    0    0 type='trigger' AND name='t1_mirror' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 3             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  19 String8          0    4    0 t1_mirror     00 r[4]='t1_mirror'
REG[4] =   t9[t1_mirror](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s9[t1_mirror](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t9[t1_mirror](8)
REG[3] =   s9[t1_mirror](8)
   9 Copy             3    5    0               00 r[5]=r[3]
REG[5] =   s9[t1_mirror](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:0
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s109[CREATE TRIGGER ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s9[t1_mirror](8)
REG[6] =  i:0
REG[7] =   s109[CREATE TRIGGER ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [CREATE TRIGGER t1_mirror2 BEFORE DELETE ON temp_store_directory_test BEGIN
      SELECT raise(ignore);
    END;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1    4 3             01 usesStmtJournal=0
  17 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  18 Goto             0    1    0               00 
   1 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   4 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   5 String8          0    3    0 t1_mirror2    00 r[3]='t1_mirror2'
REG[3] =   t10[t1_mirror2](8)
   6 String8          0    4    0 temp_store_directory_test 00 r[4]='temp_store_directory_test'
REG[4] =   t25[temp_store_dire](8)
   7 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   8 String8          0    6    0 CREATE TRIGGER t1_mirror2 BEFORE DELETE ON temp_store_directory_test BEGIN
      SELECT raise(ignore);
    END 00 r[6]='CREATE TRIGGER t1_mirror2 BEFORE DELETE ON temp_store_directory_test BEGIN
      SELECT raise
REG[6] =   t110[CREATE TRIGGER ](8)
   9 MakeRecord       2    5    8 BBBDB         00 r[8]=mkrec(r[2..6])
REG[8] =  s159[071B213F088169747269676765727431..!?..itriggert1](8)
  10 Insert           0    8    1               18 intkey=r[1] data=r[8]
REG[8] =  s159[071B213F088169747269676765727431..!?..itriggert1](8)
REG[1] =  i:4
  11 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  12 Close            0    0    0               00 
  13 SetCookie        0    1    5               00 
  14 ParseSchema      0    0    0 type='trigger' AND name='t1_mirror2' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    5 3             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  19 String8          0    4    0 t1_mirror2    00 r[4]='t1_mirror2'
REG[4] =   t10[t1_mirror2](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s9[t1_mirror](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t10[t1_mirror2](8)
REG[3] =   s9[t1_mirror](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s10[t1_mirror2](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t10[t1_mirror2](8)
REG[3] =   s10[t1_mirror2](8)
   9 Copy             3    5    0               00 r[5]=r[3]
REG[5] =   s10[t1_mirror2](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:0
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s110[CREATE TRIGGER ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s10[t1_mirror2](8)
REG[6] =  i:0
REG[7] =   s110[CREATE TRIGGER ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
UPDATE a SET b=-9223372036854775808, b=0;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    1    5 3             01 usesStmtJournal=0
  22 TableLock        0    2    1 a             00 iDb=0 root=2 write=1
  23 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; a
   3 Explain          0    0    0 SCAN TABLE a  00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:2
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  10 OpenWrite        0    2    0 1             00 root=2 iDb=0; a
  11 RowSetRead       1   18    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  12 NotExists        0   11    2               00 intkey=r[2]
REG[2] =  i:1
  13 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  14 MakeRecord       3    1    5               00 r[5]=mkrec(r[3])
REG[5] =  s2[0208..](8)
  15 Insert           0    5    2 a             05 intkey=r[2] data=r[5]
REG[5] =  s2[0208..](8)
REG[2] =  i:1
  16 AddImm           4    1    0               00 r[4]=r[4]+1
REG[4] =  i:0
  17 Goto             0   11    0               00 
  11 RowSetRead       1   18    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  12 NotExists        0   11    2               00 intkey=r[2]
REG[2] =  i:2
  13 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  14 MakeRecord       3    1    5               00 r[5]=mkrec(r[3])
REG[5] =  s2[0208..](8)
  15 Insert           0    5    2 a             05 intkey=r[2] data=r[5]
REG[5] =  s2[0208..](8)
REG[2] =  i:2
  16 AddImm           4    1    0               00 r[4]=r[4]+1
REG[4] =  i:1
  17 Goto             0   11    0               00 
  11 RowSetRead       1   18    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  18 Close            0    0    0               00 
  19 ResultRow        4    1    0               00 output=r[4]
REG[4] =  i:2
  20 Halt             0    0    0               00 
SQL: [SELECT randomblob($pgsz);]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 Variable         1    2    0 $pgsz         00 r[2]=parameter(1,$pgsz)
REG[2] =  NULL
   5 Goto             0    1    0               00 
   1 Function0        1    2    1 randomblob(1) 01 r[1]=func(r[2])
REG[2] =  NULL
REG[1] =  z1[E9.](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  z1[E9.](8)
   3 Halt             0    0    0               00 
SQL: [PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0    5 3             01 usesStmtJournal=0
  24 Transaction      1    0    0 3             01 usesStmtJournal=0
  25 Goto             0    1    0               00 
   1 Integer        100    1    0               00 r[1]=100
REG[1] =  i:100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
REG[1] =  i:100
   4 IntegrityCk      2    3    1 [2,1]         00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
REG[2] =  NULL
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
REG[1] =  i:100
  12 IntegrityCk      2    1    1 ]             01 
  13 IsNull           2   18    0               00 if r[2]==NULL goto 18
REG[2] =  NULL
  18 AddImm           1 -100    0               00 r[1]=r[1]+-100
REG[1] =  i:100
  19 If               1   22    0               00 
REG[1] =  i:0
  20 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
  21 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
  22 Halt             0    0    0               00 
SQL: [SELECT randomblob($pgsz);]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 Variable         1    2    0 $pgsz         00 r[2]=parameter(1,$pgsz)
REG[2] =  NULL
   5 Goto             0    1    0               00 
   1 Function0        1    2    1 randomblob(1) 01 r[1]=func(r[2])
REG[2] =  NULL
REG[1] =  z1[41A](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  z1[41A](8)
   3 Halt             0    0    0               00 
SQL: [;
SELECT b, b FROM a UNION ALL SELECT b, b FROM a ORDER BY 1, 2
  ;]
VDBE Trace:
   0 Init             0   71    0               00 Start at 71
  71 Transaction      0    0    5 3             01 usesStmtJournal=0
  72 TableLock        0    2    0 a             00 iDb=0 root=2 write=0
  73 Goto             0    1    0               00 
   1 InitCoroutine    1   22    2               00 left SELECT
  22 InitCoroutine    2   65   23               00 right SELECT
  65 Yield            1   51    0               00 
REG[1] =  i:1
REG[1] =  i:65
   2 SorterOpen       2    5    0 k(2,B,B)      00 
   3 OpenRead         1    2    0 1             00 root=2 iDb=0; a
   4 Explain          1    0    0 SCAN TABLE a  00 
   5 Rewind           1   13    0               00 
   6 Column           1    0    7               00 r[7]=a.b
REG[7] =  i:0
   7 Copy             7    8    0               00 r[8]=r[7]
REG[8] =  i:0
   8 Copy             7    5    0               00 r[5]=r[7]
REG[5] =  i:0
   9 Copy             8    6    0               00 r[6]=r[8]
REG[6] =  i:0
  10 MakeRecord       5    4    9               00 r[9]=mkrec(r[5..8])
REG[9] =  s5[0508080808.....](8)
  11 SorterInsert     2    9    0               00 
REG[9] =  s5[0508080808.....](8)
  12 Next             1    6    0               01 
   6 Column           1    0    7               00 r[7]=a.b
REG[7] =  i:0
   7 Copy             7    8    0               00 r[8]=r[7]
REG[8] =  i:0
   8 Copy             7    5    0               00 r[5]=r[7]
REG[5] =  i:0
   9 Copy             8    6    0               00 r[6]=r[8]
REG[6] =  i:0
  10 MakeRecord       5    4    9               00 r[9]=mkrec(r[5..8])
REG[9] =  s5[0508080808.....](8)
  11 SorterInsert     2    9    0               00 
REG[9] =  s5[0508080808.....](8)
  12 Next             1    6    0               01 
  13 Close            1    0    0               00 
  14 OpenPseudo       3   10    5               00 5 columns in r[10]
  15 SorterSort       2   21    0               00 
  16 SorterData       2   10    3               00 r[10]=data
  17 Column           3    2    7               00 r[7]=b
REG[7] =  i:0
  18 Column           3    3    8               00 r[8]=b
REG[8] =  i:0
  19 Yield            1    0    0               00 
REG[1] =  i:65
REG[1] =  i:19
  66 Yield            2   54    0               00 
REG[2] =  i:22
REG[2] =  i:66
  23 SorterOpen       4    5    0 k(2,B,B)      00 
  24 OpenRead         0    2    0 1             00 root=2 iDb=0; a
  25 Explain          2    0    0 SCAN TABLE a  00 
  26 Rewind           0   34    0               00 
  27 Column           0    0   13               00 r[13]=a.b
REG[13] =  i:0
  28 Copy            13   14    0               00 r[14]=r[13]
REG[14] =  i:0
  29 Copy            13   11    0               00 r[11]=r[13]
REG[11] =  i:0
  30 Copy            14   12    0               00 r[12]=r[14]
REG[12] =  i:0
  31 MakeRecord      11    4   15               00 r[15]=mkrec(r[11..14])
REG[15] =  s5[0508080808.....](8)
  32 SorterInsert     4   15    0               00 
REG[15] =  s5[0508080808.....](8)
  33 Next             0   27    0               01 
  27 Column           0    0   13               00 r[13]=a.b
REG[13] =  i:0
  28 Copy            13   14    0               00 r[14]=r[13]
REG[14] =  i:0
  29 Copy            13   11    0               00 r[11]=r[13]
REG[11] =  i:0
  30 Copy            14   12    0               00 r[12]=r[14]
REG[12] =  i:0
  31 MakeRecord      11    4   15               00 r[15]=mkrec(r[11..14])
REG[15] =  s5[0508080808.....](8)
  32 SorterInsert     4   15    0               00 
REG[15] =  s5[0508080808.....](8)
  33 Next             0   27    0               01 
  34 Close            0    0    0               00 
  35 OpenPseudo       5   16    5               00 5 columns in r[16]
  36 SorterSort       4   42    0               00 
  37 SorterData       4   16    5               00 r[16]=data
  38 Column           5    2   13               00 r[13]=b
REG[13] =  i:0
  39 Column           5    3   14               00 r[14]=b
REG[14] =  i:0
  40 Yield            2    0    0               00 
REG[2] =  i:66
REG[2] =  i:40
  67 Permutation      0    0    0 [0]           00 
  68 Compare          7   13    2 k(3,B,B,)     01 r[7..8] <-> r[13..14]
REG[7] =  i:0
REG[13] =  i:0
REG[8] =  i:0
REG[14] =  i:0
  69 Jump            58   58   62               00 
  58 Gosub            3   44    0               00 
REG[3] =  i:58
  44 ResultRow        7    2    0               00 output=r[7..8]
REG[7] =  i:0
REG[8] =  i:0
  45 Return           3    0    0               00 
REG[3] =  i:58
  59 Yield            1   50    0               00 
REG[1] =  i:19
REG[1] =  i:59
  20 SorterNext       2   16    0               00 
  16 SorterData       2   10    3               00 r[10]=data
  17 Column           3    2    7               00 r[7]=b
REG[7] =  i:0
  18 Column           3    3    8               00 r[8]=b
REG[8] =  i:0
  19 Yield            1    0    0               00 
REG[1] =  i:59
REG[1] =  i:19
  60 Goto             0   67    0               00 
  67 Permutation      0    0    0 [0]           00 
  68 Compare          7   13    2 k(3,B,B,)     01 r[7..8] <-> r[13..14]
REG[7] =  i:0
REG[13] =  i:0
REG[8] =  i:0
REG[14] =  i:0
  69 Jump            58   58   62               00 
  58 Gosub            3   44    0               00 
REG[3] =  i:58
  44 ResultRow        7    2    0               00 output=r[7..8]
REG[7] =  i:0
REG[8] =  i:0
  45 Return           3    0    0               00 
REG[3] =  i:58
  59 Yield            1   50    0               00 
REG[1] =  i:19
REG[1] =  i:59
  20 SorterNext       2   16    0               00 
  21 EndCoroutine     1    0    0               00 
REG[1] =  i:59
  50 Gosub            4   47    0               00 
REG[4] =  i:50
  47 ResultRow       13    2    0               00 output=r[13..14]
REG[13] =  i:0
REG[14] =  i:0
  48 Return           4    0    0               00 
REG[4] =  i:50
  51 Yield            2   70    0               00 
REG[2] =  i:40
REG[2] =  i:51
  41 SorterNext       4   37    0               00 
  37 SorterData       4   16    5               00 r[16]=data
  38 Column           5    2   13               00 r[13]=b
REG[13] =  i:0
  39 Column           5    3   14               00 r[14]=b
REG[14] =  i:0
  40 Yield            2    0    0               00 
REG[2] =  i:51
REG[2] =  i:40
  52 Goto             0   50    0               00 
  50 Gosub            4   47    0               00 
REG[4] =  i:50
  47 ResultRow       13    2    0               00 output=r[13..14]
REG[13] =  i:0
REG[14] =  i:0
  48 Return           4    0    0               00 
REG[4] =  i:50
  51 Yield            2   70    0               00 
REG[2] =  i:40
REG[2] =  i:51
  41 SorterNext       4   37    0               00 
  42 EndCoroutine     2    0    0               00 
REG[2] =  i:51
  70 Halt             0    0    0               00 
SQL: [CREATE TABLE t1_bi([t1_ai] integer, t1_bu, PRIMARY KEY([t1_ai]));]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      0    1    5 3             01 usesStmtJournal=0
  33 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  34 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:5
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:5
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:5
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:5
  18 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  19 IsNull           5   28    0               00 if r[5]==NULL goto 28
REG[5] =  i:5
  20 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  21 String8          0    7    0 t1_bi         00 r[7]='t1_bi'
REG[7] =   t5[t1_bi](8)
  22 String8          0    8    0 t1_bi         00 r[8]='t1_bi'
REG[8] =   t5[t1_bi](8)
  23 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  24 String8          0   10    0 CREATE TABLE t1_bi([t1_ai] integer, t1_bu, PRIMARY KEY([t1_ai])) 00 r[10]='CREATE TABLE t1_bi([t1_ai] integer, t1_bu, PRIMARY KEY([t1_ai]))'
REG[10] =   t64[CREATE TABLE t1](8)
  25 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s87[0717171701810D7461626C6574315F62.......tablet1_b](8)
  26 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s87[0717171701810D7461626C6574315F62.......tablet1_b](8)
REG[5] =  i:5
  27 AddImm          12    1    0               00 r[12]=r[12]+1
REG[12] =  i:0
  28 Close            1    0    0               00 
  29 SetCookie        0    1    6               00 
  30 ParseSchema      0    0    0 tbl_name='t1_bi' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 3             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1_bi         00 r[2]='t1_bi'
REG[2] =   t5[t1_bi](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[t1_bi](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[t1_bi](8)
REG[1] =   s25[temp_store_dire](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[t1_bi](8)
REG[1] =   s25[temp_store_dire](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[t1_bi](8)
REG[1] =   s25[temp_store_dire](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[t1_bi](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[t1_bi](8)
REG[1] =   s5[t1_bi](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s5[t1_bi](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s64[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s5[t1_bi](8)
REG[6] =  i:4
REG[7] =   s64[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  31 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_42;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_42         00 
   2 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    6 3             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s17[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:2
REG[3] =   s17[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s25[temp_store_dire](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s119[CREATE TABLE te](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s25[temp_store_dire](8)
REG[2] =  i:3
REG[3] =   s119[CREATE TABLE te](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s9[t1_mirror](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s109[CREATE TRIGGER ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s9[t1_mirror](8)
REG[2] =  i:0
REG[3] =   s109[CREATE TRIGGER ](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s10[t1_mirror2](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s110[CREATE TRIGGER ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s10[t1_mirror2](8)
REG[2] =  i:0
REG[3] =   s110[CREATE TRIGGER ](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s5[t1_bi](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s64[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s5[t1_bi](8)
REG[2] =  i:4
REG[3] =   s64[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [SELECT t PX, t QX FROM temp_store_directory_test UNION ALL SELECT t XX, t YX FROM temp_store_directory_test
    ORDER BY XX, QX
  ;]
VDBE Trace:
   0 Init             0   71    0               00 Start at 71
  71 Transaction      0    0    6 3             01 usesStmtJournal=0
  72 TableLock        0    3    0 temp_store_directory_test 00 iDb=0 root=3 write=0
  73 Goto             0    1    0               00 
   1 InitCoroutine    1   22    2               00 left SELECT
  22 InitCoroutine    2   65   23               00 right SELECT
  65 Yield            1   51    0               00 
REG[1] =  i:1
REG[1] =  i:65
   2 SorterOpen       2    5    0 k(2,B,B)      00 
   3 OpenRead         1    3    0 2             00 root=3 iDb=0; temp_store_directory_test
   4 Explain          1    0    0 SCAN TABLE temp_store_directory_test 00 
   5 Rewind           1   13    0               00 
  13 Close            1    0    0               00 
  14 OpenPseudo       3   10    5               00 5 columns in r[10]
  15 SorterSort       2   21    0               00 
  21 EndCoroutine     1    0    0               00 
REG[1] =  i:65
  51 Yield            2   70    0               00 
REG[2] =  i:22
REG[2] =  i:51
  23 SorterOpen       4    5    0 k(2,B,B)      00 
  24 OpenRead         0    3    0 2             00 root=3 iDb=0; temp_store_directory_test
  25 Explain          2    0    0 SCAN TABLE temp_store_directory_test 00 
  26 Rewind           0   34    0               00 
  34 Close            0    0    0               00 
  35 OpenPseudo       5   16    5               00 5 columns in r[16]
  36 SorterSort       4   42    0               00 
  42 EndCoroutine     2    0    0               00 
REG[2] =  i:51
  70 Halt             0    0    0               00 
SQL: [SELECT b PX, b QX FROM a UNION ALL SELECT b XX, b YX FROM a
    ORDER BY a.b, XX
  ;]
VDBE Trace:
   0 Init             0   71    0               00 Start at 71
  71 Transaction      0    0    6 3             01 usesStmtJournal=0
  72 TableLock        0    2    0 a             00 iDb=0 root=2 write=0
  73 Goto             0    1    0               00 
   1 InitCoroutine    1   22    2               00 left SELECT
  22 InitCoroutine    2   65   23               00 right SELECT
  65 Yield            1   51    0               00 
REG[1] =  i:1
REG[1] =  i:65
   2 SorterOpen       2    5    0 k(2,B,B)      00 
   3 OpenRead         1    2    0 1             00 root=2 iDb=0; a
   4 Explain          1    0    0 SCAN TABLE a  00 
   5 Rewind           1   13    0               00 
   6 Column           1    0    7               00 r[7]=a.b
REG[7] =  i:0
   7 Copy             7    8    0               00 r[8]=r[7]
REG[8] =  i:0
   8 Copy             7    5    0               00 r[5]=r[7]
REG[5] =  i:0
   9 Copy             7    6    0               00 r[6]=r[7]
REG[6] =  i:0
  10 MakeRecord       5    4    9               00 r[9]=mkrec(r[5..8])
REG[9] =  s5[0508080808.....](8)
  11 SorterInsert     2    9    0               00 
REG[9] =  s5[0508080808.....](8)
  12 Next             1    6    0               01 
   6 Column           1    0    7               00 r[7]=a.b
REG[7] =  i:0
   7 Copy             7    8    0               00 r[8]=r[7]
REG[8] =  i:0
   8 Copy             7    5    0               00 r[5]=r[7]
REG[5] =  i:0
   9 Copy             7    6    0               00 r[6]=r[7]
REG[6] =  i:0
  10 MakeRecord       5    4    9               00 r[9]=mkrec(r[5..8])
REG[9] =  s5[0508080808.....](8)
  11 SorterInsert     2    9    0               00 
REG[9] =  s5[0508080808.....](8)
  12 Next             1    6    0               01 
  13 Close            1    0    0               00 
  14 OpenPseudo       3   10    5               00 5 columns in r[10]
  15 SorterSort       2   21    0               00 
  16 SorterData       2   10    3               00 r[10]=data
  17 Column           3    2    7               00 r[7]=PX
REG[7] =  i:0
  18 Column           3    3    8               00 r[8]=QX
REG[8] =  i:0
  19 Yield            1    0    0               00 
REG[1] =  i:65
REG[1] =  i:19
  66 Yield            2   54    0               00 
REG[2] =  i:22
REG[2] =  i:66
  23 SorterOpen       4    5    0 k(2,B,B)      00 
  24 OpenRead         0    2    0 1             00 root=2 iDb=0; a
  25 Explain          2    0    0 SCAN TABLE a  00 
  26 Rewind           0   34    0               00 
  27 Column           0    0   13               00 r[13]=a.b
REG[13] =  i:0
  28 Copy            13   14    0               00 r[14]=r[13]
REG[14] =  i:0
  29 Copy            13   11    0               00 r[11]=r[13]
REG[11] =  i:0
  30 Copy            13   12    0               00 r[12]=r[13]
REG[12] =  i:0
  31 MakeRecord      11    4   15               00 r[15]=mkrec(r[11..14])
REG[15] =  s5[0508080808.....](8)
  32 SorterInsert     4   15    0               00 
REG[15] =  s5[0508080808.....](8)
  33 Next             0   27    0               01 
  27 Column           0    0   13               00 r[13]=a.b
REG[13] =  i:0
  28 Copy            13   14    0               00 r[14]=r[13]
REG[14] =  i:0
  29 Copy            13   11    0               00 r[11]=r[13]
REG[11] =  i:0
  30 Copy            13   12    0               00 r[12]=r[13]
REG[12] =  i:0
  31 MakeRecord      11    4   15               00 r[15]=mkrec(r[11..14])
REG[15] =  s5[0508080808.....](8)
  32 SorterInsert     4   15    0               00 
REG[15] =  s5[0508080808.....](8)
  33 Next             0   27    0               01 
  34 Close            0    0    0               00 
  35 OpenPseudo       5   16    5               00 5 columns in r[16]
  36 SorterSort       4   42    0               00 
  37 SorterData       4   16    5               00 r[16]=data
  38 Column           5    2   13               00 r[13]=XX
REG[13] =  i:0
  39 Column           5    3   14               00 r[14]=YX
REG[14] =  i:0
  40 Yield            2    0    0               00 
REG[2] =  i:66
REG[2] =  i:40
  67 Permutation      0    0    0 [0]           00 
  68 Compare          7   13    2 k(3,B,B,)     01 r[7..8] <-> r[13..14]
REG[7] =  i:0
REG[13] =  i:0
REG[7] =  i:0
REG[13] =  i:0
  69 Jump            58   58   62               00 
  58 Gosub            3   44    0               00 
REG[3] =  i:58
  44 ResultRow        7    2    0               00 output=r[7..8]
REG[7] =  i:0
REG[8] =  i:0
  45 Return           3    0    0               00 
REG[3] =  i:58
  59 Yield            1   50    0               00 
REG[1] =  i:19
REG[1] =  i:59
  20 SorterNext       2   16    0               00 
  16 SorterData       2   10    3               00 r[10]=data
  17 Column           3    2    7               00 r[7]=PX
REG[7] =  i:0
  18 Column           3    3    8               00 r[8]=QX
REG[8] =  i:0
  19 Yield            1    0    0               00 
REG[1] =  i:59
REG[1] =  i:19
  60 Goto             0   67    0               00 
  67 Permutation      0    0    0 [0]           00 
  68 Compare          7   13    2 k(3,B,B,)     01 r[7..8] <-> r[13..14]
REG[7] =  i:0
REG[13] =  i:0
REG[7] =  i:0
REG[13] =  i:0
  69 Jump            58   58   62               00 
  58 Gosub            3   44    0               00 
REG[3] =  i:58
  44 ResultRow        7    2    0               00 output=r[7..8]
REG[7] =  i:0
REG[8] =  i:0
  45 Return           3    0    0               00 
REG[3] =  i:58
  59 Yield            1   50    0               00 
REG[1] =  i:19
REG[1] =  i:59
  20 SorterNext       2   16    0               00 
  21 EndCoroutine     1    0    0               00 
REG[1] =  i:59
  50 Gosub            4   47    0               00 
REG[4] =  i:50
  47 ResultRow       13    2    0               00 output=r[13..14]
REG[13] =  i:0
REG[14] =  i:0
  48 Return           4    0    0               00 
REG[4] =  i:50
  51 Yield            2   70    0               00 
REG[2] =  i:40
REG[2] =  i:51
  41 SorterNext       4   37    0               00 
  37 SorterData       4   16    5               00 r[16]=data
  38 Column           5    2   13               00 r[13]=XX
REG[13] =  i:0
  39 Column           5    3   14               00 r[14]=YX
REG[14] =  i:0
  40 Yield            2    0    0               00 
REG[2] =  i:51
REG[2] =  i:40
  52 Goto             0   50    0               00 
  50 Gosub            4   47    0               00 
REG[4] =  i:50
  47 ResultRow       13    2    0               00 output=r[13..14]
REG[13] =  i:0
REG[14] =  i:0
  48 Return           4    0    0               00 
REG[4] =  i:50
  51 Yield            2   70    0               00 
REG[2] =  i:40
REG[2] =  i:51
  41 SorterNext       4   37    0               00 
  42 EndCoroutine     2    0    0               00 
REG[2] =  i:51
  70 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_59;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_59         00 
   2 Halt             0    0    0               00 
SQL: [;
UPDATE temp_store_directory_test SET t1=4294967296, t1=2147483647;]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    1    6 3             01 usesStmtJournal=0
  32 TableLock        0    3    1 temp_store_directory_test 00 iDb=0 root=3 write=1
  33 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    3    0 0             00 root=3 iDb=0; temp_store_directory_test
   3 Explain          0    0    0 SCAN TABLE temp_store_directory_test 00 
   4 Rewind           0    8    0               00 
   8 Close            0    0    0               00 
   9 Integer          0   10    0               00 r[10]=0
REG[10] =  i:0
  10 OpenWrite        0    3    0 3             00 root=3 iDb=0; temp_store_directory_test
  11 RowSetRead       1   28    2               00 r[2]=rowset(1)
REG[1] =  NULL
REG[2] =  NULL
  28 Close            0    0    0               00 
  29 ResultRow       10    1    0               00 output=r[10]
REG[10] =  i:0
  30 Halt             0    0    0               00 
SQL: [PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0    6 3             01 usesStmtJournal=0
  24 Transaction      1    0    0 3             01 usesStmtJournal=0
  25 Goto             0    1    0               00 
   1 Integer        100    1    0               00 r[1]=100
REG[1] =  i:100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
REG[1] =  i:100
   4 IntegrityCk      2    4    1 [3,2,1]       00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
REG[2] =  NULL
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
REG[1] =  i:100
  12 IntegrityCk      2    1    1 ]             01 
  13 IsNull           2   18    0               00 if r[2]==NULL goto 18
REG[2] =  NULL
  18 AddImm           1 -100    0               00 r[1]=r[1]+-100
REG[1] =  i:100
  19 If               1   22    0               00 
REG[1] =  i:0
  20 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
  21 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
  22 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    6 3             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s17[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:2
REG[3] =   s17[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s25[temp_store_dire](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s119[CREATE TABLE te](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s25[temp_store_dire](8)
REG[2] =  i:3
REG[3] =   s119[CREATE TABLE te](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s9[t1_mirror](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s109[CREATE TRIGGER ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s9[t1_mirror](8)
REG[2] =  i:0
REG[3] =   s109[CREATE TRIGGER ](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s10[t1_mirror2](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s110[CREATE TRIGGER ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s10[t1_mirror2](8)
REG[2] =  i:0
REG[3] =   s110[CREATE TRIGGER ](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s5[t1_bi](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s64[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s5[t1_bi](8)
REG[2] =  i:4
REG[3] =   s64[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    6 3             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s17[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:2
REG[3] =   s17[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s25[temp_store_dire](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s119[CREATE TABLE te](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s25[temp_store_dire](8)
REG[2] =  i:3
REG[3] =   s119[CREATE TABLE te](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s9[t1_mirror](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s109[CREATE TRIGGER ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s9[t1_mirror](8)
REG[2] =  i:0
REG[3] =   s109[CREATE TRIGGER ](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s10[t1_mirror2](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s110[CREATE TRIGGER ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s10[t1_mirror2](8)
REG[2] =  i:0
REG[3] =   s110[CREATE TRIGGER ](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s5[t1_bi](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s64[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s5[t1_bi](8)
REG[2] =  i:4
REG[3] =   s64[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [SELECT randomblob($pgsz);]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 Variable         1    2    0 $pgsz         00 r[2]=parameter(1,$pgsz)
REG[2] =  NULL
   5 Goto             0    1    0               00 
   1 Function0        1    2    1 randomblob(1) 01 r[1]=func(r[2])
REG[2] =  NULL
REG[1] =  z1[14.](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  z1[14.](8)
   3 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1_bi' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 3             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1_bi         00 r[2]='t1_bi'
REG[2] =   t5[t1_bi](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[t1_bi](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[t1_bi](8)
REG[1] =   s25[temp_store_dire](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[t1_bi](8)
REG[1] =   s25[temp_store_dire](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[t1_bi](8)
REG[1] =   s25[temp_store_dire](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[t1_bi](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[t1_bi](8)
REG[1] =   s5[t1_bi](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s5[t1_bi](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s64[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s5[t1_bi](8)
REG[6] =  i:4
REG[7] =   s64[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
SELECT temp_table/temp_table FROM temp_store_directory_test;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    6 3             01 usesStmtJournal=0
  11 TableLock        0    3    0 temp_store_directory_test 00 iDb=0 root=3 write=0
  12 Goto             0    1    0               00 
   1 OpenRead         0    3    0 0             00 root=3 iDb=0; temp_store_directory_test
   2 Explain          0    0    0 SCAN TABLE temp_store_directory_test 00 
   3 Rewind           0    8    0               00 
   8 Close            0    0    0               00 
   9 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_52;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_52         00 
   2 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_13;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_13         00 
   2 Halt             0    0    0               00 
SQL: [;
UPDATE temp_store_directory_test SET t='abc', t='xyz';]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    1    6 3             01 usesStmtJournal=0
  32 TableLock        0    3    1 temp_store_directory_test 00 iDb=0 root=3 write=1
  33 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    3    0 0             00 root=3 iDb=0; temp_store_directory_test
   3 Explain          0    0    0 SCAN TABLE temp_store_directory_test 00 
   4 Rewind           0    8    0               00 
   8 Close            0    0    0               00 
   9 Integer          0   10    0               00 r[10]=0
REG[10] =  i:0
  10 OpenWrite        0    3    0 3             00 root=3 iDb=0; temp_store_directory_test
  11 RowSetRead       1   28    2               00 r[2]=rowset(1)
REG[1] =  NULL
REG[2] =  NULL
  28 Close            0    0    0               00 
  29 ResultRow       10    1    0               00 output=r[10]
REG[10] =  i:0
  30 Halt             0    0    0               00 
SQL: [;
SELECT b!=b FROM a;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    6 3             01 usesStmtJournal=0
  11 TableLock        0    2    0 a             00 iDb=0 root=2 write=0
  12 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; a
   2 Explain          0    0    0 SCAN TABLE a  00 
   3 Rewind           0    8    0               00 
   4 Column           0    0    2               00 r[2]=a.b
REG[2] =  i:0
   5 Ne               2    1    2 (BINARY)      61 if r[2]!=r[2] goto 1
REG[2] =  i:0
REG[2] =  i:0
REG[1] =  i:0
   6 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   7 Next             0    4    0               01 
   4 Column           0    0    2               00 r[2]=a.b
REG[2] =  i:0
   5 Ne               2    1    2 (BINARY)      61 if r[2]!=r[2] goto 1
REG[2] =  i:0
REG[2] =  i:0
REG[1] =  i:0
   6 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   7 Next             0    4    0               01 
   8 Close            0    0    0               00 
   9 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_18;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_18         00 
   2 Halt             0    0    0               00 
SQL: [;
SELECT t is null FROM temp_store_directory_test;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    6 3             01 usesStmtJournal=0
  13 TableLock        0    3    0 temp_store_directory_test 00 iDb=0 root=3 write=0
  14 Goto             0    1    0               00 
   1 OpenRead         0    3    0 2             00 root=3 iDb=0; temp_store_directory_test
   2 Explain          0    0    0 SCAN TABLE temp_store_directory_test 00 
   3 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
SELECT b||' hi '||b FROM a;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    6 3             01 usesStmtJournal=0
  12 TableLock        0    2    0 a             00 iDb=0 root=2 write=0
  13 String8          0    4    0  hi           00 r[4]=' hi '
REG[4] =   t4[ hi ](8)
  14 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; a
   2 Explain          0    0    0 SCAN TABLE a  00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    3               00 r[3]=a.b
REG[3] =  i:0
   5 Concat           4    3    2               00 r[2]=r[3]+r[4]
REG[4] =   t4[ hi ](8)
REG[3] =  i:0
REG[2] =   s5[0 hi ](8)
   6 Concat           3    2    1               00 r[1]=r[2]+r[3]
REG[3] =  si:0
REG[2] =   s5[0 hi ](8)
REG[1] =   s6[0 hi 0](8)
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s6[0 hi 0](8)
   8 Next             0    4    0               01 
   4 Column           0    0    3               00 r[3]=a.b
REG[3] =  i:0
   5 Concat           4    3    2               00 r[2]=r[3]+r[4]
REG[4] =   t4[ hi ](8)
REG[3] =  i:0
REG[2] =   s5[0 hi ](8)
   6 Concat           3    2    1               00 r[1]=r[2]+r[3]
REG[3] =  si:0
REG[2] =   s5[0 hi ](8)
REG[1] =   s6[0 hi 0](8)
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s6[0 hi 0](8)
   8 Next             0    4    0               01 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='t1b' AND type='index' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 3             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1b           00 r[2]='t1b'
REG[2] =   t3[t1b](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[t1b](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[t1b](8)
REG[1] =   s25[temp_store_dire](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s9[t1_mirror](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[t1b](8)
REG[1] =   s9[t1_mirror](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s10[t1_mirror2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[t1b](8)
REG[1] =   s10[t1_mirror2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s5[t1_bi](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[t1b](8)
REG[1] =   s5[t1_bi](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_26;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_26         00 
   2 Halt             0    0    0               00 
SQL: [;
SELECT coalesce(t1>t1,99) FROM temp_store_directory_test;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    6 3             01 usesStmtJournal=0
  13 TableLock        0    3    0 temp_store_directory_test 00 iDb=0 root=3 write=0
  14 Goto             0    1    0               00 
   1 OpenRead         0    3    0 3             00 root=3 iDb=0; temp_store_directory_test
   2 Explain          0    0    0 SCAN TABLE temp_store_directory_test 00 
   3 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
SELECT coalesce(t1!=t1,99) FROM temp_store_directory_test;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    6 3             01 usesStmtJournal=0
  13 TableLock        0    3    0 temp_store_directory_test 00 iDb=0 root=3 write=0
  14 Goto             0    1    0               00 
   1 OpenRead         0    3    0 3             00 root=3 iDb=0; temp_store_directory_test
   2 Explain          0    0    0 SCAN TABLE temp_store_directory_test 00 
   3 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
CREATE TABLE t1_au(t1_bd,t1_ad,t2,x,y INTEGER PRIMARY KEY);]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      0    1    6 3             01 usesStmtJournal=0
  33 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  34 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:6
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:6
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:6
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:6
  18 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  19 IsNull           5   28    0               00 if r[5]==NULL goto 28
REG[5] =  i:6
  20 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  21 String8          0    7    0 t1_au         00 r[7]='t1_au'
REG[7] =   t5[t1_au](8)
  22 String8          0    8    0 t1_au         00 r[8]='t1_au'
REG[8] =   t5[t1_au](8)
  23 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  24 String8          0   10    0 CREATE TABLE t1_au(t1_bd,t1_ad,t2,x,y INTEGER PRIMARY KEY) 00 r[10]='CREATE TABLE t1_au(t1_bd,t1_ad,t2,x,y INTEGER PRIMARY KEY)'
REG[10] =   t58[CREATE TABLE t1](8)
  25 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s81[071717170181017461626C6574315F61.......tablet1_a](8)
  26 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s81[071717170181017461626C6574315F61.......tablet1_a](8)
REG[5] =  i:6
  27 AddImm          12    1    0               00 r[12]=r[12]+1
REG[12] =  i:0
  28 Close            1    0    0               00 
  29 SetCookie        0    1    7               00 
  30 ParseSchema      0    0    0 tbl_name='t1_au' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    7 3             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1_au         00 r[2]='t1_au'
REG[2] =   t5[t1_au](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[t1_au](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[t1_au](8)
REG[1] =   s25[temp_store_dire](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[t1_au](8)
REG[1] =   s25[temp_store_dire](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[t1_au](8)
REG[1] =   s25[temp_store_dire](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[t1_bi](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[t1_au](8)
REG[1] =   s5[t1_bi](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[t1_au](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[t1_au](8)
REG[1] =   s5[t1_au](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s5[t1_au](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s58[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s5[t1_au](8)
REG[6] =  i:5
REG[7] =   s58[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  31 Halt             0    0    0               00 
SQL: [;
SELECT t==t FROM temp_store_directory_test;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    7 3             01 usesStmtJournal=0
  11 TableLock        0    3    0 temp_store_directory_test 00 iDb=0 root=3 write=0
  12 Goto             0    1    0               00 
   1 OpenRead         0    3    0 2             00 root=3 iDb=0; temp_store_directory_test
   2 Explain          0    0    0 SCAN TABLE temp_store_directory_test 00 
   3 Rewind           0    8    0               00 
   8 Close            0    0    0               00 
   9 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    7 3             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s17[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:2
REG[3] =   s17[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s25[temp_store_dire](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s119[CREATE TABLE te](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s25[temp_store_dire](8)
REG[2] =  i:3
REG[3] =   s119[CREATE TABLE te](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s9[t1_mirror](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s109[CREATE TRIGGER ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s9[t1_mirror](8)
REG[2] =  i:0
REG[3] =   s109[CREATE TRIGGER ](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s10[t1_mirror2](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s110[CREATE TRIGGER ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s10[t1_mirror2](8)
REG[2] =  i:0
REG[3] =   s110[CREATE TRIGGER ](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s5[t1_bi](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s64[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s5[t1_bi](8)
REG[2] =  i:4
REG[3] =   s64[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s5[t1_au](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s58[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s5[t1_au](8)
REG[2] =  i:5
REG[3] =   s58[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1_bi' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    7 3             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1_bi         00 r[2]='t1_bi'
REG[2] =   t5[t1_bi](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[t1_bi](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[t1_bi](8)
REG[1] =   s25[temp_store_dire](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[t1_bi](8)
REG[1] =   s25[temp_store_dire](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[t1_bi](8)
REG[1] =   s25[temp_store_dire](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[t1_bi](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[t1_bi](8)
REG[1] =   s5[t1_bi](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s5[t1_bi](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s64[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s5[t1_bi](8)
REG[6] =  i:4
REG[7] =   s64[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[t1_au](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[t1_bi](8)
REG[1] =   s5[t1_au](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='temp_store_directory_test' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    7 3             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 temp_store_directory_test 00 r[2]='temp_store_directory_test'
REG[2] =   t25[temp_store_dire](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s25[temp_store_dire](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s25[temp_store_dire](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s119[CREATE TABLE te](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s25[temp_store_dire](8)
REG[6] =  i:3
REG[7] =   s119[CREATE TABLE te](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s25[temp_store_dire](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s7[trigger](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s7[trigger](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s25[temp_store_dire](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s7[trigger](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s7[trigger](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[t1_bi](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s5[t1_bi](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[t1_au](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s5[t1_au](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='treal' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    7 3             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 treal         00 r[2]='treal'
REG[2] =   t5[treal](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[treal](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[treal](8)
REG[1] =   s25[temp_store_dire](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[treal](8)
REG[1] =   s25[temp_store_dire](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[treal](8)
REG[1] =   s25[temp_store_dire](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[t1_bi](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[treal](8)
REG[1] =   s5[t1_bi](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[t1_au](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[treal](8)
REG[1] =   s5[t1_au](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
SELECT t<t FROM temp_store_directory_test;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    7 3             01 usesStmtJournal=0
  11 TableLock        0    3    0 temp_store_directory_test 00 iDb=0 root=3 write=0
  12 Goto             0    1    0               00 
   1 OpenRead         0    3    0 2             00 root=3 iDb=0; temp_store_directory_test
   2 Explain          0    0    0 SCAN TABLE temp_store_directory_test 00 
   3 Rewind           0    8    0               00 
   8 Close            0    0    0               00 
   9 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    7 3             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s17[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:2
REG[3] =   s17[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s25[temp_store_dire](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s119[CREATE TABLE te](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s25[temp_store_dire](8)
REG[2] =  i:3
REG[3] =   s119[CREATE TABLE te](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s9[t1_mirror](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s109[CREATE TRIGGER ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s9[t1_mirror](8)
REG[2] =  i:0
REG[3] =   s109[CREATE TRIGGER ](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s10[t1_mirror2](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s110[CREATE TRIGGER ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s10[t1_mirror2](8)
REG[2] =  i:0
REG[3] =   s110[CREATE TRIGGER ](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s5[t1_bi](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s64[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s5[t1_bi](8)
REG[2] =  i:4
REG[3] =   s64[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s5[t1_au](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s58[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s5[t1_au](8)
REG[2] =  i:5
REG[3] =   s58[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
UPDATE t1_bi SET t1_bu='abc', t1_bu='abc_';]
VDBE Trace:
   0 Init             0   22    0               00 Start at 22
  22 Transaction      0    1    7 3             01 usesStmtJournal=0
  23 TableLock        0    4    1 t1_bi         00 iDb=0 root=4 write=1
  24 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    4    0 0             00 root=4 iDb=0; t1_bi
   3 Explain          0    0    0 SCAN TABLE t1_bi 00 
   4 Rewind           0    8    0               00 
   8 Close            0    0    0               00 
   9 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
  10 OpenWrite        0    4    0 2             00 root=4 iDb=0; t1_bi
  11 RowSetRead       1   19    2               00 r[2]=rowset(1)
REG[1] =  NULL
REG[2] =  NULL
  19 Close            0    0    0               00 
  20 ResultRow        5    1    0               00 output=r[5]
REG[5] =  i:0
  21 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1_au' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    7 3             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1_au         00 r[2]='t1_au'
REG[2] =   t5[t1_au](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[t1_au](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[t1_au](8)
REG[1] =   s25[temp_store_dire](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[t1_au](8)
REG[1] =   s25[temp_store_dire](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[t1_au](8)
REG[1] =   s25[temp_store_dire](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[t1_bi](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[t1_au](8)
REG[1] =   s5[t1_bi](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[t1_au](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[t1_au](8)
REG[1] =   s5[t1_au](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s5[t1_au](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s58[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s5[t1_au](8)
REG[6] =  i:5
REG[7] =   s58[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
CREATE TABLE x1(z, x2, x3);]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      0    1    7 3             01 usesStmtJournal=0
  33 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  34 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:6
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:7
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:7
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:7
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:7
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:7
  18 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  19 IsNull           5   28    0               00 if r[5]==NULL goto 28
REG[5] =  i:7
  20 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  21 String8          0    7    0 x1            00 r[7]='x1'
REG[7] =   t2[x1](8)
  22 String8          0    8    0 x1            00 r[8]='x1'
REG[8] =   t2[x1](8)
  23 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:6
  24 String8          0   10    0 CREATE TABLE x1(z, x2, x3) 00 r[10]='CREATE TABLE x1(z, x2, x3)'
REG[10] =   t26[CREATE TABLE x1](8)
  25 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s42[0617111101417461626C657831783106.....Atablex1x1.](8)
  26 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s42[0617111101417461626C657831783106.....Atablex1x1.](8)
REG[5] =  i:7
  27 AddImm          12    1    0               00 r[12]=r[12]+1
REG[12] =  i:0
  28 Close            1    0    0               00 
  29 SetCookie        0    1    8               00 
  30 ParseSchema      0    0    0 tbl_name='x1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    8 3             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 x1            00 r[2]='x1'
REG[2] =   t2[x1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s25[temp_store_dire](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s25[temp_store_dire](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s25[temp_store_dire](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[t1_bi](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s5[t1_bi](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[t1_au](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s5[t1_au](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[x1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s2[x1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[x1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:6
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s26[CREATE TABLE x1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[x1](8)
REG[6] =  i:6
REG[7] =   s26[CREATE TABLE x1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  31 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='x1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    8 3             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 x1            00 r[2]='x1'
REG[2] =   t2[x1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s25[temp_store_dire](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s25[temp_store_dire](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s25[temp_store_dire](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[t1_bi](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s5[t1_bi](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[t1_au](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s5[t1_au](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[x1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s2[x1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[x1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:6
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s26[CREATE TABLE x1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[x1](8)
REG[6] =  i:6
REG[7] =   s26[CREATE TABLE x1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
UPDATE temp_store_directory_test SET t1='abc', t1='temp_store_directory_test%C';]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    1    8 3             01 usesStmtJournal=0
  32 TableLock        0    3    1 temp_store_directory_test 00 iDb=0 root=3 write=1
  33 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    3    0 0             00 root=3 iDb=0; temp_store_directory_test
   3 Explain          0    0    0 SCAN TABLE temp_store_directory_test 00 
   4 Rewind           0    8    0               00 
   8 Close            0    0    0               00 
   9 Integer          0   10    0               00 r[10]=0
REG[10] =  i:0
  10 OpenWrite        0    3    0 3             00 root=3 iDb=0; temp_store_directory_test
  11 RowSetRead       1   28    2               00 r[2]=rowset(1)
REG[1] =  NULL
REG[2] =  NULL
  28 Close            0    0    0               00 
  29 ResultRow       10    1    0               00 output=r[10]
REG[10] =  i:0
  30 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f07dbabf859 in __GI_abort () at abort.c:79
#2  0x00007f07dbabf729 in __assert_fail_base (fmt=0x7f07dbc55588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x20d94f "op==TK_CASE", file=0x222c23 "sqlite3.c", line=92150, function=<optimized out>) at assert.c:92
#3  0x00007f07dbad0fd6 in __GI___assert_fail (assertion=0x20d94f "op==TK_CASE", file=0x222c23 "sqlite3.c", line=92150, function=0x21a1ea "int sqlite3ExprCodeTarget(Parse *, Expr *, int)") at assert.c:101
#4  0x000000000037b938 in sqlite3ExprCodeTarget (pParse=0x7a0280, pExpr=0x7b55c0, target=12) at sqlite3.c:92150
#5  0x000000000037228a in sqlite3ExprCodeTemp (pParse=0x7a0280, pExpr=0x7b55c0, pReg=0x7ffc5528e2c4) at sqlite3.c:92302
#6  0x0000000000371435 in sqlite3ExprIfTrue (pParse=0x7a0280, pExpr=0x7bdb00, dest=<optimized out>, jumpIfNull=16) at sqlite3.c:92559
#7  0x0000000000384b90 in sqlite3GenerateConstraintChecks (pParse=<optimized out>, pTab=0x7be120, aRegIdx=<optimized out>, iDataCur=0, iIdxCur=1, regNewData=6, regOldData=2, pkChng=1 '\001', overrideError=10 '\n', 
    ignoreDest=11, pbMayReplace=0x7ffc5528e5bc, aiChng=0x7b3850) at sqlite3.c:107197
#8  0x000000000033c4b3 in sqlite3Update (pParse=<optimized out>, pTabList=<optimized out>, pChanges=<optimized out>, pWhere=<optimized out>, onError=<optimized out>) at sqlite3.c:120426
#9  0x000000000030729a in yy_reduce (yypParser=0x838230, yyruleno=<optimized out>) at sqlite3.c:133465
#10 0x00000000002fef8e in sqlite3Parser (yyp=0x838230, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#11 0x00000000002fc544 in sqlite3RunParser (pParse=0x7a0280, 
    zSql=0x835bf0 ";\nUPDATE temp_store_directory_test SET temp_table='abxyzzycx', temp_table='temp_store_directory_test%C';;\nUPDATE t1_bi SET t1_bu='abc', t1_bu='t1_bi%_c';;\nUPDATE t1_bi SET t1_bu='t1_bi\302\200c', t1_bu='A_C"..., pzErrMsg=0x7ffc5528e868) at sqlite3.c:135186
#12 0x00000000002fac4e in sqlite3Prepare (db=0x7a0d40, 
    zSql=0x7a3add ";\nUPDATE temp_store_directory_test SET temp_table='abxyzzycx', temp_table='temp_store_directory_test%C';;\nUPDATE t1_bi SET t1_bu='abc', t1_bu='t1_bi%_c';;\nUPDATE t1_bi SET t1_bu='t1_bi\302\200c', t1_bu='A_C"..., nBytes=<optimized out>, saveSqlFlag=1, pReprepare=<optimized out>, ppStmt=0x7ffc5528e998, pzTail=0x7ffc5528e980) at sqlite3.c:112589
#13 0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0x7a0d40, 
    zSql=0x7a3add ";\nUPDATE temp_store_directory_test SET temp_table='abxyzzycx', temp_table='temp_store_directory_test%C';;\nUPDATE t1_bi SET t1_bu='abc', t1_bu='t1_bi%_c';;\nUPDATE t1_bi SET t1_bu='t1_bi\302\200c', t1_bu='A_C"..., nBytes=1400, saveSqlFlag=1, pOld=0x0, ppStmt=<optimized out>, pzTail=0x7ffc5528e980) at sqlite3.c:112688
#14 0x000000000028f38c in sqlite3_prepare_v2 (db=0x2, zSql=0x7ffc5528de30 "", nBytes=0, ppStmt=0x7ffc5528e998, pzTail=<optimized out>) at sqlite3.c:112764
#15 0x000000000024b100 in main (argc=1, argv=0x7ffc5528eb48) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 16269] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
