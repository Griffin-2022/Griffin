GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000598,sig:06,src:011201+008380,time:40965443,execs:6238835,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [CREATE TABLE a(b);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    0 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:1
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:1
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:1
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 a             00 r[7]='a'
REG[7] =   t1[a](8)
  21 String8          0    8    0 a             00 r[8]='a'
REG[8] =   t1[a](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  23 String8          0   10    0 CREATE TABLE a(b) 00 r[10]='CREATE TABLE a(b)'
REG[10] =   t17[CREATE TABLE a(](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s31[06170F0F012F7461626C656161034352...../tableaa.CR](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s31[06170F0F012F7461626C656161034352...../tableaa.CR](8)
REG[5] =  i:1
  26 Close            1    0    0               00 
  27 SetCookie        0    1    1               00 
  28 ParseSchema      0    0    0 tbl_name='a' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    1 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[a](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s17[CREATE TABLE a(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[a](8)
REG[6] =  i:3
REG[7] =   s17[CREATE TABLE a(](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;
INSERT INTO a VALUES(randomblob(800));]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    1    1 0             01 usesStmtJournal=0
   9 TableLock        0    3    1 a             00 iDb=0 root=3 write=1
  10 Integer        800    3    0               00 r[3]=800
REG[3] =  i:800
  11 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 1             00 root=3 iDb=0; a
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Function0        1    3    2 randomblob(1) 01 r[2]=func(r[3])
REG[3] =  i:800
REG[2] =  z800[00B69EAD4434E96044A7D05392770F93....D4.`D..S.w..](8)
   4 MakeRecord       2    1    4               00 r[4]=mkrec(r[2])
REG[4] =  s803[038C4C00B69EAD4434E96044A7D05392..L....D4.`D..S.](8)
   5 Insert           0    4    1 a             1B intkey=r[1] data=r[4]
REG[4] =  s803[038C4C00B69EAD4434E96044A7D05392..L....D4.`D..S.](8)
REG[1] =  i:1
   6 Noop             0    0    0               00 
   7 Halt             0    0    0               00 
SQL: [;
UPDATE a SET b = NULL WHERE b>256;]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      0    1    1 0             01 usesStmtJournal=0
  21 TableLock        0    3    1 a             00 iDb=0 root=3 write=1
  22 Integer        256    5    0               00 r[5]=256
REG[5] =  i:256
  23 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    3    0 1             00 root=3 iDb=0; a
   3 Explain          0    0    0 SCAN TABLE a  00 
   4 Rewind           0   10    0               00 
   5 Column           0    0    4               00 r[4]=a.b
REG[4] =  s800[00B69EAD4434E96044A7D05392770F93....D4.`D..S.w..](8)
   6 Le               5    9    4 (BINARY)      51 if r[5]<=r[4] goto 9
REG[5] =  i:256
REG[4] =  s800[00B69EAD4434E96044A7D05392770F93....D4.`D..S.w..](8)
   7 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   8 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 OpenWrite        0    3    0 1             00 root=3 iDb=0; a
  12 RowSetRead       1   18    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  13 NotExists        0   12    2               00 intkey=r[2]
REG[2] =  i:1
  14 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  15 MakeRecord       3    1    4               00 r[4]=mkrec(r[3])
REG[4] =  s2[0200..](8)
  16 Insert           0    4    2 a             05 intkey=r[2] data=r[4]
REG[4] =  s2[0200..](8)
REG[2] =  i:1
  17 Goto             0   12    0               00 
  12 RowSetRead       1   18    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  18 Noop             0    0    0               00 
  19 Halt             0    0    0               00 
SQL: [;
INSERT INTO a VALUES(randomblob(800));]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    1    1 0             01 usesStmtJournal=0
   9 TableLock        0    3    1 a             00 iDb=0 root=3 write=1
  10 Integer        800    3    0               00 r[3]=800
REG[3] =  i:800
  11 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 1             00 root=3 iDb=0; a
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   3 Function0        1    3    2 randomblob(1) 01 r[2]=func(r[3])
REG[3] =  i:800
REG[2] =  z800[4C5B2E94DA48FCD440C004AEC8894895L[...H..@.....H.](8)
   4 MakeRecord       2    1    4               00 r[4]=mkrec(r[2])
REG[4] =  s803[038C4C4C5B2E94DA48FCD440C004AEC8..LL[...H..@....](8)
   5 Insert           0    4    1 a             1B intkey=r[1] data=r[4]
REG[4] =  s803[038C4C4C5B2E94DA48FCD440C004AEC8..LL[...H..@....](8)
REG[1] =  i:2
   6 Noop             0    0    0               00 
   7 Halt             0    0    0               00 
SQL: [PRAGMA writable_schema = 1;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='a' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    1 0             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[a](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s17[CREATE TABLE a(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[a](8)
REG[6] =  i:3
REG[7] =   s17[CREATE TABLE a(](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
CREATE INDEX temp_store_directory_test ON a(b ASC,  b ASC) ;]
VDBE Trace:
   0 Init             0   35    0               00 Start at 35
  35 Transaction      0    1    1 0             01 usesStmtJournal=0
  36 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  37 TableLock        0    3    1 a             00 iDb=0 root=3 write=1
  38 Goto             0    1    0               00 
   1 Noop             0   34    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:4
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:2
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 temp_store_directory_test 00 r[4]='temp_store_directory_test'
REG[4] =   t25[temp_store_dire](8)
   7 String8          0    5    0 a             00 r[5]='a'
REG[5] =   t1[a](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:4
   9 String8          0    7    0 CREATE INDEX temp_store_directory_test ON a(b ASC,  b ASC)  00 r[7]='CREATE INDEX temp_store_directory_test ON a(b ASC,  b ASC) '
REG[7] =   t59[CREATE INDEX te](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s98[07173F0F018103696E64657874656D70..?....indextemp](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s98[07173F0F018103696E64657874656D70..?....indextemp](8)
REG[2] =  i:2
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    2 k(3,,,)       00 
  14 OpenRead         1    3    0 1             00 root=3 iDb=0; a
  15 Rewind           1   22    0               00 
  16 Column           1    0   10               00 r[10]=a.b
REG[10] =  NULL
  17 Column           1    0   11               00 r[11]=a.b
REG[11] =  NULL
  18 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:1
  19 MakeRecord      10    3    9               00 r[9]=mkrec(r[10..12])
REG[9] =  s4[04000009....](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s4[04000009....](8)
  21 Next             1   16    0               00 
  16 Column           1    0   10               00 r[10]=a.b
REG[10] =  s800[4C5B2E94DA48FCD440C004AEC8894895L[...H..@.....H.](8)
  17 Column           1    0   11               00 r[11]=a.b
REG[11] =  s800[4C5B2E94DA48FCD440C004AEC8894895L[...H..@.....H.](8)
  18 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:2
  19 MakeRecord      10    3    9               00 r[9]=mkrec(r[10..12])
REG[9] =  s1607[068C4C8C4C014C5B2E94DA48FCD440C0..L.L.L[...H..@.](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s1607[068C4C8C4C014C5B2E94DA48FCD440C0..L.L.L[...H..@.](8)
  21 Next             1   16    0               00 
  22 OpenWrite        2    1    0 k(3,,,)       11 root=1 iDb=0
  23 SorterSort       3   28    0               00 
  24 SorterData       3    9    2               00 r[9]=data
  25 Last             2    0   -1               00 
  26 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s4[04000009....](8)
  27 SorterNext       3   24    0               00 
  24 SorterData       3    9    2               00 r[9]=data
  25 Last             2    0   -1               00 
  26 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s1607[068C4C8C4C014C5B2E94DA48FCD440C0..L.L.L[...H..@.](8)
  27 SorterNext       3   24    0               00 
  28 Close            1    0    0               00 
  29 Close            2    0    0               00 
  30 Close            3    0    0               00 
  31 SetCookie        0    1    2               00 
  32 ParseSchema      0    0    0 name='temp_store_directory_test' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 temp_store_directory_test 00 r[2]='temp_store_directory_test'
REG[2] =   t25[temp_store_dire](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s25[temp_store_dire](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s25[temp_store_dire](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s59[CREATE INDEX te](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s25[temp_store_dire](8)
REG[6] =  i:4
REG[7] =   s59[CREATE INDEX te](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  33 Expire           0    0    0               00 
  34 Halt             0    0    0               00 
SQL: [pragma page_size;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Int64            0    1    0 4096          00 r[1]=4096
REG[1] =  i:4096
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:4096
   3 Halt             0    0    0               00 
SQL: [;
PRAGMA auto_vacuum ;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Int64            0    1    0 2             00 r[1]=2
REG[1] =  i:2
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:2
   3 Halt             0    0    0               00 
SQL: [;
SELECT b, b FROM a WHERE b = 2 AND b IN (2, 4, 5) ORDER BY b ASC, b DESC;]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    0    2 0             01 usesStmtJournal=0
  31 TableLock        0    3    0 a             00 iDb=0 root=3 write=0
  32 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         2    4    0 k(3,,,)       02 root=4 iDb=0; temp_store_directory_test
   3 Explain          0    0    0 SEARCH TABLE a USING COVERING INDEX temp_store_directory_test (b=? AND b=?) 00 
   4 Integer          2    1    0               00 r[1]=2
REG[1] =  i:2
   5 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
   6 SeekGE           2   28    1 2             00 key=r[1..2]
REG[1] =  i:2
  28 Close            2    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;
SELECT * FROM a;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    2 0             01 usesStmtJournal=0
  10 TableLock        0    3    0 a             00 iDb=0 root=3 write=0
  11 Goto             0    1    0               00 
   1 OpenRead         0    3    0 1             00 root=3 iDb=0; a
   2 Explain          0    0    0 SCAN TABLE a  00 
   3 Rewind           0    7    0               00 
   4 Column           0    0    1               00 r[1]=a.b
REG[1] =  NULL
   5 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   6 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=a.b
REG[1] =  s800[4C5B2E94DA48FCD440C004AEC8894895L[...H..@.....H.](8)
   5 ResultRow        1    1    0               00 output=r[1]
REG[1] =  s800[4C5B2E94DA48FCD440C004AEC8894895L[...H..@.....H.](8)
   6 Next             0    4    0               01 
   7 Close            0    0    0               00 
   8 Halt             0    0    0               00 
SQL: [;
DELETE FROM a;]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 Transaction      0    1    2 0             01 usesStmtJournal=0
   5 TableLock        0    3    1 a             00 iDb=0 root=3 write=1
   6 Goto             0    1    0               00 
   1 Clear            3    0   -1 a             00 
   2 Clear            4    0    0               00 
   3 Halt             0    0    0               00 
SQL: [;
SELECT b, b FROM a WHERE b = 3 AND b IN (2, 4, 5) ORDER BY b DESC, b ASC;]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    0    2 0             01 usesStmtJournal=0
  31 TableLock        0    3    0 a             00 iDb=0 root=3 write=0
  32 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         2    4    0 k(3,,,)       02 root=4 iDb=0; temp_store_directory_test
   3 Explain          0    0    0 SEARCH TABLE a USING COVERING INDEX temp_store_directory_test (b=? AND b=?) 00 
   4 Integer          3    1    0               00 r[1]=3
REG[1] =  i:3
   5 Integer          3    2    0               00 r[2]=3
REG[2] =  i:3
   6 SeekGE           2   28    1 2             00 key=r[1..2]
REG[1] =  i:3
  28 Close            2    0    0               00 
  29 Halt             0    0    0               00 
SQL: [CREATE TRIGGER temp_table AFTER UPDATE ON a BEGIN
      UPDATE a SET b = b+1;
    END;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    1    2 0             01 usesStmtJournal=0
  15 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  16 Goto             0    1    0               00 
   1 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   3 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   4 String8          0    3    0 temp_table    00 r[3]='temp_table'
REG[3] =   t10[temp_table](8)
   5 String8          0    4    0 a             00 r[4]='a'
REG[4] =   t1[a](8)
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 String8          0    6    0 CREATE TRIGGER temp_table AFTER UPDATE ON a BEGIN
      UPDATE a SET b = b+1;
    END 00 r[6]='CREATE TRIGGER temp_table AFTER UPDATE ON a BEGIN
      UPDATE a SET b = b+1;
    END'
REG[6] =   t85[CREATE TRIGGER ](8)
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
REG[7] =  s110[071B210F088137747269676765727465..!...7triggerte](8)
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
REG[7] =  s110[071B210F088137747269676765727465..!...7triggerte](8)
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 SetCookie        0    1    3               00 
  12 ParseSchema      0    0    0 type='trigger' AND name='temp_table' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  19 String8          0    4    0 temp_table    00 r[4]='temp_table'
REG[4] =   t10[temp_table](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[index](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s10[temp_table](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t10[temp_table](8)
REG[3] =   s10[temp_table](8)
   9 Copy             3    5    0               00 r[5]=r[3]
REG[5] =   s10[temp_table](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:0
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s85[CREATE TRIGGER ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s10[temp_table](8)
REG[6] =  i:0
REG[7] =   s85[CREATE TRIGGER ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [;
SELECT b, b FROM a WHERE b = 4 AND b IN (2, 4, 5) ORDER BY b DESC, b DESC;]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    0    3 0             01 usesStmtJournal=0
  31 TableLock        0    3    0 a             00 iDb=0 root=3 write=0
  32 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         2    4    0 k(3,,,)       02 root=4 iDb=0; temp_store_directory_test
   3 Explain          0    0    0 SEARCH TABLE a USING COVERING INDEX temp_store_directory_test (b=? AND b=?) 00 
   4 Integer          4    1    0               00 r[1]=4
REG[1] =  i:4
   5 Integer          4    2    0               00 r[2]=4
REG[2] =  i:4
   6 SeekGE           2   28    1 2             00 key=r[1..2]
REG[1] =  i:4
  28 Close            2    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;
PRAGMA incremental_vacuum;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    1    3 0             01 usesStmtJournal=0
   8 Goto             0    1    0               00 
   1 Integer       2147483647    1    0               00 r[1]=2147483647
REG[1] =  i:2147483647
   2 IncrVacuum       0    6    0               00 
   3 ResultRow        1    0    0               00 output=r[1]
   4 AddImm           1   -1    0               00 r[1]=r[1]+-1
REG[1] =  i:2147483647
   5 IfPos            1    2    0               00 if r[1]>0 then r[1]-=0, goto 2
REG[1] =  i:2147483646
   2 IncrVacuum       0    6    0               00 
   6 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='a' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 0             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[a](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s17[CREATE TABLE a(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[a](8)
REG[6] =  i:3
REG[7] =   s17[CREATE TABLE a(](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s25[temp_store_dire](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s59[CREATE INDEX te](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s25[temp_store_dire](8)
REG[6] =  i:4
REG[7] =   s59[CREATE INDEX te](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s7[trigger](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s7[trigger](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
PRAGMA auto_vacuum ;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Int64            0    1    0 2             00 r[1]=2
REG[1] =  i:2
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:2
   3 Halt             0    0    0               00 
SQL: [;
ALTER TABLE a ADD t CHECK (temp_table>t);]
VDBE Trace:
   0 Init             0   37    0               00 Start at 37
  37 Transaction      0    1    3 0             01 usesStmtJournal=0
  38 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  39 String8          0    9    0 table         00 r[9]='table'
REG[9] =   t5[table](8)
  40 String8          0   11    0 a             00 r[11]='a'
REG[11] =   t1[a](8)
  41 Integer          1   14    0               00 r[14]=1
REG[14] =  i:1
  42 Integer         16   15    0               00 r[15]=16
REG[15] =  i:16
  43 String8          0   16    0 ,             00 r[16]=', '
REG[16] =   t2[, ](8)
  44 String8          0   17    0 t CHECK (temp_table>t) 00 r[17]='t CHECK (temp_table>t)'
REG[17] =   t22[t CHECK (temp_t](8)
  45 Integer         17   19    0               00 r[19]=17
REG[19] =  i:17
  46 Goto             0    1    0               00 
   1 SetCookie        0    1    4               00 
   2 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   3 OpenRead         0    1    0 2             00 root=1 iDb=0; sqlite_master
   4 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   5 Rewind           0   13    0               00 
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   7 Ne               9   12    8 (BINARY)      52 if r[9]!=r[8] goto 12
REG[9] =   t5[table](8)
REG[8] =   s5[table](8)
   8 Column           0    1   10               00 r[10]=sqlite_master.name
REG[10] =   s1[a](8)
   9 Ne              11   12   10 (BINARY)      52 if r[11]!=r[10] goto 12
REG[11] =   t1[a](8)
REG[10] =   s1[a](8)
  10 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
  11 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
  12 Next             0    6    0               01 
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   7 Ne               9   12    8 (BINARY)      52 if r[9]!=r[8] goto 12
REG[9] =   t5[table](8)
REG[8] =   s5[index](8)
  12 Next             0    6    0               01 
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s7[trigger](8)
   7 Ne               9   12    8 (BINARY)      52 if r[9]!=r[8] goto 12
REG[9] =   t5[table](8)
REG[8] =   s7[trigger](8)
  12 Next             0    6    0               01 
  13 Close            0    0    0               00 
  14 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
  15 RowSetRead       1   31    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  16 NotExists        0   15    2               00 intkey=r[2]
REG[2] =  i:1
  17 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
  18 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[a](8)
  19 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
REG[5] =   s1[a](8)
  20 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  21 Column           0    4   13               00 r[13]=sqlite_master.sql
REG[13] =   s17[CREATE TABLE a(](8)
  22 Function0        6   13   12 substr(3)     03 r[12]=func(r[13..15])
REG[13] =   s17[CREATE TABLE a(](8)
REG[14] =  i:1
REG[15] =  i:16
REG[12] =   s16[CREATE TABLE a(](8)
  23 Concat          16   12    8               00 r[8]=r[12]+r[16]
REG[16] =   t2[, ](8)
REG[12] =   s16[CREATE TABLE a(](8)
REG[8] =   s18[CREATE TABLE a(](8)
  24 Concat          17    8   10               00 r[10]=r[8]+r[17]
REG[17] =   t22[t CHECK (temp_t](8)
REG[8] =   s18[CREATE TABLE a(](8)
REG[10] =   s40[CREATE TABLE a(](8)
  25 Column           0    4   18               00 r[18]=sqlite_master.sql
REG[18] =   s17[CREATE TABLE a(](8)
  26 Function0        2   18    8 substr(2)     02 r[8]=func(r[18..19])
REG[18] =   s17[CREATE TABLE a(](8)
REG[19] =  i:17
REG[8] =   s1[)](8)
  27 Concat           8   10    7               00 r[7]=r[10]+r[8]
REG[8] =   s1[)](8)
REG[10] =   s40[CREATE TABLE a(](8)
REG[7] =   s41[CREATE TABLE a(](8)
  28 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s55[06170F0F015F7461626C656161034352....._tableaa.CR](8)
  29 Insert           0    8    2               00 intkey=r[2] data=r[8]
REG[8] =  s55[06170F0F015F7461626C656161034352....._tableaa.CR](8)
REG[2] =  i:1
  30 Goto             0   15    0               00 
  15 RowSetRead       1   31    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  31 Close            0    0    0               00 
  32 SetCookie        0    2    4               00 
  33 DropTrigger      0    0    0 temp_table    00 
  34 DropTable        0    0    0 a             00 
  35 ParseSchema      0    0    0 tbl_name='a'  00 
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    4 0             00 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  17 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s1[a](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:3
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s41[CREATE TABLE a(](8)
  10 ResultRow        3    3    0               00 output=r[3..5]
REG[3] =   s1[a](8)
REG[4] =  i:3
REG[5] =   s41[CREATE TABLE a(](8)
  11 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s25[temp_store_dire](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:4
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s59[CREATE INDEX te](8)
  10 ResultRow        3    3    0               00 output=r[3..5]
REG[3] =   s25[temp_store_dire](8)
REG[4] =  i:4
REG[5] =   s59[CREATE INDEX te](8)
  11 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s10[temp_table](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:0
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s85[CREATE TRIGGER ](8)
  10 ResultRow        3    3    0               00 output=r[3..5]
REG[3] =   s10[temp_table](8)
REG[4] =  i:0
REG[5] =   s85[CREATE TRIGGER ](8)
  11 Next             0    5    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    4 1             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s41[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:3
REG[3] =   s41[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s25[temp_store_dire](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s59[CREATE INDEX te](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s25[temp_store_dire](8)
REG[2] =  i:4
REG[3] =   s59[CREATE INDEX te](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s10[temp_table](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s85[CREATE TRIGGER ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s10[temp_table](8)
REG[2] =  i:0
REG[3] =   s85[CREATE TRIGGER ](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    4 1             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s41[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:3
REG[3] =   s41[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s25[temp_store_dire](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s59[CREATE INDEX te](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s25[temp_store_dire](8)
REG[2] =  i:4
REG[3] =   s59[CREATE INDEX te](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s10[temp_table](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s85[CREATE TRIGGER ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s10[temp_table](8)
REG[2] =  i:0
REG[3] =   s85[CREATE TRIGGER ](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f4c44cee859 in __GI_abort () at abort.c:79
#2  0x00007f4c44cee729 in __assert_fail_base (fmt=0x7f4c44e84588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x20d94f "op==TK_CASE", file=0x222c23 "sqlite3.c", line=92150, function=<optimized out>) at assert.c:92
#3  0x00007f4c44cfffd6 in __GI___assert_fail (assertion=0x20d94f "op==TK_CASE", file=0x222c23 "sqlite3.c", line=92150, function=0x21a1ea "int sqlite3ExprCodeTarget(Parse *, Expr *, int)") at assert.c:101
#4  0x000000000037b938 in sqlite3ExprCodeTarget (pParse=0x17d1f20, pExpr=0x17eb0e0, target=10) at sqlite3.c:92150
#5  0x000000000037228a in sqlite3ExprCodeTemp (pParse=0x17d1f20, pExpr=0x17eb0e0, pReg=0x7ffff9037da4) at sqlite3.c:92302
#6  0x0000000000371435 in sqlite3ExprIfTrue (pParse=0x17d1f20, pExpr=0x17f4800, dest=<optimized out>, jumpIfNull=16) at sqlite3.c:92559
#7  0x0000000000384b90 in sqlite3GenerateConstraintChecks (pParse=<optimized out>, pTab=0x17d21d0, aRegIdx=<optimized out>, iDataCur=0, iIdxCur=1, regNewData=6, regOldData=3, pkChng=0 '\000', overrideError=5 '\005', 
    ignoreDest=11, pbMayReplace=0x7ffff903809c, aiChng=0x17e3de0) at sqlite3.c:107197
#8  0x000000000033c4b3 in sqlite3Update (pParse=<optimized out>, pTabList=<optimized out>, pChanges=<optimized out>, pWhere=<optimized out>, onError=<optimized out>) at sqlite3.c:120426
#9  0x00000000003afa86 in getRowTrigger (pParse=0x17d1b40, pTrigger=0x17e7790, pTab=<optimized out>, orconf=<optimized out>) at sqlite3.c:119457
#10 0x000000000033bc42 in sqlite3Update (pParse=<optimized out>, pTabList=<optimized out>, pChanges=<optimized out>, pWhere=<optimized out>, onError=<optimized out>) at sqlite3.c:119838
#11 0x000000000030729a in yy_reduce (yypParser=0x17f24a0, yyruleno=<optimized out>) at sqlite3.c:133465
#12 0x00000000002fef8e in sqlite3Parser (yyp=0x17f24a0, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#13 0x00000000002fc544 in sqlite3RunParser (pParse=0x17d1b40, 
    zSql=0x17f0080 ";\nUPDATE OR REPLACE a SET t=(SELECT t FROM a WHERE t=a.t);;\nSELECT b, b FROM a WHERE b = 2 AND b IN (2, 4, 5) ORDER BY b ASC, b DESC;;\nCREATE INDEX t1 ON a(b);;\nSELECT name, rootpage, sql FROM \"main\"."..., pzErrMsg=0x7ffff90385f8) at sqlite3.c:135186
#14 0x00000000002fac4e in sqlite3Prepare (db=0x17d2a40, 
    zSql=0x17d362b ";\nUPDATE OR REPLACE a SET t=(SELECT t FROM a WHERE t=a.t);;\nSELECT b, b FROM a WHERE b = 2 AND b IN (2, 4, 5) ORDER BY b ASC, b DESC;;\nCREATE INDEX t1 ON a(b);;\nSELECT name, rootpage, sql FROM \"main\"."..., nBytes=<optimized out>, saveSqlFlag=1, pReprepare=<optimized out>, ppStmt=0x7ffff9038728, pzTail=0x7ffff9038710) at sqlite3.c:112589
#15 0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0x17d2a40, 
    zSql=0x17d362b ";\nUPDATE OR REPLACE a SET t=(SELECT t FROM a WHERE t=a.t);;\nSELECT b, b FROM a WHERE b = 2 AND b IN (2, 4, 5) ORDER BY b ASC, b DESC;;\nCREATE INDEX t1 ON a(b);;\nSELECT name, rootpage, sql FROM \"main\"."..., nBytes=1375, saveSqlFlag=1, pOld=0x0, ppStmt=<optimized out>, pzTail=0x7ffff9038710) at sqlite3.c:112688
#16 0x000000000028f38c in sqlite3_prepare_v2 (db=0x2, zSql=0x7ffff9037910 "", nBytes=0, ppStmt=0x7ffff9038728, pzTail=<optimized out>) at sqlite3.c:112764
#17 0x000000000024b100 in main (argc=1, argv=0x7ffff90388d8) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 17243] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
