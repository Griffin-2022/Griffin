GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000592,sig:06,src:011148+008907,time:40035272,execs:6089350,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    0 0             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [CREATE TABLE a(b);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    0 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:1
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:1
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:1
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 a             00 r[7]='a'
REG[7] =   t1[a](8)
  21 String8          0    8    0 a             00 r[8]='a'
REG[8] =   t1[a](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  23 String8          0   10    0 CREATE TABLE a(b) 00 r[10]='CREATE TABLE a(b)'
REG[10] =   t17[CREATE TABLE a(](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s31[06170F0F012F7461626C656161024352...../tableaa.CR](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s31[06170F0F012F7461626C656161024352...../tableaa.CR](8)
REG[5] =  i:1
  26 Close            1    0    0               00 
  27 SetCookie        0    1    1               00 
  28 ParseSchema      0    0    0 tbl_name='a' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    1 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[a](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s17[CREATE TABLE a(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[a](8)
REG[6] =  i:2
REG[7] =   s17[CREATE TABLE a(](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [CREATE TABLE temp_store_directory_test (
      temp_table      INTEGER PRIMARY KEY AUTOINCREMENT,
      t  INTEGER NOT NULL,
      t1  INTEGER NOT NULL
    );]
VDBE Trace:
   0 Init             0   58    0               00 Start at 58
  58 Transaction      0    1    1 0             01 usesStmtJournal=0
  59 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  60 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:2
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:2
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:2
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 temp_store_directory_test 00 r[7]='temp_store_directory_test'
REG[7] =   t25[temp_store_dire](8)
  21 String8          0    8    0 temp_store_directory_test 00 r[8]='temp_store_directory_test'
REG[8] =   t25[temp_store_dire](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  23 String8          0   10    0 CREATE TABLE temp_store_directory_test (
      temp_table      INTEGER PRIMARY KEY AUTOINCREMENT,
      t  INTEGER NOT NULL,
      t1  INTEGER NOT NULL
    ) 00 r[10]='CREATE TABLE temp_store_directory_test (
      temp_table      INTEGER PRIMARY KEY AUTOINCRE
REG[10] =   t157[CREATE TABLE te](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s220[07173F3F0182477461626C6574656D70..??..Gtabletemp](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s220[07173F3F0182477461626C6574656D70..??..Gtabletemp](8)
REG[5] =  i:2
  26 Close            1    0    0               00 
  27 SetCookie        0    1    2               00 
  28 ReadCookie       0   14    2               00 
REG[14] =  i:4
  29 If              14   32    0               00 
REG[14] =  i:4
  32 CreateTable      0   13    0               00 r[13]=root iDb=0
REG[13] =  i:4
  33 OpenWrite        0    1    0 5             00 root=1 iDb=0
  34 NewRowid         0   12    0               00 r[12]=rowid
REG[12] =  i:3
  35 Blob             6   14    0              00 r[14]= (len=6)
REG[14] =  t6[060000000000......](8)
  36 Insert           0   14   12               08 intkey=r[12] data=r[14]
REG[14] =  t6[060000000000......](8)
REG[12] =  i:3
  37 Close            0    0    0               00 
  38 Close            0    0    0               00 
  39 Null             0   15   16               00 r[15..16]=NULL
REG[15] =  NULL
  40 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  41 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  42 MustBeInt       12   45    0               00 
REG[12] =  i:3
  43 NotExists        2   45   12               00 intkey=r[12]; pk
REG[12] =  i:3
  44 Rowid            2   16    0               00 r[16]=rowid
REG[16] =  i:3
  45 IsNull          16   53    0               00 if r[16]==NULL goto 53
REG[16] =  i:3
  46 String8          0   17    0 table         00 r[17]='table'
REG[17] =   t5[table](8)
  47 String8          0   18    0 sqlite_sequence 00 r[18]='sqlite_sequence'
REG[18] =   t15[sqlite_sequence](8)
  48 String8          0   19    0 sqlite_sequence 00 r[19]='sqlite_sequence'
REG[19] =   t15[sqlite_sequence](8)
  49 Copy            13   20    0               00 r[20]=r[13]
REG[20] =  i:4
  50 String8          0   21    0 CREATE TABLE sqlite_sequence(name,seq) 00 r[21]='CREATE TABLE sqlite_sequence(name,seq)'
REG[21] =   t38[CREATE TABLE sq](8)
  51 MakeRecord      17    5   22 BBBDB         00 r[22]=mkrec(r[17..21])
REG[22] =  s80[06172B2B01597461626C6573716C6974..++.Ytablesqlit](8)
  52 Insert           2   22   16               00 intkey=r[16] data=r[22]
REG[22] =  s80[06172B2B01597461626C6573716C6974..++.Ytablesqlit](8)
REG[16] =  i:3
  53 Close            2    0    0               00 
  54 SetCookie        0    1    2               00 
  55 ParseSchema      0    0    0 tbl_name='sqlite_sequence' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s25[temp_store_dire](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s15[sqlite_sequence](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s15[sqlite_sequence](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s38[CREATE TABLE sq](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s15[sqlite_sequence](8)
REG[6] =  i:4
REG[7] =   s38[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  56 ParseSchema      0    0    0 tbl_name='temp_store_directory_test' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 temp_store_directory_test 00 r[2]='temp_store_directory_test'
REG[2] =   t25[temp_store_dire](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s25[temp_store_dire](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s25[temp_store_dire](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s157[CREATE TABLE te](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s25[temp_store_dire](8)
REG[6] =  i:3
REG[7] =   s157[CREATE TABLE te](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  57 Halt             0    0    0               00 
SQL: [;
INSERT INTO a VALUES ('abc');]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    1    2 0             01 usesStmtJournal=0
   9 TableLock        0    2    1 a             00 iDb=0 root=2 write=1
  10 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 1             00 root=2 iDb=0; a
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 String8          0    2    0 abc           00 r[2]='abc'
REG[2] =   t3[abc](8)
   4 MakeRecord       2    1    3               00 r[3]=mkrec(r[2])
REG[3] =  s5[0213616263..abc](8)
   5 Insert           0    3    1 a             1B intkey=r[1] data=r[3]
REG[3] =  s5[0213616263..abc](8)
REG[1] =  i:1
   6 Noop             0    0    0               00 
   7 Halt             0    0    0               00 
SQL: [;
CREATE TEMP TABLE IF NOT EXISTS t1_mirror(t1_mirror2);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      1    1    0 0             01 usesStmtJournal=0
  31 TableLock        1    1    1 sqlite_temp_master 00 iDb=1 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       1    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        1    2    4               00 
   4 SetCookie        1    5    1               00 
   5 CreateTable      1    2    0               00 r[2]=root iDb=1
REG[2] =  i:2
   6 OpenWrite        0    1    1 5             00 root=1 iDb=1
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    1 5             00 root=1 iDb=1; sqlite_temp_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_temp_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:1
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:1
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:1
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t1_mirror     00 r[7]='t1_mirror'
REG[7] =   t9[t1_mirror](8)
  21 String8          0    8    0 t1_mirror     00 r[8]='t1_mirror'
REG[8] =   t9[t1_mirror](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  23 String8          0   10    0 CREATE TABLE t1_mirror(t1_mirror2) 00 r[10]='CREATE TABLE t1_mirror(t1_mirror2)'
REG[10] =   t34[CREATE TABLE t1](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s64[06171F1F01517461626C6574315F6D69.....Qtablet1_mi](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s64[06171F1F01517461626C6574315F6D69.....Qtablet1_mi](8)
REG[5] =  i:1
  26 Close            1    0    0               00 
  27 SetCookie        1    1    1               00 
  28 ParseSchema      1    0    0 tbl_name='t1_mirror' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      1    0    1 0             00 usesStmtJournal=0
  17 TableLock        1    1    0 sqlite_temp_master 00 iDb=1 root=1 write=0
  18 String8          0    2    0 t1_mirror     00 r[2]='t1_mirror'
REG[2] =   t9[t1_mirror](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          0    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_temp_master.tbl_name
REG[1] =   s9[t1_mirror](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t9[t1_mirror](8)
REG[1] =   s9[t1_mirror](8)
   7 Column           0    0    3               00 r[3]=sqlite_temp_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_temp_master.name
REG[5] =   s9[t1_mirror](8)
  10 Column           0    3    6               00 r[6]=sqlite_temp_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_temp_master.sql
REG[7] =   s34[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s9[t1_mirror](8)
REG[6] =  i:2
REG[7] =   s34[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [PRAGMA writable_schema = 1;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
BEGIN;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [;
insert into a (b, b, b)
    values (4476, 2, 1);]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    1    2 0             01 usesStmtJournal=0
   9 TableLock        0    2    1 a             00 iDb=0 root=2 write=1
  10 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 1             00 root=2 iDb=0; a
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   3 Integer       4476    2    0               00 r[2]=4476
REG[2] =  i:4476
   4 MakeRecord       2    1    3               00 r[3]=mkrec(r[2])
REG[3] =  s4[0202117C...|](8)
   5 Insert           0    3    1 a             1B intkey=r[1] data=r[3]
REG[3] =  s4[0202117C...|](8)
REG[1] =  i:2
   6 Noop             0    0    0               00 
   7 Halt             0    0    0               00 
SQL: [CREATE VIEW t1_bi AS SELECT * FROM temp_store_directory_test;]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    2 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:4
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:4
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:4
  19 String8          0    6    0 view          00 r[6]='view'
REG[6] =   t4[view](8)
  20 String8          0    7    0 t1_bi         00 r[7]='t1_bi'
REG[7] =   t5[t1_bi](8)
  21 String8          0    8    0 t1_bi         00 r[8]='t1_bi'
REG[8] =   t5[t1_bi](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:0
  23 String8          0   10    0 CREATE VIEW t1_bi AS SELECT * FROM temp_store_directory_test 00 r[10]='CREATE VIEW t1_bi AS SELECT * FROM temp_store_directory_test'
REG[10] =   t60[CREATE VIEW t1_](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s81[071517170881057669657774315F6269.......viewt1_bi](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s81[071517170881057669657774315F6269.......viewt1_bi](8)
REG[5] =  i:4
  26 Close            1    0    0               00 
  27 SetCookie        0    1    3               00 
  28 ParseSchema      0    0    0 tbl_name='t1_bi' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1_bi         00 r[2]='t1_bi'
REG[2] =   t5[t1_bi](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[t1_bi](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[t1_bi](8)
REG[1] =   s25[temp_store_dire](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[t1_bi](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[t1_bi](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t5[t1_bi](8)
REG[1] =   s5[t1_bi](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s4[view](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s4[view](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s5[t1_bi](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:0
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s60[CREATE VIEW t1_](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s5[t1_bi](8)
REG[6] =  i:0
REG[7] =   s60[CREATE VIEW t1_](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [CREATE TRIGGER t1_ai BEFORE DELETE ON temp_store_directory_test BEGIN
        INSERT INTO temp_store_directory_test(temp_table) VALUES('before-del-'||old.temp_table);
        INSERT INTO temp_store_directory_test(temp_table) VALUES('before-del-'||old.temp_table);
      END;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    1    3 0             01 usesStmtJournal=0
  15 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  16 Goto             0    1    0               00 
   1 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   3 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   4 String8          0    3    0 t1_ai         00 r[3]='t1_ai'
REG[3] =   t5[t1_ai](8)
   5 String8          0    4    0 temp_store_directory_test 00 r[4]='temp_store_directory_test'
REG[4] =   t25[temp_store_dire](8)
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 String8          0    6    0 CREATE TRIGGER t1_ai BEFORE DELETE ON temp_store_directory_test BEGIN
        INSERT INTO temp_store_directory_test(temp_table) VALUES('before-del-'||old.temp_table);
        INSERT INTO temp_store_directory_test(temp_table) VALUES('before-del-'||old.temp_table);
      END 00 r[6]='CREATE TRIGGER t1_ai BEFORE DELETE ON temp_store_directory_test BEGIN
        INSERT INTO tem
REG[6] =   t273[CREATE TRIGGER ](8)
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
REG[7] =  s317[071B173F08842F747269676765727431...?../triggert1](8)
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
REG[7] =  s317[071B173F08842F747269676765727431...?../triggert1](8)
REG[1] =  i:5
  10 Close            0    0    0               00 
  11 SetCookie        0    1    4               00 
  12 ParseSchema      0    0    0 type='trigger' AND name='t1_ai' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  19 String8          0    4    0 t1_ai         00 r[4]='t1_ai'
REG[4] =   t5[t1_ai](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s4[view](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s4[view](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s5[t1_ai](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[t1_ai](8)
REG[3] =   s5[t1_ai](8)
   9 Copy             3    5    0               00 r[5]=r[3]
REG[5] =   s5[t1_ai](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:0
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s273[CREATE TRIGGER ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s5[t1_ai](8)
REG[6] =  i:0
REG[7] =   s273[CREATE TRIGGER ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    4 0             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s17[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:2
REG[3] =   s17[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s25[temp_store_dire](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s157[CREATE TABLE te](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s25[temp_store_dire](8)
REG[2] =  i:3
REG[3] =   s157[CREATE TABLE te](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s38[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s15[sqlite_sequence](8)
REG[2] =  i:4
REG[3] =   s38[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s5[t1_bi](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s60[CREATE VIEW t1_](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s5[t1_bi](8)
REG[2] =  i:0
REG[3] =   s60[CREATE VIEW t1_](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s5[t1_ai](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s273[CREATE TRIGGER ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s5[t1_ai](8)
REG[2] =  i:0
REG[3] =   s273[CREATE TRIGGER ](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    4 0             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s17[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:2
REG[3] =   s17[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s25[temp_store_dire](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s157[CREATE TABLE te](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s25[temp_store_dire](8)
REG[2] =  i:3
REG[3] =   s157[CREATE TABLE te](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s38[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s15[sqlite_sequence](8)
REG[2] =  i:4
REG[3] =   s38[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s5[t1_bi](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s60[CREATE VIEW t1_](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s5[t1_bi](8)
REG[2] =  i:0
REG[3] =   s60[CREATE VIEW t1_](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s5[t1_ai](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s273[CREATE TRIGGER ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s5[t1_ai](8)
REG[2] =  i:0
REG[3] =   s273[CREATE TRIGGER ](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
SELECT
     (SELECT sum(t==xyz) FROM temp_store_directory_test)
    FROM
     (SELECT curr.t as xyz
        FROM temp_store_directory_test AS curr LEFT JOIN temp_store_directory_test AS other
       GROUP BY curr.t);]
VDBE Trace:
   0 Init             0   72    0               00 Start at 72
  72 Transaction      0    0    4 0             01 usesStmtJournal=0
  73 TableLock        0    3    0 temp_store_directory_test 00 iDb=0 root=3 write=0
  74 Goto             0    1    0               00 
   1 InitCoroutine    1   50    2               00 sqlite_sq_24F9640
  50 Explain          0    0    0 SCAN SUBQUERY 1 00 
  51 InitCoroutine    1    0    2               00 
  52 Yield            1   71    0               00 next row of "sqlite_sq_24F9640"
REG[1] =  i:1
REG[1] =  i:52
   2 SorterOpen       4    1    0 k(1,B)        00 
   3 Integer          0    4    0               00 r[4]=0; clear abort flag
REG[4] =  i:0
   4 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
REG[3] =  i:0
   5 Null             0    7    7               00 r[7..7]=NULL
REG[7] =  NULL
   6 Gosub            6   47    0               00 
REG[6] =  i:6
  47 Null             0    2    2               00 r[2..2]=NULL
REG[2] =  NULL
  48 Return           6    0    0               00 
REG[6] =  i:6
   7 OpenRead         1    3    0 2             00 root=3 iDb=0; temp_store_directory_test
   8 OpenRead         2    3    0 0             00 root=3 iDb=0; temp_store_directory_test
   9 Explain          1    0    0 SCAN TABLE temp_store_directory_test AS curr 00 
  10 Rewind           1   23    0               00 
  23 Close            1    0    0               00 
  24 Close            2    0    0               00 
  25 OpenPseudo       5   11    1               00 1 columns in r[11]
  26 SorterSort       4   49    0               00 GROUP BY sort
  49 EndCoroutine     1    0    0               00 
REG[1] =  i:52
  71 Halt             0    0    0               00 
SQL: [SELECT temp_table FROM temp_store_directory_test WHERE temp_table LIKE '_4' ORDER BY temp_table;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    4 0             01 usesStmtJournal=0
  14 TableLock        0    3    0 temp_store_directory_test 00 iDb=0 root=3 write=0
  15 String8          0    2    0 _4            00 r[2]='_4'
REG[2] =   t2[_4](8)
  16 Goto             0    1    0               00 
   1 Noop             1    3    0               00 
   2 OpenRead         0    3    0 0             00 root=3 iDb=0; temp_store_directory_test
   3 Explain          0    0    0 SCAN TABLE temp_store_directory_test 00 
   4 Rewind           0   11    0               00 
  11 Close            0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;
INSERT INTO t1_mirror SELECT * FROM t1_mirror;]
VDBE Trace:
   0 Init             0   26    0               00 Start at 26
  26 Transaction      1    1    1 0             01 usesStmtJournal=0
  27 TableLock        1    2    1 t1_mirror     00 iDb=1 root=2 write=1
  28 Goto             0    1    0               00 
   1 InitCoroutine    3   10    2               00 
  10 OpenEphemeral    1    1    0               00 nColumn=1
  11 Yield            3   16    0               00 
REG[3] =  i:1
REG[3] =  i:11
   2 OpenRead         0    2    1 1             00 root=2 iDb=1; t1_mirror
   3 Explain          0    0    0 SCAN TABLE t1_mirror 00 
   4 Rewind           0    8    0               00 
   8 Close            0    0    0               00 
   9 EndCoroutine     3    0    0               00 
REG[3] =  i:11
  16 OpenWrite        2    2    1 1             00 root=2 iDb=1; t1_mirror
  17 Rewind           1   23    0               00 
  23 Close            1    0    0               00 
  24 Noop             2    0    0               00 
  25 Halt             0    0    0               00 
SQL: [SELECT CASE WHEN 1 THEN 'true' WHEN 0 THEN 'false' ELSE 'else' END;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0 true          00 r[1]='true'
REG[1] =   t4[true](8)
   2 Goto             0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t4[true](8)
   8 Halt             0    0    0               00 
SQL: [;
--  256
    INSERT INTO t1_mirror SELECT * FROM t1_mirror;]
VDBE Trace:
   0 Init             0   26    0               00 Start at 26
  26 Transaction      1    1    1 0             01 usesStmtJournal=0
  27 TableLock        1    2    1 t1_mirror     00 iDb=1 root=2 write=1
  28 Goto             0    1    0               00 
   1 InitCoroutine    3   10    2               00 
  10 OpenEphemeral    1    1    0               00 nColumn=1
  11 Yield            3   16    0               00 
REG[3] =  i:1
REG[3] =  i:11
   2 OpenRead         0    2    1 1             00 root=2 iDb=1; t1_mirror
   3 Explain          0    0    0 SCAN TABLE t1_mirror 00 
   4 Rewind           0    8    0               00 
   8 Close            0    0    0               00 
   9 EndCoroutine     3    0    0               00 
REG[3] =  i:11
  16 OpenWrite        2    2    1 1             00 root=2 iDb=1; t1_mirror
  17 Rewind           1   23    0               00 
  23 Close            1    0    0               00 
  24 Noop             2    0    0               00 
  25 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    4 0             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s17[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:2
REG[3] =   s17[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s25[temp_store_dire](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s157[CREATE TABLE te](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s25[temp_store_dire](8)
REG[2] =  i:3
REG[3] =   s157[CREATE TABLE te](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s38[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s15[sqlite_sequence](8)
REG[2] =  i:4
REG[3] =   s38[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s5[t1_bi](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s60[CREATE VIEW t1_](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s5[t1_bi](8)
REG[2] =  i:0
REG[3] =   s60[CREATE VIEW t1_](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s5[t1_ai](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s273[CREATE TRIGGER ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s5[t1_ai](8)
REG[2] =  i:0
REG[3] =   s273[CREATE TRIGGER ](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
SELECT coalesce(t!=t,99) FROM temp_store_directory_test;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    4 0             01 usesStmtJournal=0
  13 TableLock        0    3    0 temp_store_directory_test 00 iDb=0 root=3 write=0
  14 Goto             0    1    0               00 
   1 OpenRead         0    3    0 2             00 root=3 iDb=0; temp_store_directory_test
   2 Explain          0    0    0 SCAN TABLE temp_store_directory_test 00 
   3 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
ALTER TABLE temp_store_directory_test ADD t1_bu CHECK (t1_ai>t1_bu);]
VDBE Trace:
   0 Init             0   37    0               00 Start at 37
  37 Transaction      0    1    4 0             01 usesStmtJournal=0
  38 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  39 String8          0    9    0 table         00 r[9]='table'
REG[9] =   t5[table](8)
  40 String8          0   11    0 temp_store_directory_test 00 r[11]='temp_store_directory_test'
REG[11] =   t25[temp_store_dire](8)
  41 Integer          1   14    0               00 r[14]=1
REG[14] =  i:1
  42 Integer        156   15    0               00 r[15]=156
REG[15] =  i:156
  43 String8          0   16    0 ,             00 r[16]=', '
REG[16] =   t2[, ](8)
  44 String8          0   17    0 t1_bu CHECK (t1_ai>t1_bu) 00 r[17]='t1_bu CHECK (t1_ai>t1_bu)'
REG[17] =   t25[t1_bu CHECK (t1](8)
  45 Integer        157   19    0               00 r[19]=157
REG[19] =  i:157
  46 Goto             0    1    0               00 
   1 SetCookie        0    1    5               00 
   2 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   3 OpenRead         0    1    0 2             00 root=1 iDb=0; sqlite_master
   4 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   5 Rewind           0   13    0               00 
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   7 Ne               9   12    8 (BINARY)      52 if r[9]!=r[8] goto 12
REG[9] =   t5[table](8)
REG[8] =   s5[table](8)
   8 Column           0    1   10               00 r[10]=sqlite_master.name
REG[10] =   s1[a](8)
   9 Ne              11   12   10 (BINARY)      52 if r[11]!=r[10] goto 12
REG[11] =   t25[temp_store_dire](8)
REG[10] =   s1[a](8)
  12 Next             0    6    0               01 
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   7 Ne               9   12    8 (BINARY)      52 if r[9]!=r[8] goto 12
REG[9] =   t5[table](8)
REG[8] =   s5[table](8)
   8 Column           0    1   10               00 r[10]=sqlite_master.name
REG[10] =   s25[temp_store_dire](8)
   9 Ne              11   12   10 (BINARY)      52 if r[11]!=r[10] goto 12
REG[11] =   t25[temp_store_dire](8)
REG[10] =   s25[temp_store_dire](8)
  10 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
  11 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:2
  12 Next             0    6    0               01 
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   7 Ne               9   12    8 (BINARY)      52 if r[9]!=r[8] goto 12
REG[9] =   t5[table](8)
REG[8] =   s5[table](8)
   8 Column           0    1   10               00 r[10]=sqlite_master.name
REG[10] =   s15[sqlite_sequence](8)
   9 Ne              11   12   10 (BINARY)      52 if r[11]!=r[10] goto 12
REG[11] =   t25[temp_store_dire](8)
REG[10] =   s15[sqlite_sequence](8)
  12 Next             0    6    0               01 
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s4[view](8)
   7 Ne               9   12    8 (BINARY)      52 if r[9]!=r[8] goto 12
REG[9] =   t5[table](8)
REG[8] =   s4[view](8)
  12 Next             0    6    0               01 
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s7[trigger](8)
   7 Ne               9   12    8 (BINARY)      52 if r[9]!=r[8] goto 12
REG[9] =   t5[table](8)
REG[8] =   s7[trigger](8)
  12 Next             0    6    0               01 
  13 Close            0    0    0               00 
  14 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
  15 RowSetRead       1   31    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  16 NotExists        0   15    2               00 intkey=r[2]
REG[2] =  i:2
  17 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
  18 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s25[temp_store_dire](8)
  19 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
REG[5] =   s25[temp_store_dire](8)
  20 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  21 Column           0    4   13               00 r[13]=sqlite_master.sql
REG[13] =   s157[CREATE TABLE te](8)
  22 Function0        6   13   12 substr(3)     03 r[12]=func(r[13..15])
REG[13] =   s157[CREATE TABLE te](8)
REG[14] =  i:1
REG[15] =  i:156
REG[12] =   s156[CREATE TABLE te](8)
  23 Concat          16   12    8               00 r[8]=r[12]+r[16]
REG[16] =   t2[, ](8)
REG[12] =   s156[CREATE TABLE te](8)
REG[8] =   s158[CREATE TABLE te](8)
  24 Concat          17    8   10               00 r[10]=r[8]+r[17]
REG[17] =   t25[t1_bu CHECK (t1](8)
REG[8] =   s158[CREATE TABLE te](8)
REG[10] =   s183[CREATE TABLE te](8)
  25 Column           0    4   18               00 r[18]=sqlite_master.sql
REG[18] =   s157[CREATE TABLE te](8)
  26 Function0        2   18    8 substr(2)     02 r[8]=func(r[18..19])
REG[18] =   s157[CREATE TABLE te](8)
REG[19] =  i:157
REG[8] =   s1[)](8)
  27 Concat           8   10    7               00 r[7]=r[10]+r[8]
REG[8] =   s1[)](8)
REG[10] =   s183[CREATE TABLE te](8)
REG[7] =   s184[CREATE TABLE te](8)
  28 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s247[07173F3F01827D7461626C6574656D70..??..}tabletemp](8)
  29 Insert           0    8    2               00 intkey=r[2] data=r[8]
REG[8] =  s247[07173F3F01827D7461626C6574656D70..??..}tabletemp](8)
REG[2] =  i:2
  30 Goto             0   15    0               00 
  15 RowSetRead       1   31    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  31 Close            0    0    0               00 
  32 SetCookie        0    2    4               00 
  33 DropTrigger      0    0    0 t1_ai         00 
  34 DropTable        0    0    0 temp_store_directory_test 00 
  35 ParseSchema      0    0    0 tbl_name='temp_store_directory_test' 00 
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    5 0             00 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 temp_store_directory_test 00 r[2]='temp_store_directory_test'
REG[2] =   t25[temp_store_dire](8)
  17 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s1[a](8)
  11 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s25[temp_store_dire](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s25[temp_store_dire](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:3
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s184[CREATE TABLE te](8)
  10 ResultRow        3    3    0               00 output=r[3..5]
REG[3] =   s25[temp_store_dire](8)
REG[4] =  i:3
REG[5] =   s184[CREATE TABLE te](8)
  11 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s15[sqlite_sequence](8)
  11 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[t1_bi](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s5[t1_bi](8)
  11 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s25[temp_store_dire](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t25[temp_store_dire](8)
REG[1] =   s25[temp_store_dire](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s5[t1_ai](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:0
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s273[CREATE TRIGGER ](8)
  10 ResultRow        3    3    0               00 output=r[3..5]
REG[3] =   s5[t1_ai](8)
REG[4] =  i:0
REG[5] =   s273[CREATE TRIGGER ](8)
  11 Next             0    5    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    5 1             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s17[CREATE TABLE a(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:2
REG[3] =   s17[CREATE TABLE a(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s25[temp_store_dire](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s184[CREATE TABLE te](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s25[temp_store_dire](8)
REG[2] =  i:3
REG[3] =   s184[CREATE TABLE te](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s38[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s15[sqlite_sequence](8)
REG[2] =  i:4
REG[3] =   s38[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s5[t1_bi](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s60[CREATE VIEW t1_](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s5[t1_bi](8)
REG[2] =  i:0
REG[3] =   s60[CREATE VIEW t1_](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s5[t1_ai](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s273[CREATE TRIGGER ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s5[t1_ai](8)
REG[2] =  i:0
REG[3] =   s273[CREATE TRIGGER ](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      1    0    1 1             00 usesStmtJournal=0
  13 TableLock        1    1    0 sqlite_temp_master 00 iDb=1 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          0    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_temp_master.name
REG[1] =   s9[t1_mirror](8)
   6 Column           0    3    2               00 r[2]=sqlite_temp_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_temp_master.sql
REG[3] =   s34[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s9[t1_mirror](8)
REG[2] =  i:2
REG[3] =   s34[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
UPDATE a SET b='abcde', b='aሴ%E';]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      0    1    5 1             01 usesStmtJournal=0
  19 TableLock        0    2    1 a             00 iDb=0 root=2 write=1
  20 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; a
   3 Explain          0    0    0 SCAN TABLE a  00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:2
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 OpenWrite        0    2    0 1             00 root=2 iDb=0; a
  10 RowSetRead       1   16    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:1
  12 String8          0    3    0 aሴ%E        00 r[3]='aሴ%E'
REG[3] =   t6[a...%E](8)
  13 MakeRecord       3    1    4               00 r[4]=mkrec(r[3])
REG[4] =  s8[021961E188B42545..a...%E](8)
  14 Insert           0    4    2 a             05 intkey=r[2] data=r[4]
REG[4] =  s8[021961E188B42545..a...%E](8)
REG[2] =  i:1
  15 Goto             0   10    0               00 
  10 RowSetRead       1   16    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:2
  12 String           6    3    0 aሴ%E        00 r[3]='aሴ%E' (len=6)
REG[3] =   t6[a...%E](8)
  13 MakeRecord       3    1    4               00 r[4]=mkrec(r[3])
REG[4] =  s8[021961E188B42545..a...%E](8)
  14 Insert           0    4    2 a             05 intkey=r[2] data=r[4]
REG[4] =  s8[021961E188B42545..a...%E](8)
REG[2] =  i:2
  15 Goto             0   10    0               00 
  10 RowSetRead       1   16    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  16 Noop             0    0    0               00 
  17 Halt             0    0    0               00 
SQL: [;
SELECT t1_bu, (SELECT sum(b=t1_bu) FROM a)
      FROM temp_store_directory_test;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0    5 1             01 usesStmtJournal=0
  26 TableLock        0    3    0 temp_store_directory_test 00 iDb=0 root=3 write=0
  27 TableLock        0    2    0 a             00 iDb=0 root=2 write=0
  28 Goto             0    1    0               00 
   1 OpenRead         0    3    0 4             00 root=3 iDb=0; temp_store_directory_test
   2 Explain          0    0    0 SCAN TABLE temp_store_directory_test 00 
   3 Rewind           0   23    0               00 
  23 Close            0    0    0               00 
  24 Halt             0    0    0               00 
SQL: [;
SELECT b LIKE 'a%_' FROM a;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    5 1             01 usesStmtJournal=0
  11 TableLock        0    2    0 a             00 iDb=0 root=2 write=0
  12 String8          0    2    0 a%_           00 r[2]='a%_'
REG[2] =   t3[a%_](8)
  13 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; a
   2 Explain          0    0    0 SCAN TABLE a  00 
   3 Rewind           0    8    0               00 
   4 Column           0    0    3               00 r[3]=a.b
REG[3] =   s6[a...%E](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t3[a%_](8)
REG[3] =   s6[a...%E](8)
REG[1] =  i:1
   6 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   7 Next             0    4    0               01 
   4 Column           0    0    3               00 r[3]=a.b
REG[3] =   s6[a...%E](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t3[a%_](8)
REG[3] =   s6[a...%E](8)
REG[1] =  i:1
   6 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   7 Next             0    4    0               01 
   8 Close            0    0    0               00 
   9 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f147c211859 in __GI_abort () at abort.c:79
#2  0x00007f147c211729 in __assert_fail_base (fmt=0x7f147c3a7588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x20d94f "op==TK_CASE", file=0x222c23 "sqlite3.c", line=92150, function=<optimized out>) at assert.c:92
#3  0x00007f147c222fd6 in __GI___assert_fail (assertion=0x20d94f "op==TK_CASE", file=0x222c23 "sqlite3.c", line=92150, function=0x21a1ea "int sqlite3ExprCodeTarget(Parse *, Expr *, int)") at assert.c:101
#4  0x000000000037b938 in sqlite3ExprCodeTarget (pParse=0x24f9d50, pExpr=0x2578840, target=8) at sqlite3.c:92150
#5  0x000000000037228a in sqlite3ExprCodeTemp (pParse=0x24f9d50, pExpr=0x2578840, pReg=0x7ffedf3bc424) at sqlite3.c:92302
#6  0x0000000000371435 in sqlite3ExprIfTrue (pParse=0x24f9d50, pExpr=0x2578e60, dest=<optimized out>, jumpIfNull=16) at sqlite3.c:92559
#7  0x0000000000384b90 in sqlite3GenerateConstraintChecks (pParse=<optimized out>, pTab=0x2500110, aRegIdx=<optimized out>, iDataCur=0, iIdxCur=1, regNewData=3, regOldData=2, pkChng=1 '\001', overrideError=10 '\n', 
    ignoreDest=10, pbMayReplace=0x7ffedf3bc71c, aiChng=0x24f84c0) at sqlite3.c:107197
#8  0x000000000033c4b3 in sqlite3Update (pParse=<optimized out>, pTabList=<optimized out>, pChanges=<optimized out>, pWhere=<optimized out>, onError=<optimized out>) at sqlite3.c:120426
#9  0x000000000030729a in yy_reduce (yypParser=0x2577440, yyruleno=<optimized out>) at sqlite3.c:133465
#10 0x00000000002fef8e in sqlite3Parser (yyp=0x2577440, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#11 0x00000000002fc544 in sqlite3RunParser (pParse=0x24f9d50, 
    zSql=0x2576ea0 ";\nUPDATE temp_store_directory_test SET temp_table='ABC', temp_table='temp_store_directory_test[^]temp_table]C';SELECT typeof(00000009223372036854775808);;\nSAVEPOINT sp1;;\nSELECT name, rootpage, sql FR"..., pzErrMsg=0x7ffedf3bc9c8) at sqlite3.c:135186
#12 0x00000000002fac4e in sqlite3Prepare (db=0x24e7cb0, 
    zSql=0x24e8ae9 ";\nUPDATE temp_store_directory_test SET temp_table='ABC', temp_table='temp_store_directory_test[^]temp_table]C';SELECT typeof(00000009223372036854775808);;\nSAVEPOINT sp1;;\nSELECT name, rootpage, sql FR"..., nBytes=<optimized out>, saveSqlFlag=1, pReprepare=<optimized out>, ppStmt=0x7ffedf3bcaf8, pzTail=0x7ffedf3bcae0) at sqlite3.c:112589
#13 0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0x24e7cb0, 
    zSql=0x24e8ae9 ";\nUPDATE temp_store_directory_test SET temp_table='ABC', temp_table='temp_store_directory_test[^]temp_table]C';SELECT typeof(00000009223372036854775808);;\nSAVEPOINT sp1;;\nSELECT name, rootpage, sql FR"..., nBytes=1421, saveSqlFlag=1, pOld=0x0, ppStmt=<optimized out>, pzTail=0x7ffedf3bcae0) at sqlite3.c:112688
#14 0x000000000028f38c in sqlite3_prepare_v2 (db=0x2, zSql=0x7ffedf3bbf90 "", nBytes=0, ppStmt=0x7ffedf3bcaf8, pzTail=<optimized out>) at sqlite3.c:112764
#15 0x000000000024b100 in main (argc=1, argv=0x7ffedf3bcca8) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 17201] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
