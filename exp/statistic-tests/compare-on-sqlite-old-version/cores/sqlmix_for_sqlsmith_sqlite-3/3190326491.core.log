GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000140,sig:06,src:021189+021696,time:3785652,execs:412002,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;CREATE TABLE t2i1(tr1);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    1 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:2
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:2
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:2
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t2i1          00 r[7]='t2i1'
REG[7] =   t4[t2i1](8)
  21 String8          0    8    0 t2i1          00 r[8]='t2i1'
REG[8] =   t4[t2i1](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  23 String8          0   10    0 CREATE TABLE t2i1(tr1) 00 r[10]='CREATE TABLE t2i1(tr1)'
REG[10] =   t22[CREATE TABLE t2](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s42[0617151501397461626C657432693174.....9tablet2i1t](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s42[0617151501397461626C657432693174.....9tablet2i1t](8)
REG[5] =  i:2
  26 Close            1    0    0               00 
  27 SetCookie        0    1    2               00 
  28 ParseSchema      0    0    0 tbl_name='t2i1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t2i1          00 r[2]='t2i1'
REG[2] =   t4[t2i1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s4[t2i1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s4[t2i1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s22[CREATE TABLE t2](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s4[t2i1](8)
REG[6] =  i:3
REG[7] =   s22[CREATE TABLE t2](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [CREATE TABLE tr2(t0, c0 INTEGER, c1 TEXT, y REAL, c BLOB);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    2 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:3
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:3
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:3
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 tr2           00 r[7]='tr2'
REG[7] =   t3[tr2](8)
  21 String8          0    8    0 tr2           00 r[8]='tr2'
REG[8] =   t3[tr2](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  23 String8          0   10    0 CREATE TABLE tr2(t0, c0 INTEGER, c1 TEXT, y REAL, c BLOB) 00 r[10]='CREATE TABLE tr2(t0, c0 INTEGER, c1 TEXT, y REAL, c BLOB)'
REG[10] =   t57[CREATE TABLE tr](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s75[06171313017F7461626C657472327472......tabletr2tr](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s75[06171313017F7461626C657472327472......tabletr2tr](8)
REG[5] =  i:3
  26 Close            1    0    0               00 
  27 SetCookie        0    1    3               00 
  28 ParseSchema      0    0    0 tbl_name='tr2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 tr2           00 r[2]='tr2'
REG[2] =   t3[tr2](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s3[tr2](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s3[tr2](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s57[CREATE TABLE tr](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s3[tr2](8)
REG[6] =  i:4
REG[7] =   s57[CREATE TABLE tr](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;
;CREATE TABLE i1(
    z TEXT DEFAULT (CASE WHEN 1 IS 3530822107858468864 
                            THEN 1 ELSE quote(1) IS 3530822107858468864 END)
  );]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    3 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:4
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:4
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:4
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 i1            00 r[7]='i1'
REG[7] =   t2[i1](8)
  21 String8          0    8    0 i1            00 r[8]='i1'
REG[8] =   t2[i1](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  23 String8          0   10    0 CREATE TABLE i1(
    z TEXT DEFAULT (CASE WHEN 1 IS 3530822107858468864 
                            THEN 1 ELSE quote(1) IS 3530822107858468864 END)
  ) 00 r[10]='CREATE TABLE i1(
    z TEXT DEFAULT (CASE WHEN 1 IS 3530822107858468864 
                   
REG[10] =   t153[CREATE TABLE i1](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s170[0717111101823F7461626C6569316931......?tablei1i1](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s170[0717111101823F7461626C6569316931......?tablei1i1](8)
REG[5] =  i:4
  26 Close            1    0    0               00 
  27 SetCookie        0    1    4               00 
  28 ParseSchema      0    0    0 tbl_name='i1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 i1            00 r[2]='i1'
REG[2] =   t2[i1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s2[i1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[i1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s153[CREATE TABLE i1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[i1](8)
REG[6] =  i:5
REG[7] =   s153[CREATE TABLE i1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;INSERT INTO tr2(t0) VALUES(1), (2), (3), (4), (5), (6);]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    1    4 0             01 usesStmtJournal=0
  24 TableLock        0    4    1 tr2           00 iDb=0 root=4 write=1
  25 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  26 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  27 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  28 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  29 Goto             0    1    0               00 
   1 InitCoroutine    7   15    2               00 
  15 OpenWrite        0    4    0 5             00 root=4 iDb=0; tr2
  16 Yield            7   21    0               00 
REG[7] =  i:1
REG[7] =  i:16
   2 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   3 Yield            7    0    0               00 
REG[7] =  i:16
REG[7] =  i:3
  17 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
  18 MakeRecord       2    5    8 ADBE          00 r[8]=mkrec(r[2..6])
REG[8] =  s6[060900000000......](8)
  19 Insert           0    8    1 tr2           1B intkey=r[1] data=r[8]
REG[8] =  s6[060900000000......](8)
REG[1] =  i:1
  20 Goto             0   16    0               00 
  16 Yield            7   21    0               00 
REG[7] =  i:3
REG[7] =  i:16
   4 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
   5 Yield            7    0    0               00 
REG[7] =  i:16
REG[7] =  i:5
  17 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
  18 MakeRecord       2    5    8 ADBE          00 r[8]=mkrec(r[2..6])
REG[8] =  s7[06010000000002.......](8)
  19 Insert           0    8    1 tr2           1B intkey=r[1] data=r[8]
REG[8] =  s7[06010000000002.......](8)
REG[1] =  i:2
  20 Goto             0   16    0               00 
  16 Yield            7   21    0               00 
REG[7] =  i:5
REG[7] =  i:16
   6 Integer          3    2    0               00 r[2]=3
REG[2] =  i:3
   7 Yield            7    0    0               00 
REG[7] =  i:16
REG[7] =  i:7
  17 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
  18 MakeRecord       2    5    8 ADBE          00 r[8]=mkrec(r[2..6])
REG[8] =  s7[06010000000003.......](8)
  19 Insert           0    8    1 tr2           1B intkey=r[1] data=r[8]
REG[8] =  s7[06010000000003.......](8)
REG[1] =  i:3
  20 Goto             0   16    0               00 
  16 Yield            7   21    0               00 
REG[7] =  i:7
REG[7] =  i:16
   8 Integer          4    2    0               00 r[2]=4
REG[2] =  i:4
   9 Yield            7    0    0               00 
REG[7] =  i:16
REG[7] =  i:9
  17 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
  18 MakeRecord       2    5    8 ADBE          00 r[8]=mkrec(r[2..6])
REG[8] =  s7[06010000000004.......](8)
  19 Insert           0    8    1 tr2           1B intkey=r[1] data=r[8]
REG[8] =  s7[06010000000004.......](8)
REG[1] =  i:4
  20 Goto             0   16    0               00 
  16 Yield            7   21    0               00 
REG[7] =  i:9
REG[7] =  i:16
  10 Integer          5    2    0               00 r[2]=5
REG[2] =  i:5
  11 Yield            7    0    0               00 
REG[7] =  i:16
REG[7] =  i:11
  17 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
  18 MakeRecord       2    5    8 ADBE          00 r[8]=mkrec(r[2..6])
REG[8] =  s7[06010000000005.......](8)
  19 Insert           0    8    1 tr2           1B intkey=r[1] data=r[8]
REG[8] =  s7[06010000000005.......](8)
REG[1] =  i:5
  20 Goto             0   16    0               00 
  16 Yield            7   21    0               00 
REG[7] =  i:11
REG[7] =  i:16
  12 Integer          6    2    0               00 r[2]=6
REG[2] =  i:6
  13 Yield            7    0    0               00 
REG[7] =  i:16
REG[7] =  i:13
  17 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
  18 MakeRecord       2    5    8 ADBE          00 r[8]=mkrec(r[2..6])
REG[8] =  s7[06010000000006.......](8)
  19 Insert           0    8    1 tr2           1B intkey=r[1] data=r[8]
REG[8] =  s7[06010000000006.......](8)
REG[1] =  i:6
  20 Goto             0   16    0               00 
  16 Yield            7   21    0               00 
REG[7] =  i:13
REG[7] =  i:16
  14 EndCoroutine     7    0    0               00 
REG[7] =  i:16
  21 Noop             0    0    0               00 
  22 Halt             0    0    0               00 
SQL: [SELECT length(tr1) FROM t2i1 WHERE tr1=2
;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    4 0             01 usesStmtJournal=0
  13 TableLock        0    3    0 t2i1          00 iDb=0 root=3 write=0
  14 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
  15 Goto             0    1    0               00 
   1 OpenRead         0    3    0 1             00 root=3 iDb=0; t2i1
   2 Explain          0    0    0 SCAN TABLE t2i1 00 
   3 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;SELECT * FROM i1;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    4 0             01 usesStmtJournal=0
  10 TableLock        0    5    0 i1            00 iDb=0 root=5 write=0
  11 Goto             0    1    0               00 
   1 OpenRead         0    5    0 1             00 root=5 iDb=0; i1
   2 Explain          0    0    0 SCAN TABLE i1 00 
   3 Rewind           0    7    0               00 
   7 Close            0    0    0               00 
   8 Halt             0    0    0               00 
SQL: [;CREATE TABLE IF NOT EXISTS "main"."t1_idx_5cb97285"(
  i2 INTEGER PRIMARY KEY,
  t17 INT,
  id INT,
  i3 TEXT,
  t3 TEXT,
  t16a TEXT
);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    4 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:6
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:5
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:5
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:5
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:5
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:5
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t1_idx_5cb97285 00 r[7]='t1_idx_5cb97285'
REG[7] =   t15[t1_idx_5cb97285](8)
  21 String8          0    8    0 t1_idx_5cb97285 00 r[8]='t1_idx_5cb97285'
REG[8] =   t15[t1_idx_5cb97285](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:6
  23 String8          0   10    0 CREATE TABLE "t1_idx_5cb97285"(
  i2 INTEGER PRIMARY KEY,
  t17 INT,
  id INT,
  i3 TEXT,
  t3 TEXT,
  t16a TEXT
) 00 r[10]='CREATE TABLE "t1_idx_5cb97285"(
  i2 INTEGER PRIMARY KEY,
  t17 INT,
  id INT,
  i3 TEXT,
  
REG[10] =   t114[CREATE TABLE "t](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s157[07172B2B0181717461626C6574315F69..++..qtablet1_i](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s157[07172B2B0181717461626C6574315F69..++..qtablet1_i](8)
REG[5] =  i:5
  26 Close            1    0    0               00 
  27 SetCookie        0    1    5               00 
  28 ParseSchema      0    0    0 tbl_name='t1_idx_5cb97285' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    5 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1_idx_5cb97285 00 r[2]='t1_idx_5cb97285'
REG[2] =   t15[t1_idx_5cb97285](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[t1_idx_5cb97285](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[t1_idx_5cb97285](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[t1_idx_5cb97285](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[t1_idx_5cb97285](8)
REG[1] =   s2[i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[t1_idx_5cb97285](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[t1_idx_5cb97285](8)
REG[1] =   s15[t1_idx_5cb97285](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s15[t1_idx_5cb97285](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:6
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s114[CREATE TABLE "t](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s15[t1_idx_5cb97285](8)
REG[6] =  i:6
REG[7] =   s114[CREATE TABLE "t](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [SELECT count(*) FROM tr2 WHERE t0=10.0 AND t0 LIKE '10.0'

;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    5 0             01 usesStmtJournal=0
  18 TableLock        0    4    0 tr2           00 iDb=0 root=4 write=0
  19 Real             0    3    0 10            00 r[3]=10
REG[3] =  r:10
  20 String8          0    5    0 10.0          00 r[5]='10.0'
REG[5] =   t4[10.0](8)
  21 Goto             0    1    0               00 
   1 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
   2 OpenRead         0    4    0 1             00 root=4 iDb=0; tr2
   3 Explain          0    0    0 SCAN TABLE tr2 00 
   4 Rewind           0   12    0               00 
   5 Column           0    0    2               00 r[2]=tr2.t0
REG[2] =  i:1
   6 Ne               3   11    2 (BINARY)      51 if r[3]!=r[2] goto 11
REG[3] =  r:10
REG[2] =  i:1
  11 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=tr2.t0
REG[2] =  i:2
   6 Ne               3   11    2 (BINARY)      51 if r[3]!=r[2] goto 11
REG[3] =  r:10
REG[2] =  i:2
  11 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=tr2.t0
REG[2] =  i:3
   6 Ne               3   11    2 (BINARY)      51 if r[3]!=r[2] goto 11
REG[3] =  r:10
REG[2] =  i:3
  11 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=tr2.t0
REG[2] =  i:4
   6 Ne               3   11    2 (BINARY)      51 if r[3]!=r[2] goto 11
REG[3] =  r:10
REG[2] =  i:4
  11 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=tr2.t0
REG[2] =  i:5
   6 Ne               3   11    2 (BINARY)      51 if r[3]!=r[2] goto 11
REG[3] =  r:10
REG[2] =  i:5
  11 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=tr2.t0
REG[2] =  i:6
   6 Ne               3   11    2 (BINARY)      51 if r[3]!=r[2] goto 11
REG[3] =  r:10
REG[2] =  i:6
  11 Next             0    5    0               01 
  12 Close            0    0    0               00 
  13 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  14 Copy             1    7    0               00 r[7]=r[1]
REG[7] =  i:0
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =  i:0
  16 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fc2db391859 in __GI_abort () at abort.c:79
#2  0x00007fc2db391729 in __assert_fail_base (fmt=0x7fc2db527588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x212bb5 "0", file=0x222c23 "sqlite3.c", line=92839, function=<optimized out>) at assert.c:92
#3  0x00007fc2db3a2fd6 in __GI___assert_fail (assertion=0x212bb5 "0", file=0x222c23 "sqlite3.c", line=92839, function=0x20fc5f "int sqlite3ExprCompare(Expr *, Expr *, int)") at assert.c:101
#4  0x0000000000365fa4 in sqlite3ExprCompare (pA=0x1a636d0, pB=0x8, iTab=<optimized out>) at sqlite3.c:92839
#5  0x00000000003721e1 in sqlite3ExprCodeTemp (pParse=0x1a64460, pExpr=0x1a719e8, pReg=<optimized out>) at sqlite3.c:92293
#6  0x0000000000378288 in sqlite3ExprCodeTarget (pParse=0x1a64460, pExpr=0x1a71980, target=<optimized out>) at sqlite3.c:91782
#7  0x00000000003154c9 in sqlite3ExprCode (pParse=0x1a64460, pExpr=<optimized out>, target=2) at sqlite3.c:92325
#8  0x00000000003796bd in sqlite3ExprCodeTarget (pParse=0x1a64460, pExpr=<optimized out>, target=<optimized out>) at sqlite3.c:92201
#9  0x000000000037823c in sqlite3ExprCodeTarget (pParse=0x1a64460, pExpr=0x1a6b670, target=2) at sqlite3.c:92068
#10 0x00000000003154c9 in sqlite3ExprCode (pParse=0x1a64460, pExpr=<optimized out>, target=2) at sqlite3.c:92325
#11 0x0000000000341791 in sqlite3Insert (pParse=<optimized out>, pTabList=<optimized out>, pSelect=<optimized out>, pColumn=0x0, onError=<optimized out>) at sqlite3.c:92355
#12 0x00000000003066b3 in yy_reduce (yypParser=0x1a720a0, yyruleno=<optimized out>) at sqlite3.c:133484
#13 0x00000000002fef8e in sqlite3Parser (yyp=0x1a720a0, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#14 0x00000000002fc544 in sqlite3RunParser (pParse=0x1a64460, 
    zSql=0x1a71170 ";INSERT INTO i1 DEFAULT VALUES;;\n;UPDATE OR REPLACE t1 SET b=2 WHERE b=4;;\n;DROP TABLE tr2;;SELECT i1.z, avg(i1.z)\n      FROM i1 AS i1\n     GROUP BY i1.z\n     HAVING NOT EXISTS( SELECT z.z, avg(z.z)\n "..., pzErrMsg=0x7ffd00925578) at sqlite3.c:135186
#15 0x00000000002fac4e in sqlite3Prepare (db=0x1a51850, 
    zSql=0x1a52971 ";INSERT INTO i1 DEFAULT VALUES;;\n;UPDATE OR REPLACE t1 SET b=2 WHERE b=4;;\n;DROP TABLE tr2;;SELECT i1.z, avg(i1.z)\n      FROM i1 AS i1\n     GROUP BY i1.z\n     HAVING NOT EXISTS( SELECT z.z, avg(z.z)\n "..., nBytes=<optimized out>, saveSqlFlag=1, pReprepare=<optimized out>, ppStmt=0x7ffd009256a8, pzTail=0x7ffd00925690) at sqlite3.c:112589
#16 0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0x1a51850, 
    zSql=0x1a52971 ";INSERT INTO i1 DEFAULT VALUES;;\n;UPDATE OR REPLACE t1 SET b=2 WHERE b=4;;\n;DROP TABLE tr2;;SELECT i1.z, avg(i1.z)\n      FROM i1 AS i1\n     GROUP BY i1.z\n     HAVING NOT EXISTS( SELECT z.z, avg(z.z)\n "..., nBytes=907, saveSqlFlag=1, pOld=0x0, ppStmt=<optimized out>, pzTail=0x7ffd00925690) at sqlite3.c:112688
#17 0x000000000028f38c in sqlite3_prepare_v2 (db=0x2, zSql=0x7ffd00924a40 "", nBytes=0, ppStmt=0x7ffd009256a8, pzTail=<optimized out>) at sqlite3.c:112764
#18 0x000000000024b100 in main (argc=1, argv=0x7ffd00925858) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 41265] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
