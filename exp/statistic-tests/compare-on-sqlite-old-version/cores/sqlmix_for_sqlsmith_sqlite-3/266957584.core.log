GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000607,sig:06,src:022652+008953,time:20367642,execs:4584721,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 GROUP BY x, x ORDER BY x DESC, x
;]
VDBE Trace:
   0 Init             0   43    0               00 Start at 43
  43 Transaction      0    0    3 0             01 usesStmtJournal=0
  44 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  45 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(2,-B,B)     00 
   2 Noop             2    2    0               00 
   3 Integer          0    3    0               00 r[3]=0; clear abort flag
REG[3] =  i:0
   4 Integer          0    2    0               00 r[2]=0; indicate accumulator empty
REG[2] =  i:0
   5 Null             0    6    7               00 r[6..7]=NULL
REG[6] =  NULL
   6 Gosub            5   34    0               00 
REG[5] =  i:6
  34 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
  35 Return           5    0    0               00 
REG[5] =  i:6
   7 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   8 Explain          0    0    0 SCAN TABLE t1 00 
   9 Rewind           0   21    0               00 
  10 Rowid            0    8    0               00 r[8]=rowid
REG[8] =  i:1
  11 SCopy            8    9    0               00 r[9]=r[8]
REG[9] =  i:1
  12 Compare          6    8    2 k(2,B,B)      00 r[6..7] <-> r[8..9]
REG[6] =  NULL
REG[8] =  i:1
  13 Jump            14   18   14               00 
  14 Move             8    6    2               00 r[6..7]=r[8..9]
REG[6] =  i:1
REG[7] =  i:1
  15 Gosub            4   26    0               00 output one row
REG[4] =  i:15
  26 IfPos            2   28    0               00 if r[2]>0 then r[2]-=0, goto 28; Groupby result generator entry point
REG[2] =  i:0
  27 Return           4    0    0               00 
REG[4] =  i:15
  16 IfPos            3   36    0               00 if r[3]>0 then r[3]-=0, goto 36; check abort flag
REG[3] =  i:0
  17 Gosub            5   34    0               00 reset accumulator
REG[5] =  i:17
  34 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
  35 Return           5    0    0               00 
REG[5] =  i:17
  18 Rowid            0    1    0               00 r[1]=rowid
REG[1] =  i:1
  19 Integer          1    2    0               00 r[2]=1; indicate data in accumulator
REG[2] =  i:1
  20 Next             0   10    0               01 
  10 Rowid            0    8    0               00 r[8]=rowid
REG[8] =  i:2
  11 SCopy            8    9    0               00 r[9]=r[8]
REG[9] =  i:2
  12 Compare          6    8    2 k(2,B,B)      00 r[6..7] <-> r[8..9]
REG[6] =  i:1
REG[8] =  i:2
  13 Jump            14   18   14               00 
  14 Move             8    6    2               00 r[6..7]=r[8..9]
REG[6] =  i:2
REG[7] =  i:2
  15 Gosub            4   26    0               00 output one row
REG[4] =  i:15
  26 IfPos            2   28    0               00 if r[2]>0 then r[2]-=0, goto 28; Groupby result generator entry point
REG[2] =  i:1
  28 Copy             1   12    0               00 r[12]=r[1]
REG[12] =  i:1
  29 Copy            12   10    0               00 r[10]=r[12]
REG[10] =  i:1
  30 Copy            12   11    0               00 r[11]=r[12]
REG[11] =  i:1
  31 MakeRecord      10    3   13               00 r[13]=mkrec(r[10..12])
REG[13] =  s4[04090909....](8)
  32 SorterInsert     1   13    0               00 
REG[13] =  s4[04090909....](8)
  33 Return           4    0    0               00 end groupby result generator
REG[4] =  i:15
  16 IfPos            3   36    0               00 if r[3]>0 then r[3]-=0, goto 36; check abort flag
REG[3] =  i:0
  17 Gosub            5   34    0               00 reset accumulator
REG[5] =  i:17
  34 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
  35 Return           5    0    0               00 
REG[5] =  i:17
  18 Rowid            0    1    0               00 r[1]=rowid
REG[1] =  i:2
  19 Integer          1    2    0               00 r[2]=1; indicate data in accumulator
REG[2] =  i:1
  20 Next             0   10    0               01 
  10 Rowid            0    8    0               00 r[8]=rowid
REG[8] =  i:3
  11 SCopy            8    9    0               00 r[9]=r[8]
REG[9] =  i:3
  12 Compare          6    8    2 k(2,B,B)      00 r[6..7] <-> r[8..9]
REG[6] =  i:2
REG[8] =  i:3
  13 Jump            14   18   14               00 
  14 Move             8    6    2               00 r[6..7]=r[8..9]
REG[6] =  i:3
REG[7] =  i:3
  15 Gosub            4   26    0               00 output one row
REG[4] =  i:15
  26 IfPos            2   28    0               00 if r[2]>0 then r[2]-=0, goto 28; Groupby result generator entry point
REG[2] =  i:1
  28 Copy             1   12    0               00 r[12]=r[1]
REG[12] =  i:2
  29 Copy            12   10    0               00 r[10]=r[12]
REG[10] =  i:2
  30 Copy            12   11    0               00 r[11]=r[12]
REG[11] =  i:2
  31 MakeRecord      10    3   13               00 r[13]=mkrec(r[10..12])
REG[13] =  s7[04010101020202.......](8)
  32 SorterInsert     1   13    0               00 
REG[13] =  s7[04010101020202.......](8)
  33 Return           4    0    0               00 end groupby result generator
REG[4] =  i:15
  16 IfPos            3   36    0               00 if r[3]>0 then r[3]-=0, goto 36; check abort flag
REG[3] =  i:0
  17 Gosub            5   34    0               00 reset accumulator
REG[5] =  i:17
  34 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
  35 Return           5    0    0               00 
REG[5] =  i:17
  18 Rowid            0    1    0               00 r[1]=rowid
REG[1] =  i:3
  19 Integer          1    2    0               00 r[2]=1; indicate data in accumulator
REG[2] =  i:1
  20 Next             0   10    0               01 
  10 Rowid            0    8    0               00 r[8]=rowid
REG[8] =  i:4
  11 SCopy            8    9    0               00 r[9]=r[8]
REG[9] =  i:4
  12 Compare          6    8    2 k(2,B,B)      00 r[6..7] <-> r[8..9]
REG[6] =  i:3
REG[8] =  i:4
  13 Jump            14   18   14               00 
  14 Move             8    6    2               00 r[6..7]=r[8..9]
REG[6] =  i:4
REG[7] =  i:4
  15 Gosub            4   26    0               00 output one row
REG[4] =  i:15
  26 IfPos            2   28    0               00 if r[2]>0 then r[2]-=0, goto 28; Groupby result generator entry point
REG[2] =  i:1
  28 Copy             1   12    0               00 r[12]=r[1]
REG[12] =  i:3
  29 Copy            12   10    0               00 r[10]=r[12]
REG[10] =  i:3
  30 Copy            12   11    0               00 r[11]=r[12]
REG[11] =  i:3
  31 MakeRecord      10    3   13               00 r[13]=mkrec(r[10..12])
REG[13] =  s7[04010101030303.......](8)
  32 SorterInsert     1   13    0               00 
REG[13] =  s7[04010101030303.......](8)
  33 Return           4    0    0               00 end groupby result generator
REG[4] =  i:15
  16 IfPos            3   36    0               00 if r[3]>0 then r[3]-=0, goto 36; check abort flag
REG[3] =  i:0
  17 Gosub            5   34    0               00 reset accumulator
REG[5] =  i:17
  34 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
  35 Return           5    0    0               00 
REG[5] =  i:17
  18 Rowid            0    1    0               00 r[1]=rowid
REG[1] =  i:4
  19 Integer          1    2    0               00 r[2]=1; indicate data in accumulator
REG[2] =  i:1
  20 Next             0   10    0               01 
  21 Close            0    0    0               00 
  22 Gosub            4   26    0               00 output final row
REG[4] =  i:22
  26 IfPos            2   28    0               00 if r[2]>0 then r[2]-=0, goto 28; Groupby result generator entry point
REG[2] =  i:1
  28 Copy             1   12    0               00 r[12]=r[1]
REG[12] =  i:4
  29 Copy            12   10    0               00 r[10]=r[12]
REG[10] =  i:4
  30 Copy            12   11    0               00 r[11]=r[12]
REG[11] =  i:4
  31 MakeRecord      10    3   13               00 r[13]=mkrec(r[10..12])
REG[13] =  s7[04010101040404.......](8)
  32 SorterInsert     1   13    0               00 
REG[13] =  s7[04010101040404.......](8)
  33 Return           4    0    0               00 end groupby result generator
REG[4] =  i:22
  23 Goto             0   36    0               00 
  36 OpenPseudo       3   14    4               00 4 columns in r[14]
  37 SorterSort       1   42    0               00 
  38 SorterData       1   14    3               00 r[14]=data
  39 Column           3    2   12               00 r[12]=x
REG[12] =  i:4
  40 ResultRow       12    1    0               00 output=r[12]
REG[12] =  i:4
  41 SorterNext       1   38    0               00 
  38 SorterData       1   14    3               00 r[14]=data
  39 Column           3    2   12               00 r[12]=x
REG[12] =  i:3
  40 ResultRow       12    1    0               00 output=r[12]
REG[12] =  i:3
  41 SorterNext       1   38    0               00 
  38 SorterData       1   14    3               00 r[14]=data
  39 Column           3    2   12               00 r[12]=x
REG[12] =  i:2
  40 ResultRow       12    1    0               00 output=r[12]
REG[12] =  i:2
  41 SorterNext       1   38    0               00 
  38 SorterData       1   14    3               00 r[14]=data
  39 Column           3    2   12               00 r[12]=x
REG[12] =  i:1
  40 ResultRow       12    1    0               00 output=r[12]
REG[12] =  i:1
  41 SorterNext       1   38    0               00 
  42 Halt             0    0    0               00 
SQL: [CREATE TABLE y(c PRIMARY KEY, i1);]
VDBE Trace:
   0 Init             0   42    0               00 Start at 42
  42 Transaction      0    1    3 0             01 usesStmtJournal=0
  43 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  44 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:6
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:5
  10 Close            0    0    0               00 
  11 Noop             0   23    0               00 
  12 CreateIndex      0    4    0               00 r[4]=root iDb=0
REG[4] =  i:7
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:6
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_y_1 00 r[7]='sqlite_autoindex_y_1'
REG[7] =   t20[sqlite_autoinde](8)
  17 String8          0    8    0 y             00 r[8]='y'
REG[8] =   t1[y](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:7
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s33[0617350F0100696E64657873716C6974..5...indexsqlit](8)
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  s33[0617350F0100696E64657873716C6974..5...indexsqlit](8)
REG[5] =  i:6
  22 Close            1    0    0               00 
  23 Close            0    0    0               00 
  24 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  25 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  26 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  27 MustBeInt        1   30    0               00 
REG[1] =  i:5
  28 NotExists        2   30    1               00 intkey=r[1]; pk
REG[1] =  i:5
  29 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:5
  30 IsNull          13   38    0               00 if r[13]==NULL goto 38
REG[13] =  i:5
  31 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  32 String8          0   15    0 y             00 r[15]='y'
REG[15] =   t1[y](8)
  33 String8          0   16    0 y             00 r[16]='y'
REG[16] =   t1[y](8)
  34 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:6
  35 String8          0   18    0 CREATE TABLE y(c PRIMARY KEY, i1) 00 r[18]='CREATE TABLE y(c PRIMARY KEY, i1)'
REG[18] =   t33[CREATE TABLE y(](8)
  36 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s47[06170F0F014F7461626C657979064352.....Otableyy.CR](8)
  37 Insert           2   19   13               00 intkey=r[13] data=r[19]
REG[19] =  s47[06170F0F014F7461626C657979064352.....Otableyy.CR](8)
REG[13] =  i:5
  38 Close            2    0    0               00 
  39 SetCookie        0    1    4               00 
  40 ParseSchema      0    0    0 tbl_name='y' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 y             00 r[2]='y'
REG[2] =   t1[y](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s1[y](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[y](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:6
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s33[CREATE TABLE y(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[y](8)
REG[6] =  i:6
REG[7] =   s33[CREATE TABLE y(](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s1[y](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s20[sqlite_autoinde](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:7
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =  NULL
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s20[sqlite_autoinde](8)
REG[6] =  i:7
REG[7] =  NULL
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  41 Halt             0    0    0               00 
SQL: [;
;SELECT printf('(%3.3c)',char(1492));]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 String8          0    2    0 (%3.3c)       00 r[2]='(%3.3c)'
REG[2] =   t7[(%3.3c)](8)
   5 Integer       1492    4    0               00 r[4]=1492
REG[4] =  i:1492
   6 Function0        1    4    3 char(-1)      01 r[3]=func(r[4])
REG[4] =  i:1492
REG[3] =   z2[..](8)
   7 Goto             0    1    0               00 
   1 Function0        3    2    1 printf(-1)    02 r[1]=func(r[2..3])
REG[2] =   t7[(%3.3c)](8)
REG[3] =   z2[..](8)
REG[1] =   s5[(...)](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s5[(...)](8)
   3 Halt             0    0    0               00 
SQL: [;ANALYZE;]
VDBE Trace:
   0 Init             0   90    0               00 Start at 90
  90 Transaction      0    1    4 0             01 usesStmtJournal=0
  91 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  92 TableLock        0    6    0 y             00 iDb=0 root=6 write=0
  93 TableLock        0    3    0 t2            00 iDb=0 root=3 write=0
  94 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  95 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:8
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:7
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:7
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        3    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:7
  16 NotExists        3   18    1               00 intkey=r[1]; pk
REG[1] =  i:7
  17 Rowid            3    5    0               00 r[5]=rowid
REG[5] =  i:7
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:7
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 sqlite_stat1  00 r[7]='sqlite_stat1'
REG[7] =   t12[sqlite_stat1](8)
  21 String8          0    8    0 sqlite_stat1  00 r[8]='sqlite_stat1'
REG[8] =   t12[sqlite_stat1](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:8
  23 String8          0   10    0 CREATE TABLE sqlite_stat1(tbl,idx,stat) 00 r[10]='CREATE TABLE sqlite_stat1(tbl,idx,stat)'
REG[10] =   t39[CREATE TABLE sq](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit](8)
  25 Insert           3   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit](8)
REG[5] =  i:7
  26 Close            3    0    0               00 
  27 SetCookie        0    1    5               00 
  28 ParseSchema      0    0    0 tbl_name='sqlite_stat1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    5 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 sqlite_stat1  00 r[2]='sqlite_stat1'
REG[2] =   t12[sqlite_stat1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s12[sqlite_stat1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s12[sqlite_stat1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:8
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s39[CREATE TABLE sq](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s12[sqlite_stat1](8)
REG[6] =  i:8
REG[7] =   s39[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 OpenWrite        0    2    0 3             10 root=2 iDb=0; sqlite_stat1
  30 OpenRead         4    6    0 2             00 root=6 iDb=0; y
  31 String8          0   16    0 y             00 r[16]='y'
REG[16] =   t1[y](8)
  32 String8          0   17    0 sqlite_autoindex_y_1 00 r[17]='sqlite_autoindex_y_1'; Analysis for y.sqlite_autoindex_y_1
REG[17] =   t20[sqlite_autoinde](8)
  33 OpenRead         5    7    0 k(2,,)        00 root=7 iDb=0; sqlite_autoindex_y_1
  34 Integer          2   14    0               00 r[14]=2
REG[14] =  i:2
  35 Integer          1   15    0               00 r[15]=1
REG[15] =  i:1
  36 Function0        0   14   13 stat_init(2)  02 r[13]=func(r[14..15])
REG[14] =  i:2
REG[15] =  i:1
REG[13] =  z88[00000000000000000200000001000000................](8)
  37 Rewind           5   53    0               00 
  53 OpenRead         4    3    0 8             00 root=3 iDb=0; t2
  54 String8          0   16    0 t2            00 r[16]='t2'; t2
REG[16] =   t2[t2](8)
  55 Count            4   18    0               00 r[18]=count()
REG[18] =  i:0
  56 IfNot           18   61    0               00 
REG[18] =  i:0
  61 OpenRead         4    2    0 1             00 root=2 iDb=0; t1
  62 String8          0   16    0 t1            00 r[16]='t1'
REG[16] =   t2[t1](8)
  63 String8          0   17    0 c1            00 r[17]='c1'; Analysis for t1.c1
REG[17] =   t2[c1](8)
  64 OpenRead         5    5    0 k(3,,,)       00 root=5 iDb=0; c1
  65 Integer          3   14    0               00 r[14]=3
REG[14] =  i:3
  66 Integer          2   15    0               00 r[15]=2
REG[15] =  i:2
  67 Function0        0   14   13 stat_init(2)  02 r[13]=func(r[14..15])
REG[14] =  i:3
REG[15] =  i:2
REG[13] =  z88[00000000000000000300000002000000................](8)
  68 Rewind           5   87    0               00 
  69 Integer          0   14    0               00 r[14]=0
REG[14] =  i:0
  70 Goto             0   79    0               00 
  79 Column           5    0   19               00 r[19]=
REG[19] =  i:1
  80 Column           5    1   20               00 r[20]=
REG[20] =  i:1
  81 Function0        1   13   15 stat_push(2)  02 r[15]=func(r[13..14])
REG[13] =  z88[00000000000000000300000002000000................](8)
REG[14] =  i:0
REG[15] =  NULL
  82 Next             5   71    0               00 
  71 Integer          0   14    0               00 r[14]=0
REG[14] =  i:0
  72 Column           5    0   15               00 r[15]=
REG[15] =  i:2
  73 Ne              15   79   19 (BINARY)      80 if r[15]!=r[19] goto 79
REG[15] =  i:2
REG[19] =  i:1
  79 Column           5    0   19               00 r[19]=
REG[19] =  i:2
  80 Column           5    1   20               00 r[20]=
REG[20] =  i:2
  81 Function         1   13   15 stat_push(2)  02 r[15]=func(r[13..14])
REG[13] =  z88[01000000000000000300000002000000................](8)
REG[14] =  i:0
REG[15] =  NULL
  82 Next             5   71    0               00 
  71 Integer          0   14    0               00 r[14]=0
REG[14] =  i:0
  72 Column           5    0   15               00 r[15]=
REG[15] =  i:3
  73 Ne              15   79   19 (BINARY)      80 if r[15]!=r[19] goto 79
REG[15] =  i:3
REG[19] =  i:2
  79 Column           5    0   19               00 r[19]=
REG[19] =  i:3
  80 Column           5    1   20               00 r[20]=
REG[20] =  i:3
  81 Function         1   13   15 stat_push(2)  02 r[15]=func(r[13..14])
REG[13] =  z88[02000000000000000300000002000000................](8)
REG[14] =  i:0
REG[15] =  NULL
  82 Next             5   71    0               00 
  71 Integer          0   14    0               00 r[14]=0
REG[14] =  i:0
  72 Column           5    0   15               00 r[15]=
REG[15] =  i:4
  73 Ne              15   79   19 (BINARY)      80 if r[15]!=r[19] goto 79
REG[15] =  i:4
REG[19] =  i:3
  79 Column           5    0   19               00 r[19]=
REG[19] =  i:4
  80 Column           5    1   20               00 r[20]=
REG[20] =  i:4
  81 Function         1   13   15 stat_push(2)  02 r[15]=func(r[13..14])
REG[13] =  z88[03000000000000000300000002000000................](8)
REG[14] =  i:0
REG[15] =  NULL
  82 Next             5   71    0               00 
  83 Function0        0   13   18 stat_get(1)   01 r[18]=func(r[13])
REG[13] =  z88[04000000000000000300000002000000................](8)
REG[18] =   z5[4 1 1](8)
  84 MakeRecord      16    3   15 BBB           00 r[15]=mkrec(r[16..18])
REG[15] =  s13[04111117743163313420312031....t1c14 1 1](8)
  85 NewRowid         0   12    0               00 r[12]=rowid
REG[12] =  i:1
  86 Insert           0   15   12               08 intkey=r[12] data=r[15]
REG[15] =  s13[04111117743163313420312031....t1c14 1 1](8)
REG[12] =  i:1
  87 LoadAnalysis     0    0    0               00 
SQL: [SELECT tbl,idx,stat FROM 'main'.sqlite_stat1]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    5 0             01 usesStmtJournal=0
  12 TableLock        0    8    0 sqlite_stat1  00 iDb=0 root=8 write=0
  13 Goto             0    1    0               00 
   1 OpenRead         0    8    0 3             00 root=8 iDb=0; sqlite_stat1
   2 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_stat1.tbl
REG[1] =   s2[t1](8)
   5 Column           0    1    2               00 r[2]=sqlite_stat1.idx
REG[2] =   s2[c1](8)
   6 Column           0    2    3               00 r[3]=sqlite_stat1.stat
REG[3] =   s5[4 1 1](8)
   7 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =   s2[c1](8)
REG[3] =   s5[4 1 1](8)
   8 Next             0    4    0               01 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
  88 Expire           0    0    0               00 
  89 Halt             0    0    0               00 
SQL: [;
;CREATE INDEX z ON t1(x+x);]
VDBE Trace:
   0 Init             0   35    0               00 Start at 35
  35 Transaction      0    1    5 0             01 usesStmtJournal=0
  36 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  37 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  38 Goto             0    1    0               00 
   1 Noop             0   34    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:9
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:8
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 z             00 r[4]='z'
REG[4] =   t1[z](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:9
   9 String8          0    7    0 CREATE INDEX z ON t1(x+x) 00 r[7]='CREATE INDEX z ON t1(x+x)'
REG[7] =   t25[CREATE INDEX z ](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s40[06170F11013F696E6465787A74310943.....?indexzt1.C](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s40[06170F11013F696E6465787A74310943.....?indexzt1.C](8)
REG[2] =  i:8
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    1 k(2,,)        00 
  14 OpenRead         1    2    0 1             00 root=2 iDb=0; t1
  15 Rewind           1   22    0               00 
  16 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:1
  17 Add             12   12   10               00 r[10]=r[12]+r[12]
REG[12] =  i:1
REG[12] =  i:1
REG[10] =  i:2
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:1
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s4[03010902....](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s4[03010902....](8)
  21 Next             1   16    0               00 
  16 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:2
  17 Add             12   12   10               00 r[10]=r[12]+r[12]
REG[12] =  i:2
REG[12] =  i:2
REG[10] =  i:4
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:2
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s5[0301010402.....](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s5[0301010402.....](8)
  21 Next             1   16    0               00 
  16 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:3
  17 Add             12   12   10               00 r[10]=r[12]+r[12]
REG[12] =  i:3
REG[12] =  i:3
REG[10] =  i:6
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:3
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s5[0301010603.....](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s5[0301010603.....](8)
  21 Next             1   16    0               00 
  16 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:4
  17 Add             12   12   10               00 r[10]=r[12]+r[12]
REG[12] =  i:4
REG[12] =  i:4
REG[10] =  i:8
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:4
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s5[0301010804.....](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s5[0301010804.....](8)
  21 Next             1   16    0               00 
  22 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  23 SorterSort       3   28    0               00 
  24 SorterData       3    9    2               00 r[9]=data
  25 Last             2    0   -1               00 
  26 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s4[03010902....](8)
  27 SorterNext       3   24    0               00 
  24 SorterData       3    9    2               00 r[9]=data
  25 Last             2    0   -1               00 
  26 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s5[0301010402.....](8)
  27 SorterNext       3   24    0               00 
  24 SorterData       3    9    2               00 r[9]=data
  25 Last             2    0   -1               00 
  26 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s5[0301010603.....](8)
  27 SorterNext       3   24    0               00 
  24 SorterData       3    9    2               00 r[9]=data
  25 Last             2    0   -1               00 
  26 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s5[0301010804.....](8)
  27 SorterNext       3   24    0               00 
  28 Close            1    0    0               00 
  29 Close            2    0    0               00 
  30 Close            3    0    0               00 
  31 SetCookie        0    1    6               00 
  32 ParseSchema      0    0    0 name='z' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 z             00 r[2]='z'
REG[2] =   t1[z](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[z](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[z](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[z](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[c1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[z](8)
REG[1] =   s2[c1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[z](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s20[sqlite_autoinde](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[z](8)
REG[1] =   s20[sqlite_autoinde](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[z](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[z](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[z](8)
REG[1] =   s1[z](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s1[z](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:9
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s25[CREATE INDEX z ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[z](8)
REG[6] =  i:9
REG[7] =   s25[CREATE INDEX z ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  33 Expire           0    0    0               00 
  34 Halt             0    0    0               00 
SQL: [;DELETE FROM y;]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 Transaction      0    1    6 0             01 usesStmtJournal=0
   5 TableLock        0    6    1 y             00 iDb=0 root=6 write=1
   6 Goto             0    1    0               00 
   1 Clear            6    0   -1 y             00 
   2 Clear            7    0    0               00 
   3 Halt             0    0    0               00 
SQL: [;
;DROP TABLE IF EXISTS y;]
VDBE Trace:
   0 Init             0   76    0               00 Start at 76
  76 Transaction      0    1    6 0             01 usesStmtJournal=1
  77 TableLock        0    8    1 sqlite_stat1  00 iDb=0 root=8 write=1
  78 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  79 String8          0    3    0 y             00 r[3]='y'
REG[3] =   t1[y](8)
  80 String8          0    7    0 trigger       00 r[7]='trigger'
REG[7] =   t7[trigger](8)
  81 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    8    0 3             00 root=8 iDb=0; sqlite_stat1
   3 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   4 Rewind           0   11    0               00 
   5 Column           0    0    2               00 r[2]=sqlite_stat1.tbl
REG[2] =   s2[t1](8)
   6 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =   t1[y](8)
REG[2] =   s2[t1](8)
  10 Next             0    5    0               01 
  11 Close            0    0    0               00 
  12 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SCAN TABLE sqlite_master 00 
  15 Rewind           1   24    0               00 
  16 Column           1    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
  17 Ne               3   23    2 (BINARY)      52 if r[3]!=r[2] goto 23
REG[3] =   t1[y](8)
REG[2] =   s2[t1](8)
  23 Next             1   16    0               01 
  16 Column           1    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t2](8)
  17 Ne               3   23    2 (BINARY)      52 if r[3]!=r[2] goto 23
REG[3] =   t1[y](8)
REG[2] =   s2[t2](8)
  23 Next             1   16    0               01 
  16 Column           1    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s15[sqlite_sequence](8)
  17 Ne               3   23    2 (BINARY)      52 if r[3]!=r[2] goto 23
REG[3] =   t1[y](8)
REG[2] =   s15[sqlite_sequence](8)
  23 Next             1   16    0               01 
  16 Column           1    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
  17 Ne               3   23    2 (BINARY)      52 if r[3]!=r[2] goto 23
REG[3] =   t1[y](8)
REG[2] =   s2[t1](8)
  23 Next             1   16    0               01 
  16 Column           1    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[y](8)
  17 Ne               3   23    2 (BINARY)      52 if r[3]!=r[2] goto 23
REG[3] =   t1[y](8)
REG[2] =   s1[y](8)
  18 Column           1    0    6               00 r[6]=sqlite_master.type
REG[6] =   s5[table](8)
  19 Eq               7   23    6 (BINARY)      52 if r[7]==r[6] goto 23
REG[7] =   t7[trigger](8)
REG[6] =   s5[table](8)
  20 Rowid            1    8    0               00 r[8]=rowid
REG[8] =  i:5
  21 Once             1   22    0               00 
  22 Delete           1    0    0 sqlite_master 02 
  23 Next             1   16    0               01 
  16 Column           1    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[y](8)
  17 Ne               3   23    2 (BINARY)      52 if r[3]!=r[2] goto 23
REG[3] =   t1[y](8)
REG[2] =   s1[y](8)
  18 Column           1    0    6               00 r[6]=sqlite_master.type
REG[6] =   s5[index](8)
  19 Eq               7   23    6 (BINARY)      52 if r[7]==r[6] goto 23
REG[7] =   t7[trigger](8)
REG[6] =   s5[index](8)
  20 Rowid            1    8    0               00 r[8]=rowid
REG[8] =  i:6
  21 Once             1   22    0               00 
  22 Delete           1    0    0 sqlite_master 02 
  23 Next             1   16    0               01 
  16 Column           1    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s12[sqlite_stat1](8)
  17 Ne               3   23    2 (BINARY)      52 if r[3]!=r[2] goto 23
REG[3] =   t1[y](8)
REG[2] =   s12[sqlite_stat1](8)
  23 Next             1   16    0               01 
  16 Column           1    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
  17 Ne               3   23    2 (BINARY)      52 if r[3]!=r[2] goto 23
REG[3] =   t1[y](8)
REG[2] =   s2[t1](8)
  23 Next             1   16    0               01 
  24 Close            1    0    0               00 
  25 Destroy          7    6    0               00 
REG[6] =  i:0
  26 Null             0    9   10               00 r[9..10]=NULL
REG[9] =  NULL
  27 IfNot            6   36    1               00 
REG[6] =  i:0
  36 Close            2    0    0               00 
  37 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  38 RowSetRead       9   48   10               00 r[10]=rowset(9)
REG[9] =  NULL
REG[10] =  NULL
  48 Close            2    0    0               00 
  49 Destroy          6    6    0               00 
REG[6] =  i:0
  50 Null             0   17   18               00 r[17..18]=NULL
REG[17] =  NULL
  51 IfNot            6   60    1               00 
REG[6] =  i:0
  60 Close            3    0    0               00 
  61 OpenWrite        3    1    0 5             00 root=1 iDb=0; sqlite_master
  62 RowSetRead      17   72   18               00 r[18]=rowset(17)
REG[17] =  NULL
REG[18] =  NULL
  72 Close            3    0    0               00 
  73 DropTable        0    0    0 y             00 
  74 SetCookie        0    1    7               00 
  75 Halt             0    0    0               00 
SQL: [;
;PRAGMA integrity_check
;]
VDBE Trace:
   0 Init             0   81    0               00 Start at 81
  81 Transaction      0    0    7 0             01 usesStmtJournal=0
  82 Transaction      1    0    0 0             01 usesStmtJournal=0
  83 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  84 Goto             0    1    0               00 
   1 Integer        100    1    0               00 r[1]=100
REG[1] =  i:100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
REG[1] =  i:100
   4 IntegrityCk      2    7    1 [3,4,2,9,5,1,0] 00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
REG[2] =  NULL
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
REG[1] =  i:100
  12 OpenRead         1    2    0 1             00 root=2 iDb=0; t1
  13 OpenRead         2    9    0 k(2,,)        00 root=9 iDb=0; z
  14 OpenRead         3    5    0 k(3,,,)       00 root=5 iDb=0; c1
  15 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  16 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  17 Integer          0    9    0               00 r[9]=0
REG[9] =  i:0
  18 Rewind           1   51    0               00 
  19 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  20 Rowid            1   13    0               00 r[13]=rowid
REG[13] =  i:1
  21 Add             13   13   11               00 r[11]=r[13]+r[13]
REG[13] =  i:1
REG[13] =  i:1
REG[11] =  i:2
  22 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:1
  23 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  24 Found            2   35   11 2             00 key=r[11..12]
REG[11] =  i:2
REG[12] =  i:1
  35 Rowid            1   15    0               00 r[15]=rowid; t1.x
REG[15] =  i:1
  36 Rowid            1   16    0               00 r[16]=rowid; t1.x
REG[16] =  i:1
  37 Rowid            1   17    0               00 r[17]=rowid
REG[17] =  i:1
  38 AddImm           9    1    0               00 r[9]=r[9]+1
REG[9] =  i:0
  39 Found            3   50   15 3             00 key=r[15..17]
REG[15] =  i:1
REG[16] =  i:1
REG[17] =  i:1
  50 Next             1   19    0               00 
  19 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
  20 Rowid            1   13    0               00 r[13]=rowid
REG[13] =  i:2
  21 Add             13   13   11               00 r[11]=r[13]+r[13]
REG[13] =  i:2
REG[13] =  i:2
REG[11] =  i:4
  22 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:2
  23 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:1
  24 Found            2   35   11 2             00 key=r[11..12]
REG[11] =  i:4
REG[12] =  i:2
  35 Rowid            1   15    0               00 r[15]=rowid; t1.x
REG[15] =  i:2
  36 Rowid            1   16    0               00 r[16]=rowid; t1.x
REG[16] =  i:2
  37 Rowid            1   17    0               00 r[17]=rowid
REG[17] =  i:2
  38 AddImm           9    1    0               00 r[9]=r[9]+1
REG[9] =  i:1
  39 Found            3   50   15 3             00 key=r[15..17]
REG[15] =  i:2
REG[16] =  i:2
REG[17] =  i:2
  50 Next             1   19    0               00 
  19 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:2
  20 Rowid            1   13    0               00 r[13]=rowid
REG[13] =  i:3
  21 Add             13   13   11               00 r[11]=r[13]+r[13]
REG[13] =  i:3
REG[13] =  i:3
REG[11] =  i:6
  22 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:3
  23 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:2
  24 Found            2   35   11 2             00 key=r[11..12]
REG[11] =  i:6
REG[12] =  i:3
  35 Rowid            1   15    0               00 r[15]=rowid; t1.x
REG[15] =  i:3
  36 Rowid            1   16    0               00 r[16]=rowid; t1.x
REG[16] =  i:3
  37 Rowid            1   17    0               00 r[17]=rowid
REG[17] =  i:3
  38 AddImm           9    1    0               00 r[9]=r[9]+1
REG[9] =  i:2
  39 Found            3   50   15 3             00 key=r[15..17]
REG[15] =  i:3
REG[16] =  i:3
REG[17] =  i:3
  50 Next             1   19    0               00 
  19 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:3
  20 Rowid            1   13    0               00 r[13]=rowid
REG[13] =  i:4
  21 Add             13   13   11               00 r[11]=r[13]+r[13]
REG[13] =  i:4
REG[13] =  i:4
REG[11] =  i:8
  22 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:4
  23 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:3
  24 Found            2   35   11 2             00 key=r[11..12]
REG[11] =  i:8
REG[12] =  i:4
  35 Rowid            1   15    0               00 r[15]=rowid; t1.x
REG[15] =  i:4
  36 Rowid            1   16    0               00 r[16]=rowid; t1.x
REG[16] =  i:4
  37 Rowid            1   17    0               00 r[17]=rowid
REG[17] =  i:4
  38 AddImm           9    1    0               00 r[9]=r[9]+1
REG[9] =  i:3
  39 Found            3   50   15 3             00 key=r[15..17]
REG[15] =  i:4
REG[16] =  i:4
REG[17] =  i:4
  50 Next             1   19    0               00 
  51 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  52 IfPos            1   54    0               00 if r[1]>0 then r[1]-=0, goto 54
REG[1] =  i:100
  54 Count            2    3    0               00 r[3]=count()
REG[3] =  i:4
  55 Eq               8   60    3               90 if r[8]==r[3] goto 60
REG[8] =  i:4
REG[3] =  i:4
  60 IfPos            1   62    0               00 if r[1]>0 then r[1]-=0, goto 62
REG[1] =  i:100
  62 Count            3    3    0               00 r[3]=count()
REG[3] =  i:4
  63 Eq               9   68    3               90 if r[9]==r[3] goto 68
REG[9] =  i:4
REG[3] =  i:4
  68 IfPos            1   70    0               00 if r[1]>0 then r[1]-=0, goto 70
REG[1] =  i:100
  70 IntegrityCk      2    1    1 ]             01 
  71 IsNull           2   76    0               00 if r[2]==NULL goto 76
REG[2] =  NULL
  76 AddImm           1 -100    0               00 r[1]=r[1]+-100
REG[1] =  i:100
  77 If               1   80    0               00 
REG[1] =  i:0
  78 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
  79 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
  80 Halt             0    0    0               00 
SQL: [DELETE FROM t2;]
VDBE Trace:
   0 Init             0    3    0               00 Start at 3
   3 Transaction      0    1    7 0             01 usesStmtJournal=0
   4 TableLock        0    3    1 t2            00 iDb=0 root=3 write=1
   5 Goto             0    1    0               00 
   1 Clear            3    0   -1 t2            00 
   2 Halt             0    0    0               00 
SQL: [;DELETE FROM t2;]
VDBE Trace:
   0 Init             0    3    0               00 Start at 3
   3 Transaction      0    1    7 0             01 usesStmtJournal=0
   4 TableLock        0    3    1 t2            00 iDb=0 root=3 write=1
   5 Goto             0    1    0               00 
   1 Clear            3    0   -1 t2            00 
   2 Halt             0    0    0               00 
SQL: [;CREATE INDEX t1_idx_5cb97285 ON t1(x);]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      0    1    7 0             01 usesStmtJournal=0
  35 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  36 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  37 Goto             0    1    0               00 
   1 Noop             0   33    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:6
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:9
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 t1_idx_5cb97285 00 r[4]='t1_idx_5cb97285'
REG[4] =   t15[t1_idx_5cb97285](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:6
   9 String8          0    7    0 CREATE INDEX t1_idx_5cb97285 ON t1(x) 00 r[7]='CREATE INDEX t1_idx_5cb97285 ON t1(x)'
REG[7] =   t37[CREATE INDEX t1](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s66[06172B110157696E64657874315F6964..+..Windext1_id](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s66[06172B110157696E64657874315F6964..+..Windext1_id](8)
REG[2] =  i:9
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    1 k(2,,)        00 
  14 OpenRead         1    2    0 1             00 root=2 iDb=0; t1
  15 Rewind           1   21    0               00 
  16 Rowid            1   10    0               00 r[10]=rowid; t1.x
REG[10] =  i:1
  17 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:1
  18 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s3[030909...](8)
  19 SorterInsert     3    9    0               00 
REG[9] =  s3[030909...](8)
  20 Next             1   16    0               00 
  16 Rowid            1   10    0               00 r[10]=rowid; t1.x
REG[10] =  i:2
  17 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:2
  18 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s5[0301010202.....](8)
  19 SorterInsert     3    9    0               00 
REG[9] =  s5[0301010202.....](8)
  20 Next             1   16    0               00 
  16 Rowid            1   10    0               00 r[10]=rowid; t1.x
REG[10] =  i:3
  17 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:3
  18 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s5[0301010303.....](8)
  19 SorterInsert     3    9    0               00 
REG[9] =  s5[0301010303.....](8)
  20 Next             1   16    0               00 
  16 Rowid            1   10    0               00 r[10]=rowid; t1.x
REG[10] =  i:4
  17 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:4
  18 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s5[0301010404.....](8)
  19 SorterInsert     3    9    0               00 
REG[9] =  s5[0301010404.....](8)
  20 Next             1   16    0               00 
  21 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  22 SorterSort       3   27    0               00 
  23 SorterData       3    9    2               00 r[9]=data
  24 Last             2    0   -1               00 
  25 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s3[030909...](8)
  26 SorterNext       3   23    0               00 
  23 SorterData       3    9    2               00 r[9]=data
  24 Last             2    0   -1               00 
  25 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s5[0301010202.....](8)
  26 SorterNext       3   23    0               00 
  23 SorterData       3    9    2               00 r[9]=data
  24 Last             2    0   -1               00 
  25 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s5[0301010303.....](8)
  26 SorterNext       3   23    0               00 
  23 SorterData       3    9    2               00 r[9]=data
  24 Last             2    0   -1               00 
  25 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s5[0301010404.....](8)
  26 SorterNext       3   23    0               00 
  27 Close            1    0    0               00 
  28 Close            2    0    0               00 
  29 Close            3    0    0               00 
  30 SetCookie        0    1    8               00 
  31 ParseSchema      0    0    0 name='t1_idx_5cb97285' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    8 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1_idx_5cb97285 00 r[2]='t1_idx_5cb97285'
REG[2] =   t15[t1_idx_5cb97285](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[t1_idx_5cb97285](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[t1_idx_5cb97285](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[t1_idx_5cb97285](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[c1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[t1_idx_5cb97285](8)
REG[1] =   s2[c1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[t1_idx_5cb97285](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[z](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[t1_idx_5cb97285](8)
REG[1] =   s1[z](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[t1_idx_5cb97285](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[t1_idx_5cb97285](8)
REG[1] =   s15[t1_idx_5cb97285](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s15[t1_idx_5cb97285](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:6
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s37[CREATE INDEX t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s15[t1_idx_5cb97285](8)
REG[6] =  i:6
REG[7] =   s37[CREATE INDEX t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  32 Expire           0    0    0               00 
  33 Halt             0    0    0               00 
SQL: [;
;VACUUM;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Vacuum           0    0    0               00 
SQL: [ATTACH '' AS vacuum_db;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0               00 r[1]=''
REG[1] =   t0[](8)
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
REG[2] =   t9[vacuum_db](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t0[](8)
REG[2] =   t9[vacuum_db](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      2    0    0 0             00 usesStmtJournal=0
  13 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [PRAGMA vacuum_db.synchronous=OFF]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [SELECT 'CREATE TABLE vacuum_db.' || substr(sql,14)   FROM sqlite_master WHERE type='table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    8 0             01 usesStmtJournal=0
  20 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  21 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  22 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  23 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  24 String8          0    8    0 CREATE TABLE vacuum_db. 00 r[8]='CREATE TABLE vacuum_db.'
REG[8] =   t23[CREATE TABLE va](8)
  25 Integer         14   10    0               00 r[10]=14
REG[10] =  i:14
  26 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   17    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t1](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[t1](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:2
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:2
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s38[CREATE TABLE t1](8)
  13 Function0        2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s38[CREATE TABLE t1](8)
REG[10] =  i:14
REG[5] =   s25[t1(x INTEGER PR](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s25[t1(x INTEGER PR](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s48[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s48[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.t1(x INTEGER PRIMARY KEY)]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      2    1    0 0             01 usesStmtJournal=0
  31 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        2    2    4               00 
   4 SetCookie        2    5    1               00 
   5 CreateTable      2    2    0               00 r[2]=root iDb=2
REG[2] =  i:2
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:1
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:1
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:1
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t1            00 r[7]='t1'
REG[7] =   t2[t1](8)
  21 String8          0    8    0 t1            00 r[8]='t1'
REG[8] =   t2[t1](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  23 String8          0   10    0 CREATE TABLE t1(x INTEGER PRIMARY KEY) 00 r[10]='CREATE TABLE t1(x INTEGER PRIMARY KEY)'
REG[10] =   t38[CREATE TABLE t1](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s54[0617111101597461626C657431743102.....Ytablet1t1.](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s54[0617111101597461626C657431743102.....Ytablet1t1.](8)
REG[5] =  i:1
  26 Close            1    0    0               00 
  27 SetCookie        2    1    1               00 
  28 ParseSchema      2    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    1 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s38[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:2
REG[7] =   s38[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t2](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[t2](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:3
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:3
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s331[CREATE TABLE t2](8)
  13 Function         2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s331[CREATE TABLE t2](8)
REG[10] =  i:14
REG[5] =   s318[t2 (a INTEGER N](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s318[t2 (a INTEGER N](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s341[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s341[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.t2 (a INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,b INTEGER NOT NULL DEFAULT 0,t1i1 TEXT NOT NULL DEFAULT 'N' CHECK (t1i1 IN ('Y', 'N')),t2i1 FLOAT NOT NULL DEFAULT 0.0,tr1 FLOAT NOT NULL DEFAULT 0.0,tr2 FLOAT NOT NULL DEFAULT 0.0,t0 INTEGER NOT NULL DEFAULT 2010,c0 INTEGER NOT NULL DEFAULT 0 CHECK (c0>=0 AND c0<=12))]
VDBE Trace:
   0 Init             0   58    0               00 Start at 58
  58 Transaction      2    1    1 0             01 usesStmtJournal=0
  59 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  60 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      2    2    0               00 r[2]=root iDb=2
REG[2] =  i:3
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:2
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:2
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:2
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t2            00 r[7]='t2'
REG[7] =   t2[t2](8)
  21 String8          0    8    0 t2            00 r[8]='t2'
REG[8] =   t2[t2](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  23 String8          0   10    0 CREATE TABLE t2 (a INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,b INTEGER NOT NULL DEFAULT 0,t1i1 TEXT NOT NULL DEFAULT 'N' CHECK (t1i1 IN ('Y', 'N')),t2i1 FLOAT NOT NULL DEFAULT 0.0,tr1 FLOAT NOT NULL DEFAULT 0.0,tr2 FLOAT NOT NULL DEFAULT 0.0,t0 INTEGER NOT NULL DEFAULT 2010,c0 INTEGER NOT NULL DEFAULT 0 CHECK (c0>=0 AND c0<=12)) 00 r[10]='CREATE TABLE t2 (a INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,b INTEGER NOT NULL DEFAULT 0,t
REG[10] =   t331[CREATE TABLE t2](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s348[071711110185237461626C6574327432......#tablet2t2](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s348[071711110185237461626C6574327432......#tablet2t2](8)
REG[5] =  i:2
  26 Close            1    0    0               00 
  27 SetCookie        2    1    2               00 
  28 ReadCookie       2   14    2               00 
REG[14] =  i:4
  29 If              14   32    0               00 
REG[14] =  i:4
  32 CreateTable      2   13    0               00 r[13]=root iDb=2
REG[13] =  i:4
  33 OpenWrite        0    1    2 5             00 root=1 iDb=2
  34 NewRowid         0   12    0               00 r[12]=rowid
REG[12] =  i:3
  35 Blob             6   14    0              00 r[14]= (len=6)
REG[14] =  t6[060000000000......](8)
  36 Insert           0   14   12               08 intkey=r[12] data=r[14]
REG[14] =  t6[060000000000......](8)
REG[12] =  i:3
  37 Close            0    0    0               00 
  38 Close            0    0    0               00 
  39 Null             0   15   16               00 r[15..16]=NULL
REG[15] =  NULL
  40 OpenWrite        2    1    2 5             00 root=1 iDb=2; sqlite_master
  41 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  42 MustBeInt       12   45    0               00 
REG[12] =  i:3
  43 NotExists        2   45   12               00 intkey=r[12]; pk
REG[12] =  i:3
  44 Rowid            2   16    0               00 r[16]=rowid
REG[16] =  i:3
  45 IsNull          16   53    0               00 if r[16]==NULL goto 53
REG[16] =  i:3
  46 String8          0   17    0 table         00 r[17]='table'
REG[17] =   t5[table](8)
  47 String8          0   18    0 sqlite_sequence 00 r[18]='sqlite_sequence'
REG[18] =   t15[sqlite_sequence](8)
  48 String8          0   19    0 sqlite_sequence 00 r[19]='sqlite_sequence'
REG[19] =   t15[sqlite_sequence](8)
  49 Copy            13   20    0               00 r[20]=r[13]
REG[20] =  i:4
  50 String8          0   21    0 CREATE TABLE sqlite_sequence(name,seq) 00 r[21]='CREATE TABLE sqlite_sequence(name,seq)'
REG[21] =   t38[CREATE TABLE sq](8)
  51 MakeRecord      17    5   22 BBBDB         00 r[22]=mkrec(r[17..21])
REG[22] =  s80[06172B2B01597461626C6573716C6974..++.Ytablesqlit](8)
  52 Insert           2   22   16               00 intkey=r[16] data=r[22]
REG[22] =  s80[06172B2B01597461626C6573716C6974..++.Ytablesqlit](8)
REG[16] =  i:3
  53 Close            2    0    0               00 
  54 SetCookie        2    1    2               00 
  55 ParseSchema      2    0    0 tbl_name='sqlite_sequence' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    2 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s15[sqlite_sequence](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s15[sqlite_sequence](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s38[CREATE TABLE sq](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s15[sqlite_sequence](8)
REG[6] =  i:4
REG[7] =   s38[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  56 ParseSchema      2    0    0 tbl_name='t2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    2 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 t2            00 r[2]='t2'
REG[2] =   t2[t2](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t2](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t2](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s331[CREATE TABLE t2](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t2](8)
REG[6] =  i:3
REG[7] =   s331[CREATE TABLE t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  57 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s15[sqlite_sequence](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s15[sqlite_sequence](8)
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s12[sqlite_stat1](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s12[sqlite_stat1](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:8
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:8
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:8
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s39[CREATE TABLE sq](8)
  13 Function         2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s39[CREATE TABLE sq](8)
REG[10] =  i:14
REG[5] =   s26[sqlite_stat1(tb](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s26[sqlite_stat1(tb](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s49[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s49[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.sqlite_stat1(tbl,idx,stat)]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      2    1    2 0             01 usesStmtJournal=0
  31 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      2    2    0               00 r[2]=root iDb=2
REG[2] =  i:5
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:4
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:4
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:4
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 sqlite_stat1  00 r[7]='sqlite_stat1'
REG[7] =   t12[sqlite_stat1](8)
  21 String8          0    8    0 sqlite_stat1  00 r[8]='sqlite_stat1'
REG[8] =   t12[sqlite_stat1](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  23 String8          0   10    0 CREATE TABLE sqlite_stat1(tbl,idx,stat) 00 r[10]='CREATE TABLE sqlite_stat1(tbl,idx,stat)'
REG[10] =   t39[CREATE TABLE sq](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit](8)
REG[5] =  i:4
  26 Close            1    0    0               00 
  27 SetCookie        2    1    3               00 
  28 ParseSchema      2    0    0 tbl_name='sqlite_stat1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    3 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 sqlite_stat1  00 r[2]='sqlite_stat1'
REG[2] =   t12[sqlite_stat1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s12[sqlite_stat1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s12[sqlite_stat1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s39[CREATE TABLE sq](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s12[sqlite_stat1](8)
REG[6] =  i:5
REG[7] =   s39[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  16 Next             0    4    0               01 
  17 Close            0    0    0               00 
  18 Halt             0    0    0               00 
SQL: [SELECT 'CREATE INDEX vacuum_db.' || substr(sql,14)  FROM sqlite_master WHERE sql LIKE 'CREATE INDEX %' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    8 0             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE INDEX % 00 r[2]='CREATE INDEX %'
REG[2] =   t14[CREATE INDEX %](8)
  17 String8          0    5    0 CREATE INDEX vacuum_db. 00 r[5]='CREATE INDEX vacuum_db.'
REG[5] =   t23[CREATE INDEX va](8)
  18 Integer         14    7    0               00 r[7]=14
REG[7] =  i:14
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s38[CREATE TABLE t1](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s38[CREATE TABLE t1](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s331[CREATE TABLE t2](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s331[CREATE TABLE t2](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s38[CREATE TABLE sq](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s38[CREATE TABLE sq](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s29[CREATE INDEX c1](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s29[CREATE INDEX c1](8)
REG[1] =  i:1
   6 IfNot            1   11    1               00 
REG[1] =  i:1
   7 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s29[CREATE INDEX c1](8)
   8 Function0        2    6    1 substr(2)     02 r[1]=func(r[6..7])
REG[6] =   s29[CREATE INDEX c1](8)
REG[7] =  i:14
REG[1] =   s16[c1 ON t1(x, x) ](8)
   9 Concat           1    5    4               00 r[4]=r[5]+r[1]
REG[1] =   s16[c1 ON t1(x, x) ](8)
REG[5] =   t23[CREATE INDEX va](8)
REG[4] =   s39[CREATE INDEX va](8)
  10 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s39[CREATE INDEX va](8)
SQL: [CREATE INDEX vacuum_db.c1 ON t1(x, x) 
]
VDBE Trace:
   0 Init             0   35    0               00 Start at 35
  35 Transaction      2    1    3 0             01 usesStmtJournal=0
  36 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  37 TableLock        2    2    1 t1            00 iDb=2 root=2 write=1
  38 Goto             0    1    0               00 
   1 Noop             0   34    0               00 
   2 CreateIndex      2    1    0               00 r[1]=root iDb=2
REG[1] =  i:6
   3 OpenWrite        0    1    2 5             00 root=1 iDb=2; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:5
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 c1            00 r[4]='c1'
REG[4] =   t2[c1](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:6
   9 String8          0    7    0 CREATE INDEX c1 ON t1(x, x) 
 00 r[7]='CREATE INDEX c1 ON t1(x, x) 
'
REG[7] =   t29[CREATE INDEX c1](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s45[061711110147696E6465786331743106.....Gindexc1t1.](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s45[061711110147696E6465786331743106.....Gindexc1t1.](8)
REG[2] =  i:5
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    2 k(3,,,)       00 
  14 OpenRead         1    2    2 1             00 root=2 iDb=2; t1
  15 Rewind           1   22    0               00 
  22 OpenWrite        2    1    2 k(3,,,)       11 root=1 iDb=2
  23 SorterSort       3   28    0               00 
  28 Close            1    0    0               00 
  29 Close            2    0    0               00 
  30 Close            3    0    0               00 
  31 SetCookie        2    1    4               00 
  32 ParseSchema      2    0    0 name='c1' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    4 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 c1            00 r[2]='c1'
REG[2] =   t2[c1](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[c1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[c1](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[c1](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[c1](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[c1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[c1](8)
REG[1] =   s2[c1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s2[c1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:6
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s29[CREATE INDEX c1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[c1](8)
REG[6] =  i:6
REG[7] =   s29[CREATE INDEX c1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  33 Expire           0    0    0               00 
  34 Halt             0    0    0               00 
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE sq](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s39[CREATE TABLE sq](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s25[CREATE INDEX z ](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s25[CREATE INDEX z ](8)
REG[1] =  i:1
   6 IfNot            1   11    1               00 
REG[1] =  i:1
   7 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s25[CREATE INDEX z ](8)
   8 Function         2    6    1 substr(2)     02 r[1]=func(r[6..7])
REG[6] =   s25[CREATE INDEX z ](8)
REG[7] =  i:14
REG[1] =   s12[z ON t1(x+x)](8)
   9 Concat           1    5    4               00 r[4]=r[5]+r[1]
REG[1] =   s12[z ON t1(x+x)](8)
REG[5] =   t23[CREATE INDEX va](8)
REG[4] =   s35[CREATE INDEX va](8)
  10 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s35[CREATE INDEX va](8)
SQL: [CREATE INDEX vacuum_db.z ON t1(x+x)]
VDBE Trace:
   0 Init             0   35    0               00 Start at 35
  35 Transaction      2    1    4 0             01 usesStmtJournal=0
  36 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  37 TableLock        2    2    1 t1            00 iDb=2 root=2 write=1
  38 Goto             0    1    0               00 
   1 Noop             0   34    0               00 
   2 CreateIndex      2    1    0               00 r[1]=root iDb=2
REG[1] =  i:7
   3 OpenWrite        0    1    2 5             00 root=1 iDb=2; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:6
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 z             00 r[4]='z'
REG[4] =   t1[z](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:7
   9 String8          0    7    0 CREATE INDEX z ON t1(x+x) 00 r[7]='CREATE INDEX z ON t1(x+x)'
REG[7] =   t25[CREATE INDEX z ](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s40[06170F11013F696E6465787A74310743.....?indexzt1.C](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s40[06170F11013F696E6465787A74310743.....?indexzt1.C](8)
REG[2] =  i:6
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    1 k(2,,)        00 
  14 OpenRead         1    2    2 1             00 root=2 iDb=2; t1
  15 Rewind           1   22    0               00 
  22 OpenWrite        2    1    2 k(2,,)        11 root=1 iDb=2
  23 SorterSort       3   28    0               00 
  28 Close            1    0    0               00 
  29 Close            2    0    0               00 
  30 Close            3    0    0               00 
  31 SetCookie        2    1    5               00 
  32 ParseSchema      2    0    0 name='z' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    5 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 z             00 r[2]='z'
REG[2] =   t1[z](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[z](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[z](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[z](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[z](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[c1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[z](8)
REG[1] =   s2[c1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[z](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[z](8)
REG[1] =   s1[z](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s1[z](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:7
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s25[CREATE INDEX z ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[z](8)
REG[6] =  i:7
REG[7] =   s25[CREATE INDEX z ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  33 Expire           0    0    0               00 
  34 Halt             0    0    0               00 
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s37[CREATE INDEX t1](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s37[CREATE INDEX t1](8)
REG[1] =  i:1
   6 IfNot            1   11    1               00 
REG[1] =  i:1
   7 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s37[CREATE INDEX t1](8)
   8 Function         2    6    1 substr(2)     02 r[1]=func(r[6..7])
REG[6] =   s37[CREATE INDEX t1](8)
REG[7] =  i:14
REG[1] =   s24[t1_idx_5cb97285](8)
   9 Concat           1    5    4               00 r[4]=r[5]+r[1]
REG[1] =   s24[t1_idx_5cb97285](8)
REG[5] =   t23[CREATE INDEX va](8)
REG[4] =   s47[CREATE INDEX va](8)
  10 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s47[CREATE INDEX va](8)
SQL: [CREATE INDEX vacuum_db.t1_idx_5cb97285 ON t1(x)]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      2    1    5 0             01 usesStmtJournal=0
  35 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  36 TableLock        2    2    1 t1            00 iDb=2 root=2 write=1
  37 Goto             0    1    0               00 
   1 Noop             0   33    0               00 
   2 CreateIndex      2    1    0               00 r[1]=root iDb=2
REG[1] =  i:8
   3 OpenWrite        0    1    2 5             00 root=1 iDb=2; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:7
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 t1_idx_5cb97285 00 r[4]='t1_idx_5cb97285'
REG[4] =   t15[t1_idx_5cb97285](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:8
   9 String8          0    7    0 CREATE INDEX t1_idx_5cb97285 ON t1(x) 00 r[7]='CREATE INDEX t1_idx_5cb97285 ON t1(x)'
REG[7] =   t37[CREATE INDEX t1](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s66[06172B110157696E64657874315F6964..+..Windext1_id](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s66[06172B110157696E64657874315F6964..+..Windext1_id](8)
REG[2] =  i:7
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    1 k(2,,)        00 
  14 OpenRead         1    2    2 1             00 root=2 iDb=2; t1
  15 Rewind           1   21    0               00 
  21 OpenWrite        2    1    2 k(2,,)        11 root=1 iDb=2
  22 SorterSort       3   27    0               00 
  27 Close            1    0    0               00 
  28 Close            2    0    0               00 
  29 Close            3    0    0               00 
  30 SetCookie        2    1    6               00 
  31 ParseSchema      2    0    0 name='t1_idx_5cb97285' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    6 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 t1_idx_5cb97285 00 r[2]='t1_idx_5cb97285'
REG[2] =   t15[t1_idx_5cb97285](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[t1_idx_5cb97285](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[t1_idx_5cb97285](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[t1_idx_5cb97285](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[t1_idx_5cb97285](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[c1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[t1_idx_5cb97285](8)
REG[1] =   s2[c1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[z](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[t1_idx_5cb97285](8)
REG[1] =   s1[z](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[t1_idx_5cb97285](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[t1_idx_5cb97285](8)
REG[1] =   s15[t1_idx_5cb97285](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s15[t1_idx_5cb97285](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:8
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s37[CREATE INDEX t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s15[t1_idx_5cb97285](8)
REG[6] =  i:8
REG[7] =   s37[CREATE INDEX t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  32 Expire           0    0    0               00 
  33 Halt             0    0    0               00 
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'CREATE UNIQUE INDEX vacuum_db.' || substr(sql,21)   FROM sqlite_master WHERE sql LIKE 'CREATE UNIQUE INDEX %']
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    8 0             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE UNIQUE INDEX % 00 r[2]='CREATE UNIQUE INDEX %'
REG[2] =   t21[CREATE UNIQUE I](8)
  17 String8          0    5    0 CREATE UNIQUE INDEX vacuum_db. 00 r[5]='CREATE UNIQUE INDEX vacuum_db.'
REG[5] =   t30[CREATE UNIQUE I](8)
  18 Integer         21    7    0               00 r[7]=21
REG[7] =  i:21
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s38[CREATE TABLE t1](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s38[CREATE TABLE t1](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s331[CREATE TABLE t2](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s331[CREATE TABLE t2](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s38[CREATE TABLE sq](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s38[CREATE TABLE sq](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s29[CREATE INDEX c1](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s29[CREATE INDEX c1](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE sq](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s39[CREATE TABLE sq](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s25[CREATE INDEX z ](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s25[CREATE INDEX z ](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s37[CREATE INDEX t1](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s37[CREATE INDEX t1](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';'FROM main.sqlite_master WHERE type = 'table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    0    8 0             01 usesStmtJournal=0
  25 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  26 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  27 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  28 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  29 String8          0   10    0 INSERT INTO vacuum_db. 00 r[10]='INSERT INTO vacuum_db.'
REG[10] =   t22[INSERT INTO vac](8)
  30 String8          0   13    0  SELECT * FROM main. 00 r[13]=' SELECT * FROM main.'
REG[13] =   t20[ SELECT * FROM ](8)
  31 String8          0   14    0 ;             00 r[14]=';'
REG[14] =   t1[;](8)
  32 Goto             0    1    0               00 
   1 OpenRead         0    1    0 4             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   22    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t1](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[t1](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:2
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:2
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[t1](8)
  13 Function0        0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s2[t1](8)
REG[11] =   z4['t1'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z4['t1'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s26[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s26[INSERT INTO vac](8)
REG[8] =   s46[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[t1](8)
  17 Function0        0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s2[t1](8)
REG[9] =   z4['t1'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z4['t1'](8)
REG[8] =   s46[INSERT INTO vac](8)
REG[5] =   s50[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s50[INSERT INTO vac](8)
REG[7] =   s51[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s51[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'t1' SELECT * FROM main.'t1';]
VDBE Trace:
   0 Init             0   40    0               00 Start at 40
  40 Transaction      0    0    8 0             01 usesStmtJournal=1
  41 Transaction      2    1    6 0             01 usesStmtJournal=1
  42 TableLock        2    2    1 t1            00 iDb=2 root=2 write=1
  43 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  44 Goto             0    1    0               00 
   1 OpenWrite        1    2    2 1             00 root=2 iDb=2; t1
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Rewind           0   39    0               00 
   4 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   5 NotExists        1    7    2               00 intkey=r[2]
REG[2] =  i:1
   7 RowData          0    1    0               00 r[1]=data
REG[1] =  s2[0200..](8)
   8 Insert           1    1    2 t1            0B intkey=r[2] data=r[1]
REG[1] =  s2[0200..](8)
REG[2] =  i:1
   9 Next             0    4    0               00 
   4 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
   5 NotExists        1    7    2               00 intkey=r[2]
REG[2] =  i:2
   7 RowData          0    1    0               00 r[1]=data
REG[1] =  s2[0200..](8)
   8 Insert           1    1    2 t1            0B intkey=r[2] data=r[1]
REG[1] =  s2[0200..](8)
REG[2] =  i:2
   9 Next             0    4    0               00 
   4 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:3
   5 NotExists        1    7    2               00 intkey=r[2]
REG[2] =  i:3
   7 RowData          0    1    0               00 r[1]=data
REG[1] =  s2[0200..](8)
   8 Insert           1    1    2 t1            0B intkey=r[2] data=r[1]
REG[1] =  s2[0200..](8)
REG[2] =  i:3
   9 Next             0    4    0               00 
   4 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:4
   5 NotExists        1    7    2               00 intkey=r[2]
REG[2] =  i:4
   7 RowData          0    1    0               00 r[1]=data
REG[1] =  s2[0200..](8)
   8 Insert           1    1    2 t1            0B intkey=r[2] data=r[1]
REG[1] =  s2[0200..](8)
REG[2] =  i:4
   9 Next             0    4    0               00 
  10 Close            0    0    0               00 
  11 Close            1    0    0               00 
  12 OpenRead         0    6    0 k(2,,)        00 root=6 iDb=0; t1_idx_5cb97285
  13 OpenWrite        1    8    2 k(2,,)        01 root=8 iDb=2; t1_idx_5cb97285
  14 Rewind           0   19    0               00 
  15 RowKey           0    1    0               00 r[1]=key
REG[1] =  s3[030909...](8)
  16 Last             1    0   -1               00 
  17 IdxInsert        1    1    1               10 key=r[1]
REG[1] =  s3[030909...](8)
  18 Next             0   15    0               00 
  15 RowKey           0    1    0               00 r[1]=key
REG[1] =  s5[0301010202.....](8)
  16 Last             1    0   -1               00 
  17 IdxInsert        1    1    1               10 key=r[1]
REG[1] =  s5[0301010202.....](8)
  18 Next             0   15    0               00 
  15 RowKey           0    1    0               00 r[1]=key
REG[1] =  s5[0301010303.....](8)
  16 Last             1    0   -1               00 
  17 IdxInsert        1    1    1               10 key=r[1]
REG[1] =  s5[0301010303.....](8)
  18 Next             0   15    0               00 
  15 RowKey           0    1    0               00 r[1]=key
REG[1] =  s5[0301010404.....](8)
  16 Last             1    0   -1               00 
  17 IdxInsert        1    1    1               10 key=r[1]
REG[1] =  s5[0301010404.....](8)
  18 Next             0   15    0               00 
  19 Close            0    0    0               00 
  20 Close            1    0    0               00 
  21 OpenRead         0    9    0 k(2,,)        00 root=9 iDb=0; z
  22 OpenWrite        1    7    2 k(2,,)        01 root=7 iDb=2; z
  23 Rewind           0   28    0               00 
  24 RowKey           0    1    0               00 r[1]=key
REG[1] =  s4[03010902....](8)
  25 Last             1    0   -1               00 
  26 IdxInsert        1    1    1               10 key=r[1]
REG[1] =  s4[03010902....](8)
  27 Next             0   24    0               00 
  24 RowKey           0    1    0               00 r[1]=key
REG[1] =  s5[0301010402.....](8)
  25 Last             1    0   -1               00 
  26 IdxInsert        1    1    1               10 key=r[1]
REG[1] =  s5[0301010402.....](8)
  27 Next             0   24    0               00 
  24 RowKey           0    1    0               00 r[1]=key
REG[1] =  s5[0301010603.....](8)
  25 Last             1    0   -1               00 
  26 IdxInsert        1    1    1               10 key=r[1]
REG[1] =  s5[0301010603.....](8)
  27 Next             0   24    0               00 
  24 RowKey           0    1    0               00 r[1]=key
REG[1] =  s5[0301010804.....](8)
  25 Last             1    0   -1               00 
  26 IdxInsert        1    1    1               10 key=r[1]
REG[1] =  s5[0301010804.....](8)
  27 Next             0   24    0               00 
  28 Close            0    0    0               00 
  29 Close            1    0    0               00 
  30 OpenRead         0    5    0 k(3,,,)       00 root=5 iDb=0; c1
  31 OpenWrite        1    6    2 k(3,,,)       01 root=6 iDb=2; c1
  32 Rewind           0   37    0               00 
  33 RowKey           0    1    0               00 r[1]=key
REG[1] =  s4[04090909....](8)
  34 Last             1    0   -1               00 
  35 IdxInsert        1    1    1               10 key=r[1]
REG[1] =  s4[04090909....](8)
  36 Next             0   33    0               00 
  33 RowKey           0    1    0               00 r[1]=key
REG[1] =  s7[04010101020202.......](8)
  34 Last             1    0   -1               00 
  35 IdxInsert        1    1    1               10 key=r[1]
REG[1] =  s7[04010101020202.......](8)
  36 Next             0   33    0               00 
  33 RowKey           0    1    0               00 r[1]=key
REG[1] =  s7[04010101030303.......](8)
  34 Last             1    0   -1               00 
  35 IdxInsert        1    1    1               10 key=r[1]
REG[1] =  s7[04010101030303.......](8)
  36 Next             0   33    0               00 
  33 RowKey           0    1    0               00 r[1]=key
REG[1] =  s7[04010101040404.......](8)
  34 Last             1    0   -1               00 
  35 IdxInsert        1    1    1               10 key=r[1]
REG[1] =  s7[04010101040404.......](8)
  36 Next             0   33    0               00 
  37 Close            0    0    0               00 
  38 Close            1    0    0               00 
  39 Halt             0    0    0               00 
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t2](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[t2](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:3
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:3
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[t2](8)
  13 Function         0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s2[t2](8)
REG[11] =   z4['t2'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z4['t2'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s26[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s26[INSERT INTO vac](8)
REG[8] =   s46[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[t2](8)
  17 Function         0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s2[t2](8)
REG[9] =   z4['t2'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z4['t2'](8)
REG[8] =   s46[INSERT INTO vac](8)
REG[5] =   s50[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s50[INSERT INTO vac](8)
REG[7] =   s51[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s51[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'t2' SELECT * FROM main.'t2';]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      0    0    8 0             01 usesStmtJournal=1
  21 Transaction      2    1    6 0             01 usesStmtJournal=1
  22 TableLock        2    3    1 t2            00 iDb=2 root=3 write=1
  23 TableLock        0    3    0 t2            00 iDb=0 root=3 write=0
  24 TableLock        2    4    1 sqlite_sequence 00 iDb=2 root=4 write=1
  25 OpenRead         0    4    2 2             00 root=4 iDb=2; sqlite_sequence
  26 String8          0    1    0 t2            00 r[1]='t2'
REG[1] =   t2[t2](8)
  27 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  28 Rewind           0   36    0               00 
  36 Close            0    0    0               00 
  37 Goto             0    1    0               00 
   1 OpenWrite        1    3    2 8             00 root=3 iDb=2; t2
   2 OpenRead         0    3    0 8             00 root=3 iDb=0; t2
   3 Rewind           0   13    0               00 
  13 OpenWrite        0    4    2 2             00 root=4 iDb=2; sqlite_sequence
  14 NotNull          3   16    0               00 if r[3]!=NULL goto 16
REG[3] =  NULL
  15 NewRowid         0    3    0               00 r[3]=rowid
REG[3] =  i:1
  16 MakeRecord       1    2    4               00 r[4]=mkrec(r[1..2])
REG[4] =  s5[0311007432...t2](8)
  17 Insert           0    4    3               08 intkey=r[3] data=r[4]
REG[4] =  s5[0311007432...t2](8)
REG[3] =  i:1
  18 Noop             0    0    0               00 
  19 Halt             0    0    0               00 
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s15[sqlite_sequence](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s15[sqlite_sequence](8)
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s12[sqlite_stat1](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s12[sqlite_stat1](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:8
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:8
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:8
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s12[sqlite_stat1](8)
  13 Function         0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s12[sqlite_stat1](8)
REG[11] =   z14['sqlite_stat1'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z14['sqlite_stat1'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s36[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s36[INSERT INTO vac](8)
REG[8] =   s56[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s12[sqlite_stat1](8)
  17 Function         0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s12[sqlite_stat1](8)
REG[9] =   z14['sqlite_stat1'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z14['sqlite_stat1'](8)
REG[8] =   s56[INSERT INTO vac](8)
REG[5] =   s70[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s70[INSERT INTO vac](8)
REG[7] =   s71[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s71[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'sqlite_stat1' SELECT * FROM main.'sqlite_stat1';]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    8 0             01 usesStmtJournal=0
  12 Transaction      2    1    6 0             01 usesStmtJournal=0
  13 TableLock        2    5    1 sqlite_stat1  00 iDb=2 root=5 write=1
  14 TableLock        0    8    0 sqlite_stat1  00 iDb=0 root=8 write=0
  15 Goto             0    1    0               00 
   1 OpenWrite        1    5    2 3             00 root=5 iDb=2; sqlite_stat1
   2 OpenRead         0    8    0 3             00 root=8 iDb=0; sqlite_stat1
   3 Rewind           0   10    0               00 
   4 NewRowid         1    2    0               00 r[2]=rowid
REG[2] =  i:1
   5 RowData          0    1    0               00 r[1]=data
REG[1] =  s13[04111117743163313420312031....t1c14 1 1](8)
   6 Insert           1    1    2 sqlite_stat1  0B intkey=r[2] data=r[1]
REG[1] =  s13[04111117743163313420312031....t1c14 1 1](8)
REG[2] =  i:1
   7 Next             0    4    0               00 
   8 Close            0    0    0               00 
   9 Close            1    0    0               00 
  10 Halt             0    0    0               00 
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  21 Next             0    4    0               01 
  22 Close            0    0    0               00 
  23 Halt             0    0    0               00 
SQL: [SELECT 'DELETE FROM vacuum_db.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name='sqlite_sequence' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      2    0    6 0             01 usesStmtJournal=0
  15 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  16 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  17 String8          0    5    0 DELETE FROM vacuum_db. 00 r[5]='DELETE FROM vacuum_db.'
REG[5] =   t22[DELETE FROM vac](8)
  18 String8          0    8    0 ;             00 r[8]=';'
REG[8] =   t1[;](8)
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  11 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t2](8)
  11 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s15[sqlite_sequence](8)
   6 Copy             1    7    0               00 r[7]=r[1]
REG[7] =   s15[sqlite_sequence](8)
   7 Function0        0    7    6 quote(1)      01 r[6]=func(r[7])
REG[7] =   s15[sqlite_sequence](8)
REG[6] =   z17['sqlite_sequenc](8)
   8 Concat           6    5    4               00 r[4]=r[5]+r[6]
REG[6] =   z17['sqlite_sequenc](8)
REG[5] =   t22[DELETE FROM vac](8)
REG[4] =   s39[DELETE FROM vac](8)
   9 Concat           8    4    3               00 r[3]=r[4]+r[8]
REG[8] =   t1[;](8)
REG[4] =   s39[DELETE FROM vac](8)
REG[3] =   s40[DELETE FROM vac](8)
  10 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s40[DELETE FROM vac](8)
SQL: [DELETE FROM vacuum_db.'sqlite_sequence';]
VDBE Trace:
   0 Init             0    3    0               00 Start at 3
   3 Transaction      2    1    6 0             01 usesStmtJournal=0
   4 TableLock        2    4    1 sqlite_sequence 00 iDb=2 root=4 write=1
   5 Goto             0    1    0               00 
   1 Clear            4    2   -1 sqlite_sequence 00 
   2 Halt             0    0    0               00 
  11 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s12[sqlite_stat1](8)
  11 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[c1](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[c1](8)
  11 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[z](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s1[z](8)
  11 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[t1_idx_5cb97285](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s15[t1_idx_5cb97285](8)
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name=='sqlite_sequence';]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      2    0    6 0             01 usesStmtJournal=0
  19 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  20 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  21 String8          0    7    0 INSERT INTO vacuum_db. 00 r[7]='INSERT INTO vacuum_db.'
REG[7] =   t22[INSERT INTO vac](8)
  22 String8          0   10    0  SELECT * FROM main. 00 r[10]=' SELECT * FROM main.'
REG[10] =   t20[ SELECT * FROM ](8)
  23 String8          0   11    0 ;             00 r[11]=';'
REG[11] =   t1[;](8)
  24 Goto             0    1    0               00 
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   16    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  15 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t2](8)
  15 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s15[sqlite_sequence](8)
   6 Copy             1    9    0               00 r[9]=r[1]
REG[9] =   s15[sqlite_sequence](8)
   7 Function0        0    9    8 quote(1)      01 r[8]=func(r[9])
REG[9] =   s15[sqlite_sequence](8)
REG[8] =   z17['sqlite_sequenc](8)
   8 Concat           8    7    6               00 r[6]=r[7]+r[8]
REG[8] =   z17['sqlite_sequenc](8)
REG[7] =   t22[INSERT INTO vac](8)
REG[6] =   s39[INSERT INTO vac](8)
   9 Concat          10    6    5               00 r[5]=r[6]+r[10]
REG[10] =   t20[ SELECT * FROM ](8)
REG[6] =   s39[INSERT INTO vac](8)
REG[5] =   s59[INSERT INTO vac](8)
  10 Copy             1    9    0               00 r[9]=r[1]
REG[9] =   s15[sqlite_sequence](8)
  11 Function0        0    9    6 quote(1)      01 r[6]=func(r[9])
REG[9] =   s15[sqlite_sequence](8)
REG[6] =   z17['sqlite_sequenc](8)
  12 Concat           6    5    4               00 r[4]=r[5]+r[6]
REG[6] =   z17['sqlite_sequenc](8)
REG[5] =   s59[INSERT INTO vac](8)
REG[4] =   s76[INSERT INTO vac](8)
  13 Concat          11    4    3               00 r[3]=r[4]+r[11]
REG[11] =   t1[;](8)
REG[4] =   s76[INSERT INTO vac](8)
REG[3] =   s77[INSERT INTO vac](8)
  14 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s77[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'sqlite_sequence' SELECT * FROM main.'sqlite_sequence';]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    8 0             01 usesStmtJournal=0
  12 Transaction      2    1    6 0             01 usesStmtJournal=0
  13 TableLock        2    4    1 sqlite_sequence 00 iDb=2 root=4 write=1
  14 TableLock        0    4    0 sqlite_sequence 00 iDb=0 root=4 write=0
  15 Goto             0    1    0               00 
   1 OpenWrite        1    4    2 2             00 root=4 iDb=2; sqlite_sequence
   2 OpenRead         0    4    0 2             00 root=4 iDb=0; sqlite_sequence
   3 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
  15 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s12[sqlite_stat1](8)
  15 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[c1](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[c1](8)
  15 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[z](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s1[z](8)
  15 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[t1_idx_5cb97285](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s15[t1_idx_5cb97285](8)
  15 Next             0    4    0               01 
  16 Close            0    0    0               00 
  17 Halt             0    0    0               00 
SQL: [INSERT INTO vacuum_db.sqlite_master   SELECT type, name, tbl_name, rootpage, sql    FROM main.sqlite_master   WHERE type='view' OR type='trigger'      OR (type='table' AND rootpage=0)]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    0    8 0             01 usesStmtJournal=0
  29 Transaction      2    1    6 0             01 usesStmtJournal=0
  30 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  31 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  32 String8          0    9    0 view          00 r[9]='view'
REG[9] =   t4[view](8)
  33 String8          0   11    0 trigger       00 r[11]='trigger'
REG[11] =   t7[trigger](8)
  34 String8          0   12    0 table         00 r[12]='table'
REG[12] =   t5[table](8)
  35 Integer          0   13    0               00 r[13]=0
REG[13] =  i:0
  36 Goto             0    1    0               00 
   1 InitCoroutine    7   20    2               00 
  20 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  21 Yield            7   26    0               00 
REG[7] =  i:1
REG[7] =  i:21
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   18    0               00 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[table](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[table](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[table](8)
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
REG[10] =  i:2
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
REG[13] =  i:0
REG[10] =  i:2
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[table](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[table](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[table](8)
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
REG[10] =  i:3
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
REG[13] =  i:0
REG[10] =  i:3
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[table](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[table](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[table](8)
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
REG[10] =  i:4
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
REG[13] =  i:0
REG[10] =  i:4
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[index](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[index](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[index](8)
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[table](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[table](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[table](8)
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
REG[10] =  i:8
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
REG[13] =  i:0
REG[10] =  i:8
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[index](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[index](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[index](8)
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[index](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[index](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[index](8)
  17 Next             0    5    0               01 
  18 Close            0    0    0               00 
  19 EndCoroutine     7    0    0               00 
REG[7] =  i:21
  26 Noop             1    0    0               00 
  27 Halt             0    0    0               00 
   2 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    9 1             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s38[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s38[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s331[CREATE TABLE t2](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t2](8)
REG[2] =  i:3
REG[3] =   s331[CREATE TABLE t2](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s38[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s15[sqlite_sequence](8)
REG[2] =  i:4
REG[3] =   s38[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s12[sqlite_stat1](8)
REG[2] =  i:5
REG[3] =   s39[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[c1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:6
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s29[CREATE INDEX c1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[c1](8)
REG[2] =  i:6
REG[3] =   s29[CREATE INDEX c1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[z](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:7
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s25[CREATE INDEX z ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[z](8)
REG[2] =  i:7
REG[3] =   s25[CREATE INDEX z ](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[t1_idx_5cb97285](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:8
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s37[CREATE INDEX t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s15[t1_idx_5cb97285](8)
REG[2] =  i:8
REG[3] =   s37[CREATE INDEX t1](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    9 1             00 usesStmtJournal=0
  12 TableLock        0    5    0 sqlite_stat1  00 iDb=0 root=5 write=0
  13 Goto             0    1    0               00 
   1 OpenRead         0    5    0 3             00 root=5 iDb=0; sqlite_stat1
   2 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_stat1.tbl
REG[1] =   s2[t1](8)
   5 Column           0    1    2               00 r[2]=sqlite_stat1.idx
REG[2] =   s2[c1](8)
   6 Column           0    2    3               00 r[3]=sqlite_stat1.stat
REG[3] =   s5[4 1 1](8)
   7 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =   s2[c1](8)
REG[3] =   s5[4 1 1](8)
   8 Next             0    4    0               01 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      1    0    0 1             00 usesStmtJournal=0
  13 TableLock        1    1    0 sqlite_temp_master 00 iDb=1 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          0    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;SELECT count(*), sum(x) FROM t1;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    9 1             01 usesStmtJournal=0
  16 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  17 Goto             0    1    0               00 
   1 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0    9    0               00 
   5 AggStep0         0    0    1 count(0)      00 accum=r[1] step(r[0])
   6 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:1
   7 AggStep0         0    4    2 sum(1)        01 accum=r[2] step(r[4])
REG[4] =  i:1
   8 Next             0    5    0               01 
   5 AggStep          0    0    1 count(0)      00 accum=r[1] step(r[0])
   6 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:2
   7 AggStep          0    4    2 sum(1)        01 accum=r[2] step(r[4])
REG[4] =  i:2
   8 Next             0    5    0               01 
   5 AggStep          0    0    1 count(0)      00 accum=r[1] step(r[0])
   6 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:3
   7 AggStep          0    4    2 sum(1)        01 accum=r[2] step(r[4])
REG[4] =  i:3
   8 Next             0    5    0               01 
   5 AggStep          0    0    1 count(0)      00 accum=r[1] step(r[0])
   6 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:4
   7 AggStep          0    4    2 sum(1)        01 accum=r[2] step(r[4])
REG[4] =  i:4
   8 Next             0    5    0               01 
   9 Close            0    0    0               00 
  10 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  11 AggFinal         2    1    0 sum(1)        00 accum=r[2] N=1
  12 Copy             1    5    1               00 r[5..6]=r[1..2]
REG[5] =  i:4
REG[6] =  i:10
  13 ResultRow        5    2    0               00 output=r[5..6]
REG[5] =  i:4
REG[6] =  i:10
  14 Halt             0    0    0               00 
SQL: [SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      1    0    0 1             01 usesStmtJournal=0
  15 TableLock        1    1    0 sqlite_temp_master 00 iDb=1 root=1 write=0
  16 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          0    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   12    0               00 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [DROP INDEX t1_idx_5cb97285 
;]
VDBE Trace:
   0 Init             0   52    0               00 Start at 52
  52 Transaction      0    1    9 1             01 usesStmtJournal=1
  53 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  54 TableLock        0    5    1 sqlite_stat1  00 iDb=0 root=5 write=1
  55 String8          0    3    0 t1_idx_5cb97285 00 r[3]='t1_idx_5cb97285'
REG[3] =   t15[t1_idx_5cb97285](8)
  56 String8          0    5    0 index         00 r[5]='index'
REG[5] =   t5[index](8)
  57 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t15[t1_idx_5cb97285](8)
REG[2] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[t2](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t15[t1_idx_5cb97285](8)
REG[2] =   s2[t2](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s15[sqlite_sequence](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t15[t1_idx_5cb97285](8)
REG[2] =   s15[sqlite_sequence](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s12[sqlite_stat1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t15[t1_idx_5cb97285](8)
REG[2] =   s12[sqlite_stat1](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[c1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t15[t1_idx_5cb97285](8)
REG[2] =   s2[c1](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s1[z](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t15[t1_idx_5cb97285](8)
REG[2] =   s1[z](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s15[t1_idx_5cb97285](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t15[t1_idx_5cb97285](8)
REG[2] =   s15[t1_idx_5cb97285](8)
   7 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[index](8)
   8 Ne               5   12    4 (BINARY)      52 if r[5]!=r[4] goto 12
REG[5] =   t5[index](8)
REG[4] =   s5[index](8)
   9 Rowid            0    6    0               00 r[6]=rowid
REG[6] =  i:7
  10 Once             0   11    0               00 
  11 Delete           0    0    0 sqlite_master 02 
  12 Next             0    5    0               01 
  13 Close            0    0    0               00 
  14 Null             0    7    0               00 r[7]=NULL
REG[7] =  NULL
  15 OpenWrite        1    5    0 3             00 root=5 iDb=0; sqlite_stat1
  16 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
  17 Rewind           1   24    0               00 
  18 Column           1    1    4               00 r[4]=sqlite_stat1.idx
REG[4] =   s2[c1](8)
  19 Ne               3   23    4 (BINARY)      51 if r[3]!=r[4] goto 23
REG[3] =   t15[t1_idx_5cb97285](8)
REG[4] =   s2[c1](8)
  23 Next             1   18    0               01 
  24 Close            1    0    0               00 
  25 SetCookie        0    1   10               00 
  26 Destroy          8    4    0               00 
REG[4] =  i:0
  27 Null             0    9   10               00 r[9..10]=NULL
REG[9] =  NULL
  28 IfNot            4   37    1               00 
REG[4] =  i:0
  37 Close            2    0    0               00 
  38 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  39 RowSetRead       9   49   10               00 r[10]=rowset(9)
REG[9] =  NULL
REG[10] =  NULL
  49 Close            2    0    0               00 
  50 DropIndex        0    0    0 t1_idx_5cb97285 00 
  51 Halt             0    0    0               00 
SQL: [;select * from t1 group by x order by x;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    0   10 1             01 usesStmtJournal=0
  34 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  35 Goto             0    1    0               00 
   1 Noop             1    3    0               00 
   2 Noop             2    1    0               00 
   3 Integer          0    3    0               00 r[3]=0; clear abort flag
REG[3] =  i:0
   4 Integer          0    2    0               00 r[2]=0; indicate accumulator empty
REG[2] =  i:0
   5 Null             0    6    6               00 r[6..6]=NULL
REG[6] =  NULL
   6 Gosub            5   30    0               00 
REG[5] =  i:6
  30 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
  31 Return           5    0    0               00 
REG[5] =  i:6
   7 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   8 Explain          0    0    0 SCAN TABLE t1 00 
   9 Rewind           0   20    0               00 
  10 Rowid            0    7    0               00 r[7]=rowid
REG[7] =  i:1
  11 Compare          6    7    1 k(1,B)        00 r[6] <-> r[7]
REG[6] =  NULL
REG[7] =  i:1
  12 Jump            13   17   13               00 
  13 Move             7    6    1               00 r[6]=r[7]
REG[6] =  i:1
  14 Gosub            4   25    0               00 output one row
REG[4] =  i:14
  25 IfPos            2   27    0               00 if r[2]>0 then r[2]-=0, goto 27; Groupby result generator entry point
REG[2] =  i:0
  26 Return           4    0    0               00 
REG[4] =  i:14
  15 IfPos            3   32    0               00 if r[3]>0 then r[3]-=0, goto 32; check abort flag
REG[3] =  i:0
  16 Gosub            5   30    0               00 reset accumulator
REG[5] =  i:16
  30 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
  31 Return           5    0    0               00 
REG[5] =  i:16
  17 Rowid            0    1    0               00 r[1]=rowid
REG[1] =  i:1
  18 Integer          1    2    0               00 r[2]=1; indicate data in accumulator
REG[2] =  i:1
  19 Next             0   10    0               01 
  10 Rowid            0    7    0               00 r[7]=rowid
REG[7] =  i:2
  11 Compare          6    7    1 k(1,B)        00 r[6] <-> r[7]
REG[6] =  i:1
REG[7] =  i:2
  12 Jump            13   17   13               00 
  13 Move             7    6    1               00 r[6]=r[7]
REG[6] =  i:2
  14 Gosub            4   25    0               00 output one row
REG[4] =  i:14
  25 IfPos            2   27    0               00 if r[2]>0 then r[2]-=0, goto 27; Groupby result generator entry point
REG[2] =  i:1
  27 Copy             1    8    0               00 r[8]=r[1]
REG[8] =  i:1
  28 ResultRow        8    1    0               00 output=r[8]
REG[8] =  i:1
  29 Return           4    0    0               00 end groupby result generator
REG[4] =  i:14
  15 IfPos            3   32    0               00 if r[3]>0 then r[3]-=0, goto 32; check abort flag
REG[3] =  i:0
  16 Gosub            5   30    0               00 reset accumulator
REG[5] =  i:16
  30 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
  31 Return           5    0    0               00 
REG[5] =  i:16
  17 Rowid            0    1    0               00 r[1]=rowid
REG[1] =  i:2
  18 Integer          1    2    0               00 r[2]=1; indicate data in accumulator
REG[2] =  i:1
  19 Next             0   10    0               01 
  10 Rowid            0    7    0               00 r[7]=rowid
REG[7] =  i:3
  11 Compare          6    7    1 k(1,B)        00 r[6] <-> r[7]
REG[6] =  i:2
REG[7] =  i:3
  12 Jump            13   17   13               00 
  13 Move             7    6    1               00 r[6]=r[7]
REG[6] =  i:3
  14 Gosub            4   25    0               00 output one row
REG[4] =  i:14
  25 IfPos            2   27    0               00 if r[2]>0 then r[2]-=0, goto 27; Groupby result generator entry point
REG[2] =  i:1
  27 Copy             1    8    0               00 r[8]=r[1]
REG[8] =  i:2
  28 ResultRow        8    1    0               00 output=r[8]
REG[8] =  i:2
  29 Return           4    0    0               00 end groupby result generator
REG[4] =  i:14
  15 IfPos            3   32    0               00 if r[3]>0 then r[3]-=0, goto 32; check abort flag
REG[3] =  i:0
  16 Gosub            5   30    0               00 reset accumulator
REG[5] =  i:16
  30 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
  31 Return           5    0    0               00 
REG[5] =  i:16
  17 Rowid            0    1    0               00 r[1]=rowid
REG[1] =  i:3
  18 Integer          1    2    0               00 r[2]=1; indicate data in accumulator
REG[2] =  i:1
  19 Next             0   10    0               01 
  10 Rowid            0    7    0               00 r[7]=rowid
REG[7] =  i:4
  11 Compare          6    7    1 k(1,B)        00 r[6] <-> r[7]
REG[6] =  i:3
REG[7] =  i:4
  12 Jump            13   17   13               00 
  13 Move             7    6    1               00 r[6]=r[7]
REG[6] =  i:4
  14 Gosub            4   25    0               00 output one row
REG[4] =  i:14
  25 IfPos            2   27    0               00 if r[2]>0 then r[2]-=0, goto 27; Groupby result generator entry point
REG[2] =  i:1
  27 Copy             1    8    0               00 r[8]=r[1]
REG[8] =  i:3
  28 ResultRow        8    1    0               00 output=r[8]
REG[8] =  i:3
  29 Return           4    0    0               00 end groupby result generator
REG[4] =  i:14
  15 IfPos            3   32    0               00 if r[3]>0 then r[3]-=0, goto 32; check abort flag
REG[3] =  i:0
  16 Gosub            5   30    0               00 reset accumulator
REG[5] =  i:16
  30 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
  31 Return           5    0    0               00 
REG[5] =  i:16
  17 Rowid            0    1    0               00 r[1]=rowid
REG[1] =  i:4
  18 Integer          1    2    0               00 r[2]=1; indicate data in accumulator
REG[2] =  i:1
  19 Next             0   10    0               01 
  20 Close            0    0    0               00 
  21 Gosub            4   25    0               00 output final row
REG[4] =  i:21
  25 IfPos            2   27    0               00 if r[2]>0 then r[2]-=0, goto 27; Groupby result generator entry point
REG[2] =  i:1
  27 Copy             1    8    0               00 r[8]=r[1]
REG[8] =  i:4
  28 ResultRow        8    1    0               00 output=r[8]
REG[8] =  i:4
  29 Return           4    0    0               00 end groupby result generator
REG[4] =  i:21
  22 Goto             0   32    0               00 
  32 Halt             0    0    0               00 
SQL: [;
;PRAGMA integrity_check
;]
VDBE Trace:
   0 Init             0   81    0               00 Start at 81
  81 Transaction      0    0   10 1             01 usesStmtJournal=0
  82 Transaction      1    0    0 1             01 usesStmtJournal=0
  83 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  84 Goto             0    1    0               00 
   1 Integer        100    1    0               00 r[1]=100
REG[1] =  i:100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
REG[1] =  i:100
   4 IntegrityCk      2    7    1 [4,3,2,7]     00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
REG[2] =  NULL
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
REG[1] =  i:100
  12 OpenRead         1    2    0 1             00 root=2 iDb=0; t1
  13 OpenRead         2    7    0 k(2,,)        00 root=7 iDb=0; z
  14 OpenRead         3    6    0 k(3,,,)       00 root=6 iDb=0; c1
  15 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  16 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  17 Integer          0    9    0               00 r[9]=0
REG[9] =  i:0
  18 Rewind           1   51    0               00 
  19 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  20 Rowid            1   13    0               00 r[13]=rowid
REG[13] =  i:1
  21 Add             13   13   11               00 r[11]=r[13]+r[13]
REG[13] =  i:1
REG[13] =  i:1
REG[11] =  i:2
  22 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:1
  23 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  24 Found            2   35   11 2             00 key=r[11..12]
REG[11] =  i:2
REG[12] =  i:1
  35 Rowid            1   15    0               00 r[15]=rowid; t1.x
REG[15] =  i:1
  36 Rowid            1   16    0               00 r[16]=rowid; t1.x
REG[16] =  i:1
  37 Rowid            1   17    0               00 r[17]=rowid
REG[17] =  i:1
  38 AddImm           9    1    0               00 r[9]=r[9]+1
REG[9] =  i:0
  39 Found            3   50   15 3             00 key=r[15..17]
REG[15] =  i:1
REG[16] =  i:1
REG[17] =  i:1
  50 Next             1   19    0               00 
  19 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
  20 Rowid            1   13    0               00 r[13]=rowid
REG[13] =  i:2
  21 Add             13   13   11               00 r[11]=r[13]+r[13]
REG[13] =  i:2
REG[13] =  i:2
REG[11] =  i:4
  22 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:2
  23 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:1
  24 Found            2   35   11 2             00 key=r[11..12]
REG[11] =  i:4
REG[12] =  i:2
  35 Rowid            1   15    0               00 r[15]=rowid; t1.x
REG[15] =  i:2
  36 Rowid            1   16    0               00 r[16]=rowid; t1.x
REG[16] =  i:2
  37 Rowid            1   17    0               00 r[17]=rowid
REG[17] =  i:2
  38 AddImm           9    1    0               00 r[9]=r[9]+1
REG[9] =  i:1
  39 Found            3   50   15 3             00 key=r[15..17]
REG[15] =  i:2
REG[16] =  i:2
REG[17] =  i:2
  50 Next             1   19    0               00 
  19 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:2
  20 Rowid            1   13    0               00 r[13]=rowid
REG[13] =  i:3
  21 Add             13   13   11               00 r[11]=r[13]+r[13]
REG[13] =  i:3
REG[13] =  i:3
REG[11] =  i:6
  22 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:3
  23 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:2
  24 Found            2   35   11 2             00 key=r[11..12]
REG[11] =  i:6
REG[12] =  i:3
  35 Rowid            1   15    0               00 r[15]=rowid; t1.x
REG[15] =  i:3
  36 Rowid            1   16    0               00 r[16]=rowid; t1.x
REG[16] =  i:3
  37 Rowid            1   17    0               00 r[17]=rowid
REG[17] =  i:3
  38 AddImm           9    1    0               00 r[9]=r[9]+1
REG[9] =  i:2
  39 Found            3   50   15 3             00 key=r[15..17]
REG[15] =  i:3
REG[16] =  i:3
REG[17] =  i:3
  50 Next             1   19    0               00 
  19 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:3
  20 Rowid            1   13    0               00 r[13]=rowid
REG[13] =  i:4
  21 Add             13   13   11               00 r[11]=r[13]+r[13]
REG[13] =  i:4
REG[13] =  i:4
REG[11] =  i:8
  22 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:4
  23 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:3
  24 Found            2   35   11 2             00 key=r[11..12]
REG[11] =  i:8
REG[12] =  i:4
  35 Rowid            1   15    0               00 r[15]=rowid; t1.x
REG[15] =  i:4
  36 Rowid            1   16    0               00 r[16]=rowid; t1.x
REG[16] =  i:4
  37 Rowid            1   17    0               00 r[17]=rowid
REG[17] =  i:4
  38 AddImm           9    1    0               00 r[9]=r[9]+1
REG[9] =  i:3
  39 Found            3   50   15 3             00 key=r[15..17]
REG[15] =  i:4
REG[16] =  i:4
REG[17] =  i:4
  50 Next             1   19    0               00 
  51 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  52 IfPos            1   54    0               00 if r[1]>0 then r[1]-=0, goto 54
REG[1] =  i:100
  54 Count            2    3    0               00 r[3]=count()
REG[3] =  i:4
  55 Eq               8   60    3               90 if r[8]==r[3] goto 60
REG[8] =  i:4
REG[3] =  i:4
  60 IfPos            1   62    0               00 if r[1]>0 then r[1]-=0, goto 62
REG[1] =  i:100
  62 Count            3    3    0               00 r[3]=count()
REG[3] =  i:4
  63 Eq               9   68    3               90 if r[9]==r[3] goto 68
REG[9] =  i:4
REG[3] =  i:4
  68 IfPos            1   70    0               00 if r[1]>0 then r[1]-=0, goto 70
REG[1] =  i:100
  70 IntegrityCk      2    1    1 ]             01 
  71 IsNull           2   76    0               00 if r[2]==NULL goto 76
REG[2] =  NULL
  76 AddImm           1 -100    0               00 r[1]=r[1]+-100
REG[1] =  i:100
  77 If               1   80    0               00 
REG[1] =  i:0
  78 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
  79 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
  80 Halt             0    0    0               00 
SQL: [;UPDATE OR REPLACE t1 SET x=(SELECT x FROM t1 WHERE x=t1.x);]
VDBE Trace:
   0 Init             0   65    0               00 Start at 65
  65 Transaction      0    1   10 1             01 usesStmtJournal=0
  66 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  67 Goto             0    1    0               00 
   1 Null             0    3    4               00 r[3..4]=NULL
REG[3] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:1
   6 RowSetAdd        3    4    0               00 rowset(3)=r[4]
REG[3] =  NULL
REG[4] =  i:1
   7 Next             0    5    0               01 
   5 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:2
   6 RowSetAdd        3    4    0               00 rowset(3)=r[4]
REG[3] =  (rowset)
REG[4] =  i:2
   7 Next             0    5    0               01 
   5 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:3
   6 RowSetAdd        3    4    0               00 rowset(3)=r[4]
REG[3] =  (rowset)
REG[4] =  i:3
   7 Next             0    5    0               01 
   5 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:4
   6 RowSetAdd        3    4    0               00 rowset(3)=r[4]
REG[3] =  (rowset)
REG[4] =  i:4
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 OpenWrite        0    2    0 1             00 root=2 iDb=0; t1
  10 OpenWrite        1    7    0 k(2,,)        00 root=7 iDb=0; z
  11 OpenWrite        2    6    0 k(3,,,)       00 root=6 iDb=0; c1
  12 RowSetRead       3   61    4               00 r[4]=rowset(3)
REG[3] =  (rowset)
REG[4] =  i:1
  13 NotExists        0   12    4               00 intkey=r[4]
REG[4] =  i:1
  14 Once             0   26    0               00 
  15 Null             0    7    0               00 r[7]=NULL; Init subquery result
REG[7] =  NULL
  16 Integer          1    8    0               00 r[8]=1; LIMIT counter
REG[8] =  i:1
  17 OpenRead         3    2    0 0             00 root=2 iDb=0; t1
  18 Explain          0    0    0 SCAN TABLE t1 00 
  19 Rewind           3   25    0               00 
  20 Rowid            3    9    0               00 r[9]=rowid
REG[9] =  i:1
  21 Ne               9   24    9               53 if r[9]!=r[9] goto 24
REG[9] =  i:1
REG[9] =  i:1
  22 Copy             9    7    0               00 r[7]=r[9]
REG[7] =  i:1
  23 DecrJumpZero     8   25    0               00 if (--r[8])==0 goto 25
REG[8] =  i:1
  25 Close            3    0    0               00 
  26 SCopy            7    5    0               00 r[5]=r[7]
REG[5] =  i:1
  27 MustBeInt        5    0    0               00 
REG[5] =  i:1
  28 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  29 Eq               5   39    4               90 if r[5]==r[4] goto 39
REG[5] =  i:1
REG[4] =  i:1
  39 Affinity         6    1    0 D             00 affinity(r[6])
  40 Add              5    5   14               00 r[14]=r[5]+r[5]; z column 0
REG[5] =  i:1
REG[5] =  i:1
REG[14] =  i:2
  41 IntCopy          5   15    0               00 r[15]=r[5]; rowid
REG[15] =  i:1
  42 MakeRecord      14    2    1               00 r[1]=mkrec(r[14..15]); for z
REG[1] =  s4[03010902....](8)
  43 SCopy            5   17    0               00 r[17]=r[5]; x
REG[17] =  i:1
  44 SCopy            5   18    0               00 r[18]=r[5]; x
REG[18] =  i:1
  45 IntCopy          5   19    0               00 r[19]=r[5]; rowid
REG[19] =  i:1
  46 MakeRecord      17    3    2               00 r[2]=mkrec(r[17..19]); for c1
REG[2] =  s4[04090909....](8)
  47 NotExists        0   56    4               00 intkey=r[4]
REG[4] =  i:1
  48 Add             10   10   17               00 r[17]=r[10]+r[10]

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fd9134a3859 in __GI_abort () at abort.c:79
#2  0x00007fd9134a3729 in __assert_fail_base (fmt=0x7fd913639588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x212700 "memIsValid(&aMem[pOp->p1])", file=0x222c23 "sqlite3.c", line=77360, function=<optimized out>)
    at assert.c:92
#3  0x00007fd9134b4fd6 in __GI___assert_fail (assertion=0x212700 "memIsValid(&aMem[pOp->p1])", file=0x222c23 "sqlite3.c", line=77360, function=0x213a19 "int sqlite3VdbeExec(Vdbe *)") at assert.c:101
#4  0x00000000003e2946 in sqlite3VdbeExec (p=<optimized out>) at sqlite3.c:77360
#5  0x000000000028b140 in sqlite3_step (pStmt=<optimized out>) at sqlite3.c:75131
#6  0x000000000024b5e9 in main (argc=1, argv=0x7ffcf0f62ac8) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 45004] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
