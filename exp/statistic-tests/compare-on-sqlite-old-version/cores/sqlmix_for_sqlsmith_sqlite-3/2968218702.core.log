GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000469,sig:06,src:023722+021489,time:11606644,execs:1852298,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;SELECT * FROM b;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    3 0             01 usesStmtJournal=0
  12 TableLock        0    4    0 b             00 iDb=0 root=4 write=0
  13 Goto             0    1    0               00 
   1 OpenRead         0    4    0 3             00 root=4 iDb=0; b
   2 Explain          0    0    0 SCAN TABLE b  00 
   3 Rewind           0    9    0               00 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
SQL: [;INSERT INTO t1(oid,a,a) VALUES(16777216,15,'0000000001000000');]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    3 0             01 usesStmtJournal=0
  31 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  32 TableLock        0    3    1 sqlite_sequence 00 iDb=0 root=3 write=1
  33 OpenRead         0    3    0 2             00 root=3 iDb=0; sqlite_sequence
  34 String8          0    1    0 t1            00 r[1]='t1'
REG[1] =   t2[t1](8)
  35 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  36 Rewind           0   44    0               00 
  44 Close            0    0    0               00 
  45 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  46 Integer          3   13    0               00 r[13]=3
REG[13] =  i:3
  47 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 3             00 root=2 iDb=0; t1
   2 OpenWrite        1    5    0 k(2,,)        00 root=5 iDb=0; tr2
   3 Integer       16777216    4    0               00 r[4]=16777216
REG[4] =  i:16777216
   4 NotNull          4    6    0               00 if r[4]!=NULL goto 6
REG[4] =  i:16777216
   6 MustBeInt        4    0    0               00 
REG[4] =  i:16777216
   7 MemMax           2    4    0               00 r[2]=max(r[2],r[4])
REG[4] =  i:16777216
   8 SoftNull         6    0    0               00 r[6]=NULL
   9 Integer         15    7    0               00 r[7]=15
REG[7] =  i:15
  10 NotExists        0   12    4               00 intkey=r[4]
REG[4] =  i:16777216
  12 Affinity         5    2    0 AD            00 affinity(r[5..6])
  13 Copy             5   11    0               00 r[11]=r[5]
REG[11] =  NULL
  14 Copy             5   12    0               00 r[12]=r[5]
REG[12] =  NULL
  15 Function0        4   11    9 substr(3)     03 r[9]=func(r[11..13]); tr2 column 0
REG[11] =  NULL
REG[12] =  NULL
REG[13] =  i:3
REG[9] =  NULL
  16 IntCopy          4   10    0               00 r[10]=r[4]; rowid
REG[10] =  i:16777216
  17 MakeRecord       9    2    8               00 r[8]=mkrec(r[9..10]); for tr2
REG[8] =  s7[03000401000000.......](8)
  18 IdxInsert        1    8    0               10 key=r[8]
REG[8] =  s7[03000401000000.......](8)
  19 MakeRecord       5    3   14               00 r[14]=mkrec(r[5..7])
REG[14] =  s5[040000010F.....](8)
  20 Insert           0   14    4 t1            13 intkey=r[4] data=r[14]
REG[14] =  s5[040000010F.....](8)
REG[4] =  i:16777216
  21 Close            0    0    0               00 
  22 Close            1    0    0               00 
  23 OpenWrite        0    3    0 2             00 root=3 iDb=0; sqlite_sequence
  24 NotNull          3   26    0               00 if r[3]!=NULL goto 26
REG[3] =  NULL
  25 NewRowid         0    3    0               00 r[3]=rowid
REG[3] =  i:1
  26 MakeRecord       1    2   15               00 r[15]=mkrec(r[1..2])
REG[15] =  s9[031104743101000000...t1....](8)
  27 Insert           0   15    3               08 intkey=r[3] data=r[15]
REG[15] =  s9[031104743101000000...t1....](8)
REG[3] =  i:1
  28 Noop             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;CREATE UNIQUE INDEX t0 ON t1(CAST(a AS text), a, substr(a,1,3));]
VDBE Trace:
   0 Init             0   41    0               00 Start at 41
  41 Transaction      0    1    3 0             01 usesStmtJournal=1
  42 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  43 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  44 Integer          1   15    0               00 r[15]=1
REG[15] =  i:1
  45 Integer          3   16    0               00 r[16]=3
REG[16] =  i:3
  46 Goto             0    1    0               00 
   1 Noop             0   40    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:6
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:5
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 t0            00 r[4]='t0'
REG[4] =   t2[t0](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:6
   9 String8          0    7    0 CREATE UNIQUE INDEX t0 ON t1(CAST(a AS text), a, substr(a,1,3)) 00 r[7]='CREATE UNIQUE INDEX t0 ON t1(CAST(a AS text), a, substr(a,1,3))'
REG[7] =   t63[CREATE UNIQUE I](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s80[0717111101810B696E64657874307431.......indext0t1](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s80[0717111101810B696E64657874307431.......indext0t1](8)
REG[2] =  i:5
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    3 k(4,,,,)      00 
  14 OpenRead         1    2    0 3             00 root=2 iDb=0; t1
  15 Rewind           1   25    0               00 
  16 Column           1    2   10               00 r[10]=t1.a
REG[10] =  i:15
  17 Cast            10   66    0               00 affinity(r[10])
REG[10] =  i:15
  18 Column           1    2   11               00 r[11]=t1.a
REG[11] =  i:15
  19 Column           1    2   14               00 r[14]=t1.a
REG[14] =  i:15
  20 Function0        6   14   12 substr(3)     03 r[12]=func(r[14..16])
REG[14] =  i:15
REG[15] =  i:1
REG[16] =  i:3
REG[12] =   s2[15](8)
  21 Rowid            1   13    0               00 r[13]=rowid
REG[13] =  i:16777216
  22 MakeRecord      10    4    9               00 r[9]=mkrec(r[10..13])
REG[9] =  s14[051101110431350F313501000000.....15.15....](8)
  23 SorterInsert     3    9    0               00 
REG[9] =  s14[051101110431350F313501000000.....15.15....](8)
  24 Next             1   16    0               00 
  25 OpenWrite        2    1    0 k(4,,,,)      11 root=1 iDb=0
  26 SorterSort       3   34    0               00 
  27 Goto             0   30    0               00 
  30 SorterData       3    9    2               00 r[9]=data
  31 Last             2    0   -1               00 
  32 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s14[051101110431350F313501000000.....15.15....](8)
  33 SorterNext       3   28    0               00 
  34 Close            1    0    0               00 
  35 Close            2    0    0               00 
  36 Close            3    0    0               00 
  37 SetCookie        0    1    4               00 
  38 ParseSchema      0    0    0 name='t0' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t0            00 r[2]='t0'
REG[2] =   t2[t0](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s2[t0](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s2[t0](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:6
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s63[CREATE UNIQUE I](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t0](8)
REG[6] =  i:6
REG[7] =   s63[CREATE UNIQUE I](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  39 Expire           0    0    0               00 
  40 Halt             0    0    0               00 
SQL: [;CREATE INDEX c0 ON t1(+a);]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      0    1    4 0             01 usesStmtJournal=0
  35 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  36 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  37 Goto             0    1    0               00 
   1 Noop             0   33    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:7
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:6
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 c0            00 r[4]='c0'
REG[4] =   t2[c0](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:7
   9 String8          0    7    0 CREATE INDEX c0 ON t1(+a) 00 r[7]='CREATE INDEX c0 ON t1(+a)'
REG[7] =   t25[CREATE INDEX c0](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s41[06171111013F696E6465786330743107.....?indexc0t1.](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s41[06171111013F696E6465786330743107.....?indexc0t1.](8)
REG[2] =  i:6
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    1 k(2,,)        00 
  14 OpenRead         1    2    0 3             00 root=2 iDb=0; t1
  15 Rewind           1   21    0               00 
  16 Column           1    2   10               00 r[10]=t1.a
REG[10] =  i:15
  17 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:16777216
  18 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s8[0301040F01000000........](8)
  19 SorterInsert     3    9    0               00 
REG[9] =  s8[0301040F01000000........](8)
  20 Next             1   16    0               00 
  21 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  22 SorterSort       3   27    0               00 
  23 SorterData       3    9    2               00 r[9]=data
  24 Last             2    0   -1               00 
  25 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s8[0301040F01000000........](8)
  26 SorterNext       3   23    0               00 
  27 Close            1    0    0               00 
  28 Close            2    0    0               00 
  29 Close            3    0    0               00 
  30 SetCookie        0    1    5               00 
  31 ParseSchema      0    0    0 name='c0' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    5 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 c0            00 r[2]='c0'
REG[2] =   t2[c0](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[c0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s2[c0](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s2[c0](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:7
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s25[CREATE INDEX c0](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[c0](8)
REG[6] =  i:7
REG[7] =   s25[CREATE INDEX c0](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  32 Expire           0    0    0               00 
  33 Halt             0    0    0               00 
SQL: [;CREATE INDEX c1 ON t1(+a);]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      0    1    5 0             01 usesStmtJournal=0
  35 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  36 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  37 Goto             0    1    0               00 
   1 Noop             0   33    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:8
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:7
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 c1            00 r[4]='c1'
REG[4] =   t2[c1](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:8
   9 String8          0    7    0 CREATE INDEX c1 ON t1(+a) 00 r[7]='CREATE INDEX c1 ON t1(+a)'
REG[7] =   t25[CREATE INDEX c1](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s41[06171111013F696E6465786331743108.....?indexc1t1.](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s41[06171111013F696E6465786331743108.....?indexc1t1.](8)
REG[2] =  i:7
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    1 k(2,,)        00 
  14 OpenRead         1    2    0 3             00 root=2 iDb=0; t1
  15 Rewind           1   21    0               00 
  16 Column           1    2   10               00 r[10]=t1.a
REG[10] =  i:15
  17 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:16777216
  18 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s8[0301040F01000000........](8)
  19 SorterInsert     3    9    0               00 
REG[9] =  s8[0301040F01000000........](8)
  20 Next             1   16    0               00 
  21 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  22 SorterSort       3   27    0               00 
  23 SorterData       3    9    2               00 r[9]=data
  24 Last             2    0   -1               00 
  25 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s8[0301040F01000000........](8)
  26 SorterNext       3   23    0               00 
  27 Close            1    0    0               00 
  28 Close            2    0    0               00 
  29 Close            3    0    0               00 
  30 SetCookie        0    1    6               00 
  31 ParseSchema      0    0    0 name='c1' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 c1            00 r[2]='c1'
REG[2] =   t2[c1](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[c1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[c1](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[c1](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[c1](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[c1](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[c0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[c1](8)
REG[1] =   s2[c0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[c1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[c1](8)
REG[1] =   s2[c1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s2[c1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:8
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s25[CREATE INDEX c1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[c1](8)
REG[6] =  i:8
REG[7] =   s25[CREATE INDEX c1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  32 Expire           0    0    0               00 
  33 Halt             0    0    0               00 
SQL: [;CREATE TABLE y(c,i1,z);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    6 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:9
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:8
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:8
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:8
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:8
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:8
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:8
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 y             00 r[7]='y'
REG[7] =   t1[y](8)
  21 String8          0    8    0 y             00 r[8]='y'
REG[8] =   t1[y](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:9
  23 String8          0   10    0 CREATE TABLE y(c,i1,z) 00 r[10]='CREATE TABLE y(c,i1,z)'
REG[10] =   t22[CREATE TABLE y(](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s36[06170F0F01397461626C657979094352.....9tableyy.CR](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s36[06170F0F01397461626C657979094352.....9tableyy.CR](8)
REG[5] =  i:8
  26 Close            1    0    0               00 
  27 SetCookie        0    1    7               00 
  28 ParseSchema      0    0    0 tbl_name='y' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    7 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 y             00 r[2]='y'
REG[2] =   t1[y](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s1[y](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[y](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:9
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s22[CREATE TABLE y(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[y](8)
REG[6] =  i:9
REG[7] =   s22[CREATE TABLE y(](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [SELECT coalesce(julianday('2001-01-01 12:59:60'),'NULL')
;]
VDBE Trace:
   0 Init             0    6    0               00 Start at 6
   6 String8          0    2    0 2001-01-01 12:59:60 00 r[2]='2001-01-01 12:59:60'
REG[2] =   t19[2001-01-01 12:5](8)
   7 Goto             0    1    0               00 
   1 Function0        1    2    1 julianday(-1) 01 r[1]=func(r[2])
REG[2] =   t19[2001-01-01 12:5](8)
REG[1] =  NULL
   2 NotNull          1    4    0               00 if r[1]!=NULL goto 4
REG[1] =  NULL
   3 String8          0    1    0 NULL          00 r[1]='NULL'
REG[1] =   t4[NULL](8)
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t4[NULL](8)
   5 Halt             0    0    0               00 
SQL: [;CREATE TABLE t1_idx_5cb97285 (
      i2      INTEGER     PRIMARY KEY AUTOINCREMENT,
      i3    INTEGER     NOT NULL,
      t3     INTEGER
    );]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    7 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:10
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:9
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:9
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:9
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:9
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:9
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:9
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t1_idx_5cb97285 00 r[7]='t1_idx_5cb97285'
REG[7] =   t15[t1_idx_5cb97285](8)
  21 String8          0    8    0 t1_idx_5cb97285 00 r[8]='t1_idx_5cb97285'
REG[8] =   t15[t1_idx_5cb97285](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:10
  23 String8          0   10    0 CREATE TABLE t1_idx_5cb97285 (
      i2      INTEGER     PRIMARY KEY AUTOINCREMENT,
      i3    INTEGER     NOT NULL,
      t3     INTEGER
    ) 00 r[10]='CREATE TABLE t1_idx_5cb97285 (
      i2      INTEGER     PRIMARY KEY AUTOINCREMENT,
      i3
REG[10] =   t144[CREATE TABLE t1](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s187[07172B2B01822D7461626C6574315F69..++..-tablet1_i](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s187[07172B2B01822D7461626C6574315F69..++..-tablet1_i](8)
REG[5] =  i:9
  26 Close            1    0    0               00 
  27 SetCookie        0    1    8               00 
  28 ParseSchema      0    0    0 tbl_name='t1_idx_5cb97285' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    8 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1_idx_5cb97285 00 r[2]='t1_idx_5cb97285'
REG[2] =   t15[t1_idx_5cb97285](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[t1_idx_5cb97285](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[t1_idx_5cb97285](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[t1_idx_5cb97285](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[t1_idx_5cb97285](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[t1_idx_5cb97285](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[t1_idx_5cb97285](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[t1_idx_5cb97285](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[t1_idx_5cb97285](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[t1_idx_5cb97285](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[t1_idx_5cb97285](8)
REG[1] =   s15[t1_idx_5cb97285](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s15[t1_idx_5cb97285](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:10
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s144[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s15[t1_idx_5cb97285](8)
REG[6] =  i:10
REG[7] =   s144[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;CREATE INDEX t16a ON t1(a);]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      0    1    8 0             01 usesStmtJournal=0
  35 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  36 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  37 Goto             0    1    0               00 
   1 Noop             0   33    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:11
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:10
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 t16a          00 r[4]='t16a'
REG[4] =   t4[t16a](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:11
   9 String8          0    7    0 CREATE INDEX t16a ON t1(a) 00 r[7]='CREATE INDEX t16a ON t1(a)'
REG[7] =   t26[CREATE INDEX t1](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s44[061715110141696E6465787431366174.....Aindext16at](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s44[061715110141696E6465787431366174.....Aindext16at](8)
REG[2] =  i:10
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    1 k(2,,)        00 
  14 OpenRead         1    2    0 3             00 root=2 iDb=0; t1
  15 Rewind           1   21    0               00 
  16 Column           1    2   10               00 r[10]=t1.a
REG[10] =  i:15
  17 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:16777216
  18 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s8[0301040F01000000........](8)
  19 SorterInsert     3    9    0               00 
REG[9] =  s8[0301040F01000000........](8)
  20 Next             1   16    0               00 
  21 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  22 SorterSort       3   27    0               00 
  23 SorterData       3    9    2               00 r[9]=data
  24 Last             2    0   -1               00 
  25 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s8[0301040F01000000........](8)
  26 SorterNext       3   23    0               00 
  27 Close            1    0    0               00 
  28 Close            2    0    0               00 
  29 Close            3    0    0               00 
  30 SetCookie        0    1    9               00 
  31 ParseSchema      0    0    0 name='t16a' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    9 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t16a          00 r[2]='t16a'
REG[2] =   t4[t16a](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t16a](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t16a](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t16a](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t16a](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t16a](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[c0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t16a](8)
REG[1] =   s2[c0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[c1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t16a](8)
REG[1] =   s2[c1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t16a](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[t1_idx_5cb97285](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t16a](8)
REG[1] =   s15[t1_idx_5cb97285](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t16a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t16a](8)
REG[1] =   s4[t16a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s4[t16a](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:11
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s26[CREATE INDEX t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s4[t16a](8)
REG[6] =  i:11
REG[7] =   s26[CREATE INDEX t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  32 Expire           0    0    0               00 
  33 Halt             0    0    0               00 
SQL: [;SELECT '4:', typeof(t1i1), t1i1 FROM b WHERE t1i1+0<10;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    9 0             01 usesStmtJournal=0
  16 TableLock        0    4    0 b             00 iDb=0 root=4 write=0
  17 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  18 Integer         10    4    0               00 r[4]=10
REG[4] =  i:10
  19 Goto             0    1    0               00 
   1 OpenRead         0    4    0 1             00 root=4 iDb=0; b
   2 Explain          0    0    0 SCAN TABLE b  00 
   3 Rewind           0   13    0               00 
  13 Close            0    0    0               00 
  14 Halt             0    0    0               00 
SQL: [;SELECT x FROM t1 WHERE substr(a,4)='ess' COLLATE nocase ORDER BY +x;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    0    9 0             01 usesStmtJournal=0
  22 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  23 Integer          4    3    0               00 r[3]=4
REG[3] =  i:4
  24 String8          0    4    0 ess           00 r[4]='ess'
REG[4] =   t3[ess](8)
  25 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0    2    0 3             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=t1.a
REG[2] =  i:15
   6 Function0        2    2    1 substr(2)     02 r[1]=func(r[2..3])
REG[2] =  i:15
REG[3] =  i:4
REG[1] =   s0[](8)
   7 Ne               4   12    1 (NOCASE)      51 if r[4]!=r[1] goto 12
REG[4] =   t3[ess](8)
REG[1] =   s0[](8)
  12 Next             0    5    0               01 
  13 Close            0    0    0               00 
  14 OpenPseudo       2    8    3               00 3 columns in r[8]
  15 SorterSort       1   20    0               00 
  20 Halt             0    0    0               00 
SQL: [;
;DROP TABLE IF EXISTS b;]
VDBE Trace:
   0 Init             0   41    0               00 Start at 41
  41 Transaction      0    1    9 0             01 usesStmtJournal=1
  42 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  43 String8          0    3    0 b             00 r[3]='b'
REG[3] =   t1[b](8)
  44 String8          0    5    0 trigger       00 r[5]='trigger'
REG[5] =   t7[trigger](8)
  45 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t1[b](8)
REG[2] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s15[sqlite_sequence](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t1[b](8)
REG[2] =   s15[sqlite_sequence](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[b](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t1[b](8)
REG[2] =   s1[b](8)
   7 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
   8 Eq               5   12    4 (BINARY)      52 if r[5]==r[4] goto 12
REG[5] =   t7[trigger](8)
REG[4] =   s5[table](8)
   9 Rowid            0    6    0               00 r[6]=rowid
REG[6] =  i:3
  10 Once             0   11    0               00 
  11 Delete           0    0    0 sqlite_master 02 
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t1[b](8)
REG[2] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t1[b](8)
REG[2] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t1[b](8)
REG[2] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t1[b](8)
REG[2] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[y](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t1[b](8)
REG[2] =   s1[y](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s15[t1_idx_5cb97285](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t1[b](8)
REG[2] =   s15[t1_idx_5cb97285](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t1[b](8)
REG[2] =   s2[t1](8)
  12 Next             0    5    0               01 
  13 Close            0    0    0               00 
  14 Destroy          4    4    0               00 
REG[4] =  i:0
  15 Null             0    7    8               00 r[7..8]=NULL
REG[7] =  NULL
  16 IfNot            4   25    1               00 
REG[4] =  i:0
  25 Close            1    0    0               00 
  26 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  27 RowSetRead       7   37    8               00 r[8]=rowset(7)
REG[7] =  NULL
REG[8] =  NULL
  37 Close            1    0    0               00 
  38 DropTable        0    0    0 b             00 
  39 SetCookie        0    1   10               00 
  40 Halt             0    0    0               00 
SQL: [;insert into y (z) values (2);]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    1   10 0             01 usesStmtJournal=0
   9 TableLock        0    9    1 y             00 iDb=0 root=9 write=1
  10 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  11 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  12 Goto             0    1    0               00 
   1 OpenWrite        0    9    0 3             00 root=9 iDb=0; y
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
   4 MakeRecord       2    3    5               00 r[5]=mkrec(r[2..4])
REG[5] =  s5[0400000102.....](8)
   5 Insert           0    5    1 y             1B intkey=r[1] data=r[5]
REG[5] =  s5[0400000102.....](8)
REG[1] =  i:1
   6 Noop             0    0    0               00 
   7 Halt             0    0    0               00 
SQL: [;
;DROP TABLE IF EXISTS y;]
VDBE Trace:
   0 Init             0   41    0               00 Start at 41
  41 Transaction      0    1   10 0             01 usesStmtJournal=1
  42 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  43 String8          0    3    0 y             00 r[3]='y'
REG[3] =   t1[y](8)
  44 String8          0    5    0 trigger       00 r[5]='trigger'
REG[5] =   t7[trigger](8)
  45 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t1[y](8)
REG[2] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s15[sqlite_sequence](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t1[y](8)
REG[2] =   s15[sqlite_sequence](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t1[y](8)
REG[2] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t1[y](8)
REG[2] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t1[y](8)
REG[2] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t1[y](8)
REG[2] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[y](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t1[y](8)
REG[2] =   s1[y](8)
   7 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
   8 Eq               5   12    4 (BINARY)      52 if r[5]==r[4] goto 12
REG[5] =   t7[trigger](8)
REG[4] =   s5[table](8)
   9 Rowid            0    6    0               00 r[6]=rowid
REG[6] =  i:8
  10 Once             0   11    0               00 
  11 Delete           0    0    0 sqlite_master 02 
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s15[t1_idx_5cb97285](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t1[y](8)
REG[2] =   s15[t1_idx_5cb97285](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t1[y](8)
REG[2] =   s2[t1](8)
  12 Next             0    5    0               01 
  13 Close            0    0    0               00 
  14 Destroy          9    4    0               00 
REG[4] =  i:0
  15 Null             0    7    8               00 r[7..8]=NULL
REG[7] =  NULL
  16 IfNot            4   25    1               00 
REG[4] =  i:0
  25 Close            1    0    0               00 
  26 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  27 RowSetRead       7   37    8               00 r[8]=rowset(7)
REG[7] =  NULL
REG[8] =  NULL
  37 Close            1    0    0               00 
  38 DropTable        0    0    0 y             00 
  39 SetCookie        0    1   11               00 
  40 Halt             0    0    0               00 
SQL: [SELECT i3, rowid, i3 FROM t1_idx_5cb97285 ORDER BY rowid DESC
  
;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0   11 0             01 usesStmtJournal=0
  13 TableLock        0   10    0 t1_idx_5cb97285 00 iDb=0 root=10 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0   10    0 2             00 root=10 iDb=0; t1_idx_5cb97285
   3 Explain          0    0    0 SCAN TABLE t1_idx_5cb97285 00 
   4 Last             0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [SELECT coalesce(strftime('%H:%M:%f',1237962480.073,'unixepoch'),'NULL')
;]
VDBE Trace:
   0 Init             0    6    0               00 Start at 6
   6 String8          0    2    0 %H:%M:%f      00 r[2]='%H:%M:%f'
REG[2] =   t8[%H:%M:%f](8)
   7 Real             0    3    0 1237962480.073 00 r[3]=1237962480.073
REG[3] =  r:1.23796e+09
   8 String8          0    4    0 unixepoch     00 r[4]='unixepoch'
REG[4] =   t9[unixepoch](8)
   9 Goto             0    1    0               00 
   1 Function0        7    2    1 strftime(-1)  03 r[1]=func(r[2..4])
REG[2] =   t8[%H:%M:%f](8)
REG[3] =  r:1.23796e+09
REG[4] =   t9[unixepoch](8)
REG[1] =   s12[06:28:00.073](8)
   2 NotNull          1    4    0               00 if r[1]!=NULL goto 4
REG[1] =   s12[06:28:00.073](8)
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s12[06:28:00.073](8)
   5 Halt             0    0    0               00 
SQL: [SELECT i3, rowid, i3 FROM t1_idx_5cb97285 ORDER BY +i3
  
;]
VDBE Trace:
   0 Init             0   22    0               00 Start at 22
  22 Transaction      0    0   11 0             01 usesStmtJournal=0
  23 TableLock        0   10    0 t1_idx_5cb97285 00 iDb=0 root=10 write=0
  24 Goto             0    1    0               00 
   1 SorterOpen       1    5    0 k(1,B)        00 
   2 OpenRead         0   10    0 2             00 root=10 iDb=0; t1_idx_5cb97285
   3 Explain          0    0    0 SCAN TABLE t1_idx_5cb97285 00 
   4 Rewind           0   12    0               00 
  12 Close            0    0    0               00 
  13 OpenPseudo       2    6    5               00 5 columns in r[6]
  14 SorterSort       1   21    0               00 
  21 Halt             0    0    0               00 
SQL: [DELETE FROM t1_idx_5cb97285;]
VDBE Trace:
   0 Init             0    3    0               00 Start at 3
   3 Transaction      0    1   11 0             01 usesStmtJournal=0
   4 TableLock        0   10    1 t1_idx_5cb97285 00 iDb=0 root=10 write=1
   5 Goto             0    1    0               00 
   1 Clear           10    0   -1 t1_idx_5cb97285 00 
   2 Halt             0    0    0               00 
SQL: [;ROLLBACK;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       1    1    0               00 
SQL: [SELECT coalesce(strftime('%H:%M:%f',1237962480.124,'unixepoch'),'NULL')
;]
VDBE Trace:
   0 Init             0    6    0               00 Start at 6
   6 String8          0    2    0 %H:%M:%f      00 r[2]='%H:%M:%f'
REG[2] =   t8[%H:%M:%f](8)
   7 Real             0    3    0 1237962480.124 00 r[3]=1237962480.124
REG[3] =  r:1.23796e+09
   8 String8          0    4    0 unixepoch     00 r[4]='unixepoch'
REG[4] =   t9[unixepoch](8)
   9 Goto             0    1    0               00 
   1 Function0        7    2    1 strftime(-1)  03 r[1]=func(r[2..4])
REG[2] =   t8[%H:%M:%f](8)
REG[3] =  r:1.23796e+09
REG[4] =   t9[unixepoch](8)
REG[1] =   s12[06:28:00.124](8)
   2 NotNull          1    4    0               00 if r[1]!=NULL goto 4
REG[1] =   s12[06:28:00.124](8)
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s12[06:28:00.124](8)
   5 Halt             0    0    0               00 
SQL: [;UPDATE t1_idx_5cb97285 SET i3='ostrich' WHERE abs(i3)=248;]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    1   11 0             01 usesStmtJournal=1
  25 TableLock        0   10    1 t1_idx_5cb97285 00 iDb=0 root=10 write=1
  26 Integer        248    8    0               00 r[8]=248
REG[8] =  i:248
  27 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0   10    0 2             00 root=10 iDb=0; t1_idx_5cb97285
   3 Explain          0    0    0 SCAN TABLE t1_idx_5cb97285 00 
   4 Rewind           0   11    0               00 
  11 Close            0    0    0               00 
  12 OpenWrite        0   10    0 3             00 root=10 iDb=0; t1_idx_5cb97285
  13 RowSetRead       1   22    2               00 r[2]=rowset(1)
REG[1] =  NULL
REG[2] =  NULL
  22 Noop             0    0    0               00 
  23 Halt             0    0    0               00 
SQL: [DELETE FROM t1_idx_5cb97285;]
VDBE Trace:
   0 Init             0    3    0               00 Start at 3
   3 Transaction      0    1   11 0             01 usesStmtJournal=0
   4 TableLock        0   10    1 t1_idx_5cb97285 00 iDb=0 root=10 write=1
   5 Goto             0    1    0               00 
   1 Clear           10    0   -1 t1_idx_5cb97285 00 
   2 Halt             0    0    0               00 
SQL: [SELECT coalesce(strftime('%H:%M:%f',1237962480.203,'unixepoch'),'NULL')
;]
VDBE Trace:
   0 Init             0    6    0               00 Start at 6
   6 String8          0    2    0 %H:%M:%f      00 r[2]='%H:%M:%f'
REG[2] =   t8[%H:%M:%f](8)
   7 Real             0    3    0 1237962480.203 00 r[3]=1237962480.203
REG[3] =  r:1.23796e+09
   8 String8          0    4    0 unixepoch     00 r[4]='unixepoch'
REG[4] =   t9[unixepoch](8)
   9 Goto             0    1    0               00 
   1 Function0        7    2    1 strftime(-1)  03 r[1]=func(r[2..4])
REG[2] =   t8[%H:%M:%f](8)
REG[3] =  r:1.23796e+09
REG[4] =   t9[unixepoch](8)
REG[1] =   s12[06:28:00.203](8)
   2 NotNull          1    4    0               00 if r[1]!=NULL goto 4
REG[1] =   s12[06:28:00.203](8)
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s12[06:28:00.203](8)
   5 Halt             0    0    0               00 
SQL: [;UPDATE OR REPLACE t1 SET t2=(SELECT t2 FROM t1 WHERE t2=t1.t2);]
VDBE Trace:
   0 Init             0  135    0               00 Start at 135
 135 Transaction      0    1   11 0             01 usesStmtJournal=0
 136 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
 137 Integer          1   23    0               00 r[23]=1
REG[23] =  i:1
 138 Integer          3   24    0               00 r[24]=3
REG[24] =  i:3
 139 Integer          3   27    0               00 r[27]=3
REG[27] =  i:3
 140 Integer          1   33    0               00 r[33]=1
REG[33] =  i:1
 141 Integer          3   34    0               00 r[34]=3
REG[34] =  i:3
 142 Integer          1   42    0               00 r[42]=1
REG[42] =  i:1
 143 Integer          3   43    0               00 r[43]=3
REG[43] =  i:3
 144 Integer          3   46    0               00 r[46]=3
REG[46] =  i:3
 145 Integer          3   49    0               00 r[49]=3
REG[49] =  i:3
 146 Integer          1   55    0               00 r[55]=1
REG[55] =  i:1
 147 Integer          3   56    0               00 r[56]=3
REG[56] =  i:3
 148 Integer          3   59    0               00 r[59]=3
REG[59] =  i:3
 149 Goto             0    1    0               00 
   1 Null             0    6    7               00 r[6..7]=NULL
REG[6] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    7    0               00 r[7]=rowid
REG[7] =  i:16777216
   6 RowSetAdd        6    7    0               00 rowset(6)=r[7]
REG[6] =  NULL
REG[7] =  i:16777216
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 OpenWrite        0    2    0 3             00 root=2 iDb=0; t1
  10 OpenWrite        1   11    0 k(2,,)        00 root=11 iDb=0; t16a
  11 OpenWrite        2    8    0 k(2,,)        00 root=8 iDb=0; c1
  12 OpenWrite        3    7    0 k(2,,)        00 root=7 iDb=0; c0
  13 OpenWrite        4    6    0 k(4,,,,)      00 root=6 iDb=0; t0
  14 OpenWrite        5    5    0 k(2,,)        00 root=5 iDb=0; tr2
  15 RowSetRead       6  128    7               00 r[7]=rowset(6)
REG[6] =  (rowset)
REG[7] =  i:16777216
  16 NotExists        0   15    7               00 intkey=r[7]
REG[7] =  i:16777216
  17 Once             0   29    0               00 
  18 Null             0   12    0               00 r[12]=NULL; Init subquery result
REG[12] =  NULL
  19 Integer          1   13    0               00 r[13]=1; LIMIT counter
REG[13] =  i:1
  20 OpenRead         7   11    0 k(2,,)        00 root=11 iDb=0; t16a
  21 Explain          0    0    0 SCAN TABLE t1 USING COVERING INDEX t16a 00 
  22 Rewind           7   28   14 0             00 
  23 IdxRowid         7   14    0               00 r[14]=rowid
REG[14] =  i:16777216
  24 Ne              14   27   14               53 if r[14]!=r[14] goto 27
REG[14] =  i:16777216
REG[14] =  i:16777216
  25 Copy            14   12    0               00 r[12]=r[14]
REG[12] =  i:16777216
  26 DecrJumpZero    13   28    0               00 if (--r[13])==0 goto 28
REG[13] =  i:1
  28 Close            7    0    0               00 
  29 SCopy           12    8    0               00 r[8]=r[12]
REG[8] =  i:16777216
  30 MustBeInt        8    0    0               00 
REG[8] =  i:16777216
  31 Column           0    0    9               00 r[9]=t1.x
REG[9] =  NULL
  32 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  33 Column           0    2   11               00 r[11]=t1.a
REG[11] =  i:15
  34 Eq               8   55    7               90 if r[8]==r[7] goto 55
REG[8] =  i:16777216
REG[7] =  i:16777216
  55 Affinity         9    2    0 AD            00 affinity(r[9..10])
  56 SCopy           11   20    0               00 r[20]=r[11]; a
REG[20] =  i:15
  57 IntCopy          8   21    0               00 r[21]=r[8]; rowid
REG[21] =  i:16777216
  58 MakeRecord      20    2    1               00 r[1]=mkrec(r[20..21]); for t16a
REG[1] =  s8[0301040F01000000........](8)
  59 SCopy           11   20    0               00 r[20]=r[11]; c1 column 0
REG[20] =  i:15
  60 MakeRecord      20    2    2               00 r[2]=mkrec(r[20..21]); for c1
REG[2] =  s8[0301040F01000000........](8)
  61 SCopy           11   20    0               00 r[20]=r[11]; c0 column 0
REG[20] =  i:15
  62 MakeRecord      20    2    3               00 r[3]=mkrec(r[20..21]); for c0
REG[3] =  s8[0301040F01000000........](8)
  63 SCopy           11   28    0               00 r[28]=r[11]
REG[28] =  i:15
  64 Cast            28   66    0               00 affinity(r[28]); t0 column 0
REG[28] =  i:15
  65 SCopy           11   29    0               00 r[29]=r[11]; a
REG[29] =  i:15
  66 Copy            11   32    0               00 r[32]=r[11]
REG[32] =  i:15
  67 Function0        6   32   30 substr(3)     03 r[30]=func(r[32..34]); t0 column 2
REG[32] =  i:15
REG[33] =  i:1
REG[34] =  i:3
REG[30] =   s2[15](8)
  68 IntCopy          8   31    0               00 r[31]=r[8]; rowid
REG[31] =  i:16777216
  69 MakeRecord      28    4    4               00 r[4]=mkrec(r[28..31]); for t0
REG[4] =  s14[051101110431350F313501000000.....15.15....](8)
  70 NoConflict       4   94   28 3             00 key=r[28..30]
REG[28] =   s2[15](8)
REG[29] =  i:15
REG[30] =   s2[15](8)
  71 IdxRowid         4   20    0               00 r[20]=rowid
REG[20] =  i:16777216
  72 Eq              20   94    7               90 if r[20]==r[7] goto 94
REG[20] =  i:16777216
REG[7] =  i:16777216
  94 Copy             9   47    0               00 r[47]=r[9]
REG[47] =  NULL
  95 Copy             9   48    0               00 r[48]=r[9]
REG[48] =  NULL
  96 Function0        4   47   28 substr(3)     03 r[28]=func(r[47..49]); tr2 column 0
REG[47] =  NULL
REG[48] =  NULL
REG[49] =  i:3
REG[28] =  NULL
  97 IntCopy          8   29    0               00 r[29]=r[8]; rowid
REG[29] =  i:16777216
  98 MakeRecord      28    2    5               00 r[5]=mkrec(r[28..29]); for tr2
REG[5] =  s7[03000401000000.......](8)
  99 NotExists        0  120    7               00 intkey=r[7]
REG[7] =  i:16777216
 100 Column           0    2   30               00 r[30]=t1.a
REG[30] =  i:15
 101 Rowid            0   31    0               00 r[31]=rowid
REG[31] =  i:16777216
 102 IdxDelete        1   30    2               00 key=r[30..31]
 103 SCopy           11   30    0               00 r[30]=r[11]
REG[30] =  i:15
 104 IdxDelete        2   30    2               00 key=r[30..31]
 105 SCopy           11   30    0               00 r[30]=r[11]
REG[30] =  i:15
 106 IdxDelete        3   30    2               00 key=r[30..31]
 107 SCopy           11   50    0               00 r[50]=r[11]
REG[50] =  i:15
 108 Cast            50   66    0               00 affinity(r[50])
REG[50] =  i:15
 109 Column           0    2   51               00 r[51]=t1.a
REG[51] =  i:15
 110 Copy            11   54    0               00 r[54]=r[11]
REG[54] =  i:15
 111 Function0        6   54   52 substr(3)     03 r[52]=func(r[54..56])
REG[54] =  i:15
REG[55] =  i:1
REG[56] =  i:3
REG[52] =   s2[15](8)
 112 Rowid            0   53    0               00 r[53]=rowid
REG[53] =  i:16777216
 113 IdxDelete        4   50    4               00 key=r[50..53]
 114 Copy             9   57    0               00 r[57]=r[9]
REG[57] =  NULL
 115 Copy             9   58    0               00 r[58]=r[9]
REG[58] =  NULL
 116 Function0        4   57   50 substr(3)     03 r[50]=func(r[57..59])
REG[57] =  NULL
REG[58] =  NULL
REG[59] =  i:3
REG[50] =  NULL
 117 Rowid            0   51    0               00 r[51]=rowid
REG[51] =  i:16777216
 118 IdxDelete        5   50    2               00 key=r[50..51]
 119 Delete           0    0    0               00 
 120 IdxInsert        1    1    0               00 key=r[1]
REG[1] =  s8[0301040F01000000........](8)
 121 IdxInsert        2    2    0               00 key=r[2]
REG[2] =  s8[0301040F01000000........](8)
 122 IdxInsert        3    3    0               00 key=r[3]
REG[3] =  s8[0301040F01000000........](8)
 123 IdxInsert        4    4    0               00 key=r[4]
REG[4] =  s14[051101110431350F313501000000.....15.15....](8)
 124 IdxInsert        5    5    0               00 key=r[5]
REG[5] =  s7[03000401000000.......](8)
 125 MakeRecord       9    3   15               00 r[15]=mkrec(r[9..11])
REG[15] =  s5[040000010F.....](8)
 126 Insert           0   15    8 t1            05 intkey=r[8] data=r[15]
REG[15] =  s5[040000010F.....](8)
REG[8] =  i:16777216
 127 Goto             0   15    0               00 
  15 RowSetRead       6  128    7               00 r[7]=rowset(6)
REG[6] =  (rowset)
REG[7] =  i:16777216
 128 Close            1    0    0               00 
 129 Close            2    0    0               00 
 130 Close            3    0    0               00 
 131 Close            4    0    0               00 
 132 Close            5    0    0               00 
 133 Noop             0    0    0               00 
 134 Halt             0    0    0               00 
SQL: [SELECT coalesce(strftime('%H:%M:%f',1237962480.206,'unixepoch'),'NULL')
;]
VDBE Trace:
   0 Init             0    6    0               00 Start at 6
   6 String8          0    2    0 %H:%M:%f      00 r[2]='%H:%M:%f'
REG[2] =   t8[%H:%M:%f](8)
   7 Real             0    3    0 1237962480.206 00 r[3]=1237962480.206
REG[3] =  r:1.23796e+09
   8 String8          0    4    0 unixepoch     00 r[4]='unixepoch'
REG[4] =   t9[unixepoch](8)
   9 Goto             0    1    0               00 
   1 Function0        7    2    1 strftime(-1)  03 r[1]=func(r[2..4])
REG[2] =   t8[%H:%M:%f](8)
REG[3] =  r:1.23796e+09
REG[4] =   t9[unixepoch](8)
REG[1] =   s12[06:28:00.206](8)
   2 NotNull          1    4    0               00 if r[1]!=NULL goto 4
REG[1] =   s12[06:28:00.206](8)
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s12[06:28:00.206](8)
   5 Halt             0    0    0               00 
SQL: [;UPDATE OR REPLACE t1_idx_5cb97285 SET i3=(SELECT i3 FROM t1_idx_5cb97285 WHERE i3=t1_idx_5cb97285.i3);]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    1   11 0             01 usesStmtJournal=1
  34 TableLock        0   10    1 t1_idx_5cb97285 00 iDb=0 root=10 write=1
  35 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0   10    0 0             00 root=10 iDb=0; t1_idx_5cb97285
   3 Explain          0    0    0 SCAN TABLE t1_idx_5cb97285 00 
   4 Rewind           0    8    0               00 
   8 Close            0    0    0               00 
   9 OpenWrite        0   10    0 3             00 root=10 iDb=0; t1_idx_5cb97285
  10 RowSetRead       1   31    2               00 r[2]=rowset(1)
REG[1] =  NULL
REG[2] =  NULL
  31 Noop             0    0    0               00 
  32 Halt             0    0    0               00 
SQL: [;UPDATE t1 SET a='abc', a='abc';]
VDBE Trace:
   0 Init             0   78    0               00 Start at 78
  78 Transaction      0    1   11 0             01 usesStmtJournal=1
  79 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  80 Integer          1   18    0               00 r[18]=1
REG[18] =  i:1
  81 Integer          3   19    0               00 r[19]=3
REG[19] =  i:3
  82 Integer          3   22    0               00 r[22]=3
REG[22] =  i:3
  83 Integer          1   28    0               00 r[28]=1
REG[28] =  i:1
  84 Integer          3   29    0               00 r[29]=3
REG[29] =  i:3
  85 Integer          3   32    0               00 r[32]=3
REG[32] =  i:3
  86 Goto             0    1    0               00 
   1 Null             0    6    7               00 r[6..7]=NULL
REG[6] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    7    0               00 r[7]=rowid
REG[7] =  i:16777216
   6 RowSetAdd        6    7    0               00 rowset(6)=r[7]
REG[6] =  NULL
REG[7] =  i:16777216
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 OpenWrite        0    2    0 3             00 root=2 iDb=0; t1
  10 OpenWrite        1   11    0 k(2,,)        00 root=11 iDb=0; t16a
  11 OpenWrite        2    8    0 k(2,,)        00 root=8 iDb=0; c1
  12 OpenWrite        3    7    0 k(2,,)        00 root=7 iDb=0; c0
  13 OpenWrite        4    6    0 k(4,,,,)      00 root=6 iDb=0; t0
  14 OpenWrite        5    5    0 k(2,,)        00 root=5 iDb=0; tr2
  15 RowSetRead       6   71    7               00 r[7]=rowset(6)
REG[6] =  (rowset)
REG[7] =  i:16777216
  16 NotExists        0   15    7               00 intkey=r[7]
REG[7] =  i:16777216
  17 Column           0    0    8               00 r[8]=t1.x
REG[8] =  NULL
  18 Null             0    9    0               00 r[9]=NULL
REG[9] =  NULL
  19 String8          0   10    0 abc           00 r[10]='abc'
REG[10] =   t3[abc](8)
  20 Affinity         8    2    0 AD            00 affinity(r[8..9])
  21 SCopy           10   11    0               00 r[11]=r[10]; a
REG[11] =   t3[abc](8)
  22 IntCopy          7   12    0               00 r[12]=r[7]; rowid
REG[12] =  i:16777216
  23 MakeRecord      11    2    1               00 r[1]=mkrec(r[11..12]); for t16a
REG[1] =  s10[03130461626301000000...abc....](8)
  24 SCopy           10   11    0               00 r[11]=r[10]; c1 column 0
REG[11] =   t3[abc](8)
  25 MakeRecord      11    2    2               00 r[2]=mkrec(r[11..12]); for c1
REG[2] =  s10[03130461626301000000...abc....](8)
  26 SCopy           10   11    0               00 r[11]=r[10]; c0 column 0
REG[11] =   t3[abc](8)
  27 MakeRecord      11    2    3               00 r[3]=mkrec(r[11..12]); for c0
REG[3] =  s10[03130461626301000000...abc....](8)
  28 SCopy           10   13    0               00 r[13]=r[10]
REG[13] =   t3[abc](8)
  29 Cast            13   66    0               00 affinity(r[13]); t0 column 0
REG[13] =   t3[abc](8)
  30 SCopy           10   14    0               00 r[14]=r[10]; a
REG[14] =   t3[abc](8)
  31 Copy            10   17    0               00 r[17]=r[10]
REG[17] =   t3[abc](8)
  32 Function0        6   17   15 substr(3)     03 r[15]=func(r[17..19]); t0 column 2
REG[17] =   t3[abc](8)
REG[18] =  i:1
REG[19] =  i:3
REG[15] =   s3[abc](8)
  33 IntCopy          7   16    0               00 r[16]=r[7]; rowid
REG[16] =  i:16777216
  34 MakeRecord      13    4    4               00 r[4]=mkrec(r[13..16]); for t0
REG[4] =  s18[05131313046162636162636162630100.....abcabcabc..](8)
  35 NoConflict       4   39   13 3             00 key=r[13..15]
REG[13] =   t3[abc](8)
REG[14] =   t3[abc](8)
REG[15] =   s3[abc](8)
  39 Copy             8   20    0               00 r[20]=r[8]
REG[20] =  NULL
  40 Copy             8   21    0               00 r[21]=r[8]
REG[21] =  NULL
  41 Function0        4   20   13 substr(3)     03 r[13]=func(r[20..22]); tr2 column 0
REG[20] =  NULL
REG[21] =  NULL
REG[22] =  i:3
REG[13] =  NULL
  42 IntCopy          7   14    0               00 r[14]=r[7]; rowid
REG[14] =  i:16777216
  43 MakeRecord      13    2    5               00 r[5]=mkrec(r[13..14]); for tr2
REG[5] =  s7[03000401000000.......](8)
  44 Column           0    2   15               00 r[15]=t1.a
REG[15] =  i:15
  45 Rowid            0   16    0               00 r[16]=rowid
REG[16] =  i:16777216
  46 IdxDelete        1   15    2               00 key=r[15..16]
  47 Column           0    2   15               00 r[15]=t1.a
REG[15] =  i:15
  48 IdxDelete        2   15    2               00 key=r[15..16]
  49 Column           0    2   15               00 r[15]=t1.a
REG[15] =  i:15
  50 IdxDelete        3   15    2               00 key=r[15..16]
  51 Column           0    2   23               00 r[23]=t1.a
REG[23] =  i:15
  52 Cast            23   66    0               00 affinity(r[23])
REG[23] =  i:15
  53 Column           0    2   24               00 r[24]=t1.a
REG[24] =  i:15
  54 Column           0    2   27               00 r[27]=t1.a
REG[27] =  i:15
  55 Function0        6   27   25 substr(3)     03 r[25]=func(r[27..29])
REG[27] =  i:15
REG[28] =  i:1
REG[29] =  i:3
REG[25] =   s2[15](8)
  56 Rowid            0   26    0               00 r[26]=rowid
REG[26] =  i:16777216
  57 IdxDelete        4   23    4               00 key=r[23..26]
  58 Copy             8   30    0               00 r[30]=r[8]
REG[30] =  NULL
  59 Copy             8   31    0               00 r[31]=r[8]
REG[31] =  NULL
  60 Function0        4   30   23 substr(3)     03 r[23]=func(r[30..32])
REG[30] =  NULL
REG[31] =  NULL
REG[32] =  i:3
REG[23] =  NULL
  61 Rowid            0   24    0               00 r[24]=rowid
REG[24] =  i:16777216
  62 IdxDelete        5   23    2               00 key=r[23..24]
  63 IdxInsert        1    1    0               00 key=r[1]
REG[1] =  s10[03130461626301000000...abc....](8)
  64 IdxInsert        2    2    0               00 key=r[2]
REG[2] =  s10[03130461626301000000...abc....](8)
  65 IdxInsert        3    3    0               00 key=r[3]
REG[3] =  s10[03130461626301000000...abc....](8)
  66 IdxInsert        4    4    0               00 key=r[4]
REG[4] =  s18[05131313046162636162636162630100.....abcabcabc..](8)
  67 IdxInsert        5    5    0               00 key=r[5]
REG[5] =  s7[03000401000000.......](8)
  68 MakeRecord       8    3   33               00 r[33]=mkrec(r[8..10])
REG[33] =  s7[04000013616263....abc](8)
  69 Insert           0   33    7 t1            05 intkey=r[7] data=r[33]
REG[33] =  s7[04000013616263....abc](8)
REG[7] =  i:16777216
  70 Goto             0   15    0               00 
  15 RowSetRead       6   71    7               00 r[7]=rowset(6)
REG[6] =  (rowset)
REG[7] =  i:16777216
  71 Close            1    0    0               00 
  72 Close            2    0    0               00 
  73 Close            3    0    0               00 
  74 Close            4    0    0               00 
  75 Close            5    0    0               00 
  76 Noop             0    0    0               00 
  77 Halt             0    0    0               00 
SQL: [SELECT coalesce(strftime('%H:%M:%f',1237962480.232,'unixepoch'),'NULL')
;]
VDBE Trace:
   0 Init             0    6    0               00 Start at 6
   6 String8          0    2    0 %H:%M:%f      00 r[2]='%H:%M:%f'
REG[2] =   t8[%H:%M:%f](8)
   7 Real             0    3    0 1237962480.232 00 r[3]=1237962480.232
REG[3] =  r:1.23796e+09
   8 String8          0    4    0 unixepoch     00 r[4]='unixepoch'
REG[4] =   t9[unixepoch](8)
   9 Goto             0    1    0               00 
   1 Function0        7    2    1 strftime(-1)  03 r[1]=func(r[2..4])
REG[2] =   t8[%H:%M:%f](8)
REG[3] =  r:1.23796e+09
REG[4] =   t9[unixepoch](8)
REG[1] =   s12[06:28:00.232](8)
   2 NotNull          1    4    0               00 if r[1]!=NULL goto 4
REG[1] =   s12[06:28:00.232](8)
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s12[06:28:00.232](8)
   5 Halt             0    0    0               00 
SQL: [;SELECT
     (SELECT sum(t2==xyz) FROM t1)
    FROM
     (SELECT t2 as xyz, max(t2) AS pqr
        FROM t1
       GROUP BY t2);]
VDBE Trace:
   0 Init             0   60    0               00 Start at 60
  60 Transaction      0    0   11 0             01 usesStmtJournal=0
  61 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  62 Goto             0    1    0               00 
   1 InitCoroutine    1   38    2               00 sqlite_sq_14092B0
  38 Explain          0    0    0 SCAN SUBQUERY 1 00 
  39 InitCoroutine    1    0    2               00 
  40 Yield            1   59    0               00 next row of "sqlite_sq_14092B0"
REG[1] =  i:1
REG[1] =  i:40
   2 Noop             3    1    0               00 
   3 Integer          0    5    0               00 r[5]=0; clear abort flag
REG[5] =  i:0
   4 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
   5 Null             0    8    8               00 r[8..8]=NULL
REG[8] =  NULL
   6 Gosub            7   35    0               00 
REG[7] =  i:6
  35 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  36 Return           7    0    0               00 
REG[7] =  i:6
   7 OpenRead         1    2    0 0             00 root=2 iDb=0; t1
   8 Explain          1    0    0 SCAN TABLE t1 00 
   9 Rewind           1   24    0               00 
  10 Rowid            1    9    0               00 r[9]=rowid
REG[9] =  i:16777216
  11 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  NULL
REG[9] =  i:16777216
  12 Jump            13   17   13               00 
  13 Move             9    8    1               00 r[8]=r[9]
REG[8] =  i:16777216
  14 Gosub            6   29    0               00 output one row
REG[6] =  i:14
  29 IfPos            4   31    0               00 if r[4]>0 then r[4]-=0, goto 31; Groupby result generator entry point
REG[4] =  i:0
  30 Return           6    0    0               00 
REG[6] =  i:14
  15 IfPos            5   37    0               00 if r[5]>0 then r[5]-=0, goto 37; check abort flag
REG[5] =  i:0
  16 Gosub            7   35    0               00 reset accumulator
REG[7] =  i:16
  35 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  36 Return           7    0    0               00 
REG[7] =  i:16
  17 Rowid            1   10    0               00 r[10]=rowid
REG[10] =  i:16777216
  18 CollSeq         11    0    0 (BINARY)      00 
  19 AggStep0         0   10    3 max(1)        01 accum=r[3] step(r[10])
REG[10] =  i:16777216
  20 If              11   22    0               00 
REG[11] =  i:0
  21 Rowid            1    2    0               00 r[2]=rowid
REG[2] =  i:16777216
  22 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  23 Next             1   10    0               01 
  24 Close            1    0    0               00 
  25 Gosub            6   29    0               00 output final row
REG[6] =  i:25
  29 IfPos            4   31    0               00 if r[4]>0 then r[4]-=0, goto 31; Groupby result generator entry point
REG[4] =  i:1
  31 AggFinal         3    1    0 max(1)        00 accum=r[3] N=1
  32 Copy             2   12    1               00 r[12..13]=r[2..3]
REG[12] =  i:16777216
REG[13] =  i:16777216
  33 Yield            1    0    0               00 
REG[1] =  i:40
REG[1] =  i:33
  41 Null             0   15    0               00 r[15]=NULL; Init subquery result
REG[15] =  NULL
  42 Integer          1   16    0               00 r[16]=1; LIMIT counter
REG[16] =  i:1
  43 Null             0   17   18               00 r[17..18]=NULL
REG[17] =  NULL
  44 OpenRead         4   11    0 k(2,,)        00 root=11 iDb=0; t16a
  45 Explain          2    0    0 SCAN TABLE t1 USING COVERING INDEX t16a 00 
  46 Rewind           4   52   19 0             00 
  47 IdxRowid         4   20    0               00 r[20]=rowid
REG[20] =  i:16777216
  48 Copy            12   21    0               00 r[21]=r[12]; sqlite_sq_14092B0.xyz
REG[21] =  i:16777216
  49 Eq              21   19   20 (BINARY)      63 if r[21]==r[20] goto 19
REG[21] =  i:16777216
REG[20] =  i:16777216
REG[19] =  i:1
  50 AggStep0         0   19   17 sum(1)        01 accum=r[17] step(r[19])
REG[19] =  i:1
  51 Next             4   47    0               01 
  52 Close            4    0    0               00 
  53 AggFinal        17    1    0 sum(1)        00 accum=r[17] N=1
  54 Copy            17   15    0               00 r[15]=r[17]
REG[15] =  i:1
  55 DecrJumpZero    16   56    0               00 if (--r[16])==0 goto 56
REG[16] =  i:1
  56 Copy            15   14    0               00 r[14]=r[15]
REG[14] =  i:1
  57 ResultRow       14    1    0               00 output=r[14]
REG[14] =  i:1
  58 Goto             0   40    0               00 
  40 Yield            1   59    0               00 next row of "sqlite_sq_14092B0"
REG[1] =  i:33
REG[1] =  i:40
  34 Return           6    0    0               00 end groupby result generator
REG[6] =  i:25
  26 Goto             0   37    0               00 
  37 EndCoroutine     1    0    0               00 
REG[1] =  i:40
  59 Halt             0    0    0               00 
SQL: [;CREATE TABLE id(t17, t17x);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1   11 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:9
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:11
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:11
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:11
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:11
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:11
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:11
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 id            00 r[7]='id'
REG[7] =   t2[id](8)
  21 String8          0    8    0 id            00 r[8]='id'
REG[8] =   t2[id](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:9
  23 String8          0   10    0 CREATE TABLE id(t17, t17x) 00 r[10]='CREATE TABLE id(t17, t17x)'
REG[10] =   t26[CREATE TABLE id](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s42[0617111101417461626C656964696409.....Atableidid.](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s42[0617111101417461626C656964696409.....Atableidid.](8)
REG[5] =  i:11
  26 Close            1    0    0               00 
  27 SetCookie        0    1   12               00 
  28 ParseSchema      0    0    0 tbl_name='id' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0   12 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 id            00 r[2]='id'
REG[2] =   t2[id](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[id](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[id](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[id](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[id](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[id](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[id](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[t1_idx_5cb97285](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[id](8)
REG[1] =   s15[t1_idx_5cb97285](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[id](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[id](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[id](8)
REG[1] =   s2[id](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[id](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:9
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s26[CREATE TABLE id](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[id](8)
REG[6] =  i:9
REG[7] =   s26[CREATE TABLE id](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [SELECT coalesce(strftime('%H:%M:%f',1237962480.305,'unixepoch'),'NULL')
;]
VDBE Trace:
   0 Init             0    6    0               00 Start at 6
   6 String8          0    2    0 %H:%M:%f      00 r[2]='%H:%M:%f'
REG[2] =   t8[%H:%M:%f](8)
   7 Real             0    3    0 1237962480.305 00 r[3]=1237962480.305
REG[3] =  r:1.23796e+09
   8 String8          0    4    0 unixepoch     00 r[4]='unixepoch'
REG[4] =   t9[unixepoch](8)
   9 Goto             0    1    0               00 
   1 Function0        7    2    1 strftime(-1)  03 r[1]=func(r[2..4])
REG[2] =   t8[%H:%M:%f](8)
REG[3] =  r:1.23796e+09
REG[4] =   t9[unixepoch](8)
REG[1] =   s12[06:28:00.305](8)
   2 NotNull          1    4    0               00 if r[1]!=NULL goto 4
REG[1] =   s12[06:28:00.305](8)
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s12[06:28:00.305](8)
   5 Halt             0    0    0               00 
SQL: [SELECT coalesce(strftime('%H:%M:%f',1237962480.876,'unixepoch'),'NULL')
;]
VDBE Trace:
   0 Init             0    6    0               00 Start at 6
   6 String8          0    2    0 %H:%M:%f      00 r[2]='%H:%M:%f'
REG[2] =   t8[%H:%M:%f](8)
   7 Real             0    3    0 1237962480.876 00 r[3]=1237962480.876
REG[3] =  r:1.23796e+09
   8 String8          0    4    0 unixepoch     00 r[4]='unixepoch'
REG[4] =   t9[unixepoch](8)
   9 Goto             0    1    0               00 
   1 Function0        7    2    1 strftime(-1)  03 r[1]=func(r[2..4])
REG[2] =   t8[%H:%M:%f](8)
REG[3] =  r:1.23796e+09
REG[4] =   t9[unixepoch](8)
REG[1] =   s12[06:28:00.876](8)
   2 NotNull          1    4    0               00 if r[1]!=NULL goto 4
REG[1] =   s12[06:28:00.876](8)
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s12[06:28:00.876](8)
   5 Halt             0    0    0               00 
SQL: [DELETE FROM t1_idx_5cb97285;]
VDBE Trace:
   0 Init             0    3    0               00 Start at 3
   3 Transaction      0    1   12 0             01 usesStmtJournal=0
   4 TableLock        0   10    1 t1_idx_5cb97285 00 iDb=0 root=10 write=1
   5 Goto             0    1    0               00 
   1 Clear           10    0   -1 t1_idx_5cb97285 00 
   2 Halt             0    0    0               00 
SQL: [;SELECT (SELECT sum(t2+(SELECT i2)) FROM t1_idx_5cb97285) FROM t1;]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    0   12 0             01 usesStmtJournal=0
  28 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  29 TableLock        0   10    0 t1_idx_5cb97285 00 iDb=0 root=10 write=0
  30 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         2   11    0 k(2,,)        00 root=11 iDb=0; t16a
   3 Explain          0    0    0 SCAN TABLE t1 USING COVERING INDEX t16a 00 
   4 Rewind           2   13    3 0             00 
   5 IdxRowid         2    4    0               00 r[4]=rowid
REG[4] =  i:16777216
   6 Null             0    6    0               00 r[6]=NULL; Init subquery result
REG[6] =  NULL
   7 Integer          1    7    0               00 r[7]=1; LIMIT counter
REG[7] =  i:1
   8 Rowid            1    6    0               00 r[6]=rowid

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f5abbc62859 in __GI_abort () at abort.c:79
#2  0x00007f5abbc62729 in __assert_fail_base (fmt=0x7f5abbdf8588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21b760 "pC!=0", file=0x222c23 "sqlite3.c", line=81350, function=<optimized out>) at assert.c:92
#3  0x00007f5abbc73fd6 in __GI___assert_fail (assertion=0x21b760 "pC!=0", file=0x222c23 "sqlite3.c", line=81350, function=0x213a19 "int sqlite3VdbeExec(Vdbe *)") at assert.c:101
#4  0x00000000003e5cd3 in sqlite3VdbeExec (p=<optimized out>) at sqlite3.c:81350
#5  0x000000000028b140 in sqlite3_step (pStmt=<optimized out>) at sqlite3.c:75131
#6  0x000000000024b5e9 in main (argc=1, argv=0x7ffc63af9ef8) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 43904] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
