GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000154,sig:06,src:022431+020630,time:4165621,execs:462786,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;SELECT * FROM t1;]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    1 0             01 usesStmtJournal=0
  20 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  21 Goto             0    1    0               00 
   1 OpenRead         0    2    0 8             00 root=2 iDb=0; t1
   2 Explain          0    0    0 SCAN TABLE t1 00 
   3 Rewind           0   17    0               00 
  17 Close            0    0    0               00 
  18 Halt             0    0    0               00 
SQL: [;
;SELECT a = ('2.0625') FROM t1;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    1 0             01 usesStmtJournal=0
  11 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  12 String8          0    3    0 2.0625        00 r[3]='2.0625'
REG[3] =   t6[2.0625](8)
  13 Goto             0    1    0               00 
   1 OpenRead         0    2    0 3             00 root=2 iDb=0; t1
   2 Explain          0    0    0 SCAN TABLE t1 00 
   3 Rewind           0    8    0               00 
   8 Close            0    0    0               00 
   9 Halt             0    0    0               00 
SQL: [INSERT INTO t1(a) VALUES(zeroblob(10000));]
VDBE Trace:
   0 Init             0   35    0               00 Start at 35
  35 Transaction      0    1    1 0             01 usesStmtJournal=0
  36 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  37 TableLock        0    3    1 sqlite_sequence 00 iDb=0 root=3 write=1
  38 OpenRead         0    3    0 2             00 root=3 iDb=0; sqlite_sequence
  39 String8          0    1    0 t1            00 r[1]='t1'
REG[1] =   t2[t1](8)
  40 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  41 Rewind           0   49    0               00 
  49 Close            0    0    0               00 
  50 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  51 Integer       10000   13    0               00 r[13]=10000
REG[13] =  i:10000
  52 Real             0    8    0 0             00 r[8]=0
REG[8] =  r:0
  53 Real             0    9    0 0             00 r[9]=0
REG[9] =  r:0
  54 Real             0   10    0 0             00 r[10]=0
REG[10] =  r:0
  55 Integer       2010   11    0               00 r[11]=2010
REG[11] =  i:2010
  56 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  57 String8          0   16    0 Y             00 r[16]='Y'
REG[16] =   t1[Y](8)
  58 String8          0   17    0 N             00 r[17]='N'
REG[17] =   t1[N](8)
  59 Integer          0   18    0               00 r[18]=0
REG[18] =  i:0
  60 Integer         12   19    0               00 r[19]=12
REG[19] =  i:12
  61 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 8             00 root=2 iDb=0; t1
   2 NewRowid         0    4    2               00 r[4]=rowid
REG[2] =  NULL
REG[4] =  i:1
   3 MemMax           2    4    0               00 r[2]=max(r[2],r[4])
REG[4] =  i:1
   4 SoftNull         5    0    0               00 r[5]=NULL
   5 Function0        1   13    7 zeroblob(1)   01 r[7]=func(r[13])
REG[13] =  i:10000
REG[7] =  s0[](8)+10000z
   6 HaltIfNull    1299    2    6 t1.t2         01 if r[6]=null halt
REG[6] =  i:0
   7 HaltIfNull    1299    2    7 t1.a          01 if r[7]=null halt
REG[7] =  s0[](8)+10000z
   8 HaltIfNull    1299    2    8 t1.b          01 if r[8]=null halt
REG[8] =  r:0
   9 HaltIfNull    1299    2    9 t1.t1i1       01 if r[9]=null halt
REG[9] =  r:0
  10 HaltIfNull    1299    2   10 t1.t2i1       01 if r[10]=null halt
REG[10] =  r:0
  11 HaltIfNull    1299    2   11 t1.tr1        01 if r[11]=null halt
REG[11] =  i:2010
  12 HaltIfNull    1299    2   12 t1.tr2        01 if r[12]=null halt
REG[12] =  i:0
  13 Noop             0    0    0               00 begin IN expr
  14 SCopy            7   14    0               00 r[14]=r[7]
REG[14] =  e0[](8)+10000z
  15 BitAnd          14   14   15               00 r[15]=r[14]&r[14]
REG[14] =  e0[](8)+10000z
REG[14] =  e0[](8)+10000z
REG[15] =  i:0
  16 Eq              14   20   16 (BINARY)      42 if r[14]==r[16] goto 20
REG[14] =  e0[](8)+10000z
REG[16] =   t1[Y](8)
  17 Eq              14   20   17 (BINARY)      42 if r[14]==r[17] goto 20

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fa777866859 in __GI_abort () at abort.c:79
#2  0x00007fa777866729 in __assert_fail_base (fmt=0x7fa7779fc588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", 
    assertion=0x216480 "((p->szMalloc>0 && p->z==p->zMalloc)? 1 : 0) + ((p->flags&MEM_Dyn)!=0 ? 1 : 0) + ((p->flags&MEM_Ephem)!=0 ? 1 : 0) + ((p->flags&MEM_Static)!=0 ? 1 : 0) == 1", file=0x222c23 "sqlite3.c", line=68297, 
    function=<optimized out>) at assert.c:92
#3  0x00007fa777877fd6 in __GI___assert_fail (
    assertion=0x216480 "((p->szMalloc>0 && p->z==p->zMalloc)? 1 : 0) + ((p->flags&MEM_Dyn)!=0 ? 1 : 0) + ((p->flags&MEM_Ephem)!=0 ? 1 : 0) + ((p->flags&MEM_Static)!=0 ? 1 : 0) == 1", file=0x222c23 "sqlite3.c", line=68297, 
    function=0x21e154 "int sqlite3VdbeCheckMemInvariants(Mem *)") at assert.c:101
#4  0x00000000002795e3 in sqlite3VdbeCheckMemInvariants (p=0x1be55b0) at sqlite3.c:68292
#5  0x00000000003bfcc6 in sqlite3VdbeExec (p=<optimized out>) at sqlite3.c:77361
#6  0x000000000028b140 in sqlite3_step (pStmt=<optimized out>) at sqlite3.c:75131
#7  0x000000000024b5e9 in main (argc=1, argv=0x7ffd9cc1fa98) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 41363] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
