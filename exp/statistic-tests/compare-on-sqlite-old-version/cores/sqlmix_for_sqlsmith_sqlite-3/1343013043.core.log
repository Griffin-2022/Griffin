GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000241,sig:06,src:022597+021489,time:5374569,execs:646991,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    0 0             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;CREATE TABLE t1(x INTEGER PRIMARY KEY, t2, a);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    0 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:1
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:1
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:1
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t1            00 r[7]='t1'
REG[7] =   t2[t1](8)
  21 String8          0    8    0 t1            00 r[8]='t1'
REG[8] =   t2[t1](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  23 String8          0   10    0 CREATE TABLE t1(x INTEGER PRIMARY KEY, t2, a) 00 r[10]='CREATE TABLE t1(x INTEGER PRIMARY KEY, t2, a)'
REG[10] =   t45[CREATE TABLE t1](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s61[0617111101677461626C657431743102.....gtablet1t1.](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s61[0617111101677461626C657431743102.....gtablet1t1.](8)
REG[5] =  i:1
  26 Close            1    0    0               00 
  27 SetCookie        0    1    1               00 
  28 ParseSchema      0    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    1 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s45[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:2
REG[7] =   s45[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;create temp table b(t1i1);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      1    1    0 0             01 usesStmtJournal=0
  31 TableLock        1    1    1 sqlite_temp_master 00 iDb=1 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       1    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        1    2    4               00 
   4 SetCookie        1    5    1               00 
   5 CreateTable      1    2    0               00 r[2]=root iDb=1
REG[2] =  i:2
   6 OpenWrite        0    1    1 5             00 root=1 iDb=1
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    1 5             00 root=1 iDb=1; sqlite_temp_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_temp_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:1
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:1
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:1
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 b             00 r[7]='b'
REG[7] =   t1[b](8)
  21 String8          0    8    0 b             00 r[8]='b'
REG[8] =   t1[b](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  23 String8          0   10    0 CREATE TABLE b(t1i1) 00 r[10]='CREATE TABLE b(t1i1)'
REG[10] =   t20[CREATE TABLE b(](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s34[06170F0F01357461626C656262024352.....5tablebb.CR](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s34[06170F0F01357461626C656262024352.....5tablebb.CR](8)
REG[5] =  i:1
  26 Close            1    0    0               00 
  27 SetCookie        1    1    1               00 
  28 ParseSchema      1    0    0 tbl_name='b' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      1    0    1 0             00 usesStmtJournal=0
  17 TableLock        1    1    0 sqlite_temp_master 00 iDb=1 root=1 write=0
  18 String8          0    2    0 b             00 r[2]='b'
REG[2] =   t1[b](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          0    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_temp_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[b](8)
REG[1] =   s1[b](8)
   7 Column           0    0    3               00 r[3]=sqlite_temp_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_temp_master.name
REG[5] =   s1[b](8)
  10 Column           0    3    6               00 r[6]=sqlite_temp_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_temp_master.sql
REG[7] =   s20[CREATE TABLE b(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[b](8)
REG[6] =  i:2
REG[7] =   s20[CREATE TABLE b(](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;
;SELECT (SELECT group_concat(a,a) FROM t1) FROM t1;]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    0    1 0             01 usesStmtJournal=0
  25 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  26 Goto             0    1    0               00 
   1 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   2 Explain          0    0    0 SCAN TABLE t1 00 
   3 Rewind           0   22    0               00 
  22 Close            0    0    0               00 
  23 Halt             0    0    0               00 
SQL: [CREATE UNIQUE INDEX t2i1 ON t1(t2);]
VDBE Trace:
   0 Init             0   37    0               00 Start at 37
  37 Transaction      0    1    1 0             01 usesStmtJournal=1
  38 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  39 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  40 Goto             0    1    0               00 
   1 Noop             0   36    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:3
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:2
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 t2i1          00 r[4]='t2i1'
REG[4] =   t4[t2i1](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:3
   9 String8          0    7    0 CREATE UNIQUE INDEX t2i1 ON t1(t2) 00 r[7]='CREATE UNIQUE INDEX t2i1 ON t1(t2)'
REG[7] =   t34[CREATE UNIQUE I](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s52[061715110151696E6465787432693174.....Qindext2i1t](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s52[061715110151696E6465787432693174.....Qindext2i1t](8)
REG[2] =  i:2
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    1 k(2,,)        00 
  14 OpenRead         1    2    0 3             00 root=2 iDb=0; t1
  15 Rewind           1   21    0               00 
  21 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  22 SorterSort       3   30    0               00 
  30 Close            1    0    0               00 
  31 Close            2    0    0               00 
  32 Close            3    0    0               00 
  33 SetCookie        0    1    2               00 
  34 ParseSchema      0    0    0 name='t2i1' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t2i1          00 r[2]='t2i1'
REG[2] =   t4[t2i1](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s4[t2i1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s4[t2i1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s34[CREATE UNIQUE I](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s4[t2i1](8)
REG[6] =  i:3
REG[7] =   s34[CREATE UNIQUE I](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  35 Expire           0    0    0               00 
  36 Halt             0    0    0               00 
SQL: [;
;
;CREATE TABLE tr1(tr2 INTEGER PRIMARY KEY, t0);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    2 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:3
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:3
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:3
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 tr1           00 r[7]='tr1'
REG[7] =   t3[tr1](8)
  21 String8          0    8    0 tr1           00 r[8]='tr1'
REG[8] =   t3[tr1](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  23 String8          0   10    0 CREATE TABLE tr1(tr2 INTEGER PRIMARY KEY, t0) 00 r[10]='CREATE TABLE tr1(tr2 INTEGER PRIMARY KEY, t0)'
REG[10] =   t45[CREATE TABLE tr](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s63[0617131301677461626C657472317472.....gtabletr1tr](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s63[0617131301677461626C657472317472.....gtabletr1tr](8)
REG[5] =  i:3
  26 Close            1    0    0               00 
  27 SetCookie        0    1    3               00 
  28 ParseSchema      0    0    0 tbl_name='tr1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 tr1           00 r[2]='tr1'
REG[2] =   t3[tr1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s3[tr1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s3[tr1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s45[CREATE TABLE tr](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s3[tr1](8)
REG[6] =  i:4
REG[7] =   s45[CREATE TABLE tr](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;VACUUM;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Vacuum           0    0    0               00 
SQL: [ATTACH '' AS vacuum_db;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0               00 r[1]=''
REG[1] =   t0[](8)
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
REG[2] =   t9[vacuum_db](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t0[](8)
REG[2] =   t9[vacuum_db](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      2    0    0 0             00 usesStmtJournal=0
  13 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [PRAGMA vacuum_db.synchronous=OFF]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [SELECT 'CREATE TABLE vacuum_db.' || substr(sql,14)   FROM sqlite_master WHERE type='table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    3 0             01 usesStmtJournal=0
  20 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  21 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  22 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  23 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  24 String8          0    8    0 CREATE TABLE vacuum_db. 00 r[8]='CREATE TABLE vacuum_db.'
REG[8] =   t23[CREATE TABLE va](8)
  25 Integer         14   10    0               00 r[10]=14
REG[10] =  i:14
  26 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   17    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t1](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[t1](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:2
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:2
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s45[CREATE TABLE t1](8)
  13 Function0        2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s45[CREATE TABLE t1](8)
REG[10] =  i:14
REG[5] =   s32[t1(x INTEGER PR](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s32[t1(x INTEGER PR](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s55[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s55[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.t1(x INTEGER PRIMARY KEY, t2, a)]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      2    1    0 0             01 usesStmtJournal=0
  31 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        2    2    4               00 
   4 SetCookie        2    5    1               00 
   5 CreateTable      2    2    0               00 r[2]=root iDb=2
REG[2] =  i:2
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:1
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:1
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:1
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t1            00 r[7]='t1'
REG[7] =   t2[t1](8)
  21 String8          0    8    0 t1            00 r[8]='t1'
REG[8] =   t2[t1](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  23 String8          0   10    0 CREATE TABLE t1(x INTEGER PRIMARY KEY, t2, a) 00 r[10]='CREATE TABLE t1(x INTEGER PRIMARY KEY, t2, a)'
REG[10] =   t45[CREATE TABLE t1](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s61[0617111101677461626C657431743102.....gtablet1t1.](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s61[0617111101677461626C657431743102.....gtablet1t1.](8)
REG[5] =  i:1
  26 Close            1    0    0               00 
  27 SetCookie        2    1    1               00 
  28 ParseSchema      2    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    1 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s45[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:2
REG[7] =   s45[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s3[tr1](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s3[tr1](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:4
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:4
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s45[CREATE TABLE tr](8)
  13 Function         2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s45[CREATE TABLE tr](8)
REG[10] =  i:14
REG[5] =   s32[tr1(tr2 INTEGER](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s32[tr1(tr2 INTEGER](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s55[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s55[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.tr1(tr2 INTEGER PRIMARY KEY, t0)]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      2    1    1 0             01 usesStmtJournal=0
  31 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      2    2    0               00 r[2]=root iDb=2
REG[2] =  i:3
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:2
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:2
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:2
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 tr1           00 r[7]='tr1'
REG[7] =   t3[tr1](8)
  21 String8          0    8    0 tr1           00 r[8]='tr1'
REG[8] =   t3[tr1](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  23 String8          0   10    0 CREATE TABLE tr1(tr2 INTEGER PRIMARY KEY, t0) 00 r[10]='CREATE TABLE tr1(tr2 INTEGER PRIMARY KEY, t0)'
REG[10] =   t45[CREATE TABLE tr](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s63[0617131301677461626C657472317472.....gtabletr1tr](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s63[0617131301677461626C657472317472.....gtabletr1tr](8)
REG[5] =  i:2
  26 Close            1    0    0               00 
  27 SetCookie        2    1    2               00 
  28 ParseSchema      2    0    0 tbl_name='tr1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    2 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 tr1           00 r[2]='tr1'
REG[2] =   t3[tr1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s3[tr1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s3[tr1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s45[CREATE TABLE tr](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s3[tr1](8)
REG[6] =  i:3
REG[7] =   s45[CREATE TABLE tr](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
  16 Next             0    4    0               01 
  17 Close            0    0    0               00 
  18 Halt             0    0    0               00 
SQL: [SELECT 'CREATE INDEX vacuum_db.' || substr(sql,14)  FROM sqlite_master WHERE sql LIKE 'CREATE INDEX %' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    3 0             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE INDEX % 00 r[2]='CREATE INDEX %'
REG[2] =   t14[CREATE INDEX %](8)
  17 String8          0    5    0 CREATE INDEX vacuum_db. 00 r[5]='CREATE INDEX vacuum_db.'
REG[5] =   t23[CREATE INDEX va](8)
  18 Integer         14    7    0               00 r[7]=14
REG[7] =  i:14
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s45[CREATE TABLE t1](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s45[CREATE TABLE t1](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s34[CREATE UNIQUE I](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s34[CREATE UNIQUE I](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s45[CREATE TABLE tr](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s45[CREATE TABLE tr](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'CREATE UNIQUE INDEX vacuum_db.' || substr(sql,21)   FROM sqlite_master WHERE sql LIKE 'CREATE UNIQUE INDEX %']
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    3 0             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE UNIQUE INDEX % 00 r[2]='CREATE UNIQUE INDEX %'
REG[2] =   t21[CREATE UNIQUE I](8)
  17 String8          0    5    0 CREATE UNIQUE INDEX vacuum_db. 00 r[5]='CREATE UNIQUE INDEX vacuum_db.'
REG[5] =   t30[CREATE UNIQUE I](8)
  18 Integer         21    7    0               00 r[7]=21
REG[7] =  i:21
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s45[CREATE TABLE t1](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s45[CREATE TABLE t1](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s34[CREATE UNIQUE I](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s34[CREATE UNIQUE I](8)
REG[1] =  i:1
   6 IfNot            1   11    1               00 
REG[1] =  i:1
   7 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s34[CREATE UNIQUE I](8)
   8 Function0        2    6    1 substr(2)     02 r[1]=func(r[6..7])
REG[6] =   s34[CREATE UNIQUE I](8)
REG[7] =  i:21
REG[1] =   s14[t2i1 ON t1(t2)](8)
   9 Concat           1    5    4               00 r[4]=r[5]+r[1]
REG[1] =   s14[t2i1 ON t1(t2)](8)
REG[5] =   t30[CREATE UNIQUE I](8)
REG[4] =   s44[CREATE UNIQUE I](8)
  10 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s44[CREATE UNIQUE I](8)
SQL: [CREATE UNIQUE INDEX vacuum_db.t2i1 ON t1(t2)]
VDBE Trace:
   0 Init             0   37    0               00 Start at 37
  37 Transaction      2    1    2 0             01 usesStmtJournal=1
  38 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  39 TableLock        2    2    1 t1            00 iDb=2 root=2 write=1
  40 Goto             0    1    0               00 
   1 Noop             0   36    0               00 
   2 CreateIndex      2    1    0               00 r[1]=root iDb=2
REG[1] =  i:4
   3 OpenWrite        0    1    2 5             00 root=1 iDb=2; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:3
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 t2i1          00 r[4]='t2i1'
REG[4] =   t4[t2i1](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:4
   9 String8          0    7    0 CREATE UNIQUE INDEX t2i1 ON t1(t2) 00 r[7]='CREATE UNIQUE INDEX t2i1 ON t1(t2)'
REG[7] =   t34[CREATE UNIQUE I](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s52[061715110151696E6465787432693174.....Qindext2i1t](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s52[061715110151696E6465787432693174.....Qindext2i1t](8)
REG[2] =  i:3
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    1 k(2,,)        00 
  14 OpenRead         1    2    2 3             00 root=2 iDb=2; t1
  15 Rewind           1   21    0               00 
  21 OpenWrite        2    1    2 k(2,,)        11 root=1 iDb=2
  22 SorterSort       3   30    0               00 
  30 Close            1    0    0               00 
  31 Close            2    0    0               00 
  32 Close            3    0    0               00 
  33 SetCookie        2    1    3               00 
  34 ParseSchema      2    0    0 name='t2i1' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    3 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 t2i1          00 r[2]='t2i1'
REG[2] =   t4[t2i1](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s4[t2i1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s4[t2i1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s34[CREATE UNIQUE I](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s4[t2i1](8)
REG[6] =  i:4
REG[7] =   s34[CREATE UNIQUE I](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  35 Expire           0    0    0               00 
  36 Halt             0    0    0               00 
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s45[CREATE TABLE tr](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s45[CREATE TABLE tr](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';'FROM main.sqlite_master WHERE type = 'table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    0    3 0             01 usesStmtJournal=0
  25 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  26 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  27 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  28 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  29 String8          0   10    0 INSERT INTO vacuum_db. 00 r[10]='INSERT INTO vacuum_db.'
REG[10] =   t22[INSERT INTO vac](8)
  30 String8          0   13    0  SELECT * FROM main. 00 r[13]=' SELECT * FROM main.'
REG[13] =   t20[ SELECT * FROM ](8)
  31 String8          0   14    0 ;             00 r[14]=';'
REG[14] =   t1[;](8)
  32 Goto             0    1    0               00 
   1 OpenRead         0    1    0 4             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   22    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t1](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[t1](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:2
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:2
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[t1](8)
  13 Function0        0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s2[t1](8)
REG[11] =   z4['t1'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z4['t1'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s26[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s26[INSERT INTO vac](8)
REG[8] =   s46[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[t1](8)
  17 Function0        0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s2[t1](8)
REG[9] =   z4['t1'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z4['t1'](8)
REG[8] =   s46[INSERT INTO vac](8)
REG[5] =   s50[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s50[INSERT INTO vac](8)
REG[7] =   s51[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s51[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'t1' SELECT * FROM main.'t1';]
VDBE Trace:
   0 Init             0   22    0               00 Start at 22
  22 Transaction      0    0    3 0             01 usesStmtJournal=1
  23 Transaction      2    1    3 0             01 usesStmtJournal=1
  24 TableLock        2    2    1 t1            00 iDb=2 root=2 write=1
  25 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  26 Goto             0    1    0               00 
   1 OpenWrite        1    2    2 3             00 root=2 iDb=2; t1
   2 OpenRead         0    2    0 3             00 root=2 iDb=0; t1
   3 Rewind           0   21    0               00 
  21 Halt             0    0    0               00 
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s3[tr1](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s3[tr1](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:4
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:4
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s3[tr1](8)
  13 Function         0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s3[tr1](8)
REG[11] =   z5['tr1'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z5['tr1'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s27[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s27[INSERT INTO vac](8)
REG[8] =   s47[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s3[tr1](8)
  17 Function         0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s3[tr1](8)
REG[9] =   z5['tr1'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z5['tr1'](8)
REG[8] =   s47[INSERT INTO vac](8)
REG[5] =   s52[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s52[INSERT INTO vac](8)
REG[7] =   s53[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s53[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'tr1' SELECT * FROM main.'tr1';]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    3 0             01 usesStmtJournal=1
  14 Transaction      2    1    3 0             01 usesStmtJournal=1
  15 TableLock        2    3    1 tr1           00 iDb=2 root=3 write=1
  16 TableLock        0    4    0 tr1           00 iDb=0 root=4 write=0
  17 Goto             0    1    0               00 
   1 OpenWrite        1    3    2 2             00 root=3 iDb=2; tr1
   2 OpenRead         0    4    0 2             00 root=4 iDb=0; tr1
   3 Rewind           0   12    0               00 
  12 Halt             0    0    0               00 
  21 Next             0    4    0               01 
  22 Close            0    0    0               00 
  23 Halt             0    0    0               00 
SQL: [SELECT 'DELETE FROM vacuum_db.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name='sqlite_sequence' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      2    0    3 0             01 usesStmtJournal=0
  15 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  16 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  17 String8          0    5    0 DELETE FROM vacuum_db. 00 r[5]='DELETE FROM vacuum_db.'
REG[5] =   t22[DELETE FROM vac](8)
  18 String8          0    8    0 ;             00 r[8]=';'
REG[8] =   t1[;](8)
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  11 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tr1](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s3[tr1](8)
  11 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t2i1](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s4[t2i1](8)
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name=='sqlite_sequence';]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      2    0    3 0             01 usesStmtJournal=0
  19 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  20 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  21 String8          0    7    0 INSERT INTO vacuum_db. 00 r[7]='INSERT INTO vacuum_db.'
REG[7] =   t22[INSERT INTO vac](8)
  22 String8          0   10    0  SELECT * FROM main. 00 r[10]=' SELECT * FROM main.'
REG[10] =   t20[ SELECT * FROM ](8)
  23 String8          0   11    0 ;             00 r[11]=';'
REG[11] =   t1[;](8)
  24 Goto             0    1    0               00 
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   16    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  15 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tr1](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s3[tr1](8)
  15 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t2i1](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s4[t2i1](8)
  15 Next             0    4    0               01 
  16 Close            0    0    0               00 
  17 Halt             0    0    0               00 
SQL: [INSERT INTO vacuum_db.sqlite_master   SELECT type, name, tbl_name, rootpage, sql    FROM main.sqlite_master   WHERE type='view' OR type='trigger'      OR (type='table' AND rootpage=0)]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    0    3 0             01 usesStmtJournal=0
  29 Transaction      2    1    3 0             01 usesStmtJournal=0
  30 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  31 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  32 String8          0    9    0 view          00 r[9]='view'
REG[9] =   t4[view](8)
  33 String8          0   11    0 trigger       00 r[11]='trigger'
REG[11] =   t7[trigger](8)
  34 String8          0   12    0 table         00 r[12]='table'
REG[12] =   t5[table](8)
  35 Integer          0   13    0               00 r[13]=0
REG[13] =  i:0
  36 Goto             0    1    0               00 
   1 InitCoroutine    7   20    2               00 
  20 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  21 Yield            7   26    0               00 
REG[7] =  i:1
REG[7] =  i:21
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   18    0               00 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[table](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[table](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[table](8)
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
REG[10] =  i:2
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
REG[13] =  i:0
REG[10] =  i:2
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[index](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[index](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[index](8)
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[table](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[table](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[table](8)
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
REG[10] =  i:4
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
REG[13] =  i:0
REG[10] =  i:4
  17 Next             0    5    0               01 
  18 Close            0    0    0               00 
  19 EndCoroutine     7    0    0               00 
REG[7] =  i:21
  26 Noop             1    0    0               00 
  27 Halt             0    0    0               00 
   2 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    4 1             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s45[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s45[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tr1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s45[CREATE TABLE tr](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s3[tr1](8)
REG[2] =  i:3
REG[3] =   s45[CREATE TABLE tr](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t2i1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s34[CREATE UNIQUE I](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s4[t2i1](8)
REG[2] =  i:4
REG[3] =   s34[CREATE UNIQUE I](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      1    0    1 1             00 usesStmtJournal=0
  13 TableLock        1    1    0 sqlite_temp_master 00 iDb=1 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          0    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_temp_master.name
REG[1] =   s1[b](8)
   6 Column           0    3    2               00 r[2]=sqlite_temp_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_temp_master.sql
REG[3] =   s20[CREATE TABLE b(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[b](8)
REG[2] =  i:2
REG[3] =   s20[CREATE TABLE b(](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
;CREATE TABLE IF NOT EXISTS c0(c1);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    4 1             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:4
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:4
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:4
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 c0            00 r[7]='c0'
REG[7] =   t2[c0](8)
  21 String8          0    8    0 c0            00 r[8]='c0'
REG[8] =   t2[c0](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  23 String8          0   10    0 CREATE TABLE c0(c1) 00 r[10]='CREATE TABLE c0(c1)'
REG[10] =   t19[CREATE TABLE c0](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s35[0617111101337461626C656330633005.....3tablec0c0.](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s35[0617111101337461626C656330633005.....3tablec0c0.](8)
REG[5] =  i:4
  26 Close            1    0    0               00 
  27 SetCookie        0    1    5               00 
  28 ParseSchema      0    0    0 tbl_name='c0' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    5 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 c0            00 r[2]='c0'
REG[2] =   t2[c0](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[c0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s2[c0](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[c0](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s19[CREATE TABLE c0](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[c0](8)
REG[6] =  i:5
REG[7] =   s19[CREATE TABLE c0](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;
;REINDEX;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    1    5 1             01 usesStmtJournal=0
  24 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  25 Goto             0    1    0               00 
   1 SorterOpen       2    0    1 k(2,,)        00 
   2 OpenRead         0    2    0 3             00 root=2 iDb=0; t1
   3 Rewind           0    9    0               00 
   9 Clear            4    0    0               00 
  10 OpenWrite        1    4    0 k(2,,)        01 root=4 iDb=0
  11 SorterSort       2   19    0               00 
  19 Close            0    0    0               00 
  20 Close            1    0    0               00 
  21 Noop             2    0    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM b WHERE t1i1<'2';]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      1    0    1 1             01 usesStmtJournal=0
  12 TableLock        1    2    0 b             00 iDb=1 root=2 write=0
  13 String8          0    2    0 2             00 r[2]='2'
REG[2] =   t1[2](8)
  14 Goto             0    1    0               00 
   1 OpenRead         0    2    1 1             00 root=2 iDb=1; b
   2 Explain          0    0    0 SCAN TABLE b  00 
   3 Rewind           0    9    0               00 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
SQL: [ROLLBACK TO one 
;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        2    0    0 one           00 
SQL: [;insert into t1 (t2) values (2);]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      0    1    5 1             01 usesStmtJournal=0
  19 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  20 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  21 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 3             00 root=2 iDb=0; t1
   2 OpenWrite        1    4    0 k(2,,)        00 root=4 iDb=0; t2i1
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   4 SoftNull         2    0    0               00 r[2]=NULL
   5 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   6 Affinity         2    1    0 D             00 affinity(r[2])
   7 SCopy            3    6    0               00 r[6]=r[3]; t2
REG[6] =  i:2
   8 IntCopy          1    7    0               00 r[7]=r[1]; rowid
REG[7] =  i:1
   9 MakeRecord       6    2    5               00 r[5]=mkrec(r[6..7]); for t2i1
REG[5] =  s4[03010902....](8)
  10 NoConflict       1   12    6 1             00 key=r[6]
REG[6] =  i:2
  12 IdxInsert        1    5    0               10 key=r[5]
REG[5] =  s4[03010902....](8)
  13 MakeRecord       2    3    9               00 r[9]=mkrec(r[2..4])
REG[9] =  s5[0400010002.....](8)
  14 Insert           0    9    1 t1            1B intkey=r[1] data=r[9]
REG[9] =  s5[0400010002.....](8)
REG[1] =  i:1
  15 Close            0    0    0               00 
  16 Noop             1    0    0               00 
  17 Halt             0    0    0               00 
SQL: [;
;DROP TABLE IF EXISTS b;]
VDBE Trace:
   0 Init             0   41    0               00 Start at 41
  41 Transaction      1    1    1 1             01 usesStmtJournal=1
  42 TableLock        1    1    1 sqlite_temp_master 00 iDb=1 root=1 write=1
  43 String8          0    3    0 b             00 r[3]='b'
REG[3] =   t1[b](8)
  44 String8          0    5    0 trigger       00 r[5]='trigger'
REG[5] =   t7[trigger](8)
  45 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          0    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_temp_master.tbl_name
REG[2] =   s1[b](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t1[b](8)
REG[2] =   s1[b](8)
   7 Column           0    0    4               00 r[4]=sqlite_temp_master.type
REG[4] =   s5[table](8)
   8 Eq               5   12    4 (BINARY)      52 if r[5]==r[4] goto 12
REG[5] =   t7[trigger](8)
REG[4] =   s5[table](8)
   9 Rowid            0    6    0               00 r[6]=rowid
REG[6] =  i:1
  10 Once             0   11    0               00 
  11 Delete           0    0    0 sqlite_temp_master 02 
  12 Next             0    5    0               01 
  13 Close            0    0    0               00 
  14 Destroy          2    4    1               00 
REG[4] =  i:0
  15 Null             0    7    8               00 r[7..8]=NULL
REG[7] =  NULL
  16 IfNot            4   25    1               00 
REG[4] =  i:0
  25 Close            1    0    0               00 
  26 OpenWrite        1    1    1 5             00 root=1 iDb=1; sqlite_temp_master
  27 RowSetRead       7   37    8               00 r[8]=rowset(7)
REG[7] =  NULL
REG[8] =  NULL
  37 Close            1    0    0               00 
  38 DropTable        1    0    0 b             00 
  39 SetCookie        1    1    2               00 
  40 Halt             0    0    0               00 
SQL: [;
;COMMIT;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       1    0    0               00 
SQL: [;UPDATE tr1 SET t0='ostrich' WHERE abs(t0)=248;]
VDBE Trace:
   0 Init             0   22    0               00 Start at 22
  22 Transaction      0    1    5 1             01 usesStmtJournal=0
  23 TableLock        0    3    1 tr1           00 iDb=0 root=3 write=1
  24 Integer        248    7    0               00 r[7]=248
REG[7] =  i:248
  25 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; tr1
   3 Explain          0    0    0 SCAN TABLE tr1 00 
   4 Rewind           0   11    0               00 
  11 Close            0    0    0               00 
  12 OpenWrite        0    3    0 2             00 root=3 iDb=0; tr1
  13 RowSetRead       1   20    2               00 r[2]=rowset(1)
REG[1] =  NULL
REG[2] =  NULL
  20 Noop             0    0    0               00 
  21 Halt             0    0    0               00 
SQL: [;CREATE TABLE y(c PRIMARY KEY,i1 UNIQUE);]
VDBE Trace:
   0 Init             0   54    0               00 Start at 54
  54 Transaction      0    1    5 1             01 usesStmtJournal=0
  55 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  56 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:6
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:5
  10 Close            0    0    0               00 
  11 Noop             0   23    0               00 
  12 CreateIndex      0    4    0               00 r[4]=root iDb=0
REG[4] =  i:7
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:6
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_y_1 00 r[7]='sqlite_autoindex_y_1'
REG[7] =   t20[sqlite_autoinde](8)
  17 String8          0    8    0 y             00 r[8]='y'
REG[8] =   t1[y](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:7
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s33[0617350F0100696E64657873716C6974..5...indexsqlit](8)
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  s33[0617350F0100696E64657873716C6974..5...indexsqlit](8)
REG[5] =  i:6
  22 Close            1    0    0               00 
  23 Noop             0   35    0               00 
  24 CreateIndex      0   12    0               00 r[12]=root iDb=0
REG[12] =  i:8
  25 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  26 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:7
  27 String8          0   14    0 index         00 r[14]='index'
REG[14] =   t5[index](8)
  28 String8          0   15    0 sqlite_autoindex_y_2 00 r[15]='sqlite_autoindex_y_2'
REG[15] =   t20[sqlite_autoinde](8)
  29 String8          0   16    0 y             00 r[16]='y'
REG[16] =   t1[y](8)
  30 Copy            12   17    0               00 r[17]=r[12]
REG[17] =  i:8
  31 Null             0   18    0               00 r[18]=NULL
REG[18] =  NULL
  32 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s33[0617350F0100696E64657873716C6974..5...indexsqlit](8)
  33 Insert           2   19   13               18 intkey=r[13] data=r[19]
REG[19] =  s33[0617350F0100696E64657873716C6974..5...indexsqlit](8)
REG[13] =  i:7
  34 Close            2    0    0               00 
  35 Close            0    0    0               00 
  36 Null             0   20   21               00 r[20..21]=NULL
REG[20] =  NULL
  37 OpenWrite        3    1    0 5             00 root=1 iDb=0; sqlite_master
  38 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  39 MustBeInt        1   42    0               00 
REG[1] =  i:5
  40 NotExists        3   42    1               00 intkey=r[1]; pk
REG[1] =  i:5
  41 Rowid            3   21    0               00 r[21]=rowid
REG[21] =  i:5
  42 IsNull          21   50    0               00 if r[21]==NULL goto 50
REG[21] =  i:5
  43 String8          0   22    0 table         00 r[22]='table'
REG[22] =   t5[table](8)
  44 String8          0   23    0 y             00 r[23]='y'
REG[23] =   t1[y](8)
  45 String8          0   24    0 y             00 r[24]='y'
REG[24] =   t1[y](8)
  46 Copy             2   25    0               00 r[25]=r[2]
REG[25] =  i:6
  47 String8          0   26    0 CREATE TABLE y(c PRIMARY KEY,i1 UNIQUE) 00 r[26]='CREATE TABLE y(c PRIMARY KEY,i1 UNIQUE)'
REG[26] =   t39[CREATE TABLE y(](8)
  48 MakeRecord      22    5   27 BBBDB         00 r[27]=mkrec(r[22..26])
REG[27] =  s53[06170F0F015B7461626C657979064352.....[tableyy.CR](8)
  49 Insert           3   27   21               00 intkey=r[21] data=r[27]
REG[27] =  s53[06170F0F015B7461626C657979064352.....[tableyy.CR](8)
REG[21] =  i:5
  50 Close            3    0    0               00 
  51 SetCookie        0    1    6               00 
  52 ParseSchema      0    0    0 tbl_name='y' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 y             00 r[2]='y'
REG[2] =   t1[y](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[c0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s2[c0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s1[y](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[y](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:6
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s39[CREATE TABLE y(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[y](8)
REG[6] =  i:6
REG[7] =   s39[CREATE TABLE y(](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s1[y](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s20[sqlite_autoinde](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:7
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =  NULL
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s20[sqlite_autoinde](8)
REG[6] =  i:7
REG[7] =  NULL
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s1[y](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s20[sqlite_autoinde](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:8
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =  NULL
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s20[sqlite_autoinde](8)
REG[6] =  i:8
REG[7] =  NULL
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  53 Halt             0    0    0               00 
SQL: [SELECT coalesce(strftime('%H:%M:%f',1237962480.232,'unixepoch'),'NULL')
;]
VDBE Trace:
   0 Init             0    6    0               00 Start at 6
   6 String8          0    2    0 %H:%M:%f      00 r[2]='%H:%M:%f'
REG[2] =   t8[%H:%M:%f](8)
   7 Real             0    3    0 1237962480.232 00 r[3]=1237962480.232
REG[3] =  r:1.23796e+09
   8 String8          0    4    0 unixepoch     00 r[4]='unixepoch'
REG[4] =   t9[unixepoch](8)
   9 Goto             0    1    0               00 
   1 Function0        7    2    1 strftime(-1)  03 r[1]=func(r[2..4])
REG[2] =   t8[%H:%M:%f](8)
REG[3] =  r:1.23796e+09
REG[4] =   t9[unixepoch](8)
REG[1] =   s12[06:28:00.232](8)
   2 NotNull          1    4    0               00 if r[1]!=NULL goto 4
REG[1] =   s12[06:28:00.232](8)
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s12[06:28:00.232](8)
   5 Halt             0    0    0               00 
SQL: [;SELECT
     (SELECT sum(t2==xyz) FROM t1)
    FROM
     (SELECT t2 as xyz, max(t2) AS pqr
        FROM t1
       GROUP BY t2);]
VDBE Trace:
   0 Init             0   60    0               00 Start at 60
  60 Transaction      0    0    6 1             01 usesStmtJournal=0
  61 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  62 Goto             0    1    0               00 
   1 InitCoroutine    1   38    2               00 sqlite_sq_140EDB0
  38 Explain          0    0    0 SCAN SUBQUERY 1 00 
  39 InitCoroutine    1    0    2               00 
  40 Yield            1   59    0               00 next row of "sqlite_sq_140EDB0"
REG[1] =  i:1
REG[1] =  i:40
   2 Noop             3    1    0               00 
   3 Integer          0    5    0               00 r[5]=0; clear abort flag
REG[5] =  i:0
   4 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
   5 Null             0    8    8               00 r[8..8]=NULL
REG[8] =  NULL
   6 Gosub            7   35    0               00 
REG[7] =  i:6
  35 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  36 Return           7    0    0               00 
REG[7] =  i:6
   7 OpenRead         4    4    0 k(2,,)        00 root=4 iDb=0; t2i1
   8 Explain          1    0    0 SCAN TABLE t1 USING COVERING INDEX t2i1 00 
   9 Rewind           4   24   10 0             00 
  10 Column           4    0    9               00 r[9]=t1.t2
REG[9] =  i:2
  11 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  NULL
REG[9] =  i:2
  12 Jump            13   17   13               00 
  13 Move             9    8    1               00 r[8]=r[9]
REG[8] =  i:2
  14 Gosub            6   29    0               00 output one row
REG[6] =  i:14
  29 IfPos            4   31    0               00 if r[4]>0 then r[4]-=0, goto 31; Groupby result generator entry point
REG[4] =  i:0
  30 Return           6    0    0               00 
REG[6] =  i:14
  15 IfPos            5   37    0               00 if r[5]>0 then r[5]-=0, goto 37; check abort flag
REG[5] =  i:0
  16 Gosub            7   35    0               00 reset accumulator
REG[7] =  i:16
  35 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  36 Return           7    0    0               00 
REG[7] =  i:16
  17 Column           4    0   10               00 r[10]=t1.t2
REG[10] =  i:2
  18 CollSeq         11    0    0 (BINARY)      00 
  19 AggStep0         0   10    3 max(1)        01 accum=r[3] step(r[10])
REG[10] =  i:2
  20 If              11   22    0               00 
REG[11] =  i:0
  21 Column           4    0    2               00 r[2]=t1.t2
REG[2] =  i:2
  22 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  23 Next             4   10    0               01 
  24 Close            4    0    0               00 
  25 Gosub            6   29    0               00 output final row
REG[6] =  i:25
  29 IfPos            4   31    0               00 if r[4]>0 then r[4]-=0, goto 31; Groupby result generator entry point
REG[4] =  i:1
  31 AggFinal         3    1    0 max(1)        00 accum=r[3] N=1
  32 Copy             2   12    1               00 r[12..13]=r[2..3]
REG[12] =  i:2
REG[13] =  i:2
  33 Yield            1    0    0               00 
REG[1] =  i:40
REG[1] =  i:33
  41 Null             0   15    0               00 r[15]=NULL; Init subquery result
REG[15] =  NULL
  42 Integer          1   16    0               00 r[16]=1; LIMIT counter
REG[16] =  i:1
  43 Null             0   17   18               00 r[17..18]=NULL
REG[17] =  NULL
  44 OpenRead         5    4    0 k(2,,)        00 root=4 iDb=0; t2i1
  45 Explain          2    0    0 SCAN TABLE t1 USING COVERING INDEX t2i1 00 
  46 Rewind           5   52   19 0             00 
  47 Column           5    0   20               00 r[20]=t1.t2
REG[20] =  i:2
  48 Copy            12   21    0               00 r[21]=r[12]; sqlite_sq_140EDB0.xyz
REG[21] =  i:2
  49 Eq              21   19   20 (BINARY)      61 if r[21]==r[20] goto 19
REG[21] =  i:2
REG[20] =  i:2
REG[19] =  i:1
  50 AggStep0         0   19   17 sum(1)        01 accum=r[17] step(r[19])
REG[19] =  i:1
  51 Next             5   47    0               01 
  52 Close            5    0    0               00 
  53 AggFinal        17    1    0 sum(1)        00 accum=r[17] N=1
  54 Copy            17   15    0               00 r[15]=r[17]
REG[15] =  i:1
  55 DecrJumpZero    16   56    0               00 if (--r[16])==0 goto 56
REG[16] =  i:1
  56 Copy            15   14    0               00 r[14]=r[15]
REG[14] =  i:1
  57 ResultRow       14    1    0               00 output=r[14]
REG[14] =  i:1
  58 Goto             0   40    0               00 
  40 Yield            1   59    0               00 next row of "sqlite_sq_140EDB0"
REG[1] =  i:33
REG[1] =  i:40
  34 Return           6    0    0               00 end groupby result generator
REG[6] =  i:25
  26 Goto             0   37    0               00 
  37 EndCoroutine     1    0    0               00 
REG[1] =  i:40
  59 Halt             0    0    0               00 
SQL: [SELECT a,a,a FROM t1 UNION SELECT a,a,a FROM t1
    ORDER BY a,a,a
  
;]
VDBE Trace:
   0 Init             0   95    0               00 Start at 95
  95 Transaction      0    0    6 1             01 usesStmtJournal=0
  96 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  97 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 InitCoroutine    5   28    3               00 left SELECT
  28 InitCoroutine    6   89   29               00 right SELECT
  89 Yield            5   72    0               00 
REG[5] =  i:2
REG[5] =  i:89
   3 SorterOpen       2    9    0 k(5,B,B,B,B,B) 00 
   4 OpenRead         1    2    0 3             00 root=2 iDb=0; t1
   5 Explain          1    0    0 SCAN TABLE t1 00 
   6 Rewind           1   18    0               00 
   7 Column           1    2   14               00 r[14]=t1.a
REG[14] =  NULL
   8 Copy            14   15    0               00 r[15]=r[14]
REG[15] =  NULL
   9 Copy            14   16    0               00 r[16]=r[14]
REG[16] =  NULL
  10 Copy            14    9    0               00 r[9]=r[14]
REG[9] =  NULL
  11 Copy            14   10    0               00 r[10]=r[14]
REG[10] =  NULL
  12 Copy            14   11    0               00 r[11]=r[14]
REG[11] =  NULL
  13 Copy            15   12    0               00 r[12]=r[15]
REG[12] =  NULL
  14 Copy            16   13    0               00 r[13]=r[16]
REG[13] =  NULL
  15 MakeRecord       9    8   17               00 r[17]=mkrec(r[9..16])
REG[17] =  s9[090000000000000000.........](8)
  16 SorterInsert     2   17    0               00 
REG[17] =  s9[090000000000000000.........](8)
  17 Next             1    7    0               01 
  18 Close            1    0    0               00 
  19 OpenPseudo       3   18    9               00 9 columns in r[18]
  20 SorterSort       2   27    0               00 
  21 SorterData       2   18    3               00 r[18]=data
  22 Column           3    5   14               00 r[14]=a
REG[14] =  NULL
  23 Column           3    6   15               00 r[15]=a
REG[15] =  NULL
  24 Column           3    7   16               00 r[16]=a
REG[16] =  NULL
  25 Yield            5    0    0               00 
REG[5] =  i:89
REG[5] =  i:25
  90 Yield            6   75    0               00 
REG[6] =  i:28
REG[6] =  i:90
  29 SorterOpen       4    9    0 k(5,B,B,B,B,B) 00 
  30 OpenRead         0    2    0 3             00 root=2 iDb=0; t1
  31 Explain          2    0    0 SCAN TABLE t1 00 
  32 Rewind           0   44    0               00 
  33 Column           0    2   24               00 r[24]=t1.a
REG[24] =  NULL
  34 Copy            24   25    0               00 r[25]=r[24]
REG[25] =  NULL
  35 Copy            24   26    0               00 r[26]=r[24]
REG[26] =  NULL
  36 Copy            24   19    0               00 r[19]=r[24]
REG[19] =  NULL
  37 Copy            24   20    0               00 r[20]=r[24]
REG[20] =  NULL
  38 Copy            24   21    0               00 r[21]=r[24]
REG[21] =  NULL
  39 Copy            25   22    0               00 r[22]=r[25]
REG[22] =  NULL
  40 Copy            26   23    0               00 r[23]=r[26]
REG[23] =  NULL
  41 MakeRecord      19    8   27               00 r[27]=mkrec(r[19..26])
REG[27] =  s9[090000000000000000.........](8)
  42 SorterInsert     4   27    0               00 
REG[27] =  s9[090000000000000000.........](8)
  43 Next             0   33    0               01 
  44 Close            0    0    0               00 
  45 OpenPseudo       5   28    9               00 9 columns in r[28]
  46 SorterSort       4   53    0               00 
  47 SorterData       4   28    5               00 r[28]=data
  48 Column           5    5   24               00 r[24]=a
REG[24] =  NULL
  49 Column           5    6   25               00 r[25]=a
REG[25] =  NULL
  50 Column           5    7   26               00 r[26]=a
REG[26] =  NULL
  51 Yield            6    0    0               00 
REG[6] =  i:90
REG[6] =  i:51
  91 Permutation      0    0    0 [0,0,0,1]     00 
  92 Compare         14   24    5 k(6,B,B,B,B,B,) 01 r[14..18] <-> r[24..28]
REG[14] =  NULL
REG[24] =  NULL
REG[14] =  NULL
REG[24] =  NULL
REG[14] =  NULL
REG[24] =  NULL
REG[15] =  NULL
REG[25] =  NULL
REG[16] =  NULL
REG[26] =  NULL
  93 Jump            79   83   86               00 
  83 Yield            5   71    0               00 
REG[5] =  i:25
REG[5] =  i:83
  26 SorterNext       2   21    0               00 
  27 EndCoroutine     5    0    0               00 
REG[5] =  i:83
  71 Gosub            8   63    0               00 
REG[8] =  i:71
  63 IfNot            1   66    0               00 
REG[1] =  i:0
  66 Copy            24    2    2               00 r[2..4]=r[24..26]
REG[2] =  NULL
REG[3] =  NULL
REG[4] =  NULL
  67 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  68 ResultRow       24    3    0               00 output=r[24..26]
REG[24] =  NULL
REG[25] =  NULL
REG[26] =  NULL
  69 Return           8    0    0               00 
REG[8] =  i:71
  72 Yield            6   94    0               00 
REG[6] =  i:51
REG[6] =  i:72
  52 SorterNext       4   47    0               00 
  53 EndCoroutine     6    0    0               00 
REG[6] =  i:72
  94 Halt             0    0    0               00 
SQL: [SELECT t2,t2,t2 FROM t1 UNION SELECT t2,t2,t2 FROM t1
    ORDER BY t2,t2,t2
  
;]
VDBE Trace:
   0 Init             0  115    0               00 Start at 115
 115 Transaction      0    0    6 1             01 usesStmtJournal=0
 116 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
 117 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 InitCoroutine    5   38    3               00 left SELECT
  38 InitCoroutine    6  109   39               00 right SELECT
 109 Yield            5   92    0               00 
REG[5] =  i:2
REG[5] =  i:109
   3 SorterOpen       2    7    0 k(4,B,B,B,B)  00 
   4 OpenRead         3    4    0 k(2,,)        00 root=4 iDb=0; t2i1
   5 Explain          1    0    0 SCAN TABLE t1 USING COVERING INDEX t2i1 00 
   6 Rewind           3   24    9 0             00 
   7 Column           3    0   14               00 r[14]=t1.t2
REG[14] =  i:2
   8 Copy            14   15    0               00 r[15]=r[14]
REG[15] =  i:2
   9 Copy            14   16    0               00 r[16]=r[14]
REG[16] =  i:2
  10 Copy            14    9    0               00 r[9]=r[14]
REG[9] =  i:2
  11 Copy            14   10    0               00 r[10]=r[14]
REG[10] =  i:2
  12 Copy            14   11    0               00 r[11]=r[14]
REG[11] =  i:2
  13 Copy            15   12    0               00 r[12]=r[15]
REG[12] =  i:2
  14 Copy            16   13    0               00 r[13]=r[16]
REG[13] =  i:2
  15 MakeRecord      10    7   17               00 r[17]=mkrec(r[10..16])
REG[17] =  s15[080101010101010102020202020202...............](8)
  16 SequenceTest     2   21    0               00 if( cursor[2].ctr++ ) pc = 21
  21 Move             9   18    1               00 r[18]=r[9]
REG[18] =  i:2
  22 SorterInsert     2   17    0               00 
REG[17] =  s15[080101010101010102020202020202...............](8)
  23 Next             3    7    0               01 
  24 Close            3    0    0               00 
  25 Gosub           19   27    0               00 
REG[19] =  i:25
  27 Once             0   29    0               00 
  28 OpenPseudo       4   20    8               00 8 columns in r[20]
  29 SorterSort       2   37    0               00 
  30 SorterData       2   20    4               00 r[20]=data
  31 Column           4    4   14               00 r[14]=t2
REG[14] =  i:2
  32 Column           4    5   15               00 r[15]=t2
REG[15] =  i:2
  33 Column           4    6   16               00 r[16]=t2
REG[16] =  i:2
  34 Yield            5    0    0               00 
REG[5] =  i:109
REG[5] =  i:34
 110 Yield            6   95    0               00 
REG[6] =  i:38
REG[6] =  i:110
  39 SorterOpen       5    7    0 k(4,B,B,B,B)  00 
  40 OpenRead         6    4    0 k(2,,)        00 root=4 iDb=0; t2i1
  41 Explain          2    0    0 SCAN TABLE t1 USING COVERING INDEX t2i1 00 
  42 Rewind           6   60   21 0             00 
  43 Column           6    0   26               00 r[26]=t1.t2
REG[26] =  i:2
  44 Copy            26   27    0               00 r[27]=r[26]
REG[27] =  i:2
  45 Copy            26   28    0               00 r[28]=r[26]
REG[28] =  i:2
  46 Copy            26   21    0               00 r[21]=r[26]
REG[21] =  i:2
  47 Copy            26   22    0               00 r[22]=r[26]
REG[22] =  i:2
  48 Copy            26   23    0               00 r[23]=r[26]
REG[23] =  i:2
  49 Copy            27   24    0               00 r[24]=r[27]
REG[24] =  i:2
  50 Copy            28   25    0               00 r[25]=r[28]
REG[25] =  i:2
  51 MakeRecord      22    7   29               00 r[29]=mkrec(r[22..28])
REG[29] =  s15[080101010101010102020202020202...............](8)
  52 SequenceTest     5   57    0               00 if( cursor[5].ctr++ ) pc = 57
  57 Move            21   30    1               00 r[30]=r[21]
REG[30] =  i:2
  58 SorterInsert     5   29    0               00 
REG[29] =  s15[080101010101010102020202020202...............](8)
  59 Next             6   43    0               01 
  60 Close            6    0    0               00 
  61 Gosub           31   63    0               00 
REG[31] =  i:61
  63 Once             1   65    0               00 
  64 OpenPseudo       7   32    8               00 8 columns in r[32]
  65 SorterSort       5   73    0               00 
  66 SorterData       5   32    7               00 r[32]=data
  67 Column           7    4   26               00 r[26]=t2
REG[26] =  i:2
  68 Column           7    5   27               00 r[27]=t2
REG[27] =  i:2
  69 Column           7    6   28               00 r[28]=t2
REG[28] =  i:2
  70 Yield            6    0    0               00 
REG[6] =  i:110
REG[6] =  i:70
 111 Permutation      0    0    0 [0,0,0,1]     00 
 112 Compare         14   26    5 k(6,B,B,B,B,B,) 01 r[14..18] <-> r[26..30]
REG[14] =  i:2
REG[26] =  i:2
REG[14] =  i:2
REG[26] =  i:2
REG[14] =  i:2
REG[26] =  i:2
REG[15] =  i:2
REG[27] =  i:2
REG[16] =  i:2
REG[28] =  i:2
 113 Jump            99  103  106               00 
 103 Yield            5   91    0               00 
REG[5] =  i:34
REG[5] =  i:103
  35 SorterNext       2   30    0               00 
  36 Return          19    0    0               00 
REG[19] =  i:25
  26 Goto             0   37    0               00 
  37 EndCoroutine     5    0    0               00 
REG[5] =  i:103
  91 Gosub            8   83    0               00 
REG[8] =  i:91
  83 IfNot            1   86    0               00 
REG[1] =  i:0
  86 Copy            26    2    2               00 r[2..4]=r[26..28]
REG[2] =  i:2
REG[3] =  i:2
REG[4] =  i:2
  87 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  88 ResultRow       26    3    0               00 output=r[26..28]
REG[26] =  i:2
REG[27] =  i:2
REG[28] =  i:2
  89 Return           8    0    0               00 
REG[8] =  i:91
  92 Yield            6  114    0               00 
REG[6] =  i:70
REG[6] =  i:92
  71 SorterNext       5   66    0               00 
  72 Return          31    0    0               00 
REG[31] =  i:61
  62 Goto             0   73    0               00 
  73 EndCoroutine     6    0    0               00 
REG[6] =  i:92
 114 Halt             0    0    0               00 
SQL: [;INSERT INTO tr1(t0) VALUES(456);]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    1    6 1             01 usesStmtJournal=0
  10 TableLock        0    3    1 tr1           00 iDb=0 root=3 write=1
  11 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 2             00 root=3 iDb=0; tr1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 SoftNull         2    0    0               00 r[2]=NULL
   4 Integer        456    3    0               00 r[3]=456
REG[3] =  i:456
   5 MakeRecord       2    2    4 D             00 r[4]=mkrec(r[2..3])
REG[4] =  s5[03000201C8.....](8)
   6 Insert           0    4    1 tr1           1B intkey=r[1] data=r[4]
REG[4] =  s5[03000201C8.....](8)
REG[1] =  i:1
   7 Noop             0    0    0               00 
   8 Halt             0    0    0               00 
SQL: [;SELECT (SELECT sum(t0+(SELECT x)) FROM t1) FROM tr1;]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    0    6 1             01 usesStmtJournal=0
  28 TableLock        0    3    0 tr1           00 iDb=0 root=3 write=0
  29 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  30 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; tr1
   3 Explain          0    0    0 SCAN TABLE tr1 00 
   4 Rewind           0   13    0               00 
   5 Column           0    1    4               00 r[4]=tr1.t0
REG[4] =  i:456
   6 Null             0    6    0               00 r[6]=NULL; Init subquery result
REG[6] =  NULL
   7 Integer          1    7    0               00 r[7]=1; LIMIT counter
REG[7] =  i:1
   8 Rowid            1    6    0               00 r[6]=rowid

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f6f38319859 in __GI_abort () at abort.c:79
#2  0x00007f6f38319729 in __assert_fail_base (fmt=0x7f6f384af588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21b760 "pC!=0", file=0x222c23 "sqlite3.c", line=81350, function=<optimized out>) at assert.c:92
#3  0x00007f6f3832afd6 in __GI___assert_fail (assertion=0x21b760 "pC!=0", file=0x222c23 "sqlite3.c", line=81350, function=0x213a19 "int sqlite3VdbeExec(Vdbe *)") at assert.c:101
#4  0x00000000003e5cd3 in sqlite3VdbeExec (p=<optimized out>) at sqlite3.c:81350
#5  0x000000000028b140 in sqlite3_step (pStmt=<optimized out>) at sqlite3.c:75131
#6  0x000000000024b5e9 in main (argc=1, argv=0x7ffceaa0f858) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 42039] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
