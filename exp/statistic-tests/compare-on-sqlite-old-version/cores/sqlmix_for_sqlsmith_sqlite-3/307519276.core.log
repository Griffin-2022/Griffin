GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000666,sig:06,src:023057+021550,time:25548974,execs:5376932,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_listing=on;]
VDBE Program Listing:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;CREATE TABLE a (b INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,t1i1 INTEGER NOT NULL DEFAULT 0,t2i1 TEXT NOT NULL DEFAULT 'N' CHECK (t2i1 IN ('t0', 'N')),tr1 FLOAT NOT NULL DEFAULT 0.0,tr2 FLOAT NOT NULL DEFAULT 0.0,t0 FLOAT NOT NULL DEFAULT 0.0,c0 INTEGER NOT NULL DEFAULT 2010,c1 INTEGER NOT NULL DEFAULT 0 CHECK (c1>=0 AND c1<=12));]
VDBE Program Listing:
   0 Init             0   58    0               00 Start at 58
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    3               00 
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
  16 NotExists        1   18    1               00 intkey=r[1]; pk
  17 Rowid            1    5    0               00 r[5]=rowid
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
  19 String8          0    6    0 table         00 r[6]='table'
  20 String8          0    7    0 a             00 r[7]='a'
  21 String8          0    8    0 a             00 r[8]='a'
  22 Copy             2    9    0               00 r[9]=r[2]
  23 String8          0   10    0 CREATE TABLE a (b INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,t1i1 INTEGER NOT NULL DEFAULT 0,t2i1 TEXT NOT NULL DEFAULT 'N' CHECK (t2i1 IN ('t0', 'N')),tr1 FLOAT NOT NULL DEFAULT 0.0,tr2 FLOAT NOT NULL DEFAULT 0.0,t0 FLOAT NOT NULL DEFAULT 0.0,c0 INTEGER NOT NULL DEFAULT 2010,c1 INTEGER NOT NULL DEFAULT 0 CHECK (c1>=0 AND c1<=12)) 00 r[10]='CREATE TABLE a (b INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,t1i1 INTEGER NOT NULL DEFAULT 0
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
  26 Close            1    0    0               00 
  27 SetCookie        0    1    2               00 
  28 ReadCookie       0   14    2               00 
  29 If              14   32    0               00 
  30 SetCookie        0    2    4               00 
  31 SetCookie        0    5    3               00 
  32 CreateTable      0   13    0               00 r[13]=root iDb=0
  33 OpenWrite        0    1    0 5             00 root=1 iDb=0
  34 NewRowid         0   12    0               00 r[12]=rowid
  35 Blob             6   14    0              00 r[14]= (len=6)
  36 Insert           0   14   12               08 intkey=r[12] data=r[14]
  37 Close            0    0    0               00 
  38 Close            0    0    0               00 
  39 Null             0   15   16               00 r[15..16]=NULL
  40 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  41 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  42 MustBeInt       12   45    0               00 
  43 NotExists        2   45   12               00 intkey=r[12]; pk
  44 Rowid            2   16    0               00 r[16]=rowid
  45 IsNull          16   53    0               00 if r[16]==NULL goto 53
  46 String8          0   17    0 table         00 r[17]='table'
  47 String8          0   18    0 sqlite_sequence 00 r[18]='sqlite_sequence'
  48 String8          0   19    0 sqlite_sequence 00 r[19]='sqlite_sequence'
  49 Copy            13   20    0               00 r[20]=r[13]
  50 String8          0   21    0 CREATE TABLE sqlite_sequence(name,seq) 00 r[21]='CREATE TABLE sqlite_sequence(name,seq)'
  51 MakeRecord      17    5   22 BBBDB         00 r[22]=mkrec(r[17..21])
  52 Insert           2   22   16               00 intkey=r[16] data=r[22]
  53 Close            2    0    0               00 
  54 SetCookie        0    1    2               00 
  55 ParseSchema      0    0    0 tbl_name='sqlite_sequence' AND type!='trigger' 00 
  56 ParseSchema      0    0    0 tbl_name='a' AND type!='trigger' 00 
  57 Halt             0    0    0               00 
  58 Transaction      0    1    1 0             01 usesStmtJournal=0
  59 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  60 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   16    0               00 Start at 16
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
   7 Column           0    0    3               00 r[3]=sqlite_master.type
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
   9 Column           0    1    5               00 r[5]=sqlite_master.name
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
  12 ResultRow        5    3    0               00 output=r[5..7]
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  16 Transaction      0    0    2 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
  19 String8          0    4    0 trigger       00 r[4]='trigger'
  20 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   16    0               00 Start at 16
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
   7 Column           0    0    3               00 r[3]=sqlite_master.type
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
   9 Column           0    1    5               00 r[5]=sqlite_master.name
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
  12 ResultRow        5    3    0               00 output=r[5..7]
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  16 Transaction      0    0    2 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 a             00 r[2]='a'
  19 String8          0    4    0 trigger       00 r[4]='trigger'
  20 Goto             0    1    0               00 
SQL: [;UPDATE OR REPLACE t1 SET x=1001;]
VDBE Program Listing:
   0 Init             0   53    0               00 Start at 53
   1 Null             0   10    0               00 r[10]=NULL
   2 OpenEphemeral    3    1    0 k(1,)         00 nColumn=1
   3 OpenRead         4    4    0 k(2,,)        00 root=4 iDb=0; sqlite_autoindex_t1_2
   4 Explain          0    0    0 SCAN TABLE t1 USING COVERING INDEX sqlite_autoindex_t1_2 00 
   5 Rewind           4   10   12 0             00 
   6 Column           4    1   10               00 r[10]=t1.x
   7 MakeRecord      10    1   11 D             00 r[11]=mkrec(r[10])
   8 IdxInsert        3   11    0               00 key=r[11]
   9 Next             4    6    0               01 
  10 Close            4    0    0               00 
  11 OpenWrite        1    4    0 k(2,,)        00 root=4 iDb=0; sqlite_autoindex_t1_2
  12 OpenWrite        2    3    0 k(1,)         00 root=3 iDb=0; sqlite_autoindex_t1_1
  13 Rewind           3   50    0               00 
  14 RowKey           3   11    0               00 r[11]=key
  15 NotFound         2   49   11 0             00 key=r[11]
  16 Column           2    0    5               00 r[5]=t1.x
  17 Null             0    6    0               00 r[6]=NULL
  18 Integer       1001    8    0               00 r[8]=1001
  19 Column           2    1    9               00 r[9]=t1.t2
  20 HaltIfNull    1299    2    8 t1.x          01 if r[8]=null halt
  21 Affinity         8    1    0 D             00 affinity(r[8])
  22 SCopy            9   12    0               00 r[12]=r[9]; t2
  23 SCopy            8   13    0               00 r[13]=r[8]; x
  24 MakeRecord      12    2    1               00 r[1]=mkrec(r[12..13]); for sqlite_autoindex_t1_2
  25 NoConflict       1   33   12 1             00 key=r[12]
  26 Column           1    1   14               00 r[14]=t1.x
  27 Eq               5   33   14 (BINARY)      90 if r[5]==r[14] goto 33
  28 NotFound         2   33   14 1             00 key=r[14]
  29 Column           2    1   15               00 r[15]=t1.t2
  30 Column           2    0   16               00 r[16]=t1.x
  31 IdxDelete        1   15    2               00 key=r[15..16]
  32 Delete           2    0    0 t1            00 
  33 SCopy            8   15    0               00 r[15]=r[8]; x
  34 SCopy            9   16    0               00 r[16]=r[9]; t2
  35 MakeRecord      15    2    2               00 r[2]=mkrec(r[15..16]); for sqlite_autoindex_t1_1
  36 NoConflict       2   42   15 1             00 key=r[15]
  37 Eq               5   42   15 (BINARY)      90 if r[5]==r[15] goto 42
  38 Column           2    1   17               00 r[17]=t1.t2
  39 Column           2    0   18               00 r[18]=t1.x
  40 IdxDelete        1   17    2               00 key=r[17..18]
  41 Delete           2    0    0 t1            00 
  42 NotFound         2   47   11 0             00 key=r[11]
  43 Column           2    1   17               00 r[17]=t1.t2
  44 Column           2    0   18               00 r[18]=t1.x
  45 IdxDelete        1   17    2               00 key=r[17..18]
  46 Delete           2    0    0               00 
  47 IdxInsert        1    1    0               00 key=r[1]
  48 IdxInsert        2    2    0               01 key=r[2]
  49 Next             3   14    0               00 
  50 Close            1    0    0               00 
  51 Noop             2    0    0               00 
  52 Halt             0    0    0               00 
  53 Transaction      0    1    2 0             01 usesStmtJournal=1
  54 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  55 Goto             0    1    0               00 
SQL: [;
;PRAGMA compile_options;]
VDBE Program Listing:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0 DEBUG         00 r[1]='DEBUG'
   2 ResultRow        1    1    0               00 output=r[1]
   3 String8          0    1    0 HAVE_ISNAN    00 r[1]='HAVE_ISNAN'
   4 ResultRow        1    1    0               00 output=r[1]
   5 String8          0    1    0 SYSTEM_MALLOC 00 r[1]='SYSTEM_MALLOC'
   6 ResultRow        1    1    0               00 output=r[1]
   7 String8          0    1    0 TEMP_STORE=1  00 r[1]='TEMP_STORE=1'
   8 ResultRow        1    1    0               00 output=r[1]
   9 String8          0    1    0 THREADSAFE=1  00 r[1]='THREADSAFE=1'
  10 ResultRow        1    1    0               00 output=r[1]
  11 Halt             0    0    0               00 
SQL: [;PRAGMA integrity_check;]
VDBE Program Listing:
   0 Init             0   70    0               00 Start at 70
   1 Integer        100    1    0               00 r[1]=100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
   3 Halt             0    0    0               00 
   4 IntegrityCk      2    5    1 [6,4,3,1]     00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
   6 String8          0    3    0 *** in database main ***
 00 r[3]='*** in database main ***
'
   7 Move             2    4    1               00 r[4]=r[2]
   8 Concat           4    3    2               00 r[2]=r[3]+r[4]
   9 ResultRow        2    1    0               00 output=r[2]
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
  11 Halt             0    0    0               00 
  12 OpenRead         2    4    0 k(2,,)        00 root=4 iDb=0; sqlite_autoindex_t1_2
  13 OpenRead         3    3    0 k(1,)         00 root=3 iDb=0; sqlite_autoindex_t1_1
  14 Integer          0    7    0               00 r[7]=0
  15 Integer          0    8    0               00 r[8]=0
  16 Integer          0    9    0               00 r[9]=0
  17 Rewind           3   48    0               00 
  18 AddImm           7    1    0               00 r[7]=r[7]+1
  19 Column           3    0    3               80 r[3]=t1.x
  20 NotNull          3   26    0               00 if r[3]!=NULL goto 26
  21 AddImm           1   -1    0               00 r[1]=r[1]+-1
  22 String8          0    3    0 NULL value in t1.x 00 r[3]='NULL value in t1.x'
  23 ResultRow        3    1    0               00 output=r[3]
  24 IfPos            1   26    0               00 if r[1]>0 then r[1]-=0, goto 26
  25 Halt             0    0    0               00 
  26 Column           3    1   11               00 r[11]=t1.t2
  27 Column           3    0   12               00 r[12]=t1.x
  28 AddImm           8    1    0               00 r[8]=r[8]+1
  29 Found            2   40   11 2             00 key=r[11..12]
  30 AddImm           1   -1    0               00 r[1]=r[1]+-1
  31 String8          0    3    0 row           00 r[3]='row '
  32 Concat           7    3    3               00 r[3]=r[3]+r[7]
  33 String8          0    4    0  missing from index  00 r[4]=' missing from index '
  34 Concat           4    3    3               00 r[3]=r[3]+r[4]
  35 String8          0    4    0 sqlite_autoindex_t1_2 00 r[4]='sqlite_autoindex_t1_2'
  36 Concat           4    3    3               00 r[3]=r[3]+r[4]
  37 ResultRow        3    1    0               00 output=r[3]
  38 IfPos            1   47    0               00 if r[1]>0 then r[1]-=0, goto 47
  39 Halt             0    0    0               00 
  40 IsNull          11   47    0               00 if r[11]==NULL goto 47
  41 Next             2   43    0               00 
  42 Goto             0   47    0               00 
  43 IdxGT            2   47   11 1             00 key=r[11]
  44 AddImm           1   -1    0               00 r[1]=r[1]+-1
  45 String8          0    3    0 non-unique entry in index  00 r[3]='non-unique entry in index '
  46 Goto             0   35    0               00 
  47 Next             3   18    0               00 
  48 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
  49 IfPos            1   51    0               00 if r[1]>0 then r[1]-=0, goto 51
  50 Halt             0    0    0               00 
  51 Count            2    3    0               00 r[3]=count()
  52 Eq               8   57    3               90 if r[8]==r[3] goto 57
  53 AddImm           1   -1    0               00 r[1]=r[1]+-1
  54 String8          0    3    0 sqlite_autoindex_t1_2 00 r[3]='sqlite_autoindex_t1_2'
  55 Concat           3    2    7               00 r[7]=r[2]+r[3]
  56 ResultRow        7    1    0               00 output=r[7]
  57 IfPos            1   59    0               00 if r[1]>0 then r[1]-=0, goto 59
  58 Halt             0    0    0               00 
  59 IntegrityCk      2    1    1 ]             01 
  60 IsNull           2   65    0               00 if r[2]==NULL goto 65
  61 String8          0    3    0 *** in database temp ***
 00 r[3]='*** in database temp ***
'
  62 Move             2    4    1               00 r[4]=r[2]
  63 Concat           4    3    2               00 r[2]=r[3]+r[4]
  64 ResultRow        2    1    0               00 output=r[2]
  65 AddImm           1 -100    0               00 r[1]=r[1]+-100
  66 If               1   69    0               00 
  67 String8          0    3    0 ok            00 r[3]='ok'
  68 ResultRow        3    1    0               00 output=r[3]
  69 Halt             0    0    0               00 
  70 Transaction      0    0    2 0             01 usesStmtJournal=0
  71 Transaction      1    0    0 0             01 usesStmtJournal=0
  72 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  73 Goto             0    1    0               00 
SQL: [SELECT typeof( CAST (X'670068006900' AS text) ),  CAST (X'670068006900' AS text) 
;]
VDBE Program Listing:
   0 Init             0    6    0               00 Start at 6
   1 Function0        1    3    1 typeof(1)     01 r[1]=func(r[3])
   2 Blob             6    2    0 g             00 r[2]=g (len=6)
   3 Cast             2   66    0               00 affinity(r[2])
   4 ResultRow        1    2    0               00 output=r[1..2]
   5 Halt             0    0    0               00 
   6 Blob             6    3    0 g             00 r[3]=g (len=6)
   7 Cast             3   66    0               00 affinity(r[3])
   8 Goto             0    1    0               00 
SQL: [;
;CREATE TABLE y(c, i1, z,
      FOREIGN KEY (c, i1) REFERENCES a ON DELETE CASCADE ON UPDATE SET NULL
    );]
VDBE Program Listing:
   0 Init             0   30    0               00 Start at 30
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    3               00 
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
  16 NotExists        1   18    1               00 intkey=r[1]; pk
  17 Rowid            1    5    0               00 r[5]=rowid
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
  19 String8          0    6    0 table         00 r[6]='table'
  20 String8          0    7    0 y             00 r[7]='y'
  21 String8          0    8    0 y             00 r[8]='y'
  22 Copy             2    9    0               00 r[9]=r[2]
  23 String8          0   10    0 CREATE TABLE y(c, i1, z,
      FOREIGN KEY (c, i1) REFERENCES a ON DELETE CASCADE ON UPDATE SET NULL
    ) 00 r[10]='CREATE TABLE y(c, i1, z,
      FOREIGN KEY (c, i1) REFERENCES a ON DELETE CASCADE ON UPDATE 
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
  26 Close            1    0    0               00 
  27 SetCookie        0    1    3               00 
  28 ParseSchema      0    0    0 tbl_name='y' AND type!='trigger' 00 
  29 Halt             0    0    0               00 
  30 Transaction      0    1    2 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   16    0               00 Start at 16
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
   7 Column           0    0    3               00 r[3]=sqlite_master.type
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
   9 Column           0    1    5               00 r[5]=sqlite_master.name
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
  12 ResultRow        5    3    0               00 output=r[5..7]
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  16 Transaction      0    0    3 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 y             00 r[2]='y'
  19 String8          0    4    0 trigger       00 r[4]='trigger'
  20 Goto             0    1    0               00 
SQL: [;WITH RECURSIVE
    a(b) AS (VALUES(1) UNION ALL SELECT b+1 FROM a WHERE b<5)
  INSERT INTO a(b) SELECT b FROM a;]
VDBE Program Listing:
   0 Init             0   71    0               00 Start at 71
   1 InitCoroutine   13   31    2               00 
   2 InitCoroutine   14   24    3               00 a
   3 OpenPseudo       1   15    1               00 1 columns in r[15]
   4 OpenEphemeral    2    1    0               00 nColumn=1; Queue table
   5 Integer          1   16    0               00 r[16]=1
   6 MakeRecord      16    1   17               00 r[17]=mkrec(r[16])
   7 NewRowid         2   18    0               00 r[18]=rowid
   8 Insert           2   17   18               08 intkey=r[18] data=r[17]
   9 Rewind           2   23    0               00 
  10 NullRow          1    0    0               00 
  11 RowData          2   15    0               00 r[15]=data
  12 Delete           2    0    0               00 
  13 Column           1    0   19               00 r[19]=
  14 Yield           14    0    0               00 
  15 Explain          3    0    0 SCAN TABLE a  00 
  16 Column           1    0   18               00 r[18]=a.b
  17 Ge              20   22   18 (BINARY)      51 if r[20]>=r[18] goto 22
  18 Add             22   18   16               00 r[16]=r[22]+r[18]
  19 MakeRecord      16    1   17               00 r[17]=mkrec(r[16])
  20 NewRowid         2   21    0               00 r[21]=rowid
  21 Insert           2   17   21               08 intkey=r[21] data=r[17]
  22 Goto             0    9    0               00 
  23 EndCoroutine    14    0    0               00 
  24 Explain          0    0    0 SCAN SUBQUERY 1 00 
  25 InitCoroutine   14    0    3               00 
  26 Yield           14   30    0               00 next row of "a"
  27 Copy            19    5    0               00 r[5]=r[19]; a.b
  28 Yield           13    0    0               00 
  29 Goto             0   26    0               00 
  30 EndCoroutine    13    0    0               00 
  31 OpenWrite        3    5    0 8             00 root=5 iDb=0; a
  32 Yield           13   63    0               00 
  33 Copy             5    4    0               00 r[4]=r[5]
  34 NotNull          4   36    0               00 if r[4]!=NULL goto 36
  35 NewRowid         3    4    2               00 r[4]=rowid
  36 MustBeInt        4    0    0               00 
  37 MemMax           2    4    0               00 r[2]=max(r[2],r[4])
  38 SoftNull         5    0    0               00 r[5]=NULL
  39 HaltIfNull    1299    2    6 a.t1i1        01 if r[6]=null halt
  40 HaltIfNull    1299    2    7 a.t2i1        01 if r[7]=null halt
  41 HaltIfNull    1299    2    8 a.tr1         01 if r[8]=null halt
  42 HaltIfNull    1299    2    9 a.tr2         01 if r[9]=null halt
  43 HaltIfNull    1299    2   10 a.t0          01 if r[10]=null halt
  44 HaltIfNull    1299    2   11 a.c0          01 if r[11]=null halt
  45 HaltIfNull    1299    2   12 a.c1          01 if r[12]=null halt
  46 Noop             0    0    0               00 begin IN expr
  47 SCopy            7   23    0               00 r[23]=r[7]
  48 BitAnd          23   23   24               00 r[24]=r[23]&r[23]
  49 Eq              23   53   25 (BINARY)      42 if r[23]==r[25] goto 53
  50 Eq              23   53   26 (BINARY)      42 if r[23]==r[26] goto 53
  51 IsNull          24   55    0               00 if r[24]==NULL goto 55
  52 Goto             0   54    0               00 end IN expr
  53 Goto             0   55    0               00 
  54 Halt           275    2    0 a             03 
  55 Lt              27   57   12 (BINARY)      44 if r[27]<r[12] goto 57
  56 Le              28   58   12 (BINARY)      54 if r[28]<=r[12] goto 58
  57 Halt           275    2    0 a             03 
  58 NotExists        3   60    4               00 intkey=r[4]
  59 Halt          1555    2    0 a.b           02 
  60 MakeRecord       5    8   23 DDBEEEDD      00 r[23]=mkrec(r[5..12])
  61 Insert           3   23    4 a             13 intkey=r[4] data=r[23]
  62 Goto             0   32    0               00 
  63 Close            3    0    0               00 
  64 OpenWrite        0    6    0 2             00 root=6 iDb=0; sqlite_sequence
  65 NotNull          3   67    0               00 if r[3]!=NULL goto 67
  66 NewRowid         0    3    0               00 r[3]=rowid
  67 MakeRecord       1    2   24               00 r[24]=mkrec(r[1..2])
  68 Insert           0   24    3               08 intkey=r[3] data=r[24]
  69 Noop             0    0    0               00 
  70 Halt             0    0    0               00 
  71 Transaction      0    1    3 0             01 usesStmtJournal=1
  72 TableLock        0    5    1 a             00 iDb=0 root=5 write=1
  73 TableLock        0    6    1 sqlite_sequence 00 iDb=0 root=6 write=1
  74 OpenRead         0    6    0 2             00 root=6 iDb=0; sqlite_sequence
  75 String8          0    1    0 a             00 r[1]='a'
  76 Null             0    2    3               00 r[2..3]=NULL
  77 Rewind           0   85    0               00 
  78 Column           0    0    2               00 r[2]=
  79 Ne               1   83    2               10 if r[1]!=r[2] goto 83
  80 Rowid            0    3    0               00 r[3]=rowid
  81 Column           0    1    2               00 r[2]=
  82 Goto             0   85    0               00 
  83 Next             0   78    0               00 
  84 Integer          0    2    0               00 r[2]=0
  85 Close            0    0    0               00 
  86 Integer          5   20    0               00 r[20]=5
  87 Integer          1   22    0               00 r[22]=1
  88 Integer          0    6    0               00 r[6]=0
  89 String8          0    7    0 N             00 r[7]='N'
  90 Real             0    8    0 0             00 r[8]=0
  91 Real             0    9    0 0             00 r[9]=0
  92 Real             0   10    0 0             00 r[10]=0
  93 Integer       2010   11    0               00 r[11]=2010
  94 Integer          0   12    0               00 r[12]=0
  95 String8          0   25    0 t0            00 r[25]='t0'
  96 String8          0   26    0 N             00 r[26]='N'
  97 Integer          0   27    0               00 r[27]=0
  98 Integer         12   28    0               00 r[28]=12
  99 Goto             0    1    0               00 
SQL: [;COMMIT
;]
VDBE Program Listing:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       1    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT typeof(CAST('-9.223372036e15' AS NUMERIC)) AS type, printf('%.5e',CAST('-9.223372036e15' AS NUMERIC)) AS value
;]
VDBE Program Listing:
   0 Init             0    5    0               00 Start at 5
   1 Function0        1    3    1 typeof(1)     01 r[1]=func(r[3])
   2 Function0        3    4    2 printf(-1)    02 r[2]=func(r[4..5])
   3 ResultRow        1    2    0               00 output=r[1..2]
   4 Halt             0    0    0               00 
   5 String8          0    3    0 -9.223372036e15 00 r[3]='-9.223372036e15'
   6 Cast             3   67    0               00 affinity(r[3])
   7 String8          0    4    0 %.5e          00 r[4]='%.5e'
   8 String8          0    5    0 -9.223372036e15 00 r[5]='-9.223372036e15'
   9 Cast             5   67    0               00 affinity(r[5])
  10 Goto             0    1    0               00 
SQL: [BEGIN;]
VDBE Program Listing:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;ROLLBACK;]
VDBE Program Listing:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       1    1    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT typeof( CAST(13.0 AS NUMERIC) ),  CAST(13.0 AS NUMERIC) 
;]
VDBE Program Listing:
   0 Init             0    6    0               00 Start at 6
   1 Function0        1    3    1 typeof(1)     01 r[1]=func(r[3])
   2 Real             0    2    0 13            00 r[2]=13
   3 Cast             2   67    0               00 affinity(r[2])
   4 ResultRow        1    2    0               00 output=r[1..2]
   5 Halt             0    0    0               00 
   6 Real             0    3    0 13            00 r[3]=13
   7 Cast             3   67    0               00 affinity(r[3])
   8 Goto             0    1    0               00 
SQL: [VACUUM;]
VDBE Program Listing:
   0 Init             0    0    0               00 Start at 0
   1 Vacuum           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [ATTACH '' AS vacuum_db;]
VDBE Program Listing:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0               00 r[1]=''
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
   3 Null             0    3    0               00 r[3]=NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
VDBE Program Listing:
   0 Init             0   12    0               00 Start at 12
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
   8 ResultRow        1    3    0               00 output=r[1..3]
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
  12 Transaction      2    0    0 0             00 usesStmtJournal=0
  13 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  14 Goto             0    1    0               00 
SQL: [PRAGMA vacuum_db.synchronous=OFF]
VDBE Program Listing:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Program Listing:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT 'CREATE TABLE vacuum_db.' || substr(sql,14)   FROM sqlite_master WHERE type='table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Program Listing:
   0 Init             0   19    0               00 Start at 19
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   17    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
   6 Column           0    1    3               00 r[3]=sqlite_master.name
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
  10 Integer          1    5    0               00 r[5]=1
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
  13 Function0        2    9    5 substr(2)     02 r[5]=func(r[9..10])
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
  15 ResultRow        7    1    0               00 output=r[7]
  16 Next             0    4    0               01 
  17 Close            0    0    0               00 
  18 Halt             0    0    0               00 
  19 Transaction      0    0    3 0             01 usesStmtJournal=0
  20 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  21 String8          0    2    0 table         00 r[2]='table'
  22 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
  23 Integer          0    6    0               00 r[6]=0
  24 String8          0    8    0 CREATE TABLE vacuum_db. 00 r[8]='CREATE TABLE vacuum_db.'
  25 Integer         14   10    0               00 r[10]=14
  26 Goto             0    1    0               00 
SQL: [CREATE TABLE vacuum_db.t1(x INTEGER PRIMARY KEY UNIQUE, t2 UNIQUE) WITHOUT ROWID]
VDBE Program Listing:
   0 Init             0   54    0               00 Start at 54
   1 ReadCookie       2    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        2    2    4               00 
   4 SetCookie        2    5    3               00 
   5 CreateIndex      2    2    0               00 r[2]=root iDb=2
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Noop             0   23    0               00 
  12 CreateIndex      2    4    0               00 r[4]=root iDb=2
  13 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
  15 String8          0    6    0 index         00 r[6]='index'
  16 String8          0    7    0 sqlite_autoindex_t1_1 00 r[7]='sqlite_autoindex_t1_1'
  17 String8          0    8    0 t1            00 r[8]='t1'
  18 Copy             4    9    0               00 r[9]=r[4]
  19 Null             0   10    0               00 r[10]=NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
  22 Close            1    0    0               00 
  23 Noop             0   35    0               00 
  24 CreateIndex      2   12    0               00 r[12]=root iDb=2
  25 OpenWrite        2    1    2 5             00 root=1 iDb=2; sqlite_master
  26 NewRowid         2   13    0               00 r[13]=rowid
  27 String8          0   14    0 index         00 r[14]='index'
  28 String8          0   15    0 sqlite_autoindex_t1_2 00 r[15]='sqlite_autoindex_t1_2'
  29 String8          0   16    0 t1            00 r[16]='t1'
  30 Copy            12   17    0               00 r[17]=r[12]
  31 Null             0   18    0               00 r[18]=NULL
  32 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
  33 Insert           2   19   13               18 intkey=r[13] data=r[19]
  34 Close            2    0    0               00 
  35 Close            0    0    0               00 
  36 Null             0   20   21               00 r[20..21]=NULL
  37 OpenWrite        3    1    2 5             00 root=1 iDb=2; sqlite_master
  38 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  39 MustBeInt        1   42    0               00 
  40 NotExists        3   42    1               00 intkey=r[1]; pk
  41 Rowid            3   21    0               00 r[21]=rowid
  42 IsNull          21   50    0               00 if r[21]==NULL goto 50
  43 String8          0   22    0 table         00 r[22]='table'
  44 String8          0   23    0 t1            00 r[23]='t1'
  45 String8          0   24    0 t1            00 r[24]='t1'
  46 Copy             2   25    0               00 r[25]=r[2]
  47 String8          0   26    0 CREATE TABLE t1(x INTEGER PRIMARY KEY UNIQUE, t2 UNIQUE) WITHOUT ROWID 00 r[26]='CREATE TABLE t1(x INTEGER PRIMARY KEY UNIQUE, t2 UNIQUE) WITHOUT ROWID'
  48 MakeRecord      22    5   27 BBBDB         00 r[27]=mkrec(r[22..26])
  49 Insert           3   27   21               00 intkey=r[21] data=r[27]
  50 Close            3    0    0               00 
  51 SetCookie        2    1    1               00 
  52 ParseSchema      2    0    0 tbl_name='t1' AND type!='trigger' 00 
  53 Halt             0    0    0               00 
  54 Transaction      2    1    0 0             01 usesStmtJournal=0
  55 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  56 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   16    0               00 Start at 16
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
   7 Column           0    0    3               00 r[3]=sqlite_master.type
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
   9 Column           0    1    5               00 r[5]=sqlite_master.name
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
  12 ResultRow        5    3    0               00 output=r[5..7]
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  16 Transaction      2    0    1 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
  19 String8          0    4    0 trigger       00 r[4]='trigger'
  20 Goto             0    1    0               00 
SQL: [CREATE TABLE vacuum_db.a (b INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,t1i1 INTEGER NOT NULL DEFAULT 0,t2i1 TEXT NOT NULL DEFAULT 'N' CHECK (t2i1 IN ('t0', 'N')),tr1 FLOAT NOT NULL DEFAULT 0.0,tr2 FLOAT NOT NULL DEFAULT 0.0,t0 FLOAT NOT NULL DEFAULT 0.0,c0 INTEGER NOT NULL DEFAULT 2010,c1 INTEGER NOT NULL DEFAULT 0 CHECK (c1>=0 AND c1<=12))]
VDBE Program Listing:
   0 Init             0   58    0               00 Start at 58
   1 ReadCookie       2    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        2    2    4               00 
   4 SetCookie        2    5    3               00 
   5 CreateTable      2    2    0               00 r[2]=root iDb=2
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
  13 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
  16 NotExists        1   18    1               00 intkey=r[1]; pk
  17 Rowid            1    5    0               00 r[5]=rowid
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
  19 String8          0    6    0 table         00 r[6]='table'
  20 String8          0    7    0 a             00 r[7]='a'
  21 String8          0    8    0 a             00 r[8]='a'
  22 Copy             2    9    0               00 r[9]=r[2]
  23 String8          0   10    0 CREATE TABLE a (b INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,t1i1 INTEGER NOT NULL DEFAULT 0,t2i1 TEXT NOT NULL DEFAULT 'N' CHECK (t2i1 IN ('t0', 'N')),tr1 FLOAT NOT NULL DEFAULT 0.0,tr2 FLOAT NOT NULL DEFAULT 0.0,t0 FLOAT NOT NULL DEFAULT 0.0,c0 INTEGER NOT NULL DEFAULT 2010,c1 INTEGER NOT NULL DEFAULT 0 CHECK (c1>=0 AND c1<=12)) 00 r[10]='CREATE TABLE a (b INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,t1i1 INTEGER NOT NULL DEFAULT 0
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
  26 Close            1    0    0               00 
  27 SetCookie        2    1    2               00 
  28 ReadCookie       2   14    2               00 
  29 If              14   32    0               00 
  30 SetCookie        2    2    4               00 
  31 SetCookie        2    5    3               00 
  32 CreateTable      2   13    0               00 r[13]=root iDb=2
  33 OpenWrite        0    1    2 5             00 root=1 iDb=2
  34 NewRowid         0   12    0               00 r[12]=rowid
  35 Blob             6   14    0              00 r[14]= (len=6)
  36 Insert           0   14   12               08 intkey=r[12] data=r[14]
  37 Close            0    0    0               00 
  38 Close            0    0    0               00 
  39 Null             0   15   16               00 r[15..16]=NULL
  40 OpenWrite        2    1    2 5             00 root=1 iDb=2; sqlite_master
  41 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  42 MustBeInt       12   45    0               00 
  43 NotExists        2   45   12               00 intkey=r[12]; pk
  44 Rowid            2   16    0               00 r[16]=rowid
  45 IsNull          16   53    0               00 if r[16]==NULL goto 53
  46 String8          0   17    0 table         00 r[17]='table'
  47 String8          0   18    0 sqlite_sequence 00 r[18]='sqlite_sequence'
  48 String8          0   19    0 sqlite_sequence 00 r[19]='sqlite_sequence'
  49 Copy            13   20    0               00 r[20]=r[13]
  50 String8          0   21    0 CREATE TABLE sqlite_sequence(name,seq) 00 r[21]='CREATE TABLE sqlite_sequence(name,seq)'
  51 MakeRecord      17    5   22 BBBDB         00 r[22]=mkrec(r[17..21])
  52 Insert           2   22   16               00 intkey=r[16] data=r[22]
  53 Close            2    0    0               00 
  54 SetCookie        2    1    2               00 
  55 ParseSchema      2    0    0 tbl_name='sqlite_sequence' AND type!='trigger' 00 
  56 ParseSchema      2    0    0 tbl_name='a' AND type!='trigger' 00 
  57 Halt             0    0    0               00 
  58 Transaction      2    1    1 0             01 usesStmtJournal=0
  59 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  60 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   16    0               00 Start at 16
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
   7 Column           0    0    3               00 r[3]=sqlite_master.type
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
   9 Column           0    1    5               00 r[5]=sqlite_master.name
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
  12 ResultRow        5    3    0               00 output=r[5..7]
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  16 Transaction      2    0    2 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
  19 String8          0    4    0 trigger       00 r[4]='trigger'
  20 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   16    0               00 Start at 16
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
   7 Column           0    0    3               00 r[3]=sqlite_master.type
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
   9 Column           0    1    5               00 r[5]=sqlite_master.name
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
  12 ResultRow        5    3    0               00 output=r[5..7]
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  16 Transaction      2    0    2 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 a             00 r[2]='a'
  19 String8          0    4    0 trigger       00 r[4]='trigger'
  20 Goto             0    1    0               00 
SQL: [CREATE TABLE vacuum_db.y(c, i1, z,
      FOREIGN KEY (c, i1) REFERENCES a ON DELETE CASCADE ON UPDATE SET NULL
    )]
VDBE Program Listing:
   0 Init             0   30    0               00 Start at 30
   1 ReadCookie       2    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        2    2    4               00 
   4 SetCookie        2    5    3               00 
   5 CreateTable      2    2    0               00 r[2]=root iDb=2
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
  13 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
  16 NotExists        1   18    1               00 intkey=r[1]; pk
  17 Rowid            1    5    0               00 r[5]=rowid
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
  19 String8          0    6    0 table         00 r[6]='table'
  20 String8          0    7    0 y             00 r[7]='y'
  21 String8          0    8    0 y             00 r[8]='y'
  22 Copy             2    9    0               00 r[9]=r[2]
  23 String8          0   10    0 CREATE TABLE y(c, i1, z,
      FOREIGN KEY (c, i1) REFERENCES a ON DELETE CASCADE ON UPDATE SET NULL
    ) 00 r[10]='CREATE TABLE y(c, i1, z,
      FOREIGN KEY (c, i1) REFERENCES a ON DELETE CASCADE ON UPDATE 
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
  26 Close            1    0    0               00 
  27 SetCookie        2    1    3               00 
  28 ParseSchema      2    0    0 tbl_name='y' AND type!='trigger' 00 
  29 Halt             0    0    0               00 
  30 Transaction      2    1    2 0             01 usesStmtJournal=0
  31 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  32 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   16    0               00 Start at 16
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
   7 Column           0    0    3               00 r[3]=sqlite_master.type
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
   9 Column           0    1    5               00 r[5]=sqlite_master.name
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
  12 ResultRow        5    3    0               00 output=r[5..7]
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  16 Transaction      2    0    3 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 y             00 r[2]='y'
  19 String8          0    4    0 trigger       00 r[4]='trigger'
  20 Goto             0    1    0               00 
SQL: [SELECT 'CREATE INDEX vacuum_db.' || substr(sql,14)  FROM sqlite_master WHERE sql LIKE 'CREATE INDEX %' ]
VDBE Program Listing:
   0 Init             0   14    0               00 Start at 14
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
   6 IfNot            1   11    1               00 
   7 Column           0    4    6               00 r[6]=sqlite_master.sql
   8 Function0        2    6    1 substr(2)     02 r[1]=func(r[6..7])
   9 Concat           1    5    4               00 r[4]=r[5]+r[1]
  10 ResultRow        4    1    0               00 output=r[4]
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
  14 Transaction      0    0    3 0             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE INDEX % 00 r[2]='CREATE INDEX %'
  17 String8          0    5    0 CREATE INDEX vacuum_db. 00 r[5]='CREATE INDEX vacuum_db.'
  18 Integer         14    7    0               00 r[7]=14
  19 Goto             0    1    0               00 
SQL: [SELECT 'CREATE UNIQUE INDEX vacuum_db.' || substr(sql,21)   FROM sqlite_master WHERE sql LIKE 'CREATE UNIQUE INDEX %']
VDBE Program Listing:
   0 Init             0   14    0               00 Start at 14
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
   6 IfNot            1   11    1               00 
   7 Column           0    4    6               00 r[6]=sqlite_master.sql
   8 Function0        2    6    1 substr(2)     02 r[1]=func(r[6..7])
   9 Concat           1    5    4               00 r[4]=r[5]+r[1]
  10 ResultRow        4    1    0               00 output=r[4]
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
  14 Transaction      0    0    3 0             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE UNIQUE INDEX % 00 r[2]='CREATE UNIQUE INDEX %'
  17 String8          0    5    0 CREATE UNIQUE INDEX vacuum_db. 00 r[5]='CREATE UNIQUE INDEX vacuum_db.'
  18 Integer         21    7    0               00 r[7]=21
  19 Goto             0    1    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';'FROM main.sqlite_master WHERE type = 'table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Program Listing:
   0 Init             0   24    0               00 Start at 24
   1 OpenRead         0    1    0 4             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   22    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
   6 Column           0    1    3               00 r[3]=sqlite_master.name
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
  10 Integer          1    5    0               00 r[5]=1
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
  12 Copy             3   12    0               00 r[12]=r[3]
  13 Function0        0   12   11 quote(1)      01 r[11]=func(r[12])
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
  16 Copy             3   12    0               00 r[12]=r[3]
  17 Function0        0   12    9 quote(1)      01 r[9]=func(r[12])
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
  20 ResultRow        7    1    0               00 output=r[7]
  21 Next             0    4    0               01 
  22 Close            0    0    0               00 
  23 Halt             0    0    0               00 
  24 Transaction      0    0    3 0             01 usesStmtJournal=0
  25 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  26 String8          0    2    0 table         00 r[2]='table'
  27 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
  28 Integer          0    6    0               00 r[6]=0
  29 String8          0   10    0 INSERT INTO vacuum_db. 00 r[10]='INSERT INTO vacuum_db.'
  30 String8          0   13    0  SELECT * FROM main. 00 r[13]=' SELECT * FROM main.'
  31 String8          0   14    0 ;             00 r[14]=';'
  32 Goto             0    1    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f965cf1b859 in __GI_abort () at abort.c:79
#2  0x00007f965cf1b729 in __assert_fail_base (fmt=0x7f965d0b1588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x2069a8 "pPk->tnum==pTab->tnum", file=0x222c23 "sqlite3.c", line=105908, function=<optimized out>)
    at assert.c:92
#3  0x00007f965cf2cfd6 in __GI___assert_fail (assertion=0x2069a8 "pPk->tnum==pTab->tnum", file=0x222c23 "sqlite3.c", line=105908, function=0x223709 "void sqlite3OpenTable(Parse *, int, int, Table *, int)") at assert.c:101
#4  0x0000000000315400 in sqlite3OpenTable (pParse=0xe74440, iCur=<optimized out>, iDb=<optimized out>, pTab=0xe81180, opcode=103) at sqlite3.c:105908
#5  0x0000000000343885 in sqlite3Insert (pParse=<optimized out>, pTabList=<optimized out>, pSelect=<optimized out>, pColumn=0x0, onError=<optimized out>) at sqlite3.c:107932
#6  0x00000000003066b3 in yy_reduce (yypParser=0xe8a980, yyruleno=<optimized out>) at sqlite3.c:133484
#7  0x00000000002fef8e in sqlite3Parser (yyp=0xe8a980, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#8  0x00000000002fc544 in sqlite3RunParser (pParse=0xe74440, zSql=0xe82ff0 "INSERT INTO vacuum_db.'t1' SELECT * FROM main.'t1';", pzErrMsg=0x7ffcace76828) at sqlite3.c:135186
#9  0x00000000002facac in sqlite3Prepare (db=0xe61850, zSql=0xe82ff0 "INSERT INTO vacuum_db.'t1' SELECT * FROM main.'t1';", nBytes=<optimized out>, saveSqlFlag=0, pReprepare=<optimized out>, ppStmt=0x7ffcace768e8, 
    pzTail=0x0) at sqlite3.c:112596
#10 0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0xe61850, zSql=0xe82ff0 "INSERT INTO vacuum_db.'t1' SELECT * FROM main.'t1';", nBytes=-1, saveSqlFlag=0, pOld=0x0, ppStmt=<optimized out>, pzTail=0x0) at sqlite3.c:112688
#11 0x00000000003fb16b in execSql (db=0xe61850, pzErrMsg=0xe75a28, zSql=<optimized out>) at sqlite3.c:112752
#12 0x00000000003fb5ec in execExecSql (db=0xe61850, pzErrMsg=0xe75a28, zSql=<optimized out>) at sqlite3.c:120748
#13 0x00000000003de49e in sqlite3VdbeExec (p=<optimized out>) at sqlite3.c:120939
#14 0x000000000028b140 in sqlite3_step (pStmt=<optimized out>) at sqlite3.c:75131
#15 0x000000000024b5e9 in main (argc=1, argv=0x7ffcace77088) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 45484] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
