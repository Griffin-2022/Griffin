GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000459,sig:06,src:022856+022264,time:11338902,execs:1780411,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL-trace: ;PRAGMA sql_trace=on;

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f090b5a8859 in __GI_abort () at abort.c:79
#2  0x00007f090b5a8729 in __assert_fail_base (fmt=0x7f090b73e588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x2069a8 "pPk->tnum==pTab->tnum", file=0x222c23 "sqlite3.c", line=105908, function=<optimized out>)
    at assert.c:92
#3  0x00007f090b5b9fd6 in __GI___assert_fail (assertion=0x2069a8 "pPk->tnum==pTab->tnum", file=0x222c23 "sqlite3.c", line=105908, function=0x223709 "void sqlite3OpenTable(Parse *, int, int, Table *, int)") at assert.c:101
#4  0x0000000000315400 in sqlite3OpenTable (pParse=0x1761a10, iCur=<optimized out>, iDb=<optimized out>, pTab=0x17777a0, opcode=102) at sqlite3.c:105908
#5  0x000000000036b357 in analyzeOneTable (pParse=<optimized out>, pTab=0x17777a0, pOnlyIdx=0x0, iStatCur=0, iMem=19, iTab=<optimized out>) at sqlite3.c:95089
#6  0x000000000036a277 in analyzeDatabase (pParse=0x1761a10, iDb=0) at sqlite3.c:95381
#7  0x0000000000356fc3 in sqlite3Analyze (pParse=0x1761a10, pName1=0x0, pName2=0x0) at sqlite3.c:95444
#8  0x0000000000302bcc in yy_reduce (yypParser=0x17832a0, yyruleno=<optimized out>) at sqlite3.c:133984
#9  0x00000000002fef8e in sqlite3Parser (yyp=0x17832a0, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#10 0x00000000002fc544 in sqlite3RunParser (pParse=0x1761a10, 
    zSql=0x1785060 ";ANALYZE;PRAGMA foreign_key_check(tr1)\n;PRAGMA foreign_key_check(tr1)\n;SELECT idx, stat FROM sqlite_stat1 ORDER BY idx;ATTACH '' AS vacuum_db\n;PRAGMA foreign_key_check(b)\n;SELECT*FROM\"vacuum_db\".sqlit"..., pzErrMsg=0x7ffec0520df8) at sqlite3.c:135186
#11 0x00000000002fac4e in sqlite3Prepare (db=0x1760850, 
    zSql=0x1763e0d ";ANALYZE;PRAGMA foreign_key_check(tr1)\n;PRAGMA foreign_key_check(tr1)\n;SELECT idx, stat FROM sqlite_stat1 ORDER BY idx;ATTACH '' AS vacuum_db\n;PRAGMA foreign_key_check(b)\n;SELECT*FROM\"vacuum_db\".sqlit"..., nBytes=<optimized out>, saveSqlFlag=1, pReprepare=<optimized out>, ppStmt=0x7ffec0520f28, pzTail=0x7ffec0520f10) at sqlite3.c:112589
#12 0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0x1760850, 
    zSql=0x1763e0d ";ANALYZE;PRAGMA foreign_key_check(tr1)\n;PRAGMA foreign_key_check(tr1)\n;SELECT idx, stat FROM sqlite_stat1 ORDER BY idx;ATTACH '' AS vacuum_db\n;PRAGMA foreign_key_check(b)\n;SELECT*FROM\"vacuum_db\".sqlit"..., nBytes=4556, saveSqlFlag=1, pOld=0x0, ppStmt=<optimized out>, pzTail=0x7ffec0520f10) at sqlite3.c:112688
#13 0x000000000028f38c in sqlite3_prepare_v2 (db=0x2, zSql=0x7ffec0520760 "", nBytes=0, ppStmt=0x7ffec0520f28, pzTail=<optimized out>) at sqlite3.c:112764
#14 0x000000000024b100 in main (argc=1, argv=0x7ffec05210d8) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 43834] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
