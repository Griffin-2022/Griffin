GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000200,sig:06,src:022776+021981,time:4594317,execs:541163,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0   57    0               00 Start at 57
  57 Transaction      0    0    4 0             01 usesStmtJournal=0
  58 Transaction      1    0    0 0             01 usesStmtJournal=0
  59 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  60 Integer         10   11    0               00 r[11]=10
REG[11] =  i:10
  61 Goto             0    1    0               00 
   1 Integer        100    1    0               00 r[1]=100
REG[1] =  i:100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
REG[1] =  i:100
   4 IntegrityCk      2    5    1 [3,2,4,1]     00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
REG[2] =  NULL
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
REG[1] =  i:100
  12 OpenRead         1    2    0 1             00 root=2 iDb=0; t1
  13 OpenRead         2    4    0 k(2,,)        00 root=4 iDb=0; b
  14 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  15 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  16 Rewind           1   35    0               00 
  35 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  36 IfPos            1   38    0               00 if r[1]>0 then r[1]-=0, goto 38
REG[1] =  i:100
  38 Count            2    3    0               00 r[3]=count()
REG[3] =  i:0
  39 Eq               8   44    3               90 if r[8]==r[3] goto 44
REG[8] =  i:0
REG[3] =  i:0
  44 IfPos            1   46    0               00 if r[1]>0 then r[1]-=0, goto 46
REG[1] =  i:100
  46 IntegrityCk      2    1    1 ]             01 
  47 IsNull           2   52    0               00 if r[2]==NULL goto 52
REG[2] =  NULL
  52 AddImm           1 -100    0               00 r[1]=r[1]+-100
REG[1] =  i:100
  53 If               1   56    0               00 
REG[1] =  i:0
  54 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
  55 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
  56 Halt             0    0    0               00 
SQL: [ALTER TABLE t2 ADD tr1
    
;]
VDBE Trace:
   0 Init             0   36    0               00 Start at 36
  36 Transaction      0    1    4 0             01 usesStmtJournal=0
  37 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  38 String8          0    9    0 table         00 r[9]='table'
REG[9] =   t5[table](8)
  39 String8          0   11    0 t2            00 r[11]='t2'
REG[11] =   t2[t2](8)
  40 Integer          1   14    0               00 r[14]=1
REG[14] =  i:1
  41 Integer         22   15    0               00 r[15]=22
REG[15] =  i:22
  42 String8          0   16    0 ,             00 r[16]=', '
REG[16] =   t2[, ](8)
  43 String8          0   17    0 tr1           00 r[17]='tr1'
REG[17] =   t3[tr1](8)
  44 Integer         23   19    0               00 r[19]=23
REG[19] =  i:23
  45 Goto             0    1    0               00 
   1 SetCookie        0    1    5               00 
   2 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   3 OpenRead         0    1    0 2             00 root=1 iDb=0; sqlite_master
   4 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   5 Rewind           0   13    0               00 
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   7 Ne               9   12    8 (BINARY)      52 if r[9]!=r[8] goto 12
REG[9] =   t5[table](8)
REG[8] =   s5[table](8)
   8 Column           0    1   10               00 r[10]=sqlite_master.name
REG[10] =   s2[t1](8)
   9 Ne              11   12   10 (BINARY)      52 if r[11]!=r[10] goto 12
REG[11] =   t2[t2](8)
REG[10] =   s2[t1](8)
  12 Next             0    6    0               01 
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   7 Ne               9   12    8 (BINARY)      52 if r[9]!=r[8] goto 12
REG[9] =   t5[table](8)
REG[8] =   s5[table](8)
   8 Column           0    1   10               00 r[10]=sqlite_master.name
REG[10] =   s2[t2](8)
   9 Ne              11   12   10 (BINARY)      52 if r[11]!=r[10] goto 12
REG[11] =   t2[t2](8)
REG[10] =   s2[t2](8)
  10 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
  11 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:2
  12 Next             0    6    0               01 
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   7 Ne               9   12    8 (BINARY)      52 if r[9]!=r[8] goto 12
REG[9] =   t5[table](8)
REG[8] =   s5[index](8)
  12 Next             0    6    0               01 
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   7 Ne               9   12    8 (BINARY)      52 if r[9]!=r[8] goto 12
REG[9] =   t5[table](8)
REG[8] =   s5[table](8)
   8 Column           0    1   10               00 r[10]=sqlite_master.name
REG[10] =   s4[t1i1](8)
   9 Ne              11   12   10 (BINARY)      52 if r[11]!=r[10] goto 12
REG[11] =   t2[t2](8)
REG[10] =   s4[t1i1](8)
  12 Next             0    6    0               01 
  13 Close            0    0    0               00 
  14 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
  15 RowSetRead       1   31    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  16 NotExists        0   15    2               00 intkey=r[2]
REG[2] =  i:2
  17 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
  18 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t2](8)
  19 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
REG[5] =   s2[t2](8)
  20 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  21 Column           0    4   13               00 r[13]=sqlite_master.sql
REG[13] =   s55[CREATE TABLE t2](8)
  22 Function0        6   13   12 substr(3)     03 r[12]=func(r[13..15])
REG[13] =   s55[CREATE TABLE t2](8)
REG[14] =  i:1
REG[15] =  i:22
REG[12] =   s22[CREATE TABLE t2](8)
  23 Concat          16   12    8               00 r[8]=r[12]+r[16]
REG[16] =   t2[, ](8)
REG[12] =   s22[CREATE TABLE t2](8)
REG[8] =   s24[CREATE TABLE t2](8)
  24 Concat          17    8   10               00 r[10]=r[8]+r[17]
REG[17] =   t3[tr1](8)
REG[8] =   s24[CREATE TABLE t2](8)
REG[10] =   s27[CREATE TABLE t2](8)
  25 Column           0    4   18               00 r[18]=sqlite_master.sql
REG[18] =   s55[CREATE TABLE t2](8)
  26 Function0        2   18    8 substr(2)     02 r[8]=func(r[18..19])
REG[18] =   s55[CREATE TABLE t2](8)
REG[19] =  i:23
REG[8] =   s33[, CHECK(a BETWE](8)
  27 Concat           8   10    7               00 r[7]=r[10]+r[8]
REG[8] =   s33[, CHECK(a BETWE](8)
REG[10] =   s27[CREATE TABLE t2](8)
REG[7] =   s60[CREATE TABLE t2](8)
  28 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s77[071711110181057461626C6574327432.......tablet2t2](8)
  29 Insert           0    8    2               00 intkey=r[2] data=r[8]
REG[8] =  s77[071711110181057461626C6574327432.......tablet2t2](8)
REG[2] =  i:2
  30 Goto             0   15    0               00 
  15 RowSetRead       1   31    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  31 Close            0    0    0               00 
  32 SetCookie        0    2    4               00 
  33 DropTable        0    0    0 t2            00 
  34 ParseSchema      0    0    0 tbl_name='t2' 00 
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    5 0             00 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 t2            00 r[2]='t2'
REG[2] =   t2[t2](8)
  17 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t2[t2](8)
REG[1] =   s2[t1](8)
  11 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t2[t2](8)
REG[1] =   s2[t2](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t2](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:3
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s60[CREATE TABLE t2](8)
  10 ResultRow        3    3    0               00 output=r[3..5]
REG[3] =   s2[t2](8)
REG[4] =  i:3
REG[5] =   s60[CREATE TABLE t2](8)
  11 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t2[t2](8)
REG[1] =   s2[t1](8)
  11 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t1i1](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t2[t2](8)
REG[1] =   s4[t1i1](8)
  11 Next             0    5    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
  35 Halt             0    0    0               00 
SQL: [;
;REINDEX;]
VDBE Trace:
   0 Init             0   22    0               00 Start at 22
  22 Transaction      0    1    5 0             01 usesStmtJournal=0
  23 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  24 Integer         10    3    0               00 r[3]=10
REG[3] =  i:10
  25 Goto             0    1    0               00 
   1 SorterOpen       2    0    1 k(2,,)        00 
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Rewind           0   11    0               00 
  11 Clear            4    0    0               00 
  12 OpenWrite        1    4    0 k(2,,)        01 root=4 iDb=0
  13 SorterSort       2   18    0               00 
  18 Close            0    0    0               00 
  19 Close            1    0    0               00 
  20 Noop             2    0    0               00 
  21 Halt             0    0    0               00 
SQL: [;
;CREATE TABLE tr2(t0,c0);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    5 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:6
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:5
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:5
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:5
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:5
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:5
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 tr2           00 r[7]='tr2'
REG[7] =   t3[tr2](8)
  21 String8          0    8    0 tr2           00 r[8]='tr2'
REG[8] =   t3[tr2](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:6
  23 String8          0   10    0 CREATE TABLE tr2(t0,c0) 00 r[10]='CREATE TABLE tr2(t0,c0)'
REG[10] =   t23[CREATE TABLE tr](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s41[06171313013B7461626C657472327472.....;tabletr2tr](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s41[06171313013B7461626C657472327472.....;tabletr2tr](8)
REG[5] =  i:5
  26 Close            1    0    0               00 
  27 SetCookie        0    1    6               00 
  28 ParseSchema      0    0    0 tbl_name='tr2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 tr2           00 r[2]='tr2'
REG[2] =   t3[tr2](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t1i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s4[t1i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s3[tr2](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s3[tr2](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:6
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s23[CREATE TABLE tr](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s3[tr2](8)
REG[6] =  i:6
REG[7] =   s23[CREATE TABLE tr](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;
;CREATE TABLE c1(y,c);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    6 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:7
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:6
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:6
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:6
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:6
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:6
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 c1            00 r[7]='c1'
REG[7] =   t2[c1](8)
  21 String8          0    8    0 c1            00 r[8]='c1'
REG[8] =   t2[c1](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:7
  23 String8          0   10    0 CREATE TABLE c1(y,c) 00 r[10]='CREATE TABLE c1(y,c)'
REG[10] =   t20[CREATE TABLE c1](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s36[0617111101357461626C656331633107.....5tablec1c1.](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s36[0617111101357461626C656331633107.....5tablec1c1.](8)
REG[5] =  i:6
  26 Close            1    0    0               00 
  27 SetCookie        0    1    7               00 
  28 ParseSchema      0    0    0 tbl_name='c1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    7 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 c1            00 r[2]='c1'
REG[2] =   t2[c1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[c1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[c1](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[c1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t1i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[c1](8)
REG[1] =   s4[t1i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[c1](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[c1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[c1](8)
REG[1] =   s2[c1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[c1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:7
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s20[CREATE TABLE c1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[c1](8)
REG[6] =  i:7
REG[7] =   s20[CREATE TABLE c1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;INSERT INTO t2(a,a) VALUES(999, 'test1'), (999, 'test2');]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    1    7 0             01 usesStmtJournal=1
  22 TableLock        0    3    1 t2            00 iDb=0 root=3 write=1
  23 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  24 Integer       999999   10    0               00 r[10]=999999
REG[10] =  i:999999
  25 Goto             0    1    0               00 
   1 InitCoroutine    4    9    2               00 
   9 OpenWrite        0    3    0 2             00 root=3 iDb=0; t2
  10 Yield            4   19    0               00 
REG[4] =  i:1
REG[4] =  i:10
   2 Integer        999    5    0               00 r[5]=999
REG[5] =  i:999
   3 String8          0    6    0 test1         00 r[6]='test1'
REG[6] =   t5[test1](8)
   4 Yield            4    0    0               00 
REG[4] =  i:10
REG[4] =  i:4
  11 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
  12 SCopy            5    2    0               00 r[2]=r[5]
REG[2] =  i:999
  13 Lt               2   15    2 (BINARY)      42 if r[2]<r[2] goto 15

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fc71b3f3859 in __GI_abort () at abort.c:79
#2  0x00007fc71b3f3729 in __assert_fail_base (fmt=0x7fc71b589588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x20a915 "!(fg&(MEM_Str|MEM_Blob))", file=0x222c23 "sqlite3.c", line=68526, function=<optimized out>)
    at assert.c:92
#3  0x00007fc71b404fd6 in __GI___assert_fail (assertion=0x20a915 "!(fg&(MEM_Str|MEM_Blob))", file=0x222c23 "sqlite3.c", line=68526, function=0x21067c "int sqlite3VdbeMemStringify(Mem *, u8, u8)") at assert.c:101
#4  0x000000000027a9de in sqlite3VdbeMemStringify (pMem=0x89a2a0, enc=1 '\001', bForce=1 '\001') at sqlite3.c:68526
#5  0x00000000003c7fc0 in sqlite3VdbeExec (p=<optimized out>) at sqlite3.c:78710
#6  0x000000000028b140 in sqlite3_step (pStmt=<optimized out>) at sqlite3.c:75131
#7  0x000000000024b5e9 in main (argc=1, argv=0x7ffea4f89458) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 41752] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
