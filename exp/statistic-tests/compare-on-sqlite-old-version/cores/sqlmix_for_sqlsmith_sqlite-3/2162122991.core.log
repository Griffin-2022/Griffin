GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000239,sig:06,src:023088+020976,time:5364960,execs:645792,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
;PRAGMA count_changes = 1;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [CREATE TABLE b(t1i1 INTEGER UNIQUE PRIMARY KEY, t2i1 UNIQUE) WITHOUT ROWID;]
VDBE Trace:
   0 Init             0   60    0               00 Start at 60
  60 Transaction      0    1    2 0             01 usesStmtJournal=0
  61 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  62 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateIndex      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Noop             0   25    0               00 
  12 CreateIndex      0    4    0               00 r[4]=root iDb=0
REG[4] =  i:4
  13 Integer          0   11    0               00 r[11]=0
REG[11] =  i:0
  14 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  15 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:4
  16 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  17 String8          0    7    0 sqlite_autoindex_b_1 00 r[7]='sqlite_autoindex_b_1'
REG[7] =   t20[sqlite_autoinde](8)
  18 String8          0    8    0 b             00 r[8]='b'
REG[8] =   t1[b](8)
  19 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:4
  20 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  21 MakeRecord       6    5   12 BBBDB         00 r[12]=mkrec(r[6..10])
REG[12] =  s33[0617350F0100696E64657873716C6974..5...indexsqlit](8)
  22 Insert           1   12    5               18 intkey=r[5] data=r[12]
REG[12] =  s33[0617350F0100696E64657873716C6974..5...indexsqlit](8)
REG[5] =  i:4
  23 AddImm          11    1    0               00 r[11]=r[11]+1
REG[11] =  i:0
  24 Close            1    0    0               00 
  25 Noop             0   39    0               00 
  26 CreateIndex      0   13    0               00 r[13]=root iDb=0
REG[13] =  i:5
  27 Integer          0   20    0               00 r[20]=0
REG[20] =  i:0
  28 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  29 NewRowid         2   14    0               00 r[14]=rowid
REG[14] =  i:5
  30 String8          0   15    0 index         00 r[15]='index'
REG[15] =   t5[index](8)
  31 String8          0   16    0 sqlite_autoindex_b_2 00 r[16]='sqlite_autoindex_b_2'
REG[16] =   t20[sqlite_autoinde](8)
  32 String8          0   17    0 b             00 r[17]='b'
REG[17] =   t1[b](8)
  33 Copy            13   18    0               00 r[18]=r[13]
REG[18] =  i:5
  34 Null             0   19    0               00 r[19]=NULL
REG[19] =  NULL
  35 MakeRecord      15    5   21 BBBDB         00 r[21]=mkrec(r[15..19])
REG[21] =  s33[0617350F0100696E64657873716C6974..5...indexsqlit](8)
  36 Insert           2   21   14               18 intkey=r[14] data=r[21]
REG[21] =  s33[0617350F0100696E64657873716C6974..5...indexsqlit](8)
REG[14] =  i:5
  37 AddImm          20    1    0               00 r[20]=r[20]+1
REG[20] =  i:0
  38 Close            2    0    0               00 
  39 Close            0    0    0               00 
  40 Null             0   22   23               00 r[22..23]=NULL
REG[22] =  NULL
  41 OpenWrite        3    1    0 5             00 root=1 iDb=0; sqlite_master
  42 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  43 MustBeInt        1   46    0               00 
REG[1] =  i:3
  44 NotExists        3   46    1               00 intkey=r[1]; pk
REG[1] =  i:3
  45 Rowid            3   23    0               00 r[23]=rowid
REG[23] =  i:3
  46 Integer          0   30    0               00 r[30]=0
REG[30] =  i:0
  47 IsNull          23   56    0               00 if r[23]==NULL goto 56
REG[23] =  i:3
  48 String8          0   24    0 table         00 r[24]='table'
REG[24] =   t5[table](8)
  49 String8          0   25    0 b             00 r[25]='b'
REG[25] =   t1[b](8)
  50 String8          0   26    0 b             00 r[26]='b'
REG[26] =   t1[b](8)
  51 Copy             2   27    0               00 r[27]=r[2]
REG[27] =  i:3
  52 String8          0   28    0 CREATE TABLE b(t1i1 INTEGER UNIQUE PRIMARY KEY, t2i1 UNIQUE) WITHOUT ROWID 00 r[28]='CREATE TABLE b(t1i1 INTEGER UNIQUE PRIMARY KEY, t2i1 UNIQUE) WITHOUT ROWID'
REG[28] =   t74[CREATE TABLE b(](8)
  53 MakeRecord      24    5   29 BBBDB         00 r[29]=mkrec(r[24..28])
REG[29] =  s89[07170F0F0181217461626C6562620343......!tablebb.C](8)
  54 Insert           3   29   23               00 intkey=r[23] data=r[29]
REG[29] =  s89[07170F0F0181217461626C6562620343......!tablebb.C](8)
REG[23] =  i:3
  55 AddImm          30    1    0               00 r[30]=r[30]+1
REG[30] =  i:0
  56 Close            3    0    0               00 
  57 SetCookie        0    1    3               00 
  58 ParseSchema      0    0    0 tbl_name='b' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 b             00 r[2]='b'
REG[2] =   t1[b](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[b](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[b](8)
REG[1] =   s1[x](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[b](8)
REG[1] =   s1[b](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[b](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s74[CREATE TABLE b(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[b](8)
REG[6] =  i:3
REG[7] =   s74[CREATE TABLE b(](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[b](8)
REG[1] =   s1[b](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s20[sqlite_autoinde](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =  NULL
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s20[sqlite_autoinde](8)
REG[6] =  i:4
REG[7] =  NULL
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[b](8)
REG[1] =   s1[b](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s20[sqlite_autoinde](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =  NULL
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s20[sqlite_autoinde](8)
REG[6] =  i:5
REG[7] =  NULL
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  59 Halt             0    0    0               00 
SQL: [;CREATE TABLE tr1(tr2 INTEGER PRIMARY KEY, t0 REFERENCES x);]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      0    1    3 0             01 usesStmtJournal=0
  33 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  34 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:6
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:6
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:6
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:6
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:6
  18 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  19 IsNull           5   28    0               00 if r[5]==NULL goto 28
REG[5] =  i:6
  20 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  21 String8          0    7    0 tr1           00 r[7]='tr1'
REG[7] =   t3[tr1](8)
  22 String8          0    8    0 tr1           00 r[8]='tr1'
REG[8] =   t3[tr1](8)
  23 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:6
  24 String8          0   10    0 CREATE TABLE tr1(tr2 INTEGER PRIMARY KEY, t0 REFERENCES x) 00 r[10]='CREATE TABLE tr1(tr2 INTEGER PRIMARY KEY, t0 REFERENCES x)'
REG[10] =   t58[CREATE TABLE tr](8)
  25 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s77[071713130181017461626C6574723174.......tabletr1t](8)
  26 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s77[071713130181017461626C6574723174.......tabletr1t](8)
REG[5] =  i:6
  27 AddImm          12    1    0               00 r[12]=r[12]+1
REG[12] =  i:0
  28 Close            1    0    0               00 
  29 SetCookie        0    1    4               00 
  30 ParseSchema      0    0    0 tbl_name='tr1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 tr1           00 r[2]='tr1'
REG[2] =   t3[tr1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s1[x](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s3[tr1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s3[tr1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:6
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s58[CREATE TABLE tr](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s3[tr1](8)
REG[6] =  i:6
REG[7] =   s58[CREATE TABLE tr](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  31 Halt             0    0    0               00 
SQL: [PRAGMA integrity_check 
;]
VDBE Trace:
   0 Init             0   70    0               00 Start at 70
  70 Transaction      0    0    4 0             01 usesStmtJournal=0
  71 Transaction      1    0    0 0             01 usesStmtJournal=0
  72 TableLock        0    3    0 b             00 iDb=0 root=3 write=0
  73 Goto             0    1    0               00 
   1 Integer        100    1    0               00 r[1]=100
REG[1] =  i:100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
REG[1] =  i:100
   4 IntegrityCk      2    6    1 [5,4,2,0,1]   00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
REG[2] =   z20[Page 3 is never](8)
   6 String8          0    3    0 *** in database main ***
 00 r[3]='*** in database main ***
'
REG[3] =   t25[*** in database](8)
   7 Move             2    4    1               00 r[4]=r[2]
REG[4] =   z20[Page 3 is never](8)
   8 Concat           4    3    2               00 r[2]=r[3]+r[4]
REG[4] =   z20[Page 3 is never](8)
REG[3] =   t25[*** in database](8)
REG[2] =   s45[*** in database](8)
   9 ResultRow        2    1    0               00 output=r[2]
REG[2] =   s45[*** in database](8)
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
REG[1] =  i:99
  12 OpenRead         2    5    0 k(2,,)        00 root=5 iDb=0; sqlite_autoindex_b_2
  13 OpenRead         3    4    0 k(1,)         00 root=4 iDb=0; sqlite_autoindex_b_1
  14 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  15 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  16 Integer          0    9    0               00 r[9]=0
REG[9] =  i:0
  17 Rewind           3   48    0               00 
  48 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  49 IfPos            1   51    0               00 if r[1]>0 then r[1]-=0, goto 51
REG[1] =  i:99
  51 Count            2    3    0               00 r[3]=count()
REG[3] =  i:0
  52 Eq               8   57    3               90 if r[8]==r[3] goto 57
REG[8] =  i:0
REG[3] =  i:0
  57 IfPos            1   59    0               00 if r[1]>0 then r[1]-=0, goto 59
REG[1] =  i:99
  59 IntegrityCk      2    1    1 ]             01 
  60 IsNull           2   65    0               00 if r[2]==NULL goto 65
REG[2] =  NULL
  65 AddImm           1 -100    0               00 r[1]=r[1]+-100
REG[1] =  i:99
  66 If               1   69    0               00 
REG[1] =  i:-1
  69 Halt             0    0    0               00 
SQL: [PRAGMA page_size=1024;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [;
;SELECT t2 FROM x WHERE t2 IN(2, 4, 5) ORDER BY t2 DESC;]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      0    0    4 0             01 usesStmtJournal=0
  21 TableLock        0    2    0 x             00 iDb=0 root=2 write=0
  22 Goto             0    1    0               00 
   1 Noop             1    3    0               00 
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; x
   3 Explain          0    0    0 SEARCH TABLE x USING INTEGER PRIMARY KEY (rowid=?) 00 
   4 Once             0   10    0               00 
   5 OpenEphemeral    3    0    0               00 nColumn=0
   6 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   7 InsertInt        3    3    2               00 intkey=2 data=r[3]
REG[3] =  NULL
   8 InsertInt        3    3    4               00 intkey=4 data=r[3]
REG[3] =  NULL
   9 InsertInt        3    3    5               00 intkey=5 data=r[3]
REG[3] =  NULL
  10 Last             3   18    0               00 
  11 Rowid            3    1    0               00 r[1]=rowid
REG[1] =  i:5
  12 IsNull           1   17    0               00 if r[1]==NULL goto 17
REG[1] =  i:5
  13 MustBeInt        1   17    0               00 
REG[1] =  i:5
  14 NotExists        0   17    1               00 intkey=r[1]; pk
REG[1] =  i:5
  17 PrevIfOpen       3   11    0               00 
  11 Rowid            3    1    0               00 r[1]=rowid
REG[1] =  i:4
  12 IsNull           1   17    0               00 if r[1]==NULL goto 17
REG[1] =  i:4
  13 MustBeInt        1   17    0               00 
REG[1] =  i:4
  14 NotExists        0   17    1               00 intkey=r[1]; pk
REG[1] =  i:4
  17 PrevIfOpen       3   11    0               00 
  11 Rowid            3    1    0               00 r[1]=rowid
REG[1] =  i:2
  12 IsNull           1   17    0               00 if r[1]==NULL goto 17
REG[1] =  i:2
  13 MustBeInt        1   17    0               00 
REG[1] =  i:2
  14 NotExists        0   17    1               00 intkey=r[1]; pk
REG[1] =  i:2
  17 PrevIfOpen       3   11    0               00 
  18 Close            0    0    0               00 
  19 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f6f66e3f859 in __GI_abort () at abort.c:79
#2  0x00007f6f66e3f729 in __assert_fail_base (fmt=0x7f6f66fd5588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x2069a8 "pPk->tnum==pTab->tnum", file=0x222c23 "sqlite3.c", line=105908, function=<optimized out>)
    at assert.c:92
#3  0x00007f6f66e50fd6 in __GI___assert_fail (assertion=0x2069a8 "pPk->tnum==pTab->tnum", file=0x222c23 "sqlite3.c", line=105908, function=0x223709 "void sqlite3OpenTable(Parse *, int, int, Table *, int)") at assert.c:101
#4  0x0000000000315400 in sqlite3OpenTable (pParse=0xa26440, iCur=<optimized out>, iDb=<optimized out>, pTab=0xa279a0, opcode=102) at sqlite3.c:105908
#5  0x0000000000356014 in sqlite3RefillIndex (pParse=0xa26440, pIndex=0xa38650, memRootPage=1) at sqlite3.c:99603
#6  0x000000000031f419 in sqlite3CreateIndex (pParse=<optimized out>, pName1=<optimized out>, pName2=<optimized out>, pTblName=<optimized out>, pList=<optimized out>, onError=<optimized out>, pStart=<optimized out>, 
    pPIWhere=0x0, sortOrder=<optimized out>, ifNotExist=<optimized out>) at sqlite3.c:100180
#7  0x00000000003022e9 in yy_reduce (yypParser=0xa39f80, yyruleno=<optimized out>) at sqlite3.c:133800
#8  0x00000000002fef8e in sqlite3Parser (yyp=0xa39f80, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#9  0x00000000002fc544 in sqlite3RunParser (pParse=0xa26440, 
    zSql=0xa31b00 ";\n;CREATE INDEX c0 ON b(t2i1 ASC,  t2i1 DESC) \n;;\n;SELECT a, a FROM x WHERE a = 3 AND a IN (SELECT a FROM x) ORDER BY a DESC, a ASC;;\n;SELECT a, a FROM x WHERE a = 2 AND a IN (2, 4, 5) ORDER BY a ASC,"..., pzErrMsg=0x7ffc3ac01618) at sqlite3.c:135186
#10 0x00000000002fac4e in sqlite3Prepare (db=0xa13850, 
    zSql=0xa14649 ";\n;CREATE INDEX c0 ON b(t2i1 ASC,  t2i1 DESC) \n;;\n;SELECT a, a FROM x WHERE a = 3 AND a IN (SELECT a FROM x) ORDER BY a DESC, a ASC;;\n;SELECT a, a FROM x WHERE a = 2 AND a IN (2, 4, 5) ORDER BY a ASC,"..., nBytes=<optimized out>, saveSqlFlag=1, pReprepare=<optimized out>, ppStmt=0x7ffc3ac01748, pzTail=0x7ffc3ac01730) at sqlite3.c:112589
#11 0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0xa13850, 
    zSql=0xa14649 ";\n;CREATE INDEX c0 ON b(t2i1 ASC,  t2i1 DESC) \n;;\n;SELECT a, a FROM x WHERE a = 3 AND a IN (SELECT a FROM x) ORDER BY a DESC, a ASC;;\n;SELECT a, a FROM x WHERE a = 2 AND a IN (2, 4, 5) ORDER BY a ASC,"..., nBytes=499, saveSqlFlag=1, pOld=0x0, ppStmt=<optimized out>, pzTail=0x7ffc3ac01730) at sqlite3.c:112688
#12 0x000000000028f38c in sqlite3_prepare_v2 (db=0x2, zSql=0x7ffc3ac00ec0 "", nBytes=0, ppStmt=0x7ffc3ac01748, pzTail=<optimized out>) at sqlite3.c:112764
#13 0x000000000024b100 in main (argc=1, argv=0x7ffc3ac018f8) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 42025] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
