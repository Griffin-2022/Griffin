GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000443,sig:06,src:020821+021838,time:21233425,execs:7051046,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT randomblob($pgsz)
;]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 Variable         1    2    0 $pgsz         00 r[2]=parameter(1,$pgsz)
REG[2] =  NULL
   5 Goto             0    1    0               00 
   1 Function0        1    2    1 randomblob(1) 01 r[1]=func(r[2])
REG[2] =  NULL
REG[1] =  z1[E3.](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  z1[E3.](8)
   3 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    0 0             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [CREATE TABLE t2(x,t1,a);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    0 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:1
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:1
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:1
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t2            00 r[7]='t2'
REG[7] =   t2[t2](8)
  21 String8          0    8    0 t2            00 r[8]='t2'
REG[8] =   t2[t2](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  23 String8          0   10    0 CREATE TABLE t2(x,t1,a) 00 r[10]='CREATE TABLE t2(x,t1,a)'
REG[10] =   t23[CREATE TABLE t2](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s39[06171111013B7461626C657432743202.....;tablet2t2.](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s39[06171111013B7461626C657432743202.....;tablet2t2.](8)
REG[5] =  i:1
  26 Close            1    0    0               00 
  27 SetCookie        0    1    1               00 
  28 ParseSchema      0    0    0 tbl_name='t2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    1 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t2            00 r[2]='t2'
REG[2] =   t2[t2](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t2](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t2](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s23[CREATE TABLE t2](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t2](8)
REG[6] =  i:2
REG[7] =   s23[CREATE TABLE t2](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [CREATE TABLE b(c TEXT, CHECK(c=+c));]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    1 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:2
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:2
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:2
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 b             00 r[7]='b'
REG[7] =   t1[b](8)
  21 String8          0    8    0 b             00 r[8]='b'
REG[8] =   t1[b](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  23 String8          0   10    0 CREATE TABLE b(c TEXT, CHECK(c=+c)) 00 r[10]='CREATE TABLE b(c TEXT, CHECK(c=+c))'
REG[10] =   t35[CREATE TABLE b(](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s49[06170F0F01537461626C656262034352.....Stablebb.CR](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s49[06170F0F01537461626C656262034352.....Stablebb.CR](8)
REG[5] =  i:2
  26 Close            1    0    0               00 
  27 SetCookie        0    1    2               00 
  28 ParseSchema      0    0    0 tbl_name='b' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 b             00 r[2]='b'
REG[2] =   t1[b](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[b](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[b](8)
REG[1] =   s1[b](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[b](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s35[CREATE TABLE b(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[b](8)
REG[6] =  i:3
REG[7] =   s35[CREATE TABLE b(](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;INSERT INTO t2(x) VALUES (1);]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    1    2 0             01 usesStmtJournal=0
   9 TableLock        0    2    1 t2            00 iDb=0 root=2 write=1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 3             00 root=2 iDb=0; t2
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 MakeRecord       2    3    5               00 r[5]=mkrec(r[2..4])
REG[5] =  s4[04090000....](8)
   5 Insert           0    5    1 t2            1B intkey=r[1] data=r[5]
REG[5] =  s4[04090000....](8)
REG[1] =  i:1
   6 Noop             0    0    0               00 
   7 Halt             0    0    0               00 
SQL: [ATTACH '' AS vacuum_db
;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0               00 r[1]=''
REG[1] =   t0[](8)
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
REG[2] =   t9[vacuum_db](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t0[](8)
REG[2] =   t9[vacuum_db](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      2    0    0 0             00 usesStmtJournal=0
  13 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [;CREATE TABLE t1w(wordcount,word,cnt);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    2 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:3
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:3
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:3
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t1w           00 r[7]='t1w'
REG[7] =   t3[t1w](8)
  21 String8          0    8    0 t1w           00 r[8]='t1w'
REG[8] =   t3[t1w](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  23 String8          0   10    0 CREATE TABLE t1w(wordcount,word,cnt) 00 r[10]='CREATE TABLE t1w(wordcount,word,cnt)'
REG[10] =   t36[CREATE TABLE t1](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s54[0617131301557461626C657431777431.....Utablet1wt1](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s54[0617131301557461626C657431777431.....Utablet1wt1](8)
REG[5] =  i:3
  26 Close            1    0    0               00 
  27 SetCookie        0    1    3               00 
  28 ParseSchema      0    0    0 tbl_name='t1w' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1w           00 r[2]='t1w'
REG[2] =   t3[t1w](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[t1w](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[t1w](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1w](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[t1w](8)
REG[1] =   s3[t1w](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s3[t1w](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s36[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s3[t1w](8)
REG[6] =  i:4
REG[7] =   s36[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [INSERT INTO t2 VALUES(4000000000,'a','x');]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    1    3 0             01 usesStmtJournal=0
  11 TableLock        0    2    1 t2            00 iDb=0 root=2 write=1
  12 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 3             00 root=2 iDb=0; t2
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   3 Int64            0    2    0 4000000000    00 r[2]=4000000000
REG[2] =  i:4000000000
   4 String8          0    3    0 a             00 r[3]='a'
REG[3] =   t1[a](8)
   5 String8          0    4    0 x             00 r[4]='x'
REG[4] =   t1[x](8)
   6 MakeRecord       2    3    5               00 r[5]=mkrec(r[2..4])
REG[5] =  s12[04050F0F0000EE6B28006178.......k(.ax](8)
   7 Insert           0    5    1 t2            1B intkey=r[1] data=r[5]
REG[5] =  s12[04050F0F0000EE6B28006178.......k(.ax](8)
REG[1] =  i:2
   8 Noop             0    0    0               00 
   9 Halt             0    0    0               00 
SQL: [;
;SELECT c FROM b WHERE c<1000000000000 ORDER BY 1;]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      0    0    3 0             01 usesStmtJournal=0
  21 TableLock        0    3    0 b             00 iDb=0 root=3 write=0
  22 Int64            0    2    0 1000000000000 00 r[2]=1000000000000
REG[2] =  i:1000000000000
  23 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0    3    0 1             00 root=3 iDb=0; b
   3 Explain          0    0    0 SCAN TABLE b  00 
   4 Rewind           0   12    0               00 
  12 Close            0    0    0               00 
  13 OpenPseudo       2    6    3               00 3 columns in r[6]
  14 SorterSort       1   19    0               00 
  19 Halt             0    0    0               00 
SQL: [;WITH RECURSIVE x(x) AS (VALUES(1) UNION SELECT x+1 FROM x WHERE x<30)
  INSERT INTO t2(x,t1,x)
    SELECT x, printf('ab%04xyz',x), random() FROM x;]
VDBE Trace:
   0 Init             0   49    0               00 Start at 49
  49 Transaction      0    1    3 0             01 usesStmtJournal=0
  50 TableLock        0    2    1 t2            00 iDb=0 root=2 write=1
  51 Integer         30   12    0               00 r[12]=30
REG[12] =  i:30
  52 Integer          1   14    0               00 r[14]=1
REG[14] =  i:1
  53 String8          0   18    0 ab%04xyz      00 r[18]='ab%04xyz'
REG[18] =   t8[ab%04xyz](8)
  54 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  55 Goto             0    1    0               00 
   1 InitCoroutine    5   39    2               00 
  39 OpenWrite        4    2    0 3             00 root=2 iDb=0; t2
  40 Yield            5   47    0               00 
REG[5] =  i:1
REG[5] =  i:40
   2 InitCoroutine    6   29    3               00 x
  29 Explain          0    0    0 SCAN SUBQUERY 1 00 
  30 InitCoroutine    6    0    3               00 
  31 Yield            6   38    0               00 next row of "x"
REG[6] =  i:2
REG[6] =  i:31
   3 OpenPseudo       1    7    1               00 1 columns in r[7]
   4 OpenEphemeral    2    1    0               00 nColumn=1; Queue table
   5 OpenEphemeral    3    1    0 k(1,B)        00 nColumn=1
   6 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
   7 MakeRecord       8    1    9               00 r[9]=mkrec(r[8])
REG[9] =  s2[0209..](8)
   8 Found            3   12    9 0             00 key=r[9]
REG[9] =  s2[0209..](8)
   9 IdxInsert        3    9    0               00 key=r[9]
REG[9] =  s2[0209..](8)
  10 NewRowid         2   10    0               00 r[10]=rowid
REG[10] =  i:1
  11 Insert           2    9   10               08 intkey=r[10] data=r[9]
REG[9] =  s2[0209..](8)
REG[10] =  i:1
  12 Rewind           2   28    0               00 
  13 NullRow          1    0    0               00 
  14 RowData          2    7    0               00 r[7]=data
REG[7] =  s2[0209..](8)
  15 Delete           2    0    0               00 
  16 Column           1    0   11               00 r[11]=
REG[11] =  i:1
  17 Yield            6    0    0               00 
REG[6] =  i:31
REG[6] =  i:17
  32 Copy            11   15    0               00 r[15]=r[11]; x.x
REG[15] =  i:1
  33 Copy            15   19    0               00 r[19]=r[15]
REG[19] =  i:1
  34 Function0        1   18   16 printf(-1)    02 r[16]=func(r[18..19])
REG[18] =   t8[ab%04xyz](8)
REG[19] =  i:1
REG[16] =   s8[ab0001yz](8)
  35 Function0        0    0   17 random(0)     00 r[17]=func(r[0])
REG[17] =  i:-6648391648071928235
  36 Yield            5    0    0               00 
REG[5] =  i:40
REG[5] =  i:36
  41 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:3
  42 SCopy           15    2    0               00 r[2]=r[15]
REG[2] =  i:1
  43 SCopy           16    3    0               00 r[3]=r[16]
REG[3] =   e8[ab0001yz](8)
  44 MakeRecord       2    3   20               00 r[20]=mkrec(r[2..4])
REG[20] =  s12[04091D00616230303031797A....ab0001yz](8)
  45 Insert           4   20    1 t2            1B intkey=r[1] data=r[20]
REG[20] =  s12[04091D00616230303031797A....ab0001yz](8)
REG[1] =  i:3
  46 Goto             0   40    0               00 
  40 Yield            5   47    0               00 
REG[5] =  i:36
REG[5] =  i:40
  37 Goto             0   31    0               00 
  31 Yield            6   38    0               00 next row of "x"
REG[6] =  i:17
REG[6] =  i:31
  18 Explain          3    0    0 SCAN TABLE x  00 
  19 Column           1    0   10               00 r[10]=x.x
REG[10] =  i:1
  20 Ge              12   27   10 (BINARY)      51 if r[12]>=r[10] goto 27
REG[12] =  i:30
REG[10] =  i:1
  21 Add             14   10    8               00 r[8]=r[14]+r[10]
REG[14] =  i:1
REG[10] =  i:1
REG[8] =  i:2
  22 MakeRecord       8    1    9               00 r[9]=mkrec(r[8])
REG[9] =  s3[020102...](8)
  23 Found            3   27    9 0             00 key=r[9]
REG[9] =  s3[020102...](8)
  24 IdxInsert        3    9    0               00 key=r[9]
REG[9] =  s3[020102...](8)
  25 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  26 Insert           2    9   13               08 intkey=r[13] data=r[9]
REG[9] =  s3[020102...](8)
REG[13] =  i:1
  27 Goto             0   12    0               00 
  12 Rewind           2   28    0               00 
  13 NullRow          1    0    0               00 
  14 RowData          2    7    0               00 r[7]=data
REG[7] =  s3[020102...](8)
  15 Delete           2    0    0               00 
  16 Column           1    0   11               00 r[11]=
REG[11] =  i:2
  17 Yield            6    0    0               00 
REG[6] =  i:31
REG[6] =  i:17
  32 Copy            11   15    0               00 r[15]=r[11]; x.x
REG[15] =  i:2
  33 Copy            15   19    0               00 r[19]=r[15]
REG[19] =  i:2
  34 Function         1   18   16 printf(-1)    02 r[16]=func(r[18..19])
REG[18] =   t8[ab%04xyz](8)
REG[19] =  i:2
REG[16] =   s8[ab0002yz](8)
  35 Function         0    0   17 random(0)     00 r[17]=func(r[0])
REG[17] =  i:4012170844128830664
  36 Yield            5    0    0               00 
REG[5] =  i:40
REG[5] =  i:36
  41 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:4
  42 SCopy           15    2    0               00 r[2]=r[15]
REG[2] =  i:2
  43 SCopy           16    3    0               00 r[3]=r[16]
REG[3] =   e8[ab0002yz](8)
  44 MakeRecord       2    3   20               00 r[20]=mkrec(r[2..4])
REG[20] =  s13[04011D0002616230303032797A.....ab0002yz](8)
  45 Insert           4   20    1 t2            1B intkey=r[1] data=r[20]
REG[20] =  s13[04011D0002616230303032797A.....ab0002yz](8)
REG[1] =  i:4
  46 Goto             0   40    0               00 
  40 Yield            5   47    0               00 
REG[5] =  i:36
REG[5] =  i:40
  37 Goto             0   31    0               00 
  31 Yield            6   38    0               00 next row of "x"
REG[6] =  i:17
REG[6] =  i:31
  18 Explain          3    0    0 SCAN TABLE x  00 
  19 Column           1    0   10               00 r[10]=x.x
REG[10] =  i:2
  20 Ge              12   27   10 (BINARY)      51 if r[12]>=r[10] goto 27
REG[12] =  i:30
REG[10] =  i:2
  21 Add             14   10    8               00 r[8]=r[14]+r[10]
REG[14] =  i:1
REG[10] =  i:2
REG[8] =  i:3
  22 MakeRecord       8    1    9               00 r[9]=mkrec(r[8])
REG[9] =  s3[020103...](8)
  23 Found            3   27    9 0             00 key=r[9]
REG[9] =  s3[020103...](8)
  24 IdxInsert        3    9    0               00 key=r[9]
REG[9] =  s3[020103...](8)
  25 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  26 Insert           2    9   13               08 intkey=r[13] data=r[9]
REG[9] =  s3[020103...](8)
REG[13] =  i:1
  27 Goto             0   12    0               00 
  12 Rewind           2   28    0               00 
  13 NullRow          1    0    0               00 
  14 RowData          2    7    0               00 r[7]=data
REG[7] =  s3[020103...](8)
  15 Delete           2    0    0               00 
  16 Column           1    0   11               00 r[11]=
REG[11] =  i:3
  17 Yield            6    0    0               00 
REG[6] =  i:31
REG[6] =  i:17
  32 Copy            11   15    0               00 r[15]=r[11]; x.x
REG[15] =  i:3
  33 Copy            15   19    0               00 r[19]=r[15]
REG[19] =  i:3
  34 Function         1   18   16 printf(-1)    02 r[16]=func(r[18..19])
REG[18] =   t8[ab%04xyz](8)
REG[19] =  i:3
REG[16] =   s8[ab0003yz](8)
  35 Function         0    0   17 random(0)     00 r[17]=func(r[0])
REG[17] =  i:-1604730577461014964
  36 Yield            5    0    0               00 
REG[5] =  i:40
REG[5] =  i:36
  41 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:5
  42 SCopy           15    2    0               00 r[2]=r[15]
REG[2] =  i:3
  43 SCopy           16    3    0               00 r[3]=r[16]
REG[3] =   e8[ab0003yz](8)
  44 MakeRecord       2    3   20               00 r[20]=mkrec(r[2..4])
REG[20] =  s13[04011D0003616230303033797A.....ab0003yz](8)
  45 Insert           4   20    1 t2            1B intkey=r[1] data=r[20]
REG[20] =  s13[04011D0003616230303033797A.....ab0003yz](8)
REG[1] =  i:5
  46 Goto             0   40    0               00 
  40 Yield            5   47    0               00 
REG[5] =  i:36
REG[5] =  i:40
  37 Goto             0   31    0               00 
  31 Yield            6   38    0               00 next row of "x"
REG[6] =  i:17
REG[6] =  i:31
  18 Explain          3    0    0 SCAN TABLE x  00 
  19 Column           1    0   10               00 r[10]=x.x
REG[10] =  i:3
  20 Ge              12   27   10 (BINARY)      51 if r[12]>=r[10] goto 27
REG[12] =  i:30
REG[10] =  i:3
  21 Add             14   10    8               00 r[8]=r[14]+r[10]
REG[14] =  i:1
REG[10] =  i:3
REG[8] =  i:4
  22 MakeRecord       8    1    9               00 r[9]=mkrec(r[8])
REG[9] =  s3[020104...](8)
  23 Found            3   27    9 0             00 key=r[9]
REG[9] =  s3[020104...](8)
  24 IdxInsert        3    9    0               00 key=r[9]
REG[9] =  s3[020104...](8)
  25 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  26 Insert           2    9   13               08 intkey=r[13] data=r[9]
REG[9] =  s3[020104...](8)
REG[13] =  i:1
  27 Goto             0   12    0               00 
  12 Rewind           2   28    0               00 
  13 NullRow          1    0    0               00 
  14 RowData          2    7    0               00 r[7]=data
REG[7] =  s3[020104...](8)
  15 Delete           2    0    0               00 
  16 Column           1    0   11               00 r[11]=
REG[11] =  i:4
  17 Yield            6    0    0               00 
REG[6] =  i:31
REG[6] =  i:17
  32 Copy            11   15    0               00 r[15]=r[11]; x.x
REG[15] =  i:4
  33 Copy            15   19    0               00 r[19]=r[15]
REG[19] =  i:4
  34 Function         1   18   16 printf(-1)    02 r[16]=func(r[18..19])
REG[18] =   t8[ab%04xyz](8)
REG[19] =  i:4
REG[16] =   s8[ab0004yz](8)
  35 Function         0    0   17 random(0)     00 r[17]=func(r[0])
REG[17] =  i:-7369542737275931755
  36 Yield            5    0    0               00 
REG[5] =  i:40
REG[5] =  i:36
  41 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:6
  42 SCopy           15    2    0               00 r[2]=r[15]
REG[2] =  i:4
  43 SCopy           16    3    0               00 r[3]=r[16]
REG[3] =   e8[ab0004yz](8)
  44 MakeRecord       2    3   20               00 r[20]=mkrec(r[2..4])
REG[20] =  s13[04011D0004616230303034797A.....ab0004yz](8)
  45 Insert           4   20    1 t2            1B intkey=r[1] data=r[20]
REG[20] =  s13[04011D0004616230303034797A.....ab0004yz](8)
REG[1] =  i:6
  46 Goto             0   40    0               00 
  40 Yield            5   47    0               00 
REG[5] =  i:36
REG[5] =  i:40
  37 Goto             0   31    0               00 
  31 Yield            6   38    0               00 next row of "x"
REG[6] =  i:17
REG[6] =  i:31
  18 Explain          3    0    0 SCAN TABLE x  00 
  19 Column           1    0   10               00 r[10]=x.x
REG[10] =  i:4
  20 Ge              12   27   10 (BINARY)      51 if r[12]>=r[10] goto 27
REG[12] =  i:30
REG[10] =  i:4
  21 Add             14   10    8               00 r[8]=r[14]+r[10]
REG[14] =  i:1
REG[10] =  i:4
REG[8] =  i:5
  22 MakeRecord       8    1    9               00 r[9]=mkrec(r[8])
REG[9] =  s3[020105...](8)
  23 Found            3   27    9 0             00 key=r[9]
REG[9] =  s3[020105...](8)
  24 IdxInsert        3    9    0               00 key=r[9]
REG[9] =  s3[020105...](8)
  25 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  26 Insert           2    9   13               08 intkey=r[13] data=r[9]
REG[9] =  s3[020105...](8)
REG[13] =  i:1
  27 Goto             0   12    0               00 
  12 Rewind           2   28    0               00 
  13 NullRow          1    0    0               00 
  14 RowData          2    7    0               00 r[7]=data
REG[7] =  s3[020105...](8)
  15 Delete           2    0    0               00 
  16 Column           1    0   11               00 r[11]=
REG[11] =  i:5
  17 Yield            6    0    0               00 
REG[6] =  i:31
REG[6] =  i:17
  32 Copy            11   15    0               00 r[15]=r[11]; x.x
REG[15] =  i:5
  33 Copy            15   19    0               00 r[19]=r[15]
REG[19] =  i:5
  34 Function         1   18   16 printf(-1)    02 r[16]=func(r[18..19])
REG[18] =   t8[ab%04xyz](8)
REG[19] =  i:5
REG[16] =   s8[ab0005yz](8)
  35 Function         0    0   17 random(0)     00 r[17]=func(r[0])
REG[17] =  i:-384689701904268439
  36 Yield            5    0    0               00 
REG[5] =  i:40
REG[5] =  i:36
  41 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:7
  42 SCopy           15    2    0               00 r[2]=r[15]
REG[2] =  i:5
  43 SCopy           16    3    0               00 r[3]=r[16]
REG[3] =   e8[ab0005yz](8)
  44 MakeRecord       2    3   20               00 r[20]=mkrec(r[2..4])
REG[20] =  s13[04011D0005616230303035797A.....ab0005yz](8)
  45 Insert           4   20    1 t2            1B intkey=r[1] data=r[20]
REG[20] =  s13[04011D0005616230303035797A.....ab0005yz](8)
REG[1] =  i:7
  46 Goto             0   40    0               00 
  40 Yield            5   47    0               00 
REG[5] =  i:36
REG[5] =  i:40
  37 Goto             0   31    0               00 
  31 Yield            6   38    0               00 next row of "x"
REG[6] =  i:17
REG[6] =  i:31
  18 Explain          3    0    0 SCAN TABLE x  00 
  19 Column           1    0   10               00 r[10]=x.x
REG[10] =  i:5
  20 Ge              12   27   10 (BINARY)      51 if r[12]>=r[10] goto 27
REG[12] =  i:30
REG[10] =  i:5
  21 Add             14   10    8               00 r[8]=r[14]+r[10]
REG[14] =  i:1
REG[10] =  i:5
REG[8] =  i:6
  22 MakeRecord       8    1    9               00 r[9]=mkrec(r[8])
REG[9] =  s3[020106...](8)
  23 Found            3   27    9 0             00 key=r[9]
REG[9] =  s3[020106...](8)
  24 IdxInsert        3    9    0               00 key=r[9]
REG[9] =  s3[020106...](8)
  25 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  26 Insert           2    9   13               08 intkey=r[13] data=r[9]
REG[9] =  s3[020106...](8)
REG[13] =  i:1
  27 Goto             0   12    0               00 
  12 Rewind           2   28    0               00 
  13 NullRow          1    0    0               00 
  14 RowData          2    7    0               00 r[7]=data
REG[7] =  s3[020106...](8)
  15 Delete           2    0    0               00 
  16 Column           1    0   11               00 r[11]=
REG[11] =  i:6
  17 Yield            6    0    0               00 
REG[6] =  i:31
REG[6] =  i:17
  32 Copy            11   15    0               00 r[15]=r[11]; x.x
REG[15] =  i:6
  33 Copy            15   19    0               00 r[19]=r[15]
REG[19] =  i:6
  34 Function         1   18   16 printf(-1)    02 r[16]=func(r[18..19])
REG[18] =   t8[ab%04xyz](8)
REG[19] =  i:6
REG[16] =   s8[ab0006yz](8)
  35 Function         0    0   17 random(0)     00 r[17]=func(r[0])
REG[17] =  i:3781614879652721383
  36 Yield            5    0    0               00 
REG[5] =  i:40
REG[5] =  i:36
  41 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:8
  42 SCopy           15    2    0               00 r[2]=r[15]
REG[2] =  i:6
  43 SCopy           16    3    0               00 r[3]=r[16]
REG[3] =   e8[ab0006yz](8)
  44 MakeRecord       2    3   20               00 r[20]=mkrec(r[2..4])
REG[20] =  s13[04011D0006616230303036797A.....ab0006yz](8)
  45 Insert           4   20    1 t2            1B intkey=r[1] data=r[20]
REG[20] =  s13[04011D0006616230303036797A.....ab0006yz](8)
REG[1] =  i:8
  46 Goto             0   40    0               00 
  40 Yield            5   47    0               00 
REG[5] =  i:36
REG[5] =  i:40
  37 Goto             0   31    0               00 
  31 Yield            6   38    0               00 next row of "x"
REG[6] =  i:17
REG[6] =  i:31
  18 Explain          3    0    0 SCAN TABLE x  00 
  19 Column           1    0   10               00 r[10]=x.x
REG[10] =  i:6
  20 Ge              12   27   10 (BINARY)      51 if r[12]>=r[10] goto 27
REG[12] =  i:30
REG[10] =  i:6
  21 Add             14   10    8               00 r[8]=r[14]+r[10]
REG[14] =  i:1
REG[10] =  i:6
REG[8] =  i:7
  22 MakeRecord       8    1    9               00 r[9]=mkrec(r[8])
REG[9] =  s3[020107...](8)
  23 Found            3   27    9 0             00 key=r[9]
REG[9] =  s3[020107...](8)
  24 IdxInsert        3    9    0               00 key=r[9]
REG[9] =  s3[020107...](8)
  25 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  26 Insert           2    9   13               08 intkey=r[13] data=r[9]
REG[9] =  s3[020107...](8)
REG[13] =  i:1
  27 Goto             0   12    0               00 
  12 Rewind           2   28    0               00 
  13 NullRow          1    0    0               00 
  14 RowData          2    7    0               00 r[7]=data
REG[7] =  s3[020107...](8)
  15 Delete           2    0    0               00 
  16 Column           1    0   11               00 r[11]=
REG[11] =  i:7
  17 Yield            6    0    0               00 
REG[6] =  i:31
REG[6] =  i:17
  32 Copy            11   15    0               00 r[15]=r[11]; x.x
REG[15] =  i:7
  33 Copy            15   19    0               00 r[19]=r[15]
REG[19] =  i:7
  34 Function         1   18   16 printf(-1)    02 r[16]=func(r[18..19])
REG[18] =   t8[ab%04xyz](8)
REG[19] =  i:7
REG[16] =   s8[ab0007yz](8)
  35 Function         0    0   17 random(0)     00 r[17]=func(r[0])
REG[17] =  i:3211468556057143270
  36 Yield            5    0    0               00 
REG[5] =  i:40
REG[5] =  i:36
  41 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:9
  42 SCopy           15    2    0               00 r[2]=r[15]
REG[2] =  i:7
  43 SCopy           16    3    0               00 r[3]=r[16]
REG[3] =   e8[ab0007yz](8)
  44 MakeRecord       2    3   20               00 r[20]=mkrec(r[2..4])
REG[20] =  s13[04011D0007616230303037797A.....ab0007yz](8)
  45 Insert           4   20    1 t2            1B intkey=r[1] data=r[20]
REG[20] =  s13[04011D0007616230303037797A.....ab0007yz](8)
REG[1] =  i:9
  46 Goto             0   40    0               00 
  40 Yield            5   47    0               00 
REG[5] =  i:36
REG[5] =  i:40
  37 Goto             0   31    0               00 
  31 Yield            6   38    0               00 next row of "x"
REG[6] =  i:17
REG[6] =  i:31
  18 Explain          3    0    0 SCAN TABLE x  00 
  19 Column           1    0   10               00 r[10]=x.x
REG[10] =  i:7
  20 Ge              12   27   10 (BINARY)      51 if r[12]>=r[10] goto 27
REG[12] =  i:30
REG[10] =  i:7
  21 Add             14   10    8               00 r[8]=r[14]+r[10]
REG[14] =  i:1
REG[10] =  i:7
REG[8] =  i:8
  22 MakeRecord       8    1    9               00 r[9]=mkrec(r[8])
REG[9] =  s3[020108...](8)
  23 Found            3   27    9 0             00 key=r[9]
REG[9] =  s3[020108...](8)
  24 IdxInsert        3    9    0               00 key=r[9]
REG[9] =  s3[020108...](8)
  25 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  26 Insert           2    9   13               08 intkey=r[13] data=r[9]
REG[9] =  s3[020108...](8)
REG[13] =  i:1
  27 Goto             0   12    0               00 
  12 Rewind           2   28    0               00 
  13 NullRow          1    0    0               00 
  14 RowData          2    7    0               00 r[7]=data
REG[7] =  s3[020108...](8)
  15 Delete           2    0    0               00 
  16 Column           1    0   11               00 r[11]=
REG[11] =  i:8
  17 Yield            6    0    0               00 
REG[6] =  i:31
REG[6] =  i:17
  32 Copy            11   15    0               00 r[15]=r[11]; x.x
REG[15] =  i:8
  33 Copy            15   19    0               00 r[19]=r[15]
REG[19] =  i:8
  34 Function         1   18   16 printf(-1)    02 r[16]=func(r[18..19])
REG[18] =   t8[ab%04xyz](8)
REG[19] =  i:8
REG[16] =   s8[ab0008yz](8)
  35 Function         0    0   17 random(0)     00 r[17]=func(r[0])
REG[17] =  i:-2871965263616672218
  36 Yield            5    0    0               00 
REG[5] =  i:40
REG[5] =  i:36
  41 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:10
  42 SCopy           15    2    0               00 r[2]=r[15]
REG[2] =  i:8
  43 SCopy           16    3    0               00 r[3]=r[16]
REG[3] =   e8[ab0008yz](8)
  44 MakeRecord       2    3   20               00 r[20]=mkrec(r[2..4])
REG[20] =  s13[04011D0008616230303038797A.....ab0008yz](8)
  45 Insert           4   20    1 t2            1B intkey=r[1] data=r[20]
REG[20] =  s13[04011D0008616230303038797A.....ab0008yz](8)
REG[1] =  i:10
  46 Goto             0   40    0               00 
  40 Yield            5   47    0               00 
REG[5] =  i:36
REG[5] =  i:40
  37 Goto             0   31    0               00 
  31 Yield            6   38    0               00 next row of "x"
REG[6] =  i:17
REG[6] =  i:31
  18 Explain          3    0    0 SCAN TABLE x  00 
  19 Column           1    0   10               00 r[10]=x.x
REG[10] =  i:8
  20 Ge              12   27   10 (BINARY)      51 if r[12]>=r[10] goto 27
REG[12] =  i:30
REG[10] =  i:8
  21 Add             14   10    8               00 r[8]=r[14]+r[10]
REG[14] =  i:1
REG[10] =  i:8
REG[8] =  i:9
  22 MakeRecord       8    1    9               00 r[9]=mkrec(r[8])
REG[9] =  s3[020109...](8)
  23 Found            3   27    9 0             00 key=r[9]
REG[9] =  s3[020109...](8)
  24 IdxInsert        3    9    0               00 key=r[9]
REG[9] =  s3[020109...](8)
  25 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  26 Insert           2    9   13               08 intkey=r[13] data=r[9]
REG[9] =  s3[020109...](8)
REG[13] =  i:1
  27 Goto             0   12    0               00 
  12 Rewind           2   28    0               00 
  13 NullRow          1    0    0               00 
  14 RowData          2    7    0               00 r[7]=data
REG[7] =  s3[020109...](8)
  15 Delete           2    0    0               00 
  16 Column           1    0   11               00 r[11]=
REG[11] =  i:9
  17 Yield            6    0    0               00 
REG[6] =  i:31
REG[6] =  i:17
  32 Copy            11   15    0               00 r[15]=r[11]; x.x
REG[15] =  i:9
  33 Copy            15   19    0               00 r[19]=r[15]
REG[19] =  i:9
  34 Function         1   18   16 printf(-1)    02 r[16]=func(r[18..19])
REG[18] =   t8[ab%04xyz](8)
REG[19] =  i:9
REG[16] =   s8[ab0009yz](8)
  35 Function         0    0   17 random(0)     00 r[17]=func(r[0])
REG[17] =  i:5587088151325709644
  36 Yield            5    0    0               00 
REG[5] =  i:40
REG[5] =  i:36
  41 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:11
  42 SCopy           15    2    0               00 r[2]=r[15]
REG[2] =  i:9
  43 SCopy           16    3    0               00 r[3]=r[16]
REG[3] =   e8[ab0009yz](8)
  44 MakeRecord       2    3   20               00 r[20]=mkrec(r[2..4])
REG[20] =  s13[04011D0009616230303039797A.....ab0009yz](8)
  45 Insert           4   20    1 t2            1B intkey=r[1] data=r[20]
REG[20] =  s13[04011D0009616230303039797A.....ab0009yz](8)
REG[1] =  i:11
  46 Goto             0   40    0               00 
  40 Yield            5   47    0               00 
REG[5] =  i:36
REG[5] =  i:40
  37 Goto             0   31    0               00 
  31 Yield            6   38    0               00 next row of "x"
REG[6] =  i:17
REG[6] =  i:31
  18 Explain          3    0    0 SCAN TABLE x  00 
  19 Column           1    0   10               00 r[10]=x.x
REG[10] =  i:9
  20 Ge              12   27   10 (BINARY)      51 if r[12]>=r[10] goto 27
REG[12] =  i:30
REG[10] =  i:9
  21 Add             14   10    8               00 r[8]=r[14]+r[10]
REG[14] =  i:1
REG[10] =  i:9
REG[8] =  i:10
  22 MakeRecord       8    1    9               00 r[9]=mkrec(r[8])
REG[9] =  s3[02010A...](8)
  23 Found            3   27    9 0             00 key=r[9]
REG[9] =  s3[02010A...](8)
  24 IdxInsert        3    9    0               00 key=r[9]
REG[9] =  s3[02010A...](8)
  25 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  26 Insert           2    9   13               08 intkey=r[13] data=r[9]
REG[9] =  s3[02010A...](8)
REG[13] =  i:1
  27 Goto             0   12    0               00 
  12 Rewind           2   28    0               00 
  13 NullRow          1    0    0               00 
  14 RowData          2    7    0               00 r[7]=data
REG[7] =  s3[02010A...](8)
  15 Delete           2    0    0               00 
  16 Column           1    0   11               00 r[11]=
REG[11] =  i:10
  17 Yield            6    0    0               00 
REG[6] =  i:31
REG[6] =  i:17
  32 Copy            11   15    0               00 r[15]=r[11]; x.x
REG[15] =  i:10
  33 Copy            15   19    0               00 r[19]=r[15]
REG[19] =  i:10
  34 Function         1   18   16 printf(-1)    02 r[16]=func(r[18..19])
REG[18] =   t8[ab%04xyz](8)
REG[19] =  i:10
REG[16] =   s8[ab000ayz](8)
  35 Function         0    0   17 random(0)     00 r[17]=func(r[0])
REG[17] =  i:-7199117046480327024
  36 Yield            5    0    0               00 
REG[5] =  i:40
REG[5] =  i:36
  41 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:12
  42 SCopy           15    2    0               00 r[2]=r[15]
REG[2] =  i:10
  43 SCopy           16    3    0               00 r[3]=r[16]
REG[3] =   e8[ab000ayz](8)
  44 MakeRecord       2    3   20               00 r[20]=mkrec(r[2..4])
REG[20] =  s13[04011D000A616230303061797A.....ab000ayz](8)
  45 Insert           4   20    1 t2            1B intkey=r[1] data=r[20]
REG[20] =  s13[04011D000A616230303061797A.....ab000ayz](8)
REG[1] =  i:12
  46 Goto             0   40    0               00 
  40 Yield            5   47    0               00 
REG[5] =  i:36
REG[5] =  i:40
  37 Goto             0   31    0               00 
  31 Yield            6   38    0               00 next row of "x"
REG[6] =  i:17
REG[6] =  i:31
  18 Explain          3    0    0 SCAN TABLE x  00 
  19 Column           1    0   10               00 r[10]=x.x
REG[10] =  i:10
  20 Ge              12   27   10 (BINARY)      51 if r[12]>=r[10] goto 27
REG[12] =  i:30
REG[10] =  i:10
  21 Add             14   10    8               00 r[8]=r[14]+r[10]
REG[14] =  i:1
REG[10] =  i:10
REG[8] =  i:11
  22 MakeRecord       8    1    9               00 r[9]=mkrec(r[8])
REG[9] =  s3[02010B...](8)
  23 Found            3   27    9 0             00 key=r[9]
REG[9] =  s3[02010B...](8)
  24 IdxInsert        3    9    0               00 key=r[9]
REG[9] =  s3[02010B...](8)
  25 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  26 Insert           2    9   13               08 intkey=r[13] data=r[9]
REG[9] =  s3[02010B...](8)
REG[13] =  i:1
  27 Goto             0   12    0               00 
  12 Rewind           2   28    0               00 
  13 NullRow          1    0    0               00 
  14 RowData          2    7    0               00 r[7]=data
REG[7] =  s3[02010B...](8)
  15 Delete           2    0    0               00 
  16 Column           1    0   11               00 r[11]=
REG[11] =  i:11
  17 Yield            6    0    0               00 
REG[6] =  i:31
REG[6] =  i:17
  32 Copy            11   15    0               00 r[15]=r[11]; x.x
REG[15] =  i:11
  33 Copy            15   19    0               00 r[19]=r[15]
REG[19] =  i:11
  34 Function         1   18   16 printf(-1)    02 r[16]=func(r[18..19])
REG[18] =   t8[ab%04xyz](8)
REG[19] =  i:11
REG[16] =   s8[ab000byz](8)
  35 Function         0    0   17 random(0)     00 r[17]=func(r[0])
REG[17] =  i:8358545766993060016
  36 Yield            5    0    0               00 
REG[5] =  i:40
REG[5] =  i:36
  41 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:13
  42 SCopy           15    2    0               00 r[2]=r[15]
REG[2] =  i:11
  43 SCopy           16    3    0               00 r[3]=r[16]
REG[3] =   e8[ab000byz](8)
  44 MakeRecord       2    3   20               00 r[20]=mkrec(r[2..4])
REG[20] =  s13[04011D000B616230303062797A.....ab000byz](8)
  45 Insert           4   20    1 t2            1B intkey=r[1] data=r[20]
REG[20] =  s13[04011D000B616230303062797A.....ab000byz](8)
REG[1] =  i:13
  46 Goto             0   40    0               00 
  40 Yield            5   47    0               00 
REG[5] =  i:36
REG[5] =  i:40
  37 Goto             0   31    0               00 
  31 Yield            6   38    0               00 next row of "x"
REG[6] =  i:17
REG[6] =  i:31
  18 Explain          3    0    0 SCAN TABLE x  00 
  19 Column           1    0   10               00 r[10]=x.x
REG[10] =  i:11
  20 Ge              12   27   10 (BINARY)      51 if r[12]>=r[10] goto 27
REG[12] =  i:30
REG[10] =  i:11
  21 Add             14   10    8               00 r[8]=r[14]+r[10]
REG[14] =  i:1
REG[10] =  i:11
REG[8] =  i:12
  22 MakeRecord       8    1    9               00 r[9]=mkrec(r[8])
REG[9] =  s3[02010C...](8)
  23 Found            3   27    9 0             00 key=r[9]
REG[9] =  s3[02010C...](8)
  24 IdxInsert        3    9    0               00 key=r[9]
REG[9] =  s3[02010C...](8)
  25 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  26 Insert           2    9   13               08 intkey=r[13] data=r[9]
REG[9] =  s3[02010C...](8)
REG[13] =  i:1
  27 Goto             0   12    0               00 
  12 Rewind           2   28    0               00 
  13 NullRow          1    0    0               00 
  14 RowData          2    7    0               00 r[7]=data
REG[7] =  s3[02010C...](8)
  15 Delete           2    0    0               00 
  16 Column           1    0   11               00 r[11]=
REG[11] =  i:12
  17 Yield            6    0    0               00 
REG[6] =  i:31
REG[6] =  i:17
  32 Copy            11   15    0               00 r[15]=r[11]; x.x
REG[15] =  i:12
  33 Copy            15   19    0               00 r[19]=r[15]
REG[19] =  i:12
  34 Function         1   18   16 printf(-1)    02 r[16]=func(r[18..19])
REG[18] =   t8[ab%04xyz](8)
REG[19] =  i:12
REG[16] =   s8[ab000cyz](8)
  35 Function         0    0   17 random(0)     00 r[17]=func(r[0])
REG[17] =  i:6368939805295155495
  36 Yield            5    0    0               00 
REG[5] =  i:40
REG[5] =  i:36
  41 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:14
  42 SCopy           15    2    0               00 r[2]=r[15]
REG[2] =  i:12
  43 SCopy           16    3    0               00 r[3]=r[16]
REG[3] =   e8[ab000cyz](8)
  44 MakeRecord       2    3   20               00 r[20]=mkrec(r[2..4])
REG[20] =  s13[04011D000C616230303063797A.....ab000cyz](8)
  45 Insert           4   20    1 t2            1B intkey=r[1] data=r[20]
REG[20] =  s13[04011D000C616230303063797A.....ab000cyz](8)
REG[1] =  i:14
  46 Goto             0   40    0               00 
  40 Yield            5   47    0               00 
REG[5] =  i:36
REG[5] =  i:40
  37 Goto             0   31    0               00 
  31 Yield            6   38    0               00 next row of "x"
REG[6] =  i:17
REG[6] =  i:31
  18 Explain          3    0    0 SCAN TABLE x  00 
  19 Column           1    0   10               00 r[10]=x.x
REG[10] =  i:12
  20 Ge              12   27   10 (BINARY)      51 if r[12]>=r[10] goto 27
REG[12] =  i:30
REG[10] =  i:12
  21 Add             14   10    8               00 r[8]=r[14]+r[10]
REG[14] =  i:1
REG[10] =  i:12
REG[8] =  i:13
  22 MakeRecord       8    1    9               00 r[9]=mkrec(r[8])
REG[9] =  s3[02010D...](8)
  23 Found            3   27    9 0             00 key=r[9]
REG[9] =  s3[02010D...](8)
  24 IdxInsert        3    9    0               00 key=r[9]
REG[9] =  s3[02010D...](8)
  25 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  26 Insert           2    9   13               08 intkey=r[13] data=r[9]
REG[9] =  s3[02010D...](8)
REG[13] =  i:1
  27 Goto             0   12    0               00 
  12 Rewind           2   28    0               00 
  13 NullRow          1    0    0               00 
  14 RowData          2    7    0               00 r[7]=data
REG[7] =  s3[02010D...](8)
  15 Delete           2    0    0               00 
  16 Column           1    0   11               00 r[11]=
REG[11] =  i:13
  17 Yield            6    0    0               00 
REG[6] =  i:31
REG[6] =  i:17
  32 Copy            11   15    0               00 r[15]=r[11]; x.x
REG[15] =  i:13
  33 Copy            15   19    0               00 r[19]=r[15]
REG[19] =  i:13
  34 Function         1   18   16 printf(-1)    02 r[16]=func(r[18..19])
REG[18] =   t8[ab%04xyz](8)
REG[19] =  i:13
REG[16] =   s8[ab000dyz](8)
  35 Function         0    0   17 random(0)     00 r[17]=func(r[0])
REG[17] =  i:-4317882529895178691
  36 Yield            5    0    0               00 
REG[5] =  i:40
REG[5] =  i:36
  41 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:15
  42 SCopy           15    2    0               00 r[2]=r[15]
REG[2] =  i:13
  43 SCopy           16    3    0               00 r[3]=r[16]
REG[3] =   e8[ab000dyz](8)
  44 MakeRecord       2    3   20               00 r[20]=mkrec(r[2..4])
REG[20] =  s13[04011D000D616230303064797A.....ab000dyz](8)
  45 Insert           4   20    1 t2            1B intkey=r[1] data=r[20]
REG[20] =  s13[04011D000D616230303064797A.....ab000dyz](8)
REG[1] =  i:15
  46 Goto             0   40    0               00 
  40 Yield            5   47    0               00 
REG[5] =  i:36
REG[5] =  i:40
  37 Goto             0   31    0               00 
  31 Yield            6   38    0               00 next row of "x"
REG[6] =  i:17
REG[6] =  i:31
  18 Explain          3    0    0 SCAN TABLE x  00 
  19 Column           1    0   10               00 r[10]=x.x
REG[10] =  i:13
  20 Ge              12   27   10 (BINARY)      51 if r[12]>=r[10] goto 27
REG[12] =  i:30
REG[10] =  i:13
  21 Add             14   10    8               00 r[8]=r[14]+r[10]
REG[14] =  i:1
REG[10] =  i:13
REG[8] =  i:14
  22 MakeRecord       8    1    9               00 r[9]=mkrec(r[8])
REG[9] =  s3[02010E...](8)
  23 Found            3   27    9 0             00 key=r[9]
REG[9] =  s3[02010E...](8)
  24 IdxInsert        3    9    0               00 key=r[9]
REG[9] =  s3[02010E...](8)
  25 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  26 Insert           2    9   13               08 intkey=r[13] data=r[9]
REG[9] =  s3[02010E...](8)
REG[13] =  i:1
  27 Goto             0   12    0               00 
  12 Rewind           2   28    0               00 
  13 NullRow          1    0    0               00 
  14 RowData          2    7    0               00 r[7]=data
REG[7] =  s3[02010E...](8)
  15 Delete           2    0    0               00 
  16 Column           1    0   11               00 r[11]=
REG[11] =  i:14
  17 Yield            6    0    0               00 
REG[6] =  i:31
REG[6] =  i:17
  32 Copy            11   15    0               00 r[15]=r[11]; x.x
REG[15] =  i:14
  33 Copy            15   19    0               00 r[19]=r[15]
REG[19] =  i:14
  34 Function         1   18   16 printf(-1)    02 r[16]=func(r[18..19])
REG[18] =   t8[ab%04xyz](8)
REG[19] =  i:14
REG[16] =   s8[ab000eyz](8)
  35 Function         0    0   17 random(0)     00 r[17]=func(r[0])
REG[17] =  i:3352009788178905957
  36 Yield            5    0    0               00 
REG[5] =  i:40
REG[5] =  i:36
  41 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:16
  42 SCopy           15    2    0               00 r[2]=r[15]
REG[2] =  i:14
  43 SCopy           16    3    0               00 r[3]=r[16]
REG[3] =   e8[ab000eyz](8)
  44 MakeRecord       2    3   20               00 r[20]=mkrec(r[2..4])
REG[20] =  s13[04011D000E616230303065797A.....ab000eyz](8)
  45 Insert           4   20    1 t2            1B intkey=r[1] data=r[20]
REG[20] =  s13[04011D000E616230303065797A.....ab000eyz](8)
REG[1] =  i:16
  46 Goto             0   40    0               00 
  40 Yield            5   47    0               00 
REG[5] =  i:36
REG[5] =  i:40
  37 Goto             0   31    0               00 
  31 Yield            6   38    0               00 next row of "x"
REG[6] =  i:17
REG[6] =  i:31
  18 Explain          3    0    0 SCAN TABLE x  00 
  19 Column           1    0   10               00 r[10]=x.x
REG[10] =  i:14
  20 Ge              12   27   10 (BINARY)      51 if r[12]>=r[10] goto 27
REG[12] =  i:30
REG[10] =  i:14
  21 Add             14   10    8               00 r[8]=r[14]+r[10]
REG[14] =  i:1
REG[10] =  i:14
REG[8] =  i:15
  22 MakeRecord       8    1    9               00 r[9]=mkrec(r[8])
REG[9] =  s3[02010F...](8)
  23 Found            3   27    9 0             00 key=r[9]
REG[9] =  s3[02010F...](8)
  24 IdxInsert        3    9    0               00 key=r[9]
REG[9] =  s3[02010F...](8)
  25 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  26 Insert           2    9   13               08 intkey=r[13] data=r[9]
REG[9] =  s3[02010F...](8)
REG[13] =  i:1
  27 Goto             0   12    0               00 
  12 Rewind           2   28    0               00 
  13 NullRow          1    0    0               00 
  14 RowData          2    7    0               00 r[7]=data
REG[7] =  s3[02010F...](8)
  15 Delete           2    0    0               00 
  16 Column           1    0   11               00 r[11]=
REG[11] =  i:15
  17 Yield            6    0    0               00 
REG[6] =  i:31
REG[6] =  i:17
  32 Copy            11   15    0               00 r[15]=r[11]; x.x
REG[15] =  i:15
  33 Copy            15   19    0               00 r[19]=r[15]
REG[19] =  i:15
  34 Function         1   18   16 printf(-1)    02 r[16]=func(r[18..19])
REG[18] =   t8[ab%04xyz](8)
REG[19] =  i:15
REG[16] =   s8[ab000fyz](8)
  35 Function         0    0   17 random(0)     00 r[17]=func(r[0])
REG[17] =  i:3564501817516969587
  36 Yield            5    0    0               00 
REG[5] =  i:40
REG[5] =  i:36
  41 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:17
  42 SCopy           15    2    0               00 r[2]=r[15]
REG[2] =  i:15
  43 SCopy           16    3    0               00 r[3]=r[16]
REG[3] =   e8[ab000fyz](8)
  44 MakeRecord       2    3   20               00 r[20]=mkrec(r[2..4])
REG[20] =  s13[04011D000F616230303066797A.....ab000fyz](8)
  45 Insert           4   20    1 t2            1B intkey=r[1] data=r[20]
REG[20] =  s13[04011D000F616230303066797A.....ab000fyz](8)
REG[1] =  i:17
  46 Goto             0   40    0               00 
  40 Yield            5   47    0               00 
REG[5] =  i:36
REG[5] =  i:40
  37 Goto             0   31    0               00 
  31 Yield            6   38    0               00 next row of "x"
REG[6] =  i:17
REG[6] =  i:31
  18 Explain          3    0    0 SCAN TABLE x  00 
  19 Column           1    0   10               00 r[10]=x.x
REG[10] =  i:15
  20 Ge              12   27   10 (BINARY)      51 if r[12]>=r[10] goto 27
REG[12] =  i:30
REG[10] =  i:15
  21 Add             14   10    8               00 r[8]=r[14]+r[10]
REG[14] =  i:1
REG[10] =  i:15
REG[8] =  i:16
  22 MakeRecord       8    1    9               00 r[9]=mkrec(r[8])
REG[9] =  s3[020110...](8)
  23 Found            3   27    9 0             00 key=r[9]
REG[9] =  s3[020110...](8)
  24 IdxInsert        3    9    0               00 key=r[9]
REG[9] =  s3[020110...](8)
  25 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  26 Insert           2    9   13               08 intkey=r[13] data=r[9]
REG[9] =  s3[020110...](8)
REG[13] =  i:1
  27 Goto             0   12    0               00 
  12 Rewind           2   28    0               00 
  13 NullRow          1    0    0               00 
  14 RowData          2    7    0               00 r[7]=data
REG[7] =  s3[020110...](8)
  15 Delete           2    0    0               00 
  16 Column           1    0   11               00 r[11]=
REG[11] =  i:16
  17 Yield            6    0    0               00 
REG[6] =  i:31
REG[6] =  i:17
  32 Copy            11   15    0               00 r[15]=r[11]; x.x
REG[15] =  i:16
  33 Copy            15   19    0               00 r[19]=r[15]
REG[19] =  i:16
  34 Function         1   18   16 printf(-1)    02 r[16]=func(r[18..19])
REG[18] =   t8[ab%04xyz](8)
REG[19] =  i:16
REG[16] =   s8[ab0010yz](8)
  35 Function         0    0   17 random(0)     00 r[17]=func(r[0])
REG[17] =  i:-4729604148326217843
  36 Yield            5    0    0               00 
REG[5] =  i:40
REG[5] =  i:36
  41 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:18
  42 SCopy           15    2    0               00 r[2]=r[15]
REG[2] =  i:16
  43 SCopy           16    3    0               00 r[3]=r[16]
REG[3] =   e8[ab0010yz](8)
  44 MakeRecord       2    3   20               00 r[20]=mkrec(r[2..4])
REG[20] =  s13[04011D0010616230303130797A.....ab0010yz](8)
  45 Insert           4   20    1 t2            1B intkey=r[1] data=r[20]
REG[20] =  s13[04011D0010616230303130797A.....ab0010yz](8)
REG[1] =  i:18
  46 Goto             0   40    0               00 
  40 Yield            5   47    0               00 
REG[5] =  i:36
REG[5] =  i:40
  37 Goto             0   31    0               00 
  31 Yield            6   38    0               00 next row of "x"
REG[6] =  i:17
REG[6] =  i:31
  18 Explain          3    0    0 SCAN TABLE x  00 
  19 Column           1    0   10               00 r[10]=x.x
REG[10] =  i:16
  20 Ge              12   27   10 (BINARY)      51 if r[12]>=r[10] goto 27
REG[12] =  i:30
REG[10] =  i:16
  21 Add             14   10    8               00 r[8]=r[14]+r[10]
REG[14] =  i:1
REG[10] =  i:16
REG[8] =  i:17
  22 MakeRecord       8    1    9               00 r[9]=mkrec(r[8])
REG[9] =  s3[020111...](8)
  23 Found            3   27    9 0             00 key=r[9]
REG[9] =  s3[020111...](8)
  24 IdxInsert        3    9    0               00 key=r[9]
REG[9] =  s3[020111...](8)
  25 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  26 Insert           2    9   13               08 intkey=r[13] data=r[9]
REG[9] =  s3[020111...](8)
REG[13] =  i:1
  27 Goto             0   12    0               00 
  12 Rewind           2   28    0               00 
  13 NullRow          1    0    0               00 
  14 RowData          2    7    0               00 r[7]=data
REG[7] =  s3[020111...](8)
  15 Delete           2    0    0               00 
  16 Column           1    0   11               00 r[11]=
REG[11] =  i:17
  17 Yield            6    0    0               00 
REG[6] =  i:31
REG[6] =  i:17
  32 Copy            11   15    0               00 r[15]=r[11]; x.x
REG[15] =  i:17
  33 Copy            15   19    0               00 r[19]=r[15]
REG[19] =  i:17
  34 Function         1   18   16 printf(-1)    02 r[16]=func(r[18..19])
REG[18] =   t8[ab%04xyz](8)
REG[19] =  i:17
REG[16] =   s8[ab0011yz](8)
  35 Function         0    0   17 random(0)     00 r[17]=func(r[0])
REG[17] =  i:-2813713317334880448
  36 Yield            5    0    0               00 
REG[5] =  i:40
REG[5] =  i:36
  41 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:19
  42 SCopy           15    2    0               00 r[2]=r[15]
REG[2] =  i:17
  43 SCopy           16    3    0               00 r[3]=r[16]
REG[3] =   e8[ab0011yz](8)
  44 MakeRecord       2    3   20               00 r[20]=mkrec(r[2..4])
REG[20] =  s13[04011D0011616230303131797A.....ab0011yz](8)
  45 Insert           4   20    1 t2            1B intkey=r[1] data=r[20]
REG[20] =  s13[04011D0011616230303131797A.....ab0011yz](8)
REG[1] =  i:19
  46 Goto             0   40    0               00 
  40 Yield            5   47    0               00 
REG[5] =  i:36
REG[5] =  i:40
  37 Goto             0   31    0               00 
  31 Yield            6   38    0               00 next row of "x"
REG[6] =  i:17
REG[6] =  i:31
  18 Explain          3    0    0 SCAN TABLE x  00 
  19 Column           1    0   10               00 r[10]=x.x
REG[10] =  i:17
  20 Ge              12   27   10 (BINARY)      51 if r[12]>=r[10] goto 27
REG[12] =  i:30
REG[10] =  i:17
  21 Add             14   10    8               00 r[8]=r[14]+r[10]
REG[14] =  i:1
REG[10] =  i:17
REG[8] =  i:18
  22 MakeRecord       8    1    9               00 r[9]=mkrec(r[8])
REG[9] =  s3[020112...](8)
  23 Found            3   27    9 0             00 key=r[9]
REG[9] =  s3[020112...](8)
  24 IdxInsert        3    9    0               00 key=r[9]
REG[9] =  s3[020112...](8)
  25 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  26 Insert           2    9   13               08 intkey=r[13] data=r[9]
REG[9] =  s3[020112...](8)
REG[13] =  i:1
  27 Goto             0   12    0               00 
  12 Rewind           2   28    0               00 
  13 NullRow          1    0    0               00 
  14 RowData          2    7    0               00 r[7]=data
REG[7] =  s3[020112...](8)
  15 Delete           2    0    0               00 
  16 Column           1    0   11               00 r[11]=
REG[11] =  i:18
  17 Yield            6    0    0               00 
REG[6] =  i:31
REG[6] =  i:17
  32 Copy            11   15    0               00 r[15]=r[11]; x.x
REG[15] =  i:18
  33 Copy            15   19    0               00 r[19]=r[15]
REG[19] =  i:18
  34 Function         1   18   16 printf(-1)    02 r[16]=func(r[18..19])
REG[18] =   t8[ab%04xyz](8)
REG[19] =  i:18
REG[16] =   s8[ab0012yz](8)
  35 Function         0    0   17 random(0)     00 r[17]=func(r[0])
REG[17] =  i:-5144034597084492341
  36 Yield            5    0    0               00 
REG[5] =  i:40
REG[5] =  i:36
  41 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:20
  42 SCopy           15    2    0               00 r[2]=r[15]
REG[2] =  i:18
  43 SCopy           16    3    0               00 r[3]=r[16]
REG[3] =   e8[ab0012yz](8)
  44 MakeRecord       2    3   20               00 r[20]=mkrec(r[2..4])
REG[20] =  s13[04011D0012616230303132797A.....ab0012yz](8)
  45 Insert           4   20    1 t2            1B intkey=r[1] data=r[20]
REG[20] =  s13[04011D0012616230303132797A.....ab0012yz](8)
REG[1] =  i:20
  46 Goto             0   40    0               00 
  40 Yield            5   47    0               00 
REG[5] =  i:36
REG[5] =  i:40
  37 Goto             0   31    0               00 
  31 Yield            6   38    0               00 next row of "x"
REG[6] =  i:17
REG[6] =  i:31
  18 Explain          3    0    0 SCAN TABLE x  00 
  19 Column           1    0   10               00 r[10]=x.x
REG[10] =  i:18
  20 Ge              12   27   10 (BINARY)      51 if r[12]>=r[10] goto 27
REG[12] =  i:30
REG[10] =  i:18
  21 Add             14   10    8               00 r[8]=r[14]+r[10]
REG[14] =  i:1
REG[10] =  i:18
REG[8] =  i:19
  22 MakeRecord       8    1    9               00 r[9]=mkrec(r[8])
REG[9] =  s3[020113...](8)
  23 Found            3   27    9 0             00 key=r[9]
REG[9] =  s3[020113...](8)
  24 IdxInsert        3    9    0               00 key=r[9]
REG[9] =  s3[020113...](8)
  25 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  26 Insert           2    9   13               08 intkey=r[13] data=r[9]
REG[9] =  s3[020113...](8)
REG[13] =  i:1
  27 Goto             0   12    0               00 
  12 Rewind           2   28    0               00 
  13 NullRow          1    0    0               00 
  14 RowData          2    7    0               00 r[7]=data
REG[7] =  s3[020113...](8)
  15 Delete           2    0    0               00 
  16 Column           1    0   11               00 r[11]=
REG[11] =  i:19
  17 Yield            6    0    0               00 
REG[6] =  i:31
REG[6] =  i:17
  32 Copy            11   15    0               00 r[15]=r[11]; x.x
REG[15] =  i:19
  33 Copy            15   19    0               00 r[19]=r[15]
REG[19] =  i:19
  34 Function         1   18   16 printf(-1)    02 r[16]=func(r[18..19])
REG[18] =   t8[ab%04xyz](8)
REG[19] =  i:19
REG[16] =   s8[ab0013yz](8)
  35 Function         0    0   17 random(0)     00 r[17]=func(r[0])
REG[17] =  i:-4938785264718641079
  36 Yield            5    0    0               00 
REG[5] =  i:40
REG[5] =  i:36
  41 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:21
  42 SCopy           15    2    0               00 r[2]=r[15]
REG[2] =  i:19
  43 SCopy           16    3    0               00 r[3]=r[16]
REG[3] =   e8[ab0013yz](8)
  44 MakeRecord       2    3   20               00 r[20]=mkrec(r[2..4])
REG[20] =  s13[04011D0013616230303133797A.....ab0013yz](8)
  45 Insert           4   20    1 t2            1B intkey=r[1] data=r[20]
REG[20] =  s13[04011D0013616230303133797A.....ab0013yz](8)
REG[1] =  i:21
  46 Goto             0   40    0               00 
  40 Yield            5   47    0               00 
REG[5] =  i:36
REG[5] =  i:40
  37 Goto             0   31    0               00 
  31 Yield            6   38    0               00 next row of "x"
REG[6] =  i:17
REG[6] =  i:31
  18 Explain          3    0    0 SCAN TABLE x  00 
  19 Column           1    0   10               00 r[10]=x.x
REG[10] =  i:19
  20 Ge              12   27   10 (BINARY)      51 if r[12]>=r[10] goto 27
REG[12] =  i:30
REG[10] =  i:19
  21 Add             14   10    8               00 r[8]=r[14]+r[10]
REG[14] =  i:1
REG[10] =  i:19
REG[8] =  i:20
  22 MakeRecord       8    1    9               00 r[9]=mkrec(r[8])
REG[9] =  s3[020114...](8)
  23 Found            3   27    9 0             00 key=r[9]
REG[9] =  s3[020114...](8)
  24 IdxInsert        3    9    0               00 key=r[9]
REG[9] =  s3[020114...](8)
  25 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  26 Insert           2    9   13               08 intkey=r[13] data=r[9]
REG[9] =  s3[020114...](8)
REG[13] =  i:1
  27 Goto             0   12    0               00 
  12 Rewind           2   28    0               00 
  13 NullRow          1    0    0               00 
  14 RowData          2    7    0               00 r[7]=data
REG[7] =  s3[020114...](8)
  15 Delete           2    0    0               00 
  16 Column           1    0   11               00 r[11]=
REG[11] =  i:20
  17 Yield            6    0    0               00 
REG[6] =  i:31
REG[6] =  i:17
  32 Copy            11   15    0               00 r[15]=r[11]; x.x
REG[15] =  i:20
  33 Copy            15   19    0               00 r[19]=r[15]
REG[19] =  i:20
  34 Function         1   18   16 printf(-1)    02 r[16]=func(r[18..19])
REG[18] =   t8[ab%04xyz](8)
REG[19] =  i:20
REG[16] =   s8[ab0014yz](8)
  35 Function         0    0   17 random(0)     00 r[17]=func(r[0])
REG[17] =  i:8498855959249764917
  36 Yield            5    0    0               00 
REG[5] =  i:40
REG[5] =  i:36
  41 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:22
  42 SCopy           15    2    0               00 r[2]=r[15]
REG[2] =  i:20
  43 SCopy           16    3    0               00 r[3]=r[16]
REG[3] =   e8[ab0014yz](8)
  44 MakeRecord       2    3   20               00 r[20]=mkrec(r[2..4])
REG[20] =  s13[04011D0014616230303134797A.....ab0014yz](8)
  45 Insert           4   20    1 t2            1B intkey=r[1] data=r[20]
REG[20] =  s13[04011D0014616230303134797A.....ab0014yz](8)
REG[1] =  i:22
  46 Goto             0   40    0               00 
  40 Yield            5   47    0               00 
REG[5] =  i:36
REG[5] =  i:40
  37 Goto             0   31    0               00 
  31 Yield            6   38    0               00 next row of "x"
REG[6] =  i:17
REG[6] =  i:31
  18 Explain          3    0    0 SCAN TABLE x  00 
  19 Column           1    0   10               00 r[10]=x.x
REG[10] =  i:20
  20 Ge              12   27   10 (BINARY)      51 if r[12]>=r[10] goto 27
REG[12] =  i:30
REG[10] =  i:20
  21 Add             14   10    8               00 r[8]=r[14]+r[10]
REG[14] =  i:1
REG[10] =  i:20
REG[8] =  i:21
  22 MakeRecord       8    1    9               00 r[9]=mkrec(r[8])
REG[9] =  s3[020115...](8)
  23 Found            3   27    9 0             00 key=r[9]
REG[9] =  s3[020115...](8)
  24 IdxInsert        3    9    0               00 key=r[9]
REG[9] =  s3[020115...](8)
  25 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  26 Insert           2    9   13               08 intkey=r[13] data=r[9]
REG[9] =  s3[020115...](8)
REG[13] =  i:1
  27 Goto             0   12    0               00 
  12 Rewind           2   28    0               00 
  13 NullRow          1    0    0               00 
  14 RowData          2    7    0               00 r[7]=data
REG[7] =  s3[020115...](8)
  15 Delete           2    0    0               00 
  16 Column           1    0   11               00 r[11]=
REG[11] =  i:21
  17 Yield            6    0    0               00 
REG[6] =  i:31
REG[6] =  i:17
  32 Copy            11   15    0               00 r[15]=r[11]; x.x
REG[15] =  i:21
  33 Copy            15   19    0               00 r[19]=r[15]
REG[19] =  i:21
  34 Function         1   18   16 printf(-1)    02 r[16]=func(r[18..19])
REG[18] =   t8[ab%04xyz](8)
REG[19] =  i:21
REG[16] =   s8[ab0015yz](8)
  35 Function         0    0   17 random(0)     00 r[17]=func(r[0])
REG[17] =  i:-5727171819329499618
  36 Yield            5    0    0               00 
REG[5] =  i:40
REG[5] =  i:36
  41 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:23
  42 SCopy           15    2    0               00 r[2]=r[15]
REG[2] =  i:21
  43 SCopy           16    3    0               00 r[3]=r[16]
REG[3] =   e8[ab0015yz](8)
  44 MakeRecord       2    3   20               00 r[20]=mkrec(r[2..4])
REG[20] =  s13[04011D0015616230303135797A.....ab0015yz](8)
  45 Insert           4   20    1 t2            1B intkey=r[1] data=r[20]
REG[20] =  s13[04011D0015616230303135797A.....ab0015yz](8)
REG[1] =  i:23
  46 Goto             0   40    0               00 
  40 Yield            5   47    0               00 
REG[5] =  i:36
REG[5] =  i:40
  37 Goto             0   31    0               00 
  31 Yield            6   38    0               00 next row of "x"
REG[6] =  i:17
REG[6] =  i:31
  18 Explain          3    0    0 SCAN TABLE x  00 
  19 Column           1    0   10               00 r[10]=x.x
REG[10] =  i:21
  20 Ge              12   27   10 (BINARY)      51 if r[12]>=r[10] goto 27
REG[12] =  i:30
REG[10] =  i:21
  21 Add             14   10    8               00 r[8]=r[14]+r[10]
REG[14] =  i:1
REG[10] =  i:21
REG[8] =  i:22
  22 MakeRecord       8    1    9               00 r[9]=mkrec(r[8])
REG[9] =  s3[020116...](8)
  23 Found            3   27    9 0             00 key=r[9]
REG[9] =  s3[020116...](8)
  24 IdxInsert        3    9    0               00 key=r[9]
REG[9] =  s3[020116...](8)
  25 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  26 Insert           2    9   13               08 intkey=r[13] data=r[9]
REG[9] =  s3[020116...](8)
REG[13] =  i:1
  27 Goto             0   12    0               00 
  12 Rewind           2   28    0               00 
  13 NullRow          1    0    0               00 
  14 RowData          2    7    0               00 r[7]=data
REG[7] =  s3[020116...](8)
  15 Delete           2    0    0               00 
  16 Column           1    0   11               00 r[11]=
REG[11] =  i:22
  17 Yield            6    0    0               00 
REG[6] =  i:31
REG[6] =  i:17
  32 Copy            11   15    0               00 r[15]=r[11]; x.x
REG[15] =  i:22
  33 Copy            15   19    0               00 r[19]=r[15]
REG[19] =  i:22
  34 Function         1   18   16 printf(-1)    02 r[16]=func(r[18..19])
REG[18] =   t8[ab%04xyz](8)
REG[19] =  i:22
REG[16] =   s8[ab0016yz](8)
  35 Function         0    0   17 random(0)     00 r[17]=func(r[0])
REG[17] =  i:3306756259752248421
  36 Yield            5    0    0               00 
REG[5] =  i:40
REG[5] =  i:36
  41 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:24
  42 SCopy           15    2    0               00 r[2]=r[15]
REG[2] =  i:22
  43 SCopy           16    3    0               00 r[3]=r[16]
REG[3] =   e8[ab0016yz](8)
  44 MakeRecord       2    3   20               00 r[20]=mkrec(r[2..4])
REG[20] =  s13[04011D0016616230303136797A.....ab0016yz](8)
  45 Insert           4   20    1 t2            1B intkey=r[1] data=r[20]
REG[20] =  s13[04011D0016616230303136797A.....ab0016yz](8)
REG[1] =  i:24
  46 Goto             0   40    0               00 
  40 Yield            5   47    0               00 
REG[5] =  i:36
REG[5] =  i:40
  37 Goto             0   31    0               00 
  31 Yield            6   38    0               00 next row of "x"
REG[6] =  i:17
REG[6] =  i:31
  18 Explain          3    0    0 SCAN TABLE x  00 
  19 Column           1    0   10               00 r[10]=x.x
REG[10] =  i:22
  20 Ge              12   27   10 (BINARY)      51 if r[12]>=r[10] goto 27
REG[12] =  i:30
REG[10] =  i:22
  21 Add             14   10    8               00 r[8]=r[14]+r[10]
REG[14] =  i:1
REG[10] =  i:22
REG[8] =  i:23
  22 MakeRecord       8    1    9               00 r[9]=mkrec(r[8])
REG[9] =  s3[020117...](8)
  23 Found            3   27    9 0             00 key=r[9]
REG[9] =  s3[020117...](8)
  24 IdxInsert        3    9    0               00 key=r[9]
REG[9] =  s3[020117...](8)
  25 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  26 Insert           2    9   13               08 intkey=r[13] data=r[9]
REG[9] =  s3[020117...](8)
REG[13] =  i:1
  27 Goto             0   12    0               00 
  12 Rewind           2   28    0               00 
  13 NullRow          1    0    0               00 
  14 RowData          2    7    0               00 r[7]=data
REG[7] =  s3[020117...](8)
  15 Delete           2    0    0               00 
  16 Column           1    0   11               00 r[11]=
REG[11] =  i:23
  17 Yield            6    0    0               00 
REG[6] =  i:31
REG[6] =  i:17
  32 Copy            11   15    0               00 r[15]=r[11]; x.x
REG[15] =  i:23
  33 Copy            15   19    0               00 r[19]=r[15]
REG[19] =  i:23
  34 Function         1   18   16 printf(-1)    02 r[16]=func(r[18..19])
REG[18] =   t8[ab%04xyz](8)
REG[19] =  i:23
REG[16] =   s8[ab0017yz](8)
  35 Function         0    0   17 random(0)     00 r[17]=func(r[0])
REG[17] =  i:-583264674353484826
  36 Yield            5    0    0               00 
REG[5] =  i:40
REG[5] =  i:36
  41 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:25
  42 SCopy           15    2    0               00 r[2]=r[15]
REG[2] =  i:23
  43 SCopy           16    3    0               00 r[3]=r[16]
REG[3] =   e8[ab0017yz](8)
  44 MakeRecord       2    3   20               00 r[20]=mkrec(r[2..4])
REG[20] =  s13[04011D0017616230303137797A.....ab0017yz](8)
  45 Insert           4   20    1 t2            1B intkey=r[1] data=r[20]
REG[20] =  s13[04011D0017616230303137797A.....ab0017yz](8)
REG[1] =  i:25
  46 Goto             0   40    0               00 
  40 Yield            5   47    0               00 
REG[5] =  i:36
REG[5] =  i:40
  37 Goto             0   31    0               00 
  31 Yield            6   38    0               00 next row of "x"
REG[6] =  i:17
REG[6] =  i:31
  18 Explain          3    0    0 SCAN TABLE x  00 
  19 Column           1    0   10               00 r[10]=x.x
REG[10] =  i:23
  20 Ge              12   27   10 (BINARY)      51 if r[12]>=r[10] goto 27
REG[12] =  i:30
REG[10] =  i:23
  21 Add             14   10    8               00 r[8]=r[14]+r[10]
REG[14] =  i:1
REG[10] =  i:23
REG[8] =  i:24
  22 MakeRecord       8    1    9               00 r[9]=mkrec(r[8])
REG[9] =  s3[020118...](8)
  23 Found            3   27    9 0             00 key=r[9]
REG[9] =  s3[020118...](8)
  24 IdxInsert        3    9    0               00 key=r[9]
REG[9] =  s3[020118...](8)
  25 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  26 Insert           2    9   13               08 intkey=r[13] data=r[9]
REG[9] =  s3[020118...](8)
REG[13] =  i:1
  27 Goto             0   12    0               00 
  12 Rewind           2   28    0               00 
  13 NullRow          1    0    0               00 
  14 RowData          2    7    0               00 r[7]=data
REG[7] =  s3[020118...](8)
  15 Delete           2    0    0               00 
  16 Column           1    0   11               00 r[11]=
REG[11] =  i:24
  17 Yield            6    0    0               00 
REG[6] =  i:31
REG[6] =  i:17
  32 Copy            11   15    0               00 r[15]=r[11]; x.x
REG[15] =  i:24
  33 Copy            15   19    0               00 r[19]=r[15]
REG[19] =  i:24
  34 Function         1   18   16 printf(-1)    02 r[16]=func(r[18..19])
REG[18] =   t8[ab%04xyz](8)
REG[19] =  i:24
REG[16] =   s8[ab0018yz](8)
  35 Function         0    0   17 random(0)     00 r[17]=func(r[0])
REG[17] =  i:1902804304731306270
  36 Yield            5    0    0               00 
REG[5] =  i:40
REG[5] =  i:36
  41 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:26
  42 SCopy           15    2    0               00 r[2]=r[15]
REG[2] =  i:24
  43 SCopy           16    3    0               00 r[3]=r[16]
REG[3] =   e8[ab0018yz](8)
  44 MakeRecord       2    3   20               00 r[20]=mkrec(r[2..4])
REG[20] =  s13[04011D0018616230303138797A.....ab0018yz](8)
  45 Insert           4   20    1 t2            1B intkey=r[1] data=r[20]
REG[20] =  s13[04011D0018616230303138797A.....ab0018yz](8)
REG[1] =  i:26
  46 Goto             0   40    0               00 
  40 Yield            5   47    0               00 
REG[5] =  i:36
REG[5] =  i:40
  37 Goto             0   31    0               00 
  31 Yield            6   38    0               00 next row of "x"
REG[6] =  i:17
REG[6] =  i:31
  18 Explain          3    0    0 SCAN TABLE x  00 
  19 Column           1    0   10               00 r[10]=x.x
REG[10] =  i:24
  20 Ge              12   27   10 (BINARY)      51 if r[12]>=r[10] goto 27
REG[12] =  i:30
REG[10] =  i:24
  21 Add             14   10    8               00 r[8]=r[14]+r[10]
REG[14] =  i:1
REG[10] =  i:24
REG[8] =  i:25
  22 MakeRecord       8    1    9               00 r[9]=mkrec(r[8])
REG[9] =  s3[020119...](8)
  23 Found            3   27    9 0             00 key=r[9]
REG[9] =  s3[020119...](8)
  24 IdxInsert        3    9    0               00 key=r[9]
REG[9] =  s3[020119...](8)
  25 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  26 Insert           2    9   13               08 intkey=r[13] data=r[9]
REG[9] =  s3[020119...](8)
REG[13] =  i:1
  27 Goto             0   12    0               00 
  12 Rewind           2   28    0               00 
  13 NullRow          1    0    0               00 
  14 RowData          2    7    0               00 r[7]=data
REG[7] =  s3[020119...](8)
  15 Delete           2    0    0               00 
  16 Column           1    0   11               00 r[11]=
REG[11] =  i:25
  17 Yield            6    0    0               00 
REG[6] =  i:31
REG[6] =  i:17
  32 Copy            11   15    0               00 r[15]=r[11]; x.x
REG[15] =  i:25
  33 Copy            15   19    0               00 r[19]=r[15]
REG[19] =  i:25
  34 Function         1   18   16 printf(-1)    02 r[16]=func(r[18..19])
REG[18] =   t8[ab%04xyz](8)
REG[19] =  i:25
REG[16] =   s8[ab0019yz](8)
  35 Function         0    0   17 random(0)     00 r[17]=func(r[0])
REG[17] =  i:9018071185271742322
  36 Yield            5    0    0               00 
REG[5] =  i:40
REG[5] =  i:36
  41 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:27
  42 SCopy           15    2    0               00 r[2]=r[15]
REG[2] =  i:25
  43 SCopy           16    3    0               00 r[3]=r[16]
REG[3] =   e8[ab0019yz](8)
  44 MakeRecord       2    3   20               00 r[20]=mkrec(r[2..4])
REG[20] =  s13[04011D0019616230303139797A.....ab0019yz](8)
  45 Insert           4   20    1 t2            1B intkey=r[1] data=r[20]
REG[20] =  s13[04011D0019616230303139797A.....ab0019yz](8)
REG[1] =  i:27
  46 Goto             0   40    0               00 
  40 Yield            5   47    0               00 
REG[5] =  i:36
REG[5] =  i:40
  37 Goto             0   31    0               00 
  31 Yield            6   38    0               00 next row of "x"
REG[6] =  i:17
REG[6] =  i:31
  18 Explain          3    0    0 SCAN TABLE x  00 
  19 Column           1    0   10               00 r[10]=x.x
REG[10] =  i:25
  20 Ge              12   27   10 (BINARY)      51 if r[12]>=r[10] goto 27
REG[12] =  i:30
REG[10] =  i:25
  21 Add             14   10    8               00 r[8]=r[14]+r[10]
REG[14] =  i:1
REG[10] =  i:25
REG[8] =  i:26
  22 MakeRecord       8    1    9               00 r[9]=mkrec(r[8])
REG[9] =  s3[02011A...](8)
  23 Found            3   27    9 0             00 key=r[9]
REG[9] =  s3[02011A...](8)
  24 IdxInsert        3    9    0               00 key=r[9]
REG[9] =  s3[02011A...](8)
  25 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  26 Insert           2    9   13               08 intkey=r[13] data=r[9]
REG[9] =  s3[02011A...](8)
REG[13] =  i:1
  27 Goto             0   12    0               00 
  12 Rewind           2   28    0               00 
  13 NullRow          1    0    0               00 
  14 RowData          2    7    0               00 r[7]=data
REG[7] =  s3[02011A...](8)
  15 Delete           2    0    0               00 
  16 Column           1    0   11               00 r[11]=
REG[11] =  i:26
  17 Yield            6    0    0               00 
REG[6] =  i:31
REG[6] =  i:17
  32 Copy            11   15    0               00 r[15]=r[11]; x.x
REG[15] =  i:26
  33 Copy            15   19    0               00 r[19]=r[15]
REG[19] =  i:26
  34 Function         1   18   16 printf(-1)    02 r[16]=func(r[18..19])
REG[18] =   t8[ab%04xyz](8)
REG[19] =  i:26
REG[16] =   s8[ab001ayz](8)
  35 Function         0    0   17 random(0)     00 r[17]=func(r[0])
REG[17] =  i:7286064945023050556
  36 Yield            5    0    0               00 
REG[5] =  i:40
REG[5] =  i:36
  41 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:28
  42 SCopy           15    2    0               00 r[2]=r[15]
REG[2] =  i:26
  43 SCopy           16    3    0               00 r[3]=r[16]
REG[3] =   e8[ab001ayz](8)
  44 MakeRecord       2    3   20               00 r[20]=mkrec(r[2..4])
REG[20] =  s13[04011D001A616230303161797A.....ab001ayz](8)
  45 Insert           4   20    1 t2            1B intkey=r[1] data=r[20]
REG[20] =  s13[04011D001A616230303161797A.....ab001ayz](8)
REG[1] =  i:28
  46 Goto             0   40    0               00 
  40 Yield            5   47    0               00 
REG[5] =  i:36
REG[5] =  i:40
  37 Goto             0   31    0               00 
  31 Yield            6   38    0               00 next row of "x"
REG[6] =  i:17
REG[6] =  i:31
  18 Explain          3    0    0 SCAN TABLE x  00 
  19 Column           1    0   10               00 r[10]=x.x
REG[10] =  i:26
  20 Ge              12   27   10 (BINARY)      51 if r[12]>=r[10] goto 27
REG[12] =  i:30
REG[10] =  i:26
  21 Add             14   10    8               00 r[8]=r[14]+r[10]
REG[14] =  i:1
REG[10] =  i:26
REG[8] =  i:27
  22 MakeRecord       8    1    9               00 r[9]=mkrec(r[8])
REG[9] =  s3[02011B...](8)
  23 Found            3   27    9 0             00 key=r[9]
REG[9] =  s3[02011B...](8)
  24 IdxInsert        3    9    0               00 key=r[9]
REG[9] =  s3[02011B...](8)
  25 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  26 Insert           2    9   13               08 intkey=r[13] data=r[9]
REG[9] =  s3[02011B...](8)
REG[13] =  i:1
  27 Goto             0   12    0               00 
  12 Rewind           2   28    0               00 
  13 NullRow          1    0    0               00 
  14 RowData          2    7    0               00 r[7]=data
REG[7] =  s3[02011B...](8)
  15 Delete           2    0    0               00 
  16 Column           1    0   11               00 r[11]=
REG[11] =  i:27
  17 Yield            6    0    0               00 
REG[6] =  i:31
REG[6] =  i:17
  32 Copy            11   15    0               00 r[15]=r[11]; x.x
REG[15] =  i:27
  33 Copy            15   19    0               00 r[19]=r[15]
REG[19] =  i:27
  34 Function         1   18   16 printf(-1)    02 r[16]=func(r[18..19])
REG[18] =   t8[ab%04xyz](8)
REG[19] =  i:27
REG[16] =   s8[ab001byz](8)
  35 Function         0    0   17 random(0)     00 r[17]=func(r[0])
REG[17] =  i:-1305089614832008689
  36 Yield            5    0    0               00 
REG[5] =  i:40
REG[5] =  i:36
  41 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:29
  42 SCopy           15    2    0               00 r[2]=r[15]
REG[2] =  i:27
  43 SCopy           16    3    0               00 r[3]=r[16]
REG[3] =   e8[ab001byz](8)
  44 MakeRecord       2    3   20               00 r[20]=mkrec(r[2..4])
REG[20] =  s13[04011D001B616230303162797A.....ab001byz](8)
  45 Insert           4   20    1 t2            1B intkey=r[1] data=r[20]
REG[20] =  s13[04011D001B616230303162797A.....ab001byz](8)
REG[1] =  i:29
  46 Goto             0   40    0               00 
  40 Yield            5   47    0               00 
REG[5] =  i:36
REG[5] =  i:40
  37 Goto             0   31    0               00 
  31 Yield            6   38    0               00 next row of "x"
REG[6] =  i:17
REG[6] =  i:31
  18 Explain          3    0    0 SCAN TABLE x  00 
  19 Column           1    0   10               00 r[10]=x.x
REG[10] =  i:27
  20 Ge              12   27   10 (BINARY)      51 if r[12]>=r[10] goto 27
REG[12] =  i:30
REG[10] =  i:27
  21 Add             14   10    8               00 r[8]=r[14]+r[10]
REG[14] =  i:1
REG[10] =  i:27
REG[8] =  i:28
  22 MakeRecord       8    1    9               00 r[9]=mkrec(r[8])
REG[9] =  s3[02011C...](8)
  23 Found            3   27    9 0             00 key=r[9]
REG[9] =  s3[02011C...](8)
  24 IdxInsert        3    9    0               00 key=r[9]
REG[9] =  s3[02011C...](8)
  25 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  26 Insert           2    9   13               08 intkey=r[13] data=r[9]
REG[9] =  s3[02011C...](8)
REG[13] =  i:1
  27 Goto             0   12    0               00 
  12 Rewind           2   28    0               00 
  13 NullRow          1    0    0               00 
  14 RowData          2    7    0               00 r[7]=data
REG[7] =  s3[02011C...](8)
  15 Delete           2    0    0               00 
  16 Column           1    0   11               00 r[11]=
REG[11] =  i:28
  17 Yield            6    0    0               00 
REG[6] =  i:31
REG[6] =  i:17
  32 Copy            11   15    0               00 r[15]=r[11]; x.x
REG[15] =  i:28
  33 Copy            15   19    0               00 r[19]=r[15]
REG[19] =  i:28
  34 Function         1   18   16 printf(-1)    02 r[16]=func(r[18..19])
REG[18] =   t8[ab%04xyz](8)
REG[19] =  i:28
REG[16] =   s8[ab001cyz](8)
  35 Function         0    0   17 random(0)     00 r[17]=func(r[0])
REG[17] =  i:1957898222792199655
  36 Yield            5    0    0               00 
REG[5] =  i:40
REG[5] =  i:36
  41 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:30
  42 SCopy           15    2    0               00 r[2]=r[15]
REG[2] =  i:28
  43 SCopy           16    3    0               00 r[3]=r[16]
REG[3] =   e8[ab001cyz](8)
  44 MakeRecord       2    3   20               00 r[20]=mkrec(r[2..4])
REG[20] =  s13[04011D001C616230303163797A.....ab001cyz](8)
  45 Insert           4   20    1 t2            1B intkey=r[1] data=r[20]
REG[20] =  s13[04011D001C616230303163797A.....ab001cyz](8)
REG[1] =  i:30
  46 Goto             0   40    0               00 
  40 Yield            5   47    0               00 
REG[5] =  i:36
REG[5] =  i:40
  37 Goto             0   31    0               00 
  31 Yield            6   38    0               00 next row of "x"
REG[6] =  i:17
REG[6] =  i:31
  18 Explain          3    0    0 SCAN TABLE x  00 
  19 Column           1    0   10               00 r[10]=x.x
REG[10] =  i:28
  20 Ge              12   27   10 (BINARY)      51 if r[12]>=r[10] goto 27
REG[12] =  i:30
REG[10] =  i:28
  21 Add             14   10    8               00 r[8]=r[14]+r[10]
REG[14] =  i:1
REG[10] =  i:28
REG[8] =  i:29
  22 MakeRecord       8    1    9               00 r[9]=mkrec(r[8])
REG[9] =  s3[02011D...](8)
  23 Found            3   27    9 0             00 key=r[9]
REG[9] =  s3[02011D...](8)
  24 IdxInsert        3    9    0               00 key=r[9]
REG[9] =  s3[02011D...](8)
  25 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  26 Insert           2    9   13               08 intkey=r[13] data=r[9]
REG[9] =  s3[02011D...](8)
REG[13] =  i:1
  27 Goto             0   12    0               00 
  12 Rewind           2   28    0               00 
  13 NullRow          1    0    0               00 
  14 RowData          2    7    0               00 r[7]=data
REG[7] =  s3[02011D...](8)
  15 Delete           2    0    0               00 
  16 Column           1    0   11               00 r[11]=
REG[11] =  i:29
  17 Yield            6    0    0               00 
REG[6] =  i:31
REG[6] =  i:17
  32 Copy            11   15    0               00 r[15]=r[11]; x.x
REG[15] =  i:29
  33 Copy            15   19    0               00 r[19]=r[15]
REG[19] =  i:29
  34 Function         1   18   16 printf(-1)    02 r[16]=func(r[18..19])
REG[18] =   t8[ab%04xyz](8)
REG[19] =  i:29
REG[16] =   s8[ab001dyz](8)
  35 Function         0    0   17 random(0)     00 r[17]=func(r[0])
REG[17] =  i:-6391305837393974761
  36 Yield            5    0    0               00 
REG[5] =  i:40
REG[5] =  i:36
  41 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:31
  42 SCopy           15    2    0               00 r[2]=r[15]
REG[2] =  i:29
  43 SCopy           16    3    0               00 r[3]=r[16]
REG[3] =   e8[ab001dyz](8)
  44 MakeRecord       2    3   20               00 r[20]=mkrec(r[2..4])
REG[20] =  s13[04011D001D616230303164797A.....ab001dyz](8)
  45 Insert           4   20    1 t2            1B intkey=r[1] data=r[20]
REG[20] =  s13[04011D001D616230303164797A.....ab001dyz](8)
REG[1] =  i:31
  46 Goto             0   40    0               00 
  40 Yield            5   47    0               00 
REG[5] =  i:36
REG[5] =  i:40
  37 Goto             0   31    0               00 
  31 Yield            6   38    0               00 next row of "x"
REG[6] =  i:17
REG[6] =  i:31
  18 Explain          3    0    0 SCAN TABLE x  00 
  19 Column           1    0   10               00 r[10]=x.x
REG[10] =  i:29
  20 Ge              12   27   10 (BINARY)      51 if r[12]>=r[10] goto 27
REG[12] =  i:30
REG[10] =  i:29
  21 Add             14   10    8               00 r[8]=r[14]+r[10]
REG[14] =  i:1
REG[10] =  i:29
REG[8] =  i:30
  22 MakeRecord       8    1    9               00 r[9]=mkrec(r[8])
REG[9] =  s3[02011E...](8)
  23 Found            3   27    9 0             00 key=r[9]
REG[9] =  s3[02011E...](8)
  24 IdxInsert        3    9    0               00 key=r[9]
REG[9] =  s3[02011E...](8)
  25 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  26 Insert           2    9   13               08 intkey=r[13] data=r[9]
REG[9] =  s3[02011E...](8)
REG[13] =  i:1
  27 Goto             0   12    0               00 
  12 Rewind           2   28    0               00 
  13 NullRow          1    0    0               00 
  14 RowData          2    7    0               00 r[7]=data
REG[7] =  s3[02011E...](8)
  15 Delete           2    0    0               00 
  16 Column           1    0   11               00 r[11]=
REG[11] =  i:30
  17 Yield            6    0    0               00 
REG[6] =  i:31
REG[6] =  i:17
  32 Copy            11   15    0               00 r[15]=r[11]; x.x
REG[15] =  i:30
  33 Copy            15   19    0               00 r[19]=r[15]
REG[19] =  i:30
  34 Function         1   18   16 printf(-1)    02 r[16]=func(r[18..19])
REG[18] =   t8[ab%04xyz](8)
REG[19] =  i:30
REG[16] =   s8[ab001eyz](8)
  35 Function         0    0   17 random(0)     00 r[17]=func(r[0])
REG[17] =  i:3521567687910468589
  36 Yield            5    0    0               00 
REG[5] =  i:40
REG[5] =  i:36
  41 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:32
  42 SCopy           15    2    0               00 r[2]=r[15]
REG[2] =  i:30
  43 SCopy           16    3    0               00 r[3]=r[16]
REG[3] =   e8[ab001eyz](8)
  44 MakeRecord       2    3   20               00 r[20]=mkrec(r[2..4])
REG[20] =  s13[04011D001E616230303165797A.....ab001eyz](8)
  45 Insert           4   20    1 t2            1B intkey=r[1] data=r[20]
REG[20] =  s13[04011D001E616230303165797A.....ab001eyz](8)
REG[1] =  i:32
  46 Goto             0   40    0               00 
  40 Yield            5   47    0               00 
REG[5] =  i:36
REG[5] =  i:40
  37 Goto             0   31    0               00 
  31 Yield            6   38    0               00 next row of "x"
REG[6] =  i:17
REG[6] =  i:31
  18 Explain          3    0    0 SCAN TABLE x  00 
  19 Column           1    0   10               00 r[10]=x.x
REG[10] =  i:30
  20 Ge              12   27   10 (BINARY)      51 if r[12]>=r[10] goto 27
REG[12] =  i:30
REG[10] =  i:30
  27 Goto             0   12    0               00 
  12 Rewind           2   28    0               00 
  28 EndCoroutine     6    0    0               00 
REG[6] =  i:31
  38 EndCoroutine     5    0    0               00 
REG[5] =  i:40
  47 Noop             4    0    0               00 
  48 Halt             0    0    0               00 
SQL: [;ANALYZE sqlite_master;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    1    3 0             01 usesStmtJournal=0
  34 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  35 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        3    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:4
  16 NotExists        3   18    1               00 intkey=r[1]; pk
REG[1] =  i:4
  17 Rowid            3    5    0               00 r[5]=rowid
REG[5] =  i:4
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:4
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 sqlite_stat1  00 r[7]='sqlite_stat1'
REG[7] =   t12[sqlite_stat1](8)
  21 String8          0    8    0 sqlite_stat1  00 r[8]='sqlite_stat1'
REG[8] =   t12[sqlite_stat1](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  23 String8          0   10    0 CREATE TABLE sqlite_stat1(tbl,idx,stat) 00 r[10]='CREATE TABLE sqlite_stat1(tbl,idx,stat)'
REG[10] =   t39[CREATE TABLE sq](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit](8)
  25 Insert           3   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit](8)
REG[5] =  i:4
  26 Close            3    0    0               00 
  27 SetCookie        0    1    4               00 
  28 ParseSchema      0    0    0 tbl_name='sqlite_stat1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 sqlite_stat1  00 r[2]='sqlite_stat1'
REG[2] =   t12[sqlite_stat1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1w](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s3[t1w](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s12[sqlite_stat1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s12[sqlite_stat1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s39[CREATE TABLE sq](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s12[sqlite_stat1](8)
REG[6] =  i:5
REG[7] =   s39[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 OpenWrite        0    2    0 3             10 root=2 iDb=0; sqlite_stat1
  30 LoadAnalysis     0    0    0               00 
SQL: [SELECT tbl,idx,stat FROM 'main'.sqlite_stat1]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    4 0             01 usesStmtJournal=0
  12 TableLock        0    5    0 sqlite_stat1  00 iDb=0 root=5 write=0
  13 Goto             0    1    0               00 
   1 OpenRead         0    5    0 3             00 root=5 iDb=0; sqlite_stat1
   2 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
  31 Expire           0    0    0               00 
  32 Halt             0    0    0               00 
SQL: [;
;DROP TABLE IF EXISTS t7;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    4 0             01 usesStmtJournal=0
   3 Transaction      2    0    0 0             01 usesStmtJournal=0
   4 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [;CREATE INDEX wordcount_b ON b(c+c);]
VDBE Trace:
   0 Init             0   35    0               00 Start at 35
  35 Transaction      0    1    4 0             01 usesStmtJournal=0
  36 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  37 TableLock        0    3    1 b             00 iDb=0 root=3 write=1
  38 Goto             0    1    0               00 
   1 Noop             0   34    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:6
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:5
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 wordcount_b   00 r[4]='wordcount_b'
REG[4] =   t11[wordcount_b](8)
   7 String8          0    5    0 b             00 r[5]='b'
REG[5] =   t1[b](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:6
   9 String8          0    7    0 CREATE INDEX wordcount_b ON b(c+c) 00 r[7]='CREATE INDEX wordcount_b ON b(c+c)'
REG[7] =   t34[CREATE INDEX wo](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s58[0617230F0151696E646578776F726463..#..Qindexwordc](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s58[0617230F0151696E646578776F726463..#..Qindexwordc](8)
REG[2] =  i:5
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    1 k(2,,)        00 
  14 OpenRead         1    3    0 1             00 root=3 iDb=0; b
  15 Rewind           1   22    0               00 
  22 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  23 SorterSort       3   28    0               00 
  28 Close            1    0    0               00 
  29 Close            2    0    0               00 
  30 Close            3    0    0               00 
  31 SetCookie        0    1    5               00 
  32 ParseSchema      0    0    0 name='wordcount_b' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    5 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 wordcount_b   00 r[2]='wordcount_b'
REG[2] =   t11[wordcount_b](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t11[wordcount_b](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t11[wordcount_b](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[t1w](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t11[wordcount_b](8)
REG[1] =   s3[t1w](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t11[wordcount_b](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s11[wordcount_b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t11[wordcount_b](8)
REG[1] =   s11[wordcount_b](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s11[wordcount_b](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:6
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s34[CREATE INDEX wo](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s11[wordcount_b](8)
REG[6] =  i:6
REG[7] =   s34[CREATE INDEX wo](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  33 Expire           0    0    0               00 
  34 Halt             0    0    0               00 
SQL: [;CREATE INDEX wordcount_c ON b(c+c);]
VDBE Trace:
   0 Init             0   35    0               00 Start at 35
  35 Transaction      0    1    5 0             01 usesStmtJournal=0
  36 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  37 TableLock        0    3    1 b             00 iDb=0 root=3 write=1
  38 Goto             0    1    0               00 
   1 Noop             0   34    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:7
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:6
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 wordcount_c   00 r[4]='wordcount_c'
REG[4] =   t11[wordcount_c](8)
   7 String8          0    5    0 b             00 r[5]='b'
REG[5] =   t1[b](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:7
   9 String8          0    7    0 CREATE INDEX wordcount_c ON b(c+c) 00 r[7]='CREATE INDEX wordcount_c ON b(c+c)'
REG[7] =   t34[CREATE INDEX wo](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s58[0617230F0151696E646578776F726463..#..Qindexwordc](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s58[0617230F0151696E646578776F726463..#..Qindexwordc](8)
REG[2] =  i:6
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    1 k(2,,)        00 
  14 OpenRead         1    3    0 1             00 root=3 iDb=0; b
  15 Rewind           1   22    0               00 
  22 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  23 SorterSort       3   28    0               00 
  28 Close            1    0    0               00 
  29 Close            2    0    0               00 
  30 Close            3    0    0               00 
  31 SetCookie        0    1    6               00 
  32 ParseSchema      0    0    0 name='wordcount_c' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 wordcount_c   00 r[2]='wordcount_c'
REG[2] =   t11[wordcount_c](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t11[wordcount_c](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t11[wordcount_c](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[t1w](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t11[wordcount_c](8)
REG[1] =   s3[t1w](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t11[wordcount_c](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s11[wordcount_b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t11[wordcount_c](8)
REG[1] =   s11[wordcount_b](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s11[wordcount_c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t11[wordcount_c](8)
REG[1] =   s11[wordcount_c](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s11[wordcount_c](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:7
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s34[CREATE INDEX wo](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s11[wordcount_c](8)
REG[6] =  i:7
REG[7] =   s34[CREATE INDEX wo](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  33 Expire           0    0    0               00 
  34 Halt             0    0    0               00 
SQL: [;CREATE UNIQUE INDEX wordcount_d ON t2(substr(t1,2,4) COLLATE nocase);]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      0    1    6 0             01 usesStmtJournal=1
  39 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  40 TableLock        0    2    1 t2            00 iDb=0 root=2 write=1
  41 Integer          2   13    0               00 r[13]=2
REG[13] =  i:2
  42 Integer          4   14    0               00 r[14]=4
REG[14] =  i:4
  43 Goto             0    1    0               00 
   1 Noop             0   37    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:8
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:7
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 wordcount_d   00 r[4]='wordcount_d'
REG[4] =   t11[wordcount_d](8)
   7 String8          0    5    0 t2            00 r[5]='t2'
REG[5] =   t2[t2](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:8
   9 String8          0    7    0 CREATE UNIQUE INDEX wordcount_d ON t2(substr(t1,2,4) COLLATE nocase) 00 r[7]='CREATE UNIQUE INDEX wordcount_d ON t2(substr(t1,2,4) COLLATE nocase)'
REG[7] =   t68[CREATE UNIQUE I](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s94[07172311018115696E646578776F7264..#....indexword](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s94[07172311018115696E646578776F7264..#....indexword](8)
REG[2] =  i:7
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    1 k(2,NOCASE,)  00 
  14 OpenRead         1    2    0 3             00 root=2 iDb=0; t2
  15 Rewind           1   22    0               00 
  16 Column           1    1   12               00 r[12]=t2.t1
REG[12] =  NULL
  17 Function0        6   12   10 substr(3)     03 r[10]=func(r[12..14])
REG[12] =  NULL
REG[13] =  i:2
REG[14] =  i:4
REG[10] =  NULL
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:1
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s3[030009...](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s3[030009...](8)
  21 Next             1   16    0               00 
  16 Column           1    1   12               00 r[12]=t2.t1
REG[12] =   s1[a](8)
  17 Function         6   12   10 substr(3)     03 r[10]=func(r[12..14])
REG[12] =   s1[a](8)
REG[13] =  i:2
REG[14] =  i:4
REG[10] =   s0[](8)
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:2
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s4[030D0102....](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s4[030D0102....](8)
  21 Next             1   16    0               00 
  16 Column           1    1   12               00 r[12]=t2.t1
REG[12] =   s8[ab0001yz](8)
  17 Function         6   12   10 substr(3)     03 r[10]=func(r[12..14])
REG[12] =   s8[ab0001yz](8)
REG[13] =  i:2
REG[14] =  i:4
REG[10] =   s4[b000](8)
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:3
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s8[0315016230303003...b000.](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s8[0315016230303003...b000.](8)
  21 Next             1   16    0               00 
  16 Column           1    1   12               00 r[12]=t2.t1
REG[12] =   s8[ab0002yz](8)
  17 Function         6   12   10 substr(3)     03 r[10]=func(r[12..14])
REG[12] =   s8[ab0002yz](8)
REG[13] =  i:2
REG[14] =  i:4
REG[10] =   s4[b000](8)
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:4
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s8[0315016230303004...b000.](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s8[0315016230303004...b000.](8)
  21 Next             1   16    0               00 
  16 Column           1    1   12               00 r[12]=t2.t1
REG[12] =   s8[ab0003yz](8)
  17 Function         6   12   10 substr(3)     03 r[10]=func(r[12..14])
REG[12] =   s8[ab0003yz](8)
REG[13] =  i:2
REG[14] =  i:4
REG[10] =   s4[b000](8)
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:5
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s8[0315016230303005...b000.](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s8[0315016230303005...b000.](8)
  21 Next             1   16    0               00 
  16 Column           1    1   12               00 r[12]=t2.t1
REG[12] =   s8[ab0004yz](8)
  17 Function         6   12   10 substr(3)     03 r[10]=func(r[12..14])
REG[12] =   s8[ab0004yz](8)
REG[13] =  i:2
REG[14] =  i:4
REG[10] =   s4[b000](8)
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:6
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s8[0315016230303006...b000.](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s8[0315016230303006...b000.](8)
  21 Next             1   16    0               00 
  16 Column           1    1   12               00 r[12]=t2.t1
REG[12] =   s8[ab0005yz](8)
  17 Function         6   12   10 substr(3)     03 r[10]=func(r[12..14])
REG[12] =   s8[ab0005yz](8)
REG[13] =  i:2
REG[14] =  i:4
REG[10] =   s4[b000](8)
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:7
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s8[0315016230303007...b000.](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s8[0315016230303007...b000.](8)
  21 Next             1   16    0               00 
  16 Column           1    1   12               00 r[12]=t2.t1
REG[12] =   s8[ab0006yz](8)
  17 Function         6   12   10 substr(3)     03 r[10]=func(r[12..14])
REG[12] =   s8[ab0006yz](8)
REG[13] =  i:2
REG[14] =  i:4
REG[10] =   s4[b000](8)
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:8
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s8[0315016230303008...b000.](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s8[0315016230303008...b000.](8)
  21 Next             1   16    0               00 
  16 Column           1    1   12               00 r[12]=t2.t1
REG[12] =   s8[ab0007yz](8)
  17 Function         6   12   10 substr(3)     03 r[10]=func(r[12..14])
REG[12] =   s8[ab0007yz](8)
REG[13] =  i:2
REG[14] =  i:4
REG[10] =   s4[b000](8)
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:9
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s8[0315016230303009...b000.](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s8[0315016230303009...b000.](8)
  21 Next             1   16    0               00 
  16 Column           1    1   12               00 r[12]=t2.t1
REG[12] =   s8[ab0008yz](8)
  17 Function         6   12   10 substr(3)     03 r[10]=func(r[12..14])
REG[12] =   s8[ab0008yz](8)
REG[13] =  i:2
REG[14] =  i:4
REG[10] =   s4[b000](8)
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:10
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s8[031501623030300A...b000.](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s8[031501623030300A...b000.](8)
  21 Next             1   16    0               00 
  16 Column           1    1   12               00 r[12]=t2.t1
REG[12] =   s8[ab0009yz](8)
  17 Function         6   12   10 substr(3)     03 r[10]=func(r[12..14])
REG[12] =   s8[ab0009yz](8)
REG[13] =  i:2
REG[14] =  i:4
REG[10] =   s4[b000](8)
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:11
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s8[031501623030300B...b000.](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s8[031501623030300B...b000.](8)
  21 Next             1   16    0               00 
  16 Column           1    1   12               00 r[12]=t2.t1
REG[12] =   s8[ab000ayz](8)
  17 Function         6   12   10 substr(3)     03 r[10]=func(r[12..14])
REG[12] =   s8[ab000ayz](8)
REG[13] =  i:2
REG[14] =  i:4
REG[10] =   s4[b000](8)
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:12
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s8[031501623030300C...b000.](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s8[031501623030300C...b000.](8)
  21 Next             1   16    0               00 
  16 Column           1    1   12               00 r[12]=t2.t1
REG[12] =   s8[ab000byz](8)
  17 Function         6   12   10 substr(3)     03 r[10]=func(r[12..14])
REG[12] =   s8[ab000byz](8)
REG[13] =  i:2
REG[14] =  i:4
REG[10] =   s4[b000](8)
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:13
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s8[031501623030300D...b000.](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s8[031501623030300D...b000.](8)
  21 Next             1   16    0               00 
  16 Column           1    1   12               00 r[12]=t2.t1
REG[12] =   s8[ab000cyz](8)
  17 Function         6   12   10 substr(3)     03 r[10]=func(r[12..14])
REG[12] =   s8[ab000cyz](8)
REG[13] =  i:2
REG[14] =  i:4
REG[10] =   s4[b000](8)
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:14
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s8[031501623030300E...b000.](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s8[031501623030300E...b000.](8)
  21 Next             1   16    0               00 
  16 Column           1    1   12               00 r[12]=t2.t1
REG[12] =   s8[ab000dyz](8)
  17 Function         6   12   10 substr(3)     03 r[10]=func(r[12..14])
REG[12] =   s8[ab000dyz](8)
REG[13] =  i:2
REG[14] =  i:4
REG[10] =   s4[b000](8)
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:15
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s8[031501623030300F...b000.](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s8[031501623030300F...b000.](8)
  21 Next             1   16    0               00 
  16 Column           1    1   12               00 r[12]=t2.t1
REG[12] =   s8[ab000eyz](8)
  17 Function         6   12   10 substr(3)     03 r[10]=func(r[12..14])
REG[12] =   s8[ab000eyz](8)
REG[13] =  i:2
REG[14] =  i:4
REG[10] =   s4[b000](8)
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:16
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s8[0315016230303010...b000.](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s8[0315016230303010...b000.](8)
  21 Next             1   16    0               00 
  16 Column           1    1   12               00 r[12]=t2.t1
REG[12] =   s8[ab000fyz](8)
  17 Function         6   12   10 substr(3)     03 r[10]=func(r[12..14])
REG[12] =   s8[ab000fyz](8)
REG[13] =  i:2
REG[14] =  i:4
REG[10] =   s4[b000](8)
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:17
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s8[0315016230303011...b000.](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s8[0315016230303011...b000.](8)
  21 Next             1   16    0               00 
  16 Column           1    1   12               00 r[12]=t2.t1
REG[12] =   s8[ab0010yz](8)
  17 Function         6   12   10 substr(3)     03 r[10]=func(r[12..14])
REG[12] =   s8[ab0010yz](8)
REG[13] =  i:2
REG[14] =  i:4
REG[10] =   s4[b001](8)
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:18
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s8[0315016230303112...b001.](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s8[0315016230303112...b001.](8)
  21 Next             1   16    0               00 
  16 Column           1    1   12               00 r[12]=t2.t1
REG[12] =   s8[ab0011yz](8)
  17 Function         6   12   10 substr(3)     03 r[10]=func(r[12..14])
REG[12] =   s8[ab0011yz](8)
REG[13] =  i:2
REG[14] =  i:4
REG[10] =   s4[b001](8)
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:19
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s8[0315016230303113...b001.](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s8[0315016230303113...b001.](8)
  21 Next             1   16    0               00 
  16 Column           1    1   12               00 r[12]=t2.t1
REG[12] =   s8[ab0012yz](8)
  17 Function         6   12   10 substr(3)     03 r[10]=func(r[12..14])
REG[12] =   s8[ab0012yz](8)
REG[13] =  i:2
REG[14] =  i:4
REG[10] =   s4[b001](8)
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:20
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s8[0315016230303114...b001.](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s8[0315016230303114...b001.](8)
  21 Next             1   16    0               00 
  16 Column           1    1   12               00 r[12]=t2.t1
REG[12] =   s8[ab0013yz](8)
  17 Function         6   12   10 substr(3)     03 r[10]=func(r[12..14])
REG[12] =   s8[ab0013yz](8)
REG[13] =  i:2
REG[14] =  i:4
REG[10] =   s4[b001](8)
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:21
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s8[0315016230303115...b001.](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s8[0315016230303115...b001.](8)
  21 Next             1   16    0               00 
  16 Column           1    1   12               00 r[12]=t2.t1
REG[12] =   s8[ab0014yz](8)
  17 Function         6   12   10 substr(3)     03 r[10]=func(r[12..14])
REG[12] =   s8[ab0014yz](8)
REG[13] =  i:2
REG[14] =  i:4
REG[10] =   s4[b001](8)
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:22
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s8[0315016230303116...b001.](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s8[0315016230303116...b001.](8)
  21 Next             1   16    0               00 
  16 Column           1    1   12               00 r[12]=t2.t1
REG[12] =   s8[ab0015yz](8)
  17 Function         6   12   10 substr(3)     03 r[10]=func(r[12..14])
REG[12] =   s8[ab0015yz](8)
REG[13] =  i:2
REG[14] =  i:4
REG[10] =   s4[b001](8)
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:23
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s8[0315016230303117...b001.](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s8[0315016230303117...b001.](8)
  21 Next             1   16    0               00 
  16 Column           1    1   12               00 r[12]=t2.t1
REG[12] =   s8[ab0016yz](8)
  17 Function         6   12   10 substr(3)     03 r[10]=func(r[12..14])
REG[12] =   s8[ab0016yz](8)
REG[13] =  i:2
REG[14] =  i:4
REG[10] =   s4[b001](8)
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:24
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s8[0315016230303118...b001.](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s8[0315016230303118...b001.](8)
  21 Next             1   16    0               00 
  16 Column           1    1   12               00 r[12]=t2.t1
REG[12] =   s8[ab0017yz](8)
  17 Function         6   12   10 substr(3)     03 r[10]=func(r[12..14])
REG[12] =   s8[ab0017yz](8)
REG[13] =  i:2
REG[14] =  i:4
REG[10] =   s4[b001](8)
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:25
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s8[0315016230303119...b001.](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s8[0315016230303119...b001.](8)
  21 Next             1   16    0               00 
  16 Column           1    1   12               00 r[12]=t2.t1
REG[12] =   s8[ab0018yz](8)
  17 Function         6   12   10 substr(3)     03 r[10]=func(r[12..14])
REG[12] =   s8[ab0018yz](8)
REG[13] =  i:2
REG[14] =  i:4
REG[10] =   s4[b001](8)
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:26
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s8[031501623030311A...b001.](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s8[031501623030311A...b001.](8)
  21 Next             1   16    0               00 
  16 Column           1    1   12               00 r[12]=t2.t1
REG[12] =   s8[ab0019yz](8)
  17 Function         6   12   10 substr(3)     03 r[10]=func(r[12..14])
REG[12] =   s8[ab0019yz](8)
REG[13] =  i:2
REG[14] =  i:4
REG[10] =   s4[b001](8)
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:27
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s8[031501623030311B...b001.](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s8[031501623030311B...b001.](8)
  21 Next             1   16    0               00 
  16 Column           1    1   12               00 r[12]=t2.t1
REG[12] =   s8[ab001ayz](8)
  17 Function         6   12   10 substr(3)     03 r[10]=func(r[12..14])
REG[12] =   s8[ab001ayz](8)
REG[13] =  i:2
REG[14] =  i:4
REG[10] =   s4[b001](8)
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:28
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s8[031501623030311C...b001.](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s8[031501623030311C...b001.](8)
  21 Next             1   16    0               00 
  16 Column           1    1   12               00 r[12]=t2.t1
REG[12] =   s8[ab001byz](8)
  17 Function         6   12   10 substr(3)     03 r[10]=func(r[12..14])
REG[12] =   s8[ab001byz](8)
REG[13] =  i:2
REG[14] =  i:4
REG[10] =   s4[b001](8)
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:29
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s8[031501623030311D...b001.](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s8[031501623030311D...b001.](8)
  21 Next             1   16    0               00 
  16 Column           1    1   12               00 r[12]=t2.t1
REG[12] =   s8[ab001cyz](8)
  17 Function         6   12   10 substr(3)     03 r[10]=func(r[12..14])
REG[12] =   s8[ab001cyz](8)
REG[13] =  i:2
REG[14] =  i:4
REG[10] =   s4[b001](8)
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:30
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s8[031501623030311E...b001.](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s8[031501623030311E...b001.](8)
  21 Next             1   16    0               00 
  16 Column           1    1   12               00 r[12]=t2.t1
REG[12] =   s8[ab001dyz](8)
  17 Function         6   12   10 substr(3)     03 r[10]=func(r[12..14])
REG[12] =   s8[ab001dyz](8)
REG[13] =  i:2
REG[14] =  i:4
REG[10] =   s4[b001](8)
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:31
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s8[031501623030311F...b001.](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s8[031501623030311F...b001.](8)
  21 Next             1   16    0               00 
  16 Column           1    1   12               00 r[12]=t2.t1
REG[12] =   s8[ab001eyz](8)
  17 Function         6   12   10 substr(3)     03 r[10]=func(r[12..14])
REG[12] =   s8[ab001eyz](8)
REG[13] =  i:2
REG[14] =  i:4
REG[10] =   s4[b001](8)
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:32
  19 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s8[0315016230303120...b001 ](8)
  20 SorterInsert     3    9    0               00 
REG[9] =  s8[0315016230303120...b001 ](8)
  21 Next             1   16    0               00 
  22 OpenWrite        2    1    0 k(2,NOCASE,)  11 root=1 iDb=0
  23 SorterSort       3   31    0               00 
  24 Goto             0   27    0               00 
  27 SorterData       3    9    2               00 r[9]=data
  28 Last             2    0   -1               00 
  29 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s3[030009...](8)
  30 SorterNext       3   25    0               00 
  25 SorterCompare    3   27    9 1             00 if key(3)!=trim(r[9],1) goto 27
  27 SorterData       3    9    2               00 r[9]=data
  28 Last             2    0   -1               00 
  29 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s4[030D0102....](8)
  30 SorterNext       3   25    0               00 
  25 SorterCompare    3   27    9 1             00 if key(3)!=trim(r[9],1) goto 27
  27 SorterData       3    9    2               00 r[9]=data
  28 Last             2    0   -1               00 
  29 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s8[0315016230303003...b000.](8)
  30 SorterNext       3   25    0               00 
  25 SorterCompare    3   27    9 1             00 if key(3)!=trim(r[9],1) goto 27
  26 Halt          2067    2    0 index 'wordcount_d' 02 
SQL: [;CREATE UNIQUE INDEX ipk ON b(substr(c,2,4) COLLATE rtrim);]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      0    1    6 0             01 usesStmtJournal=1
  39 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  40 TableLock        0    3    1 b             00 iDb=0 root=3 write=1
  41 Integer          2   13    0               00 r[13]=2
REG[13] =  i:2
  42 Integer          4   14    0               00 r[14]=4
REG[14] =  i:4
  43 Goto             0    1    0               00 
   1 Noop             0   37    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:8
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:7
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 ipk           00 r[4]='ipk'
REG[4] =   t3[ipk](8)
   7 String8          0    5    0 b             00 r[5]='b'
REG[5] =   t1[b](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:8
   9 String8          0    7    0 CREATE UNIQUE INDEX ipk ON b(substr(c,2,4) COLLATE rtrim) 00 r[7]='CREATE UNIQUE INDEX ipk ON b(substr(c,2,4) COLLATE rtrim)'
REG[7] =   t57[CREATE UNIQUE I](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s73[0617130F017F696E64657869706B6208......indexipkb.](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s73[0617130F017F696E64657869706B6208......indexipkb.](8)
REG[2] =  i:7
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    1 k(2,RTRIM,)   00 
  14 OpenRead         1    3    0 1             00 root=3 iDb=0; b
  15 Rewind           1   22    0               00 
  22 OpenWrite        2    1    0 k(2,RTRIM,)   11 root=1 iDb=0
  23 SorterSort       3   31    0               00 
  31 Close            1    0    0               00 
  32 Close            2    0    0               00 
  33 Close            3    0    0               00 
  34 SetCookie        0    1    7               00 
  35 ParseSchema      0    0    0 name='ipk' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    7 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 ipk           00 r[2]='ipk'
REG[2] =   t3[ipk](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[ipk](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[ipk](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[t1w](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[ipk](8)
REG[1] =   s3[t1w](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[ipk](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s11[wordcount_b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[ipk](8)
REG[1] =   s11[wordcount_b](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s11[wordcount_c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[ipk](8)
REG[1] =   s11[wordcount_c](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[ipk](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[ipk](8)
REG[1] =   s3[ipk](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s3[ipk](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:8
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s57[CREATE UNIQUE I](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s3[ipk](8)
REG[6] =  i:8
REG[7] =   s57[CREATE UNIQUE I](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  36 Expire           0    0    0               00 
  37 Halt             0    0    0               00 
SQL: [;
;CREATE TABLE key(val,nn,d,e);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    7 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:9
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:8
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:8
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:8
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:8
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:8
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:8
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 key           00 r[7]='key'
REG[7] =   t3[key](8)
  21 String8          0    8    0 key           00 r[8]='key'
REG[8] =   t3[key](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:9
  23 String8          0   10    0 CREATE TABLE key(val,nn,d,e) 00 r[10]='CREATE TABLE key(val,nn,d,e)'
REG[10] =   t28[CREATE TABLE ke](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s46[0617131301457461626C656B65796B65.....Etablekeyke](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s46[0617131301457461626C656B65796B65.....Etablekeyke](8)
REG[5] =  i:8
  26 Close            1    0    0               00 
  27 SetCookie        0    1    8               00 
  28 ParseSchema      0    0    0 tbl_name='key' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    8 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 key           00 r[2]='key'
REG[2] =   t3[key](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[key](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[key](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1w](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[key](8)
REG[1] =   s3[t1w](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[key](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[key](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[key](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[key](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[key](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[key](8)
REG[1] =   s3[key](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s3[key](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:9
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s28[CREATE TABLE ke](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s3[key](8)
REG[6] =  i:9
REG[7] =   s28[CREATE TABLE ke](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0  118    0               00 Start at 118
 118 Transaction      0    0    8 0             01 usesStmtJournal=0
 119 Transaction      1    0    0 0             01 usesStmtJournal=0
 120 Transaction      2    0    0 0             01 usesStmtJournal=0
 121 TableLock        0    3    0 b             00 iDb=0 root=3 write=0
 122 Integer          2   15    0               00 r[15]=2
REG[15] =  i:2
 123 Integer          4   16    0               00 r[16]=4
REG[16] =  i:4
 124 Goto             0    1    0               00 
   1 Integer        100    1    0               00 r[1]=100
REG[1] =  i:100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
REG[1] =  i:100
   4 IntegrityCk      2    9    1 [5,4,3,8,7,6,2,1] 00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
REG[2] =  NULL
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
REG[1] =  i:100
  12 OpenRead         1    3    0 1             00 root=3 iDb=0; b
  13 OpenRead         2    8    0 k(2,RTRIM,)   00 root=8 iDb=0; ipk
  14 OpenRead         3    7    0 k(2,,)        00 root=7 iDb=0; wordcount_c
  15 OpenRead         4    6    0 k(2,,)        00 root=6 iDb=0; wordcount_b
  16 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  17 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  18 Integer          0    9    0               00 r[9]=0
REG[9] =  i:0
  19 Integer          0   10    0               00 r[10]=0
REG[10] =  i:0
  20 Rewind           1   72    0               00 
  72 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  73 IfPos            1   75    0               00 if r[1]>0 then r[1]-=0, goto 75
REG[1] =  i:100
  75 Count            2    3    0               00 r[3]=count()
REG[3] =  i:0
  76 Eq               8   81    3               90 if r[8]==r[3] goto 81
REG[8] =  i:0
REG[3] =  i:0
  81 IfPos            1   83    0               00 if r[1]>0 then r[1]-=0, goto 83
REG[1] =  i:100
  83 Count            3    3    0               00 r[3]=count()
REG[3] =  i:0
  84 Eq               9   89    3               90 if r[9]==r[3] goto 89
REG[9] =  i:0
REG[3] =  i:0
  89 IfPos            1   91    0               00 if r[1]>0 then r[1]-=0, goto 91
REG[1] =  i:100
  91 Count            4    3    0               00 r[3]=count()
REG[3] =  i:0
  92 Eq              10   97    3               90 if r[10]==r[3] goto 97
REG[10] =  i:0
REG[3] =  i:0
  97 IfPos            1   99    0               00 if r[1]>0 then r[1]-=0, goto 99
REG[1] =  i:100
  99 IntegrityCk      2    1    1 ]             01 
 100 IsNull           2  105    0               00 if r[2]==NULL goto 105
REG[2] =  NULL
 105 IfPos            1  107    0               00 if r[1]>0 then r[1]-=0, goto 107
REG[1] =  i:100
 107 IntegrityCk      2    1    1 ]             02 
 108 IsNull           2  113    0               00 if r[2]==NULL goto 113
REG[2] =  NULL
 113 AddImm           1 -100    0               00 r[1]=r[1]+-100
REG[1] =  i:100
 114 If               1  117    0               00 
REG[1] =  i:0
 115 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
 116 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
 117 Halt             0    0    0               00 
SQL: [;INSERT INTO b(c, c, c, c) VALUES(0, 0, 0, 0);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    8 0             01 usesStmtJournal=0
  31 TableLock        0    3    1 b             00 iDb=0 root=3 write=1
  32 Integer          2   10    0               00 r[10]=2
REG[10] =  i:2
  33 Integer          4   11    0               00 r[11]=4
REG[11] =  i:4
  34 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 1             00 root=3 iDb=0; b
   2 OpenWrite        1    8    0 k(2,RTRIM,)   00 root=8 iDb=0; ipk
   3 OpenWrite        2    7    0 k(2,,)        00 root=7 iDb=0; wordcount_c
   4 OpenWrite        3    6    0 k(2,,)        00 root=6 iDb=0; wordcount_b
   5 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   6 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   7 Eq               2    9    2 (BINARY)      52 if r[2]==r[2] goto 9

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f1f568ec859 in __GI_abort () at abort.c:79
#2  0x00007f1f568ec729 in __assert_fail_base (fmt=0x7f1f56a82588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x20a915 "!(fg&(MEM_Str|MEM_Blob))", file=0x222c23 "sqlite3.c", line=68526, function=<optimized out>)
    at assert.c:92
#3  0x00007f1f568fdfd6 in __GI___assert_fail (assertion=0x20a915 "!(fg&(MEM_Str|MEM_Blob))", file=0x222c23 "sqlite3.c", line=68526, function=0x21067c "int sqlite3VdbeMemStringify(Mem *, u8, u8)") at assert.c:101
#4  0x000000000027a9de in sqlite3VdbeMemStringify (pMem=0x20f4050, enc=1 '\001', bForce=1 '\001') at sqlite3.c:68526
#5  0x00000000003c7fc0 in sqlite3VdbeExec (p=<optimized out>) at sqlite3.c:78710
#6  0x000000000028b140 in sqlite3_step (pStmt=<optimized out>) at sqlite3.c:75131
#7  0x000000000024b5e9 in main (argc=1, argv=0x7ffc4319cd18) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 32003] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
