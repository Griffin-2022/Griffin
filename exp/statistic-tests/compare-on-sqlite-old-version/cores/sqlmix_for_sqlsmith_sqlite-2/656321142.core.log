GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000391,sig:06,src:020499+010563,time:16940268,execs:5259990,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
;pragma vdbe_listing=on;]
VDBE Program Listing:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
VDBE Program Listing:
   0 Init             0   12    0               00 Start at 12
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
   8 ResultRow        1    3    0               00 output=r[1..3]
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
  12 Transaction      0    0    0 0             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
SQL: [CREATE TABLE t2(x, t1, a UNIQUE, PRIMARY KEY(x, t1)) WITHOUT ROWID;]
VDBE Program Listing:
   0 Init             0   54    0               00 Start at 54
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateIndex      0    2    0               00 r[2]=root iDb=0
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Noop             0   23    0               00 
  12 CreateIndex      0    4    0               00 r[4]=root iDb=0
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
  15 String8          0    6    0 index         00 r[6]='index'
  16 String8          0    7    0 sqlite_autoindex_t2_1 00 r[7]='sqlite_autoindex_t2_1'
  17 String8          0    8    0 t2            00 r[8]='t2'
  18 Copy             4    9    0               00 r[9]=r[4]
  19 Null             0   10    0               00 r[10]=NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
  22 Close            1    0    0               00 
  23 Goto             0   35    0               00 
  24 CreateIndex      0   12    0               00 r[12]=root iDb=0
  25 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  26 NewRowid         2   13    0               00 r[13]=rowid
  27 String8          0   14    0 index         00 r[14]='index'
  28 String8          0   15    0 sqlite_autoindex_t2_2 00 r[15]='sqlite_autoindex_t2_2'
  29 String8          0   16    0 t2            00 r[16]='t2'
  30 Copy            12   17    0               00 r[17]=r[12]
  31 Null             0   18    0               00 r[18]=NULL
  32 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
  33 Insert           2   19   13               18 intkey=r[13] data=r[19]
  34 Close            2    0    0               00 
  35 Close            0    0    0               00 
  36 Null             0   20   21               00 r[20..21]=NULL
  37 OpenWrite        3    1    0 5             00 root=1 iDb=0; sqlite_master
  38 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  39 MustBeInt        1   42    0               00 
  40 NotExists        3   42    1               00 intkey=r[1]; pk
  41 Rowid            3   21    0               00 r[21]=rowid
  42 IsNull          21   50    0               00 if r[21]==NULL goto 50
  43 String8          0   22    0 table         00 r[22]='table'
  44 String8          0   23    0 t2            00 r[23]='t2'
  45 String8          0   24    0 t2            00 r[24]='t2'
  46 Copy             2   25    0               00 r[25]=r[2]
  47 String8          0   26    0 CREATE TABLE t2(x, t1, a UNIQUE, PRIMARY KEY(x, t1)) WITHOUT ROWID 00 r[26]='CREATE TABLE t2(x, t1, a UNIQUE, PRIMARY KEY(x, t1)) WITHOUT ROWID'
  48 MakeRecord      22    5   27 BBBDB         00 r[27]=mkrec(r[22..26])
  49 Insert           3   27   21               00 intkey=r[21] data=r[27]
  50 Close            3    0    0               00 
  51 SetCookie        0    1    1               00 
  52 ParseSchema      0    0    0 tbl_name='t2' AND type!='trigger' 00 
  53 Halt             0    0    0               00 
  54 Transaction      0    1    0 0             01 usesStmtJournal=0
  55 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  56 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   16    0               00 Start at 16
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
   7 Column           0    0    3               00 r[3]=sqlite_master.type
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
   9 Column           0    1    5               00 r[5]=sqlite_master.name
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
  12 ResultRow        5    3    0               00 output=r[5..7]
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  16 Transaction      0    0    1 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t2            00 r[2]='t2'
  19 String8          0    4    0 trigger       00 r[4]='trigger'
  20 Goto             0    1    0               00 
SQL: [;INSERT INTO t2 VALUES('x', 't1', 2);]
VDBE Program Listing:
   0 Init             0   26    0               00 Start at 26
   1 OpenWrite        1    2    0 k(2,,)        00 root=2 iDb=0; sqlite_autoindex_t2_2
   2 OpenWrite        2    3    0 k(3,,,)       00 root=3 iDb=0; sqlite_autoindex_t2_1
   3 Null             0    1    0               00 r[1]=NULL
   4 String8          0    2    0 x             00 r[2]='x'
   5 String8          0    3    0 t1            00 r[3]='t1'
   6 Integer          2    4    0               00 r[4]=2
   7 HaltIfNull    1299    2    2 t2.x          01 if r[2]=null halt
   8 HaltIfNull    1299    2    3 t2.t1         01 if r[3]=null halt
   9 SCopy            2    7    0               00 r[7]=r[2]; x
  10 SCopy            3    8    0               00 r[8]=r[3]; t1
  11 SCopy            4    9    0               00 r[9]=r[4]; a
  12 MakeRecord       7    3    5               00 r[5]=mkrec(r[7..9]); for sqlite_autoindex_t2_2
  13 NoConflict       1   15    7 2             00 key=r[7..8]
  14 Halt          1555    2    0 t2.x, t2.t1   02 
  15 SCopy            4    7    0               00 r[7]=r[4]; a
  16 SCopy            2    8    0               00 r[8]=r[2]; x
  17 SCopy            3    9    0               00 r[9]=r[3]; t1
  18 MakeRecord       7    3    6               00 r[6]=mkrec(r[7..9]); for sqlite_autoindex_t2_1
  19 NoConflict       2   21    7 1             00 key=r[7]
  20 Halt          2067    2    0 t2.a          02 
  21 IdxInsert        1    5    0               11 key=r[5]
  22 IdxInsert        2    6    0               10 key=r[6]
  23 Close            1    0    0               00 
  24 Noop             2    0    0               00 
  25 Halt             0    0    0               00 
  26 Transaction      0    1    1 0             01 usesStmtJournal=0
  27 TableLock        0    2    1 t2            00 iDb=0 root=2 write=1
  28 Goto             0    1    0               00 
SQL: [;INSERT INTO t2 VALUES('t1', 't1', 4);]
VDBE Program Listing:
   0 Init             0   26    0               00 Start at 26
   1 OpenWrite        1    2    0 k(2,,)        00 root=2 iDb=0; sqlite_autoindex_t2_2
   2 OpenWrite        2    3    0 k(3,,,)       00 root=3 iDb=0; sqlite_autoindex_t2_1
   3 Null             0    1    0               00 r[1]=NULL
   4 String8          0    2    0 t1            00 r[2]='t1'
   5 String8          0    3    0 t1            00 r[3]='t1'
   6 Integer          4    4    0               00 r[4]=4
   7 HaltIfNull    1299    2    2 t2.x          01 if r[2]=null halt
   8 HaltIfNull    1299    2    3 t2.t1         01 if r[3]=null halt
   9 SCopy            2    7    0               00 r[7]=r[2]; x
  10 SCopy            3    8    0               00 r[8]=r[3]; t1
  11 SCopy            4    9    0               00 r[9]=r[4]; a
  12 MakeRecord       7    3    5               00 r[5]=mkrec(r[7..9]); for sqlite_autoindex_t2_2
  13 NoConflict       1   15    7 2             00 key=r[7..8]
  14 Halt          1555    2    0 t2.x, t2.t1   02 
  15 SCopy            4    7    0               00 r[7]=r[4]; a
  16 SCopy            2    8    0               00 r[8]=r[2]; x
  17 SCopy            3    9    0               00 r[9]=r[3]; t1
  18 MakeRecord       7    3    6               00 r[6]=mkrec(r[7..9]); for sqlite_autoindex_t2_1
  19 NoConflict       2   21    7 1             00 key=r[7]
  20 Halt          2067    2    0 t2.a          02 
  21 IdxInsert        1    5    0               11 key=r[5]
  22 IdxInsert        2    6    0               10 key=r[6]
  23 Close            1    0    0               00 
  24 Noop             2    0    0               00 
  25 Halt             0    0    0               00 
  26 Transaction      0    1    1 0             01 usesStmtJournal=0
  27 TableLock        0    2    1 t2            00 iDb=0 root=2 write=1
  28 Goto             0    1    0               00 
SQL: [;;
;CREATE TRIGGER b BEFORE UPDATE ON t2 BEGIN
    DELETE FROM t2 WHERE t1 = new.t1;
  END;]
VDBE Program Listing:
   0 Init             0   14    0               00 Start at 14
   1 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 NewRowid         0    1    0               00 r[1]=rowid
   3 String8          0    2    0 trigger       00 r[2]='trigger'
   4 String8          0    3    0 b             00 r[3]='b'
   5 String8          0    4    0 t2            00 r[4]='t2'
   6 Integer          0    5    0               00 r[5]=0
   7 String8          0    6    0 CREATE TRIGGER b BEFORE UPDATE ON t2 BEGIN
    DELETE FROM t2 WHERE t1 = new.t1;
  END 00 r[6]='CREATE TRIGGER b BEFORE UPDATE ON t2 BEGIN
    DELETE FROM t2 WHERE t1 = new.t1;
  END'
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
  10 Close            0    0    0               00 
  11 SetCookie        0    1    2               00 
  12 ParseSchema      0    0    0 type='trigger' AND name='b' 00 
  13 Halt             0    0    0               00 
  14 Transaction      0    1    1 0             01 usesStmtJournal=0
  15 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  16 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   16    0               00 Start at 16
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
   7 Column           0    1    3               00 r[3]=sqlite_master.name
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
   9 Copy             3    5    0               00 r[5]=r[3]
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
  12 ResultRow        5    3    0               00 output=r[5..7]
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  16 Transaction      0    0    2 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 trigger       00 r[2]='trigger'
  19 String8          0    4    0 b             00 r[4]='b'
  20 Goto             0    1    0               00 
SQL: [;UPDATE t2 SET t1 = t1+1 WHERE a = 'a';]
VDBE Program Listing:
   0 Init             0   53    0               00 Start at 53
   1 Null             0   12    0               00 r[12]=NULL
   2 Noop             3    2    0               00 
   3 OpenWrite        2    3    0 k(3,,,)       02 root=3 iDb=0; sqlite_autoindex_t2_1
   4 Explain          0    0    0 SEARCH TABLE t2 USING COVERING INDEX sqlite_autoindex_t2_1 (a=?) 00 
   5 String8          0   15    0 a             00 r[15]='a'
   6 SeekGE           2   10   15 1             00 key=r[15]
   7 IdxGT            2   10   15 1             00 key=r[15]
   8 Column           2    1   12               00 r[12]=t2.x
   9 Column           2    2   13               00 r[13]=t2.t1
  10 OpenWrite        1    2    0 k(2,,)        00 root=2 iDb=0; sqlite_autoindex_t2_2
  11 NotFound         1   51   12 2             00 key=r[12..13]
  12 IsNull          12   51    0               00 if r[12]==NULL goto 51
  13 Column           1    0    5               00 r[5]=t2.x
  14 Column           1    1    6               00 r[6]=t2.t1
  15 Null             0    7    0               00 r[7]=NULL
  16 Null             0    9    0               00 r[9]=NULL
  17 Column           1    1   16               00 r[16]=t2.t1
  18 Add             17   16   10               00 r[10]=r[17]+r[16]
  19 Null             0   11    0               00 r[11]=NULL
  20 Program          4   51   18 program       01 Call: b.default
  21 NotFound         1   51   12 2             00 key=r[12..13]
  22 Column           1    0    9               00 r[9]=t2.x
  23 Column           1    2   11               00 r[11]=t2.a
  24 HaltIfNull    1299    2   10 t2.t1         01 if r[10]=null halt
  25 SCopy            9   19    0               00 r[19]=r[9]; x
  26 SCopy           10   20    0               00 r[20]=r[10]; t1
  27 SCopy           11   21    0               00 r[21]=r[11]; a
  28 MakeRecord      19    3    1               00 r[1]=mkrec(r[19..21]); for sqlite_autoindex_t2_2
  29 NoConflict       1   33   19 2             00 key=r[19..20]
  30 Ne               5   32   19 (BINARY)      90 if r[5]!=r[19] goto 32
  31 Eq               6   33   20 (BINARY)      90 if r[6]==r[20] goto 33
  32 Halt          1555    2    0 t2.x, t2.t1   02 
  33 SCopy           11   19    0               00 r[19]=r[11]; a
  34 SCopy            9   20    0               00 r[20]=r[9]; x
  35 SCopy           10   21    0               00 r[21]=r[10]; t1
  36 MakeRecord      19    3    2               00 r[2]=mkrec(r[19..21]); for sqlite_autoindex_t2_1
  37 NoConflict       2   43   19 1             00 key=r[19]
  38 Column           2    1   22               00 r[22]=t2.x
  39 Column           2    2   23               00 r[23]=t2.t1
  40 Ne               5   42   22 (BINARY)      90 if r[5]!=r[22] goto 42
  41 Eq               6   43   23 (BINARY)      90 if r[6]==r[23] goto 43
  42 Halt          2067    2    0 t2.a          02 
  43 NotFound         1   49   12 2             00 key=r[12..13]
  44 Column           1    2   19               00 r[19]=t2.a
  45 Column           1    0   20               00 r[20]=t2.x
  46 Column           1    1   21               00 r[21]=t2.t1
  47 IdxDelete        2   19    3               00 key=r[19..21]
  48 Delete           1    0    0               00 
  49 IdxInsert        1    1    0               01 key=r[1]
  50 IdxInsert        2    2    0               00 key=r[2]
  51 Noop             1    0    0               00 
  52 Halt             0    0    0               00 
  53 Transaction      0    1    2 0             01 usesStmtJournal=1
  54 TableLock        0    2    1 t2            00 iDb=0 root=2 write=1
  55 Integer          1   17    0               00 r[17]=1
  56 Goto             0    1    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fd6b1ead859 in __GI_abort () at abort.c:79
#2  0x00007fd6b1ead729 in __assert_fail_base (fmt=0x7fd6b2043588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21f0e2 "memIsValid(&r.aMem[ii])", file=0x222c23 "sqlite3.c", line=80649, function=<optimized out>)
    at assert.c:92
#3  0x00007fd6b1ebefd6 in __GI___assert_fail (assertion=0x21f0e2 "memIsValid(&r.aMem[ii])", file=0x222c23 "sqlite3.c", line=80649, function=0x213a19 "int sqlite3VdbeExec(Vdbe *)") at assert.c:101
#4  0x00000000003e29eb in sqlite3VdbeExec (p=<optimized out>) at sqlite3.c:80649
#5  0x000000000028b140 in sqlite3_step (pStmt=<optimized out>) at sqlite3.c:75131
#6  0x000000000024b5e9 in main (argc=1, argv=0x7ffe08eb4a98) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 31572] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
