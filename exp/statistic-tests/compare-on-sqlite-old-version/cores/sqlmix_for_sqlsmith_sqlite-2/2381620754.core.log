GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000341,sig:06,src:024376+022096,time:12330505,execs:3382981,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    2 1             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[.t.2](16BE)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s72[.C.R.E.A.T.E. .](16BE)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s4[.t.2](16BE)
REG[2] =  i:3
REG[3] =   s72[.C.R.E.A.T.E. .](16BE)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;SELECT quote(x) FROM t2 ORDER BY rowid;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 1             01 usesStmtJournal=0
  12 TableLock        0    3    0 t2            00 iDb=0 root=3 write=0
  13 Goto             0    1    0               00 
   1 Noop             1    3    0               00 
   2 OpenRead         0    3    0 1             00 root=3 iDb=0; t2
   3 Explain          0    0    0 SCAN TABLE t2 00 
   4 Rewind           0    9    0               00 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
SQL: [SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    2 1             01 usesStmtJournal=0
  18 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  19 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t10[.t.a.b.l.e](16BE)
  20 String8          0    3    0 view          00 r[3]='view'
REG[3] =   t8[.v.i.e.w](16BE)
  21 String8          0    4    0 sqliteX_%     00 r[4]='sqliteX_%'
REG[4] =   t18[.s.q.l.i.t.e.X.](16BE)
  22 String8          0    6    0 X             00 r[6]='X'
REG[6] =   t2[.X](16BE)
  23 Goto             0    1    0               00 
   1 OpenRead         0    1    0 2             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   15    0               00 
   4 Noop             0    0    0               00 begin IN expr
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s10[.t.a.b.l.e](16BE)
   6 Eq               1    8    2 (BINARY)      42 if r[1]==r[2] goto 8
REG[1] =   s10[.t.a.b.l.e](16BE)
REG[2] =   t10[.t.a.b.l.e](16BE)
   8 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s4[.t.2](16BE)
   9 Function0        5    4    1 like(3)       03 r[1]=func(r[4..6])
REG[4] =   t18[.s.q.l.i.t.e.X.](16BE)
REG[5] =   s4[.t.2](16BE)
REG[6] =   t2[.X](16BE)
REG[1] =  i:0
  10 If               1   14    1               00 
REG[1] =  i:0
  11 Column           0    1    7               00 r[7]=sqlite_master.name
REG[7] =   s4[.t.2](16BE)
  12 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s10[.t.a.b.l.e](16BE)
  13 ResultRow        7    2    0               00 output=r[7..8]
REG[7] =   s4[.t.2](16BE)
REG[8] =   s10[.t.a.b.l.e](16BE)
  14 Next             0    4    0               01 
  15 Close            0    0    0               00 
  16 Halt             0    0    0               00 
SQL: [;INSERT INTO t2 VALUES(2);]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    1    2 1             01 usesStmtJournal=0
  11 TableLock        0    3    1 t2            00 iDb=0 root=3 write=1
  12 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 1             00 root=3 iDb=0; t2
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
   4 Eq               2    6    2 (BINARY)      52 if r[2]==r[2] goto 6

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fc7d2bcd859 in __GI_abort () at abort.c:79
#2  0x00007fc7d2bcd729 in __assert_fail_base (fmt=0x7fc7d2d63588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x20a915 "!(fg&(MEM_Str|MEM_Blob))", file=0x222c23 "sqlite3.c", line=68526, function=<optimized out>)
    at assert.c:92
#3  0x00007fc7d2bdefd6 in __GI___assert_fail (assertion=0x20a915 "!(fg&(MEM_Str|MEM_Blob))", file=0x222c23 "sqlite3.c", line=68526, function=0x21067c "int sqlite3VdbeMemStringify(Mem *, u8, u8)") at assert.c:101
#4  0x000000000027a9de in sqlite3VdbeMemStringify (pMem=0x23385e8, enc=3 '\003', bForce=1 '\001') at sqlite3.c:68526
#5  0x00000000003c7fc0 in sqlite3VdbeExec (p=<optimized out>) at sqlite3.c:78710
#6  0x000000000028b140 in sqlite3_step (pStmt=<optimized out>) at sqlite3.c:75131
#7  0x000000000024b5e9 in main (argc=1, argv=0x7fff13ef4f78) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 31155] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
