GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000441,sig:06,src:020765+023673,time:21049866,execs:6970877,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    0 0             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;CREATE TABLE t2(x UNIQUE ON CONFLICT REPLACE, t1);]
VDBE Trace:
   0 Init             0   42    0               00 Start at 42
  42 Transaction      0    1    0 0             01 usesStmtJournal=0
  43 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  44 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Noop             0   23    0               00 
  12 CreateIndex      0    4    0               00 r[4]=root iDb=0
REG[4] =  i:3
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:2
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_t2_1 00 r[7]='sqlite_autoindex_t2_1'
REG[7] =   t21[sqlite_autoinde](8)
  17 String8          0    8    0 t2            00 r[8]='t2'
REG[8] =   t2[t2](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:3
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s35[061737110100696E64657873716C6974..7...indexsqlit](8)
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  s35[061737110100696E64657873716C6974..7...indexsqlit](8)
REG[5] =  i:2
  22 Close            1    0    0               00 
  23 Close            0    0    0               00 
  24 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  25 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  26 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  27 MustBeInt        1   30    0               00 
REG[1] =  i:1
  28 NotExists        2   30    1               00 intkey=r[1]; pk
REG[1] =  i:1
  29 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:1
  30 IsNull          13   38    0               00 if r[13]==NULL goto 38
REG[13] =  i:1
  31 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  32 String8          0   15    0 t2            00 r[15]='t2'
REG[15] =   t2[t2](8)
  33 String8          0   16    0 t2            00 r[16]='t2'
REG[16] =   t2[t2](8)
  34 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:2
  35 String8          0   18    0 CREATE TABLE t2(x UNIQUE ON CONFLICT REPLACE, t1) 00 r[18]='CREATE TABLE t2(x UNIQUE ON CONFLICT REPLACE, t1)'
REG[18] =   t49[CREATE TABLE t2](8)
  36 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s65[06171111016F7461626C657432743202.....otablet2t2.](8)
  37 Insert           2   19   13               00 intkey=r[13] data=r[19]
REG[19] =  s65[06171111016F7461626C657432743202.....otablet2t2.](8)
REG[13] =  i:1
  38 Close            2    0    0               00 
  39 SetCookie        0    1    1               00 
  40 ParseSchema      0    0    0 tbl_name='t2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    1 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t2            00 r[2]='t2'
REG[2] =   t2[t2](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t2](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t2](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s49[CREATE TABLE t2](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t2](8)
REG[6] =  i:2
REG[7] =   s49[CREATE TABLE t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t2](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s21[sqlite_autoinde](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =  NULL
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s21[sqlite_autoinde](8)
REG[6] =  i:3
REG[7] =  NULL
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  41 Halt             0    0    0               00 
SQL: [SELECT 'abc123'='abc123                         ' COLLATE RTRIM;]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 String8          0    2    0 abc123        00 r[2]='abc123'
REG[2] =   t6[abc123](8)
   5 String8          0    3    0 abc123                          00 r[3]='abc123                         '
REG[3] =   t31[abc123         ](8)
   6 Goto             0    1    0               00 
   1 Eq               3    1    2 (RTRIM)       61 if r[3]==r[2] goto 1
REG[3] =   t31[abc123         ](8)
REG[2] =   t6[abc123](8)
REG[1] =  i:1
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   3 Halt             0    0    0               00 
SQL: [;PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0   62    0               00 Start at 62
  62 Transaction      0    0    1 0             01 usesStmtJournal=0
  63 Transaction      1    0    0 0             01 usesStmtJournal=0
  64 TableLock        0    2    0 t2            00 iDb=0 root=2 write=0
  65 Goto             0    1    0               00 
   1 Integer        100    1    0               00 r[1]=100
REG[1] =  i:100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
REG[1] =  i:100
   4 IntegrityCk      2    3    1 [3]           00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
REG[2] =  NULL
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
REG[1] =  i:100
  12 OpenRead         1    2    0 2             00 root=2 iDb=0; t2
  13 OpenRead         2    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t2_1
  14 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  15 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  16 Rewind           1   40    0               00 
  40 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  41 IfPos            1   43    0               00 if r[1]>0 then r[1]-=0, goto 43
REG[1] =  i:100
  43 Count            2    3    0               00 r[3]=count()
REG[3] =  i:0
  44 Eq               8   49    3               90 if r[8]==r[3] goto 49
REG[8] =  i:0
REG[3] =  i:0
  49 IfPos            1   51    0               00 if r[1]>0 then r[1]-=0, goto 51
REG[1] =  i:100
  51 IntegrityCk      2    1    1 ]             01 
  52 IsNull           2   57    0               00 if r[2]==NULL goto 57
REG[2] =  NULL
  57 AddImm           1 -100    0               00 r[1]=r[1]+-100
REG[1] =  i:100
  58 If               1   61    0               00 
REG[1] =  i:0
  59 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
  60 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
  61 Halt             0    0    0               00 
SQL: [;PRAGMA count_changes = 1;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;SELECT x<>x FROM t2;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    1 0             01 usesStmtJournal=0
  11 TableLock        0    2    0 t2            00 iDb=0 root=2 write=0
  12 Goto             0    1    0               00 
   1 OpenRead         1    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t2_1
   2 Explain          0    0    0 SCAN TABLE t2 USING COVERING INDEX sqlite_autoindex_t2_1 00 
   3 Rewind           1    8    1 0             00 
   8 Close            1    0    0               00 
   9 Halt             0    0    0               00 
SQL: [;INSERT INTO t2(t1,t1,t1,t1,t1) VALUES(1,2,3,4,5);]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    1    1 0             01 usesStmtJournal=0
  25 TableLock        0    2    1 t2            00 iDb=0 root=2 write=1
  26 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  27 Goto             0    1    0               00 
   1 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
   2 OpenWrite        0    2    0 2             00 root=2 iDb=0; t2
   3 OpenWrite        1    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t2_1
   4 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   5 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   6 SCopy            2    6    0               00 r[6]=r[2]; x
REG[6] =  NULL
   7 IntCopy          1    7    0               00 r[7]=r[1]; rowid
REG[7] =  i:1
   8 MakeRecord       6    2    5               00 r[5]=mkrec(r[6..7]); for sqlite_autoindex_t2_1
REG[5] =  s3[030009...](8)
   9 NoConflict       1   16    6 1             00 key=r[6]
REG[6] =  NULL
  16 IdxInsert        1    5    0               00 key=r[5]
REG[5] =  s3[030009...](8)
  17 MakeRecord       2    2   11               00 r[11]=mkrec(r[2..3])
REG[11] =  s3[030009...](8)
  18 Insert           0   11    1 t2            0B intkey=r[1] data=r[11]
REG[11] =  s3[030009...](8)
REG[1] =  i:1
  19 AddImm           4    1    0               00 r[4]=r[4]+1
REG[4] =  i:0
  20 Close            0    0    0               00 
  21 Close            1    0    0               00 
  22 ResultRow        4    1    0               00 output=r[4]
REG[4] =  i:1
  23 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE  1  ||  (34 BETWEEN t1 AND 33) ORDER BY t1
;]
VDBE Trace:
   0 Init             0   26    0               00 Start at 26
  26 Transaction      0    0    1 0             01 usesStmtJournal=0
  27 TableLock        0    2    0 t2            00 iDb=0 root=2 write=0
  28 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  29 Integer         34    4    0               00 r[4]=34
REG[4] =  i:34
  30 Integer         33    8    0               00 r[8]=33
REG[8] =  i:33
  31 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t2
   3 Explain          0    0    0 SCAN TABLE t2 00 
   4 Rewind           0   17    0               00 
   5 Column           0    1    5               00 r[5]=t2.t1
REG[5] =  i:1
   6 Ge               5    6    4 (BINARY)      61 if r[5]>=r[4] goto 6
REG[5] =  i:1
REG[4] =  i:34
REG[6] =  i:1
   7 Le               8    7    4               61 if r[8]<=r[4] goto 7
REG[8] =  i:33
REG[4] =  i:34
REG[7] =  i:0
   8 And              6    7    3               00 r[3]=(r[6] && r[7])
REG[6] =  i:1
REG[7] =  i:0
REG[3] =  i:0
   9 Concat           3    2    1               00 r[1]=r[2]+r[3]
REG[3] =  i:0
REG[2] =  i:1
REG[1] =   s2[10](8)
  10 IfNot            1   16    1               00 
REG[1] =   s2[10](8)
  11 Column           0    0   10               00 r[10]=t2.x
REG[10] =  NULL
  12 Copy             5   11    0               00 r[11]=r[5]
REG[11] =  i:1
  13 Copy            11    9    0               00 r[9]=r[11]
REG[9] =  i:1
  14 MakeRecord       9    3   12               00 r[12]=mkrec(r[9..11])
REG[12] =  s4[04090009....](8)
  15 SorterInsert     1   12    0               00 
REG[12] =  s4[04090009....](8)
  16 Next             0    5    0               01 
  17 Close            0    0    0               00 
  18 OpenPseudo       2   13    4               00 4 columns in r[13]
  19 SorterSort       1   25    0               00 
  20 SorterData       1   13    2               00 r[13]=data
  21 Column           2    1   10               00 r[10]=x
REG[10] =  NULL
  22 Column           2    2   11               00 r[11]=t1
REG[11] =  i:1
  23 ResultRow       10    2    0               00 output=r[10..11]
REG[10] =  NULL
REG[11] =  i:1
  24 SorterNext       1   20    0               00 
  25 Halt             0    0    0               00 
SQL: [;CREATE INDEX a ON t2 (lower(t1));]
VDBE Trace:
   0 Init             0   37    0               00 Start at 37
  37 Transaction      0    1    1 0             01 usesStmtJournal=0
  38 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  39 TableLock        0    2    1 t2            00 iDb=0 root=2 write=1
  40 Goto             0    1    0               00 
   1 Noop             0   36    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:4
   3 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
   4 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   5 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:3
   6 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   7 String8          0    4    0 a             00 r[4]='a'
REG[4] =   t1[a](8)
   8 String8          0    5    0 t2            00 r[5]='t2'
REG[5] =   t2[t2](8)
   9 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:4
  10 String8          0    7    0 CREATE INDEX a ON t2 (lower(t1)) 00 r[7]='CREATE INDEX a ON t2 (lower(t1))'
REG[7] =   t32[CREATE INDEX a ](8)
  11 MakeRecord       3    5    9 BBBDB         00 r[9]=mkrec(r[3..7])
REG[9] =  s47[06170F11014D696E6465786174320443.....Mindexat2.C](8)
  12 Insert           0    9    2               18 intkey=r[2] data=r[9]
REG[9] =  s47[06170F11014D696E6465786174320443.....Mindexat2.C](8)
REG[2] =  i:3
  13 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  14 Close            0    0    0               00 
  15 SorterOpen       3    0    1 k(2,,)        00 
  16 OpenRead         1    2    0 2             00 root=2 iDb=0; t2
  17 Rewind           1   24    0               00 
  18 Column           1    1   13               00 r[13]=t2.t1
REG[13] =  i:1
  19 Function0        0   13   11 lower(1)      01 r[11]=func(r[13])
REG[13] =  i:1
REG[11] =   z1[1](8)
  20 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:1
  21 MakeRecord      11    2   10               00 r[10]=mkrec(r[11..12])
REG[10] =  s4[030F0931...1](8)
  22 SorterInsert     3   10    0               00 
REG[10] =  s4[030F0931...1](8)
  23 Next             1   18    0               00 
  24 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  25 SorterSort       3   30    0               00 
  26 SorterData       3   10    2               00 r[10]=data
  27 Last             2    0   -1               00 
  28 IdxInsert        2   10    0               10 key=r[10]
REG[10] =  s4[030F0931...1](8)
  29 SorterNext       3   26    0               00 
  30 Close            1    0    0               00 
  31 Close            2    0    0               00 
  32 Close            3    0    0               00 
  33 SetCookie        0    1    2               00 
  34 ParseSchema      0    0    0 name='a' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s21[sqlite_autoinde](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s21[sqlite_autoinde](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s1[a](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s32[CREATE INDEX a ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[a](8)
REG[6] =  i:4
REG[7] =   s32[CREATE INDEX a ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  35 Expire           0    0    0               00 
  36 Halt             0    0    0               00 
SQL: [;SELECT x=2 AND x=2 FROM t2;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    2 0             01 usesStmtJournal=0
  13 TableLock        0    2    0 t2            00 iDb=0 root=2 write=0
  14 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  15 Goto             0    1    0               00 
   1 OpenRead         1    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t2_1
   2 Explain          0    0    0 SCAN TABLE t2 USING COVERING INDEX sqlite_autoindex_t2_1 00 
   3 Rewind           1   10    1 0             00 
   4 Column           1    0    3               00 r[3]=t2.x
REG[3] =  NULL
   5 Eq               4    2    3 (BINARY)      61 if r[4]==r[3] goto 2
REG[4] =  i:2
REG[3] =  NULL
REG[2] =  NULL
   6 Eq               4    5    3 (BINARY)      61 if r[4]==r[3] goto 5
REG[4] =  i:2
REG[3] =  NULL
REG[5] =  NULL
   7 And              5    2    1               00 r[1]=(r[5] && r[2])
REG[5] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   8 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   9 Next             1    4    0               01 
  10 Close            1    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;BEGIN;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [;
;DELETE FROM t2;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    1    2 0             01 usesStmtJournal=0
   8 TableLock        0    2    1 t2            00 iDb=0 root=2 write=1
   9 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 Clear            2    0    1 t2            00 
   3 Clear            4    0    0               00 
   4 Clear            3    0    0               00 
   5 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   6 Halt             0    0    0               00 
SQL: [;SELECT t1+t1, t1+t1 FROM t2 ORDER BY t1+t1, t1+t1;]
VDBE Trace:
   0 Init             0   22    0               00 Start at 22
  22 Transaction      0    0    2 0             01 usesStmtJournal=0
  23 TableLock        0    2    0 t2            00 iDb=0 root=2 write=0
  24 Goto             0    1    0               00 
   1 SorterOpen       1    5    0 k(2,B,B)      00 
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t2
   3 Explain          0    0    0 SCAN TABLE t2 00 
   4 Rewind           0   13    0               00 
  13 Close            0    0    0               00 
  14 OpenPseudo       2    8    5               00 5 columns in r[8]
  15 SorterSort       1   21    0               00 
  21 Halt             0    0    0               00 
SQL: [;BEGIN;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [;CREATE INDEX b ON t2(x*x);]
VDBE Trace:
   0 Init             0   37    0               00 Start at 37
  37 Transaction      0    1    2 0             01 usesStmtJournal=0
  38 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  39 TableLock        0    2    1 t2            00 iDb=0 root=2 write=1
  40 Goto             0    1    0               00 
   1 Noop             0   36    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:5
   3 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
   4 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   5 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:4
   6 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   7 String8          0    4    0 b             00 r[4]='b'
REG[4] =   t1[b](8)
   8 String8          0    5    0 t2            00 r[5]='t2'
REG[5] =   t2[t2](8)
   9 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:5
  10 String8          0    7    0 CREATE INDEX b ON t2(x*x) 00 r[7]='CREATE INDEX b ON t2(x*x)'
REG[7] =   t25[CREATE INDEX b ](8)
  11 MakeRecord       3    5    9 BBBDB         00 r[9]=mkrec(r[3..7])
REG[9] =  s40[06170F11013F696E6465786274320543.....?indexbt2.C](8)
  12 Insert           0    9    2               18 intkey=r[2] data=r[9]
REG[9] =  s40[06170F11013F696E6465786274320543.....?indexbt2.C](8)
REG[2] =  i:4
  13 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  14 Close            0    0    0               00 
  15 SorterOpen       3    0    1 k(2,,)        00 
  16 OpenRead         1    2    0 2             00 root=2 iDb=0; t2
  17 Rewind           1   24    0               00 
  24 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  25 SorterSort       3   30    0               00 
  30 Close            1    0    0               00 
  31 Close            2    0    0               00 
  32 Close            3    0    0               00 
  33 SetCookie        0    1    3               00 
  34 ParseSchema      0    0    0 name='b' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 b             00 r[2]='b'
REG[2] =   t1[b](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[b](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s21[sqlite_autoinde](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[b](8)
REG[1] =   s21[sqlite_autoinde](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[b](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[b](8)
REG[1] =   s1[b](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s1[b](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s25[CREATE INDEX b ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[b](8)
REG[6] =  i:5
REG[7] =   s25[CREATE INDEX b ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  35 Expire           0    0    0               00 
  36 Halt             0    0    0               00 
SQL: [;INSERT INTO t2(t1,t1,t1,t1,t1) VALUES(1,2,3,4,5);]
VDBE Trace:
   0 Init             0   41    0               00 Start at 41
  41 Transaction      0    1    3 0             01 usesStmtJournal=0
  42 TableLock        0    2    1 t2            00 iDb=0 root=2 write=1
  43 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  44 Goto             0    1    0               00 
   1 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
   2 OpenWrite        0    2    0 2             00 root=2 iDb=0; t2
   3 OpenWrite        1    5    0 k(2,,)        00 root=5 iDb=0; b
   4 OpenWrite        2    4    0 k(2,,)        00 root=4 iDb=0; a
   5 OpenWrite        3    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t2_1
   6 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   7 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   8 Multiply         2    2    8               00 r[8]=r[2]*r[2]; b column 0
REG[2] =  NULL
REG[2] =  NULL
REG[8] =  NULL
   9 IntCopy          1    9    0               00 r[9]=r[1]; rowid
REG[9] =  i:1
  10 MakeRecord       8    2    5               00 r[5]=mkrec(r[8..9]); for b
REG[5] =  s3[030009...](8)
  11 Copy             3   11    0               00 r[11]=r[3]
REG[11] =  i:1
  12 Function0        0   11    8 lower(1)      01 r[8]=func(r[11]); a column 0
REG[11] =  i:1
REG[8] =   z1[1](8)
  13 MakeRecord       8    2    6               00 r[6]=mkrec(r[8..9]); for a
REG[6] =  s4[030F0931...1](8)
  14 SCopy            2    8    0               00 r[8]=r[2]; x
REG[8] =  NULL
  15 MakeRecord       8    2    7               00 r[7]=mkrec(r[8..9]); for sqlite_autoindex_t2_1
REG[7] =  s3[030009...](8)
  16 NoConflict       3   29    8 1             00 key=r[8]
REG[8] =  NULL
  29 IdxInsert        1    5    0               00 key=r[5]
REG[5] =  s3[030009...](8)
  30 IdxInsert        2    6    0               00 key=r[6]
REG[6] =  s4[030F0931...1](8)
  31 IdxInsert        3    7    0               00 key=r[7]
REG[7] =  s3[030009...](8)
  32 MakeRecord       2    2   15               00 r[15]=mkrec(r[2..3])
REG[15] =  s3[030009...](8)
  33 Insert           0   15    1 t2            0B intkey=r[1] data=r[15]
REG[15] =  s3[030009...](8)
REG[1] =  i:1
  34 AddImm           4    1    0               00 r[4]=r[4]+1
REG[4] =  i:0
  35 Close            0    0    0               00 
  36 Close            1    0    0               00 
  37 Close            2    0    0               00 
  38 Close            3    0    0               00 
  39 ResultRow        4    1    0               00 output=r[4]
REG[4] =  i:1
  40 Halt             0    0    0               00 
SQL: [;SELECT x-x FROM t2;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    3 0             01 usesStmtJournal=0
  11 TableLock        0    2    0 t2            00 iDb=0 root=2 write=0
  12 Goto             0    1    0               00 
   1 OpenRead         1    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t2_1
   2 Explain          0    0    0 SCAN TABLE t2 USING COVERING INDEX sqlite_autoindex_t2_1 00 
   3 Rewind           1    8    1 0             00 
   4 Column           1    0    2               00 r[2]=t2.x
REG[2] =  NULL
   5 Subtract         2    2    1               00 r[1]=r[2]-r[2]
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   6 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   7 Next             1    4    0               01 
   8 Close            1    0    0               00 
   9 Halt             0    0    0               00 
SQL: [;BEGIN;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [;UPDATE t2 SET x='xyz', x='abc';]
VDBE Trace:
   0 Init             0   62    0               00 Start at 62
  62 Transaction      0    1    3 0             01 usesStmtJournal=0
  63 TableLock        0    2    1 t2            00 iDb=0 root=2 write=1
  64 Goto             0    1    0               00 
   1 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; t2
   3 Explain          0    0    0 SCAN TABLE t2 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:1
   6 RowSetAdd        4    5    0               00 rowset(4)=r[5]
REG[4] =  NULL
REG[5] =  i:1
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  10 OpenWrite        0    2    0 2             00 root=2 iDb=0; t2
  11 OpenWrite        1    5    0 k(2,,)        00 root=5 iDb=0; b
  12 OpenWrite        2    4    0 k(2,,)        00 root=4 iDb=0; a
  13 OpenWrite        3    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t2_1
  14 RowSetRead       4   56    5               00 r[5]=rowset(4)
REG[4] =  (rowset)
REG[5] =  i:1
  15 NotExists        0   14    5               00 intkey=r[5]
REG[5] =  i:1
  16 String8          0    6    0 abc           00 r[6]='abc'
REG[6] =   t3[abc](8)
  17 Column           0    1    7               00 r[7]=t2.t1
REG[7] =  i:1
  18 Multiply         6    6    9               00 r[9]=r[6]*r[6]; b column 0
REG[6] =   t3[abc](8)
REG[6] =   t3[abc](8)
REG[9] =  i:0
  19 IntCopy          5   10    0               00 r[10]=r[5]; rowid
REG[10] =  i:1
  20 MakeRecord       9    2    1               00 r[1]=mkrec(r[9..10]); for b
REG[1] =  s3[030809...](8)
  21 Copy             7   12    0               00 r[12]=r[7]
REG[12] =  i:1
  22 Function0        0   12    9 lower(1)      01 r[9]=func(r[12]); a column 0
REG[12] =  i:1
REG[9] =   z1[1](8)
  23 MakeRecord       9    2    2               00 r[2]=mkrec(r[9..10]); for a
REG[2] =  s4[030F0931...1](8)
  24 SCopy            6    9    0               00 r[9]=r[6]; x
REG[9] =   t3[abc](8)
  25 MakeRecord       9    2    3               00 r[3]=mkrec(r[9..10]); for sqlite_autoindex_t2_1
REG[3] =  s6[031309616263...abc](8)
  26 NoConflict       3   40    9 1             00 key=r[9]
REG[9] =   t3[abc](8)
  40 NotExists        0   49    5               00 intkey=r[5]
REG[5] =  i:1
  41 Multiply        11   11   14               00 r[14]=r[11]*r[11]

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f22ea0d0859 in __GI_abort () at abort.c:79
#2  0x00007f22ea0d0729 in __assert_fail_base (fmt=0x7f22ea266588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x212700 "memIsValid(&aMem[pOp->p1])", file=0x222c23 "sqlite3.c", line=77360, function=<optimized out>)
    at assert.c:92
#3  0x00007f22ea0e1fd6 in __GI___assert_fail (assertion=0x212700 "memIsValid(&aMem[pOp->p1])", file=0x222c23 "sqlite3.c", line=77360, function=0x213a19 "int sqlite3VdbeExec(Vdbe *)") at assert.c:101
#4  0x00000000003e2946 in sqlite3VdbeExec (p=<optimized out>) at sqlite3.c:77360
#5  0x000000000028b140 in sqlite3_step (pStmt=<optimized out>) at sqlite3.c:75131
#6  0x000000000024b5e9 in main (argc=1, argv=0x7fffb7fa4968) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 31989] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
