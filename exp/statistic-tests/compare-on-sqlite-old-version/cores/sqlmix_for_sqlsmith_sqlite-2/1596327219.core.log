GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000135,sig:06,src:020741+018419,time:3868930,execs:661898,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [PRAGMA integrity_check
;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0    2 0             01 usesStmtJournal=0
  24 Transaction      1    0    0 0             01 usesStmtJournal=0
  25 Goto             0    1    0               00 
   1 Integer        100    1    0               00 r[1]=100
REG[1] =  i:100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
REG[1] =  i:100
   4 IntegrityCk      2    3    1 [2,1]         00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
REG[2] =  NULL
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
REG[1] =  i:100
  12 IntegrityCk      2    1    1 ]             01 
  13 IsNull           2   18    0               00 if r[2]==NULL goto 18
REG[2] =  NULL
  18 AddImm           1 -100    0               00 r[1]=r[1]+-100
REG[1] =  i:100
  19 If               1   22    0               00 
REG[1] =  i:0
  20 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
  21 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
  22 Halt             0    0    0               00 
SQL: [ATTACH '' AS vacuum_db
;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0               00 r[1]=''
REG[1] =   t0[](8)
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
REG[2] =   t9[vacuum_db](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t0[](8)
REG[2] =   t9[vacuum_db](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      2    0    0 0             00 usesStmtJournal=0
  13 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [;
;SELECT (SELECT group_concat(x,x) FROM t2) FROM t2;]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    0    2 0             01 usesStmtJournal=0
  25 TableLock        0    2    0 t2            00 iDb=0 root=2 write=0
  26 Goto             0    1    0               00 
   1 OpenRead         0    2    0 0             00 root=2 iDb=0; t2
   2 Explain          0    0    0 SCAN TABLE t2 00 
   3 Rewind           0   22    0               00 
  22 Close            0    0    0               00 
  23 Halt             0    0    0               00 
SQL: [;insert into t2 (x) values (2);]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    1    2 0             01 usesStmtJournal=0
   9 TableLock        0    2    1 t2            00 iDb=0 root=2 write=1
  10 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 1             00 root=2 iDb=0; t2
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
   4 MakeRecord       2    1    3 D             00 r[3]=mkrec(r[2])
REG[3] =  s3[020102...](8)
   5 Insert           0    3    1 t2            1B intkey=r[1] data=r[3]
REG[3] =  s3[020102...](8)
REG[1] =  i:1
   6 Noop             0    0    0               00 
   7 Halt             0    0    0               00 
SQL: [;insert into t2 (x, x, x)
    values (0, 0, NULL);]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    1    2 0             01 usesStmtJournal=0
   9 TableLock        0    2    1 t2            00 iDb=0 root=2 write=1
  10 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 1             00 root=2 iDb=0; t2
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   3 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   4 MakeRecord       2    1    3 D             00 r[3]=mkrec(r[2])
REG[3] =  s2[0208..](8)
   5 Insert           0    3    1 t2            1B intkey=r[1] data=r[3]
REG[3] =  s2[0208..](8)
REG[1] =  i:2
   6 Noop             0    0    0               00 
   7 Halt             0    0    0               00 
SQL: [;insert into t2 (x, x, x)
    values (2, 4312, 2);]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    1    2 0             01 usesStmtJournal=0
   9 TableLock        0    2    1 t2            00 iDb=0 root=2 write=1
  10 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 1             00 root=2 iDb=0; t2
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   3 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
   4 MakeRecord       2    1    3 D             00 r[3]=mkrec(r[2])
REG[3] =  s3[020102...](8)
   5 Insert           0    3    1 t2            1B intkey=r[1] data=r[3]
REG[3] =  s3[020102...](8)
REG[1] =  i:3
   6 Noop             0    0    0               00 
   7 Halt             0    0    0               00 
SQL: [;
;DROP TABLE IF EXISTS t2;]
VDBE Trace:
   0 Init             0   41    0               00 Start at 41
  41 Transaction      0    1    2 0             01 usesStmtJournal=1
  42 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  43 String8          0    3    0 t2            00 r[3]='t2'
REG[3] =   t2[t2](8)
  44 String8          0    5    0 trigger       00 r[5]='trigger'
REG[5] =   t7[trigger](8)
  45 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t2](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t2[t2](8)
REG[2] =   s2[t2](8)
   7 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
   8 Eq               5   12    4 (BINARY)      52 if r[5]==r[4] goto 12
REG[5] =   t7[trigger](8)
REG[4] =   s5[table](8)
   9 Rowid            0    6    0               00 r[6]=rowid
REG[6] =  i:1
  10 Once             0   11    0               00 
  11 Delete           0    0    0 sqlite_master 02 
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t2[t2](8)
REG[2] =   s2[t1](8)
  12 Next             0    5    0               01 
  13 Close            0    0    0               00 
  14 Destroy          2    4    0               00 
REG[4] =  i:0
  15 Null             0    7    8               00 r[7..8]=NULL
REG[7] =  NULL
  16 IfNot            4   25    1               00 
REG[4] =  i:0
  25 Close            1    0    0               00 
  26 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  27 RowSetRead       7   37    8               00 r[8]=rowset(7)
REG[7] =  NULL
REG[8] =  NULL
  37 Close            1    0    0               00 
  38 DropTable        0    0    0 t2            00 
  39 SetCookie        0    1    3               00 
  40 Halt             0    0    0               00 
SQL: [;CREATE TABLE b (
      c INTEGER PRIMARY KEY AUTOINCREMENT,
      t1w INTEGER
    );]
VDBE Trace:
   0 Init             0   58    0               00 Start at 58
  58 Transaction      0    1    3 0             01 usesStmtJournal=0
  59 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  60 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:3
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:3
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:3
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 b             00 r[7]='b'
REG[7] =   t1[b](8)
  21 String8          0    8    0 b             00 r[8]='b'
REG[8] =   t1[b](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  23 String8          0   10    0 CREATE TABLE b (
      c INTEGER PRIMARY KEY AUTOINCREMENT,
      t1w INTEGER
    ) 00 r[10]='CREATE TABLE b (
      c INTEGER PRIMARY KEY AUTOINCREMENT,
      t1w INTEGER
    )'
REG[10] =   t83[CREATE TABLE b ](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s98[07170F0F0181337461626C6562620243......3tablebb.C](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s98[07170F0F0181337461626C6562620243......3tablebb.C](8)
REG[5] =  i:3
  26 Close            1    0    0               00 
  27 SetCookie        0    1    4               00 
  28 ReadCookie       0   14    2               00 
REG[14] =  i:4
  29 If              14   32    0               00 
REG[14] =  i:4
  32 CreateTable      0   13    0               00 r[13]=root iDb=0
REG[13] =  i:4
  33 OpenWrite        0    1    0 5             00 root=1 iDb=0
  34 NewRowid         0   12    0               00 r[12]=rowid
REG[12] =  i:4
  35 Blob             6   14    0              00 r[14]= (len=6)
REG[14] =  t6[060000000000......](8)
  36 Insert           0   14   12               08 intkey=r[12] data=r[14]
REG[14] =  t6[060000000000......](8)
REG[12] =  i:4
  37 Close            0    0    0               00 
  38 Close            0    0    0               00 
  39 Null             0   15   16               00 r[15..16]=NULL
REG[15] =  NULL
  40 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  41 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  42 MustBeInt       12   45    0               00 
REG[12] =  i:4
  43 NotExists        2   45   12               00 intkey=r[12]; pk
REG[12] =  i:4
  44 Rowid            2   16    0               00 r[16]=rowid
REG[16] =  i:4
  45 IsNull          16   53    0               00 if r[16]==NULL goto 53
REG[16] =  i:4
  46 String8          0   17    0 table         00 r[17]='table'
REG[17] =   t5[table](8)
  47 String8          0   18    0 sqlite_sequence 00 r[18]='sqlite_sequence'
REG[18] =   t15[sqlite_sequence](8)
  48 String8          0   19    0 sqlite_sequence 00 r[19]='sqlite_sequence'
REG[19] =   t15[sqlite_sequence](8)
  49 Copy            13   20    0               00 r[20]=r[13]
REG[20] =  i:4
  50 String8          0   21    0 CREATE TABLE sqlite_sequence(name,seq) 00 r[21]='CREATE TABLE sqlite_sequence(name,seq)'
REG[21] =   t38[CREATE TABLE sq](8)
  51 MakeRecord      17    5   22 BBBDB         00 r[22]=mkrec(r[17..21])
REG[22] =  s80[06172B2B01597461626C6573716C6974..++.Ytablesqlit](8)
  52 Insert           2   22   16               00 intkey=r[16] data=r[22]
REG[22] =  s80[06172B2B01597461626C6573716C6974..++.Ytablesqlit](8)
REG[16] =  i:4
  53 Close            2    0    0               00 
  54 SetCookie        0    1    4               00 
  55 ParseSchema      0    0    0 tbl_name='sqlite_sequence' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s15[sqlite_sequence](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s15[sqlite_sequence](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s38[CREATE TABLE sq](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s15[sqlite_sequence](8)
REG[6] =  i:4
REG[7] =   s38[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  56 ParseSchema      0    0    0 tbl_name='b' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 b             00 r[2]='b'
REG[2] =   t1[b](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[b](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[b](8)
REG[1] =   s1[b](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[b](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s83[CREATE TABLE b ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[b](8)
REG[6] =  i:2
REG[7] =   s83[CREATE TABLE b ](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[b](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  57 Halt             0    0    0               00 
SQL: [;CREATE TABLE wordcount (
      word INTEGER PRIMARY KEY AUTOINCREMENT,
      cnt INTEGER
    );]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    4 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:5
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:5
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:5
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:5
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:5
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 wordcount     00 r[7]='wordcount'
REG[7] =   t9[wordcount](8)
  21 String8          0    8    0 wordcount     00 r[8]='wordcount'
REG[8] =   t9[wordcount](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  23 String8          0   10    0 CREATE TABLE wordcount (
      word INTEGER PRIMARY KEY AUTOINCREMENT,
      cnt INTEGER
    ) 00 r[10]='CREATE TABLE wordcount (
      word INTEGER PRIMARY KEY AUTOINCREMENT,
      cnt INTEGER
   
REG[10] =   t94[CREATE TABLE wo](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s125[07171F1F0181497461626C65776F7264......Itableword](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s125[07171F1F0181497461626C65776F7264......Itableword](8)
REG[5] =  i:5
  26 Close            1    0    0               00 
  27 SetCookie        0    1    5               00 
  28 ParseSchema      0    0    0 tbl_name='wordcount' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    5 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 wordcount     00 r[2]='wordcount'
REG[2] =   t9[wordcount](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t9[wordcount](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t9[wordcount](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t9[wordcount](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[wordcount](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t9[wordcount](8)
REG[1] =   s9[wordcount](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s9[wordcount](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s94[CREATE TABLE wo](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s9[wordcount](8)
REG[6] =  i:5
REG[7] =   s94[CREATE TABLE wo](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;INSERT INTO b VALUES(0,1),(2,2);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    5 0             01 usesStmtJournal=1
  31 TableLock        0    2    1 b             00 iDb=0 root=2 write=1
  32 TableLock        0    4    1 sqlite_sequence 00 iDb=0 root=4 write=1
  33 OpenRead         0    4    0 2             00 root=4 iDb=0; sqlite_sequence
  34 String8          0    1    0 b             00 r[1]='b'
REG[1] =   t1[b](8)
  35 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  36 Rewind           0   44    0               00 
  44 Close            0    0    0               00 
  45 Goto             0    1    0               00 
   1 InitCoroutine    7    9    2               00 
   9 OpenWrite        0    2    0 2             00 root=2 iDb=0; b
  10 Yield            7   22    0               00 
REG[7] =  i:1
REG[7] =  i:10
   2 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   3 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
   4 Yield            7    0    0               00 
REG[7] =  i:10
REG[7] =  i:4
  11 Copy             5    4    0               00 r[4]=r[5]
REG[4] =  i:0
  12 NotNull          4   14    0               00 if r[4]!=NULL goto 14
REG[4] =  i:0
  14 MustBeInt        4    0    0               00 
REG[4] =  i:0
  15 MemMax           2    4    0               00 r[2]=max(r[2],r[4])
REG[4] =  i:0
  16 SoftNull         5    0    0               00 r[5]=NULL
  17 NotExists        0   19    4               00 intkey=r[4]
REG[4] =  i:0
  19 MakeRecord       5    2    8 DD            00 r[8]=mkrec(r[5..6])
REG[8] =  s3[030009...](8)
  20 Insert           0    8    4 b             13 intkey=r[4] data=r[8]
REG[8] =  s3[030009...](8)
REG[4] =  i:0
  21 Goto             0   10    0               00 
  10 Yield            7   22    0               00 
REG[7] =  i:4
REG[7] =  i:10
   5 Integer          2    5    0               00 r[5]=2
REG[5] =  i:2
   6 Integer          2    6    0               00 r[6]=2
REG[6] =  i:2
   7 Yield            7    0    0               00 
REG[7] =  i:10
REG[7] =  i:7
  11 Copy             5    4    0               00 r[4]=r[5]
REG[4] =  i:2
  12 NotNull          4   14    0               00 if r[4]!=NULL goto 14
REG[4] =  i:2
  14 MustBeInt        4    0    0               00 
REG[4] =  i:2
  15 MemMax           2    4    0               00 r[2]=max(r[2],r[4])
REG[4] =  i:2
  16 SoftNull         5    0    0               00 r[5]=NULL
  17 NotExists        0   19    4               00 intkey=r[4]
REG[4] =  i:2
  19 MakeRecord       5    2    8 DD            00 r[8]=mkrec(r[5..6])
REG[8] =  s4[03000102....](8)
  20 Insert           0    8    4 b             13 intkey=r[4] data=r[8]
REG[8] =  s4[03000102....](8)
REG[4] =  i:2
  21 Goto             0   10    0               00 
  10 Yield            7   22    0               00 
REG[7] =  i:7
REG[7] =  i:10
   8 EndCoroutine     7    0    0               00 
REG[7] =  i:10
  22 Close            0    0    0               00 
  23 OpenWrite        0    4    0 2             00 root=4 iDb=0; sqlite_sequence
  24 NotNull          3   26    0               00 if r[3]!=NULL goto 26
REG[3] =  NULL
  25 NewRowid         0    3    0               00 r[3]=rowid
REG[3] =  i:1
  26 MakeRecord       1    2    9               00 r[9]=mkrec(r[1..2])
REG[9] =  s5[030F016202...b.](8)
  27 Insert           0    9    3               08 intkey=r[3] data=r[9]
REG[9] =  s5[030F016202...b.](8)
REG[3] =  i:1
  28 Noop             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;
;DROP TABLE IF EXISTS t1;]
VDBE Trace:
   0 Init             0   41    0               00 Start at 41
  41 Transaction      0    1    5 0             01 usesStmtJournal=1
  42 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  43 String8          0    3    0 t1            00 r[3]='t1'
REG[3] =   t2[t1](8)
  44 String8          0    5    0 trigger       00 r[5]='trigger'
REG[5] =   t7[trigger](8)
  45 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t2[t1](8)
REG[2] =   s2[t1](8)
   7 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
   8 Eq               5   12    4 (BINARY)      52 if r[5]==r[4] goto 12
REG[5] =   t7[trigger](8)
REG[4] =   s5[table](8)
   9 Rowid            0    6    0               00 r[6]=rowid
REG[6] =  i:2
  10 Once             0   11    0               00 
  11 Delete           0    0    0 sqlite_master 02 
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[b](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t2[t1](8)
REG[2] =   s1[b](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s15[sqlite_sequence](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t2[t1](8)
REG[2] =   s15[sqlite_sequence](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s9[wordcount](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t2[t1](8)
REG[2] =   s9[wordcount](8)
  12 Next             0    5    0               01 
  13 Close            0    0    0               00 
  14 Destroy          3    4    0               00 
REG[4] =  i:0
  15 Null             0    7    8               00 r[7..8]=NULL
REG[7] =  NULL
  16 IfNot            4   25    1               00 
REG[4] =  i:0
  25 Close            1    0    0               00 
  26 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  27 RowSetRead       7   37    8               00 r[8]=rowset(7)
REG[7] =  NULL
REG[8] =  NULL
  37 Close            1    0    0               00 
  38 DropTable        0    0    0 t1            00 
  39 SetCookie        0    1    6               00 
  40 Halt             0    0    0               00 
SQL: [;DROP TABLE IF EXISTS b;]
VDBE Trace:
   0 Init             0   52    0               00 Start at 52
  52 Transaction      0    1    6 0             01 usesStmtJournal=1
  53 TableLock        0    4    1 sqlite_sequence 00 iDb=0 root=4 write=1
  54 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  55 String8          0    3    0 b             00 r[3]='b'
REG[3] =   t1[b](8)
  56 String8          0    7    0 trigger       00 r[7]='trigger'
REG[7] =   t7[trigger](8)
  57 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    4    0 2             00 root=4 iDb=0; sqlite_sequence
   3 Explain          0    0    0 SCAN TABLE sqlite_sequence 00 
   4 Rewind           0   11    0               00 
   5 Column           0    0    2               00 r[2]=sqlite_sequence.name
REG[2] =   s1[b](8)
   6 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =   t1[b](8)
REG[2] =   s1[b](8)
   7 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:1
   8 Once             0    9    0               00 
   9 Delete           0    0    0 sqlite_sequence 02 
  10 Next             0    5    0               01 
  11 Close            0    0    0               00 
  12 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SCAN TABLE sqlite_master 00 
  15 Rewind           1   24    0               00 
  16 Column           1    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[b](8)
  17 Ne               3   23    2 (BINARY)      52 if r[3]!=r[2] goto 23
REG[3] =   t1[b](8)
REG[2] =   s1[b](8)
  18 Column           1    0    6               00 r[6]=sqlite_master.type
REG[6] =   s5[table](8)
  19 Eq               7   23    6 (BINARY)      52 if r[7]==r[6] goto 23
REG[7] =   t7[trigger](8)
REG[6] =   s5[table](8)
  20 Rowid            1    8    0               00 r[8]=rowid
REG[8] =  i:3
  21 Once             1   22    0               00 
  22 Delete           1    0    0 sqlite_master 02 
  23 Next             1   16    0               01 
  16 Column           1    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s15[sqlite_sequence](8)
  17 Ne               3   23    2 (BINARY)      52 if r[3]!=r[2] goto 23
REG[3] =   t1[b](8)
REG[2] =   s15[sqlite_sequence](8)
  23 Next             1   16    0               01 
  16 Column           1    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s9[wordcount](8)
  17 Ne               3   23    2 (BINARY)      52 if r[3]!=r[2] goto 23
REG[3] =   t1[b](8)
REG[2] =   s9[wordcount](8)
  23 Next             1   16    0               01 
  24 Close            1    0    0               00 
  25 Destroy          2    6    0               00 
REG[6] =  i:0
  26 Null             0    9   10               00 r[9..10]=NULL
REG[9] =  NULL
  27 IfNot            6   36    1               00 
REG[6] =  i:0
  36 Close            2    0    0               00 
  37 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  38 RowSetRead       9   48   10               00 r[10]=rowset(9)
REG[9] =  NULL
REG[10] =  NULL
  48 Close            2    0    0               00 
  49 DropTable        0    0    0 b             00 
  50 SetCookie        0    1    7               00 
  51 Halt             0    0    0               00 
SQL: [;CREATE TABLE wordcount_b (
      wordcount_d INTEGER,
      ipk INTEGER,
      wordcount_c INTEGER
    );]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    7 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:6
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:6
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:6
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:6
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:6
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 wordcount_b   00 r[7]='wordcount_b'
REG[7] =   t11[wordcount_b](8)
  21 String8          0    8    0 wordcount_b   00 r[8]='wordcount_b'
REG[8] =   t11[wordcount_b](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  23 String8          0   10    0 CREATE TABLE wordcount_b (
      wordcount_d INTEGER,
      ipk INTEGER,
      wordcount_c INTEGER
    ) 00 r[10]='CREATE TABLE wordcount_b (
      wordcount_d INTEGER,
      ipk INTEGER,
      wordcount_c I
REG[10] =   t104[CREATE TABLE wo](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s139[0717232301815D7461626C65776F7264..##..]tableword](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s139[0717232301815D7461626C65776F7264..##..]tableword](8)
REG[5] =  i:6
  26 Close            1    0    0               00 
  27 SetCookie        0    1    8               00 
  28 ParseSchema      0    0    0 tbl_name='wordcount_b' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    8 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 wordcount_b   00 r[2]='wordcount_b'
REG[2] =   t11[wordcount_b](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t11[wordcount_b](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[wordcount](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t11[wordcount_b](8)
REG[1] =   s9[wordcount](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s11[wordcount_b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t11[wordcount_b](8)
REG[1] =   s11[wordcount_b](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s11[wordcount_b](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s104[CREATE TABLE wo](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s11[wordcount_b](8)
REG[6] =  i:2
REG[7] =   s104[CREATE TABLE wo](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;INSERT INTO wordcount_b VALUES(4469,2,98),(4469,1,99),(4469,3,97);]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    1    8 0             01 usesStmtJournal=0
  24 TableLock        0    2    1 wordcount_b   00 iDb=0 root=2 write=1
  25 Goto             0    1    0               00 
   1 InitCoroutine    5   15    2               00 
  15 OpenWrite        0    2    0 3             00 root=2 iDb=0; wordcount_b
  16 Yield            5   21    0               00 
REG[5] =  i:1
REG[5] =  i:16
   2 Integer       4469    2    0               00 r[2]=4469
REG[2] =  i:4469
   3 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   4 Integer         98    4    0               00 r[4]=98
REG[4] =  i:98
   5 Yield            5    0    0               00 
REG[5] =  i:16
REG[5] =  i:5
  17 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
  18 MakeRecord       2    3    6 DDD           00 r[6]=mkrec(r[2..4])
REG[6] =  s8[0402010111750262.....u.b](8)
  19 Insert           0    6    1 wordcount_b   1B intkey=r[1] data=r[6]
REG[6] =  s8[0402010111750262.....u.b](8)
REG[1] =  i:1
  20 Goto             0   16    0               00 
  16 Yield            5   21    0               00 
REG[5] =  i:5
REG[5] =  i:16
   6 Integer       4469    2    0               00 r[2]=4469
REG[2] =  i:4469
   7 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   8 Integer         99    4    0               00 r[4]=99
REG[4] =  i:99
   9 Yield            5    0    0               00 
REG[5] =  i:16
REG[5] =  i:9
  17 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
  18 MakeRecord       2    3    6 DDD           00 r[6]=mkrec(r[2..4])
REG[6] =  s7[04020901117563.....uc](8)
  19 Insert           0    6    1 wordcount_b   1B intkey=r[1] data=r[6]
REG[6] =  s7[04020901117563.....uc](8)
REG[1] =  i:2
  20 Goto             0   16    0               00 
  16 Yield            5   21    0               00 
REG[5] =  i:9
REG[5] =  i:16
  10 Integer       4469    2    0               00 r[2]=4469
REG[2] =  i:4469
  11 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  12 Integer         97    4    0               00 r[4]=97
REG[4] =  i:97
  13 Yield            5    0    0               00 
REG[5] =  i:16
REG[5] =  i:13
  17 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
  18 MakeRecord       2    3    6 DDD           00 r[6]=mkrec(r[2..4])
REG[6] =  s8[0402010111750361.....u.a](8)
  19 Insert           0    6    1 wordcount_b   1B intkey=r[1] data=r[6]
REG[6] =  s8[0402010111750361.....u.a](8)
REG[1] =  i:3
  20 Goto             0   16    0               00 
  16 Yield            5   21    0               00 
REG[5] =  i:13
REG[5] =  i:16
  14 EndCoroutine     5    0    0               00 
REG[5] =  i:16
  21 Noop             0    0    0               00 
  22 Halt             0    0    0               00 
SQL: [;CREATE TABLE key (
      val INTEGER
    );]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    8 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:7
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:7
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:7
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:7
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:7
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:7
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 key           00 r[7]='key'
REG[7] =   t3[key](8)
  21 String8          0    8    0 key           00 r[8]='key'
REG[8] =   t3[key](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  23 String8          0   10    0 CREATE TABLE key (
      val INTEGER
    ) 00 r[10]='CREATE TABLE key (
      val INTEGER
    )'
REG[10] =   t42[CREATE TABLE ke](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s60[0617131301617461626C656B65796B65.....atablekeyke](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s60[0617131301617461626C656B65796B65.....atablekeyke](8)
REG[5] =  i:7
  26 Close            1    0    0               00 
  27 SetCookie        0    1    9               00 
  28 ParseSchema      0    0    0 tbl_name='key' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    9 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 key           00 r[2]='key'
REG[2] =   t3[key](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[key](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[wordcount](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[key](8)
REG[1] =   s9[wordcount](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s11[wordcount_b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[key](8)
REG[1] =   s11[wordcount_b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[key](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[key](8)
REG[1] =   s3[key](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s3[key](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s42[CREATE TABLE ke](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s3[key](8)
REG[6] =  i:3
REG[7] =   s42[CREATE TABLE ke](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;SELECT
     (SELECT sum(cnt<>xyz) FROM wordcount)
    FROM
     (SELECT ipk as xyz, max(ipk) AS pqr
        FROM wordcount_b
       GROUP BY wordcount_d);]
VDBE Trace:
   0 Init             0   68    0               00 Start at 68
  68 Transaction      0    0    9 0             01 usesStmtJournal=0
  69 TableLock        0    2    0 wordcount_b   00 iDb=0 root=2 write=0
  70 TableLock        0    5    0 wordcount     00 iDb=0 root=5 write=0
  71 Goto             0    1    0               00 
   1 InitCoroutine    1   46    2               00 sqlite_sq_FA7A50
  46 Explain          0    0    0 SCAN SUBQUERY 1 00 
  47 InitCoroutine    1    0    2               00 
  48 Yield            1   67    0               00 next row of "sqlite_sq_FA7A50"
REG[1] =  i:1
REG[1] =  i:48
   2 SorterOpen       3    2    0 k(1,B)        00 
   3 Integer          0    5    0               00 r[5]=0; clear abort flag
REG[5] =  i:0
   4 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
   5 Null             0    8    8               00 r[8..8]=NULL
REG[8] =  NULL
   6 Gosub            7   43    0               00 
REG[7] =  i:6
  43 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  44 Return           7    0    0               00 
REG[7] =  i:6
   7 OpenRead         1    2    0 2             00 root=2 iDb=0; wordcount_b
   8 Explain          1    0    0 SCAN TABLE wordcount_b 00 
   9 Rewind           1   15    0               00 
  10 Column           1    0   10               00 r[10]=wordcount_b.wordcount_d
REG[10] =  i:4469
  11 Column           1    1   11               00 r[11]=wordcount_b.ipk
REG[11] =  i:2
  12 MakeRecord      10    2   12               00 r[12]=mkrec(r[10..11])
REG[12] =  s6[030201117502....u.](8)
  13 SorterInsert     3   12    0               00 
REG[12] =  s6[030201117502....u.](8)
  14 Next             1   10    0               01 
  10 Column           1    0   10               00 r[10]=wordcount_b.wordcount_d
REG[10] =  i:4469
  11 Column           1    1   11               00 r[11]=wordcount_b.ipk
REG[11] =  i:1
  12 MakeRecord      10    2   12               00 r[12]=mkrec(r[10..11])
REG[12] =  s5[0302091175....u](8)
  13 SorterInsert     3   12    0               00 
REG[12] =  s5[0302091175....u](8)
  14 Next             1   10    0               01 
  10 Column           1    0   10               00 r[10]=wordcount_b.wordcount_d
REG[10] =  i:4469
  11 Column           1    1   11               00 r[11]=wordcount_b.ipk
REG[11] =  i:3
  12 MakeRecord      10    2   12               00 r[12]=mkrec(r[10..11])
REG[12] =  s6[030201117503....u.](8)
  13 SorterInsert     3   12    0               00 
REG[12] =  s6[030201117503....u.](8)
  14 Next             1   10    0               01 
  15 Close            1    0    0               00 
  16 OpenPseudo       4   12    2               00 2 columns in r[12]
  17 SorterSort       3   45    0               00 GROUP BY sort
  18 SorterData       3   12    4               00 r[12]=data
  19 Column           4    0    9               00 r[9]=
REG[9] =  i:4469
  20 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  NULL
REG[9] =  i:4469
  21 Jump            22   26   22               00 
  22 Move             9    8    1               00 r[8]=r[9]
REG[8] =  i:4469
  23 Gosub            6   37    0               00 output one row
REG[6] =  i:23
  37 IfPos            4   39    0               00 if r[4]>0 then r[4]-=0, goto 39; Groupby result generator entry point
REG[4] =  i:0
  38 Return           6    0    0               00 
REG[6] =  i:23
  24 IfPos            5   45    0               00 if r[5]>0 then r[5]-=0, goto 45; check abort flag
REG[5] =  i:0
  25 Gosub            7   43    0               00 reset accumulator
REG[7] =  i:25
  43 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  44 Return           7    0    0               00 
REG[7] =  i:25
  26 Column           4    1   10               00 r[10]=
REG[10] =  i:2
  27 CollSeq         13    0    0 (BINARY)      00 
  28 AggStep0         0   10    3 max(1)        01 accum=r[3] step(r[10])
REG[10] =  i:2
  29 If              13   31    0               00 
REG[13] =  i:0
  30 Column           4    1    2               00 r[2]=
REG[2] =  i:2
  31 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  32 SorterNext       3   18    0               00 
  18 SorterData       3   12    4               00 r[12]=data
  19 Column           4    0    9               00 r[9]=
REG[9] =  i:4469
  20 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  i:4469
REG[9] =  i:4469
  21 Jump            22   26   22               00 
  26 Column           4    1   10               00 r[10]=
REG[10] =  i:1
  27 CollSeq         13    0    0 (BINARY)      00 
  28 AggStep          0   10    3 max(1)        01 accum=r[3] step(r[10])
REG[10] =  i:1
  29 If              13   31    0               00 
REG[13] =  i:1
  31 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  32 SorterNext       3   18    0               00 
  18 SorterData       3   12    4               00 r[12]=data
  19 Column           4    0    9               00 r[9]=
REG[9] =  i:4469
  20 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  i:4469
REG[9] =  i:4469
  21 Jump            22   26   22               00 
  26 Column           4    1   10               00 r[10]=
REG[10] =  i:3
  27 CollSeq         13    0    0 (BINARY)      00 
  28 AggStep          0   10    3 max(1)        01 accum=r[3] step(r[10])
REG[10] =  i:3
  29 If              13   31    0               00 
REG[13] =  i:0
  30 Column           4    1    2               00 r[2]=
REG[2] =  i:3
  31 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  32 SorterNext       3   18    0               00 
  33 Gosub            6   37    0               00 output final row
REG[6] =  i:33
  37 IfPos            4   39    0               00 if r[4]>0 then r[4]-=0, goto 39; Groupby result generator entry point
REG[4] =  i:1
  39 AggFinal         3    1    0 max(1)        00 accum=r[3] N=1
  40 Copy             2   14    1               00 r[14..15]=r[2..3]
REG[14] =  i:3
REG[15] =  i:3
  41 Yield            1    0    0               00 
REG[1] =  i:48
REG[1] =  i:41
  49 Null             0   17    0               00 r[17]=NULL; Init subquery result
REG[17] =  NULL
  50 Integer          1   18    0               00 r[18]=1; LIMIT counter
REG[18] =  i:1
  51 Null             0   19   20               00 r[19..20]=NULL
REG[19] =  NULL
  52 OpenRead         2    5    0 2             00 root=5 iDb=0; wordcount
  53 Explain          2    0    0 SCAN TABLE wordcount 00 
  54 Rewind           2   60    0               00 
  60 Close            2    0    0               00 
  61 AggFinal        19    1    0 sum(1)        00 accum=r[19] N=1
  62 Copy            19   17    0               00 r[17]=r[19]
REG[17] =  NULL
  63 DecrJumpZero    18   64    0               00 if (--r[18])==0 goto 64
REG[18] =  i:1
  64 Copy            17   16    0               00 r[16]=r[17]
REG[16] =  NULL
  65 ResultRow       16    1    0               00 output=r[16]
REG[16] =  NULL
  66 Goto             0   48    0               00 
  48 Yield            1   67    0               00 next row of "sqlite_sq_FA7A50"
REG[1] =  i:41
REG[1] =  i:48
  42 Return           6    0    0               00 end groupby result generator
REG[6] =  i:33
  34 Goto             0   45    0               00 
  45 EndCoroutine     1    0    0               00 
REG[1] =  i:48
  67 Halt             0    0    0               00 
SQL: [;DROP TABLE IF EXISTS key;]
VDBE Trace:
   0 Init             0   41    0               00 Start at 41
  41 Transaction      0    1    9 0             01 usesStmtJournal=1
  42 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  43 String8          0    3    0 key           00 r[3]='key'
REG[3] =   t3[key](8)
  44 String8          0    5    0 trigger       00 r[5]='trigger'
REG[5] =   t7[trigger](8)
  45 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s15[sqlite_sequence](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t3[key](8)
REG[2] =   s15[sqlite_sequence](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s9[wordcount](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t3[key](8)
REG[2] =   s9[wordcount](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s11[wordcount_b](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t3[key](8)
REG[2] =   s11[wordcount_b](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s3[key](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t3[key](8)
REG[2] =   s3[key](8)
   7 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
   8 Eq               5   12    4 (BINARY)      52 if r[5]==r[4] goto 12
REG[5] =   t7[trigger](8)
REG[4] =   s5[table](8)
   9 Rowid            0    6    0               00 r[6]=rowid
REG[6] =  i:7
  10 Once             0   11    0               00 
  11 Delete           0    0    0 sqlite_master 02 
  12 Next             0    5    0               01 
  13 Close            0    0    0               00 
  14 Destroy          3    4    0               00 
REG[4] =  i:0
  15 Null             0    7    8               00 r[7..8]=NULL
REG[7] =  NULL
  16 IfNot            4   25    1               00 
REG[4] =  i:0
  25 Close            1    0    0               00 
  26 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  27 RowSetRead       7   37    8               00 r[8]=rowset(7)
REG[7] =  NULL
REG[8] =  NULL
  37 Close            1    0    0               00 
  38 DropTable        0    0    0 key           00 
  39 SetCookie        0    1   10               00 
  40 Halt             0    0    0               00 
SQL: [;CREATE TABLE key(val, nn);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1   10 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:7
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:7
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:7
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:7
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:7
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:7
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 key           00 r[7]='key'
REG[7] =   t3[key](8)
  21 String8          0    8    0 key           00 r[8]='key'
REG[8] =   t3[key](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  23 String8          0   10    0 CREATE TABLE key(val, nn) 00 r[10]='CREATE TABLE key(val, nn)'
REG[10] =   t25[CREATE TABLE ke](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s43[06171313013F7461626C656B65796B65.....?tablekeyke](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s43[06171313013F7461626C656B65796B65.....?tablekeyke](8)
REG[5] =  i:7
  26 Close            1    0    0               00 
  27 SetCookie        0    1   11               00 
  28 ParseSchema      0    0    0 tbl_name='key' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0   11 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 key           00 r[2]='key'
REG[2] =   t3[key](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[key](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[wordcount](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[key](8)
REG[1] =   s9[wordcount](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s11[wordcount_b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[key](8)
REG[1] =   s11[wordcount_b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[key](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[key](8)
REG[1] =   s3[key](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s3[key](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s25[CREATE TABLE ke](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s3[key](8)
REG[6] =  i:3
REG[7] =   s25[CREATE TABLE ke](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;CREATE TABLE d (e);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1   11 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:6
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:8
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:8
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:8
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:8
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:8
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:8
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 d             00 r[7]='d'
REG[7] =   t1[d](8)
  21 String8          0    8    0 d             00 r[8]='d'
REG[8] =   t1[d](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:6
  23 String8          0   10    0 CREATE TABLE d (e) 00 r[10]='CREATE TABLE d (e)'
REG[10] =   t18[CREATE TABLE d ](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s32[06170F0F01317461626C656464064352.....1tabledd.CR](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s32[06170F0F01317461626C656464064352.....1tabledd.CR](8)
REG[5] =  i:8
  26 Close            1    0    0               00 
  27 SetCookie        0    1   12               00 
  28 ParseSchema      0    0    0 tbl_name='d' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0   12 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 d             00 r[2]='d'
REG[2] =   t1[d](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[d](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[wordcount](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[d](8)
REG[1] =   s9[wordcount](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s11[wordcount_b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[d](8)
REG[1] =   s11[wordcount_b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[key](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[d](8)
REG[1] =   s3[key](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[d](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[d](8)
REG[1] =   s1[d](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[d](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:6
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s18[CREATE TABLE d ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[d](8)
REG[6] =  i:6
REG[7] =   s18[CREATE TABLE d ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;DROP TABLE IF EXISTS key;]
VDBE Trace:
   0 Init             0   41    0               00 Start at 41
  41 Transaction      0    1   12 0             01 usesStmtJournal=1
  42 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  43 String8          0    3    0 key           00 r[3]='key'
REG[3] =   t3[key](8)
  44 String8          0    5    0 trigger       00 r[5]='trigger'
REG[5] =   t7[trigger](8)
  45 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s15[sqlite_sequence](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t3[key](8)
REG[2] =   s15[sqlite_sequence](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s9[wordcount](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t3[key](8)
REG[2] =   s9[wordcount](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s11[wordcount_b](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t3[key](8)
REG[2] =   s11[wordcount_b](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s3[key](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t3[key](8)
REG[2] =   s3[key](8)
   7 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
   8 Eq               5   12    4 (BINARY)      52 if r[5]==r[4] goto 12
REG[5] =   t7[trigger](8)
REG[4] =   s5[table](8)
   9 Rowid            0    6    0               00 r[6]=rowid
REG[6] =  i:7
  10 Once             0   11    0               00 
  11 Delete           0    0    0 sqlite_master 02 
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[d](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t3[key](8)
REG[2] =   s1[d](8)
  12 Next             0    5    0               01 
  13 Close            0    0    0               00 
  14 Destroy          3    4    0               00 
REG[4] =  i:0
  15 Null             0    7    8               00 r[7..8]=NULL
REG[7] =  NULL
  16 IfNot            4   25    1               00 
REG[4] =  i:0
  25 Close            1    0    0               00 
  26 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  27 RowSetRead       7   37    8               00 r[8]=rowset(7)
REG[7] =  NULL
REG[8] =  NULL
  37 Close            1    0    0               00 
  38 DropTable        0    0    0 key           00 
  39 SetCookie        0    1   13               00 
  40 Halt             0    0    0               00 
SQL: [;CREATE INDEX nnw ON wordcount(cnt);]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      0    1   13 0             01 usesStmtJournal=0
  35 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  36 TableLock        0    5    1 wordcount     00 iDb=0 root=5 write=1
  37 Goto             0    1    0               00 
   1 Noop             0   33    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:3
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:9
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 nnw           00 r[4]='nnw'
REG[4] =   t3[nnw](8)
   7 String8          0    5    0 wordcount     00 r[5]='wordcount'
REG[5] =   t9[wordcount](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:3
   9 String8          0    7    0 CREATE INDEX nnw ON wordcount(cnt) 00 r[7]='CREATE INDEX nnw ON wordcount(cnt)'
REG[7] =   t34[CREATE INDEX nn](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s58[0617131F0151696E6465786E6E77776F.....Qindexnnwwo](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s58[0617131F0151696E6465786E6E77776F.....Qindexnnwwo](8)
REG[2] =  i:9
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    1 k(2,,)        00 
  14 OpenRead         1    5    0 2             00 root=5 iDb=0; wordcount
  15 Rewind           1   21    0               00 
  21 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  22 SorterSort       3   27    0               00 
  27 Close            1    0    0               00 
  28 Close            2    0    0               00 
  29 Close            3    0    0               00 
  30 SetCookie        0    1   14               00 
  31 ParseSchema      0    0    0 name='nnw' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0   14 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 nnw           00 r[2]='nnw'
REG[2] =   t3[nnw](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[nnw](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s9[wordcount](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[nnw](8)
REG[1] =   s9[wordcount](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s11[wordcount_b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[nnw](8)
REG[1] =   s11[wordcount_b](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[d](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[nnw](8)
REG[1] =   s1[d](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[nnw](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[nnw](8)
REG[1] =   s3[nnw](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s3[nnw](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s34[CREATE INDEX nn](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s3[nnw](8)
REG[6] =  i:3
REG[7] =   s34[CREATE INDEX nn](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  32 Expire           0    0    0               00 
  33 Halt             0    0    0               00 
SQL: [;CREATE TABLE t5 (b1);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1   14 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:7
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:10
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:10
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:10
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:10
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:10
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:10
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t5            00 r[7]='t5'
REG[7] =   t2[t5](8)
  21 String8          0    8    0 t5            00 r[8]='t5'
REG[8] =   t2[t5](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:7
  23 String8          0   10    0 CREATE TABLE t5 (b1) 00 r[10]='CREATE TABLE t5 (b1)'
REG[10] =   t20[CREATE TABLE t5](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s36[0617111101357461626C657435743507.....5tablet5t5.](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s36[0617111101357461626C657435743507.....5tablet5t5.](8)
REG[5] =  i:10
  26 Close            1    0    0               00 
  27 SetCookie        0    1   15               00 
  28 ParseSchema      0    0    0 tbl_name='t5' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0   15 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t5            00 r[2]='t5'
REG[2] =   t2[t5](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[wordcount](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s9[wordcount](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s11[wordcount_b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s11[wordcount_b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[d](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s1[d](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[wordcount](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s9[wordcount](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t5](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s2[t5](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t5](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:7
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s20[CREATE TABLE t5](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t5](8)
REG[6] =  i:7
REG[7] =   s20[CREATE TABLE t5](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;INSERT INTO d VALUES(12),(34),(34);]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    1   15 0             01 usesStmtJournal=0
  18 TableLock        0    6    1 d             00 iDb=0 root=6 write=1
  19 Goto             0    1    0               00 
   1 InitCoroutine    3    9    2               00 
   9 OpenWrite        0    6    0 1             00 root=6 iDb=0; d
  10 Yield            3   15    0               00 
REG[3] =  i:1
REG[3] =  i:10
   2 Integer         12    2    0               00 r[2]=12
REG[2] =  i:12
   3 Yield            3    0    0               00 
REG[3] =  i:10
REG[3] =  i:3
  11 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
  12 MakeRecord       2    1    4               00 r[4]=mkrec(r[2])
REG[4] =  s3[02010C...](8)
  13 Insert           0    4    1 d             1B intkey=r[1] data=r[4]
REG[4] =  s3[02010C...](8)
REG[1] =  i:1
  14 Goto             0   10    0               00 
  10 Yield            3   15    0               00 
REG[3] =  i:3
REG[3] =  i:10
   4 Integer         34    2    0               00 r[2]=34
REG[2] =  i:34
   5 Yield            3    0    0               00 
REG[3] =  i:10
REG[3] =  i:5
  11 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
  12 MakeRecord       2    1    4               00 r[4]=mkrec(r[2])
REG[4] =  s3[020122.."](8)
  13 Insert           0    4    1 d             1B intkey=r[1] data=r[4]
REG[4] =  s3[020122.."](8)
REG[1] =  i:2
  14 Goto             0   10    0               00 
  10 Yield            3   15    0               00 
REG[3] =  i:5
REG[3] =  i:10
   6 Integer         34    2    0               00 r[2]=34
REG[2] =  i:34
   7 Yield            3    0    0               00 
REG[3] =  i:10
REG[3] =  i:7
  11 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
  12 MakeRecord       2    1    4               00 r[4]=mkrec(r[2])
REG[4] =  s3[020122.."](8)
  13 Insert           0    4    1 d             1B intkey=r[1] data=r[4]
REG[4] =  s3[020122.."](8)
REG[1] =  i:3
  14 Goto             0   10    0               00 
  10 Yield            3   15    0               00 
REG[3] =  i:7
REG[3] =  i:10
   8 EndCoroutine     3    0    0               00 
REG[3] =  i:10
  15 Noop             0    0    0               00 
  16 Halt             0    0    0               00 
SQL: [;
;SELECT max(wordcount_c), (SELECT count(*) FROM wordcount_b WHERE wordcount_c=wordcount_c)
      FROM wordcount_b
     GROUP BY wordcount_c;]
VDBE Trace:
   0 Init             0   58    0               00 Start at 58
  58 Transaction      0    0   15 0             01 usesStmtJournal=0
  59 TableLock        0    2    0 wordcount_b   00 iDb=0 root=2 write=0
  60 Goto             0    1    0               00 
   1 SorterOpen       2    1    0 k(1,B)        00 
   2 Integer          0    4    0               00 r[4]=0; clear abort flag
REG[4] =  i:0
   3 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
REG[3] =  i:0
   4 Null             0    7    7               00 r[7..7]=NULL
REG[7] =  NULL
   5 Gosub            6   55    0               00 
REG[6] =  i:5
  55 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  56 Return           6    0    0               00 
REG[6] =  i:5
   6 OpenRead         0    2    0 3             00 root=2 iDb=0; wordcount_b
   7 Explain          0    0    0 SCAN TABLE wordcount_b 00 
   8 Rewind           0   13    0               00 
   9 Column           0    2    9               00 r[9]=wordcount_b.wordcount_c
REG[9] =  i:98
  10 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s3[020162..b](8)
  11 SorterInsert     2   10    0               00 
REG[10] =  s3[020162..b](8)
  12 Next             0    9    0               01 
   9 Column           0    2    9               00 r[9]=wordcount_b.wordcount_c
REG[9] =  i:99
  10 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s3[020163..c](8)
  11 SorterInsert     2   10    0               00 
REG[10] =  s3[020163..c](8)
  12 Next             0    9    0               01 
   9 Column           0    2    9               00 r[9]=wordcount_b.wordcount_c
REG[9] =  i:97
  10 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s3[020161..a](8)
  11 SorterInsert     2   10    0               00 
REG[10] =  s3[020161..a](8)
  12 Next             0    9    0               01 
  13 Close            0    0    0               00 
  14 OpenPseudo       3   10    1               00 1 columns in r[10]
  15 SorterSort       2   57    0               00 GROUP BY sort
  16 SorterData       2   10    3               00 r[10]=data
  17 Column           3    0    8               00 r[8]=
REG[8] =  i:97
  18 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  NULL
REG[8] =  i:97
  19 Jump            20   24   20               00 
  20 Move             8    7    1               00 r[7]=r[8]
REG[7] =  i:97
  21 Gosub            5   33    0               00 output one row
REG[5] =  i:21
  33 IfPos            3   35    0               00 if r[3]>0 then r[3]-=0, goto 35; Groupby result generator entry point
REG[3] =  i:0
  34 Return           5    0    0               00 
REG[5] =  i:21
  22 IfPos            4   57    0               00 if r[4]>0 then r[4]-=0, goto 57; check abort flag
REG[4] =  i:0
  23 Gosub            6   55    0               00 reset accumulator
REG[6] =  i:23
  55 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  56 Return           6    0    0               00 
REG[6] =  i:23
  24 Column           3    0    9               00 r[9]=
REG[9] =  i:97
  25 CollSeq          0    0    0 (BINARY)      00 
  26 AggStep0         0    9    1 max(1)        01 accum=r[1] step(r[9])
REG[9] =  i:97
  27 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  28 SorterNext       2   16    0               00 
  16 SorterData       2   10    3               00 r[10]=data
  17 Column           3    0    8               00 r[8]=
REG[8] =  i:98
  18 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  i:97
REG[8] =  i:98
  19 Jump            20   24   20               00 
  20 Move             8    7    1               00 r[7]=r[8]
REG[7] =  i:98
  21 Gosub            5   33    0               00 output one row
REG[5] =  i:21
  33 IfPos            3   35    0               00 if r[3]>0 then r[3]-=0, goto 35; Groupby result generator entry point
REG[3] =  i:1
  35 AggFinal         1    1    0 max(1)        00 accum=r[1] N=1
  36 Copy             1   11    0               00 r[11]=r[1]
REG[11] =  i:97
  37 Once             0   52    0               00 
  38 Null             0   13    0               00 r[13]=NULL; Init subquery result
REG[13] =  NULL
  39 Integer          1   14    0               00 r[14]=1; LIMIT counter
REG[14] =  i:1
  40 Null             0   15   15               00 r[15..15]=NULL
REG[15] =  NULL
  41 OpenRead         1    2    0 3             00 root=2 iDb=0; wordcount_b
  42 Explain          1    0    0 SCAN TABLE wordcount_b 00 
  43 Rewind           1   48    0               00 
  44 Column           1    2   16               00 r[16]=wordcount_b.wordcount_c
REG[16] =  i:98
  45 Ne              16   47   16 (BINARY)      53 if r[16]!=r[16] goto 47
REG[16] =  i:98
REG[16] =  i:98
  46 AggStep0         0    0   15 count(0)      00 accum=r[15] step(r[0])
  47 Next             1   44    0               01 
  44 Column           1    2   16               00 r[16]=wordcount_b.wordcount_c
REG[16] =  i:99
  45 Ne              16   47   16 (BINARY)      53 if r[16]!=r[16] goto 47
REG[16] =  i:99
REG[16] =  i:99
  46 AggStep          0    0   15 count(0)      00 accum=r[15] step(r[0])
  47 Next             1   44    0               01 
  44 Column           1    2   16               00 r[16]=wordcount_b.wordcount_c
REG[16] =  i:97
  45 Ne              16   47   16 (BINARY)      53 if r[16]!=r[16] goto 47
REG[16] =  i:97
REG[16] =  i:97
  46 AggStep          0    0   15 count(0)      00 accum=r[15] step(r[0])
  47 Next             1   44    0               01 
  48 Close            1    0    0               00 
  49 AggFinal        15    0    0 count(0)      00 accum=r[15] N=0
  50 Copy            15   13    0               00 r[13]=r[15]
REG[13] =  i:3
  51 DecrJumpZero    14   52    0               00 if (--r[14])==0 goto 52
REG[14] =  i:1
  52 Copy            13   12    0               00 r[12]=r[13]
REG[12] =  i:3
  53 ResultRow       11    2    0               00 output=r[11..12]
REG[11] =  i:97
REG[12] =  i:3
  54 Return           5    0    0               00 end groupby result generator
REG[5] =  i:21
  22 IfPos            4   57    0               00 if r[4]>0 then r[4]-=0, goto 57; check abort flag
REG[4] =  i:0
  23 Gosub            6   55    0               00 reset accumulator
REG[6] =  i:23
  55 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  56 Return           6    0    0               00 
REG[6] =  i:23
  24 Column           3    0    9               00 r[9]=
REG[9] =  i:98
  25 CollSeq          0    0    0 (BINARY)      00 
  26 AggStep          0    9    1 max(1)        01 accum=r[1] step(r[9])
REG[9] =  i:98
  27 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  28 SorterNext       2   16    0               00 
  16 SorterData       2   10    3               00 r[10]=data
  17 Column           3    0    8               00 r[8]=
REG[8] =  i:99
  18 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  i:98
REG[8] =  i:99
  19 Jump            20   24   20               00 
  20 Move             8    7    1               00 r[7]=r[8]
REG[7] =  i:99
  21 Gosub            5   33    0               00 output one row
REG[5] =  i:21
  33 IfPos            3   35    0               00 if r[3]>0 then r[3]-=0, goto 35; Groupby result generator entry point
REG[3] =  i:1
  35 AggFinal         1    1    0 max(1)        00 accum=r[1] N=1
  36 Copy             1   11    0               00 r[11]=r[1]
REG[11] =  i:98
  37 Once             0   52    0               00 
  52 Copy            13   12    0               00 r[12]=r[13]
REG[12] =  i:3
  53 ResultRow       11    2    0               00 output=r[11..12]
REG[11] =  i:98
REG[12] =  i:3
  54 Return           5    0    0               00 end groupby result generator
REG[5] =  i:21
  22 IfPos            4   57    0               00 if r[4]>0 then r[4]-=0, goto 57; check abort flag
REG[4] =  i:0
  23 Gosub            6   55    0               00 reset accumulator
REG[6] =  i:23
  55 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  56 Return           6    0    0               00 
REG[6] =  i:23
  24 Column           3    0    9               00 r[9]=
REG[9] =  i:99
  25 CollSeq          0    0    0 (BINARY)      00 
  26 AggStep          0    9    1 max(1)        01 accum=r[1] step(r[9])
REG[9] =  i:99
  27 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  28 SorterNext       2   16    0               00 
  29 Gosub            5   33    0               00 output final row
REG[5] =  i:29
  33 IfPos            3   35    0               00 if r[3]>0 then r[3]-=0, goto 35; Groupby result generator entry point
REG[3] =  i:1
  35 AggFinal         1    1    0 max(1)        00 accum=r[1] N=1
  36 Copy             1   11    0               00 r[11]=r[1]
REG[11] =  i:99
  37 Once             0   52    0               00 
  52 Copy            13   12    0               00 r[12]=r[13]
REG[12] =  i:3
  53 ResultRow       11    2    0               00 output=r[11..12]
REG[11] =  i:99
REG[12] =  i:3
  54 Return           5    0    0               00 end groupby result generator
REG[5] =  i:29
  30 Goto             0   57    0               00 
  57 Halt             0    0    0               00 
SQL: [
;SELECT max(cnt), (SELECT sum(ipk=cnt) FROM wordcount_b)
      FROM wordcount
     GROUP BY cnt;]
VDBE Trace:
   0 Init             0   52    0               00 Start at 52
  52 Transaction      0    0   15 0             01 usesStmtJournal=0
  53 TableLock        0    5    0 wordcount     00 iDb=0 root=5 write=0
  54 TableLock        0    2    0 wordcount_b   00 iDb=0 root=2 write=0
  55 Goto             0    1    0               00 
   1 Noop             2    1    0               00 
   2 Integer          0    4    0               00 r[4]=0; clear abort flag
REG[4] =  i:0
   3 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
REG[3] =  i:0
   4 Null             0    7    7               00 r[7..7]=NULL
REG[7] =  NULL
   5 Gosub            6   49    0               00 
REG[6] =  i:5
  49 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  50 Return           6    0    0               00 
REG[6] =  i:5
   6 OpenRead         3    3    0 k(2,,)        00 root=3 iDb=0; nnw
   7 Explain          0    0    0 SCAN TABLE wordcount USING COVERING INDEX nnw 00 
   8 Rewind           3   23    9 0             00 
  23 Close            3    0    0               00 
  24 Gosub            5   28    0               00 output final row
REG[5] =  i:24
  28 IfPos            3   30    0               00 if r[3]>0 then r[3]-=0, goto 30; Groupby result generator entry point
REG[3] =  i:0
  29 Return           5    0    0               00 
REG[5] =  i:24
  25 Goto             0   51    0               00 
  51 Halt             0    0    0               00 
SQL: [;
;DROP TABLE IF EXISTS aa;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0   15 0             01 usesStmtJournal=0
   3 Transaction      1    0    0 0             01 usesStmtJournal=0
   4 Transaction      2    0    0 0             01 usesStmtJournal=0
   5 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [;DROP TABLE IF EXISTS bb;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0   15 0             01 usesStmtJournal=0
   3 Transaction      1    0    0 0             01 usesStmtJournal=0
   4 Transaction      2    0    0 0             01 usesStmtJournal=0
   5 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [;CREATE TABLE sqlsim0(sqlsim1 INT);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1   15 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:8
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:11
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:11
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:11
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:11
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:11
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:11
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 sqlsim0       00 r[7]='sqlsim0'
REG[7] =   t7[sqlsim0](8)
  21 String8          0    8    0 sqlsim0       00 r[8]='sqlsim0'
REG[8] =   t7[sqlsim0](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:8
  23 String8          0   10    0 CREATE TABLE sqlsim0(sqlsim1 INT) 00 r[10]='CREATE TABLE sqlsim0(sqlsim1 INT)'
REG[10] =   t33[CREATE TABLE sq](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s59[06171B1B014F7461626C6573716C7369.....Otablesqlsi](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s59[06171B1B014F7461626C6573716C7369.....Otablesqlsi](8)
REG[5] =  i:11
  26 Close            1    0    0               00 
  27 SetCookie        0    1   16               00 
  28 ParseSchema      0    0    0 tbl_name='sqlsim0' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0   16 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 sqlsim0       00 r[2]='sqlsim0'
REG[2] =   t7[sqlsim0](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[sqlsim0](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[wordcount](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[sqlsim0](8)
REG[1] =   s9[wordcount](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s11[wordcount_b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[sqlsim0](8)
REG[1] =   s11[wordcount_b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[d](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[sqlsim0](8)
REG[1] =   s1[d](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[wordcount](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[sqlsim0](8)
REG[1] =   s9[wordcount](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t5](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[sqlsim0](8)
REG[1] =   s2[t5](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[sqlsim0](8)
REG[1] =   s7[sqlsim0](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s7[sqlsim0](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:8
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s33[CREATE TABLE sq](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s7[sqlsim0](8)
REG[6] =  i:8
REG[7] =   s33[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;INSERT INTO wordcount(cnt) VALUES(123);]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    1   16 0             01 usesStmtJournal=0
  24 TableLock        0    5    1 wordcount     00 iDb=0 root=5 write=1
  25 TableLock        0    4    1 sqlite_sequence 00 iDb=0 root=4 write=1
  26 OpenRead         0    4    0 2             00 root=4 iDb=0; sqlite_sequence
  27 String8          0    1    0 wordcount     00 r[1]='wordcount'
REG[1] =   t9[wordcount](8)
  28 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  29 Rewind           0   37    0               00 
  37 Close            0    0    0               00 
  38 Goto             0    1    0               00 
   1 OpenWrite        0    5    0 2             00 root=5 iDb=0; wordcount
   2 OpenWrite        1    3    0 k(2,,)        00 root=3 iDb=0; nnw
   3 NewRowid         0    4    2               00 r[4]=rowid
REG[2] =  NULL
REG[4] =  i:1
   4 MemMax           2    4    0               00 r[2]=max(r[2],r[4])
REG[4] =  i:1
   5 SoftNull         5    0    0               00 r[5]=NULL
   6 Integer        123    6    0               00 r[6]=123
REG[6] =  i:123
   7 Affinity         5    2    0 DD            00 affinity(r[5..6])
   8 SCopy            6    8    0               00 r[8]=r[6]; cnt
REG[8] =  i:123
   9 IntCopy          4    9    0               00 r[9]=r[4]; rowid
REG[9] =  i:1
  10 MakeRecord       8    2    7               00 r[7]=mkrec(r[8..9]); for nnw
REG[7] =  s4[0301097B...{](8)
  11 IdxInsert        1    7    0               10 key=r[7]
REG[7] =  s4[0301097B...{](8)
  12 MakeRecord       5    2   10               00 r[10]=mkrec(r[5..6])
REG[10] =  s4[0300017B...{](8)
  13 Insert           0   10    4 wordcount     1B intkey=r[4] data=r[10]
REG[10] =  s4[0300017B...{](8)
REG[4] =  i:1
  14 Close            0    0    0               00 
  15 Close            1    0    0               00 
  16 OpenWrite        0    4    0 2             00 root=4 iDb=0; sqlite_sequence
  17 NotNull          3   19    0               00 if r[3]!=NULL goto 19
REG[3] =  NULL
  18 NewRowid         0    3    0               00 r[3]=rowid
REG[3] =  i:1
  19 MakeRecord       1    2   11               00 r[11]=mkrec(r[1..2])
REG[11] =  s12[031F09776F7264636F756E74...wordcount](8)
  20 Insert           0   11    3               08 intkey=r[3] data=r[11]
REG[11] =  s12[031F09776F7264636F756E74...wordcount](8)
REG[3] =  i:1
  21 Noop             0    0    0               00 
  22 Halt             0    0    0               00 
SQL: [;INSERT INTO wordcount_b(ipk) VALUES(456);]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    1   16 0             01 usesStmtJournal=0
   9 TableLock        0    2    1 wordcount_b   00 iDb=0 root=2 write=1
  10 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 3             00 root=2 iDb=0; wordcount_b
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   3 Integer        456    3    0               00 r[3]=456
REG[3] =  i:456
   4 MakeRecord       2    3    5 DDD           00 r[5]=mkrec(r[2..4])
REG[5] =  s6[0400020001C8......](8)
   5 Insert           0    5    1 wordcount_b   1B intkey=r[1] data=r[5]
REG[5] =  s6[0400020001C8......](8)
REG[1] =  i:4
   6 Noop             0    0    0               00 
   7 Halt             0    0    0               00 
SQL: [;SELECT (SELECT sum(e+(SELECT word)) FROM wordcount) FROM d;]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    0   16 0             01 usesStmtJournal=0
  28 TableLock        0    6    0 d             00 iDb=0 root=6 write=0
  29 TableLock        0    5    0 wordcount     00 iDb=0 root=5 write=0
  30 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    6    0 1             00 root=6 iDb=0; d
   3 Explain          0    0    0 SCAN TABLE d  00 
   4 Rewind           0   13    0               00 
   5 Column           0    0    4               00 r[4]=d.e
REG[4] =  i:12
   6 Null             0    6    0               00 r[6]=NULL; Init subquery result
REG[6] =  NULL
   7 Integer          1    7    0               00 r[7]=1; LIMIT counter
REG[7] =  i:1
   8 Rowid            1    6    0               00 r[6]=rowid

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f8662ca9859 in __GI_abort () at abort.c:79
#2  0x00007f8662ca9729 in __assert_fail_base (fmt=0x7f8662e3f588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21b760 "pC!=0", file=0x222c23 "sqlite3.c", line=81350, function=<optimized out>) at assert.c:92
#3  0x00007f8662cbafd6 in __GI___assert_fail (assertion=0x21b760 "pC!=0", file=0x222c23 "sqlite3.c", line=81350, function=0x213a19 "int sqlite3VdbeExec(Vdbe *)") at assert.c:101
#4  0x00000000003e5cd3 in sqlite3VdbeExec (p=<optimized out>) at sqlite3.c:81350
#5  0x000000000028b140 in sqlite3_step (pStmt=<optimized out>) at sqlite3.c:75131
#6  0x000000000024b5e9 in main (argc=1, argv=0x7fff61f507f8) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 29511] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
