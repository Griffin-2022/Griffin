GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000275,sig:06,src:020772+010564,time:8137173,execs:1780519,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;INSERT INTO t2(x,t1) VALUES('funny','buffalo');]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    1    1 0             01 usesStmtJournal=0
  16 TableLock        0    2    1 t2            00 iDb=0 root=2 write=1
  17 Goto             0    1    0               00 
   1 OpenWrite        1    3    0 k(1,)         00 root=3 iDb=0; sqlite_autoindex_t2_1
   2 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   3 String8          0    2    0 funny         00 r[2]='funny'
REG[2] =   t5[funny](8)
   4 String8          0    3    0 buffalo       00 r[3]='buffalo'
REG[3] =   t7[buffalo](8)
   5 HaltIfNull    1299    2    2 t2.x          01 if r[2]=null halt
REG[2] =   t5[funny](8)
   6 Affinity         2    1    0 D             00 affinity(r[2])
   7 SCopy            2    5    0               00 r[5]=r[2]; x
REG[5] =   t5[funny](8)
   8 SCopy            3    6    0               00 r[6]=r[3]; t1
REG[6] =   t7[buffalo](8)
   9 MakeRecord       5    2    4               00 r[4]=mkrec(r[5..6]); for sqlite_autoindex_t2_1
REG[4] =  s15[03171B66756E6E7962756666616C6F...funnybuffalo](8)
  10 NoConflict       1   12    5 1             00 key=r[5]
REG[5] =   t5[funny](8)
  12 IdxInsert        1    4    0               11 key=r[4]
REG[4] =  s15[03171B66756E6E7962756666616C6F...funnybuffalo](8)
  13 Noop             1    0    0               00 
  14 Halt             0    0    0               00 
SQL: [;SELECT type, name, '|' FROM sqlite_master;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    1 0             01 usesStmtJournal=0
  12 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  13 Goto             0    1    0               00 
   1 OpenRead         0    1    0 2             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[t2](8)
   6 String8          0    3    0 |             00 r[3]='|'
REG[3] =   t1[|](8)
   7 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s5[table](8)
REG[2] =   s2[t2](8)
REG[3] =   t1[|](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s21[sqlite_autoinde](8)
   6 String           1    3    0 |             00 r[3]='|' (len=1)
REG[3] =   t1[|](8)
   7 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s5[index](8)
REG[2] =   s21[sqlite_autoinde](8)
REG[3] =   t1[|](8)
   8 Next             0    4    0               01 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fe260032859 in __GI_abort () at abort.c:79
#2  0x00007fe260032729 in __assert_fail_base (fmt=0x7fe2601c8588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x2069a8 "pPk->tnum==pTab->tnum", file=0x222c23 "sqlite3.c", line=105908, function=<optimized out>)
    at assert.c:92
#3  0x00007fe260043fd6 in __GI___assert_fail (assertion=0x2069a8 "pPk->tnum==pTab->tnum", file=0x222c23 "sqlite3.c", line=105908, function=0x223709 "void sqlite3OpenTable(Parse *, int, int, Table *, int)") at assert.c:101
#4  0x0000000000315400 in sqlite3OpenTable (pParse=0x12499e0, iCur=<optimized out>, iDb=<optimized out>, pTab=0x124b800, opcode=102) at sqlite3.c:105908
#5  0x0000000000356014 in sqlite3RefillIndex (pParse=0x12499e0, pIndex=0x124ed80, memRootPage=1) at sqlite3.c:99603
#6  0x000000000031f419 in sqlite3CreateIndex (pParse=<optimized out>, pName1=<optimized out>, pName2=<optimized out>, pTblName=<optimized out>, pList=<optimized out>, onError=<optimized out>, pStart=<optimized out>, 
    pPIWhere=0x0, sortOrder=<optimized out>, ifNotExist=<optimized out>) at sqlite3.c:100180
#7  0x00000000003022e9 in yy_reduce (yypParser=0x12542d0, yyruleno=<optimized out>) at sqlite3.c:133800
#8  0x00000000002fef8e in sqlite3Parser (yyp=0x12542d0, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#9  0x00000000002fc544 in sqlite3RunParser (pParse=0x12499e0, zSql=0x1248a50 ";CREATE UNIQUE INDEX a ON t2(x);;UPDATE t2 SET t1=1 WHERE t1='';", pzErrMsg=0x7fff3ae89c08) at sqlite3.c:135186
#10 0x00000000002fac4e in sqlite3Prepare (db=0x1237d50, zSql=0x1237bf1 ";CREATE UNIQUE INDEX a ON t2(x);;UPDATE t2 SET t1=1 WHERE t1='';", nBytes=<optimized out>, saveSqlFlag=1, pReprepare=<optimized out>, 
    ppStmt=0x7fff3ae89d38, pzTail=0x7fff3ae89d20) at sqlite3.c:112589
#11 0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0x1237d50, zSql=0x1237bf1 ";CREATE UNIQUE INDEX a ON t2(x);;UPDATE t2 SET t1=1 WHERE t1='';", nBytes=64, saveSqlFlag=1, pOld=0x0, ppStmt=<optimized out>, 
    pzTail=0x7fff3ae89d20) at sqlite3.c:112688
#12 0x000000000028f38c in sqlite3_prepare_v2 (db=0x2, zSql=0x7fff3ae894b0 "", nBytes=0, ppStmt=0x7fff3ae89d38, pzTail=<optimized out>) at sqlite3.c:112764
#13 0x000000000024b100 in main (argc=1, argv=0x7fff3ae89ee8) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 30625] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
