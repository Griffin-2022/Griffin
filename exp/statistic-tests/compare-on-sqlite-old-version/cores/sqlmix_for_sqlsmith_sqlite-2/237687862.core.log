GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000555,sig:06,src:019230+021944,time:35420835,execs:12253940,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    0 0             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [CREATE TABLE t2(x INT CHECK(
     datetime( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
              10,11,12,13,14,15,16,17,18,19,
              20,21,22,23,24,25,26,27,28,29,
              30,31,32,33,34,35,36,37,38,39,
              40,41,42,43,44,45,46,47,48,x)
   )
  );]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    0 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:1
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:1
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:1
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t2            00 r[7]='t2'
REG[7] =   t2[t2](8)
  21 String8          0    8    0 t2            00 r[8]='t2'
REG[8] =   t2[t2](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  23 String8          0   10    0 CREATE TABLE t2(x INT CHECK(
     datetime( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
              10,11,12,13,14,15,16,17,18,19,
              20,21,22,23,24,25,26,27,28,29,
              30,31,32,33,34,35,36,37,38,39,
              40,41,42,43,44,45,46,47,48,x)
   )
  ) 00 r[10]='CREATE TABLE t2(x INT CHECK(
     datetime( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
              10,1
REG[10] =   t261[CREATE TABLE t2](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s278[071711110184177461626C6574327432.......tablet2t2](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s278[071711110184177461626C6574327432.......tablet2t2](8)
REG[5] =  i:1
  26 Close            1    0    0               00 
  27 SetCookie        0    1    1               00 
  28 ParseSchema      0    0    0 tbl_name='t2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    1 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t2            00 r[2]='t2'
REG[2] =   t2[t2](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t2](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t2](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s261[CREATE TABLE t2](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t2](8)
REG[6] =  i:2
REG[7] =   s261[CREATE TABLE t2](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [CREATE TABLE t1(a TEXT, CHECK(a=+a));]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    1 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:2
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:2
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:2
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t1            00 r[7]='t1'
REG[7] =   t2[t1](8)
  21 String8          0    8    0 t1            00 r[8]='t1'
REG[8] =   t2[t1](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  23 String8          0   10    0 CREATE TABLE t1(a TEXT, CHECK(a=+a)) 00 r[10]='CREATE TABLE t1(a TEXT, CHECK(a=+a))'
REG[10] =   t36[CREATE TABLE t1](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s52[0617111101557461626C657431743103.....Utablet1t1.](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s52[0617111101557461626C657431743103.....Utablet1t1.](8)
REG[5] =  i:2
  26 Close            1    0    0               00 
  27 SetCookie        0    1    2               00 
  28 ParseSchema      0    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s36[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:3
REG[7] =   s36[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [VACUUM
;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Vacuum           0    0    0               00 
SQL: [ATTACH '' AS vacuum_db;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0               00 r[1]=''
REG[1] =   t0[](8)
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
REG[2] =   t9[vacuum_db](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t0[](8)
REG[2] =   t9[vacuum_db](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      2    0    0 0             00 usesStmtJournal=0
  13 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [PRAGMA vacuum_db.synchronous=OFF]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [SELECT 'CREATE TABLE vacuum_db.' || substr(sql,14)   FROM sqlite_master WHERE type='table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    2 0             01 usesStmtJournal=0
  20 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  21 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  22 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  23 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  24 String8          0    8    0 CREATE TABLE vacuum_db. 00 r[8]='CREATE TABLE vacuum_db.'
REG[8] =   t23[CREATE TABLE va](8)
  25 Integer         14   10    0               00 r[10]=14
REG[10] =  i:14
  26 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   17    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t2](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[t2](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:2
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:2
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s261[CREATE TABLE t2](8)
  13 Function0        2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s261[CREATE TABLE t2](8)
REG[10] =  i:14
REG[5] =   s248[t2(x INT CHECK(](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s248[t2(x INT CHECK(](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s271[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s271[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.t2(x INT CHECK(
     datetime( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
              10,11,12,13,14,15,16,17,18,19,
              20,21,22,23,24,25,26,27,28,29,
              30,31,32,33,34,35,36,37,38,39,
              40,41,42,43,44,45,46,47,48,x)
   )
  )]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      2    1    0 0             01 usesStmtJournal=0
  31 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        2    2    4               00 
   4 SetCookie        2    5    1               00 
   5 CreateTable      2    2    0               00 r[2]=root iDb=2
REG[2] =  i:2
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:1
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:1
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:1
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t2            00 r[7]='t2'
REG[7] =   t2[t2](8)
  21 String8          0    8    0 t2            00 r[8]='t2'
REG[8] =   t2[t2](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  23 String8          0   10    0 CREATE TABLE t2(x INT CHECK(
     datetime( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
              10,11,12,13,14,15,16,17,18,19,
              20,21,22,23,24,25,26,27,28,29,
              30,31,32,33,34,35,36,37,38,39,
              40,41,42,43,44,45,46,47,48,x)
   )
  ) 00 r[10]='CREATE TABLE t2(x INT CHECK(
     datetime( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
              10,1
REG[10] =   t261[CREATE TABLE t2](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s278[071711110184177461626C6574327432.......tablet2t2](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s278[071711110184177461626C6574327432.......tablet2t2](8)
REG[5] =  i:1
  26 Close            1    0    0               00 
  27 SetCookie        2    1    1               00 
  28 ParseSchema      2    0    0 tbl_name='t2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    1 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 t2            00 r[2]='t2'
REG[2] =   t2[t2](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t2](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t2](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s261[CREATE TABLE t2](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t2](8)
REG[6] =  i:2
REG[7] =   s261[CREATE TABLE t2](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t1](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[t1](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:3
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:3
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s36[CREATE TABLE t1](8)
  13 Function         2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s36[CREATE TABLE t1](8)
REG[10] =  i:14
REG[5] =   s23[t1(a TEXT, CHEC](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s23[t1(a TEXT, CHEC](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s46[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s46[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.t1(a TEXT, CHECK(a=+a))]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      2    1    1 0             01 usesStmtJournal=0
  31 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      2    2    0               00 r[2]=root iDb=2
REG[2] =  i:3
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:2
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:2
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:2
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t1            00 r[7]='t1'
REG[7] =   t2[t1](8)
  21 String8          0    8    0 t1            00 r[8]='t1'
REG[8] =   t2[t1](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  23 String8          0   10    0 CREATE TABLE t1(a TEXT, CHECK(a=+a)) 00 r[10]='CREATE TABLE t1(a TEXT, CHECK(a=+a))'
REG[10] =   t36[CREATE TABLE t1](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s52[0617111101557461626C657431743103.....Utablet1t1.](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s52[0617111101557461626C657431743103.....Utablet1t1.](8)
REG[5] =  i:2
  26 Close            1    0    0               00 
  27 SetCookie        2    1    2               00 
  28 ParseSchema      2    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    2 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s36[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:3
REG[7] =   s36[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
  16 Next             0    4    0               01 
  17 Close            0    0    0               00 
  18 Halt             0    0    0               00 
SQL: [SELECT 'CREATE INDEX vacuum_db.' || substr(sql,14)  FROM sqlite_master WHERE sql LIKE 'CREATE INDEX %' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    2 0             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE INDEX % 00 r[2]='CREATE INDEX %'
REG[2] =   t14[CREATE INDEX %](8)
  17 String8          0    5    0 CREATE INDEX vacuum_db. 00 r[5]='CREATE INDEX vacuum_db.'
REG[5] =   t23[CREATE INDEX va](8)
  18 Integer         14    7    0               00 r[7]=14
REG[7] =  i:14
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s261[CREATE TABLE t2](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s261[CREATE TABLE t2](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s36[CREATE TABLE t1](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s36[CREATE TABLE t1](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'CREATE UNIQUE INDEX vacuum_db.' || substr(sql,21)   FROM sqlite_master WHERE sql LIKE 'CREATE UNIQUE INDEX %']
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    2 0             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE UNIQUE INDEX % 00 r[2]='CREATE UNIQUE INDEX %'
REG[2] =   t21[CREATE UNIQUE I](8)
  17 String8          0    5    0 CREATE UNIQUE INDEX vacuum_db. 00 r[5]='CREATE UNIQUE INDEX vacuum_db.'
REG[5] =   t30[CREATE UNIQUE I](8)
  18 Integer         21    7    0               00 r[7]=21
REG[7] =  i:21
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s261[CREATE TABLE t2](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s261[CREATE TABLE t2](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s36[CREATE TABLE t1](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s36[CREATE TABLE t1](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';'FROM main.sqlite_master WHERE type = 'table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    0    2 0             01 usesStmtJournal=0
  25 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  26 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  27 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  28 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  29 String8          0   10    0 INSERT INTO vacuum_db. 00 r[10]='INSERT INTO vacuum_db.'
REG[10] =   t22[INSERT INTO vac](8)
  30 String8          0   13    0  SELECT * FROM main. 00 r[13]=' SELECT * FROM main.'
REG[13] =   t20[ SELECT * FROM ](8)
  31 String8          0   14    0 ;             00 r[14]=';'
REG[14] =   t1[;](8)
  32 Goto             0    1    0               00 
   1 OpenRead         0    1    0 4             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   22    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t2](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[t2](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:2
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:2
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[t2](8)
  13 Function0        0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s2[t2](8)
REG[11] =   z4['t2'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z4['t2'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s26[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s26[INSERT INTO vac](8)
REG[8] =   s46[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[t2](8)
  17 Function0        0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s2[t2](8)
REG[9] =   z4['t2'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z4['t2'](8)
REG[8] =   s46[INSERT INTO vac](8)
REG[5] =   s50[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s50[INSERT INTO vac](8)
REG[7] =   s51[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s51[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'t2' SELECT * FROM main.'t2';]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 0             01 usesStmtJournal=0
  12 Transaction      2    1    2 0             01 usesStmtJournal=0
  13 TableLock        2    2    1 t2            00 iDb=2 root=2 write=1
  14 TableLock        0    2    0 t2            00 iDb=0 root=2 write=0
  15 Goto             0    1    0               00 
   1 OpenWrite        1    2    2 1             00 root=2 iDb=2; t2
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t2
   3 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t1](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[t1](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:3
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:3
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[t1](8)
  13 Function         0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s2[t1](8)
REG[11] =   z4['t1'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z4['t1'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s26[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s26[INSERT INTO vac](8)
REG[8] =   s46[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[t1](8)
  17 Function         0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s2[t1](8)
REG[9] =   z4['t1'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z4['t1'](8)
REG[8] =   s46[INSERT INTO vac](8)
REG[5] =   s50[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s50[INSERT INTO vac](8)
REG[7] =   s51[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s51[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'t1' SELECT * FROM main.'t1';]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 0             01 usesStmtJournal=0
  12 Transaction      2    1    2 0             01 usesStmtJournal=0
  13 TableLock        2    3    1 t1            00 iDb=2 root=3 write=1
  14 TableLock        0    3    0 t1            00 iDb=0 root=3 write=0
  15 Goto             0    1    0               00 
   1 OpenWrite        1    3    2 1             00 root=3 iDb=2; t1
   2 OpenRead         0    3    0 1             00 root=3 iDb=0; t1
   3 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
  21 Next             0    4    0               01 
  22 Close            0    0    0               00 
  23 Halt             0    0    0               00 
SQL: [SELECT 'DELETE FROM vacuum_db.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name='sqlite_sequence' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      2    0    2 0             01 usesStmtJournal=0
  15 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  16 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  17 String8          0    5    0 DELETE FROM vacuum_db. 00 r[5]='DELETE FROM vacuum_db.'
REG[5] =   t22[DELETE FROM vac](8)
  18 String8          0    8    0 ;             00 r[8]=';'
REG[8] =   t1[;](8)
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t2](8)
  11 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name=='sqlite_sequence';]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      2    0    2 0             01 usesStmtJournal=0
  19 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  20 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  21 String8          0    7    0 INSERT INTO vacuum_db. 00 r[7]='INSERT INTO vacuum_db.'
REG[7] =   t22[INSERT INTO vac](8)
  22 String8          0   10    0  SELECT * FROM main. 00 r[10]=' SELECT * FROM main.'
REG[10] =   t20[ SELECT * FROM ](8)
  23 String8          0   11    0 ;             00 r[11]=';'
REG[11] =   t1[;](8)
  24 Goto             0    1    0               00 
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   16    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t2](8)
  15 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  15 Next             0    4    0               01 
  16 Close            0    0    0               00 
  17 Halt             0    0    0               00 
SQL: [INSERT INTO vacuum_db.sqlite_master   SELECT type, name, tbl_name, rootpage, sql    FROM main.sqlite_master   WHERE type='view' OR type='trigger'      OR (type='table' AND rootpage=0)]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    0    2 0             01 usesStmtJournal=0
  29 Transaction      2    1    2 0             01 usesStmtJournal=0
  30 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  31 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  32 String8          0    9    0 view          00 r[9]='view'
REG[9] =   t4[view](8)
  33 String8          0   11    0 trigger       00 r[11]='trigger'
REG[11] =   t7[trigger](8)
  34 String8          0   12    0 table         00 r[12]='table'
REG[12] =   t5[table](8)
  35 Integer          0   13    0               00 r[13]=0
REG[13] =  i:0
  36 Goto             0    1    0               00 
   1 InitCoroutine    7   20    2               00 
  20 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  21 Yield            7   26    0               00 
REG[7] =  i:1
REG[7] =  i:21
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   18    0               00 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[table](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[table](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[table](8)
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
REG[10] =  i:2
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
REG[13] =  i:0
REG[10] =  i:2
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[table](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[table](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[table](8)
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
REG[10] =  i:3
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
REG[13] =  i:0
REG[10] =  i:3
  17 Next             0    5    0               01 
  18 Close            0    0    0               00 
  19 EndCoroutine     7    0    0               00 
REG[7] =  i:21
  26 Noop             1    0    0               00 
  27 Halt             0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [ATTACH '' AS vacuum_db
;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0               00 r[1]=''
REG[1] =   t0[](8)
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
REG[2] =   t9[vacuum_db](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t0[](8)
REG[2] =   t9[vacuum_db](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    3 1             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s261[CREATE TABLE t2](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t2](8)
REG[2] =  i:2
REG[3] =   s261[CREATE TABLE t2](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s36[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:3
REG[3] =   s36[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      2    0    0 0             00 usesStmtJournal=0
  13 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [;SELECT quote(x) FROM t2 ORDER BY rowid;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    3 1             01 usesStmtJournal=0
  12 TableLock        0    2    0 t2            00 iDb=0 root=2 write=0
  13 Goto             0    1    0               00 
   1 Noop             1    3    0               00 
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t2
   3 Explain          0    0    0 SCAN TABLE t2 00 
   4 Rewind           0    9    0               00 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
SQL: [select zeroblob(-10)
;]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 Integer        -10    2    0               00 r[2]=-10
REG[2] =  i:-10
   5 Goto             0    1    0               00 
   1 Function0        1    2    1 zeroblob(1)   01 r[1]=func(r[2])
REG[2] =  i:-10
REG[1] =  s0[](8)+0z
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  s0[](8)+0z
   3 Halt             0    0    0               00 
SQL: [;INSERT INTO t2(x) VALUES(NULL);]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    1    3 1             01 usesStmtJournal=0
  13 TableLock        0    2    1 t2            00 iDb=0 root=2 write=1
  14 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  15 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  16 Integer          2    6    0               00 r[6]=2
REG[6] =  i:2
  17 Integer          3    7    0               00 r[7]=3
REG[7] =  i:3
  18 Integer          4    8    0               00 r[8]=4
REG[8] =  i:4
  19 Integer          5    9    0               00 r[9]=5
REG[9] =  i:5
  20 Integer          6   10    0               00 r[10]=6
REG[10] =  i:6
  21 Integer          7   11    0               00 r[11]=7
REG[11] =  i:7
  22 Integer          8   12    0               00 r[12]=8
REG[12] =  i:8
  23 Integer          9   13    0               00 r[13]=9
REG[13] =  i:9
  24 Integer         10   14    0               00 r[14]=10
REG[14] =  i:10
  25 Integer         11   15    0               00 r[15]=11
REG[15] =  i:11
  26 Integer         12   16    0               00 r[16]=12
REG[16] =  i:12
  27 Integer         13   17    0               00 r[17]=13
REG[17] =  i:13
  28 Integer         14   18    0               00 r[18]=14
REG[18] =  i:14
  29 Integer         15   19    0               00 r[19]=15
REG[19] =  i:15
  30 Integer         16   20    0               00 r[20]=16
REG[20] =  i:16
  31 Integer         17   21    0               00 r[21]=17
REG[21] =  i:17
  32 Integer         18   22    0               00 r[22]=18
REG[22] =  i:18
  33 Integer         19   23    0               00 r[23]=19
REG[23] =  i:19
  34 Integer         20   24    0               00 r[24]=20
REG[24] =  i:20
  35 Integer         21   25    0               00 r[25]=21
REG[25] =  i:21
  36 Integer         22   26    0               00 r[26]=22
REG[26] =  i:22
  37 Integer         23   27    0               00 r[27]=23
REG[27] =  i:23
  38 Integer         24   28    0               00 r[28]=24
REG[28] =  i:24
  39 Integer         25   29    0               00 r[29]=25
REG[29] =  i:25
  40 Integer         26   30    0               00 r[30]=26
REG[30] =  i:26
  41 Integer         27   31    0               00 r[31]=27
REG[31] =  i:27
  42 Integer         28   32    0               00 r[32]=28
REG[32] =  i:28
  43 Integer         29   33    0               00 r[33]=29
REG[33] =  i:29
  44 Integer         30   34    0               00 r[34]=30
REG[34] =  i:30
  45 Integer         31   35    0               00 r[35]=31
REG[35] =  i:31
  46 Integer         32   36    0               00 r[36]=32
REG[36] =  i:32
  47 Integer         33   37    0               00 r[37]=33
REG[37] =  i:33
  48 Integer         34   38    0               00 r[38]=34
REG[38] =  i:34
  49 Integer         35   39    0               00 r[39]=35
REG[39] =  i:35
  50 Integer         36   40    0               00 r[40]=36
REG[40] =  i:36
  51 Integer         37   41    0               00 r[41]=37
REG[41] =  i:37
  52 Integer         38   42    0               00 r[42]=38
REG[42] =  i:38
  53 Integer         39   43    0               00 r[43]=39
REG[43] =  i:39
  54 Integer         40   44    0               00 r[44]=40
REG[44] =  i:40
  55 Integer         41   45    0               00 r[45]=41
REG[45] =  i:41
  56 Integer         42   46    0               00 r[46]=42
REG[46] =  i:42
  57 Integer         43   47    0               00 r[47]=43
REG[47] =  i:43
  58 Integer         44   48    0               00 r[48]=44
REG[48] =  i:44
  59 Integer         45   49    0               00 r[49]=45
REG[49] =  i:45
  60 Integer         46   50    0               00 r[50]=46
REG[50] =  i:46
  61 Integer         47   51    0               00 r[51]=47
REG[51] =  i:47
  62 Integer         48   52    0               00 r[52]=48
REG[52] =  i:48
  63 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 1             00 root=2 iDb=0; t2
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
   4 Copy             2   53    0               00 r[53]=r[2]
REG[53] =  NULL
   5 Function0       -1    4    3 datetime(-1)  32 r[3]=func(r[4..53])
REG[4] =  i:0
REG[5] =  i:1
REG[6] =  i:2
REG[7] =  i:3
REG[8] =  i:4
REG[9] =  i:5
REG[10] =  i:6
REG[11] =  i:7
REG[12] =  i:8
REG[13] =  i:9
REG[14] =  i:10
REG[15] =  i:11
REG[16] =  i:12
REG[17] =  i:13
REG[18] =  i:14
REG[19] =  i:15
REG[20] =  i:16
REG[21] =  i:17
REG[22] =  i:18
REG[23] =  i:19
REG[24] =  i:20
REG[25] =  i:21
REG[26] =  i:22
REG[27] =  i:23
REG[28] =  i:24
REG[29] =  i:25
REG[30] =  i:26
REG[31] =  i:27
REG[32] =  i:28
REG[33] =  i:29
REG[34] =  i:30
REG[35] =  i:31
REG[36] =  i:32
REG[37] =  i:33
REG[38] =  i:34
REG[39] =  i:35
REG[40] =  i:36
REG[41] =  i:37
REG[42] =  i:38
REG[43] =  i:39
REG[44] =  i:40
REG[45] =  i:41
REG[46] =  i:42
REG[47] =  i:43
REG[48] =  i:44
REG[49] =  i:45
REG[50] =  i:46
REG[51] =  i:47
REG[52] =  i:48
REG[53] =  NULL
REG[3] =  NULL
   6 If               3    8    1               00 
REG[3] =  NULL
   8 MakeRecord       2    1    3 D             00 r[3]=mkrec(r[2])
REG[3] =  s2[0200..](8)
   9 Insert           0    3    1 t2            1B intkey=r[1] data=r[3]
REG[3] =  s2[0200..](8)
REG[1] =  i:1
  10 Noop             0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;CREATE TABLE b(c TEXT, CHECK(c NOT BETWEEN 0 AND +c));]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    3 1             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:3
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:3
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:3
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 b             00 r[7]='b'
REG[7] =   t1[b](8)
  21 String8          0    8    0 b             00 r[8]='b'
REG[8] =   t1[b](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  23 String8          0   10    0 CREATE TABLE b(c TEXT, CHECK(c NOT BETWEEN 0 AND +c)) 00 r[10]='CREATE TABLE b(c TEXT, CHECK(c NOT BETWEEN 0 AND +c))'
REG[10] =   t53[CREATE TABLE b(](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s67[06170F0F01777461626C656262044352.....wtablebb.CR](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s67[06170F0F01777461626C656262044352.....wtablebb.CR](8)
REG[5] =  i:3
  26 Close            1    0    0               00 
  27 SetCookie        0    1    4               00 
  28 ParseSchema      0    0    0 tbl_name='b' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 b             00 r[2]='b'
REG[2] =   t1[b](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[b](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[b](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[b](8)
REG[1] =   s1[b](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[b](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s53[CREATE TABLE b(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[b](8)
REG[6] =  i:4
REG[7] =   s53[CREATE TABLE b(](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;INSERT INTO t2(x) VALUES(1),(2);]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    1    4 1             01 usesStmtJournal=1
  20 TableLock        0    2    1 t2            00 iDb=0 root=2 write=1
  21 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
  22 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  23 Integer          2    7    0               00 r[7]=2
REG[7] =  i:2
  24 Integer          3    8    0               00 r[8]=3
REG[8] =  i:3
  25 Integer          4    9    0               00 r[9]=4
REG[9] =  i:4
  26 Integer          5   10    0               00 r[10]=5
REG[10] =  i:5
  27 Integer          6   11    0               00 r[11]=6
REG[11] =  i:6
  28 Integer          7   12    0               00 r[12]=7
REG[12] =  i:7
  29 Integer          8   13    0               00 r[13]=8
REG[13] =  i:8
  30 Integer          9   14    0               00 r[14]=9
REG[14] =  i:9
  31 Integer         10   15    0               00 r[15]=10
REG[15] =  i:10
  32 Integer         11   16    0               00 r[16]=11
REG[16] =  i:11
  33 Integer         12   17    0               00 r[17]=12
REG[17] =  i:12
  34 Integer         13   18    0               00 r[18]=13
REG[18] =  i:13
  35 Integer         14   19    0               00 r[19]=14
REG[19] =  i:14
  36 Integer         15   20    0               00 r[20]=15
REG[20] =  i:15
  37 Integer         16   21    0               00 r[21]=16
REG[21] =  i:16
  38 Integer         17   22    0               00 r[22]=17
REG[22] =  i:17
  39 Integer         18   23    0               00 r[23]=18
REG[23] =  i:18
  40 Integer         19   24    0               00 r[24]=19
REG[24] =  i:19
  41 Integer         20   25    0               00 r[25]=20
REG[25] =  i:20
  42 Integer         21   26    0               00 r[26]=21
REG[26] =  i:21
  43 Integer         22   27    0               00 r[27]=22
REG[27] =  i:22
  44 Integer         23   28    0               00 r[28]=23
REG[28] =  i:23
  45 Integer         24   29    0               00 r[29]=24
REG[29] =  i:24
  46 Integer         25   30    0               00 r[30]=25
REG[30] =  i:25
  47 Integer         26   31    0               00 r[31]=26
REG[31] =  i:26
  48 Integer         27   32    0               00 r[32]=27
REG[32] =  i:27
  49 Integer         28   33    0               00 r[33]=28
REG[33] =  i:28
  50 Integer         29   34    0               00 r[34]=29
REG[34] =  i:29
  51 Integer         30   35    0               00 r[35]=30
REG[35] =  i:30
  52 Integer         31   36    0               00 r[36]=31
REG[36] =  i:31
  53 Integer         32   37    0               00 r[37]=32
REG[37] =  i:32
  54 Integer         33   38    0               00 r[38]=33
REG[38] =  i:33
  55 Integer         34   39    0               00 r[39]=34
REG[39] =  i:34
  56 Integer         35   40    0               00 r[40]=35
REG[40] =  i:35
  57 Integer         36   41    0               00 r[41]=36
REG[41] =  i:36
  58 Integer         37   42    0               00 r[42]=37
REG[42] =  i:37
  59 Integer         38   43    0               00 r[43]=38
REG[43] =  i:38
  60 Integer         39   44    0               00 r[44]=39
REG[44] =  i:39
  61 Integer         40   45    0               00 r[45]=40
REG[45] =  i:40
  62 Integer         41   46    0               00 r[46]=41
REG[46] =  i:41
  63 Integer         42   47    0               00 r[47]=42
REG[47] =  i:42
  64 Integer         43   48    0               00 r[48]=43
REG[48] =  i:43
  65 Integer         44   49    0               00 r[49]=44
REG[49] =  i:44
  66 Integer         45   50    0               00 r[50]=45
REG[50] =  i:45
  67 Integer         46   51    0               00 r[51]=46
REG[51] =  i:46
  68 Integer         47   52    0               00 r[52]=47
REG[52] =  i:47
  69 Integer         48   53    0               00 r[53]=48
REG[53] =  i:48
  70 Goto             0    1    0               00 
   1 InitCoroutine    3    7    2               00 
   7 OpenWrite        0    2    0 1             00 root=2 iDb=0; t2
   8 Yield            3   17    0               00 
REG[3] =  i:1
REG[3] =  i:8
   2 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   3 Yield            3    0    0               00 
REG[3] =  i:8
REG[3] =  i:3
   9 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
  10 Copy             2   54    0               00 r[54]=r[2]
REG[54] =  i:1
  11 Function0       -1    5    4 datetime(-1)  32 r[4]=func(r[5..54])
REG[5] =  i:0
REG[6] =  i:1
REG[7] =  i:2
REG[8] =  i:3
REG[9] =  i:4
REG[10] =  i:5
REG[11] =  i:6
REG[12] =  i:7
REG[13] =  i:8
REG[14] =  i:9
REG[15] =  i:10
REG[16] =  i:11
REG[17] =  i:12
REG[18] =  i:13
REG[19] =  i:14
REG[20] =  i:15
REG[21] =  i:16
REG[22] =  i:17
REG[23] =  i:18
REG[24] =  i:19
REG[25] =  i:20
REG[26] =  i:21
REG[27] =  i:22
REG[28] =  i:23
REG[29] =  i:24
REG[30] =  i:25
REG[31] =  i:26
REG[32] =  i:27
REG[33] =  i:28
REG[34] =  i:29
REG[35] =  i:30
REG[36] =  i:31
REG[37] =  i:32
REG[38] =  i:33
REG[39] =  i:34
REG[40] =  i:35
REG[41] =  i:36
REG[42] =  i:37
REG[43] =  i:38
REG[44] =  i:39
REG[45] =  i:40
REG[46] =  i:41
REG[47] =  i:42
REG[48] =  i:43
REG[49] =  i:44
REG[50] =  i:45
REG[51] =  i:46
REG[52] =  i:47
REG[53] =  i:48
REG[54] =  i:1
REG[4] =  NULL
  12 If               4   14    1               00 
REG[4] =  NULL
  14 MakeRecord       2    1    4 D             00 r[4]=mkrec(r[2])
REG[4] =  s2[0209..](8)
  15 Insert           0    4    1 t2            1B intkey=r[1] data=r[4]
REG[4] =  s2[0209..](8)
REG[1] =  i:2
  16 Goto             0    8    0               00 
   8 Yield            3   17    0               00 
REG[3] =  i:3
REG[3] =  i:8
   4 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
   5 Yield            3    0    0               00 
REG[3] =  i:8
REG[3] =  i:5
   9 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
  10 Copy             2   54    0               00 r[54]=r[2]
REG[54] =  i:2
  11 Function        -1    5    4 datetime(-1)  32 r[4]=func(r[5..54])
REG[5] =  i:0
REG[6] =  si:1
REG[7] =  i:2
REG[8] =  i:3
REG[9] =  i:4
REG[10] =  i:5
REG[11] =  i:6
REG[12] =  i:7
REG[13] =  i:8
REG[14] =  i:9
REG[15] =  i:10
REG[16] =  i:11
REG[17] =  i:12
REG[18] =  i:13
REG[19] =  i:14
REG[20] =  i:15
REG[21] =  i:16
REG[22] =  i:17
REG[23] =  i:18
REG[24] =  i:19
REG[25] =  i:20
REG[26] =  i:21
REG[27] =  i:22
REG[28] =  i:23
REG[29] =  i:24
REG[30] =  i:25
REG[31] =  i:26
REG[32] =  i:27
REG[33] =  i:28
REG[34] =  i:29
REG[35] =  i:30
REG[36] =  i:31
REG[37] =  i:32
REG[38] =  i:33
REG[39] =  i:34
REG[40] =  i:35
REG[41] =  i:36
REG[42] =  i:37
REG[43] =  i:38
REG[44] =  i:39
REG[45] =  i:40
REG[46] =  i:41
REG[47] =  i:42
REG[48] =  i:43
REG[49] =  i:44
REG[50] =  i:45
REG[51] =  i:46
REG[52] =  i:47
REG[53] =  i:48
REG[54] =  i:2
REG[4] =  NULL
  12 If               4   14    1               00 
REG[4] =  NULL
  14 MakeRecord       2    1    4 D             00 r[4]=mkrec(r[2])
REG[4] =  s3[020102...](8)
  15 Insert           0    4    1 t2            1B intkey=r[1] data=r[4]
REG[4] =  s3[020102...](8)
REG[1] =  i:3
  16 Goto             0    8    0               00 
   8 Yield            3   17    0               00 
REG[3] =  i:5
REG[3] =  i:8
   6 EndCoroutine     3    0    0               00 
REG[3] =  i:8
  17 Noop             0    0    0               00 
  18 Halt             0    0    0               00 
SQL: [;WITH RECURSIVE b(a) AS (VALUES(1) UNION ALL SELECT a+1 FROM b WHERE a<20)
    INSERT INTO t1(a,a) SELECT a, randomblob(1300) FROM b;]
VDBE Trace:
   0 Init             0   43    0               00 Start at 43
  43 Transaction      0    1    4 1             01 usesStmtJournal=1
  44 TableLock        0    3    1 t1            00 iDb=0 root=3 write=1
  45 Integer         20   10    0               00 r[10]=20
REG[10] =  i:20
  46 Integer          1   12    0               00 r[12]=1
REG[12] =  i:1
  47 Integer       1300   15    0               00 r[15]=1300
REG[15] =  i:1300
  48 Goto             0    1    0               00 
   1 InitCoroutine    3   32    2               00 
  32 OpenWrite        3    3    0 1             00 root=3 iDb=0; t1
  33 Yield            3   41    0               00 
REG[3] =  i:1
REG[3] =  i:33
   2 InitCoroutine    4   24    3               00 b
  24 Explain          0    0    0 SCAN SUBQUERY 1 00 
  25 InitCoroutine    4    0    3               00 
  26 Yield            4   31    0               00 next row of "b"
REG[4] =  i:2
REG[4] =  i:26
   3 OpenPseudo       1    5    1               00 1 columns in r[5]
   4 OpenEphemeral    2    1    0               00 nColumn=1; Queue table
   5 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
   6 MakeRecord       6    1    7               00 r[7]=mkrec(r[6])
REG[7] =  s2[0209..](8)
   7 NewRowid         2    8    0               00 r[8]=rowid
REG[8] =  i:1
   8 Insert           2    7    8               08 intkey=r[8] data=r[7]
REG[7] =  s2[0209..](8)
REG[8] =  i:1
   9 Rewind           2   23    0               00 
  10 NullRow          1    0    0               00 
  11 RowData          2    5    0               00 r[5]=data
REG[5] =  s2[0209..](8)
  12 Delete           2    0    0               00 
  13 Column           1    0    9               00 r[9]=
REG[9] =  i:1
  14 Yield            4    0    0               00 
REG[4] =  i:26
REG[4] =  i:14
  27 Copy             9   13    0               00 r[13]=r[9]; b.a
REG[13] =  i:1
  28 Function0        1   15   14 randomblob(1) 01 r[14]=func(r[15])
REG[15] =  i:1300
REG[14] =  z1300[5BAC0E2FCEAD549BD471DA18229EB667[../..T..q.."..g](8)
  29 Yield            3    0    0               00 
REG[3] =  i:33
REG[3] =  i:29
  34 NewRowid         3    1    0               00 r[1]=rowid
REG[1] =  i:1
  35 SCopy           13    2    0               00 r[2]=r[13]
REG[2] =  i:1
  36 Eq               2   38    2 (BINARY)      52 if r[2]==r[2] goto 38

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f191f4e8859 in __GI_abort () at abort.c:79
#2  0x00007f191f4e8729 in __assert_fail_base (fmt=0x7f191f67e588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x20a915 "!(fg&(MEM_Str|MEM_Blob))", file=0x222c23 "sqlite3.c", line=68526, function=<optimized out>)
    at assert.c:92
#3  0x00007f191f4f9fd6 in __GI___assert_fail (assertion=0x20a915 "!(fg&(MEM_Str|MEM_Blob))", file=0x222c23 "sqlite3.c", line=68526, function=0x21067c "int sqlite3VdbeMemStringify(Mem *, u8, u8)") at assert.c:101
#4  0x000000000027a9de in sqlite3VdbeMemStringify (pMem=0x1aa69a0, enc=1 '\001', bForce=1 '\001') at sqlite3.c:68526
#5  0x00000000003c7fc0 in sqlite3VdbeExec (p=<optimized out>) at sqlite3.c:78710
#6  0x000000000028b140 in sqlite3_step (pStmt=<optimized out>) at sqlite3.c:75131
#7  0x000000000024b5e9 in main (argc=1, argv=0x7ffc62048618) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 32854] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
