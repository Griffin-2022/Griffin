GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000200,sig:06,src:020626+017806,time:5235090,execs:971869,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_listing=on;]
VDBE Program Listing:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;CREATE TABLE t2(x TEXT, CHECK(x<>+x));]
VDBE Program Listing:
   0 Init             0   30    0               00 Start at 30
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
  16 NotExists        1   18    1               00 intkey=r[1]; pk
  17 Rowid            1    5    0               00 r[5]=rowid
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
  19 String8          0    6    0 table         00 r[6]='table'
  20 String8          0    7    0 t2            00 r[7]='t2'
  21 String8          0    8    0 t2            00 r[8]='t2'
  22 Copy             2    9    0               00 r[9]=r[2]
  23 String8          0   10    0 CREATE TABLE t2(x TEXT, CHECK(x<>+x)) 00 r[10]='CREATE TABLE t2(x TEXT, CHECK(x<>+x))'
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
  26 Close            1    0    0               00 
  27 SetCookie        0    1    1               00 
  28 ParseSchema      0    0    0 tbl_name='t2' AND type!='trigger' 00 
  29 Halt             0    0    0               00 
  30 Transaction      0    1    0 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   16    0               00 Start at 16
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
   7 Column           0    0    3               00 r[3]=sqlite_master.type
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
   9 Column           0    1    5               00 r[5]=sqlite_master.name
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
  12 ResultRow        5    3    0               00 output=r[5..7]
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  16 Transaction      0    0    1 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t2            00 r[2]='t2'
  19 String8          0    4    0 trigger       00 r[4]='trigger'
  20 Goto             0    1    0               00 
SQL: [;CREATE TABLE t1(a TEXT, CHECK(a BETWEEN 0 AND +a));]
VDBE Program Listing:
   0 Init             0   30    0               00 Start at 30
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
  16 NotExists        1   18    1               00 intkey=r[1]; pk
  17 Rowid            1    5    0               00 r[5]=rowid
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
  19 String8          0    6    0 table         00 r[6]='table'
  20 String8          0    7    0 t1            00 r[7]='t1'
  21 String8          0    8    0 t1            00 r[8]='t1'
  22 Copy             2    9    0               00 r[9]=r[2]
  23 String8          0   10    0 CREATE TABLE t1(a TEXT, CHECK(a BETWEEN 0 AND +a)) 00 r[10]='CREATE TABLE t1(a TEXT, CHECK(a BETWEEN 0 AND +a))'
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
  26 Close            1    0    0               00 
  27 SetCookie        0    1    2               00 
  28 ParseSchema      0    0    0 tbl_name='t1' AND type!='trigger' 00 
  29 Halt             0    0    0               00 
  30 Transaction      0    1    1 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   16    0               00 Start at 16
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
   7 Column           0    0    3               00 r[3]=sqlite_master.type
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
   9 Column           0    1    5               00 r[5]=sqlite_master.name
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
  12 ResultRow        5    3    0               00 output=r[5..7]
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  16 Transaction      0    0    2 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
  19 String8          0    4    0 trigger       00 r[4]='trigger'
  20 Goto             0    1    0               00 
SQL: [CREATE INDEX b ON t2(x)
;]
VDBE Program Listing:
   0 Init             0   34    0               00 Start at 34
   1 Noop             0   33    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
   5 String8          0    3    0 index         00 r[3]='index'
   6 String8          0    4    0 b             00 r[4]='b'
   7 String8          0    5    0 t2            00 r[5]='t2'
   8 Copy             1    6    0               00 r[6]=r[1]
   9 String8          0    7    0 CREATE INDEX b ON t2(x)
 00 r[7]='CREATE INDEX b ON t2(x)
'
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    1 k(2,,)        00 
  14 OpenRead         1    2    0 1             00 root=2 iDb=0; t2
  15 Rewind           1   21    0               00 
  16 Column           1    0   10               00 r[10]=t2.x
  17 Rowid            1   11    0               00 r[11]=rowid
  18 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
  19 SorterInsert     3    9    0               00 
  20 Next             1   16    0               00 
  21 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  22 SorterSort       3   27    0               00 
  23 SorterData       3    9    2               00 r[9]=data
  24 Last             2    0   -1               00 
  25 IdxInsert        2    9    0               10 key=r[9]
  26 SorterNext       3   23    0               00 
  27 Close            1    0    0               00 
  28 Close            2    0    0               00 
  29 Close            3    0    0               00 
  30 SetCookie        0    1    3               00 
  31 ParseSchema      0    0    0 name='b' AND type='index' 00 
  32 Expire           0    0    0               00 
  33 Halt             0    0    0               00 
  34 Transaction      0    1    2 0             01 usesStmtJournal=0
  35 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  36 TableLock        0    2    1 t2            00 iDb=0 root=2 write=1
  37 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   16    0               00 Start at 16
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
   7 Column           0    0    3               00 r[3]=sqlite_master.type
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
   9 Copy             1    5    0               00 r[5]=r[1]
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
  12 ResultRow        5    3    0               00 output=r[5..7]
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  16 Transaction      0    0    3 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 b             00 r[2]='b'
  19 String8          0    4    0 index         00 r[4]='index'
  20 Goto             0    1    0               00 
SQL: [;SELECT quote(x) FROM t2 ORDER BY rowid;]
VDBE Program Listing:
   0 Init             0   11    0               00 Start at 11
   1 Noop             1    3    0               00 
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t2
   3 Explain          0    0    0 SCAN TABLE t2 00 
   4 Rewind           0    9    0               00 
   5 Column           0    0    2               00 r[2]=t2.x
   6 Function0        0    2    1 quote(1)      01 r[1]=func(r[2])
   7 ResultRow        1    1    0               00 output=r[1]
   8 Next             0    5    0               01 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
  11 Transaction      0    0    3 0             01 usesStmtJournal=0
  12 TableLock        0    2    0 t2            00 iDb=0 root=2 write=0
  13 Goto             0    1    0               00 
SQL: [;
;DROP TABLE t1;]
VDBE Program Listing:
   0 Init             0   41    0               00 Start at 41
   1 Null             0    1    0               00 r[1]=NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
   7 Column           0    0    4               00 r[4]=sqlite_master.type
   8 Eq               5   12    4 (BINARY)      52 if r[5]==r[4] goto 12
   9 Rowid            0    6    0               00 r[6]=rowid
  10 Once             0   11    0               00 
  11 Delete           0    0    0 sqlite_master 02 
  12 Next             0    5    0               01 
  13 Close            0    0    0               00 
  14 Destroy          3    4    0               00 
  15 Null             0    7    8               00 r[7..8]=NULL
  16 IfNot            4   25    1               00 
  17 OpenRead         1    1    0 4             00 root=1 iDb=0; sqlite_master
  18 Explain          0    0    0 SCAN TABLE sqlite_master 00 
  19 Rewind           1   25    0               00 
  20 Column           1    3    2               00 r[2]=sqlite_master.rootpage
  21 Ne               4   24    2 (BINARY)      54 if r[4]!=r[2] goto 24
  22 Rowid            1    8    0               00 r[8]=rowid
  23 RowSetAdd        7    8    0               00 rowset(7)=r[8]
  24 Next             1   20    0               01 
  25 Close            1    0    0               00 
  26 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  27 RowSetRead       7   37    8               00 r[8]=rowset(7)
  28 NotExists        1   27    8               00 intkey=r[8]
  29 Column           1    0    9               00 r[9]=sqlite_master.type
  30 Column           1    1   10               00 r[10]=sqlite_master.name
  31 Column           1    2   11               00 r[11]=sqlite_master.tbl_name
  32 Integer          3   12    0               00 r[12]=3
  33 Column           1    4   13               00 r[13]=sqlite_master.sql
  34 MakeRecord       9    5    2 BBBDB         00 r[2]=mkrec(r[9..13])
  35 Insert           1    2    8               00 intkey=r[8] data=r[2]
  36 Goto             0   27    0               00 
  37 Close            1    0    0               00 
  38 DropTable        0    0    0 t1            00 
  39 SetCookie        0    1    4               00 
  40 Halt             0    0    0               00 
  41 Transaction      0    1    3 0             01 usesStmtJournal=1
  42 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  43 String8          0    3    0 t1            00 r[3]='t1'
  44 String8          0    5    0 trigger       00 r[5]='trigger'
  45 Goto             0    1    0               00 
SQL: [;CREATE TABLE c(t1w TEXT, CHECK(t1w NOT BETWEEN 0 AND +t1w));]
VDBE Program Listing:
   0 Init             0   30    0               00 Start at 30
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
  16 NotExists        1   18    1               00 intkey=r[1]; pk
  17 Rowid            1    5    0               00 r[5]=rowid
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
  19 String8          0    6    0 table         00 r[6]='table'
  20 String8          0    7    0 c             00 r[7]='c'
  21 String8          0    8    0 c             00 r[8]='c'
  22 Copy             2    9    0               00 r[9]=r[2]
  23 String8          0   10    0 CREATE TABLE c(t1w TEXT, CHECK(t1w NOT BETWEEN 0 AND +t1w)) 00 r[10]='CREATE TABLE c(t1w TEXT, CHECK(t1w NOT BETWEEN 0 AND +t1w))'
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
  26 Close            1    0    0               00 
  27 SetCookie        0    1    5               00 
  28 ParseSchema      0    0    0 tbl_name='c' AND type!='trigger' 00 
  29 Halt             0    0    0               00 
  30 Transaction      0    1    4 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   16    0               00 Start at 16
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
   7 Column           0    0    3               00 r[3]=sqlite_master.type
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
   9 Column           0    1    5               00 r[5]=sqlite_master.name
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
  12 ResultRow        5    3    0               00 output=r[5..7]
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  16 Transaction      0    0    5 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 c             00 r[2]='c'
  19 String8          0    4    0 trigger       00 r[4]='trigger'
  20 Goto             0    1    0               00 
SQL: [;INSERT INTO c(t1w) VALUES(NULL);]
VDBE Program Listing:
   0 Init             0   11    0               00 Start at 11
   1 OpenWrite        0    3    0 1             00 root=3 iDb=0; c
   2 NewRowid         0    1    0               00 r[1]=rowid
   3 Null             0    2    0               00 r[2]=NULL
   4 Lt               4    7    2 (BINARY)      52 if r[4]<r[2] goto 7
   5 Gt               2    7    2 (BINARY)      52 if r[2]>r[2] goto 7
   6 Halt           275    2    0 c             03 
   7 MakeRecord       2    1    3 B             00 r[3]=mkrec(r[2])
   8 Insert           0    3    1 c             1B intkey=r[1] data=r[3]
   9 Noop             0    0    0               00 
  10 Halt             0    0    0               00 
  11 Transaction      0    1    5 0             01 usesStmtJournal=0
  12 TableLock        0    3    1 c             00 iDb=0 root=3 write=1
  13 Integer          0    4    0               00 r[4]=0
  14 Goto             0    1    0               00 
SQL: [;SELECT quote(x) FROM t2 ORDER BY rowid;]
VDBE Program Listing:
   0 Init             0   11    0               00 Start at 11
   1 Noop             1    3    0               00 
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t2
   3 Explain          0    0    0 SCAN TABLE t2 00 
   4 Rewind           0    9    0               00 
   5 Column           0    0    2               00 r[2]=t2.x
   6 Function0        0    2    1 quote(1)      01 r[1]=func(r[2])
   7 ResultRow        1    1    0               00 output=r[1]
   8 Next             0    5    0               01 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
  11 Transaction      0    0    5 0             01 usesStmtJournal=0
  12 TableLock        0    2    0 t2            00 iDb=0 root=2 write=0
  13 Goto             0    1    0               00 
SQL: [;INSERT INTO t2(x) VALUES(NULL),(5);]
VDBE Program Listing:
   0 Init             0   24    0               00 Start at 24
   1 InitCoroutine    3    7    2               00 
   2 Null             0    2    0               00 r[2]=NULL
   3 Yield            3    0    0               00 
   4 Integer          5    2    0               00 r[2]=5
   5 Yield            3    0    0               00 
   6 EndCoroutine     3    0    0               00 
   7 OpenWrite        0    2    0 1             00 root=2 iDb=0; t2
   8 OpenWrite        1    4    0 k(2,,)        00 root=4 iDb=0; b
   9 Yield            3   21    0               00 
  10 NewRowid         0    1    0               00 r[1]=rowid
  11 Ne               2   13    2 (BINARY)      52 if r[2]!=r[2] goto 13
  12 Halt           275    2    0 t2            03 
  13 Affinity         2    1    0 B             00 affinity(r[2])
  14 SCopy            2    6    0               00 r[6]=r[2]; x
  15 IntCopy          1    7    0               00 r[7]=r[1]; rowid
  16 MakeRecord       6    2    4               00 r[4]=mkrec(r[6..7]); for b
  17 IdxInsert        1    4    0               10 key=r[4]
  18 MakeRecord       2    1    5               00 r[5]=mkrec(r[2])
  19 Insert           0    5    1 t2            1B intkey=r[1] data=r[5]
  20 Goto             0    9    0               00 
  21 Close            0    0    0               00 
  22 Noop             1    0    0               00 
  23 Halt             0    0    0               00 
  24 Transaction      0    1    5 0             01 usesStmtJournal=1
  25 TableLock        0    2    1 t2            00 iDb=0 root=2 write=1
  26 Goto             0    1    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007ff87f22b859 in __GI_abort () at abort.c:79
#2  0x00007ff87f22b729 in __assert_fail_base (fmt=0x7ff87f3c1588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x20a915 "!(fg&(MEM_Str|MEM_Blob))", file=0x222c23 "sqlite3.c", line=68526, function=<optimized out>)
    at assert.c:92
#3  0x00007ff87f23cfd6 in __GI___assert_fail (assertion=0x20a915 "!(fg&(MEM_Str|MEM_Blob))", file=0x222c23 "sqlite3.c", line=68526, function=0x21067c "int sqlite3VdbeMemStringify(Mem *, u8, u8)") at assert.c:101
#4  0x000000000027a9de in sqlite3VdbeMemStringify (pMem=0x2362000, enc=1 '\001', bForce=1 '\001') at sqlite3.c:68526
#5  0x00000000003c7fc0 in sqlite3VdbeExec (p=<optimized out>) at sqlite3.c:78710
#6  0x000000000028b140 in sqlite3_step (pStmt=<optimized out>) at sqlite3.c:75131
#7  0x000000000024b5e9 in main (argc=1, argv=0x7ffdc8ee8e28) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 30033] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
