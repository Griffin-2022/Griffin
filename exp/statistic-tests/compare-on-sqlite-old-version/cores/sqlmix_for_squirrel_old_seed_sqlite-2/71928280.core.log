GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000038,sig:06,src:015583+016659,time:13825904,execs:2038122,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [CREATE UNIQUE INDEX b ON t1(a);]
VDBE Trace:
   0 Init             0   37    0               00 Start at 37
  37 Transaction      0    1    1 0             01 usesStmtJournal=1
  38 Goto             0    1    0               00 
   1 Noop             0   36    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:3
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:2
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 b             00 r[4]='b'
REG[4] =   t1[b](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:3
   9 String8          0    7    0 CREATE UNIQUE INDEX b ON t1(a) 00 r[7]='CREATE UNIQUE INDEX b ON t1(a)'
REG[7] =   t30[CREATE UNIQUE INDEX b ON ](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[3] =   t5[index](8)
REG[4] =   t1[b](8)
REG[5] =   t2[t1](8)
REG[6] =  i:3
REG[7] =   t30[CREATE UNIQUE INDEX b ON ](8)
REG[8] =  sx45[06170F110149696E6465786274310343524541544520554E49|.....Iindexbt1.CREATE UNI]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  sx45[06170F110149696E6465786274310343524541544520554E49|.....Iindexbt1.CREATE UNI]
REG[2] =  i:2
  12 SorterOpen       3    0    1 k(2,,)        00 
  13 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  14 Rewind           1   20    0               00 
  20 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  21 SorterSort       3   30    0               00 
  30 Close            1    0    0               00 
  31 Close            2    0    0               00 
  32 Close            3    0    0               00 
  33 SetCookie        0    1    2               00 
  34 ParseSchema      0    0    0 name='b' AND type='index' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    2 0             00 usesStmtJournal=0
  18 String8          0    2    0 b             00 r[2]='b'
REG[2] =   t1[b](8)
  19 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[b](8)
REG[1] =   s2[t1](8)
  15 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[b](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[b](8)
REG[1] =   s1[b](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   15    1 (BINARY)      52 if r[1]!=r[3] goto 15
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[index](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[b](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s2[t1](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:3
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s30[CREATE UNIQUE INDEX b ON ](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[index](8)
REG[5] =   s1[b](8)
REG[6] =   s2[t1](8)
REG[7] =  i:3
REG[8] =   s30[CREATE UNIQUE INDEX b ON ](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  35 Expire           0    1    0               00 
  36 Halt             0    0    0               00 
SQL: [COMMIT;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    0    0               00 
SQL: [;
PRAGMA page_size = 1024;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [;
SELECT*FROM"main".sqlite_master WHERE tbl_name='sqlite_sequence' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    2 0             01 usesStmtJournal=0
  18 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
SQL: [PRAGMA journal_mode = delete;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 JournalMode      0    1    0               00 
REG[1] =   t6[memory](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t6[memory](8)
   3 Halt             0    0    0               00 
SQL: [PRAGMA locking_mode = exclusive;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 String8          0    1    0 exclusive     00 r[1]='exclusive'
REG[1] =   t9[exclusive](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t9[exclusive](8)
   3 Halt             0    0    0               00 
SQL: [;
SELECT*FROM"main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    2 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[t1](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:2
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s21[CREATE TABLE t1(x, a)](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s2[t1](8)
REG[3] =   s2[t1](8)
REG[4] =  i:2
REG[5] =   s21[CREATE TABLE t1(x, a)](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s1[b](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:3
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s30[CREATE UNIQUE INDEX b ON ](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[index](8)
REG[2] =   s1[b](8)
REG[3] =   s2[t1](8)
REG[4] =  i:3
REG[5] =   s30[CREATE UNIQUE INDEX b ON ](8)
  11 Next             0    5    0               01 
  12 Halt             0    0    0               00 
SQL: [PRAGMA journal_mode = WAL;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 JournalMode      0    1    5               00 
REG[1] =   t6[memory](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t6[memory](8)
   3 Halt             0    0    0               00 
SQL: [PRAGMA auto_vacuum=OFF;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [;
SELECT*FROM"main".sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    2 0             01 usesStmtJournal=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s2[t1](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:2
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s21[CREATE TABLE t1(x, a)](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s2[t1](8)
REG[6] =   s2[t1](8)
REG[7] =  i:2
REG[8] =   s21[CREATE TABLE t1(x, a)](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[index](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[b](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s2[t1](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:3
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s30[CREATE UNIQUE INDEX b ON ](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[index](8)
REG[5] =   s1[b](8)
REG[6] =   s2[t1](8)
REG[7] =  i:3
REG[8] =   s30[CREATE UNIQUE INDEX b ON ](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
SQL: [PRAGMA wal_checkpoint;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Checkpoint      10    0    1               00 
   2 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =  i:0
REG[2] =  i:-1
REG[3] =  i:-1
   3 Halt             0    0    0               00 
SQL: [;
DETACH db2;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
   3 String8          0    3    0 db2           00 r[3]='db2'
REG[3] =   t3[db2](8)
   4 Function0        0    3    4 sqlite_detach(1) 01 r[4]=func(r[3])
REG[3] =   t3[db2](8)
SQL: [;
SELECT count(*) FROM sqlite_temp_master;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      1    0    0 0             01 usesStmtJournal=0
   8 Goto             0    1    0               00 
   1 OpenRead         1    1    1 1             00 root=1 iDb=1
   2 Count            1    1    0               00 r[1]=count()
REG[1] =  i:0
   3 Close            1    0    0               00 
   4 Copy             1    2    0               00 r[2]=r[1]
REG[2] =  i:0
   5 ResultRow        2    1    0               00 output=r[2]
REG[2] =  i:0
   6 Halt             0    0    0               00 
SQL: [SELECT rowid, * FROM t1 WHERE rowid = (43-1);]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    2 0             01 usesStmtJournal=0
  11 Integer         43    2    0               00 r[2]=43
REG[2] =  i:43
  12 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  13 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SEARCH TABLE t1 USING INTEGER PRIMARY KEY (rowid=?) 00 
   3 Subtract         3    2    1               00 r[1]=r[2]-r[3]
REG[3] =  i:1
REG[2] =  i:43
REG[1] =  i:42
   4 SeekRowid        0    9    1               00 intkey=r[1]
REG[1] =  i:42
   9 Halt             0    0    0               00 
SQL: [;
INSERT INTO t1 VALUES('3.14', '2.72');]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    1    2 0             01 usesStmtJournal=0
  18 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 OpenWrite        1    3    0 k(2,,)        00 root=3 iDb=0; b
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   4 String8          0    2    0 3.14          00 r[2]='3.14'
REG[2] =   t4[3.14](8)
   5 String8          0    3    0 2.72          00 r[3]='2.72'
REG[3] =   t4[2.72](8)
   6 Noop             0    0    0               00 uniqueness check for b
   7 SCopy            3    5    0               00 r[5]=r[3]; a
REG[5] =   t4[2.72](8)
   8 IntCopy          1    6    0               00 r[6]=r[1]; rowid
REG[6] =  i:1
   9 MakeRecord       5    2    4               00 r[4]=mkrec(r[5..6]); for b
REG[4] =  sx7[031509322E3732|...2.72]
  10 Abortable        0    0    0               00 
  11 NoConflict       1   13    5 1             00 key=r[5]
REG[5] =   t4[2.72](8)
  13 MakeRecord       2    2    7               00 r[7]=mkrec(r[2..3])
REG[7] =  sx11[031515332E3134322E3732|...3.142.72]
  14 IdxInsert        1    4    5 2             10 key=r[4]
REG[4] =  sx7[031509322E3732|...2.72]
  15 Insert           0    7    1 t1            39 intkey=r[1] data=r[7]
REG[7] =  sx11[031515332E3134322E3732|...3.142.72]
REG[1] =  i:1
  16 Halt             0    0    0               00 
SQL: [;
SELECT rowid, a FROM t1;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    2 0             01 usesStmtJournal=0
  10 Goto             0    1    0               00 
   1 OpenRead         1    3    0 k(2,,)        00 root=3 iDb=0; b
   2 Explain          2    0    0 SCAN TABLE t1 USING COVERING INDEX b 00 
   3 Rewind           1    8    1 0             00 
   4 IdxRowid         1    1    0               00 r[1]=rowid
REG[1] =  i:1
   5 Column           1    0    2               00 r[2]=t1.a
REG[2] =   s4[2.72](8)
   6 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =  i:1
REG[2] =   s4[2.72](8)
   7 Next             1    4    0               01 
   8 Halt             0    0    0               00 
SQL: [SELECT*FROM"main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    2 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[t1](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:2
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s21[CREATE TABLE t1(x, a)](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s2[t1](8)
REG[3] =   s2[t1](8)
REG[4] =  i:2
REG[5] =   s21[CREATE TABLE t1(x, a)](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s1[b](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:3
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s30[CREATE UNIQUE INDEX b ON ](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[index](8)
REG[2] =   s1[b](8)
REG[3] =   s2[t1](8)
REG[4] =  i:3
REG[5] =   s30[CREATE UNIQUE INDEX b ON ](8)
  11 Next             0    5    0               01 
  12 Halt             0    0    0               00 
SQL: [SELECT*FROM"main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    2 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[t1](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:2
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s21[CREATE TABLE t1(x, a)](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s2[t1](8)
REG[3] =   s2[t1](8)
REG[4] =  i:2
REG[5] =   s21[CREATE TABLE t1(x, a)](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s1[b](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:3
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s30[CREATE UNIQUE INDEX b ON ](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[index](8)
REG[2] =   s1[b](8)
REG[3] =   s2[t1](8)
REG[4] =  i:3
REG[5] =   s30[CREATE UNIQUE INDEX b ON ](8)
  11 Next             0    5    0               01 
  12 Halt             0    0    0               00 
SQL: [SELECT*FROM"main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    2 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[t1](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:2
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s21[CREATE TABLE t1(x, a)](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s2[t1](8)
REG[3] =   s2[t1](8)
REG[4] =  i:2
REG[5] =   s21[CREATE TABLE t1(x, a)](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s1[b](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:3
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s30[CREATE UNIQUE INDEX b ON ](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[index](8)
REG[2] =   s1[b](8)
REG[3] =   s2[t1](8)
REG[4] =  i:3
REG[5] =   s30[CREATE UNIQUE INDEX b ON ](8)
  11 Next             0    5    0               01 
  12 Halt             0    0    0               00 
SQL: [PRAGMA temp_store_directory='';]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    2 1             00 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[t1](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:2
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s21[CREATE TABLE t1(x, a)](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s2[t1](8)
REG[3] =   s2[t1](8)
REG[4] =  i:2
REG[5] =   s21[CREATE TABLE t1(x, a)](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s1[b](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:3
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s30[CREATE UNIQUE INDEX b ON ](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[index](8)
REG[2] =   s1[b](8)
REG[3] =   s2[t1](8)
REG[4] =  i:3
REG[5] =   s30[CREATE UNIQUE INDEX b ON ](8)
  11 Next             0    5    0               01 
  12 Halt             0    0    0               00 
SQL: [;
CREATE TABLE sqlsim0(ab INTEGER PRIMARY KEY, de TEXT);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    2 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  tx6[060000000000|......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  tx6[060000000000|......]
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:3
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:3
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 sqlsim0       00 r[7]='sqlsim0'
REG[7] =   t7[sqlsim0](8)
  20 String8          0    8    0 sqlsim0       00 r[8]='sqlsim0'
REG[8] =   t7[sqlsim0](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  22 String8          0   10    0 CREATE TABLE sqlsim0(ab INTEGER PRIMARY KEY, de TEXT) 00 r[10]='CREATE TABLE sqlsim0(ab INTEGER PRIMARY KEY, de TEXT)'
REG[10] =   t53[CREATE TABLE sqlsim0(ab I](8)
  23 MakeRecord       6    5    4 BBBDB         00 r[4]=mkrec(r[6..10])
REG[6] =   t5[table](8)
REG[7] =   t7[sqlsim0](8)
REG[8] =   t7[sqlsim0](8)
REG[9] =  i:4
REG[10] =   t53[CREATE TABLE sqlsim0(ab I](8)
REG[4] =  sx79[06171B1B01777461626C6573716C73696D3073716C73696D30|.....wtablesqlsim0sqlsim0]
  24 Insert           1    4    5               00 intkey=r[5] data=r[4]
REG[4] =  sx79[06171B1B01777461626C6573716C73696D3073716C73696D30|.....wtablesqlsim0sqlsim0]
REG[5] =  i:3
  25 SetCookie        0    1    3               00 
  26 ParseSchema      0    0    0 tbl_name='sqlsim0' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    3 1             00 usesStmtJournal=0
  18 String8          0    2    0 sqlsim0       00 r[2]='sqlsim0'
REG[2] =   t7[sqlsim0](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[sqlsim0](8)
REG[1] =   s2[t1](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[sqlsim0](8)
REG[1] =   s2[t1](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[sqlsim0](8)
REG[1] =   s7[sqlsim0](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s7[sqlsim0](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s7[sqlsim0](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:4
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s53[CREATE TABLE sqlsim0(ab I](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s7[sqlsim0](8)
REG[6] =   s7[sqlsim0](8)
REG[7] =  i:4
REG[8] =   s53[CREATE TABLE sqlsim0(ab I](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [PRAGMA page_size = 1024;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [INSERT INTO t1 DEFAULT VALUES ;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    1    3 1             01 usesStmtJournal=0
  16 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  17 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  18 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 OpenWrite        1    3    0 k(2,,)        00 root=3 iDb=0; b
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   4 Noop             0    0    0               00 uniqueness check for b
   5 SCopy            3    5    0               00 r[5]=r[3]; a
REG[5] =  NULL
   6 IntCopy          1    6    0               00 r[6]=r[1]; rowid
REG[6] =  i:2
   7 MakeRecord       5    2    4               00 r[4]=mkrec(r[5..6]); for b
REG[4] =  sx4[03000102|....]
   8 Abortable        0    0    0               00 
   9 NoConflict       1   11    5 1             00 key=r[5]
REG[5] =  NULL
  11 MakeRecord       2    2    7               00 r[7]=mkrec(r[2..3])
REG[7] =  sx3[030000|...]
  12 IdxInsert        1    4    5 2             10 key=r[4]
REG[4] =  sx4[03000102|....]
  13 Insert           0    7    1 t1            39 intkey=r[1] data=r[7]
REG[7] =  sx3[030000|...]
REG[1] =  i:2
  14 Halt             0    0    0               00 
SQL: [ATTACH null AS null;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =  NULL
REG[2] =  NULL
REG[3] =  NULL
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      2    0    0 0             00 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
  12 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [PRAGMA auto_vacuum = off;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [INSERT INTO sqlsim0 DEFAULT VALUES ;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    1    3 1             01 usesStmtJournal=0
   8 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   9 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 2             00 root=4 iDb=0; sqlsim0
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 SoftNull         2    0    0               00 r[2]=NULL
   4 MakeRecord       2    2    4 DB            00 r[4]=mkrec(r[2..3])
REG[2] =  NULL
REG[3] =  NULL
REG[4] =  sx3[030000|...]
   5 Insert           0    4    1 sqlsim0       39 intkey=r[1] data=r[4]
REG[4] =  sx3[030000|...]
REG[1] =  i:1
   6 Halt             0    0    0               00 
SQL: [SELECT*FROM"main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    3 1             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[t1](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:2
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s21[CREATE TABLE t1(x, a)](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s2[t1](8)
REG[3] =   s2[t1](8)
REG[4] =  i:2
REG[5] =   s21[CREATE TABLE t1(x, a)](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s1[b](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:3
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s30[CREATE UNIQUE INDEX b ON ](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[index](8)
REG[2] =   s1[b](8)
REG[3] =   s2[t1](8)
REG[4] =  i:3
REG[5] =   s30[CREATE UNIQUE INDEX b ON ](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s7[sqlsim0](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s7[sqlsim0](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:4
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s53[CREATE TABLE sqlsim0(ab I](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s7[sqlsim0](8)
REG[3] =   s7[sqlsim0](8)
REG[4] =  i:4
REG[5] =   s53[CREATE TABLE sqlsim0(ab I](8)
  11 Next             0    5    0               01 
  12 Halt             0    0    0               00 
SQL: [SELECT*FROM"main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    3 1             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[t1](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:2
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s21[CREATE TABLE t1(x, a)](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s2[t1](8)
REG[3] =   s2[t1](8)
REG[4] =  i:2
REG[5] =   s21[CREATE TABLE t1(x, a)](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s1[b](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:3
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s30[CREATE UNIQUE INDEX b ON ](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[index](8)
REG[2] =   s1[b](8)
REG[3] =   s2[t1](8)
REG[4] =  i:3
REG[5] =   s30[CREATE UNIQUE INDEX b ON ](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s7[sqlsim0](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s7[sqlsim0](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:4
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s53[CREATE TABLE sqlsim0(ab I](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s7[sqlsim0](8)
REG[3] =   s7[sqlsim0](8)
REG[4] =  i:4
REG[5] =   s53[CREATE TABLE sqlsim0(ab I](8)
  11 Next             0    5    0               01 
  12 Halt             0    0    0               00 
SQL: [;
SELECT*FROM"main".sqlite_master WHERE tbl_name='sqlsim0' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    3 1             01 usesStmtJournal=0
  18 String8          0    2    0 sqlsim0       00 r[2]='sqlsim0'
REG[2] =   t7[sqlsim0](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[sqlsim0](8)
REG[1] =   s2[t1](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[sqlsim0](8)
REG[1] =   s2[t1](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[sqlsim0](8)
REG[1] =   s7[sqlsim0](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s7[sqlsim0](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s7[sqlsim0](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:4
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s53[CREATE TABLE sqlsim0(ab I](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s7[sqlsim0](8)
REG[6] =   s7[sqlsim0](8)
REG[7] =  i:4
REG[8] =   s53[CREATE TABLE sqlsim0(ab I](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
SQL: [;
INSERT INTO sqlsim0 VALUES(3, 4);]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    1    3 1             01 usesStmtJournal=0
  16 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 2             00 root=4 iDb=0; sqlsim0
   2 Integer          3    1    0               00 r[1]=3
REG[1] =  i:3
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  i:3
   5 MustBeInt        1    0    0               00 
REG[1] =  i:3
   6 SoftNull         2    0    0               00 r[2]=NULL
   7 Integer          4    3    0               00 r[3]=4
REG[3] =  i:4
   8 Noop             0    0    0               00 uniqueness check for ROWID
   9 Abortable        0    0    0               00 
  10 NotExists        0   12    1               00 intkey=r[1]
REG[1] =  i:3
  12 MakeRecord       2    2    4 DB            00 r[4]=mkrec(r[2..3])
REG[2] =  NULL
REG[3] =   s1[4](8)
REG[4] =  sx4[03000F34|...4]
  13 Insert           0    4    1 sqlsim0       31 intkey=r[1] data=r[4]
REG[4] =  sx4[03000F34|...4]
REG[1] =  i:3
  14 Halt             0    0    0               00 
SQL: [PRAGMA wal_autocheckpoint = 1000 ;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Int64            0    1    0 1000          00 r[1]=1000
REG[1] =  i:1000
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1000
   3 Halt             0    0    0               00 
SQL: [;
CREATE TABLE d(e);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    3 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  tx6[060000000000|......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  tx6[060000000000|......]
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:4
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:4
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 d             00 r[7]='d'
REG[7] =   t1[d](8)
  20 String8          0    8    0 d             00 r[8]='d'
REG[8] =   t1[d](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  22 String8          0   10    0 CREATE TABLE d(e) 00 r[10]='CREATE TABLE d(e)'
REG[10] =   t17[CREATE TABLE d(e)](8)
  23 MakeRecord       6    5    4 BBBDB         00 r[4]=mkrec(r[6..10])
REG[6] =   t5[table](8)
REG[7] =   t1[d](8)
REG[8] =   t1[d](8)
REG[9] =  i:5
REG[10] =   t17[CREATE TABLE d(e)](8)
REG[4] =  sx31[06170F0F012F7461626C65646405435245415445205441424C|...../tabledd.CREATE TABL]
  24 Insert           1    4    5               00 intkey=r[5] data=r[4]
REG[4] =  sx31[06170F0F012F7461626C65646405435245415445205441424C|...../tabledd.CREATE TABL]
REG[5] =  i:4
  25 SetCookie        0    1    4               00 
  26 ParseSchema      0    0    0 tbl_name='d' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    4 1             00 usesStmtJournal=0
  18 String8          0    2    0 d             00 r[2]='d'
REG[2] =   t1[d](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[d](8)
REG[1] =   s2[t1](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[d](8)
REG[1] =   s2[t1](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[d](8)
REG[1] =   s7[sqlsim0](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[d](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[d](8)
REG[1] =   s1[d](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[d](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s1[d](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:5
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s17[CREATE TABLE d(e)](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s1[d](8)
REG[6] =   s1[d](8)
REG[7] =  i:5
REG[8] =   s17[CREATE TABLE d(e)](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [ATTACH 'test.db8' AS aux8;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 String8          0    1    0 test.db8      00 r[1]='test.db8'
REG[1] =   t8[test.db8](8)
   2 String8          0    2    0 aux8          00 r[2]='aux8'
REG[2] =   t4[aux8](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t8[test.db8](8)
REG[2] =   t4[aux8](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      3    0    6 0             00 usesStmtJournal=0
  14 TableLock        3    1    0 sqlite_master 00 iDb=3 root=1 write=0
  15 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    3 5             00 root=1 iDb=3; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s3[tbl](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s3[tbl](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:2
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s19[CREATE TABLE tbl(x)](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s3[tbl](8)
REG[3] =   s3[tbl](8)
REG[4] =  i:2
REG[5] =   s19[CREATE TABLE tbl(x)](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s12[sqlite_stat1](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s12[sqlite_stat1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:3
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s39[CREATE TABLE sqlite_stat1](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s12[sqlite_stat1](8)
REG[3] =   s12[sqlite_stat1](8)
REG[4] =  i:3
REG[5] =   s39[CREATE TABLE sqlite_stat1](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s3[t36](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s3[t36](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:4
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s48[CREATE TABLE t36 (a INTEG](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s3[t36](8)
REG[3] =   s3[t36](8)
REG[4] =  i:4
REG[5] =   s48[CREATE TABLE t36 (a INTEG](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s3[t37](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s3[t37](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:5
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s48[CREATE TABLE t37 (a INTEG](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s3[t37](8)
REG[3] =   s3[t37](8)
REG[4] =  i:5
REG[5] =   s48[CREATE TABLE t37 (a INTEG](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s3[t38](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s3[t38](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:6
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s48[CREATE TABLE t38 (a INTEG](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s3[t38](8)
REG[3] =   s3[t38](8)
REG[4] =  i:6
REG[5] =   s48[CREATE TABLE t38 (a INTEG](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s3[t39](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s3[t39](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:7
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s48[CREATE TABLE t39 (a INTEG](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s3[t39](8)
REG[3] =   s3[t39](8)
REG[4] =  i:7
REG[5] =   s48[CREATE TABLE t39 (a INTEG](8)
  11 Next             0    5    0               01 
  12 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      3    0    6 0             00 usesStmtJournal=0
  11 TableLock        3    3    0 sqlite_stat1  00 iDb=3 root=3 write=0
  12 Goto             0    1    0               00 
   1 OpenRead         0    3    3 3             00 root=3 iDb=3; sqlite_stat1
   2 Explain          2    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_stat1.tbl
REG[1] =   s3[tbl](8)
   5 Column           0    1    2               00 r[2]=sqlite_stat1.idx
REG[2] =  NULL
   6 Column           0    2    3               00 r[3]=sqlite_stat1.stat
REG[3] =   s1[3](8)
   7 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s3[tbl](8)
REG[2] =  NULL
REG[3] =   s1[3](8)
   8 Next             0    4    0               01 
   9 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [;
DELETE FROM t1 WHERE rowid<32;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    1    4 1             01 usesStmtJournal=0
  18 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SEARCH TABLE t1 USING INTEGER PRIMARY KEY (rowid<?) 00 
   4 Rewind           0   16    0               00 
   5 Integer         32    2    0               00 r[2]=32
REG[2] =  i:32
   6 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:1
   7 Ge               2   16    3               53 if r[3]>=r[2] goto 16
REG[2] =  i:32
REG[3] =  i:1
   8 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:1
   9 Once             0   11    0               00 
  10 OpenWrite        1    3    0 k(2,,)        08 root=3 iDb=0; b
  11 Column           0    1    5               00 r[5]=t1.a
REG[5] =   s4[2.72](8)
  12 Rowid            0    6    0               00 r[6]=rowid
REG[6] =  i:1
  13 IdxDelete        1    5    2               00 key=r[5..6]
  14 Delete           0    1    0 t1            02 
  15 Next             0    6    0               00 
   6 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:2
   7 Ge               2   16    3               53 if r[3]>=r[2] goto 16
REG[2] =  i:32
REG[3] =  i:2
   8 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:2
   9 Once             1   11    0               00 
  11 Column           0    1    5               00 r[5]=t1.a
REG[5] =  NULL
  12 Rowid            0    6    0               00 r[6]=rowid
REG[6] =  i:2
  13 IdxDelete        1    5    2               00 key=r[5..6]
  14 Delete           0    1    0 t1            02 
  15 Next             0    6    0               00 
  16 Halt             0    0    0               00 
SQL: [COMMIT;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    0    0               00 
SQL: [PRAGMA writable_schema=ON;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
UPDATE sqlite_master SET sql='CREATE TABLE IF not EXISTS ab(c)';]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1    4 1             01 usesStmtJournal=0
  17 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   15    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 IsNull           2   15    0               00 if r[2]==NULL goto 15
REG[2] =  i:1
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t1](8)
   9 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 String8          0    7    0 CREATE TABLE IF not EXISTS ab(c) 00 r[7]='CREATE TABLE IF not EXISTS ab(c)'
REG[7] =   t32[CREATE TABLE IF not EXIST](8)
  12 MakeRecord       3    5    1 BBBDB         00 r[1]=mkrec(r[3..7])
REG[3] =   s5[table](8)
REG[4] =   s2[t1](8)
REG[5] =   s2[t1](8)
REG[6] =  i:2
REG[7] =   t32[CREATE TABLE IF not EXIST](8)
REG[1] =  sx48[06171111014D7461626C657431743102435245415445205441|.....Mtablet1t1.CREATE TA]
  13 Insert           0    1    2 sqlite_master 07 intkey=r[2] data=r[1]
REG[1] =  sx48[06171111014D7461626C657431743102435245415445205441|.....Mtablet1t1.CREATE TA]
REG[2] =  i:1
  14 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
   6 IsNull           2   15    0               00 if r[2]==NULL goto 15
REG[2] =  i:2
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[b](8)
   9 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 String          32    7    0 CREATE TABLE IF not EXISTS ab(c) 00 r[7]='CREATE TABLE IF not EXISTS ab(c)' (len=32)
REG[7] =   t32[CREATE TABLE IF not EXIST](8)
  12 MakeRecord       3    5    1 BBBDB         00 r[1]=mkrec(r[3..7])
REG[3] =   s5[index](8)
REG[4] =   s1[b](8)
REG[5] =   s2[t1](8)
REG[6] =  i:3
REG[7] =   t32[CREATE TABLE IF not EXIST](8)
REG[1] =  sx47[06170F11014D696E6465786274310343524541544520544142|.....Mindexbt1.CREATE TAB]
  13 Insert           0    1    2 sqlite_master 07 intkey=r[2] data=r[1]
REG[1] =  sx47[06170F11014D696E6465786274310343524541544520544142|.....Mindexbt1.CREATE TAB]
REG[2] =  i:2
  14 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:3
   6 IsNull           2   15    0               00 if r[2]==NULL goto 15
REG[2] =  i:3
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s7[sqlsim0](8)
   9 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
REG[5] =   s7[sqlsim0](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 String          32    7    0 CREATE TABLE IF not EXISTS ab(c) 00 r[7]='CREATE TABLE IF not EXISTS ab(c)' (len=32)
REG[7] =   t32[CREATE TABLE IF not EXIST](8)
  12 MakeRecord       3    5    1 BBBDB         00 r[1]=mkrec(r[3..7])
REG[3] =   s5[table](8)
REG[4] =   s7[sqlsim0](8)
REG[5] =   s7[sqlsim0](8)
REG[6] =  i:4
REG[7] =   t32[CREATE TABLE IF not EXIST](8)
REG[1] =  sx58[06171B1B014D7461626C6573716C73696D3073716C73696D30|.....Mtablesqlsim0sqlsim0]
  13 Insert           0    1    2 sqlite_master 07 intkey=r[2] data=r[1]
REG[1] =  sx58[06171B1B014D7461626C6573716C73696D3073716C73696D30|.....Mtablesqlsim0sqlsim0]
REG[2] =  i:3
  14 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:4
   6 IsNull           2   15    0               00 if r[2]==NULL goto 15
REG[2] =  i:4
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[d](8)
   9 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
REG[5] =   s1[d](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 String          32    7    0 CREATE TABLE IF not EXISTS ab(c) 00 r[7]='CREATE TABLE IF not EXISTS ab(c)' (len=32)
REG[7] =   t32[CREATE TABLE IF not EXIST](8)
  12 MakeRecord       3    5    1 BBBDB         00 r[1]=mkrec(r[3..7])
REG[3] =   s5[table](8)
REG[4] =   s1[d](8)
REG[5] =   s1[d](8)
REG[6] =  i:5
REG[7] =   t32[CREATE TABLE IF not EXIST](8)
REG[1] =  sx46[06170F0F014D7461626C65646405435245415445205441424C|.....Mtabledd.CREATE TABL]
  13 Insert           0    1    2 sqlite_master 07 intkey=r[2] data=r[1]
REG[1] =  sx46[06170F0F014D7461626C65646405435245415445205441424C|.....Mtabledd.CREATE TABL]
REG[2] =  i:4
  14 Next             0    5    0               01 
  15 Halt             0    0    0               00 
SQL: [-- 2 wal syncs
    INSERT INTO sqlsim0 VALUES(1, 2);]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    1    4 1             01 usesStmtJournal=0
  16 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 2             00 root=4 iDb=0; sqlsim0
   2 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  i:1
   5 MustBeInt        1    0    0               00 
REG[1] =  i:1
   6 SoftNull         2    0    0               00 r[2]=NULL
   7 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   8 Noop             0    0    0               00 uniqueness check for ROWID
   9 Abortable        0    0    0               00 
  10 NotExists        0   12    1               00 intkey=r[1]
REG[1] =  i:1
  11 Halt          1555    2    0 sqlsim0.ab    02 
SQL: [;
-- 1 wal sync, 1 db sync
    BEGIN;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
SQL: [;
COMMIT;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    0    0               00 
SQL: [PRAGMA page_size = 4096 ;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [PRAGMA wal_autocheckpoint = 10;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Int64            0    1    0 10            00 r[1]=10
REG[1] =  i:10
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:10
   3 Halt             0    0    0               00 
SQL: [;
PRAGMA database_list;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 String8          0    2    0 main          00 r[2]='main'
REG[2] =   t4[main](8)
   3 String8          0    3    0               00 r[3]=''
REG[3] =   t0[](8)
   4 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =  i:0
REG[2] =   t4[main](8)
REG[3] =   t0[](8)
   5 Integer          2    1    0               00 r[1]=2
REG[1] =  i:2
   6 String8          0    2    0               00 r[2]=''
REG[2] =   t0[](8)
   7 String8          0    3    0               00 r[3]=''
REG[3] =   t0[](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =  i:2
REG[2] =   t0[](8)
REG[3] =   t0[](8)
   9 Integer          3    1    0               00 r[1]=3
REG[1] =  i:3
  10 String8          0    2    0 aux8          00 r[2]='aux8'
REG[2] =   t4[aux8](8)
  11 String8          0    3    0 /root/test.db8 00 r[3]='/root/test.db8'
REG[3] =   t14[/root/test.db8](8)
  12 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =  i:3
REG[2] =   t4[aux8](8)
REG[3] =   t14[/root/test.db8](8)
  13 Halt             0    0    0               00 
SQL: [PRAGMA page_size = 1024;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [;
COMMIT;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    0    0               00 
SQL: [PRAGMA page_size = 4096;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [;
PRAGMA checkpoint_fullfsync = 0;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
SELECT*FROM"main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    4 1             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[t1](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:2
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s32[CREATE TABLE IF not EXIST](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s2[t1](8)
REG[3] =   s2[t1](8)
REG[4] =  i:2
REG[5] =   s32[CREATE TABLE IF not EXIST](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s1[b](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:3
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s32[CREATE TABLE IF not EXIST](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[index](8)
REG[2] =   s1[b](8)
REG[3] =   s2[t1](8)
REG[4] =  i:3
REG[5] =   s32[CREATE TABLE IF not EXIST](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s7[sqlsim0](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s7[sqlsim0](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:4
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s32[CREATE TABLE IF not EXIST](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s7[sqlsim0](8)
REG[3] =   s7[sqlsim0](8)
REG[4] =  i:4
REG[5] =   s32[CREATE TABLE IF not EXIST](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s1[d](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s1[d](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:5
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s32[CREATE TABLE IF not EXIST](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s1[d](8)
REG[3] =   s1[d](8)
REG[4] =  i:5
REG[5] =   s32[CREATE TABLE IF not EXIST](8)
  11 Next             0    5    0               01 
  12 Halt             0    0    0               00 
SQL: [PRAGMA auto_vacuum = off;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [;
PRAGMA synchronous = off;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [PRAGMA page_size = 4096;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [;
PRAGMA journal_mode = WAL;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 JournalMode      3    1    5               00 
REG[1] =   t3[wal](8)
   2 JournalMode      2    1    5               00 
REG[1] =   t6[delete](8)
   3 JournalMode      0    1    5               00 
REG[1] =   t6[memory](8)
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t6[memory](8)
   5 Halt             0    0    0               00 
SQL: [;
SELECT*FROM"main".sqlite_master WHERE name='ab' AND type='index' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    4 1             01 usesStmtJournal=0
  18 String8          0    2    0 ab            00 r[2]='ab'
REG[2] =   t2[ab](8)
  19 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[ab](8)
REG[1] =   s2[t1](8)
  15 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[b](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[ab](8)
REG[1] =   s1[b](8)
  15 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[ab](8)
REG[1] =   s7[sqlsim0](8)
  15 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[d](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[ab](8)
REG[1] =   s1[d](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
SQL: [;;
SELECT*FROM"main".sqlite_master WHERE tbl_name='sqlsim0' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    4 1             01 usesStmtJournal=0
  18 String8          0    2    0 sqlsim0       00 r[2]='sqlsim0'
REG[2] =   t7[sqlsim0](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[sqlsim0](8)
REG[1] =   s2[t1](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[sqlsim0](8)
REG[1] =   s2[t1](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[sqlsim0](8)
REG[1] =   s7[sqlsim0](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s7[sqlsim0](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s7[sqlsim0](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:4
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s32[CREATE TABLE IF not EXIST](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s7[sqlsim0](8)
REG[6] =   s7[sqlsim0](8)
REG[7] =  i:4
REG[8] =   s32[CREATE TABLE IF not EXIST](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[d](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[sqlsim0](8)
REG[1] =   s1[d](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
SQL: [;
SELECT*FROM"main".sqlite_master WHERE tbl_name='sqlsim0' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    4 1             01 usesStmtJournal=0
  18 String8          0    2    0 sqlsim0       00 r[2]='sqlsim0'
REG[2] =   t7[sqlsim0](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[sqlsim0](8)
REG[1] =   s2[t1](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[sqlsim0](8)
REG[1] =   s2[t1](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[sqlsim0](8)
REG[1] =   s7[sqlsim0](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s7[sqlsim0](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s7[sqlsim0](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:4
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s32[CREATE TABLE IF not EXIST](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s7[sqlsim0](8)
REG[6] =   s7[sqlsim0](8)
REG[7] =  i:4
REG[8] =   s32[CREATE TABLE IF not EXIST](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[d](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[sqlsim0](8)
REG[1] =   s1[d](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
SQL: [;
PRAGMA synchronous = full;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [;
SELECT x FROM t1 WHERE x=1;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    4 1             01 usesStmtJournal=0
  11 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  12 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0    9    0               00 
   9 Halt             0    0    0               00 
SQL: [;
PRAGMA checkpoint_fullfsync = 0;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
PRAGMA fullfsync = 1;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [PRAGMA auto_vacuum = off;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [PRAGMA wal_checkpoint ;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Checkpoint      10    0    1               00 
   2 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =  i:0
REG[2] =  i:-1
REG[3] =  i:-1
   3 Halt             0    0    0               00 
SQL: [PRAGMA wal_autocheckpoint = OFF;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Int64            0    1    0 0             00 r[1]=0
REG[1] =  i:0
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   3 Halt             0    0    0               00 
SQL: [;
PRAGMA synchronous = full;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [PRAGMA wal_checkpoint ;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Checkpoint      10    0    1               00 
   2 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =  i:0
REG[2] =  i:-1
REG[3] =  i:-1
   3 Halt             0    0    0               00 
SQL: [;
PRAGMA journal_mode = WAL;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 JournalMode      3    1    5               00 
REG[1] =   t3[wal](8)
   2 JournalMode      2    1    5               00 
REG[1] =   t6[delete](8)
   3 JournalMode      0    1    5               00 
REG[1] =   t6[memory](8)
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t6[memory](8)
   5 Halt             0    0    0               00 
SQL: [;
PRAGMA checkpoint_fullfsync = 1;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [PRAGMA wal_checkpoint ;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Checkpoint      10    0    1               00 
   2 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =  i:0
REG[2] =  i:-1
REG[3] =  i:-1
   3 Halt             0    0    0               00 
SQL: [;
PRAGMA journal_mode = persist;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 JournalMode      3    1    1               00 
REG[1] =   t7[persist](8)
   2 JournalMode      2    1    1               00 
REG[1] =   t7[persist](8)
   3 JournalMode      0    1    1               00 
REG[1] =   t6[memory](8)
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t6[memory](8)
   5 Halt             0    0    0               00 
SQL: [PRAGMA wal_checkpoint ;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Checkpoint      10    0    1               00 
   2 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =  i:0
REG[2] =  i:-1
REG[3] =  i:-1
   3 Halt             0    0    0               00 
SQL: [;
PRAGMA journal_mode = truncate;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 JournalMode      3    1    3               00 
REG[1] =   t8[truncate](8)
   2 JournalMode      2    1    3               00 
REG[1] =   t8[truncate](8)
   3 JournalMode      0    1    3               00 
REG[1] =   t6[memory](8)
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t6[memory](8)
   5 Halt             0    0    0               00 
SQL: [SELECT length(de) FROM sqlsim0 WHERE de=2;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    4 1             01 usesStmtJournal=0
  12 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
  13 Goto             0    1    0               00 
   1 OpenRead         0    4    0 2             00 root=4 iDb=0; sqlsim0
   2 Explain          2    0    0 SCAN TABLE sqlsim0 00 
   3 Rewind           0   10    0               00 
   4 Column           0    1    1               00 r[1]=sqlsim0.de
REG[1] =  NULL
   5 Ne               2    9    1 (BINARY)      52 if r[1]!=r[2] goto 9
REG[2] =  i:2
REG[1] =  NULL
   9 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlsim0.de
REG[1] =   s1[4](8)
   5 Ne               2    9    1 (BINARY)      52 if r[1]!=r[2] goto 9
REG[2] =  i:2
REG[1] =   s1[4](8)
   9 Next             0    4    0               01 
  10 Halt             0    0    0               00 
SQL: [;
SELECT de FROM sqlsim0 WHERE de=1;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    4 1             01 usesStmtJournal=0
  11 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  12 Goto             0    1    0               00 
   1 OpenRead         0    4    0 2             00 root=4 iDb=0; sqlsim0
   2 Explain          2    0    0 SCAN TABLE sqlsim0 00 
   3 Rewind           0    9    0               00 
   4 Column           0    1    1               00 r[1]=sqlsim0.de
REG[1] =  NULL
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =  i:1
REG[1] =  NULL
   8 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlsim0.de
REG[1] =   s1[4](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =  i:1
REG[1] =   s1[4](8)
   8 Next             0    4    0               01 
   9 Halt             0    0    0               00 
SQL: [PRAGMA auto_vacuum = off;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [;
PRAGMA fullfsync = 1;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
SELECT de FROM sqlsim0 WHERE de=1;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    4 1             01 usesStmtJournal=0
  11 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  12 Goto             0    1    0               00 
   1 OpenRead         0    4    0 2             00 root=4 iDb=0; sqlsim0
   2 Explain          2    0    0 SCAN TABLE sqlsim0 00 
   3 Rewind           0    9    0               00 
   4 Column           0    1    1               00 r[1]=sqlsim0.de
REG[1] =  NULL
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =  i:1
REG[1] =  NULL
   8 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlsim0.de
REG[1] =   s1[4](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =  i:1
REG[1] =   s1[4](8)
   8 Next             0    4    0               01 
   9 Halt             0    0    0               00 
SQL: [PRAGMA page_size = 1024;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [;
SELECT*FROM"main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    4 1             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[t1](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:2
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s32[CREATE TABLE IF not EXIST](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s2[t1](8)
REG[3] =   s2[t1](8)
REG[4] =  i:2
REG[5] =   s32[CREATE TABLE IF not EXIST](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s1[b](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:3
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s32[CREATE TABLE IF not EXIST](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[index](8)
REG[2] =   s1[b](8)
REG[3] =   s2[t1](8)
REG[4] =  i:3
REG[5] =   s32[CREATE TABLE IF not EXIST](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s7[sqlsim0](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s7[sqlsim0](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:4
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s32[CREATE TABLE IF not EXIST](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s7[sqlsim0](8)
REG[3] =   s7[sqlsim0](8)
REG[4] =  i:4
REG[5] =   s32[CREATE TABLE IF not EXIST](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s1[d](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s1[d](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:5
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s32[CREATE TABLE IF not EXIST](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s1[d](8)
REG[3] =   s1[d](8)
REG[4] =  i:5
REG[5] =   s32[CREATE TABLE IF not EXIST](8)
  11 Next             0    5    0               01 
  12 Halt             0    0    0               00 
SQL: [;
PRAGMA journal_mode = truncate;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 JournalMode      3    1    3               00 
REG[1] =   t8[truncate](8)
   2 JournalMode      2    1    3               00 
REG[1] =   t8[truncate](8)
   3 JournalMode      0    1    3               00 
REG[1] =   t6[memory](8)
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t6[memory](8)
   5 Halt             0    0    0               00 
SQL: [;;
SELECT*FROM"main".sqlite_master WHERE tbl_name='d' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    4 1             01 usesStmtJournal=0
  18 String8          0    2    0 d             00 r[2]='d'
REG[2] =   t1[d](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[d](8)
REG[1] =   s2[t1](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[d](8)
REG[1] =   s2[t1](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[d](8)
REG[1] =   s7[sqlsim0](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[d](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[d](8)
REG[1] =   s1[d](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[d](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s1[d](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:5
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s32[CREATE TABLE IF not EXIST](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s1[d](8)
REG[6] =   s1[d](8)
REG[7] =  i:5
REG[8] =   s32[CREATE TABLE IF not EXIST](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
SQL: [;
PRAGMA journal_mode = memory;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 JournalMode      3    1    4               00 
REG[1] =   t6[memory](8)
   2 JournalMode      2    1    4               00 
REG[1] =   t6[memory](8)
   3 JournalMode      0    1    4               00 
REG[1] =   t6[memory](8)
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t6[memory](8)
   5 Halt             0    0    0               00 
SQL: [;
PRAGMA checkpoint_fullfsync = 1;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
SELECT*FROM"main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    4 1             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[t1](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:2
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s32[CREATE TABLE IF not EXIST](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s2[t1](8)
REG[3] =   s2[t1](8)
REG[4] =  i:2
REG[5] =   s32[CREATE TABLE IF not EXIST](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s1[b](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:3
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s32[CREATE TABLE IF not EXIST](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[index](8)
REG[2] =   s1[b](8)
REG[3] =   s2[t1](8)
REG[4] =  i:3
REG[5] =   s32[CREATE TABLE IF not EXIST](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s7[sqlsim0](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s7[sqlsim0](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:4
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s32[CREATE TABLE IF not EXIST](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s7[sqlsim0](8)
REG[3] =   s7[sqlsim0](8)
REG[4] =  i:4
REG[5] =   s32[CREATE TABLE IF not EXIST](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s1[d](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s1[d](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:5
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s32[CREATE TABLE IF not EXIST](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s1[d](8)
REG[3] =   s1[d](8)
REG[4] =  i:5
REG[5] =   s32[CREATE TABLE IF not EXIST](8)
  11 Next             0    5    0               01 
  12 Halt             0    0    0               00 
SQL: [;
PRAGMA fullfsync = 1;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
PRAGMA page_size = 1024;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [;
PRAGMA journal_mode = WAL;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 JournalMode      3    1    5               00 
REG[1] =   t3[wal](8)
   2 JournalMode      2    1    5               00 
REG[1] =   t6[memory](8)
   3 JournalMode      0    1    5               00 
REG[1] =   t6[memory](8)
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t6[memory](8)
   5 Halt             0    0    0               00 
SQL: [;;
SELECT*FROM"main".sqlite_master WHERE tbl_name='ab' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    4 1             01 usesStmtJournal=0
  18 String8          0    2    0 ab            00 r[2]='ab'
REG[2] =   t2[ab](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[ab](8)
REG[1] =   s2[t1](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[ab](8)
REG[1] =   s2[t1](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim0](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[ab](8)
REG[1] =   s7[sqlsim0](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[d](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[ab](8)
REG[1] =   s1[d](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
SQL: [SELECT length(a) FROM t1 WHERE a=2;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    4 1             01 usesStmtJournal=0
  11 Goto             0    1    0               00 
   1 OpenRead         1    3    0 k(2,,)        02 root=3 iDb=0; b
   2 Explain          2    0    0 SEARCH TABLE t1 USING COVERING INDEX b (a=?) 00 
   3 Integer          2    1    0               00 r[1]=2
REG[1] =  i:2
   4 SeekGE           1    9    1 1             00 key=r[1]
REG[1] =  i:2
   9 Halt             0    0    0               00 
SQL: [;
PRAGMA cache_size = 10;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [;
PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0  157  154               00 Start at 157
 157 Transaction      0    0    4 1             01 usesStmtJournal=0
 158 Transaction      1    0    0 1             01 usesStmtJournal=0
 159 Transaction      2    0    0 0             01 usesStmtJournal=0
 160 Transaction      3    0    6 0             01 usesStmtJournal=0
 161 TableLock        3    7    0 t39           00 iDb=3 root=7 write=0
 162 TableLock        3    6    0 t38           00 iDb=3 root=6 write=0
 163 TableLock        3    5    0 t37           00 iDb=3 root=5 write=0
 164 TableLock        3    4    0 t36           00 iDb=3 root=4 write=0
 165 TableLock        3    3    0 sqlite_stat1  00 iDb=3 root=3 write=0
 166 TableLock        3    2    0 tbl           00 iDb=3 root=2 write=0
 167 TableLock        3    1    0 sqlite_master 00 iDb=3 root=1 write=0
 168 Goto             0    1    0               00 
   1 Integer         99    1    0               00 r[1]=99
REG[1] =  i:99
   2 IntegrityCk      2    5    1 [5,4,2,3,1]   00 
   3 IsNull           2    9    0               00 if r[2]==NULL goto 9
REG[2] =  NULL
   9 OpenRead         1    5    0 1             00 root=5 iDb=0; d
  10 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  11 Rewind           1   15    0               00 
  15 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
  16 OpenRead         1    4    0 2             00 root=4 iDb=0; sqlsim0
  17 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  18 Rewind           1   22    0               00 
  19 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  20 Column           1    1    3               80 r[3]=
REG[3] =  NULL
  21 Next             1   19    0               00 
  19 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
  20 Column           1    1    3               80 r[3]=
REG[3] =   s1[4](8)
  21 Next             1   19    0               00 
  22 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
  23 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  24 OpenRead         2    3    0 k(2,,)        00 root=3 iDb=0; b
  25 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  26 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  27 Rewind           1   50    0               00 
  50 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
  51 Count            2    3    0               00 r[3]=count()
REG[3] =  i:0
  52 Eq               8   58    3               90 if r[3]==r[8] goto 58
REG[8] =  i:0
REG[3] =  i:0
  58 OpenRead         1    1    0 5             00 root=1 iDb=0; sqlite_master
  59 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  60 Rewind           1   64    0               00 
  61 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  62 Column           1    4    3               80 r[3]=
REG[3] =   s32[CREATE TABLE IF not EXIST](8)
  63 Next             1   61    0               00 
  61 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
  62 Column           1    4    3               80 r[3]=
REG[3] =   s32[CREATE TABLE IF not EXIST](8)
  63 Next             1   61    0               00 
  61 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:2
  62 Column           1    4    3               80 r[3]=
REG[3] =   s32[CREATE TABLE IF not EXIST](8)
  63 Next             1   61    0               00 
  61 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:3
  62 Column           1    4    3               80 r[3]=
REG[3] =   s32[CREATE TABLE IF not EXIST](8)
  63 Next             1   61    0               00 
  64 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
  65 IntegrityCk      2    1    1 [1]           01 
  66 IsNull           2   72    0               00 if r[2]==NULL goto 72
REG[2] =  NULL
  72 OpenRead         1    1    1 5             00 root=1 iDb=1; sqlite_temp_master
  73 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  74 Rewind           1   78    0               00 
  78 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
  79 IntegrityCk      2    1    1 [1]           02 
  80 IsNull           2   86    0               00 if r[2]==NULL goto 86
REG[2] =  NULL
  86 OpenRead         1    1    2 5             00 root=1 iDb=2; sqlite_master
  87 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  88 Rewind           1   92    0               00 
  92 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
  93 IntegrityCk      2    7    1 [7,6,5,4,3,2,1] 03 
  94 IsNull           2  100    0               00 if r[2]==NULL goto 100
REG[2] =  NULL
 100 OpenRead         1    7    3 2             00 root=7 iDb=3; t39
 101 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
 102 Rewind           1  106    0               00 
 106 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
 107 OpenRead         1    6    3 2             00 root=6 iDb=3; t38
 108 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
 109 Rewind           1  113    0               00 
 113 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
 114 OpenRead         1    5    3 2             00 root=5 iDb=3; t37
 115 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
 116 Rewind           1  120    0               00 
 120 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
 121 OpenRead         1    4    3 2             00 root=4 iDb=3; t36
 122 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
 123 Rewind           1  127    0               00 
 127 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
 128 OpenRead         1    3    3 3             00 root=3 iDb=3; sqlite_stat1
 129 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
 130 Rewind           1  134    0               00 
 131 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
 132 Column           1    2    3               80 r[3]=
REG[3] =   s1[3](8)
 133 Next             1  131    0               00 
 134 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
 135 OpenRead         1    2    3 1             00 root=2 iDb=3; tbl
 136 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
 137 Rewind           1  141    0               00 
 138 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
 139 Column           1    0    3               80 r[3]=
REG[3] =   s8[test.db8](8)
 140 Next             1  138    0               00 
 138 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
 139 Column           1    0    3               80 r[3]=
REG[3] =   s8[test.db8](8)
 140 Next             1  138    0               00 
 138 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:2
 139 Column           1    0    3               80 r[3]=
REG[3] =   s8[test.db8](8)
 140 Next             1  138    0               00 
 141 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
 142 OpenRead         1    1    3 5             00 root=1 iDb=3; sqlite_master
 143 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
 144 Rewind           1  148    0               00 
 145 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
 146 Column           1    4    3               80 r[3]=
REG[3] =   s19[CREATE TABLE tbl(x)](8)
 147 Next             1  145    0               00 
 145 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
 146 Column           1    4    3               80 r[3]=
REG[3] =   s39[CREATE TABLE sqlite_stat1](8)
 147 Next             1  145    0               00 
 145 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:2
 146 Column           1    4    3               80 r[3]=
REG[3] =   s48[CREATE TABLE t36 (a INTEG](8)
 147 Next             1  145    0               00 
 145 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:3
 146 Column           1    4    3               80 r[3]=
REG[3] =   s48[CREATE TABLE t37 (a INTEG](8)
 147 Next             1  145    0               00 
 145 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:4
 146 Column           1    4    3               80 r[3]=
REG[3] =   s48[CREATE TABLE t38 (a INTEG](8)
 147 Next             1  145    0               00 
 145 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:5
 146 Column           1    4    3               80 r[3]=
REG[3] =   s48[CREATE TABLE t39 (a INTEG](8)
 147 Next             1  145    0               00 
 148 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
 149 AddImm           1  -99    0               00 r[1]=r[1]+-99
REG[1] =  i:99
 150 IfNotZero        1  153    0               00 if r[1]!=0 then r[1]--, goto 153
REG[1] =  i:0
 151 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
 152 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
 153 Halt             0    0    0               00 
SQL: [;
SELECT*FROM"main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    4 1             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[t1](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:2
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s32[CREATE TABLE IF not EXIST](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s2[t1](8)
REG[3] =   s2[t1](8)
REG[4] =  i:2
REG[5] =   s32[CREATE TABLE IF not EXIST](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s1[b](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:3
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s32[CREATE TABLE IF not EXIST](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[index](8)
REG[2] =   s1[b](8)
REG[3] =   s2[t1](8)
REG[4] =  i:3
REG[5] =   s32[CREATE TABLE IF not EXIST](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s7[sqlsim0](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s7[sqlsim0](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:4
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s32[CREATE TABLE IF not EXIST](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s7[sqlsim0](8)
REG[3] =   s7[sqlsim0](8)
REG[4] =  i:4
REG[5] =   s32[CREATE TABLE IF not EXIST](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s1[d](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s1[d](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:5
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s32[CREATE TABLE IF not EXIST](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s1[d](8)
REG[3] =   s1[d](8)
REG[4] =  i:5
REG[5] =   s32[CREATE TABLE IF not EXIST](8)
  11 Next             0    5    0               01 
  12 Halt             0    0    0               00 
SQL: [;
PRAGMA journal_mode = off;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 JournalMode      3    1    2               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fdec5464859 in __GI_abort () at abort.c:79
#2  0x00007fdec5464729 in __assert_fail_base (fmt=0x7fdec55fa588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21b66f "p->journalMode!=PAGER_JOURNALMODE_OFF || !isOpen(p->jfd)", file=0x2291f4 "sqlite3.c", 
    line=51686, function=<optimized out>) at assert.c:92
#3  0x00007fdec5475fd6 in __GI___assert_fail (assertion=0x21b66f "p->journalMode!=PAGER_JOURNALMODE_OFF || !isOpen(p->jfd)", file=0x2291f4 "sqlite3.c", line=51686, function=0x20d580 "int assert_pager_state(Pager *)")
    at assert.c:101
#4  0x00000000002b4a7a in assert_pager_state (p=0x160b0b0) at sqlite3.c:51686
#5  0x00000000002c2ca9 in pager_end_transaction (pPager=0x160b0b0, hasMaster=0, bCommit=0) at sqlite3.c:52841
#6  0x00000000002c66d9 in pager_playback (pPager=0x160b0b0, isHot=1) at sqlite3.c:53782
#7  0x00000000002e83cf in sqlite3PagerSharedLock (pPager=0x160b0b0) at sqlite3.c:56073
#8  0x00000000002e5e28 in lockBtree (pBt=0x15f3700) at sqlite3.c:66464
#9  0x00000000002e4809 in sqlite3BtreeBeginTrans (p=0x15ea2d0, wrflag=0, pSchemaVersion=0x0) at sqlite3.c:66839
#10 0x00000000003f72dc in sqlite3BtreeSetVersion (pBtree=0x15ea2d0, iVersion=1) at sqlite3.c:73800
#11 0x00000000003e6e68 in sqlite3VdbeExec (p=0x15e8360) at sqlite3.c:90831
#12 0x000000000041ba74 in sqlite3Step (p=0x15e8360) at sqlite3.c:82300
#13 0x0000000000293d5d in sqlite3_step (pStmt=0x15e8360) at sqlite3.c:82365
#14 0x0000000000258a39 in main (argc=1, argv=0x7ffe91499f08) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 7414] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
