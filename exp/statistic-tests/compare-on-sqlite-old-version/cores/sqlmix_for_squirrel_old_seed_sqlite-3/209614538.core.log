GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000048,sig:06,src:014582+017171,time:6410856,execs:744706,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [RELEASE main ;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Savepoint        1    0    0 main          00 
SQL: [PRAGMA auto_vacuum = 1;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Transaction      0    1    0               00 
   2 ReadCookie       0    1    4               00 
REG[1] =  i:1
   3 If               1    5    0               00 
REG[1] =  i:1
   5 SetCookie        0    7    0               00 
   6 Halt             0    0    0               00 
SQL: [SELECT typeof(9223372036854775808);]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 Real             0    3    0 9.223372036854776e+18 00 r[3]=9.223372036854776e+18
REG[3] =  r:9.2233720368547758e+18
   6 Function0        1    3    2 typeof(1)     01 r[2]=func(r[3])
REG[3] =  r:9.2233720368547758e+18
REG[2] =   t4[real](8)
   7 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   t4[real](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t4[real](8)
   4 Halt             0    0    0               00 
SQL: [;
SELECT*FROM"main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    0 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
  12 Halt             0    0    0               00 
SQL: [SELECT hex('À') AS x;]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 À             00 r[3]='À'
REG[3] =   t1[.](8)
   6 Function0        1    3    2 hex(1)        01 r[2]=func(r[3])
REG[3] =   t1[.](8)
REG[2] =   z2[C0](8)
   7 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s2[C0](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s2[C0](8)
   4 Halt             0    0    0               00 
SQL: [ATTACH':my:' AS inmaname;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 String8          0    1    0 :my:          00 r[1]=':my:'
REG[1] =   t4[:my:](8)
   2 String8          0    2    0 inmaname      00 r[2]='inmaname'
REG[2] =   t8[inmaname](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t4[:my:](8)
REG[2] =   t8[inmaname](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      2    0    7 0             00 usesStmtJournal=0
  14 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  15 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s12[sqlite_stat1](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s12[sqlite_stat1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:2
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s39[CREATE TABLE sqlite_stat1](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s12[sqlite_stat1](8)
REG[3] =   s12[sqlite_stat1](8)
REG[4] =  i:2
REG[5] =   s39[CREATE TABLE sqlite_stat1](8)
  11 Next             0    5    0               01 
  12 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      2    0    7 0             00 usesStmtJournal=0
  11 TableLock        2    2    0 sqlite_stat1  00 iDb=2 root=2 write=0
  12 Goto             0    1    0               00 
   1 OpenRead         0    2    2 3             00 root=2 iDb=2; sqlite_stat1
   2 Explain          2    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   9 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [SELECT 12.3456;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Real             0    1    0 12.3456       00 r[1]=12.3456
REG[1] =  r:12.345599999999999
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  r:12.345599999999999
   4 Halt             0    0    0               00 
SQL: [PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0   59   56               00 Start at 59
  59 Transaction      0    0    0 0             01 usesStmtJournal=0
  60 Transaction      1    0    0 0             01 usesStmtJournal=0
  61 Transaction      2    0    7 0             01 usesStmtJournal=0
  62 TableLock        2    2    0 sqlite_stat1  00 iDb=2 root=2 write=0
  63 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  64 Goto             0    1    0               00 
   1 Integer         99    1    0               00 r[1]=99
REG[1] =  i:99
   2 IntegrityCk      2    1    1 [1]           00 
   3 IsNull           2    9    0               00 if r[2]==NULL goto 9
REG[2] =  NULL
   9 OpenRead         1    1    0 5             00 root=1 iDb=0; sqlite_master
  10 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  11 Rewind           1   15    0               00 
  15 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
  16 IntegrityCk      2    1    1 [1]           01 
  17 IsNull           2   23    0               00 if r[2]==NULL goto 23
REG[2] =  NULL
  23 OpenRead         1    1    1 5             00 root=1 iDb=1; sqlite_temp_master
  24 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  25 Rewind           1   29    0               00 
  29 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
  30 IntegrityCk      2    2    1 [2,1]         02 
  31 IsNull           2   37    0               00 if r[2]==NULL goto 37
REG[2] =  NULL
  37 OpenRead         1    2    2 3             00 root=2 iDb=2; sqlite_stat1
  38 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  39 Rewind           1   43    0               00 
  43 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
  44 OpenRead         1    1    2 5             00 root=1 iDb=2; sqlite_master
  45 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  46 Rewind           1   50    0               00 
  47 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  48 Column           1    4    3               80 r[3]=
REG[3] =   s39[CREATE TABLE sqlite_stat1](8)
  49 Next             1   47    0               00 
  50 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
  51 AddImm           1  -99    0               00 r[1]=r[1]+-99
REG[1] =  i:99
  52 IfNotZero        1   55    0               00 if r[1]!=0 then r[1]--, goto 55
REG[1] =  i:0
  53 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
  54 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
  55 Halt             0    0    0               00 
SQL: [;
PRAGMA page_size = 1024;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [SELECT hex('ÿ') AS x;]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 ÿ             00 r[3]='ÿ'
REG[3] =   t1[.](8)
   6 Function0        1    3    2 hex(1)        01 r[2]=func(r[3])
REG[3] =   t1[.](8)
REG[2] =   z2[FF](8)
   7 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s2[FF](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s2[FF](8)
   4 Halt             0    0    0               00 
SQL: [SELECT*FROM"main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    0 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
  12 Halt             0    0    0               00 
SQL: [PRAGMA cache_size = 10;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [;
BEGIN;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
SQL: [;
ROLLBACK TO one;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Savepoint        2    0    0 one           00 
SQL: [PRAGMA cache_size = 10;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [;
COMMIT;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    0    0               00 
SQL: [PRAGMA page_size;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Int64            0    1    0 4096          00 r[1]=4096
REG[1] =  i:4096
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:4096
   3 Halt             0    0    0               00 
SQL: [;
SAVEPOINT one;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Savepoint        0    0    0 one           00 
   2 Halt             0    0    0               00 
SQL: [;
ROLLBACK TO two ;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Savepoint        2    0    0 two           00 
SQL: [DETACH aux2;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
   3 String8          0    3    0 aux2          00 r[3]='aux2'
REG[3] =   t4[aux2](8)
   4 Function0        0    3    4 sqlite_detach(1) 01 r[4]=func(r[3])
REG[3] =   t4[aux2](8)
SQL: [SELECT*FROM"main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    0 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
  12 Halt             0    0    0               00 
SQL: [;
ROLLBACK ;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    1    0               00 
SQL: [PRAGMA auto_vacuum = full;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Transaction      0    1    0               00 
   2 ReadCookie       0    1    4               00 
REG[1] =  i:1
   3 If               1    5    0               00 
REG[1] =  i:1
   5 SetCookie        0    7    0               00 
   6 Halt             0    0    0               00 
SQL: [SELECT*FROM"main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    0 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
  12 Halt             0    0    0               00 
SQL: [PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0   59   56               00 Start at 59
  59 Transaction      0    0    0 0             01 usesStmtJournal=0
  60 Transaction      1    0    0 0             01 usesStmtJournal=0
  61 Transaction      2    0    7 0             01 usesStmtJournal=0
  62 TableLock        2    2    0 sqlite_stat1  00 iDb=2 root=2 write=0
  63 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  64 Goto             0    1    0               00 
   1 Integer         99    1    0               00 r[1]=99
REG[1] =  i:99
   2 IntegrityCk      2    1    1 [1]           00 
   3 IsNull           2    9    0               00 if r[2]==NULL goto 9
REG[2] =  NULL
   9 OpenRead         1    1    0 5             00 root=1 iDb=0; sqlite_master
  10 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  11 Rewind           1   15    0               00 
  15 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
  16 IntegrityCk      2    1    1 [1]           01 
  17 IsNull           2   23    0               00 if r[2]==NULL goto 23
REG[2] =  NULL
  23 OpenRead         1    1    1 5             00 root=1 iDb=1; sqlite_temp_master
  24 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  25 Rewind           1   29    0               00 
  29 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
  30 IntegrityCk      2    2    1 [2,1]         02 
  31 IsNull           2   37    0               00 if r[2]==NULL goto 37
REG[2] =  NULL
  37 OpenRead         1    2    2 3             00 root=2 iDb=2; sqlite_stat1
  38 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  39 Rewind           1   43    0               00 
  43 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
  44 OpenRead         1    1    2 5             00 root=1 iDb=2; sqlite_master
  45 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  46 Rewind           1   50    0               00 
  47 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  48 Column           1    4    3               80 r[3]=
REG[3] =   s39[CREATE TABLE sqlite_stat1](8)
  49 Next             1   47    0               00 
  50 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
  51 AddImm           1  -99    0               00 r[1]=r[1]+-99
REG[1] =  i:99
  52 IfNotZero        1   55    0               00 if r[1]!=0 then r[1]--, goto 55
REG[1] =  i:0
  53 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
  54 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
  55 Halt             0    0    0               00 
SQL: [SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      1    0    0 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   12    0               00 
  12 Halt             0    0    0               00 
SQL: [ROLLBACK ;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    1    0               00 
SQL: [PRAGMA wal_checkpoint ;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Checkpoint      10    0    1               00 
   2 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =  i:0
REG[2] =  i:-1
REG[3] =  i:-1
   3 Halt             0    0    0               00 
SQL: [;
DROP TABLE IF EXISTS t3;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    0 0             01 usesStmtJournal=0
   3 Transaction      1    0    0 0             01 usesStmtJournal=0
   4 Transaction      2    0    7 0             01 usesStmtJournal=0
   5 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [;
SELECT*FROM"main".sqlite_master WHERE name='aaa' AND type='table' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    0 0             01 usesStmtJournal=0
  18 String8          0    2    0 aaa           00 r[2]='aaa'
REG[2] =   t3[aaa](8)
  19 String8          0    3    0 table         00 r[3]='table'
REG[3] =   t5[table](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
  16 Halt             0    0    0               00 
SQL: [CREATE TABLE t1(a PRIMARY KEY, b);]
VDBE Trace:
   0 Init             0   39    0               00 Start at 39
  39 Transaction      0    1    0 0             01 usesStmtJournal=0
  40 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  tx6[060000000000|......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  tx6[060000000000|......]
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      0    4    2               00 r[4]=root iDb=0 flags=2
REG[4] =  i:4
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:2
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_t1_1 00 r[7]='sqlite_autoindex_t1_1'
REG[7] =   t21[sqlite_autoindex_t1_1](8)
  17 String8          0    8    0 t1            00 r[8]='t1'
REG[8] =   t2[t1](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:4
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[6] =   t5[index](8)
REG[7] =   t21[sqlite_autoindex_t1_1](8)
REG[8] =   t2[t1](8)
REG[9] =  i:4
REG[10] =  NULL
REG[11] =  sx35[061737110100696E64657873716C6974655F6175746F696E64|..7...indexsqlite_autoind]
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  sx35[061737110100696E64657873716C6974655F6175746F696E64|..7...indexsqlite_autoind]
REG[5] =  i:2
  22 Close            0    0    0               00 
  23 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  24 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  25 Explain         25    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  26 SeekRowid        2   28    1               00 intkey=r[1]
REG[1] =  i:1
  27 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:1
  28 IsNull          13   36    0               00 if r[13]==NULL goto 36
REG[13] =  i:1
  29 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  30 String8          0   15    0 t1            00 r[15]='t1'
REG[15] =   t2[t1](8)
  31 String8          0   16    0 t1            00 r[16]='t1'
REG[16] =   t2[t1](8)
  32 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:3
  33 String8          0   18    0 CREATE TABLE t1(a PRIMARY KEY, b) 00 r[18]='CREATE TABLE t1(a PRIMARY KEY, b)'
REG[18] =   t33[CREATE TABLE t1(a PRIMARY](8)
  34 MakeRecord      14    5   12 BBBDB         00 r[12]=mkrec(r[14..18])
REG[14] =   t5[table](8)
REG[15] =   t2[t1](8)
REG[16] =   t2[t1](8)
REG[17] =  i:3
REG[18] =   t33[CREATE TABLE t1(a PRIMARY](8)
REG[12] =  sx49[06171111014F7461626C657431743103435245415445205441|.....Otablet1t1.CREATE TA]
  35 Insert           2   12   13               00 intkey=r[13] data=r[12]
REG[12] =  sx49[06171111014F7461626C657431743103435245415445205441|.....Otablet1t1.CREATE TA]
REG[13] =  i:1
  36 SetCookie        0    1    1               00 
  37 ParseSchema      0    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    1 0             00 usesStmtJournal=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s2[t1](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:3
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s33[CREATE TABLE t1(a PRIMARY](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s2[t1](8)
REG[6] =   s2[t1](8)
REG[7] =  i:3
REG[8] =   s33[CREATE TABLE t1(a PRIMARY](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[index](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s21[sqlite_autoindex_t1_1](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s2[t1](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:4
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =  NULL
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[index](8)
REG[5] =   s21[sqlite_autoindex_t1_1](8)
REG[6] =   s2[t1](8)
REG[7] =  i:4
REG[8] =  NULL
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  38 Halt             0    0    0               00 
SQL: [;;
SELECT*FROM"main".sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    1 0             01 usesStmtJournal=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s2[t1](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:3
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s33[CREATE TABLE t1(a PRIMARY](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s2[t1](8)
REG[6] =   s2[t1](8)
REG[7] =  i:3
REG[8] =   s33[CREATE TABLE t1(a PRIMARY](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[index](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s21[sqlite_autoindex_t1_1](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s2[t1](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:4
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =  NULL
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[index](8)
REG[5] =   s21[sqlite_autoindex_t1_1](8)
REG[6] =   s2[t1](8)
REG[7] =  i:4
REG[8] =  NULL
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
SQL: [;
SELECT * FROM t1 ORDER BY rowid;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    1 0             01 usesStmtJournal=0
  11 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0    9    0               00 
   9 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f6aef41c859 in __GI_abort () at abort.c:79
#2  0x00007f6aef48726e in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7f6aef5b1298 "%s\n") at ../sysdeps/posix/libc_fatal.c:155
#3  0x00007f6aef48f2fc in malloc_printerr (str=str@entry=0x7f6aef5af4c1 "free(): invalid pointer") at malloc.c:5347
#4  0x00007f6aef490b2c in _int_free (av=<optimized out>, p=<optimized out>, have_lock=0) at malloc.c:4173
#5  0x0000000000273b99 in sqlite3MemFree (pPrior=0x1c364a0) at sqlite3.c:23079
#6  0x000000000025e7f6 in sqlite3_free (p=0x1c364a0) at sqlite3.c:27000
#7  0x000000000025e64b in sqlite3DbFreeNN (db=0x0, p=0x1c364a0) at sqlite3.c:27043
#8  0x000000000025e25f in sqlite3DbFree (db=0x0, p=0x1c364a0) at sqlite3.c:27047
#9  0x000000000029f7e2 in deleteTable (db=0x0, pTable=0x1c57290) at sqlite3.c:108310
#10 0x000000000029f313 in sqlite3DeleteTable (db=0x0, pTable=0x1c57290) at sqlite3.c:108326
#11 0x00000000002a87e1 in sqlite3SchemaClear (p=0x1c36ab0) at sqlite3.c:112936
#12 0x00000000002de462 in sqlite3ResetAllSchemasOfConnection (db=0x1c364c0) at sqlite3.c:108217
#13 0x0000000000362da5 in invalidateTempStorage (pParse=0x7ffdca53dba0) at sqlite3.c:122305
#14 0x0000000000313df3 in sqlite3Pragma (pParse=0x7ffdca53dba0, pId1=0x7ffdca53d208, pId2=0x7ffdca53d220, pValue=0x7ffdca53d250, minusFlag=0) at sqlite3.c:123086
#15 0x00000000002f3e91 in yy_reduce (yypParser=0x7ffdca53d1c0, yyruleno=238, yyLookahead=1, yyLookaheadToken=..., pParse=0x7ffdca53dba0) at sqlite3.c:153935
#16 0x00000000002eca18 in sqlite3Parser (yyp=0x7ffdca53d1c0, yymajor=1, yyminor=...) at sqlite3.c:154496
#17 0x00000000002a9df3 in sqlite3RunParser (pParse=0x7ffdca53dba0, 
    zSql=0x1c5387e ";;\nPRAGMA journal_mode = off;;\nINSERT INTO t1 SELECT a+4,a+4  FROM t1;;\nSAVEPOINT s1;CREATE TABLE c(i1);;\nSELECT*FROM\"main\".sqlite_master WHERE tbl_name='c' AND type!='trigger' ORDER BY rowid;;\nUPDATE"..., pzErrMsg=0x7ffdca53dd80) at sqlite3.c:155636
#18 0x00000000002a77e3 in sqlite3Prepare (db=0x1c364c0, 
    zSql=0x1c3773d "PRAGMA temp_store_directory='';;\nPRAGMA journal_mode = off;;\nINSERT INTO t1 SELECT a+4,a+4  FROM t1;;\nSAVEPOINT s1;CREATE TABLE c(i1);;\nSELECT*FROM\"main\".sqlite_master WHERE tbl_name='c' AND type!='tr"..., nBytes=644, prepFlags=128, pReprepare=0x0, ppStmt=0x7ffdca53deb8, pzTail=0x7ffdca53dea0) at sqlite3.c:125299
#19 0x00000000002a6eae in sqlite3LockAndPrepare (db=0x1c364c0, 
    zSql=0x1c3773d "PRAGMA temp_store_directory='';;\nPRAGMA journal_mode = off;;\nINSERT INTO t1 SELECT a+4,a+4  FROM t1;;\nSAVEPOINT s1;CREATE TABLE c(i1);;\nSELECT*FROM\"main\".sqlite_master WHERE tbl_name='c' AND type!='tr"..., nBytes=644, prepFlags=128, pOld=0x0, ppStmt=0x7ffdca53deb8, pzTail=0x7ffdca53dea0) at sqlite3.c:125402
#20 0x0000000000294f4f in sqlite3_prepare_v2 (db=0x1c364c0, 
    zSql=0x1c3773d "PRAGMA temp_store_directory='';;\nPRAGMA journal_mode = off;;\nINSERT INTO t1 SELECT a+4,a+4  FROM t1;;\nSAVEPOINT s1;CREATE TABLE c(i1);;\nSELECT*FROM\"main\".sqlite_master WHERE tbl_name='c' AND type!='tr"..., nBytes=644, ppStmt=0x7ffdca53deb8, pzTail=0x7ffdca53dea0) at sqlite3.c:125486
#21 0x0000000000258550 in main (argc=1, argv=0x7ffdca53e068) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 3337] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
