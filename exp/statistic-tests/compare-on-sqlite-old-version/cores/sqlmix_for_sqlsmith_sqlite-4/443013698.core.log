GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000463,sig:06,src:008902+023917,time:18189333,execs:3131704,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;CREATE TABLE v3(x REFERENCES v0 DEFERRABLE INITIALLY DEFERRED);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    1 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:2
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:2
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:2
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 v3            00 r[7]='v3'
REG[7] =   t2[v3](8)
  21 String8          0    8    0 v3            00 r[8]='v3'
REG[8] =   t2[v3](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  23 String8          0   10    0 CREATE TABLE v3(x REFERENCES v0 DEFERRABLE INITIALLY DEFERRED) 00 r[10]='CREATE TABLE v3(x REFERENCES v0 DEFERRABLE INITIALLY DEFERRED)'
REG[10] =   t62[CREATE TABLE v3](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s79[071711110181097461626C6576337633.......tablev3v3](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s79[071711110181097461626C6576337633.......tablev3v3](8)
REG[5] =  i:2
  26 Close            1    0    0               00 
  27 SetCookie        0    1    2               00 
  28 ParseSchema      0    0    0 tbl_name='v3' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 v3            00 r[2]='v3'
REG[2] =   t2[v3](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[v3](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[v3](8)
REG[1] =   s2[v3](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[v3](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s62[CREATE TABLE v3](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[v3](8)
REG[6] =  i:3
REG[7] =   s62[CREATE TABLE v3](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;CREATE INDEX xyz on v0("c"=v1);]
VDBE Trace:
   0 Init             0   35    0               00 Start at 35
  35 Transaction      0    1    2 0             01 usesStmtJournal=0
  36 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  37 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
  38 String8          0   12    0 c             00 r[12]='c'
REG[12] =   t1[c](8)
  39 Goto             0    1    0               00 
   1 Noop             0   34    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:4
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:3
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 xyz           00 r[4]='xyz'
REG[4] =   t3[xyz](8)
   7 String8          0    5    0 v0            00 r[5]='v0'
REG[5] =   t2[v0](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:4
   9 String8          0    7    0 CREATE INDEX xyz on v0("c"=v1) 00 r[7]='CREATE INDEX xyz on v0("c"=v1)'
REG[7] =   t30[CREATE INDEX xy](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s47[061713110149696E64657878797A7630.....Iindexxyzv0](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s47[061713110149696E64657878797A7630.....Iindexxyzv0](8)
REG[2] =  i:3
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    1 k(2,,)        00 
  14 OpenRead         1    2    0 k(1,)         00 root=2 iDb=0; v0
  15 Rewind           1   22    0               00 
  22 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  23 SorterSort       3   28    0               00 
  28 Close            1    0    0               00 
  29 Close            2    0    0               00 
  30 Close            3    0    0               00 
  31 SetCookie        0    1    3               00 
  32 ParseSchema      0    0    0 name='xyz' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 xyz           00 r[2]='xyz'
REG[2] =   t3[xyz](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[xyz](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[xyz](8)
REG[1] =   s2[v3](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[xyz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[xyz](8)
REG[1] =   s3[xyz](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s3[xyz](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s30[CREATE INDEX xy](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s3[xyz](8)
REG[6] =  i:4
REG[7] =   s30[CREATE INDEX xy](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  33 Expire           0    0    0               00 
  34 Halt             0    0    0               00 
SQL: [;
;PRAGMA temp_store = 2;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [PRAGMA foreign_key_check(v0)
;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    3 0             01 usesStmtJournal=0
   3 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [;
;VACUUM 
;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Vacuum           0    0    0               00 
SQL: [;INSERT INTO v0(v1,v1) VALUES(0, 356282677878746340);]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    1    3 0             01 usesStmtJournal=0
  20 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
  21 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  22 String8          0    8    0 c             00 r[8]='c'
REG[8] =   t1[c](8)
  23 Goto             0    1    0               00 
   1 OpenWrite        1    4    0 k(2,,)        00 root=4 iDb=0; xyz
   2 OpenWrite        2    2    0 k(1,)         00 root=2 iDb=0; sqlite_autoindex_v0_1
   3 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   4 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   5 HaltIfNull    1299    2    2 v0.v1         01 if r[2]=null halt
REG[2] =  i:0
   6 Eq               2    6    8 (BINARY)      61 if r[2]==r[8] goto 6; xyz column 0
REG[2] =  i:0
REG[8] =   t1[c](8)
REG[6] =  i:0
   7 SCopy            2    7    0               00 r[7]=r[2]; v1
REG[7] =  i:0
   8 MakeRecord       6    2    4               00 r[4]=mkrec(r[6..7]); for xyz
REG[4] =  s3[030808...](8)
   9 SCopy            2    6    0               00 r[6]=r[2]; v1
REG[6] =  i:0
  10 SCopy            3    7    0               00 r[7]=r[3]; v2
REG[7] =  NULL
  11 MakeRecord       6    2    5               00 r[5]=mkrec(r[6..7]); for sqlite_autoindex_v0_1
REG[5] =  s3[030800...](8)
  12 NoConflict       2   14    6 1             00 key=r[6]
REG[6] =  i:0
  14 IdxInsert        1    4    0               10 key=r[4]
REG[4] =  s3[030808...](8)
  15 IdxInsert        2    5    0               11 key=r[5]
REG[5] =  s3[030800...](8)
  16 Close            1    0    0               00 
  17 Noop             2    0    0               00 
  18 Halt             0    0    0               00 
SQL: [;CREATE TABLE t1(a INTEGER PRIMARY KEY,b);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    3 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:4
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:4
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:4
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t1            00 r[7]='t1'
REG[7] =   t2[t1](8)
  21 String8          0    8    0 t1            00 r[8]='t1'
REG[8] =   t2[t1](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  23 String8          0   10    0 CREATE TABLE t1(a INTEGER PRIMARY KEY,b) 00 r[10]='CREATE TABLE t1(a INTEGER PRIMARY KEY,b)'
REG[10] =   t40[CREATE TABLE t1](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s56[06171111015D7461626C657431743105.....]tablet1t1.](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s56[06171111015D7461626C657431743105.....]tablet1t1.](8)
REG[5] =  i:4
  26 Close            1    0    0               00 
  27 SetCookie        0    1    4               00 
  28 ParseSchema      0    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[v3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s40[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:5
REG[7] =   s40[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [INSERT INTO t1 VALUES(10,4)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    1    4 0             01 usesStmtJournal=0
  15 TableLock        0    5    1 t1            00 iDb=0 root=5 write=1
  16 Goto             0    1    0               00 
   1 OpenWrite        0    5    0 2             00 root=5 iDb=0; t1
   2 Integer         10    1    0               00 r[1]=10
REG[1] =  i:10
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  i:10
   5 MustBeInt        1    0    0               00 
REG[1] =  i:10
   6 SoftNull         2    0    0               00 r[2]=NULL
   7 Integer          4    3    0               00 r[3]=4
REG[3] =  i:4
   8 NotExists        0   10    1               00 intkey=r[1]
REG[1] =  i:10
  10 MakeRecord       2    2    4 D             00 r[4]=mkrec(r[2..3])
REG[4] =  s4[03000104....](8)
  11 Insert           0    4    1 t1            13 intkey=r[1] data=r[4]
REG[4] =  s4[03000104....](8)
REG[1] =  i:10
  12 Noop             0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."v3"(x,x,x,x,x) VALUES(1,0,'radioed',nullif('radioed','radioed'),'RDAD')
;]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    1    4 0             01 usesStmtJournal=0
   9 TableLock        0    3    1 v3            00 iDb=0 root=3 write=1
  10 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 1             00 root=3 iDb=0; v3
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 MakeRecord       2    1    3               00 r[3]=mkrec(r[2])
REG[3] =  s2[0209..](8)
   5 Insert           0    3    1 v3            1B intkey=r[1] data=r[3]
REG[3] =  s2[0209..](8)
REG[1] =  i:1
   6 Noop             0    0    0               00 
   7 Halt             0    0    0               00 
SQL: [PRAGMA foreign_key_check(t1)
;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    4 0             01 usesStmtJournal=0
   3 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [INSERT INTO t1 VALUES(15,4)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    1    4 0             01 usesStmtJournal=0
  15 TableLock        0    5    1 t1            00 iDb=0 root=5 write=1
  16 Goto             0    1    0               00 
   1 OpenWrite        0    5    0 2             00 root=5 iDb=0; t1
   2 Integer         15    1    0               00 r[1]=15
REG[1] =  i:15
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  i:15
   5 MustBeInt        1    0    0               00 
REG[1] =  i:15
   6 SoftNull         2    0    0               00 r[2]=NULL
   7 Integer          4    3    0               00 r[3]=4
REG[3] =  i:4
   8 NotExists        0   10    1               00 intkey=r[1]
REG[1] =  i:15
  10 MakeRecord       2    2    4 D             00 r[4]=mkrec(r[2..3])
REG[4] =  s4[03000104....](8)
  11 Insert           0    4    1 t1            13 intkey=r[1] data=r[4]
REG[4] =  s4[03000104....](8)
REG[1] =  i:15
  12 Noop             0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [INSERT INTO t1 VALUES(16,4)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    1    4 0             01 usesStmtJournal=0
  15 TableLock        0    5    1 t1            00 iDb=0 root=5 write=1
  16 Goto             0    1    0               00 
   1 OpenWrite        0    5    0 2             00 root=5 iDb=0; t1
   2 Integer         16    1    0               00 r[1]=16
REG[1] =  i:16
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  i:16
   5 MustBeInt        1    0    0               00 
REG[1] =  i:16
   6 SoftNull         2    0    0               00 r[2]=NULL
   7 Integer          4    3    0               00 r[3]=4
REG[3] =  i:4
   8 NotExists        0   10    1               00 intkey=r[1]
REG[1] =  i:16
  10 MakeRecord       2    2    4 D             00 r[4]=mkrec(r[2..3])
REG[4] =  s4[03000104....](8)
  11 Insert           0    4    1 t1            13 intkey=r[1] data=r[4]
REG[4] =  s4[03000104....](8)
REG[1] =  i:16
  12 Noop             0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [INSERT INTO t1 VALUES(18,5)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    1    4 0             01 usesStmtJournal=0
  15 TableLock        0    5    1 t1            00 iDb=0 root=5 write=1
  16 Goto             0    1    0               00 
   1 OpenWrite        0    5    0 2             00 root=5 iDb=0; t1
   2 Integer         18    1    0               00 r[1]=18
REG[1] =  i:18
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  i:18
   5 MustBeInt        1    0    0               00 
REG[1] =  i:18
   6 SoftNull         2    0    0               00 r[2]=NULL
   7 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
   8 NotExists        0   10    1               00 intkey=r[1]
REG[1] =  i:18
  10 MakeRecord       2    2    4 D             00 r[4]=mkrec(r[2..3])
REG[4] =  s4[03000105....](8)
  11 Insert           0    4    1 t1            13 intkey=r[1] data=r[4]
REG[4] =  s4[03000105....](8)
REG[1] =  i:18
  12 Noop             0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [PRAGMA foreign_key_check(v3)
;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    4 0             01 usesStmtJournal=0
  16 TableLock        0    3    0 v3            00 iDb=0 root=3 write=0
  17 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
  18 Goto             0    1    0               00 
   1 OpenRead         0    3    0 1             00 root=3 iDb=0; v3
   2 String8          0    3    0 v3            00 r[3]='v3'
REG[3] =   t2[v3](8)
   3 OpenRead         1    2    0 k(1,)         00 root=2 iDb=0
   4 Rewind           0   14    0               00 
   5 Column           0    0    8               00 r[8]=v3.x
REG[8] =  i:1
   6 IsNull           8   13    0               00 if r[8]==NULL goto 13
REG[8] =  i:1
   7 MakeRecord       8    1    7 A             00 r[7]=mkrec(r[8])
REG[7] =  s2[0209..](8)
   8 Found            1   13    7 0             00 key=r[7]
REG[7] =  s2[0209..](8)
   9 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:1
  10 String8          0    5    0 v0            00 r[5]='v0'
REG[5] =   t2[v0](8)
  11 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  12 ResultRow        3    4    0               00 output=r[3..6]
REG[3] =   t2[v3](8)
REG[4] =  i:1
REG[5] =   t2[v0](8)
REG[6] =  i:0
  13 Next             0    5    0               00 
  14 Halt             0    0    0               00 
SQL: [UPDATE v0 SET v1=1 WHERE v1=4
;]
VDBE Trace:
   0 Init             0   35    0               00 Start at 35
  35 Transaction      0    1    4 0             01 usesStmtJournal=1
  36 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
  37 String8          0   15    0 c             00 r[15]='c'
REG[15] =   t1[c](8)
  38 Goto             0    1    0               00 
   1 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
   2 Noop             3    1    0               00 
   3 OpenWrite        2    2    0 k(1,)         02 root=2 iDb=0; sqlite_autoindex_v0_1
   4 Explain          0    0    0 SEARCH TABLE v0 USING PRIMARY KEY (v1=?) 00 
   5 Integer          4   12    0               00 r[12]=4
REG[12] =  i:4
   6 SeekGE           2    9   12 1             00 key=r[12]
REG[12] =  i:4
   9 OpenWrite        1    4    0 k(2,,)        00 root=4 iDb=0; xyz
  10 IsNull          10   33    0               00 if r[10]==NULL goto 33
REG[10] =  NULL
  33 Noop             1    0    0               00 
  34 Halt             0    0    0               00 
SQL: [INSERT INTO t1 VALUES(23,5)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    1    4 0             01 usesStmtJournal=0
  15 TableLock        0    5    1 t1            00 iDb=0 root=5 write=1
  16 Goto             0    1    0               00 
   1 OpenWrite        0    5    0 2             00 root=5 iDb=0; t1
   2 Integer         23    1    0               00 r[1]=23
REG[1] =  i:23
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  i:23
   5 MustBeInt        1    0    0               00 
REG[1] =  i:23
   6 SoftNull         2    0    0               00 r[2]=NULL
   7 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
   8 NotExists        0   10    1               00 intkey=r[1]
REG[1] =  i:23
  10 MakeRecord       2    2    4 D             00 r[4]=mkrec(r[2..3])
REG[4] =  s4[03000105....](8)
  11 Insert           0    4    1 t1            13 intkey=r[1] data=r[4]
REG[4] =  s4[03000105....](8)
REG[1] =  i:23
  12 Noop             0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [;CREATE TABLE t1b(abc PRIMARY KEY, c);]
VDBE Trace:
   0 Init             0   42    0               00 Start at 42
  42 Transaction      0    1    4 0             01 usesStmtJournal=0
  43 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  44 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:6
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:5
  10 Close            0    0    0               00 
  11 Noop             0   23    0               00 
  12 CreateIndex      0    4    0               00 r[4]=root iDb=0
REG[4] =  i:7
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:6
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_t1b_1 00 r[7]='sqlite_autoindex_t1b_1'
REG[7] =   t22[sqlite_autoinde](8)
  17 String8          0    8    0 t1b           00 r[8]='t1b'
REG[8] =   t3[t1b](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:7
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s37[061739130100696E64657873716C6974..9...indexsqlit](8)
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  s37[061739130100696E64657873716C6974..9...indexsqlit](8)
REG[5] =  i:6
  22 Close            1    0    0               00 
  23 Close            0    0    0               00 
  24 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  25 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  26 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  27 MustBeInt        1   30    0               00 
REG[1] =  i:5
  28 NotExists        2   30    1               00 intkey=r[1]; pk
REG[1] =  i:5
  29 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:5
  30 IsNull          13   38    0               00 if r[13]==NULL goto 38
REG[13] =  i:5
  31 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  32 String8          0   15    0 t1b           00 r[15]='t1b'
REG[15] =   t3[t1b](8)
  33 String8          0   16    0 t1b           00 r[16]='t1b'
REG[16] =   t3[t1b](8)
  34 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:6
  35 String8          0   18    0 CREATE TABLE t1b(abc PRIMARY KEY, c) 00 r[18]='CREATE TABLE t1b(abc PRIMARY KEY, c)'
REG[18] =   t36[CREATE TABLE t1](8)
  36 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s54[0617131301557461626C657431627431.....Utablet1bt1](8)
  37 Insert           2   19   13               00 intkey=r[13] data=r[19]
REG[19] =  s54[0617131301557461626C657431627431.....Utablet1bt1](8)
REG[13] =  i:5
  38 Close            2    0    0               00 
  39 SetCookie        0    1    5               00 
  40 ParseSchema      0    0    0 tbl_name='t1b' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    5 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1b           00 r[2]='t1b'
REG[2] =   t3[t1b](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[t1b](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[t1b](8)
REG[1] =   s2[v3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[t1b](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[t1b](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[t1b](8)
REG[1] =   s3[t1b](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s3[t1b](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:6
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s36[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s3[t1b](8)
REG[6] =  i:6
REG[7] =   s36[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[t1b](8)
REG[1] =   s3[t1b](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s22[sqlite_autoinde](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:7
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =  NULL
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s22[sqlite_autoinde](8)
REG[6] =  i:7
REG[7] =  NULL
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  41 Halt             0    0    0               00 
SQL: [DELETE FROM v3 WHERE x=1
;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    1    5 0             01 usesStmtJournal=0
  14 TableLock        0    3    1 v3            00 iDb=0 root=3 write=1
  15 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  16 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    3    0 1             00 root=3 iDb=0; v3
   3 Explain          0    0    0 SCAN TABLE v3 00 
   4 Rewind           0   11    0               00 
   5 Column           0    0    2               00 r[2]=v3.x
REG[2] =  i:1
   6 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =  i:1
REG[2] =  i:1
   7 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:1
   8 Once             0    9    0               00 
   9 Delete           0    1    0 v3            02 
  10 Next             0    5    0               01 
  11 Noop             0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [PRAGMA foreign_key_check(t1)
;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    5 0             01 usesStmtJournal=0
   3 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [INSERT INTO t1b VALUES(27,5)
;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    1    5 0             01 usesStmtJournal=0
  18 TableLock        0    6    1 t1b           00 iDb=0 root=6 write=1
  19 Goto             0    1    0               00 
   1 OpenWrite        0    6    0 2             00 root=6 iDb=0; t1b
   2 OpenWrite        1    7    0 k(2,,)        00 root=7 iDb=0; sqlite_autoindex_t1b_1
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   4 Integer         27    2    0               00 r[2]=27
REG[2] =  i:27
   5 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
   6 SCopy            2    5    0               00 r[5]=r[2]; abc
REG[5] =  i:27
   7 IntCopy          1    6    0               00 r[6]=r[1]; rowid
REG[6] =  i:1
   8 MakeRecord       5    2    4               00 r[4]=mkrec(r[5..6]); for sqlite_autoindex_t1b_1
REG[4] =  s4[0301091B....](8)
   9 NoConflict       1   11    5 1             00 key=r[5]
REG[5] =  i:27
  11 IdxInsert        1    4    0               10 key=r[4]
REG[4] =  s4[0301091B....](8)
  12 MakeRecord       2    2    8               00 r[8]=mkrec(r[2..3])
REG[8] =  s5[0301011B05.....](8)
  13 Insert           0    8    1 t1b           1B intkey=r[1] data=r[8]
REG[8] =  s5[0301011B05.....](8)
REG[1] =  i:1
  14 Close            0    0    0               00 
  15 Noop             1    0    0               00 
  16 Halt             0    0    0               00 
SQL: [PRAGMA foreign_key_check(t1b)
;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    5 0             01 usesStmtJournal=0
   3 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [INSERT INTO t1 VALUES(29,5)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    1    5 0             01 usesStmtJournal=0
  15 TableLock        0    5    1 t1            00 iDb=0 root=5 write=1
  16 Goto             0    1    0               00 
   1 OpenWrite        0    5    0 2             00 root=5 iDb=0; t1
   2 Integer         29    1    0               00 r[1]=29
REG[1] =  i:29
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  i:29
   5 MustBeInt        1    0    0               00 
REG[1] =  i:29
   6 SoftNull         2    0    0               00 r[2]=NULL
   7 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
   8 NotExists        0   10    1               00 intkey=r[1]
REG[1] =  i:29
  10 MakeRecord       2    2    4 D             00 r[4]=mkrec(r[2..3])
REG[4] =  s4[03000105....](8)
  11 Insert           0    4    1 t1            13 intkey=r[1] data=r[4]
REG[4] =  s4[03000105....](8)
REG[1] =  i:29
  12 Noop             0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [INSERT INTO v0 VALUES(31,5)
;]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      0    1    5 0             01 usesStmtJournal=0
  21 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
  22 String8          0    8    0 c             00 r[8]='c'
REG[8] =   t1[c](8)
  23 Goto             0    1    0               00 
   1 OpenWrite        1    4    0 k(2,,)        00 root=4 iDb=0; xyz
   2 OpenWrite        2    2    0 k(1,)         00 root=2 iDb=0; sqlite_autoindex_v0_1
   3 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   4 Integer         31    2    0               00 r[2]=31
REG[2] =  i:31
   5 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
   6 HaltIfNull    1299    2    2 v0.v1         01 if r[2]=null halt
REG[2] =  i:31
   7 Eq               2    6    8 (BINARY)      61 if r[2]==r[8] goto 6; xyz column 0
REG[2] =  i:31
REG[8] =   t1[c](8)
REG[6] =  i:0
   8 SCopy            2    7    0               00 r[7]=r[2]; v1
REG[7] =  i:31
   9 MakeRecord       6    2    4               00 r[4]=mkrec(r[6..7]); for xyz
REG[4] =  s4[0308011F....](8)
  10 SCopy            2    6    0               00 r[6]=r[2]; v1
REG[6] =  i:31
  11 SCopy            3    7    0               00 r[7]=r[3]; v2
REG[7] =  i:5
  12 MakeRecord       6    2    5               00 r[5]=mkrec(r[6..7]); for sqlite_autoindex_v0_1
REG[5] =  s5[0301011F05.....](8)
  13 NoConflict       2   15    6 1             00 key=r[6]
REG[6] =  i:31
  15 IdxInsert        1    4    0               10 key=r[4]
REG[4] =  s4[0308011F....](8)
  16 IdxInsert        2    5    0               11 key=r[5]
REG[5] =  s5[0301011F05.....](8)
  17 Close            1    0    0               00 
  18 Noop             2    0    0               00 
  19 Halt             0    0    0               00 
SQL: [COMMIT
  
;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       1    0    0               00 
SQL: [SELECT DISTINCT v1 FROM v0 ORDER BY v1
;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    0    5 0             01 usesStmtJournal=0
  34 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
  35 Goto             0    1    0               00 
   1 Noop             1    3    0               00 
   2 Noop             2    1    0               00 
   3 Integer          0    3    0               00 r[3]=0; clear abort flag
REG[3] =  i:0
   4 Integer          0    2    0               00 r[2]=0; indicate accumulator empty
REG[2] =  i:0
   5 Null             0    6    6               00 r[6..6]=NULL
REG[6] =  NULL
   6 Gosub            5   30    0               00 
REG[5] =  i:6
  30 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
  31 Return           5    0    0               00 
REG[5] =  i:6
   7 OpenRead         3    2    0 k(1,)         00 root=2 iDb=0; sqlite_autoindex_v0_1
   8 Explain          0    0    0 SCAN TABLE v0 00 
   9 Rewind           3   20    8 0             00 
  10 Column           3    0    7               00 r[7]=v0.v1
REG[7] =  i:0
  11 Compare          6    7    1 k(1,B)        00 r[6] <-> r[7]
REG[6] =  NULL
REG[7] =  i:0
  12 Jump            13   17   13               00 
  13 Move             7    6    1               00 r[6]=r[7]
REG[6] =  i:0
  14 Gosub            4   25    0               00 output one row
REG[4] =  i:14
  25 IfPos            2   27    0               00 if r[2]>0 then r[2]-=0, goto 27; Groupby result generator entry point
REG[2] =  i:0
  26 Return           4    0    0               00 
REG[4] =  i:14
  15 IfPos            3   32    0               00 if r[3]>0 then r[3]-=0, goto 32; check abort flag
REG[3] =  i:0
  16 Gosub            5   30    0               00 reset accumulator
REG[5] =  i:16
  30 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
  31 Return           5    0    0               00 
REG[5] =  i:16
  17 Column           3    0    1               00 r[1]=v0.v1
REG[1] =  i:0
  18 Integer          1    2    0               00 r[2]=1; indicate data in accumulator
REG[2] =  i:1
  19 Next             3   10    0               01 
  10 Column           3    0    7               00 r[7]=v0.v1
REG[7] =  i:31
  11 Compare          6    7    1 k(1,B)        00 r[6] <-> r[7]
REG[6] =  i:0
REG[7] =  i:31
  12 Jump            13   17   13               00 
  13 Move             7    6    1               00 r[6]=r[7]
REG[6] =  i:31
  14 Gosub            4   25    0               00 output one row
REG[4] =  i:14
  25 IfPos            2   27    0               00 if r[2]>0 then r[2]-=0, goto 27; Groupby result generator entry point
REG[2] =  i:1
  27 Copy             1    8    0               00 r[8]=r[1]
REG[8] =  i:0
  28 ResultRow        8    1    0               00 output=r[8]
REG[8] =  i:0
  29 Return           4    0    0               00 end groupby result generator
REG[4] =  i:14
  15 IfPos            3   32    0               00 if r[3]>0 then r[3]-=0, goto 32; check abort flag
REG[3] =  i:0
  16 Gosub            5   30    0               00 reset accumulator
REG[5] =  i:16
  30 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
  31 Return           5    0    0               00 
REG[5] =  i:16
  17 Column           3    0    1               00 r[1]=v0.v1
REG[1] =  i:31
  18 Integer          1    2    0               00 r[2]=1; indicate data in accumulator
REG[2] =  i:1
  19 Next             3   10    0               01 
  20 Close            3    0    0               00 
  21 Gosub            4   25    0               00 output final row
REG[4] =  i:21
  25 IfPos            2   27    0               00 if r[2]>0 then r[2]-=0, goto 27; Groupby result generator entry point
REG[2] =  i:1
  27 Copy             1    8    0               00 r[8]=r[1]
REG[8] =  i:31
  28 ResultRow        8    1    0               00 output=r[8]
REG[8] =  i:31
  29 Return           4    0    0               00 end groupby result generator
REG[4] =  i:21
  22 Goto             0   32    0               00 
  32 Halt             0    0    0               00 
SQL: [SELECT count(*) FROM t1
;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    0    5 0             01 usesStmtJournal=0
   8 TableLock        0    5    0 t1            00 iDb=0 root=5 write=0
   9 Goto             0    1    0               00 
   1 OpenRead         1    5    0 1             00 root=5 iDb=0
   2 Count            1    1    0               00 r[1]=count()
REG[1] =  i:6
   3 Close            1    0    0               00 
   4 Copy             1    2    0               00 r[2]=r[1]
REG[2] =  i:6
   5 ResultRow        2    1    0               00 output=r[2]
REG[2] =  i:6
   6 Halt             0    0    0               00 
SQL: [PRAGMA database_list
;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 String8          0    2    0 main          00 r[2]='main'
REG[2] =   t4[main](8)
   3 String8          0    3    0               00 r[3]=''
REG[3] =   t0[](8)
   4 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =  i:0
REG[2] =   t4[main](8)
REG[3] =   t0[](8)
   5 Halt             0    0    0               00 
SQL: [;;
;PRAGMA foreign_keys
;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Int64            0    1    0 0             00 r[1]=0
REG[1] =  i:0
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   3 Halt             0    0    0               00 
SQL: [SELECT max(v1)/avg(v1), max(v2)/avg(v2) FROM v0
;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0    5 0             01 usesStmtJournal=0
  26 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
  27 Goto             0    1    0               00 
   1 Null             0    1    6               00 r[1..6]=NULL
REG[1] =  NULL
   2 OpenRead         1    2    0 k(1,)         00 root=2 iDb=0; sqlite_autoindex_v0_1
   3 Explain          0    0    0 SCAN TABLE v0 00 
   4 Rewind           1   16    7 0             00 
   5 Column           1    0    7               00 r[7]=v0.v1
REG[7] =  i:0
   6 CollSeq          0    0    0 (BINARY)      00 
   7 AggStep0         0    7    1 max(1)        01 accum=r[1] step(r[7])
REG[7] =  i:0
   8 Column           1    0    7               00 r[7]=v0.v1
REG[7] =  i:0
   9 AggStep0         0    7    2 avg(1)        01 accum=r[2] step(r[7])
REG[7] =  i:0
  10 Column           1    1    7               00 r[7]=v0.v2
REG[7] =  NULL
  11 CollSeq          0    0    0 (BINARY)      00 
  12 AggStep0         0    7    3 max(1)        01 accum=r[3] step(r[7])
REG[7] =  NULL
  13 Column           1    1    7               00 r[7]=v0.v2
REG[7] =  NULL
  14 AggStep0         0    7    4 avg(1)        01 accum=r[4] step(r[7])
REG[7] =  NULL
  15 Next             1    5    0               01 
   5 Column           1    0    7               00 r[7]=v0.v1
REG[7] =  i:31
   6 CollSeq          0    0    0 (BINARY)      00 
   7 AggStep          0    7    1 max(1)        01 accum=r[1] step(r[7])
REG[7] =  i:31
   8 Column           1    0    7               00 r[7]=v0.v1
REG[7] =  i:31
   9 AggStep          0    7    2 avg(1)        01 accum=r[2] step(r[7])
REG[7] =  i:31
  10 Column           1    1    7               00 r[7]=v0.v2
REG[7] =  i:5
  11 CollSeq          0    0    0 (BINARY)      00 
  12 AggStep          0    7    3 max(1)        01 accum=r[3] step(r[7])
REG[7] =  i:5
  13 Column           1    1    7               00 r[7]=v0.v2
REG[7] =  i:5
  14 AggStep          0    7    4 avg(1)        01 accum=r[4] step(r[7])
REG[7] =  i:5
  15 Next             1    5    0               01 
  16 Close            1    0    0               00 
  17 AggFinal         1    1    0 max(1)        00 accum=r[1] N=1
  18 AggFinal         2    1    0 avg(1)        00 accum=r[2] N=1
  19 AggFinal         3    1    0 max(1)        00 accum=r[3] N=1
  20 AggFinal         4    1    0 avg(1)        00 accum=r[4] N=1
  21 Divide           2    1    8               00 r[8]=r[1]/r[2]
REG[2] =  r:15.5
REG[1] =  i:31
REG[8] =  r:2
  22 Divide           4    3    9               00 r[9]=r[3]/r[4]
REG[4] =  r:5
REG[3] =  i:5
REG[9] =  r:1
  23 ResultRow        8    2    0               00 output=r[8..9]
REG[8] =  r:2
REG[9] =  r:1
  24 Halt             0    0    0               00 
SQL: [SELECT x, count(*) FROM v3 GROUP BY x ORDER BY x
;]
VDBE Trace:
   0 Init             0   42    0               00 Start at 42
  42 Transaction      0    0    5 0             01 usesStmtJournal=0
  43 TableLock        0    3    0 v3            00 iDb=0 root=3 write=0
  44 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 SorterOpen       2    1    0 k(1,B)        00 
   3 Integer          0    4    0               00 r[4]=0; clear abort flag
REG[4] =  i:0
   4 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
REG[3] =  i:0
   5 Null             0    7    7               00 r[7..7]=NULL
REG[7] =  NULL
   6 Gosub            6   39    0               00 
REG[6] =  i:6
  39 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  40 Return           6    0    0               00 
REG[6] =  i:6
   7 OpenRead         0    3    0 1             00 root=3 iDb=0; v3
   8 Explain          0    0    0 SCAN TABLE v3 00 
   9 Rewind           0   14    0               00 
  14 Close            0    0    0               00 
  15 OpenPseudo       3   10    1               00 1 columns in r[10]
  16 SorterSort       2   41    0               00 GROUP BY sort
  41 Halt             0    0    0               00 
SQL: [CREATE TABLE def(d TEXT);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    5 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:8
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:7
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:7
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:7
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:7
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:7
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:7
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 def           00 r[7]='def'
REG[7] =   t3[def](8)
  21 String8          0    8    0 def           00 r[8]='def'
REG[8] =   t3[def](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:8
  23 String8          0   10    0 CREATE TABLE def(d TEXT) 00 r[10]='CREATE TABLE def(d TEXT)'
REG[10] =   t24[CREATE TABLE de](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s42[06171313013D7461626C656465666465.....=tabledefde](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s42[06171313013D7461626C656465666465.....=tabledefde](8)
REG[5] =  i:7
  26 Close            1    0    0               00 
  27 SetCookie        0    1    6               00 
  28 ParseSchema      0    0    0 tbl_name='def' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 def           00 r[2]='def'
REG[2] =   t3[def](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[def](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[def](8)
REG[1] =   s2[v3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[def](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[def](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[def](8)
REG[1] =   s3[t1b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[def](8)
REG[1] =   s3[t1b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[def](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[def](8)
REG[1] =   s3[def](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s3[def](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:8
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s24[CREATE TABLE de](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s3[def](8)
REG[6] =  i:8
REG[7] =   s24[CREATE TABLE de](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;CREATE TABLE IF NOT EXISTS "main"."e"(
  f INTEGER PRIMARY KEY,
  i INT,
  t2 INT,
  ab TEXT,
  seq TEXT,
  counter TEXT
);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    6 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:9
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:8
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:8
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:8
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:8
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:8
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:8
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 e             00 r[7]='e'
REG[7] =   t1[e](8)
  21 String8          0    8    0 e             00 r[8]='e'
REG[8] =   t1[e](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:9
  23 String8          0   10    0 CREATE TABLE "e"(
  f INTEGER PRIMARY KEY,
  i INT,
  t2 INT,
  ab TEXT,
  seq TEXT,
  counter TEXT
) 00 r[10]='CREATE TABLE "e"(
  f INTEGER PRIMARY KEY,
  i INT,
  t2 INT,
  ab TEXT,
  seq TEXT,
  count
REG[10] =   t101[CREATE TABLE "e](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s116[07170F0F0181577461626C6565650943......Wtableee.C](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s116[07170F0F0181577461626C6565650943......Wtableee.C](8)
REG[5] =  i:8
  26 Close            1    0    0               00 
  27 SetCookie        0    1    7               00 
  28 ParseSchema      0    0    0 tbl_name='e' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    7 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 e             00 r[2]='e'
REG[2] =   t1[e](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[e](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[e](8)
REG[1] =   s2[v3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[e](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[e](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[e](8)
REG[1] =   s3[t1b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[e](8)
REG[1] =   s3[t1b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[def](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[e](8)
REG[1] =   s3[def](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[e](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[e](8)
REG[1] =   s1[e](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[e](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:9
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s101[CREATE TABLE "e](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[e](8)
REG[6] =  i:9
REG[7] =   s101[CREATE TABLE "e](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [SELECT d, min(d) FROM def GROUP BY d ORDER BY d
;]
VDBE Trace:
   0 Init             0   45    0               00 Start at 45
  45 Transaction      0    0    7 0             01 usesStmtJournal=0
  46 TableLock        0    8    0 def           00 iDb=0 root=8 write=0
  47 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 SorterOpen       2    1    0 k(1,B)        00 
   3 Integer          0    4    0               00 r[4]=0; clear abort flag
REG[4] =  i:0
   4 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
REG[3] =  i:0
   5 Null             0    7    7               00 r[7..7]=NULL
REG[7] =  NULL
   6 Gosub            6   42    0               00 
REG[6] =  i:6
  42 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  43 Return           6    0    0               00 
REG[6] =  i:6
   7 OpenRead         0    8    0 1             00 root=8 iDb=0; def
   8 Explain          0    0    0 SCAN TABLE def 00 
   9 Rewind           0   14    0               00 
  14 Close            0    0    0               00 
  15 OpenPseudo       3   10    1               00 1 columns in r[10]
  16 SorterSort       2   44    0               00 GROUP BY sort
  44 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."v0"(v1,v1,v1,v1,v1) VALUES(1,0,'kidnappings',nullif('kidnappings','kidnappings'),'CADMABAMC')
;]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    1    7 0             01 usesStmtJournal=0
  20 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
  21 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  22 String8          0    8    0 c             00 r[8]='c'
REG[8] =   t1[c](8)
  23 Goto             0    1    0               00 
   1 OpenWrite        1    4    0 k(2,,)        00 root=4 iDb=0; xyz
   2 OpenWrite        2    2    0 k(1,)         00 root=2 iDb=0; sqlite_autoindex_v0_1
   3 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   4 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   5 HaltIfNull    1299    2    2 v0.v1         01 if r[2]=null halt
REG[2] =  i:1
   6 Eq               2    6    8 (BINARY)      61 if r[2]==r[8] goto 6; xyz column 0
REG[2] =  i:1
REG[8] =   t1[c](8)
REG[6] =  i:0
   7 SCopy            2    7    0               00 r[7]=r[2]; v1
REG[7] =  i:1
   8 MakeRecord       6    2    4               00 r[4]=mkrec(r[6..7]); for xyz
REG[4] =  s3[030809...](8)
   9 SCopy            2    6    0               00 r[6]=r[2]; v1
REG[6] =  i:1
  10 SCopy            3    7    0               00 r[7]=r[3]; v2
REG[7] =  NULL
  11 MakeRecord       6    2    5               00 r[5]=mkrec(r[6..7]); for sqlite_autoindex_v0_1
REG[5] =  s3[030900...](8)
  12 NoConflict       2   14    6 1             00 key=r[6]
REG[6] =  i:1
  14 IdxInsert        1    4    0               10 key=r[4]
REG[4] =  s3[030809...](8)
  15 IdxInsert        2    5    0               11 key=r[5]
REG[5] =  s3[030900...](8)
  16 Close            1    0    0               00 
  17 Noop             2    0    0               00 
  18 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."def"(d,d,d,d,d) VALUES(1,0,'kingdom',nullif('kingdom','kingdom'),'CAMCDAM')
;]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    1    7 0             01 usesStmtJournal=0
   9 TableLock        0    8    1 def           00 iDb=0 root=8 write=1
  10 Goto             0    1    0               00 
   1 OpenWrite        0    8    0 1             00 root=8 iDb=0; def
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 MakeRecord       2    1    3 B             00 r[3]=mkrec(r[2])
REG[3] =  s3[020F31..1](8)
   5 Insert           0    3    1 def           1B intkey=r[1] data=r[3]
REG[3] =  s3[020F31..1](8)
REG[1] =  i:1
   6 Noop             0    0    0               00 
   7 Halt             0    0    0               00 
SQL: [SELECT v2, avg(v2) FROM v0 GROUP BY v2 ORDER BY v2
;]
VDBE Trace:
   0 Init             0   43    0               00 Start at 43
  43 Transaction      0    0    7 0             01 usesStmtJournal=0
  44 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
  45 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 SorterOpen       2    1    0 k(1,B)        00 
   3 Integer          0    4    0               00 r[4]=0; clear abort flag
REG[4] =  i:0
   4 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
REG[3] =  i:0
   5 Null             0    7    7               00 r[7..7]=NULL
REG[7] =  NULL
   6 Gosub            6   40    0               00 
REG[6] =  i:6
  40 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  41 Return           6    0    0               00 
REG[6] =  i:6
   7 OpenRead         3    2    0 k(1,)         00 root=2 iDb=0; sqlite_autoindex_v0_1
   8 Explain          0    0    0 SCAN TABLE v0 00 
   9 Rewind           3   14    9 0             00 
  10 Column           3    1    9               00 r[9]=v0.v2
REG[9] =  NULL
  11 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s2[0200..](8)
  12 SorterInsert     2   10    0               00 
REG[10] =  s2[0200..](8)
  13 Next             3   10    0               01 
  10 Column           3    1    9               00 r[9]=v0.v2
REG[9] =  NULL
  11 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s2[0200..](8)
  12 SorterInsert     2   10    0               00 
REG[10] =  s2[0200..](8)
  13 Next             3   10    0               01 
  10 Column           3    1    9               00 r[9]=v0.v2
REG[9] =  i:5
  11 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s3[020105...](8)
  12 SorterInsert     2   10    0               00 
REG[10] =  s3[020105...](8)
  13 Next             3   10    0               01 
  14 Close            3    0    0               00 
  15 OpenPseudo       4   10    1               00 1 columns in r[10]
  16 SorterSort       2   42    0               00 GROUP BY sort
  17 SorterData       2   10    4               00 r[10]=data
  18 Column           4    0    8               00 r[8]=
REG[8] =  NULL
  19 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  NULL
REG[8] =  NULL
  20 Jump            21   25   21               00 
  25 Column           4    0    9               00 r[9]=
REG[9] =  NULL
  26 AggStep0         0    9    2 avg(1)        01 accum=r[2] step(r[9])
REG[9] =  NULL
  27 Column           4    0    1               00 r[1]=
REG[1] =  NULL
  28 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  29 SorterNext       2   17    0               00 
  17 SorterData       2   10    4               00 r[10]=data
  18 Column           4    0    8               00 r[8]=
REG[8] =  NULL
  19 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  NULL
REG[8] =  NULL
  20 Jump            21   25   21               00 
  25 Column           4    0    9               00 r[9]=
REG[9] =  NULL
  26 AggStep          0    9    2 avg(1)        01 accum=r[2] step(r[9])
REG[9] =  NULL
  27 Column           4    0    1               00 r[1]=
REG[1] =  NULL
  28 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  29 SorterNext       2   17    0               00 
  17 SorterData       2   10    4               00 r[10]=data
  18 Column           4    0    8               00 r[8]=
REG[8] =  i:5
  19 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  NULL
REG[8] =  i:5
  20 Jump            21   25   21               00 
  21 Move             8    7    1               00 r[7]=r[8]
REG[7] =  i:5
  22 Gosub            5   34    0               00 output one row
REG[5] =  i:22
  34 IfPos            3   36    0               00 if r[3]>0 then r[3]-=0, goto 36; Groupby result generator entry point
REG[3] =  i:1
  36 AggFinal         2    1    0 avg(1)        00 accum=r[2] N=1
  37 Copy             1   11    1               00 r[11..12]=r[1..2]
REG[11] =  NULL
REG[12] =  NULL
  38 ResultRow       11    2    0               00 output=r[11..12]
REG[11] =  NULL
REG[12] =  NULL
  39 Return           5    0    0               00 end groupby result generator
REG[5] =  i:22
  23 IfPos            4   42    0               00 if r[4]>0 then r[4]-=0, goto 42; check abort flag
REG[4] =  i:0
  24 Gosub            6   40    0               00 reset accumulator
REG[6] =  i:24
  40 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  41 Return           6    0    0               00 
REG[6] =  i:24
  25 Column           4    0    9               00 r[9]=
REG[9] =  i:5
  26 AggStep          0    9    2 avg(1)        01 accum=r[2] step(r[9])
REG[9] =  i:5
  27 Column           4    0    1               00 r[1]=
REG[1] =  i:5
  28 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  29 SorterNext       2   17    0               00 
  30 Gosub            5   34    0               00 output final row
REG[5] =  i:30
  34 IfPos            3   36    0               00 if r[3]>0 then r[3]-=0, goto 36; Groupby result generator entry point
REG[3] =  i:1
  36 AggFinal         2    1    0 avg(1)        00 accum=r[2] N=1
  37 Copy             1   11    1               00 r[11..12]=r[1..2]
REG[11] =  i:5
REG[12] =  r:5
  38 ResultRow       11    2    0               00 output=r[11..12]
REG[11] =  i:5
REG[12] =  r:5
  39 Return           5    0    0               00 end groupby result generator
REG[5] =  i:30
  31 Goto             0   42    0               00 
  42 Halt             0    0    0               00 
SQL: [SELECT c, avg(abc)+1 FROM t1b GROUP BY c ORDER BY c
;]
VDBE Trace:
   0 Init             0   45    0               00 Start at 45
  45 Transaction      0    0    7 0             01 usesStmtJournal=0
  46 TableLock        0    6    0 t1b           00 iDb=0 root=6 write=0
  47 Integer          1   16    0               00 r[16]=1
REG[16] =  i:1
  48 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 SorterOpen       2    2    0 k(1,B)        00 
   3 Integer          0    5    0               00 r[5]=0; clear abort flag
REG[5] =  i:0
   4 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
   5 Null             0    8    8               00 r[8..8]=NULL
REG[8] =  NULL
   6 Gosub            7   42    0               00 
REG[7] =  i:6
  42 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  43 Return           7    0    0               00 
REG[7] =  i:6
   7 OpenRead         0    6    0 2             00 root=6 iDb=0; t1b
   8 Explain          0    0    0 SCAN TABLE t1b 00 
   9 Rewind           0   15    0               00 
  10 Column           0    1   10               00 r[10]=t1b.c
REG[10] =  i:5
  11 Column           0    0   11               00 r[11]=t1b.abc
REG[11] =  i:27
  12 MakeRecord      10    2   12               00 r[12]=mkrec(r[10..11])
REG[12] =  s5[030101051B.....](8)
  13 SorterInsert     2   12    0               00 
REG[12] =  s5[030101051B.....](8)
  14 Next             0   10    0               01 
  15 Close            0    0    0               00 
  16 OpenPseudo       3   12    2               00 2 columns in r[12]
  17 SorterSort       2   44    0               00 GROUP BY sort
  18 SorterData       2   12    3               00 r[12]=data
  19 Column           3    0    9               00 r[9]=
REG[9] =  i:5
  20 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  NULL
REG[9] =  i:5
  21 Jump            22   26   22               00 
  22 Move             9    8    1               00 r[8]=r[9]
REG[8] =  i:5
  23 Gosub            6   35    0               00 output one row
REG[6] =  i:23
  35 IfPos            4   37    0               00 if r[4]>0 then r[4]-=0, goto 37; Groupby result generator entry point
REG[4] =  i:0
  36 Return           6    0    0               00 
REG[6] =  i:23
  24 IfPos            5   44    0               00 if r[5]>0 then r[5]-=0, goto 44; check abort flag
REG[5] =  i:0
  25 Gosub            7   42    0               00 reset accumulator
REG[7] =  i:25
  42 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  43 Return           7    0    0               00 
REG[7] =  i:25
  26 Column           3    1   10               00 r[10]=
REG[10] =  i:27
  27 AggStep0         0   10    2 avg(1)        01 accum=r[2] step(r[10])
REG[10] =  i:27
  28 Column           3    0    1               00 r[1]=
REG[1] =  i:5
  29 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  30 SorterNext       2   18    0               00 
  31 Gosub            6   35    0               00 output final row
REG[6] =  i:31
  35 IfPos            4   37    0               00 if r[4]>0 then r[4]-=0, goto 37; Groupby result generator entry point
REG[4] =  i:1
  37 AggFinal         2    1    0 avg(1)        00 accum=r[2] N=1
  38 Copy             1   13    0               00 r[13]=r[1]
REG[13] =  i:5
  39 Add             16    2   14               00 r[14]=r[16]+r[2]
REG[16] =  i:1
REG[2] =  r:27
REG[14] =  r:28
  40 ResultRow       13    2    0               00 output=r[13..14]
REG[13] =  i:5
REG[14] =  r:28
  41 Return           6    0    0               00 end groupby result generator
REG[6] =  i:31
  32 Goto             0   44    0               00 
  44 Halt             0    0    0               00 
SQL: [SELECT b*2+1, avg(b)-min(b) FROM t1 GROUP BY b ORDER BY b
;]
VDBE Trace:
   0 Init             0   50    0               00 Start at 50
  50 Transaction      0    0    7 0             01 usesStmtJournal=0
  51 TableLock        0    5    0 t1            00 iDb=0 root=5 write=0
  52 Integer          2   17    0               00 r[17]=2
REG[17] =  i:2
  53 Integer          1   18    0               00 r[18]=1
REG[18] =  i:1
  54 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 SorterOpen       2    1    0 k(1,B)        00 
   3 Integer          0    5    0               00 r[5]=0; clear abort flag
REG[5] =  i:0
   4 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
   5 Null             0    8    8               00 r[8..8]=NULL
REG[8] =  NULL
   6 Gosub            7   47    0               00 
REG[7] =  i:6
  47 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  48 Return           7    0    0               00 
REG[7] =  i:6
   7 OpenRead         0    5    0 2             00 root=5 iDb=0; t1
   8 Explain          0    0    0 SCAN TABLE t1 00 
   9 Rewind           0   14    0               00 
  10 Column           0    1   10               00 r[10]=t1.b
REG[10] =  i:4
  11 MakeRecord      10    1   11               00 r[11]=mkrec(r[10])
REG[11] =  s3[020104...](8)
  12 SorterInsert     2   11    0               00 
REG[11] =  s3[020104...](8)
  13 Next             0   10    0               01 
  10 Column           0    1   10               00 r[10]=t1.b
REG[10] =  i:4
  11 MakeRecord      10    1   11               00 r[11]=mkrec(r[10])
REG[11] =  s3[020104...](8)
  12 SorterInsert     2   11    0               00 
REG[11] =  s3[020104...](8)
  13 Next             0   10    0               01 
  10 Column           0    1   10               00 r[10]=t1.b
REG[10] =  i:4
  11 MakeRecord      10    1   11               00 r[11]=mkrec(r[10])
REG[11] =  s3[020104...](8)
  12 SorterInsert     2   11    0               00 
REG[11] =  s3[020104...](8)
  13 Next             0   10    0               01 
  10 Column           0    1   10               00 r[10]=t1.b
REG[10] =  i:5
  11 MakeRecord      10    1   11               00 r[11]=mkrec(r[10])
REG[11] =  s3[020105...](8)
  12 SorterInsert     2   11    0               00 
REG[11] =  s3[020105...](8)
  13 Next             0   10    0               01 
  10 Column           0    1   10               00 r[10]=t1.b
REG[10] =  i:5
  11 MakeRecord      10    1   11               00 r[11]=mkrec(r[10])
REG[11] =  s3[020105...](8)
  12 SorterInsert     2   11    0               00 
REG[11] =  s3[020105...](8)
  13 Next             0   10    0               01 
  10 Column           0    1   10               00 r[10]=t1.b
REG[10] =  i:5
  11 MakeRecord      10    1   11               00 r[11]=mkrec(r[10])
REG[11] =  s3[020105...](8)
  12 SorterInsert     2   11    0               00 
REG[11] =  s3[020105...](8)
  13 Next             0   10    0               01 
  14 Close            0    0    0               00 
  15 OpenPseudo       3   11    1               00 1 columns in r[11]
  16 SorterSort       2   49    0               00 GROUP BY sort
  17 SorterData       2   11    3               00 r[11]=data
  18 Column           3    0    9               00 r[9]=
REG[9] =  i:4
  19 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  NULL
REG[9] =  i:4
  20 Jump            21   25   21               00 
  21 Move             9    8    1               00 r[8]=r[9]
REG[8] =  i:4
  22 Gosub            6   38    0               00 output one row
REG[6] =  i:22
  38 IfPos            4   40    0               00 if r[4]>0 then r[4]-=0, goto 40; Groupby result generator entry point
REG[4] =  i:0
  39 Return           6    0    0               00 
REG[6] =  i:22
  23 IfPos            5   49    0               00 if r[5]>0 then r[5]-=0, goto 49; check abort flag
REG[5] =  i:0
  24 Gosub            7   47    0               00 reset accumulator
REG[7] =  i:24
  47 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  48 Return           7    0    0               00 
REG[7] =  i:24
  25 Column           3    0   10               00 r[10]=
REG[10] =  i:4
  26 AggStep0         0   10    2 avg(1)        01 accum=r[2] step(r[10])
REG[10] =  i:4
  27 Column           3    0   10               00 r[10]=
REG[10] =  i:4
  28 CollSeq         12    0    0 (BINARY)      00 
  29 AggStep0         0   10    3 min(1)        01 accum=r[3] step(r[10])
REG[10] =  i:4
  30 If              12   32    0               00 
REG[12] =  i:0
  31 Column           3    0    1               00 r[1]=
REG[1] =  i:4
  32 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  33 SorterNext       2   17    0               00 
  17 SorterData       2   11    3               00 r[11]=data
  18 Column           3    0    9               00 r[9]=
REG[9] =  i:4
  19 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  i:4
REG[9] =  i:4
  20 Jump            21   25   21               00 
  25 Column           3    0   10               00 r[10]=
REG[10] =  i:4
  26 AggStep          0   10    2 avg(1)        01 accum=r[2] step(r[10])
REG[10] =  i:4
  27 Column           3    0   10               00 r[10]=
REG[10] =  i:4
  28 CollSeq         12    0    0 (BINARY)      00 
  29 AggStep          0   10    3 min(1)        01 accum=r[3] step(r[10])
REG[10] =  i:4
  30 If              12   32    0               00 
REG[12] =  i:1
  32 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  33 SorterNext       2   17    0               00 
  17 SorterData       2   11    3               00 r[11]=data
  18 Column           3    0    9               00 r[9]=
REG[9] =  i:4
  19 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  i:4
REG[9] =  i:4
  20 Jump            21   25   21               00 
  25 Column           3    0   10               00 r[10]=
REG[10] =  i:4
  26 AggStep          0   10    2 avg(1)        01 accum=r[2] step(r[10])
REG[10] =  i:4
  27 Column           3    0   10               00 r[10]=
REG[10] =  i:4
  28 CollSeq         12    0    0 (BINARY)      00 
  29 AggStep          0   10    3 min(1)        01 accum=r[3] step(r[10])
REG[10] =  i:4
  30 If              12   32    0               00 
REG[12] =  i:1
  32 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  33 SorterNext       2   17    0               00 
  17 SorterData       2   11    3               00 r[11]=data
  18 Column           3    0    9               00 r[9]=
REG[9] =  i:5
  19 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  i:4
REG[9] =  i:5
  20 Jump            21   25   21               00 
  21 Move             9    8    1               00 r[8]=r[9]
REG[8] =  i:5
  22 Gosub            6   38    0               00 output one row
REG[6] =  i:22
  38 IfPos            4   40    0               00 if r[4]>0 then r[4]-=0, goto 40; Groupby result generator entry point
REG[4] =  i:1
  40 AggFinal         2    1    0 avg(1)        00 accum=r[2] N=1
  41 AggFinal         3    1    0 min(1)        00 accum=r[3] N=1
  42 Multiply        17    1   15               00 r[15]=r[17]*r[1]
REG[17] =  i:2
REG[1] =  i:4
REG[15] =  i:8
  43 Add             18   15   13               00 r[13]=r[18]+r[15]
REG[18] =  i:1
REG[15] =  i:8
REG[13] =  i:9
  44 Subtract         3    2   14               00 r[14]=r[2]-r[3]
REG[3] =  i:4
REG[2] =  r:4
REG[14] =  r:0
  45 ResultRow       13    2    0               00 output=r[13..14]
REG[13] =  i:9
REG[14] =  r:0
  46 Return           6    0    0               00 end groupby result generator
REG[6] =  i:22
  23 IfPos            5   49    0               00 if r[5]>0 then r[5]-=0, goto 49; check abort flag
REG[5] =  i:0
  24 Gosub            7   47    0               00 reset accumulator
REG[7] =  i:24
  47 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  48 Return           7    0    0               00 
REG[7] =  i:24
  25 Column           3    0   10               00 r[10]=
REG[10] =  i:5
  26 AggStep          0   10    2 avg(1)        01 accum=r[2] step(r[10])
REG[10] =  i:5
  27 Column           3    0   10               00 r[10]=
REG[10] =  i:5
  28 CollSeq         12    0    0 (BINARY)      00 
  29 AggStep          0   10    3 min(1)        01 accum=r[3] step(r[10])
REG[10] =  i:5
  30 If              12   32    0               00 
REG[12] =  i:0
  31 Column           3    0    1               00 r[1]=
REG[1] =  i:5
  32 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  33 SorterNext       2   17    0               00 
  17 SorterData       2   11    3               00 r[11]=data
  18 Column           3    0    9               00 r[9]=
REG[9] =  i:5
  19 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  i:5
REG[9] =  i:5
  20 Jump            21   25   21               00 
  25 Column           3    0   10               00 r[10]=
REG[10] =  i:5
  26 AggStep          0   10    2 avg(1)        01 accum=r[2] step(r[10])
REG[10] =  i:5
  27 Column           3    0   10               00 r[10]=
REG[10] =  i:5
  28 CollSeq         12    0    0 (BINARY)      00 
  29 AggStep          0   10    3 min(1)        01 accum=r[3] step(r[10])
REG[10] =  i:5
  30 If              12   32    0               00 
REG[12] =  i:1
  32 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  33 SorterNext       2   17    0               00 
  17 SorterData       2   11    3               00 r[11]=data
  18 Column           3    0    9               00 r[9]=
REG[9] =  i:5
  19 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  i:5
REG[9] =  i:5
  20 Jump            21   25   21               00 
  25 Column           3    0   10               00 r[10]=
REG[10] =  i:5
  26 AggStep          0   10    2 avg(1)        01 accum=r[2] step(r[10])
REG[10] =  i:5
  27 Column           3    0   10               00 r[10]=
REG[10] =  i:5
  28 CollSeq         12    0    0 (BINARY)      00 
  29 AggStep          0   10    3 min(1)        01 accum=r[3] step(r[10])
REG[10] =  i:5
  30 If              12   32    0               00 
REG[12] =  i:1
  32 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  33 SorterNext       2   17    0               00 
  34 Gosub            6   38    0               00 output final row
REG[6] =  i:34
  38 IfPos            4   40    0               00 if r[4]>0 then r[4]-=0, goto 40; Groupby result generator entry point
REG[4] =  i:1
  40 AggFinal         2    1    0 avg(1)        00 accum=r[2] N=1
  41 AggFinal         3    1    0 min(1)        00 accum=r[3] N=1
  42 Multiply        17    1   15               00 r[15]=r[17]*r[1]
REG[17] =  i:2
REG[1] =  i:5
REG[15] =  i:10
  43 Add             18   15   13               00 r[13]=r[18]+r[15]
REG[18] =  i:1
REG[15] =  i:10
REG[13] =  i:11
  44 Subtract         3    2   14               00 r[14]=r[2]-r[3]
REG[3] =  i:5
REG[2] =  r:5
REG[14] =  r:0
  45 ResultRow       13    2    0               00 output=r[13..14]
REG[13] =  i:11
REG[14] =  r:0
  46 Return           6    0    0               00 end groupby result generator
REG[6] =  i:34
  35 Goto             0   49    0               00 
  49 Halt             0    0    0               00 
SQL: [SELECT x*2+1 as x, count(*) FROM v3 GROUP BY x ORDER BY x
  
;]
VDBE Trace:
   0 Init             0   53    0               00 Start at 53
  53 Transaction      0    0    7 0             01 usesStmtJournal=0
  54 TableLock        0    3    0 v3            00 iDb=0 root=3 write=0
  55 Integer          2   16    0               00 r[16]=2
REG[16] =  i:2
  56 Integer          1   17    0               00 r[17]=1
REG[17] =  i:1
  57 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 SorterOpen       2    1    0 k(1,B)        00 
   3 Integer          0    4    0               00 r[4]=0; clear abort flag
REG[4] =  i:0
   4 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
REG[3] =  i:0
   5 Null             0    7    7               00 r[7..7]=NULL
REG[7] =  NULL
   6 Gosub            6   43    0               00 
REG[6] =  i:6
  43 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  44 Return           6    0    0               00 
REG[6] =  i:6
   7 OpenRead         0    3    0 1             00 root=3 iDb=0; v3
   8 Explain          0    0    0 SCAN TABLE v3 00 
   9 Rewind           0   14    0               00 
  14 Close            0    0    0               00 
  15 OpenPseudo       3   10    1               00 1 columns in r[10]
  16 SorterSort       2   45    0               00 GROUP BY sort
  45 OpenPseudo       4   19    4               00 4 columns in r[19]
  46 SorterSort       1   52    0               00 
  52 Halt             0    0    0               00 
SQL: [SELECT abc*2+1 AS x, count(*) AS y FROM t1b GROUP BY x ORDER BY y, x
  
;]
VDBE Trace:
   0 Init             0   57    0               00 Start at 57
  57 Transaction      0    0    7 0             01 usesStmtJournal=0
  58 TableLock        0    6    0 t1b           00 iDb=0 root=6 write=0
  59 Integer          2   13    0               00 r[13]=2
REG[13] =  i:2
  60 Integer          1   14    0               00 r[14]=1
REG[14] =  i:1
  61 Goto             0    1    0               00 
   1 SorterOpen       1    5    0 k(2,B,B)      00 
   2 SorterOpen       2    2    0 k(1,B)        00 
   3 Integer          0    4    0               00 r[4]=0; clear abort flag
REG[4] =  i:0
   4 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
REG[3] =  i:0
   5 Null             0    7    7               00 r[7..7]=NULL
REG[7] =  NULL
   6 Gosub            6   47    0               00 
REG[6] =  i:6
  47 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  48 Return           6    0    0               00 
REG[6] =  i:6
   7 OpenRead         3    7    0 k(2,,)        00 root=7 iDb=0; sqlite_autoindex_t1b_1
   8 Explain          0    0    0 SCAN TABLE t1b USING COVERING INDEX sqlite_autoindex_t1b_1 00 
   9 Rewind           3   17    9 0             00 
  10 Column           3    0   12               00 r[12]=t1b.abc
REG[12] =  i:27
  11 Multiply        13   12   11               00 r[11]=r[13]*r[12]
REG[13] =  i:2
REG[12] =  i:27
REG[11] =  i:54
  12 Add             14   11    9               00 r[9]=r[14]+r[11]
REG[14] =  i:1
REG[11] =  i:54
REG[9] =  i:55
  13 SCopy           12   10    0               00 r[10]=r[12]
REG[10] =  i:27
  14 MakeRecord       9    2   11               00 r[11]=mkrec(r[9..10])
REG[11] =  s5[030101371B...7.](8)
  15 SorterInsert     2   11    0               00 
REG[11] =  s5[030101371B...7.](8)
  16 Next             3   10    0               01 
  17 Close            3    0    0               00 
  18 OpenPseudo       4   11    2               00 2 columns in r[11]
  19 SorterSort       2   49    0               00 GROUP BY sort
  20 SorterData       2   11    4               00 r[11]=data
  21 Column           4    0    8               00 r[8]=
REG[8] =  i:55
  22 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  NULL
REG[8] =  i:55
  23 Jump            24   28   24               00 
  24 Move             8    7    1               00 r[7]=r[8]
REG[7] =  i:55
  25 Gosub            5   36    0               00 output one row
REG[5] =  i:25
  36 IfPos            3   38    0               00 if r[3]>0 then r[3]-=0, goto 38; Groupby result generator entry point
REG[3] =  i:0
  37 Return           5    0    0               00 
REG[5] =  i:25
  26 IfPos            4   49    0               00 if r[4]>0 then r[4]-=0, goto 49; check abort flag
REG[4] =  i:0
  27 Gosub            6   47    0               00 reset accumulator
REG[6] =  i:27
  47 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  48 Return           6    0    0               00 
REG[6] =  i:27
  28 AggStep0         0    0    2 count(0)      00 accum=r[2] step(r[0])
  29 Column           4    1    1               00 r[1]=
REG[1] =  i:27
  30 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  31 SorterNext       2   20    0               00 
  32 Gosub            5   36    0               00 output final row
REG[5] =  i:32
  36 IfPos            3   38    0               00 if r[3]>0 then r[3]-=0, goto 38; Groupby result generator entry point
REG[3] =  i:1
  38 AggFinal         2    0    0 count(0)      00 accum=r[2] N=0
  39 Multiply        13    1   19               00 r[19]=r[13]*r[1]
REG[13] =  i:2
REG[1] =  i:27
REG[19] =  i:54
  40 Add             14   19   17               00 r[17]=r[14]+r[19]
REG[14] =  i:1
REG[19] =  i:54
REG[17] =  i:55
  41 Copy             2   18    0               00 r[18]=r[2]
REG[18] =  i:1
  42 Copy            18   15    0               00 r[15]=r[18]
REG[15] =  i:1
  43 Copy            17   16    0               00 r[16]=r[17]
REG[16] =  i:55
  44 MakeRecord      15    4   21               00 r[21]=mkrec(r[15..18])
REG[21] =  s7[05090101093737.....77](8)
  45 SorterInsert     1   21    0               00 
REG[21] =  s7[05090101093737.....77](8)
  46 Return           5    0    0               00 end groupby result generator
REG[5] =  i:32
  33 Goto             0   49    0               00 
  49 OpenPseudo       5   22    5               00 5 columns in r[22]
  50 SorterSort       1   56    0               00 
  51 SorterData       1   22    5               00 r[22]=data
  52 Column           5    2   17               00 r[17]=x
REG[17] =  i:55
  53 Column           5    3   18               00 r[18]=y
REG[18] =  i:1
  54 ResultRow       17    2    0               00 output=r[17..18]
REG[17] =  i:55
REG[18] =  i:1
  55 SorterNext       1   51    0               00 
  56 Halt             0    0    0               00 
SQL: [SELECT a*2+1 AS x, count(*) AS y FROM t1 GROUP BY x ORDER BY 10-(x+y)
  
;]
VDBE Trace:
   0 Init             0   59    0               00 Start at 59
  59 Transaction      0    0    7 0             01 usesStmtJournal=0
  60 TableLock        0    5    0 t1            00 iDb=0 root=5 write=0
  61 Integer          2   13    0               00 r[13]=2
REG[13] =  i:2
  62 Integer          1   14    0               00 r[14]=1
REG[14] =  i:1
  63 Integer         10   21    0               00 r[21]=10
REG[21] =  i:10
  64 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 SorterOpen       2    2    0 k(1,B)        00 
   3 Integer          0    4    0               00 r[4]=0; clear abort flag
REG[4] =  i:0
   4 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
REG[3] =  i:0
   5 Null             0    7    7               00 r[7..7]=NULL
REG[7] =  NULL
   6 Gosub            6   49    0               00 
REG[6] =  i:6
  49 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  50 Return           6    0    0               00 
REG[6] =  i:6
   7 OpenRead         0    5    0 0             00 root=5 iDb=0; t1
   8 Explain          0    0    0 SCAN TABLE t1 00 
   9 Rewind           0   17    0               00 
  10 Rowid            0   12    0               00 r[12]=rowid
REG[12] =  i:10
  11 Multiply        13   12   11               00 r[11]=r[13]*r[12]
REG[13] =  i:2
REG[12] =  i:10
REG[11] =  i:20
  12 Add             14   11    9               00 r[9]=r[14]+r[11]
REG[14] =  i:1
REG[11] =  i:20
REG[9] =  i:21
  13 SCopy           12   10    0               00 r[10]=r[12]
REG[10] =  i:10
  14 MakeRecord       9    2   11               00 r[11]=mkrec(r[9..10])
REG[11] =  s5[030101150A.....](8)
  15 SorterInsert     2   11    0               00 
REG[11] =  s5[030101150A.....](8)
  16 Next             0   10    0               01 
  10 Rowid            0   12    0               00 r[12]=rowid
REG[12] =  i:15
  11 Multiply        13   12   11               00 r[11]=r[13]*r[12]
REG[13] =  i:2
REG[12] =  i:15
REG[11] =  i:30
  12 Add             14   11    9               00 r[9]=r[14]+r[11]
REG[14] =  i:1
REG[11] =  i:30
REG[9] =  i:31
  13 SCopy           12   10    0               00 r[10]=r[12]
REG[10] =  i:15
  14 MakeRecord       9    2   11               00 r[11]=mkrec(r[9..10])
REG[11] =  s5[0301011F0F.....](8)
  15 SorterInsert     2   11    0               00 
REG[11] =  s5[0301011F0F.....](8)
  16 Next             0   10    0               01 
  10 Rowid            0   12    0               00 r[12]=rowid
REG[12] =  i:16
  11 Multiply        13   12   11               00 r[11]=r[13]*r[12]
REG[13] =  i:2
REG[12] =  i:16
REG[11] =  i:32
  12 Add             14   11    9               00 r[9]=r[14]+r[11]
REG[14] =  i:1
REG[11] =  i:32
REG[9] =  i:33
  13 SCopy           12   10    0               00 r[10]=r[12]
REG[10] =  i:16
  14 MakeRecord       9    2   11               00 r[11]=mkrec(r[9..10])
REG[11] =  s5[0301012110...!.](8)
  15 SorterInsert     2   11    0               00 
REG[11] =  s5[0301012110...!.](8)
  16 Next             0   10    0               01 
  10 Rowid            0   12    0               00 r[12]=rowid
REG[12] =  i:18
  11 Multiply        13   12   11               00 r[11]=r[13]*r[12]
REG[13] =  i:2
REG[12] =  i:18
REG[11] =  i:36
  12 Add             14   11    9               00 r[9]=r[14]+r[11]
REG[14] =  i:1
REG[11] =  i:36
REG[9] =  i:37
  13 SCopy           12   10    0               00 r[10]=r[12]
REG[10] =  i:18
  14 MakeRecord       9    2   11               00 r[11]=mkrec(r[9..10])
REG[11] =  s5[0301012512...%.](8)
  15 SorterInsert     2   11    0               00 
REG[11] =  s5[0301012512...%.](8)
  16 Next             0   10    0               01 
  10 Rowid            0   12    0               00 r[12]=rowid
REG[12] =  i:23
  11 Multiply        13   12   11               00 r[11]=r[13]*r[12]
REG[13] =  i:2
REG[12] =  i:23
REG[11] =  i:46
  12 Add             14   11    9               00 r[9]=r[14]+r[11]
REG[14] =  i:1
REG[11] =  i:46
REG[9] =  i:47
  13 SCopy           12   10    0               00 r[10]=r[12]
REG[10] =  i:23
  14 MakeRecord       9    2   11               00 r[11]=mkrec(r[9..10])
REG[11] =  s5[0301012F17.../.](8)
  15 SorterInsert     2   11    0               00 
REG[11] =  s5[0301012F17.../.](8)
  16 Next             0   10    0               01 
  10 Rowid            0   12    0               00 r[12]=rowid
REG[12] =  i:29
  11 Multiply        13   12   11               00 r[11]=r[13]*r[12]
REG[13] =  i:2
REG[12] =  i:29
REG[11] =  i:58
  12 Add             14   11    9               00 r[9]=r[14]+r[11]
REG[14] =  i:1
REG[11] =  i:58
REG[9] =  i:59
  13 SCopy           12   10    0               00 r[10]=r[12]
REG[10] =  i:29
  14 MakeRecord       9    2   11               00 r[11]=mkrec(r[9..10])
REG[11] =  s5[0301013B1D...;.](8)
  15 SorterInsert     2   11    0               00 
REG[11] =  s5[0301013B1D...;.](8)
  16 Next             0   10    0               01 
  17 Close            0    0    0               00 
  18 OpenPseudo       3   11    2               00 2 columns in r[11]
  19 SorterSort       2   51    0               00 GROUP BY sort
  20 SorterData       2   11    3               00 r[11]=data
  21 Column           3    0    8               00 r[8]=
REG[8] =  i:21
  22 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  NULL
REG[8] =  i:21
  23 Jump            24   28   24               00 
  24 Move             8    7    1               00 r[7]=r[8]
REG[7] =  i:21
  25 Gosub            5   36    0               00 output one row
REG[5] =  i:25
  36 IfPos            3   38    0               00 if r[3]>0 then r[3]-=0, goto 38; Groupby result generator entry point
REG[3] =  i:0
  37 Return           5    0    0               00 
REG[5] =  i:25
  26 IfPos            4   51    0               00 if r[4]>0 then r[4]-=0, goto 51; check abort flag
REG[4] =  i:0
  27 Gosub            6   49    0               00 reset accumulator
REG[6] =  i:27
  49 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  50 Return           6    0    0               00 
REG[6] =  i:27
  28 AggStep0         0    0    2 count(0)      00 accum=r[2] step(r[0])
  29 Column           3    1    1               00 r[1]=
REG[1] =  i:10
  30 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  31 SorterNext       2   20    0               00 
  20 SorterData       2   11    3               00 r[11]=data
  21 Column           3    0    8               00 r[8]=
REG[8] =  i:31
  22 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  i:21
REG[8] =  i:31
  23 Jump            24   28   24               00 
  24 Move             8    7    1               00 r[7]=r[8]
REG[7] =  i:31
  25 Gosub            5   36    0               00 output one row
REG[5] =  i:25
  36 IfPos            3   38    0               00 if r[3]>0 then r[3]-=0, goto 38; Groupby result generator entry point
REG[3] =  i:1
  38 AggFinal         2    0    0 count(0)      00 accum=r[2] N=0
  39 Multiply        13    1   18               00 r[18]=r[13]*r[1]
REG[13] =  i:2
REG[1] =  i:10
REG[18] =  i:20
  40 Add             14   18   16               00 r[16]=r[14]+r[18]
REG[14] =  i:1
REG[18] =  i:20
REG[16] =  i:21
  41 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:1
  42 Multiply        13    1   22               00 r[22]=r[13]*r[1]
REG[13] =  i:2
REG[1] =  i:10
REG[22] =  i:20
  43 Add             14   22   19               00 r[19]=r[14]+r[22]
REG[14] =  i:1
REG[22] =  i:20
REG[19] =  i:21
  44 Add              2   19   18               00 r[18]=r[2]+r[19]
REG[2] =  i:1
REG[19] =  i:21
REG[18] =  i:22
  45 Subtract        18   21   15               00 r[15]=r[21]-r[18]
REG[18] =  i:22
REG[21] =  i:10
REG[15] =  i:-12
  46 MakeRecord      15    3   20               00 r[20]=mkrec(r[15..17])
REG[20] =  s6[04010109F415......](8)
  47 SorterInsert     1   20    0               00 
REG[20] =  s6[04010109F415......](8)
  48 Return           5    0    0               00 end groupby result generator
REG[5] =  i:25
  26 IfPos            4   51    0               00 if r[4]>0 then r[4]-=0, goto 51; check abort flag
REG[4] =  i:0
  27 Gosub            6   49    0               00 reset accumulator
REG[6] =  i:27
  49 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  50 Return           6    0    0               00 
REG[6] =  i:27
  28 AggStep          0    0    2 count(0)      00 accum=r[2] step(r[0])
  29 Column           3    1    1               00 r[1]=
REG[1] =  i:15
  30 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  31 SorterNext       2   20    0               00 
  20 SorterData       2   11    3               00 r[11]=data
  21 Column           3    0    8               00 r[8]=
REG[8] =  i:33
  22 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  i:31
REG[8] =  i:33
  23 Jump            24   28   24               00 
  24 Move             8    7    1               00 r[7]=r[8]
REG[7] =  i:33
  25 Gosub            5   36    0               00 output one row
REG[5] =  i:25
  36 IfPos            3   38    0               00 if r[3]>0 then r[3]-=0, goto 38; Groupby result generator entry point
REG[3] =  i:1
  38 AggFinal         2    0    0 count(0)      00 accum=r[2] N=0
  39 Multiply        13    1   18               00 r[18]=r[13]*r[1]
REG[13] =  i:2
REG[1] =  i:15
REG[18] =  i:30
  40 Add             14   18   16               00 r[16]=r[14]+r[18]
REG[14] =  i:1
REG[18] =  i:30
REG[16] =  i:31
  41 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:1
  42 Multiply        13    1   22               00 r[22]=r[13]*r[1]
REG[13] =  i:2
REG[1] =  i:15
REG[22] =  i:30
  43 Add             14   22   19               00 r[19]=r[14]+r[22]
REG[14] =  i:1
REG[22] =  i:30
REG[19] =  i:31
  44 Add              2   19   18               00 r[18]=r[2]+r[19]
REG[2] =  i:1
REG[19] =  i:31
REG[18] =  i:32
  45 Subtract        18   21   15               00 r[15]=r[21]-r[18]
REG[18] =  i:32
REG[21] =  i:10
REG[15] =  i:-22
  46 MakeRecord      15    3   20               00 r[20]=mkrec(r[15..17])
REG[20] =  s6[04010109EA1F......](8)
  47 SorterInsert     1   20    0               00 
REG[20] =  s6[04010109EA1F......](8)
  48 Return           5    0    0               00 end groupby result generator
REG[5] =  i:25
  26 IfPos            4   51    0               00 if r[4]>0 then r[4]-=0, goto 51; check abort flag
REG[4] =  i:0
  27 Gosub            6   49    0               00 reset accumulator
REG[6] =  i:27
  49 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  50 Return           6    0    0               00 
REG[6] =  i:27
  28 AggStep          0    0    2 count(0)      00 accum=r[2] step(r[0])
  29 Column           3    1    1               00 r[1]=
REG[1] =  i:16
  30 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  31 SorterNext       2   20    0               00 
  20 SorterData       2   11    3               00 r[11]=data
  21 Column           3    0    8               00 r[8]=
REG[8] =  i:37
  22 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  i:33
REG[8] =  i:37
  23 Jump            24   28   24               00 
  24 Move             8    7    1               00 r[7]=r[8]
REG[7] =  i:37
  25 Gosub            5   36    0               00 output one row
REG[5] =  i:25
  36 IfPos            3   38    0               00 if r[3]>0 then r[3]-=0, goto 38; Groupby result generator entry point
REG[3] =  i:1
  38 AggFinal         2    0    0 count(0)      00 accum=r[2] N=0
  39 Multiply        13    1   18               00 r[18]=r[13]*r[1]
REG[13] =  i:2
REG[1] =  i:16
REG[18] =  i:32
  40 Add             14   18   16               00 r[16]=r[14]+r[18]
REG[14] =  i:1
REG[18] =  i:32
REG[16] =  i:33
  41 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:1
  42 Multiply        13    1   22               00 r[22]=r[13]*r[1]
REG[13] =  i:2
REG[1] =  i:16
REG[22] =  i:32
  43 Add             14   22   19               00 r[19]=r[14]+r[22]
REG[14] =  i:1
REG[22] =  i:32
REG[19] =  i:33
  44 Add              2   19   18               00 r[18]=r[2]+r[19]
REG[2] =  i:1
REG[19] =  i:33
REG[18] =  i:34
  45 Subtract        18   21   15               00 r[15]=r[21]-r[18]
REG[18] =  i:34
REG[21] =  i:10
REG[15] =  i:-24
  46 MakeRecord      15    3   20               00 r[20]=mkrec(r[15..17])
REG[20] =  s6[04010109E821.....!](8)
  47 SorterInsert     1   20    0               00 
REG[20] =  s6[04010109E821.....!](8)
  48 Return           5    0    0               00 end groupby result generator
REG[5] =  i:25
  26 IfPos            4   51    0               00 if r[4]>0 then r[4]-=0, goto 51; check abort flag
REG[4] =  i:0
  27 Gosub            6   49    0               00 reset accumulator
REG[6] =  i:27
  49 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  50 Return           6    0    0               00 
REG[6] =  i:27
  28 AggStep          0    0    2 count(0)      00 accum=r[2] step(r[0])
  29 Column           3    1    1               00 r[1]=
REG[1] =  i:18
  30 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  31 SorterNext       2   20    0               00 
  20 SorterData       2   11    3               00 r[11]=data
  21 Column           3    0    8               00 r[8]=
REG[8] =  i:47
  22 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  i:37
REG[8] =  i:47
  23 Jump            24   28   24               00 
  24 Move             8    7    1               00 r[7]=r[8]
REG[7] =  i:47
  25 Gosub            5   36    0               00 output one row
REG[5] =  i:25
  36 IfPos            3   38    0               00 if r[3]>0 then r[3]-=0, goto 38; Groupby result generator entry point
REG[3] =  i:1
  38 AggFinal         2    0    0 count(0)      00 accum=r[2] N=0
  39 Multiply        13    1   18               00 r[18]=r[13]*r[1]
REG[13] =  i:2
REG[1] =  i:18
REG[18] =  i:36
  40 Add             14   18   16               00 r[16]=r[14]+r[18]
REG[14] =  i:1
REG[18] =  i:36
REG[16] =  i:37
  41 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:1
  42 Multiply        13    1   22               00 r[22]=r[13]*r[1]
REG[13] =  i:2
REG[1] =  i:18
REG[22] =  i:36
  43 Add             14   22   19               00 r[19]=r[14]+r[22]
REG[14] =  i:1
REG[22] =  i:36
REG[19] =  i:37
  44 Add              2   19   18               00 r[18]=r[2]+r[19]
REG[2] =  i:1
REG[19] =  i:37
REG[18] =  i:38
  45 Subtract        18   21   15               00 r[15]=r[21]-r[18]
REG[18] =  i:38
REG[21] =  i:10
REG[15] =  i:-28
  46 MakeRecord      15    3   20               00 r[20]=mkrec(r[15..17])
REG[20] =  s6[04010109E425.....%](8)
  47 SorterInsert     1   20    0               00 
REG[20] =  s6[04010109E425.....%](8)
  48 Return           5    0    0               00 end groupby result generator
REG[5] =  i:25
  26 IfPos            4   51    0               00 if r[4]>0 then r[4]-=0, goto 51; check abort flag
REG[4] =  i:0
  27 Gosub            6   49    0               00 reset accumulator
REG[6] =  i:27
  49 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  50 Return           6    0    0               00 
REG[6] =  i:27
  28 AggStep          0    0    2 count(0)      00 accum=r[2] step(r[0])
  29 Column           3    1    1               00 r[1]=
REG[1] =  i:23
  30 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  31 SorterNext       2   20    0               00 
  20 SorterData       2   11    3               00 r[11]=data
  21 Column           3    0    8               00 r[8]=
REG[8] =  i:59
  22 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  i:47
REG[8] =  i:59
  23 Jump            24   28   24               00 
  24 Move             8    7    1               00 r[7]=r[8]
REG[7] =  i:59
  25 Gosub            5   36    0               00 output one row
REG[5] =  i:25
  36 IfPos            3   38    0               00 if r[3]>0 then r[3]-=0, goto 38; Groupby result generator entry point
REG[3] =  i:1
  38 AggFinal         2    0    0 count(0)      00 accum=r[2] N=0
  39 Multiply        13    1   18               00 r[18]=r[13]*r[1]
REG[13] =  i:2
REG[1] =  i:23
REG[18] =  i:46
  40 Add             14   18   16               00 r[16]=r[14]+r[18]
REG[14] =  i:1
REG[18] =  i:46
REG[16] =  i:47
  41 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:1
  42 Multiply        13    1   22               00 r[22]=r[13]*r[1]
REG[13] =  i:2
REG[1] =  i:23
REG[22] =  i:46
  43 Add             14   22   19               00 r[19]=r[14]+r[22]
REG[14] =  i:1
REG[22] =  i:46
REG[19] =  i:47
  44 Add              2   19   18               00 r[18]=r[2]+r[19]
REG[2] =  i:1
REG[19] =  i:47
REG[18] =  i:48
  45 Subtract        18   21   15               00 r[15]=r[21]-r[18]
REG[18] =  i:48
REG[21] =  i:10
REG[15] =  i:-38
  46 MakeRecord      15    3   20               00 r[20]=mkrec(r[15..17])
REG[20] =  s6[04010109DA2F...../](8)
  47 SorterInsert     1   20    0               00 
REG[20] =  s6[04010109DA2F...../](8)
  48 Return           5    0    0               00 end groupby result generator
REG[5] =  i:25
  26 IfPos            4   51    0               00 if r[4]>0 then r[4]-=0, goto 51; check abort flag
REG[4] =  i:0
  27 Gosub            6   49    0               00 reset accumulator
REG[6] =  i:27
  49 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  50 Return           6    0    0               00 
REG[6] =  i:27
  28 AggStep          0    0    2 count(0)      00 accum=r[2] step(r[0])
  29 Column           3    1    1               00 r[1]=
REG[1] =  i:29
  30 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  31 SorterNext       2   20    0               00 
  32 Gosub            5   36    0               00 output final row
REG[5] =  i:32
  36 IfPos            3   38    0               00 if r[3]>0 then r[3]-=0, goto 38; Groupby result generator entry point
REG[3] =  i:1
  38 AggFinal         2    0    0 count(0)      00 accum=r[2] N=0
  39 Multiply        13    1   18               00 r[18]=r[13]*r[1]
REG[13] =  i:2
REG[1] =  i:29
REG[18] =  i:58
  40 Add             14   18   16               00 r[16]=r[14]+r[18]
REG[14] =  i:1
REG[18] =  i:58
REG[16] =  i:59
  41 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:1
  42 Multiply        13    1   22               00 r[22]=r[13]*r[1]
REG[13] =  i:2
REG[1] =  i:29
REG[22] =  i:58
  43 Add             14   22   19               00 r[19]=r[14]+r[22]
REG[14] =  i:1
REG[22] =  i:58
REG[19] =  i:59
  44 Add              2   19   18               00 r[18]=r[2]+r[19]
REG[2] =  i:1
REG[19] =  i:59
REG[18] =  i:60
  45 Subtract        18   21   15               00 r[15]=r[21]-r[18]
REG[18] =  i:60
REG[21] =  i:10
REG[15] =  i:-50
  46 MakeRecord      15    3   20               00 r[20]=mkrec(r[15..17])
REG[20] =  s6[04010109CE3B.....;](8)
  47 SorterInsert     1   20    0               00 
REG[20] =  s6[04010109CE3B.....;](8)
  48 Return           5    0    0               00 end groupby result generator
REG[5] =  i:32
  33 Goto             0   51    0               00 
  51 OpenPseudo       4   24    4               00 4 columns in r[24]
  52 SorterSort       1   58    0               00 
  53 SorterData       1   24    4               00 r[24]=data
  54 Column           4    1   16               00 r[16]=x
REG[16] =  i:59
  55 Column           4    2   17               00 r[17]=y
REG[17] =  i:1
  56 ResultRow       16    2    0               00 output=r[16..17]
REG[16] =  i:59
REG[17] =  i:1
  57 SorterNext       1   53    0               00 
  53 SorterData       1   24    4               00 r[24]=data
  54 Column           4    1   16               00 r[16]=x
REG[16] =  i:47
  55 Column           4    2   17               00 r[17]=y
REG[17] =  i:1
  56 ResultRow       16    2    0               00 output=r[16..17]
REG[16] =  i:47
REG[17] =  i:1
  57 SorterNext       1   53    0               00 
  53 SorterData       1   24    4               00 r[24]=data
  54 Column           4    1   16               00 r[16]=x
REG[16] =  i:37
  55 Column           4    2   17               00 r[17]=y
REG[17] =  i:1
  56 ResultRow       16    2    0               00 output=r[16..17]
REG[16] =  i:37
REG[17] =  i:1
  57 SorterNext       1   53    0               00 
  53 SorterData       1   24    4               00 r[24]=data
  54 Column           4    1   16               00 r[16]=x
REG[16] =  i:33
  55 Column           4    2   17               00 r[17]=y
REG[17] =  i:1
  56 ResultRow       16    2    0               00 output=r[16..17]
REG[16] =  i:33
REG[17] =  i:1
  57 SorterNext       1   53    0               00 
  53 SorterData       1   24    4               00 r[24]=data
  54 Column           4    1   16               00 r[16]=x
REG[16] =  i:31
  55 Column           4    2   17               00 r[17]=y
REG[17] =  i:1
  56 ResultRow       16    2    0               00 output=r[16..17]
REG[16] =  i:31
REG[17] =  i:1
  57 SorterNext       1   53    0               00 
  53 SorterData       1   24    4               00 r[24]=data
  54 Column           4    1   16               00 r[16]=x
REG[16] =  i:21
  55 Column           4    2   17               00 r[17]=y
REG[17] =  i:1
  56 ResultRow       16    2    0               00 output=r[16..17]
REG[16] =  i:21
REG[17] =  i:1
  57 SorterNext       1   53    0               00 
  58 Halt             0    0    0               00 
SQL: [
;SELECT v1, count(*) FROM v0 GROUP BY 1 ORDER BY v1;]
VDBE Trace:
   0 Init             0   35    0               00 Start at 35
  35 Transaction      0    0    7 0             01 usesStmtJournal=0
  36 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
  37 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 Noop             2    1    0               00 
   3 Integer          0    4    0               00 r[4]=0; clear abort flag
REG[4] =  i:0
   4 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
REG[3] =  i:0
   5 Null             0    7    7               00 r[7..7]=NULL
REG[7] =  NULL
   6 Gosub            6   32    0               00 
REG[6] =  i:6
  32 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  33 Return           6    0    0               00 
REG[6] =  i:6
   7 OpenRead         3    2    0 k(1,)         00 root=2 iDb=0; sqlite_autoindex_v0_1
   8 Explain          0    0    0 SCAN TABLE v0 00 
   9 Rewind           3   21    9 0             00 
  10 Column           3    0    8               00 r[8]=v0.v1
REG[8] =  i:0
  11 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  NULL
REG[8] =  i:0
  12 Jump            13   17   13               00 
  13 Move             8    7    1               00 r[7]=r[8]
REG[7] =  i:0
  14 Gosub            5   26    0               00 output one row
REG[5] =  i:14
  26 IfPos            3   28    0               00 if r[3]>0 then r[3]-=0, goto 28; Groupby result generator entry point
REG[3] =  i:0
  27 Return           5    0    0               00 
REG[5] =  i:14
  15 IfPos            4   34    0               00 if r[4]>0 then r[4]-=0, goto 34; check abort flag
REG[4] =  i:0
  16 Gosub            6   32    0               00 reset accumulator
REG[6] =  i:16
  32 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  33 Return           6    0    0               00 
REG[6] =  i:16
  17 AggStep0         0    0    2 count(0)      00 accum=r[2] step(r[0])
  18 Column           3    0    1               00 r[1]=v0.v1
REG[1] =  i:0
  19 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  20 Next             3   10    0               01 
  10 Column           3    0    8               00 r[8]=v0.v1
REG[8] =  i:1
  11 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  i:0
REG[8] =  i:1
  12 Jump            13   17   13               00 
  13 Move             8    7    1               00 r[7]=r[8]
REG[7] =  i:1
  14 Gosub            5   26    0               00 output one row
REG[5] =  i:14
  26 IfPos            3   28    0               00 if r[3]>0 then r[3]-=0, goto 28; Groupby result generator entry point
REG[3] =  i:1
  28 AggFinal         2    0    0 count(0)      00 accum=r[2] N=0
  29 Copy             1    9    1               00 r[9..10]=r[1..2]
REG[9] =  i:0
REG[10] =  i:1
  30 ResultRow        9    2    0               00 output=r[9..10]
REG[9] =  i:0
REG[10] =  i:1
  31 Return           5    0    0               00 end groupby result generator
REG[5] =  i:14
  15 IfPos            4   34    0               00 if r[4]>0 then r[4]-=0, goto 34; check abort flag
REG[4] =  i:0
  16 Gosub            6   32    0               00 reset accumulator
REG[6] =  i:16
  32 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  33 Return           6    0    0               00 
REG[6] =  i:16
  17 AggStep          0    0    2 count(0)      00 accum=r[2] step(r[0])
  18 Column           3    0    1               00 r[1]=v0.v1
REG[1] =  i:1
  19 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  20 Next             3   10    0               01 
  10 Column           3    0    8               00 r[8]=v0.v1
REG[8] =  i:31
  11 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  i:1
REG[8] =  i:31
  12 Jump            13   17   13               00 
  13 Move             8    7    1               00 r[7]=r[8]
REG[7] =  i:31
  14 Gosub            5   26    0               00 output one row
REG[5] =  i:14
  26 IfPos            3   28    0               00 if r[3]>0 then r[3]-=0, goto 28; Groupby result generator entry point
REG[3] =  i:1
  28 AggFinal         2    0    0 count(0)      00 accum=r[2] N=0
  29 Copy             1    9    1               00 r[9..10]=r[1..2]
REG[9] =  i:1
REG[10] =  i:1
  30 ResultRow        9    2    0               00 output=r[9..10]
REG[9] =  i:1
REG[10] =  i:1
  31 Return           5    0    0               00 end groupby result generator
REG[5] =  i:14
  15 IfPos            4   34    0               00 if r[4]>0 then r[4]-=0, goto 34; check abort flag
REG[4] =  i:0
  16 Gosub            6   32    0               00 reset accumulator
REG[6] =  i:16
  32 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  33 Return           6    0    0               00 
REG[6] =  i:16
  17 AggStep          0    0    2 count(0)      00 accum=r[2] step(r[0])
  18 Column           3    0    1               00 r[1]=v0.v1
REG[1] =  i:31
  19 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  20 Next             3   10    0               01 
  21 Close            3    0    0               00 
  22 Gosub            5   26    0               00 output final row
REG[5] =  i:22
  26 IfPos            3   28    0               00 if r[3]>0 then r[3]-=0, goto 28; Groupby result generator entry point
REG[3] =  i:1
  28 AggFinal         2    0    0 count(0)      00 accum=r[2] N=0
  29 Copy             1    9    1               00 r[9..10]=r[1..2]
REG[9] =  i:31
REG[10] =  i:1
  30 ResultRow        9    2    0               00 output=r[9..10]
REG[9] =  i:31
REG[10] =  i:1
  31 Return           5    0    0               00 end groupby result generator
REG[5] =  i:22
  23 Goto             0   34    0               00 
  34 Halt             0    0    0               00 
SQL: [SELECT v1, count(*) FROM v0 
    GROUP BY v1 
    HAVING count(*)>=4 
    ORDER BY v1
  
;]
VDBE Trace:
   0 Init             0   36    0               00 Start at 36
  36 Transaction      0    0    7 0             01 usesStmtJournal=0
  37 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
  38 Integer          4   10    0               00 r[10]=4
REG[10] =  i:4
  39 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 Noop             2    1    0               00 
   3 Integer          0    4    0               00 r[4]=0; clear abort flag
REG[4] =  i:0
   4 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
REG[3] =  i:0
   5 Null             0    7    7               00 r[7..7]=NULL
REG[7] =  NULL
   6 Gosub            6   33    0               00 
REG[6] =  i:6
  33 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  34 Return           6    0    0               00 
REG[6] =  i:6
   7 OpenRead         3    2    0 k(1,)         00 root=2 iDb=0; sqlite_autoindex_v0_1
   8 Explain          0    0    0 SCAN TABLE v0 00 
   9 Rewind           3   21    9 0             00 
  10 Column           3    0    8               00 r[8]=v0.v1
REG[8] =  i:0
  11 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  NULL
REG[8] =  i:0
  12 Jump            13   17   13               00 
  13 Move             8    7    1               00 r[7]=r[8]
REG[7] =  i:0
  14 Gosub            5   26    0               00 output one row
REG[5] =  i:14
  26 IfPos            3   28    0               00 if r[3]>0 then r[3]-=0, goto 28; Groupby result generator entry point
REG[3] =  i:0
  27 Return           5    0    0               00 
REG[5] =  i:14
  15 IfPos            4   35    0               00 if r[4]>0 then r[4]-=0, goto 35; check abort flag
REG[4] =  i:0
  16 Gosub            6   33    0               00 reset accumulator
REG[6] =  i:16
  33 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  34 Return           6    0    0               00 
REG[6] =  i:16
  17 AggStep0         0    0    2 count(0)      00 accum=r[2] step(r[0])
  18 Column           3    0    1               00 r[1]=v0.v1
REG[1] =  i:0
  19 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  20 Next             3   10    0               01 
  10 Column           3    0    8               00 r[8]=v0.v1
REG[8] =  i:1
  11 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  i:0
REG[8] =  i:1
  12 Jump            13   17   13               00 
  13 Move             8    7    1               00 r[7]=r[8]
REG[7] =  i:1
  14 Gosub            5   26    0               00 output one row
REG[5] =  i:14
  26 IfPos            3   28    0               00 if r[3]>0 then r[3]-=0, goto 28; Groupby result generator entry point
REG[3] =  i:1
  28 AggFinal         2    0    0 count(0)      00 accum=r[2] N=0
  29 Lt              10   27    2               51 if r[10]<r[2] goto 27
REG[10] =  i:4
REG[2] =  i:1
  27 Return           5    0    0               00 
REG[5] =  i:14
  15 IfPos            4   35    0               00 if r[4]>0 then r[4]-=0, goto 35; check abort flag
REG[4] =  i:0
  16 Gosub            6   33    0               00 reset accumulator
REG[6] =  i:16
  33 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  34 Return           6    0    0               00 
REG[6] =  i:16
  17 AggStep          0    0    2 count(0)      00 accum=r[2] step(r[0])
  18 Column           3    0    1               00 r[1]=v0.v1
REG[1] =  i:1
  19 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  20 Next             3   10    0               01 
  10 Column           3    0    8               00 r[8]=v0.v1
REG[8] =  i:31
  11 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  i:1
REG[8] =  i:31
  12 Jump            13   17   13               00 
  13 Move             8    7    1               00 r[7]=r[8]
REG[7] =  i:31
  14 Gosub            5   26    0               00 output one row
REG[5] =  i:14
  26 IfPos            3   28    0               00 if r[3]>0 then r[3]-=0, goto 28; Groupby result generator entry point
REG[3] =  i:1
  28 AggFinal         2    0    0 count(0)      00 accum=r[2] N=0
  29 Lt              10   27    2               51 if r[10]<r[2] goto 27
REG[10] =  i:4
REG[2] =  i:1
  27 Return           5    0    0               00 
REG[5] =  i:14
  15 IfPos            4   35    0               00 if r[4]>0 then r[4]-=0, goto 35; check abort flag
REG[4] =  i:0
  16 Gosub            6   33    0               00 reset accumulator
REG[6] =  i:16
  33 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  34 Return           6    0    0               00 
REG[6] =  i:16
  17 AggStep          0    0    2 count(0)      00 accum=r[2] step(r[0])
  18 Column           3    0    1               00 r[1]=v0.v1
REG[1] =  i:31
  19 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  20 Next             3   10    0               01 
  21 Close            3    0    0               00 
  22 Gosub            5   26    0               00 output final row
REG[5] =  i:22
  26 IfPos            3   28    0               00 if r[3]>0 then r[3]-=0, goto 28; Groupby result generator entry point
REG[3] =  i:1
  28 AggFinal         2    0    0 count(0)      00 accum=r[2] N=0
  29 Lt              10   27    2               51 if r[10]<r[2] goto 27
REG[10] =  i:4
REG[2] =  i:1
  27 Return           5    0    0               00 
REG[5] =  i:22
  23 Goto             0   35    0               00 
  35 Halt             0    0    0               00 
SQL: [SELECT b, min(b) FROM t1 GROUP BY b ORDER BY b;]
VDBE Trace:
   0 Init             0   45    0               00 Start at 45
  45 Transaction      0    0    7 0             01 usesStmtJournal=0
  46 TableLock        0    5    0 t1            00 iDb=0 root=5 write=0
  47 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 SorterOpen       2    1    0 k(1,B)        00 
   3 Integer          0    4    0               00 r[4]=0; clear abort flag
REG[4] =  i:0
   4 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
REG[3] =  i:0
   5 Null             0    7    7               00 r[7..7]=NULL
REG[7] =  NULL
   6 Gosub            6   42    0               00 
REG[6] =  i:6
  42 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  43 Return           6    0    0               00 
REG[6] =  i:6
   7 OpenRead         0    5    0 2             00 root=5 iDb=0; t1
   8 Explain          0    0    0 SCAN TABLE t1 00 
   9 Rewind           0   14    0               00 
  10 Column           0    1    9               00 r[9]=t1.b
REG[9] =  i:4
  11 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s3[020104...](8)
  12 SorterInsert     2   10    0               00 
REG[10] =  s3[020104...](8)
  13 Next             0   10    0               01 
  10 Column           0    1    9               00 r[9]=t1.b
REG[9] =  i:4
  11 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s3[020104...](8)
  12 SorterInsert     2   10    0               00 
REG[10] =  s3[020104...](8)
  13 Next             0   10    0               01 
  10 Column           0    1    9               00 r[9]=t1.b
REG[9] =  i:4
  11 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s3[020104...](8)
  12 SorterInsert     2   10    0               00 
REG[10] =  s3[020104...](8)
  13 Next             0   10    0               01 
  10 Column           0    1    9               00 r[9]=t1.b
REG[9] =  i:5
  11 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s3[020105...](8)
  12 SorterInsert     2   10    0               00 
REG[10] =  s3[020105...](8)
  13 Next             0   10    0               01 
  10 Column           0    1    9               00 r[9]=t1.b
REG[9] =  i:5
  11 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s3[020105...](8)
  12 SorterInsert     2   10    0               00 
REG[10] =  s3[020105...](8)
  13 Next             0   10    0               01 
  10 Column           0    1    9               00 r[9]=t1.b
REG[9] =  i:5
  11 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s3[020105...](8)
  12 SorterInsert     2   10    0               00 
REG[10] =  s3[020105...](8)
  13 Next             0   10    0               01 
  14 Close            0    0    0               00 
  15 OpenPseudo       3   10    1               00 1 columns in r[10]
  16 SorterSort       2   44    0               00 GROUP BY sort
  17 SorterData       2   10    3               00 r[10]=data
  18 Column           3    0    8               00 r[8]=
REG[8] =  i:4
  19 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  NULL
REG[8] =  i:4
  20 Jump            21   25   21               00 
  21 Move             8    7    1               00 r[7]=r[8]
REG[7] =  i:4
  22 Gosub            5   36    0               00 output one row
REG[5] =  i:22
  36 IfPos            3   38    0               00 if r[3]>0 then r[3]-=0, goto 38; Groupby result generator entry point
REG[3] =  i:0
  37 Return           5    0    0               00 
REG[5] =  i:22
  23 IfPos            4   44    0               00 if r[4]>0 then r[4]-=0, goto 44; check abort flag
REG[4] =  i:0
  24 Gosub            6   42    0               00 reset accumulator
REG[6] =  i:24
  42 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  43 Return           6    0    0               00 
REG[6] =  i:24
  25 Column           3    0    9               00 r[9]=
REG[9] =  i:4
  26 CollSeq         11    0    0 (BINARY)      00 
  27 AggStep0         0    9    2 min(1)        01 accum=r[2] step(r[9])
REG[9] =  i:4
  28 If              11   30    0               00 
REG[11] =  i:0
  29 Column           3    0    1               00 r[1]=
REG[1] =  i:4
  30 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  31 SorterNext       2   17    0               00 
  17 SorterData       2   10    3               00 r[10]=data
  18 Column           3    0    8               00 r[8]=
REG[8] =  i:4
  19 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  i:4
REG[8] =  i:4
  20 Jump            21   25   21               00 
  25 Column           3    0    9               00 r[9]=
REG[9] =  i:4
  26 CollSeq         11    0    0 (BINARY)      00 
  27 AggStep          0    9    2 min(1)        01 accum=r[2] step(r[9])
REG[9] =  i:4
  28 If              11   30    0               00 
REG[11] =  i:1
  30 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  31 SorterNext       2   17    0               00 
  17 SorterData       2   10    3               00 r[10]=data
  18 Column           3    0    8               00 r[8]=
REG[8] =  i:4
  19 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  i:4
REG[8] =  i:4
  20 Jump            21   25   21               00 
  25 Column           3    0    9               00 r[9]=
REG[9] =  i:4
  26 CollSeq         11    0    0 (BINARY)      00 
  27 AggStep          0    9    2 min(1)        01 accum=r[2] step(r[9])
REG[9] =  i:4
  28 If              11   30    0               00 
REG[11] =  i:1
  30 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  31 SorterNext       2   17    0               00 
  17 SorterData       2   10    3               00 r[10]=data
  18 Column           3    0    8               00 r[8]=
REG[8] =  i:5
  19 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  i:4
REG[8] =  i:5
  20 Jump            21   25   21               00 
  21 Move             8    7    1               00 r[7]=r[8]
REG[7] =  i:5
  22 Gosub            5   36    0               00 output one row
REG[5] =  i:22
  36 IfPos            3   38    0               00 if r[3]>0 then r[3]-=0, goto 38; Groupby result generator entry point
REG[3] =  i:1
  38 AggFinal         2    1    0 min(1)        00 accum=r[2] N=1
  39 Copy             1   12    1               00 r[12..13]=r[1..2]
REG[12] =  i:4
REG[13] =  i:4
  40 ResultRow       12    2    0               00 output=r[12..13]
REG[12] =  i:4
REG[13] =  i:4
  41 Return           5    0    0               00 end groupby result generator
REG[5] =  i:22
  23 IfPos            4   44    0               00 if r[4]>0 then r[4]-=0, goto 44; check abort flag
REG[4] =  i:0
  24 Gosub            6   42    0               00 reset accumulator
REG[6] =  i:24
  42 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  43 Return           6    0    0               00 
REG[6] =  i:24
  25 Column           3    0    9               00 r[9]=
REG[9] =  i:5
  26 CollSeq         11    0    0 (BINARY)      00 
  27 AggStep          0    9    2 min(1)        01 accum=r[2] step(r[9])
REG[9] =  i:5
  28 If              11   30    0               00 
REG[11] =  i:0
  29 Column           3    0    1               00 r[1]=
REG[1] =  i:5
  30 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  31 SorterNext       2   17    0               00 
  17 SorterData       2   10    3               00 r[10]=data
  18 Column           3    0    8               00 r[8]=
REG[8] =  i:5
  19 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  i:5
REG[8] =  i:5
  20 Jump            21   25   21               00 
  25 Column           3    0    9               00 r[9]=
REG[9] =  i:5
  26 CollSeq         11    0    0 (BINARY)      00 
  27 AggStep          0    9    2 min(1)        01 accum=r[2] step(r[9])
REG[9] =  i:5
  28 If              11   30    0               00 
REG[11] =  i:1
  30 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  31 SorterNext       2   17    0               00 
  17 SorterData       2   10    3               00 r[10]=data
  18 Column           3    0    8               00 r[8]=
REG[8] =  i:5
  19 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  i:5
REG[8] =  i:5
  20 Jump            21   25   21               00 
  25 Column           3    0    9               00 r[9]=
REG[9] =  i:5
  26 CollSeq         11    0    0 (BINARY)      00 
  27 AggStep          0    9    2 min(1)        01 accum=r[2] step(r[9])
REG[9] =  i:5
  28 If              11   30    0               00 
REG[11] =  i:1
  30 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  31 SorterNext       2   17    0               00 
  32 Gosub            5   36    0               00 output final row
REG[5] =  i:32
  36 IfPos            3   38    0               00 if r[3]>0 then r[3]-=0, goto 38; Groupby result generator entry point
REG[3] =  i:1
  38 AggFinal         2    1    0 min(1)        00 accum=r[2] N=1
  39 Copy             1   12    1               00 r[12..13]=r[1..2]
REG[12] =  i:5
REG[13] =  i:5
  40 ResultRow       12    2    0               00 output=r[12..13]
REG[12] =  i:5
REG[13] =  i:5
  41 Return           5    0    0               00 end groupby result generator
REG[5] =  i:32
  33 Goto             0   44    0               00 
  44 Halt             0    0    0               00 
SQL: [;
;SELECT v2, min(v2) FROM v0 GROUP BY v2 ORDER BY v2 DESC;]
VDBE Trace:
   0 Init             0   54    0               00 Start at 54
  54 Transaction      0    0    7 0             01 usesStmtJournal=0
  55 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
  56 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,-B)       00 
   2 SorterOpen       2    1    0 k(1,B)        00 
   3 Integer          0    4    0               00 r[4]=0; clear abort flag
REG[4] =  i:0
   4 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
REG[3] =  i:0
   5 Null             0    7    7               00 r[7..7]=NULL
REG[7] =  NULL
   6 Gosub            6   44    0               00 
REG[6] =  i:6
  44 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  45 Return           6    0    0               00 
REG[6] =  i:6
   7 OpenRead         3    2    0 k(1,)         00 root=2 iDb=0; sqlite_autoindex_v0_1
   8 Explain          0    0    0 SCAN TABLE v0 00 
   9 Rewind           3   14    9 0             00 
  10 Column           3    1    9               00 r[9]=v0.v2
REG[9] =  NULL
  11 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s2[0200..](8)
  12 SorterInsert     2   10    0               00 
REG[10] =  s2[0200..](8)
  13 Next             3   10    0               01 
  10 Column           3    1    9               00 r[9]=v0.v2
REG[9] =  NULL
  11 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s2[0200..](8)
  12 SorterInsert     2   10    0               00 
REG[10] =  s2[0200..](8)
  13 Next             3   10    0               01 
  10 Column           3    1    9               00 r[9]=v0.v2
REG[9] =  i:5
  11 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s3[020105...](8)
  12 SorterInsert     2   10    0               00 
REG[10] =  s3[020105...](8)
  13 Next             3   10    0               01 
  14 Close            3    0    0               00 
  15 OpenPseudo       4   10    1               00 1 columns in r[10]
  16 SorterSort       2   46    0               00 GROUP BY sort
  17 SorterData       2   10    4               00 r[10]=data
  18 Column           4    0    8               00 r[8]=
REG[8] =  NULL
  19 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  NULL
REG[8] =  NULL
  20 Jump            21   25   21               00 
  25 Column           4    0    9               00 r[9]=
REG[9] =  NULL
  26 CollSeq         11    0    0 (BINARY)      00 
  27 AggStep0         0    9    2 min(1)        01 accum=r[2] step(r[9])
REG[9] =  NULL
  28 If              11   30    0               00 
REG[11] =  i:0
  29 Column           4    0    1               00 r[1]=
REG[1] =  NULL
  30 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  31 SorterNext       2   17    0               00 
  17 SorterData       2   10    4               00 r[10]=data
  18 Column           4    0    8               00 r[8]=
REG[8] =  NULL
  19 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  NULL
REG[8] =  NULL
  20 Jump            21   25   21               00 
  25 Column           4    0    9               00 r[9]=
REG[9] =  NULL
  26 CollSeq         11    0    0 (BINARY)      00 
  27 AggStep          0    9    2 min(1)        01 accum=r[2] step(r[9])
REG[9] =  NULL
  28 If              11   30    0               00 
REG[11] =  i:0
  29 Column           4    0    1               00 r[1]=
REG[1] =  NULL
  30 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  31 SorterNext       2   17    0               00 
  17 SorterData       2   10    4               00 r[10]=data
  18 Column           4    0    8               00 r[8]=
REG[8] =  i:5
  19 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  NULL
REG[8] =  i:5
  20 Jump            21   25   21               00 
  21 Move             8    7    1               00 r[7]=r[8]
REG[7] =  i:5
  22 Gosub            5   36    0               00 output one row
REG[5] =  i:22
  36 IfPos            3   38    0               00 if r[3]>0 then r[3]-=0, goto 38; Groupby result generator entry point
REG[3] =  i:1
  38 AggFinal         2    1    0 min(1)        00 accum=r[2] N=1
  39 Copy             1   13    1               00 r[13..14]=r[1..2]
REG[13] =  NULL
REG[14] =  NULL
  40 Copy            13   12    0               00 r[12]=r[13]
REG[12] =  NULL
  41 MakeRecord      12    3   15               00 r[15]=mkrec(r[12..14])
REG[15] =  s4[04000000....](8)
  42 SorterInsert     1   15    0               00 
REG[15] =  s4[04000000....](8)
  43 Return           5    0    0               00 end groupby result generator
REG[5] =  i:22
  23 IfPos            4   46    0               00 if r[4]>0 then r[4]-=0, goto 46; check abort flag
REG[4] =  i:0
  24 Gosub            6   44    0               00 reset accumulator
REG[6] =  i:24
  44 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  45 Return           6    0    0               00 
REG[6] =  i:24
  25 Column           4    0    9               00 r[9]=
REG[9] =  i:5
  26 CollSeq         11    0    0 (BINARY)      00 
  27 AggStep          0    9    2 min(1)        01 accum=r[2] step(r[9])
REG[9] =  i:5
  28 If              11   30    0               00 
REG[11] =  i:0
  29 Column           4    0    1               00 r[1]=
REG[1] =  i:5
  30 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  31 SorterNext       2   17    0               00 
  32 Gosub            5   36    0               00 output final row
REG[5] =  i:32
  36 IfPos            3   38    0               00 if r[3]>0 then r[3]-=0, goto 38; Groupby result generator entry point
REG[3] =  i:1
  38 AggFinal         2    1    0 min(1)        00 accum=r[2] N=1
  39 Copy             1   13    1               00 r[13..14]=r[1..2]
REG[13] =  i:5
REG[14] =  i:5
  40 Copy            13   12    0               00 r[12]=r[13]
REG[12] =  i:5
  41 MakeRecord      12    3   15               00 r[15]=mkrec(r[12..14])
REG[15] =  s7[04010101050505.......](8)
  42 SorterInsert     1   15    0               00 
REG[15] =  s7[04010101050505.......](8)
  43 Return           5    0    0               00 end groupby result generator
REG[5] =  i:32
  33 Goto             0   46    0               00 
  46 OpenPseudo       5   16    4               00 4 columns in r[16]
  47 SorterSort       1   53    0               00 
  48 SorterData       1   16    5               00 r[16]=data
  49 Column           5    1   13               00 r[13]=v2
REG[13] =  i:5
  50 Column           5    2   14               00 r[14]=min(v2)
REG[14] =  i:5
  51 ResultRow       13    2    0               00 output=r[13..14]
REG[13] =  i:5
REG[14] =  i:5
  52 SorterNext       1   48    0               00 
  48 SorterData       1   16    5               00 r[16]=data
  49 Column           5    1   13               00 r[13]=v2
REG[13] =  NULL
  50 Column           5    2   14               00 r[14]=min(v2)
REG[14] =  NULL
  51 ResultRow       13    2    0               00 output=r[13..14]
REG[13] =  NULL
REG[14] =  NULL
  52 SorterNext       1   48    0               00 
  53 Halt             0    0    0               00 
SQL: [;
;SELECT v2, min(v1) FROM v0 GROUP BY v2 ORDER BY 1;]
VDBE Trace:
   0 Init             0   46    0               00 Start at 46
  46 Transaction      0    0    7 0             01 usesStmtJournal=0
  47 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
  48 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 SorterOpen       2    2    0 k(1,B)        00 
   3 Integer          0    5    0               00 r[5]=0; clear abort flag
REG[5] =  i:0
   4 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
   5 Null             0    8    8               00 r[8..8]=NULL
REG[8] =  NULL
   6 Gosub            7   43    0               00 
REG[7] =  i:6
  43 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  44 Return           7    0    0               00 
REG[7] =  i:6
   7 OpenRead         3    2    0 k(1,)         00 root=2 iDb=0; sqlite_autoindex_v0_1
   8 Explain          0    0    0 SCAN TABLE v0 00 
   9 Rewind           3   15   10 0             00 
  10 Column           3    1   10               00 r[10]=v0.v2
REG[10] =  NULL
  11 Column           3    0   11               00 r[11]=v0.v1
REG[11] =  i:0
  12 MakeRecord      10    2   12               00 r[12]=mkrec(r[10..11])
REG[12] =  s3[030008...](8)
  13 SorterInsert     2   12    0               00 
REG[12] =  s3[030008...](8)
  14 Next             3   10    0               01 
  10 Column           3    1   10               00 r[10]=v0.v2
REG[10] =  NULL
  11 Column           3    0   11               00 r[11]=v0.v1
REG[11] =  i:1
  12 MakeRecord      10    2   12               00 r[12]=mkrec(r[10..11])
REG[12] =  s3[030009...](8)
  13 SorterInsert     2   12    0               00 
REG[12] =  s3[030009...](8)
  14 Next             3   10    0               01 
  10 Column           3    1   10               00 r[10]=v0.v2
REG[10] =  i:5
  11 Column           3    0   11               00 r[11]=v0.v1
REG[11] =  i:31
  12 MakeRecord      10    2   12               00 r[12]=mkrec(r[10..11])
REG[12] =  s5[030101051F.....](8)
  13 SorterInsert     2   12    0               00 
REG[12] =  s5[030101051F.....](8)
  14 Next             3   10    0               01 
  15 Close            3    0    0               00 
  16 OpenPseudo       4   12    2               00 2 columns in r[12]
  17 SorterSort       2   45    0               00 GROUP BY sort
  18 SorterData       2   12    4               00 r[12]=data
  19 Column           4    0    9               00 r[9]=
REG[9] =  NULL
  20 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  NULL
REG[9] =  NULL
  21 Jump            22   26   22               00 
  26 Column           4    1   10               00 r[10]=
REG[10] =  i:0
  27 CollSeq         13    0    0 (BINARY)      00 
  28 AggStep0         0   10    2 min(1)        01 accum=r[2] step(r[10])
REG[10] =  i:0
  29 If              13   31    0               00 
REG[13] =  i:0
  30 Column           4    0    1               00 r[1]=
REG[1] =  NULL
  31 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  32 SorterNext       2   18    0               00 
  18 SorterData       2   12    4               00 r[12]=data
  19 Column           4    0    9               00 r[9]=
REG[9] =  NULL
  20 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  NULL
REG[9] =  NULL
  21 Jump            22   26   22               00 
  26 Column           4    1   10               00 r[10]=
REG[10] =  i:1
  27 CollSeq         13    0    0 (BINARY)      00 
  28 AggStep          0   10    2 min(1)        01 accum=r[2] step(r[10])
REG[10] =  i:1
  29 If              13   31    0               00 
REG[13] =  i:1
  31 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  32 SorterNext       2   18    0               00 
  18 SorterData       2   12    4               00 r[12]=data
  19 Column           4    0    9               00 r[9]=
REG[9] =  i:5
  20 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  NULL
REG[9] =  i:5
  21 Jump            22   26   22               00 
  22 Move             9    8    1               00 r[8]=r[9]
REG[8] =  i:5
  23 Gosub            6   37    0               00 output one row
REG[6] =  i:23
  37 IfPos            4   39    0               00 if r[4]>0 then r[4]-=0, goto 39; Groupby result generator entry point
REG[4] =  i:1
  39 AggFinal         2    1    0 min(1)        00 accum=r[2] N=1
  40 Copy             1   14    1               00 r[14..15]=r[1..2]
REG[14] =  NULL
REG[15] =  i:0
  41 ResultRow       14    2    0               00 output=r[14..15]
REG[14] =  NULL
REG[15] =  i:0
  42 Return           6    0    0               00 end groupby result generator
REG[6] =  i:23
  24 IfPos            5   45    0               00 if r[5]>0 then r[5]-=0, goto 45; check abort flag
REG[5] =  i:0
  25 Gosub            7   43    0               00 reset accumulator
REG[7] =  i:25
  43 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  44 Return           7    0    0               00 
REG[7] =  i:25
  26 Column           4    1   10               00 r[10]=
REG[10] =  i:31
  27 CollSeq         13    0    0 (BINARY)      00 
  28 AggStep          0   10    2 min(1)        01 accum=r[2] step(r[10])
REG[10] =  i:31
  29 If              13   31    0               00 
REG[13] =  i:0
  30 Column           4    0    1               00 r[1]=
REG[1] =  i:5
  31 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  32 SorterNext       2   18    0               00 
  33 Gosub            6   37    0               00 output final row
REG[6] =  i:33
  37 IfPos            4   39    0               00 if r[4]>0 then r[4]-=0, goto 39; Groupby result generator entry point
REG[4] =  i:1
  39 AggFinal         2    1    0 min(1)        00 accum=r[2] N=1
  40 Copy             1   14    1               00 r[14..15]=r[1..2]
REG[14] =  i:5
REG[15] =  i:31
  41 ResultRow       14    2    0               00 output=r[14..15]
REG[14] =  i:5
REG[15] =  i:31
  42 Return           6    0    0               00 end groupby result generator
REG[6] =  i:33
  34 Goto             0   45    0               00 
  45 Halt             0    0    0               00 
SQL: [;
;SELECT b, min(a) FROM t1 GROUP BY b ORDER BY b DESC;]
VDBE Trace:
   0 Init             0   55    0               00 Start at 55
  55 Transaction      0    0    7 0             01 usesStmtJournal=0
  56 TableLock        0    5    0 t1            00 iDb=0 root=5 write=0
  57 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,-B)       00 
   2 SorterOpen       2    2    0 k(1,B)        00 
   3 Integer          0    5    0               00 r[5]=0; clear abort flag
REG[5] =  i:0
   4 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
   5 Null             0    8    8               00 r[8..8]=NULL
REG[8] =  NULL
   6 Gosub            7   45    0               00 
REG[7] =  i:6
  45 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  46 Return           7    0    0               00 
REG[7] =  i:6
   7 OpenRead         0    5    0 2             00 root=5 iDb=0; t1
   8 Explain          0    0    0 SCAN TABLE t1 00 
   9 Rewind           0   15    0               00 
  10 Column           0    1   10               00 r[10]=t1.b
REG[10] =  i:4
  11 Rowid            0   11    0               00 r[11]=rowid
REG[11] =  i:10
  12 MakeRecord      10    2   12               00 r[12]=mkrec(r[10..11])
REG[12] =  s5[030101040A.....](8)
  13 SorterInsert     2   12    0               00 
REG[12] =  s5[030101040A.....](8)
  14 Next             0   10    0               01 
  10 Column           0    1   10               00 r[10]=t1.b
REG[10] =  i:4
  11 Rowid            0   11    0               00 r[11]=rowid
REG[11] =  i:15
  12 MakeRecord      10    2   12               00 r[12]=mkrec(r[10..11])
REG[12] =  s5[030101040F.....](8)
  13 SorterInsert     2   12    0               00 
REG[12] =  s5[030101040F.....](8)
  14 Next             0   10    0               01 
  10 Column           0    1   10               00 r[10]=t1.b
REG[10] =  i:4
  11 Rowid            0   11    0               00 r[11]=rowid
REG[11] =  i:16
  12 MakeRecord      10    2   12               00 r[12]=mkrec(r[10..11])
REG[12] =  s5[0301010410.....](8)
  13 SorterInsert     2   12    0               00 
REG[12] =  s5[0301010410.....](8)
  14 Next             0   10    0               01 
  10 Column           0    1   10               00 r[10]=t1.b
REG[10] =  i:5
  11 Rowid            0   11    0               00 r[11]=rowid
REG[11] =  i:18
  12 MakeRecord      10    2   12               00 r[12]=mkrec(r[10..11])
REG[12] =  s5[0301010512.....](8)
  13 SorterInsert     2   12    0               00 
REG[12] =  s5[0301010512.....](8)
  14 Next             0   10    0               01 
  10 Column           0    1   10               00 r[10]=t1.b
REG[10] =  i:5
  11 Rowid            0   11    0               00 r[11]=rowid
REG[11] =  i:23
  12 MakeRecord      10    2   12               00 r[12]=mkrec(r[10..11])
REG[12] =  s5[0301010517.....](8)
  13 SorterInsert     2   12    0               00 
REG[12] =  s5[0301010517.....](8)
  14 Next             0   10    0               01 
  10 Column           0    1   10               00 r[10]=t1.b
REG[10] =  i:5
  11 Rowid            0   11    0               00 r[11]=rowid
REG[11] =  i:29
  12 MakeRecord      10    2   12               00 r[12]=mkrec(r[10..11])
REG[12] =  s5[030101051D.....](8)
  13 SorterInsert     2   12    0               00 
REG[12] =  s5[030101051D.....](8)
  14 Next             0   10    0               01 
  15 Close            0    0    0               00 
  16 OpenPseudo       3   12    2               00 2 columns in r[12]
  17 SorterSort       2   47    0               00 GROUP BY sort
  18 SorterData       2   12    3               00 r[12]=data
  19 Column           3    0    9               00 r[9]=
REG[9] =  i:4
  20 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  NULL
REG[9] =  i:4
  21 Jump            22   26   22               00 
  22 Move             9    8    1               00 r[8]=r[9]
REG[8] =  i:4
  23 Gosub            6   37    0               00 output one row
REG[6] =  i:23
  37 IfPos            4   39    0               00 if r[4]>0 then r[4]-=0, goto 39; Groupby result generator entry point
REG[4] =  i:0
  38 Return           6    0    0               00 
REG[6] =  i:23
  24 IfPos            5   47    0               00 if r[5]>0 then r[5]-=0, goto 47; check abort flag
REG[5] =  i:0
  25 Gosub            7   45    0               00 reset accumulator
REG[7] =  i:25
  45 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  46 Return           7    0    0               00 
REG[7] =  i:25
  26 Column           3    1   10               00 r[10]=
REG[10] =  i:10
  27 CollSeq         13    0    0 (BINARY)      00 
  28 AggStep0         0   10    2 min(1)        01 accum=r[2] step(r[10])
REG[10] =  i:10
  29 If              13   31    0               00 
REG[13] =  i:0
  30 Column           3    0    1               00 r[1]=
REG[1] =  i:4
  31 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  32 SorterNext       2   18    0               00 
  18 SorterData       2   12    3               00 r[12]=data
  19 Column           3    0    9               00 r[9]=
REG[9] =  i:4
  20 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  i:4
REG[9] =  i:4
  21 Jump            22   26   22               00 
  26 Column           3    1   10               00 r[10]=
REG[10] =  i:15
  27 CollSeq         13    0    0 (BINARY)      00 
  28 AggStep          0   10    2 min(1)        01 accum=r[2] step(r[10])
REG[10] =  i:15
  29 If              13   31    0               00 
REG[13] =  i:1
  31 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  32 SorterNext       2   18    0               00 
  18 SorterData       2   12    3               00 r[12]=data
  19 Column           3    0    9               00 r[9]=
REG[9] =  i:4
  20 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  i:4
REG[9] =  i:4
  21 Jump            22   26   22               00 
  26 Column           3    1   10               00 r[10]=
REG[10] =  i:16
  27 CollSeq         13    0    0 (BINARY)      00 
  28 AggStep          0   10    2 min(1)        01 accum=r[2] step(r[10])
REG[10] =  i:16
  29 If              13   31    0               00 
REG[13] =  i:1
  31 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  32 SorterNext       2   18    0               00 
  18 SorterData       2   12    3               00 r[12]=data
  19 Column           3    0    9               00 r[9]=
REG[9] =  i:5
  20 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  i:4
REG[9] =  i:5
  21 Jump            22   26   22               00 
  22 Move             9    8    1               00 r[8]=r[9]
REG[8] =  i:5
  23 Gosub            6   37    0               00 output one row
REG[6] =  i:23
  37 IfPos            4   39    0               00 if r[4]>0 then r[4]-=0, goto 39; Groupby result generator entry point
REG[4] =  i:1
  39 AggFinal         2    1    0 min(1)        00 accum=r[2] N=1
  40 Copy             1   15    1               00 r[15..16]=r[1..2]
REG[15] =  i:4
REG[16] =  i:10
  41 Copy            15   14    0               00 r[14]=r[15]
REG[14] =  i:4
  42 MakeRecord      14    3   17               00 r[17]=mkrec(r[14..16])
REG[17] =  s7[0401010104040A.......](8)
  43 SorterInsert     1   17    0               00 
REG[17] =  s7[0401010104040A.......](8)
  44 Return           6    0    0               00 end groupby result generator
REG[6] =  i:23
  24 IfPos            5   47    0               00 if r[5]>0 then r[5]-=0, goto 47; check abort flag
REG[5] =  i:0
  25 Gosub            7   45    0               00 reset accumulator
REG[7] =  i:25
  45 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  46 Return           7    0    0               00 
REG[7] =  i:25
  26 Column           3    1   10               00 r[10]=
REG[10] =  i:18
  27 CollSeq         13    0    0 (BINARY)      00 
  28 AggStep          0   10    2 min(1)        01 accum=r[2] step(r[10])
REG[10] =  i:18
  29 If              13   31    0               00 
REG[13] =  i:0
  30 Column           3    0    1               00 r[1]=
REG[1] =  i:5
  31 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  32 SorterNext       2   18    0               00 
  18 SorterData       2   12    3               00 r[12]=data
  19 Column           3    0    9               00 r[9]=
REG[9] =  i:5
  20 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  i:5
REG[9] =  i:5
  21 Jump            22   26   22               00 
  26 Column           3    1   10               00 r[10]=
REG[10] =  i:23
  27 CollSeq         13    0    0 (BINARY)      00 
  28 AggStep          0   10    2 min(1)        01 accum=r[2] step(r[10])
REG[10] =  i:23
  29 If              13   31    0               00 
REG[13] =  i:1
  31 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  32 SorterNext       2   18    0               00 
  18 SorterData       2   12    3               00 r[12]=data
  19 Column           3    0    9               00 r[9]=
REG[9] =  i:5
  20 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  i:5
REG[9] =  i:5
  21 Jump            22   26   22               00 
  26 Column           3    1   10               00 r[10]=
REG[10] =  i:29
  27 CollSeq         13    0    0 (BINARY)      00 
  28 AggStep          0   10    2 min(1)        01 accum=r[2] step(r[10])
REG[10] =  i:29
  29 If              13   31    0               00 
REG[13] =  i:1
  31 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  32 SorterNext       2   18    0               00 
  33 Gosub            6   37    0               00 output final row
REG[6] =  i:33
  37 IfPos            4   39    0               00 if r[4]>0 then r[4]-=0, goto 39; Groupby result generator entry point
REG[4] =  i:1
  39 AggFinal         2    1    0 min(1)        00 accum=r[2] N=1
  40 Copy             1   15    1               00 r[15..16]=r[1..2]
REG[15] =  i:5
REG[16] =  i:18
  41 Copy            15   14    0               00 r[14]=r[15]
REG[14] =  i:5
  42 MakeRecord      14    3   17               00 r[17]=mkrec(r[14..16])
REG[17] =  s7[04010101050512.......](8)
  43 SorterInsert     1   17    0               00 
REG[17] =  s7[04010101050512.......](8)
  44 Return           6    0    0               00 end groupby result generator
REG[6] =  i:33
  34 Goto             0   47    0               00 
  47 OpenPseudo       4   18    4               00 4 columns in r[18]
  48 SorterSort       1   54    0               00 
  49 SorterData       1   18    4               00 r[18]=data
  50 Column           4    1   15               00 r[15]=b
REG[15] =  i:5
  51 Column           4    2   16               00 r[16]=min(a)
REG[16] =  i:18
  52 ResultRow       15    2    0               00 output=r[15..16]
REG[15] =  i:5
REG[16] =  i:18
  53 SorterNext       1   49    0               00 
  49 SorterData       1   18    4               00 r[18]=data
  50 Column           4    1   15               00 r[15]=b
REG[15] =  i:4
  51 Column           4    2   16               00 r[16]=min(a)
REG[16] =  i:10
  52 ResultRow       15    2    0               00 output=r[15..16]
REG[15] =  i:4
REG[16] =  i:10
  53 SorterNext       1   49    0               00 
  54 Halt             0    0    0               00 
SQL: [;
;SELECT c, min(abc) FROM t1b GROUP BY c ORDER BY 1;]
VDBE Trace:
   0 Init             0   46    0               00 Start at 46
  46 Transaction      0    0    7 0             01 usesStmtJournal=0
  47 TableLock        0    6    0 t1b           00 iDb=0 root=6 write=0
  48 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 SorterOpen       2    2    0 k(1,B)        00 
   3 Integer          0    5    0               00 r[5]=0; clear abort flag
REG[5] =  i:0
   4 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
   5 Null             0    8    8               00 r[8..8]=NULL
REG[8] =  NULL
   6 Gosub            7   43    0               00 
REG[7] =  i:6
  43 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  44 Return           7    0    0               00 
REG[7] =  i:6
   7 OpenRead         0    6    0 2             00 root=6 iDb=0; t1b
   8 Explain          0    0    0 SCAN TABLE t1b 00 
   9 Rewind           0   15    0               00 
  10 Column           0    1   10               00 r[10]=t1b.c
REG[10] =  i:5
  11 Column           0    0   11               00 r[11]=t1b.abc
REG[11] =  i:27
  12 MakeRecord      10    2   12               00 r[12]=mkrec(r[10..11])
REG[12] =  s5[030101051B.....](8)
  13 SorterInsert     2   12    0               00 
REG[12] =  s5[030101051B.....](8)
  14 Next             0   10    0               01 
  15 Close            0    0    0               00 
  16 OpenPseudo       3   12    2               00 2 columns in r[12]
  17 SorterSort       2   45    0               00 GROUP BY sort
  18 SorterData       2   12    3               00 r[12]=data
  19 Column           3    0    9               00 r[9]=
REG[9] =  i:5
  20 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  NULL
REG[9] =  i:5
  21 Jump            22   26   22               00 
  22 Move             9    8    1               00 r[8]=r[9]
REG[8] =  i:5
  23 Gosub            6   37    0               00 output one row
REG[6] =  i:23
  37 IfPos            4   39    0               00 if r[4]>0 then r[4]-=0, goto 39; Groupby result generator entry point
REG[4] =  i:0
  38 Return           6    0    0               00 
REG[6] =  i:23
  24 IfPos            5   45    0               00 if r[5]>0 then r[5]-=0, goto 45; check abort flag
REG[5] =  i:0
  25 Gosub            7   43    0               00 reset accumulator
REG[7] =  i:25
  43 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  44 Return           7    0    0               00 
REG[7] =  i:25
  26 Column           3    1   10               00 r[10]=
REG[10] =  i:27
  27 CollSeq         13    0    0 (BINARY)      00 
  28 AggStep0         0   10    2 min(1)        01 accum=r[2] step(r[10])
REG[10] =  i:27
  29 If              13   31    0               00 
REG[13] =  i:0
  30 Column           3    0    1               00 r[1]=
REG[1] =  i:5
  31 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  32 SorterNext       2   18    0               00 
  33 Gosub            6   37    0               00 output final row
REG[6] =  i:33
  37 IfPos            4   39    0               00 if r[4]>0 then r[4]-=0, goto 39; Groupby result generator entry point
REG[4] =  i:1
  39 AggFinal         2    1    0 min(1)        00 accum=r[2] N=1
  40 Copy             1   14    1               00 r[14..15]=r[1..2]
REG[14] =  i:5
REG[15] =  i:27
  41 ResultRow       14    2    0               00 output=r[14..15]
REG[14] =  i:5
REG[15] =  i:27
  42 Return           6    0    0               00 end groupby result generator
REG[6] =  i:33
  34 Goto             0   45    0               00 
  45 Halt             0    0    0               00 
SQL: [;INSERT INTO t1 VALUES(1,2);]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    1    7 0             01 usesStmtJournal=0
  15 TableLock        0    5    1 t1            00 iDb=0 root=5 write=1
  16 Goto             0    1    0               00 
   1 OpenWrite        0    5    0 2             00 root=5 iDb=0; t1
   2 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  i:1
   5 MustBeInt        1    0    0               00 
REG[1] =  i:1
   6 SoftNull         2    0    0               00 r[2]=NULL
   7 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   8 NotExists        0   10    1               00 intkey=r[1]
REG[1] =  i:1
  10 MakeRecord       2    2    4 D             00 r[4]=mkrec(r[2..3])
REG[4] =  s4[03000102....](8)
  11 Insert           0    4    1 t1            13 intkey=r[1] data=r[4]
REG[4] =  s4[03000102....](8)
REG[1] =  i:1
  12 Noop             0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [;SELECT a, sum(a) FROM t1 WHERE a=5 GROUP BY a;]
VDBE Trace:
   0 Init             0   36    0               00 Start at 36
  36 Transaction      0    0    7 0             01 usesStmtJournal=0
  37 TableLock        0    5    0 t1            00 iDb=0 root=5 write=0
  38 Goto             0    1    0               00 
   1 Noop             1    1    0               00 
   2 Integer          0    4    0               00 r[4]=0; clear abort flag
REG[4] =  i:0
   3 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
REG[3] =  i:0
   4 Null             0    7    7               00 r[7..7]=NULL
REG[7] =  NULL
   5 Gosub            6   33    0               00 
REG[6] =  i:5
  33 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  34 Return           6    0    0               00 
REG[6] =  i:5
   6 OpenRead         0    5    0 0             00 root=5 iDb=0; t1
   7 Explain          0    0    0 SEARCH TABLE t1 USING INTEGER PRIMARY KEY (rowid=?) 00 
   8 Integer          5    9    0               00 r[9]=5
REG[9] =  i:5
   9 MustBeInt        9   22    0               00 
REG[9] =  i:5
  10 NotExists        0   22    9               00 intkey=r[9]; pk
REG[9] =  i:5
  22 Close            0    0    0               00 
  23 Gosub            5   27    0               00 output final row
REG[5] =  i:23
  27 IfPos            3   29    0               00 if r[3]>0 then r[3]-=0, goto 29; Groupby result generator entry point
REG[3] =  i:0
  28 Return           5    0    0               00 
REG[5] =  i:23
  24 Goto             0   35    0               00 
  35 Halt             0    0    0               00 
SQL: [;
;SELECT x, sum(x) FROM v3 WHERE x=5;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    7 0             01 usesStmtJournal=0
  17 TableLock        0    3    0 v3            00 iDb=0 root=3 write=0
  18 Integer          5    4    0               00 r[4]=5
REG[4] =  i:5
  19 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    3    0 1             00 root=3 iDb=0; v3
   3 Explain          0    0    0 SCAN TABLE v3 00 
   4 Rewind           0   11    0               00 
  11 Close            0    0    0               00 
  12 AggFinal         2    1    0 sum(1)        00 accum=r[2] N=1
  13 Copy             1    6    1               00 r[6..7]=r[1..2]
REG[6] =  NULL
REG[7] =  NULL
  14 ResultRow        6    2    0               00 output=r[6..7]
REG[6] =  NULL
REG[7] =  NULL
  15 Halt             0    0    0               00 
SQL: [;
;CREATE TABLE u (
      tr2 DOUBLE,
      tr1 VARCHAR COLLATE NOCASE,
      t8 DOUBLE
    );]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    7 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:10
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:9
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:9
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:9
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:9
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:9
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:9
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 u             00 r[7]='u'
REG[7] =   t1[u](8)
  21 String8          0    8    0 u             00 r[8]='u'
REG[8] =   t1[u](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:10
  23 String8          0   10    0 CREATE TABLE u (
      tr2 DOUBLE,
      tr1 VARCHAR COLLATE NOCASE,
      t8 DOUBLE
    ) 00 r[10]='CREATE TABLE u (
      tr2 DOUBLE,
      tr1 VARCHAR COLLATE NOCASE,
      t8 DOUBLE
    )'
REG[10] =   t90[CREATE TABLE u ](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s105[07170F0F0181417461626C6575750A43......Atableuu.C](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s105[07170F0F0181417461626C6575750A43......Atableuu.C](8)
REG[5] =  i:9
  26 Close            1    0    0               00 
  27 SetCookie        0    1    8               00 
  28 ParseSchema      0    0    0 tbl_name='u' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    8 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 u             00 r[2]='u'
REG[2] =   t1[u](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[u](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[u](8)
REG[1] =   s2[v3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[u](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[u](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[u](8)
REG[1] =   s3[t1b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[u](8)
REG[1] =   s3[t1b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[def](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[u](8)
REG[1] =   s3[def](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[e](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[u](8)
REG[1] =   s1[e](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[u](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[u](8)
REG[1] =   s1[u](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[u](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:10
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s90[CREATE TABLE u ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[u](8)
REG[6] =  i:10
REG[7] =   s90[CREATE TABLE u ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;SELECT typeof(sum(v1)) FROM v0;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    8 0             01 usesStmtJournal=0
  15 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
  16 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         1    4    0 k(2,,)        00 root=4 iDb=0; xyz
   3 Explain          0    0    0 SCAN TABLE v0 USING COVERING INDEX xyz 00 
   4 Rewind           1    8    3 0             00 
   5 Column           1    1    3               00 r[3]=v0.v1
REG[3] =  i:0
   6 AggStep0         0    3    1 sum(1)        01 accum=r[1] step(r[3])
REG[3] =  i:0
   7 Next             1    5    0               01 
   5 Column           1    1    3               00 r[3]=v0.v1
REG[3] =  i:1
   6 AggStep          0    3    1 sum(1)        01 accum=r[1] step(r[3])
REG[3] =  i:1
   7 Next             1    5    0               01 
   5 Column           1    1    3               00 r[3]=v0.v1
REG[3] =  i:31
   6 AggStep          0    3    1 sum(1)        01 accum=r[1] step(r[3])
REG[3] =  i:31
   7 Next             1    5    0               01 
   8 Close            1    0    0               00 
   9 AggFinal         1    1    0 sum(1)        00 accum=r[1] N=1
  10 Copy             1    3    0               00 r[3]=r[1]
REG[3] =  i:32
  11 Function0        0    3    4 typeof(1)     01 r[4]=func(r[3])
REG[3] =  i:32
REG[4] =   t7[integer](8)
  12 ResultRow        4    1    0               00 output=r[4]
REG[4] =   t7[integer](8)
  13 Halt             0    0    0               00 
SQL: [;
;DROP TABLE IF EXISTS u;]
VDBE Trace:
   0 Init             0   41    0               00 Start at 41
  41 Transaction      0    1    8 0             01 usesStmtJournal=1
  42 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  43 String8          0    3    0 u             00 r[3]='u'
REG[3] =   t1[u](8)
  44 String8          0    5    0 trigger       00 r[5]='trigger'
REG[5] =   t7[trigger](8)
  45 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[v0](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t1[u](8)
REG[2] =   s2[v0](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[v3](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t1[u](8)
REG[2] =   s2[v3](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[v0](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t1[u](8)
REG[2] =   s2[v0](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t1[u](8)
REG[2] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s3[t1b](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t1[u](8)
REG[2] =   s3[t1b](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s3[t1b](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t1[u](8)
REG[2] =   s3[t1b](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s3[def](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t1[u](8)
REG[2] =   s3[def](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[e](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t1[u](8)
REG[2] =   s1[e](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[u](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t1[u](8)
REG[2] =   s1[u](8)
   7 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
   8 Eq               5   12    4 (BINARY)      52 if r[5]==r[4] goto 12
REG[5] =   t7[trigger](8)
REG[4] =   s5[table](8)
   9 Rowid            0    6    0               00 r[6]=rowid
REG[6] =  i:9
  10 Once             0   11    0               00 
  11 Delete           0    0    0 sqlite_master 02 
  12 Next             0    5    0               01 
  13 Close            0    0    0               00 
  14 Destroy         10    4    0               00 
REG[4] =  i:0
  15 Null             0    7    8               00 r[7..8]=NULL
REG[7] =  NULL
  16 IfNot            4   25    1               00 
REG[4] =  i:0
  25 Close            1    0    0               00 
  26 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  27 RowSetRead       7   37    8               00 r[8]=rowset(7)
REG[7] =  NULL
REG[8] =  NULL
  37 Close            1    0    0               00 
  38 DropTable        0    0    0 u             00 
  39 SetCookie        0    1    9               00 
  40 Halt             0    0    0               00 
SQL: [;CREATE TABLE u (tr1, tr2 REAL PRIMARY KEY);]
VDBE Trace:
   0 Init             0   42    0               00 Start at 42
  42 Transaction      0    1    9 0             01 usesStmtJournal=0
  43 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  44 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:10
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:9
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:9
  10 Close            0    0    0               00 
  11 Noop             0   23    0               00 
  12 CreateIndex      0    4    0               00 r[4]=root iDb=0
REG[4] =  i:11
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:10
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_u_1 00 r[7]='sqlite_autoindex_u_1'
REG[7] =   t20[sqlite_autoinde](8)
  17 String8          0    8    0 u             00 r[8]='u'
REG[8] =   t1[u](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:11
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s33[0617350F0100696E64657873716C6974..5...indexsqlit](8)
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  s33[0617350F0100696E64657873716C6974..5...indexsqlit](8)
REG[5] =  i:10
  22 Close            1    0    0               00 
  23 Close            0    0    0               00 
  24 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  25 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  26 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  27 MustBeInt        1   30    0               00 
REG[1] =  i:9
  28 NotExists        2   30    1               00 intkey=r[1]; pk
REG[1] =  i:9
  29 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:9
  30 IsNull          13   38    0               00 if r[13]==NULL goto 38
REG[13] =  i:9
  31 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  32 String8          0   15    0 u             00 r[15]='u'
REG[15] =   t1[u](8)
  33 String8          0   16    0 u             00 r[16]='u'
REG[16] =   t1[u](8)
  34 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:10
  35 String8          0   18    0 CREATE TABLE u (tr1, tr2 REAL PRIMARY KEY) 00 r[18]='CREATE TABLE u (tr1, tr2 REAL PRIMARY KEY)'
REG[18] =   t42[CREATE TABLE u ](8)
  36 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s56[06170F0F01617461626C6575750A4352.....atableuu.CR](8)
  37 Insert           2   19   13               00 intkey=r[13] data=r[19]
REG[19] =  s56[06170F0F01617461626C6575750A4352.....atableuu.CR](8)
REG[13] =  i:9
  38 Close            2    0    0               00 
  39 SetCookie        0    1   10               00 
  40 ParseSchema      0    0    0 tbl_name='u' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0   10 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 u             00 r[2]='u'
REG[2] =   t1[u](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[u](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[u](8)
REG[1] =   s2[v3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[u](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[u](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[u](8)
REG[1] =   s3[t1b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[u](8)
REG[1] =   s3[t1b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[def](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[u](8)
REG[1] =   s3[def](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[e](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[u](8)
REG[1] =   s1[e](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[u](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[u](8)
REG[1] =   s1[u](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[u](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:10
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s42[CREATE TABLE u ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[u](8)
REG[6] =  i:10
REG[7] =   s42[CREATE TABLE u ](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[u](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[u](8)
REG[1] =   s1[u](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s20[sqlite_autoinde](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:11
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =  NULL
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s20[sqlite_autoinde](8)
REG[6] =  i:11
REG[7] =  NULL
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  41 Halt             0    0    0               00 
SQL: [;UPDATE t1 SET a = NULL;]
VDBE Trace:
   0 Init             0   26    0               00 Start at 26
  26 Transaction      0    1   10 0             01 usesStmtJournal=1
  27 TableLock        0    5    1 t1            00 iDb=0 root=5 write=1
  28 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    5    0 0             00 root=5 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:10
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:10
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:15
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:15
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:16
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:16
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:18
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:18
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:23
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:23
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:29
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:29
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 OpenWrite        0    5    0 2             00 root=5 iDb=0; t1
  10 RowSetRead       1   24    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:1
  12 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  13 MustBeInt        3    0    0               00 
REG[3] =  NULL
SQL: [;SELECT DISTINCT * FROM v0 WHERE (v0.v1 IS NULL);]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0   10 0             01 usesStmtJournal=0
  14 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
  15 Goto             0    1    0               00 
   1 Noop             1    0    0               08 
   2 OpenRead         2    2    0 k(1,)         00 root=2 iDb=0; sqlite_autoindex_v0_1
   3 Explain          0    0    0 SCAN TABLE v0 00 
   4 Rewind           2   11    1 0             00 
   5 Column           2    0    1               00 r[1]=v0.v1
REG[1] =  i:0
   6 NotNull          1   10    0               00 if r[1]!=NULL goto 10
REG[1] =  i:0
  10 Next             2    5    0               01 
   5 Column           2    0    1               00 r[1]=v0.v1
REG[1] =  i:1
   6 NotNull          1   10    0               00 if r[1]!=NULL goto 10
REG[1] =  i:1
  10 Next             2    5    0               01 
   5 Column           2    0    1               00 r[1]=v0.v1
REG[1] =  i:31
   6 NotNull          1   10    0               00 if r[1]!=NULL goto 10
REG[1] =  i:31
  10 Next             2    5    0               01 
  11 Close            2    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0  143    0               00 Start at 143
 143 Transaction      0    0   10 0             01 usesStmtJournal=0
 144 Transaction      1    0    0 0             01 usesStmtJournal=0
 145 TableLock        0   10    0 u             00 iDb=0 root=10 write=0
 146 TableLock        0    6    0 t1b           00 iDb=0 root=6 write=0
 147 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
 148 String8          0   13    0 c             00 r[13]='c'
REG[13] =   t1[c](8)
 149 Goto             0    1    0               00 
   1 Integer        100    1    0               00 r[1]=100
REG[1] =  i:100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
REG[1] =  i:100
   4 IntegrityCk      2   11    1 [11,9,8,6,7,5,3,4,2] 00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
REG[2] =  NULL
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
REG[1] =  i:100
  12 OpenRead         1   10    0 2             00 root=10 iDb=0; u
  13 OpenRead         2   11    0 k(2,,)        00 root=11 iDb=0; sqlite_autoindex_u_1
  14 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  15 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  16 Rewind           1   41    0               00 
  41 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  42 IfPos            1   44    0               00 if r[1]>0 then r[1]-=0, goto 44
REG[1] =  i:100
  44 Count            2    3    0               00 r[3]=count()
REG[3] =  i:0
  45 Eq               8   50    3               90 if r[8]==r[3] goto 50
REG[8] =  i:0
REG[3] =  i:0
  50 IfPos            1   52    0               00 if r[1]>0 then r[1]-=0, goto 52
REG[1] =  i:100
  52 OpenRead         1    6    0 2             00 root=6 iDb=0; t1b
  53 OpenRead         2    7    0 k(2,,)        00 root=7 iDb=0; sqlite_autoindex_t1b_1
  54 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  55 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  56 Rewind           1   80    0               00 
  57 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  58 Column           1    0   11               00 r[11]=t1b.abc
REG[11] =  i:27
  59 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:1
  60 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  61 Found            2   72   11 2             00 key=r[11..12]
REG[11] =  i:27
REG[12] =  i:1
  72 IsNull          11   79    0               00 if r[11]==NULL goto 79
REG[11] =  i:27
  73 Next             2   75    0               00 
  74 Goto             0   79    0               00 
  79 Next             1   57    0               00 
  80 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  81 IfPos            1   83    0               00 if r[1]>0 then r[1]-=0, goto 83
REG[1] =  i:100
  83 Count            2    3    0               00 r[3]=count()
REG[3] =  i:1
  84 Eq               8   89    3               90 if r[8]==r[3] goto 89
REG[8] =  i:1
REG[3] =  i:1
  89 IfPos            1   91    0               00 if r[1]>0 then r[1]-=0, goto 91
REG[1] =  i:100
  91 OpenRead         2    4    0 k(2,,)        00 root=4 iDb=0; xyz
  92 OpenRead         3    2    0 k(1,)         00 root=2 iDb=0; sqlite_autoindex_v0_1
  93 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  94 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  95 Integer          0    9    0               00 r[9]=0
REG[9] =  i:0
  96 Rewind           3  121    0               00 
  97 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  98 Column           3    0    3               80 r[3]=v0.v1
REG[3] =  i:0
  99 NotNull          3  105    0               00 if r[3]!=NULL goto 105
REG[3] =  i:0
 105 Column           3    0   14               00 r[14]=v0.v1
REG[14] =  i:0
 106 Eq              14   11   13 (BINARY)      61 if r[14]==r[13] goto 11
REG[14] =  i:0
REG[13] =   t1[c](8)
REG[11] =  i:0
 107 Column           3    0   12               00 r[12]=v0.v1
REG[12] =  i:0
 108 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
 109 Found            2  120   11 2             00 key=r[11..12]
REG[11] =  i:0
REG[12] =  i:0
 120 Next             3   97    0               00 
  97 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
  98 Column           3    0    3               80 r[3]=v0.v1
REG[3] =  i:1
  99 NotNull          3  105    0               00 if r[3]!=NULL goto 105
REG[3] =  i:1
 105 Column           3    0   14               00 r[14]=v0.v1
REG[14] =  i:1
 106 Eq              14   11   13 (BINARY)      61 if r[14]==r[13] goto 11
REG[14] =  i:1
REG[13] =   t1[c](8)
REG[11] =  i:0
 107 Column           3    0   12               00 r[12]=v0.v1
REG[12] =  i:1
 108 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:1
 109 Found            2  120   11 2             00 key=r[11..12]
REG[11] =  i:0
REG[12] =  i:1
 120 Next             3   97    0               00 
  97 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:2
  98 Column           3    0    3               80 r[3]=v0.v1
REG[3] =  i:31
  99 NotNull          3  105    0               00 if r[3]!=NULL goto 105
REG[3] =  i:31
 105 Column           3    0   14               00 r[14]=v0.v1
REG[14] =  i:31
 106 Eq              14   11   13 (BINARY)      61 if r[14]==r[13] goto 11
REG[14] =  i:31
REG[13] =   t1[c](8)
REG[11] =  i:0
 107 Column           3    0   12               00 r[12]=v0.v1
REG[12] =  i:31
 108 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:2
 109 Found            2  120   11 2             00 key=r[11..12]
REG[11] =  i:0
REG[12] =  i:31
 120 Next             3   97    0               00 
 121 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
 122 IfPos            1  124    0               00 if r[1]>0 then r[1]-=0, goto 124
REG[1] =  i:100
 124 Count            2    3    0               00 r[3]=count()
REG[3] =  i:3
 125 Eq               8  130    3               90 if r[8]==r[3] goto 130
REG[8] =  i:3
REG[3] =  i:3
 130 IfPos            1  132    0               00 if r[1]>0 then r[1]-=0, goto 132
REG[1] =  i:100
 132 IntegrityCk      2    1    1 ]             01 
 133 IsNull           2  138    0               00 if r[2]==NULL goto 138
REG[2] =  NULL
 138 AddImm           1 -100    0               00 r[1]=r[1]+-100
REG[1] =  i:100
 139 If               1  142    0               00 
REG[1] =  i:0
 140 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
 141 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
 142 Halt             0    0    0               00 
SQL: [;INSERT INTO v0(v2, v2) VALUES (0, $x), (0, 0);]
VDBE Trace:
   0 Init             0   29    0               00 Start at 29
  29 Transaction      0    1   10 0             01 usesStmtJournal=1
  30 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
  31 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  32 String8          0   13    0 c             00 r[13]='c'
REG[13] =   t1[c](8)
  33 Goto             0    1    0               00 
   1 InitCoroutine    4    9    2               00 
   9 OpenWrite        1    4    0 k(2,,)        00 root=4 iDb=0; xyz
  10 OpenWrite        2    2    0 k(1,)         00 root=2 iDb=0; sqlite_autoindex_v0_1
  11 Yield            4   26    0               00 
REG[4] =  i:1
REG[4] =  i:11
   2 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   3 Variable         1    6    0 $x            00 r[6]=parameter(1,$x)
REG[6] =  NULL
   4 Yield            4    0    0               00 
REG[4] =  i:11
REG[4] =  i:4
  12 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
  13 SCopy            5    3    0               00 r[3]=r[5]
REG[3] =  i:0
  14 HaltIfNull    1299    2    2 v0.v1         01 if r[2]=null halt
REG[2] =  NULL
SQL: [;UPDATE v3 SET x = NULL;]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      0    1   10 0             01 usesStmtJournal=0
  19 TableLock        0    3    1 v3            00 iDb=0 root=3 write=1
  20 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    3    0 0             00 root=3 iDb=0; v3
   3 Explain          0    0    0 SCAN TABLE v3 00 
   4 Rewind           0    8    0               00 
   8 Close            0    0    0               00 
   9 OpenWrite        0    3    0 1             00 root=3 iDb=0; v3
  10 RowSetRead       1   16    2               00 r[2]=rowset(1)
REG[1] =  NULL
REG[2] =  NULL
  16 Noop             0    0    0               00 
  17 Halt             0    0    0               00 
SQL: [;UPDATE OR REPLACE v3 SET x = 1;]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      0    1   10 0             01 usesStmtJournal=0
  19 TableLock        0    3    1 v3            00 iDb=0 root=3 write=1
  20 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    3    0 0             00 root=3 iDb=0; v3
   3 Explain          0    0    0 SCAN TABLE v3 00 
   4 Rewind           0    8    0               00 
   8 Close            0    0    0               00 
   9 OpenWrite        0    3    0 1             00 root=3 iDb=0; v3
  10 RowSetRead       1   16    2               00 r[2]=rowset(1)
REG[1] =  NULL
REG[2] =  NULL
  16 Noop             0    0    0               00 
  17 Halt             0    0    0               00 
SQL: [;SELECT DISTINCT * FROM t1 WHERE (t1.b IS NULL);]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0   10 0             01 usesStmtJournal=0
  14 TableLock        0    5    0 t1            00 iDb=0 root=5 write=0
  15 Goto             0    1    0               00 
   1 Noop             1    0    0               08 
   2 OpenRead         0    5    0 2             00 root=5 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0   11    0               00 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  i:2
   6 NotNull          1   10    0               00 if r[1]!=NULL goto 10
REG[1] =  i:2
  10 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  i:4
   6 NotNull          1   10    0               00 if r[1]!=NULL goto 10
REG[1] =  i:4
  10 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  i:4
   6 NotNull          1   10    0               00 if r[1]!=NULL goto 10
REG[1] =  i:4
  10 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  i:4
   6 NotNull          1   10    0               00 if r[1]!=NULL goto 10
REG[1] =  i:4
  10 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  i:5
   6 NotNull          1   10    0               00 if r[1]!=NULL goto 10
REG[1] =  i:5
  10 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  i:5
   6 NotNull          1   10    0               00 if r[1]!=NULL goto 10
REG[1] =  i:5
  10 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  i:5
   6 NotNull          1   10    0               00 if r[1]!=NULL goto 10
REG[1] =  i:5
  10 Next             0    5    0               01 
  11 Close            0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;CREATE TABLE t8 (t1x1, t1x2 REAL PRIMARY KEY);]
VDBE Trace:
   0 Init             0   42    0               00 Start at 42
  42 Transaction      0    1   10 0             01 usesStmtJournal=0
  43 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  44 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:12
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:11
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:11
  10 Close            0    0    0               00 
  11 Noop             0   23    0               00 
  12 CreateIndex      0    4    0               00 r[4]=root iDb=0
REG[4] =  i:13
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:12
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_t8_1 00 r[7]='sqlite_autoindex_t8_1'
REG[7] =   t21[sqlite_autoinde](8)
  17 String8          0    8    0 t8            00 r[8]='t8'
REG[8] =   t2[t8](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:13
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s35[061737110100696E64657873716C6974..7...indexsqlit](8)
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  s35[061737110100696E64657873716C6974..7...indexsqlit](8)
REG[5] =  i:12
  22 Close            1    0    0               00 
  23 Close            0    0    0               00 
  24 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  25 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  26 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  27 MustBeInt        1   30    0               00 
REG[1] =  i:11
  28 NotExists        2   30    1               00 intkey=r[1]; pk
REG[1] =  i:11
  29 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:11
  30 IsNull          13   38    0               00 if r[13]==NULL goto 38
REG[13] =  i:11
  31 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  32 String8          0   15    0 t8            00 r[15]='t8'
REG[15] =   t2[t8](8)
  33 String8          0   16    0 t8            00 r[16]='t8'
REG[16] =   t2[t8](8)
  34 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:12
  35 String8          0   18    0 CREATE TABLE t8 (t1x1, t1x2 REAL PRIMARY KEY) 00 r[18]='CREATE TABLE t8 (t1x1, t1x2 REAL PRIMARY KEY)'
REG[18] =   t45[CREATE TABLE t8](8)
  36 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s61[0617111101677461626C65743874380C.....gtablet8t8.](8)
  37 Insert           2   19   13               00 intkey=r[13] data=r[19]
REG[19] =  s61[0617111101677461626C65743874380C.....gtablet8t8.](8)
REG[13] =  i:11
  38 Close            2    0    0               00 
  39 SetCookie        0    1   11               00 
  40 ParseSchema      0    0    0 tbl_name='t8' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0   11 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t8            00 r[2]='t8'
REG[2] =   t2[t8](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s2[v3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s3[t1b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s3[t1b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[def](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s3[def](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[e](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s1[e](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[u](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s1[u](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[u](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s1[u](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t8](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s2[t8](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t8](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:12
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s45[CREATE TABLE t8](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t8](8)
REG[6] =  i:12
REG[7] =   s45[CREATE TABLE t8](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t8](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s2[t8](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s21[sqlite_autoinde](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:13
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =  NULL
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s21[sqlite_autoinde](8)
REG[6] =  i:13
REG[7] =  NULL
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  41 Halt             0    0    0               00 
SQL: [;INSERT INTO v0(v1, v2) VALUES (0, $x), (0, 0);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   11 0             01 usesStmtJournal=1
  29 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
  30 String8          0    9    0 c             00 r[9]='c'
REG[9] =   t1[c](8)
  31 Goto             0    1    0               00 
   1 InitCoroutine    4    9    2               00 
   9 OpenWrite        1    4    0 k(2,,)        00 root=4 iDb=0; xyz
  10 OpenWrite        2    2    0 k(1,)         00 root=2 iDb=0; sqlite_autoindex_v0_1
  11 Yield            4   25    0               00 
REG[4] =  i:1
REG[4] =  i:11
   2 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   3 Variable         1    3    0 $x            00 r[3]=parameter(1,$x)
REG[3] =  NULL
   4 Yield            4    0    0               00 
REG[4] =  i:11
REG[4] =  i:4
  12 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
  13 HaltIfNull    1299    2    2 v0.v1         01 if r[2]=null halt
REG[2] =  i:0
  14 Eq               2    7    9 (BINARY)      61 if r[2]==r[9] goto 7; xyz column 0
REG[2] =  i:0
REG[9] =   t1[c](8)
REG[7] =  i:0
  15 SCopy            2    8    0               00 r[8]=r[2]; v1
REG[8] =  i:0
  16 MakeRecord       7    2    5               00 r[5]=mkrec(r[7..8]); for xyz
REG[5] =  s3[030808...](8)
  17 SCopy            2    7    0               00 r[7]=r[2]; v1
REG[7] =  i:0
  18 SCopy            3    8    0               00 r[8]=r[3]; v2
REG[8] =  NULL
  19 MakeRecord       7    2    6               00 r[6]=mkrec(r[7..8]); for sqlite_autoindex_v0_1
REG[6] =  s3[030800...](8)
  20 NoConflict       2   22    7 1             00 key=r[7]
REG[7] =  i:0
  21 Halt          1555    2    0 v0.v1         02 
SQL: [;UPDATE v3 SET x = NULL;]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      0    1   11 0             01 usesStmtJournal=0
  19 TableLock        0    3    1 v3            00 iDb=0 root=3 write=1
  20 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    3    0 0             00 root=3 iDb=0; v3
   3 Explain          0    0    0 SCAN TABLE v3 00 
   4 Rewind           0    8    0               00 
   8 Close            0    0    0               00 
   9 OpenWrite        0    3    0 1             00 root=3 iDb=0; v3
  10 RowSetRead       1   16    2               00 r[2]=rowset(1)
REG[1] =  NULL
REG[2] =  NULL
  16 Noop             0    0    0               00 
  17 Halt             0    0    0               00 
SQL: [;PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0  183    0               00 Start at 183
 183 Transaction      0    0   11 0             01 usesStmtJournal=0
 184 Transaction      1    0    0 0             01 usesStmtJournal=0
 185 TableLock        0   12    0 t8            00 iDb=0 root=12 write=0
 186 TableLock        0   10    0 u             00 iDb=0 root=10 write=0
 187 TableLock        0    6    0 t1b           00 iDb=0 root=6 write=0
 188 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
 189 String8          0   13    0 c             00 r[13]='c'
REG[13] =   t1[c](8)
 190 Goto             0    1    0               00 
   1 Integer        100    1    0               00 r[1]=100
REG[1] =  i:100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
REG[1] =  i:100
   4 IntegrityCk      2   13    1 [13,10,11,9,8,6,7,5,3,4,2] 00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
REG[2] =  NULL
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
REG[1] =  i:100
  12 OpenRead         1   12    0 2             00 root=12 iDb=0; t8
  13 OpenRead         2   13    0 k(2,,)        00 root=13 iDb=0; sqlite_autoindex_t8_1
  14 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  15 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  16 Rewind           1   41    0               00 
  41 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  42 IfPos            1   44    0               00 if r[1]>0 then r[1]-=0, goto 44
REG[1] =  i:100
  44 Count            2    3    0               00 r[3]=count()
REG[3] =  i:0
  45 Eq               8   50    3               90 if r[8]==r[3] goto 50
REG[8] =  i:0
REG[3] =  i:0
  50 IfPos            1   52    0               00 if r[1]>0 then r[1]-=0, goto 52
REG[1] =  i:100
  52 OpenRead         1   10    0 2             00 root=10 iDb=0; u
  53 OpenRead         2   11    0 k(2,,)        00 root=11 iDb=0; sqlite_autoindex_u_1
  54 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  55 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  56 Rewind           1   81    0               00 
  81 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  82 IfPos            1   84    0               00 if r[1]>0 then r[1]-=0, goto 84
REG[1] =  i:100
  84 Count            2    3    0               00 r[3]=count()
REG[3] =  i:0
  85 Eq               8   90    3               90 if r[8]==r[3] goto 90
REG[8] =  i:0
REG[3] =  i:0
  90 IfPos            1   92    0               00 if r[1]>0 then r[1]-=0, goto 92
REG[1] =  i:100
  92 OpenRead         1    6    0 2             00 root=6 iDb=0; t1b
  93 OpenRead         2    7    0 k(2,,)        00 root=7 iDb=0; sqlite_autoindex_t1b_1
  94 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  95 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  96 Rewind           1  120    0               00 
  97 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  98 Column           1    0   11               00 r[11]=t1b.abc
REG[11] =  i:27
  99 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:1
 100 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
 101 Found            2  112   11 2             00 key=r[11..12]
REG[11] =  i:27
REG[12] =  i:1
 112 IsNull          11  119    0               00 if r[11]==NULL goto 119
REG[11] =  i:27
 113 Next             2  115    0               00 
 114 Goto             0  119    0               00 
 119 Next             1   97    0               00 
 120 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
 121 IfPos            1  123    0               00 if r[1]>0 then r[1]-=0, goto 123
REG[1] =  i:100
 123 Count            2    3    0               00 r[3]=count()
REG[3] =  i:1
 124 Eq               8  129    3               90 if r[8]==r[3] goto 129
REG[8] =  i:1
REG[3] =  i:1
 129 IfPos            1  131    0               00 if r[1]>0 then r[1]-=0, goto 131
REG[1] =  i:100
 131 OpenRead         2    4    0 k(2,,)        00 root=4 iDb=0; xyz
 132 OpenRead         3    2    0 k(1,)         00 root=2 iDb=0; sqlite_autoindex_v0_1
 133 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
 134 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
 135 Integer          0    9    0               00 r[9]=0
REG[9] =  i:0
 136 Rewind           3  161    0               00 
 137 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
 138 Column           3    0    3               80 r[3]=v0.v1
REG[3] =  i:0
 139 NotNull          3  145    0               00 if r[3]!=NULL goto 145
REG[3] =  i:0
 145 Column           3    0   14               00 r[14]=v0.v1
REG[14] =  i:0
 146 Eq              14   11   13 (BINARY)      61 if r[14]==r[13] goto 11
REG[14] =  i:0
REG[13] =   t1[c](8)
REG[11] =  i:0
 147 Column           3    0   12               00 r[12]=v0.v1
REG[12] =  i:0
 148 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
 149 Found            2  160   11 2             00 key=r[11..12]
REG[11] =  i:0
REG[12] =  i:0
 160 Next             3  137    0               00 
 137 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
 138 Column           3    0    3               80 r[3]=v0.v1
REG[3] =  i:1
 139 NotNull          3  145    0               00 if r[3]!=NULL goto 145
REG[3] =  i:1
 145 Column           3    0   14               00 r[14]=v0.v1
REG[14] =  i:1
 146 Eq              14   11   13 (BINARY)      61 if r[14]==r[13] goto 11
REG[14] =  i:1
REG[13] =   t1[c](8)
REG[11] =  i:0
 147 Column           3    0   12               00 r[12]=v0.v1
REG[12] =  i:1
 148 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:1
 149 Found            2  160   11 2             00 key=r[11..12]
REG[11] =  i:0
REG[12] =  i:1
 160 Next             3  137    0               00 
 137 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:2
 138 Column           3    0    3               80 r[3]=v0.v1
REG[3] =  i:31
 139 NotNull          3  145    0               00 if r[3]!=NULL goto 145
REG[3] =  i:31
 145 Column           3    0   14               00 r[14]=v0.v1
REG[14] =  i:31
 146 Eq              14   11   13 (BINARY)      61 if r[14]==r[13] goto 11
REG[14] =  i:31
REG[13] =   t1[c](8)
REG[11] =  i:0
 147 Column           3    0   12               00 r[12]=v0.v1
REG[12] =  i:31
 148 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:2
 149 Found            2  160   11 2             00 key=r[11..12]
REG[11] =  i:0
REG[12] =  i:31
 160 Next             3  137    0               00 
 161 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
 162 IfPos            1  164    0               00 if r[1]>0 then r[1]-=0, goto 164
REG[1] =  i:100
 164 Count            2    3    0               00 r[3]=count()
REG[3] =  i:3
 165 Eq               8  170    3               90 if r[8]==r[3] goto 170
REG[8] =  i:3
REG[3] =  i:3
 170 IfPos            1  172    0               00 if r[1]>0 then r[1]-=0, goto 172
REG[1] =  i:100
 172 IntegrityCk      2    1    1 ]             01 
 173 IsNull           2  178    0               00 if r[2]==NULL goto 178
REG[2] =  NULL
 178 AddImm           1 -100    0               00 r[1]=r[1]+-100
REG[1] =  i:100
 179 If               1  182    0               00 
REG[1] =  i:0
 180 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
 181 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
 182 Halt             0    0    0               00 
SQL: [;
;DROP TABLE IF EXISTS v3;]
VDBE Trace:
   0 Init             0   41    0               00 Start at 41
  41 Transaction      0    1   11 0             01 usesStmtJournal=1
  42 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  43 String8          0    3    0 v3            00 r[3]='v3'
REG[3] =   t2[v3](8)
  44 String8          0    5    0 trigger       00 r[5]='trigger'
REG[5] =   t7[trigger](8)
  45 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[v0](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t2[v3](8)
REG[2] =   s2[v0](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[v3](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t2[v3](8)
REG[2] =   s2[v3](8)
   7 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
   8 Eq               5   12    4 (BINARY)      52 if r[5]==r[4] goto 12
REG[5] =   t7[trigger](8)
REG[4] =   s5[table](8)
   9 Rowid            0    6    0               00 r[6]=rowid
REG[6] =  i:2
  10 Once             0   11    0               00 
  11 Delete           0    0    0 sqlite_master 02 
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[v0](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t2[v3](8)
REG[2] =   s2[v0](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t2[v3](8)
REG[2] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s3[t1b](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t2[v3](8)
REG[2] =   s3[t1b](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s3[t1b](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t2[v3](8)
REG[2] =   s3[t1b](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s3[def](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t2[v3](8)
REG[2] =   s3[def](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[e](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t2[v3](8)
REG[2] =   s1[e](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[u](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t2[v3](8)
REG[2] =   s1[u](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[u](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t2[v3](8)
REG[2] =   s1[u](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t8](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t2[v3](8)
REG[2] =   s2[t8](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t8](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t2[v3](8)
REG[2] =   s2[t8](8)
  12 Next             0    5    0               01 
  13 Close            0    0    0               00 
  14 Destroy          3    4    0               00 
REG[4] =  i:0
  15 Null             0    7    8               00 r[7..8]=NULL
REG[7] =  NULL
  16 IfNot            4   25    1               00 
REG[4] =  i:0
  25 Close            1    0    0               00 
  26 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  27 RowSetRead       7   37    8               00 r[8]=rowset(7)
REG[7] =  NULL
REG[8] =  NULL
  37 Close            1    0    0               00 
  38 DropTable        0    0    0 v3            00 
  39 SetCookie        0    1   12               00 
  40 Halt             0    0    0               00 
SQL: [;INSERT INTO def(d, d) VALUES (0, $x), (0, 0);]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      0    1   12 0             01 usesStmtJournal=0
  19 TableLock        0    8    1 def           00 iDb=0 root=8 write=1
  20 Goto             0    1    0               00 
   1 InitCoroutine    3    9    2               00 
   9 OpenWrite        0    8    0 1             00 root=8 iDb=0; def
  10 Yield            3   16    0               00 
REG[3] =  i:1
REG[3] =  i:10
   2 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
   3 Variable         1    5    0 $x            00 r[5]=parameter(1,$x)
REG[5] =  NULL
   4 Yield            3    0    0               00 
REG[3] =  i:10
REG[3] =  i:4
  11 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
  12 SCopy            4    2    0               00 r[2]=r[4]
REG[2] =  i:0
  13 MakeRecord       2    1    8 B             00 r[8]=mkrec(r[2])
REG[8] =  s3[020F30..0](8)
  14 Insert           0    8    1 def           1B intkey=r[1] data=r[8]
REG[8] =  s3[020F30..0](8)
REG[1] =  i:2
  15 Goto             0   10    0               00 
  10 Yield            3   16    0               00 
REG[3] =  i:4
REG[3] =  i:10
   5 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 Yield            3    0    0               00 
REG[3] =  i:10
REG[3] =  i:7
  11 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
  12 SCopy            4    2    0               00 r[2]=r[4]
REG[2] =  i:0
  13 MakeRecord       2    1    8 B             00 r[8]=mkrec(r[2])
REG[8] =  s3[020F30..0](8)
  14 Insert           0    8    1 def           1B intkey=r[1] data=r[8]
REG[8] =  s3[020F30..0](8)
REG[1] =  i:3
  15 Goto             0   10    0               00 
  10 Yield            3   16    0               00 
REG[3] =  i:7
REG[3] =  i:10
   8 EndCoroutine     3    0    0               00 
REG[3] =  i:10
  16 Noop             0    0    0               00 
  17 Halt             0    0    0               00 
SQL: [;UPDATE t1b SET abc = NULL;]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      0    1   12 0             01 usesStmtJournal=1
  33 TableLock        0    6    1 t1b           00 iDb=0 root=6 write=1
  34 Goto             0    1    0               00 
   1 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
   2 OpenRead         0    6    0 0             00 root=6 iDb=0; t1b
   3 Explain          0    0    0 SCAN TABLE t1b 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:1
   6 RowSetAdd        2    3    0               00 rowset(2)=r[3]
REG[2] =  NULL
REG[3] =  i:1
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 OpenWrite        0    6    0 2             00 root=6 iDb=0; t1b
  10 OpenWrite        1    7    0 k(2,,)        00 root=7 iDb=0; sqlite_autoindex_t1b_1
  11 RowSetRead       2   29    3               00 r[3]=rowset(2)
REG[2] =  (rowset)
REG[3] =  i:1
  12 NotExists        0   11    3               00 intkey=r[3]
REG[3] =  i:1
  13 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  14 Column           0    1    5               00 r[5]=t1b.c
REG[5] =  i:5
  15 SCopy            4    6    0               00 r[6]=r[4]; abc
REG[6] =  NULL
  16 IntCopy          3    7    0               00 r[7]=r[3]; rowid
REG[7] =  i:1
  17 MakeRecord       6    2    1               00 r[1]=mkrec(r[6..7]); for sqlite_autoindex_t1b_1
REG[1] =  s3[030009...](8)
  18 NoConflict       1   22    6 1             00 key=r[6]
REG[6] =  NULL
  22 Column           0    0    6               00 r[6]=t1b.abc
REG[6] =  i:27
  23 Rowid            0    7    0               00 r[7]=rowid
REG[7] =  i:1
  24 IdxDelete        1    6    2               00 key=r[6..7]
  25 IdxInsert        1    1    0               00 key=r[1]
REG[1] =  s3[030009...](8)
  26 MakeRecord       4    2    9               00 r[9]=mkrec(r[4..5])
REG[9] =  s4[03000105....](8)
  27 Insert           0    9    3 t1b           05 intkey=r[3] data=r[9]
REG[9] =  s4[03000105....](8)
REG[3] =  i:1
  28 Goto             0   11    0               00 
  11 RowSetRead       2   29    3               00 r[3]=rowset(2)
REG[2] =  (rowset)
REG[3] =  i:1
  29 Close            1    0    0               00 
  30 Noop             0    0    0               00 
  31 Halt             0    0    0               00 
SQL: [;SELECT DISTINCT * FROM t1 WHERE (t1.b IS NULL);]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0   12 0             01 usesStmtJournal=0
  14 TableLock        0    5    0 t1            00 iDb=0 root=5 write=0
  15 Goto             0    1    0               00 
   1 Noop             1    0    0               08 
   2 OpenRead         0    5    0 2             00 root=5 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0   11    0               00 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  i:2
   6 NotNull          1   10    0               00 if r[1]!=NULL goto 10
REG[1] =  i:2
  10 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  i:4
   6 NotNull          1   10    0               00 if r[1]!=NULL goto 10
REG[1] =  i:4
  10 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  i:4
   6 NotNull          1   10    0               00 if r[1]!=NULL goto 10
REG[1] =  i:4
  10 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  i:4
   6 NotNull          1   10    0               00 if r[1]!=NULL goto 10
REG[1] =  i:4
  10 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  i:5
   6 NotNull          1   10    0               00 if r[1]!=NULL goto 10
REG[1] =  i:5
  10 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  i:5
   6 NotNull          1   10    0               00 if r[1]!=NULL goto 10
REG[1] =  i:5
  10 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  i:5
   6 NotNull          1   10    0               00 if r[1]!=NULL goto 10
REG[1] =  i:5
  10 Next             0    5    0               01 
  11 Close            0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0  183    0               00 Start at 183
 183 Transaction      0    0   12 0             01 usesStmtJournal=0
 184 Transaction      1    0    0 0             01 usesStmtJournal=0
 185 TableLock        0   12    0 t8            00 iDb=0 root=12 write=0
 186 TableLock        0   10    0 u             00 iDb=0 root=10 write=0
 187 TableLock        0    6    0 t1b           00 iDb=0 root=6 write=0
 188 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
 189 String8          0   13    0 c             00 r[13]='c'
REG[13] =   t1[c](8)
 190 Goto             0    1    0               00 
   1 Integer        100    1    0               00 r[1]=100
REG[1] =  i:100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
REG[1] =  i:100
   4 IntegrityCk      2   12    1 [13,10,11,9,8,6,7,5,4,2,1] 00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
REG[2] =  NULL
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
REG[1] =  i:100
  12 OpenRead         1   12    0 2             00 root=12 iDb=0; t8
  13 OpenRead         2   13    0 k(2,,)        00 root=13 iDb=0; sqlite_autoindex_t8_1
  14 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  15 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  16 Rewind           1   41    0               00 
  41 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  42 IfPos            1   44    0               00 if r[1]>0 then r[1]-=0, goto 44
REG[1] =  i:100
  44 Count            2    3    0               00 r[3]=count()
REG[3] =  i:0
  45 Eq               8   50    3               90 if r[8]==r[3] goto 50
REG[8] =  i:0
REG[3] =  i:0
  50 IfPos            1   52    0               00 if r[1]>0 then r[1]-=0, goto 52
REG[1] =  i:100
  52 OpenRead         1   10    0 2             00 root=10 iDb=0; u
  53 OpenRead         2   11    0 k(2,,)        00 root=11 iDb=0; sqlite_autoindex_u_1
  54 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  55 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  56 Rewind           1   81    0               00 
  81 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  82 IfPos            1   84    0               00 if r[1]>0 then r[1]-=0, goto 84
REG[1] =  i:100
  84 Count            2    3    0               00 r[3]=count()
REG[3] =  i:0
  85 Eq               8   90    3               90 if r[8]==r[3] goto 90
REG[8] =  i:0
REG[3] =  i:0
  90 IfPos            1   92    0               00 if r[1]>0 then r[1]-=0, goto 92
REG[1] =  i:100
  92 OpenRead         1    6    0 2             00 root=6 iDb=0; t1b
  93 OpenRead         2    7    0 k(2,,)        00 root=7 iDb=0; sqlite_autoindex_t1b_1
  94 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  95 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  96 Rewind           1  120    0               00 
  97 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  98 Column           1    0   11               00 r[11]=t1b.abc
REG[11] =  NULL
  99 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:1
 100 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
 101 Found            2  112   11 2             00 key=r[11..12]
REG[11] =  NULL
REG[12] =  i:1
 112 IsNull          11  119    0               00 if r[11]==NULL goto 119
REG[11] =  NULL
 119 Next             1   97    0               00 
 120 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
 121 IfPos            1  123    0               00 if r[1]>0 then r[1]-=0, goto 123
REG[1] =  i:100
 123 Count            2    3    0               00 r[3]=count()
REG[3] =  i:1
 124 Eq               8  129    3               90 if r[8]==r[3] goto 129
REG[8] =  i:1
REG[3] =  i:1
 129 IfPos            1  131    0               00 if r[1]>0 then r[1]-=0, goto 131
REG[1] =  i:100
 131 OpenRead         2    4    0 k(2,,)        00 root=4 iDb=0; xyz
 132 OpenRead         3    2    0 k(1,)         00 root=2 iDb=0; sqlite_autoindex_v0_1
 133 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
 134 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
 135 Integer          0    9    0               00 r[9]=0
REG[9] =  i:0
 136 Rewind           3  161    0               00 
 137 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
 138 Column           3    0    3               80 r[3]=v0.v1
REG[3] =  i:0
 139 NotNull          3  145    0               00 if r[3]!=NULL goto 145
REG[3] =  i:0
 145 Column           3    0   14               00 r[14]=v0.v1
REG[14] =  i:0
 146 Eq              14   11   13 (BINARY)      61 if r[14]==r[13] goto 11
REG[14] =  i:0
REG[13] =   t1[c](8)
REG[11] =  i:0
 147 Column           3    0   12               00 r[12]=v0.v1
REG[12] =  i:0
 148 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
 149 Found            2  160   11 2             00 key=r[11..12]
REG[11] =  i:0
REG[12] =  i:0
 160 Next             3  137    0               00 
 137 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
 138 Column           3    0    3               80 r[3]=v0.v1
REG[3] =  i:1
 139 NotNull          3  145    0               00 if r[3]!=NULL goto 145
REG[3] =  i:1
 145 Column           3    0   14               00 r[14]=v0.v1
REG[14] =  i:1
 146 Eq              14   11   13 (BINARY)      61 if r[14]==r[13] goto 11
REG[14] =  i:1
REG[13] =   t1[c](8)
REG[11] =  i:0
 147 Column           3    0   12               00 r[12]=v0.v1
REG[12] =  i:1
 148 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:1
 149 Found            2  160   11 2             00 key=r[11..12]
REG[11] =  i:0
REG[12] =  i:1
 160 Next             3  137    0               00 
 137 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:2
 138 Column           3    0    3               80 r[3]=v0.v1
REG[3] =  i:31
 139 NotNull          3  145    0               00 if r[3]!=NULL goto 145
REG[3] =  i:31
 145 Column           3    0   14               00 r[14]=v0.v1
REG[14] =  i:31
 146 Eq              14   11   13 (BINARY)      61 if r[14]==r[13] goto 11
REG[14] =  i:31
REG[13] =   t1[c](8)
REG[11] =  i:0
 147 Column           3    0   12               00 r[12]=v0.v1
REG[12] =  i:31
 148 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:2
 149 Found            2  160   11 2             00 key=r[11..12]
REG[11] =  i:0
REG[12] =  i:31
 160 Next             3  137    0               00 
 161 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
 162 IfPos            1  164    0               00 if r[1]>0 then r[1]-=0, goto 164
REG[1] =  i:100
 164 Count            2    3    0               00 r[3]=count()
REG[3] =  i:3
 165 Eq               8  170    3               90 if r[8]==r[3] goto 170
REG[8] =  i:3
REG[3] =  i:3
 170 IfPos            1  172    0               00 if r[1]>0 then r[1]-=0, goto 172
REG[1] =  i:100
 172 IntegrityCk      2    1    1 ]             01 
 173 IsNull           2  178    0               00 if r[2]==NULL goto 178
REG[2] =  NULL
 178 AddImm           1 -100    0               00 r[1]=r[1]+-100
REG[1] =  i:100
 179 If               1  182    0               00 
REG[1] =  i:0
 180 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
 181 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
 182 Halt             0    0    0               00 
SQL: [;
;DROP TABLE IF EXISTS t1;]
VDBE Trace:
   0 Init             0   41    0               00 Start at 41
  41 Transaction      0    1   12 0             01 usesStmtJournal=1
  42 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  43 String8          0    3    0 t1            00 r[3]='t1'
REG[3] =   t2[t1](8)
  44 String8          0    5    0 trigger       00 r[5]='trigger'
REG[5] =   t7[trigger](8)
  45 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[v0](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t2[t1](8)
REG[2] =   s2[v0](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[v0](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t2[t1](8)
REG[2] =   s2[v0](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t2[t1](8)
REG[2] =   s2[t1](8)
   7 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
   8 Eq               5   12    4 (BINARY)      52 if r[5]==r[4] goto 12
REG[5] =   t7[trigger](8)
REG[4] =   s5[table](8)
   9 Rowid            0    6    0               00 r[6]=rowid
REG[6] =  i:4
  10 Once             0   11    0               00 
  11 Delete           0    0    0 sqlite_master 02 
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s3[t1b](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t2[t1](8)
REG[2] =   s3[t1b](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s3[t1b](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t2[t1](8)
REG[2] =   s3[t1b](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s3[def](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t2[t1](8)
REG[2] =   s3[def](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[e](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t2[t1](8)
REG[2] =   s1[e](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[u](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t2[t1](8)
REG[2] =   s1[u](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[u](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t2[t1](8)
REG[2] =   s1[u](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t8](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t2[t1](8)
REG[2] =   s2[t8](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t8](8)
   6 Ne               3   12    2 (BINARY)      52 if r[3]!=r[2] goto 12
REG[3] =   t2[t1](8)
REG[2] =   s2[t8](8)
  12 Next             0    5    0               01 
  13 Close            0    0    0               00 
  14 Destroy          5    4    0               00 
REG[4] =  i:0
  15 Null             0    7    8               00 r[7..8]=NULL
REG[7] =  NULL
  16 IfNot            4   25    1               00 
REG[4] =  i:0
  25 Close            1    0    0               00 
  26 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  27 RowSetRead       7   37    8               00 r[8]=rowset(7)
REG[7] =  NULL
REG[8] =  NULL
  37 Close            1    0    0               00 
  38 DropTable        0    0    0 t1            00 
  39 SetCookie        0    1   13               00 
  40 Halt             0    0    0               00 
SQL: [;INSERT INTO v0(v1, v2) VALUES (0, $x), (0, 0);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   13 0             01 usesStmtJournal=1
  29 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
  30 String8          0    9    0 c             00 r[9]='c'
REG[9] =   t1[c](8)
  31 Goto             0    1    0               00 
   1 InitCoroutine    4    9    2               00 
   9 OpenWrite        1    4    0 k(2,,)        00 root=4 iDb=0; xyz
  10 OpenWrite        2    2    0 k(1,)         00 root=2 iDb=0; sqlite_autoindex_v0_1
  11 Yield            4   25    0               00 
REG[4] =  i:1
REG[4] =  i:11
   2 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   3 Variable         1    3    0 $x            00 r[3]=parameter(1,$x)
REG[3] =  NULL
   4 Yield            4    0    0               00 
REG[4] =  i:11
REG[4] =  i:4
  12 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
  13 HaltIfNull    1299    2    2 v0.v1         01 if r[2]=null halt
REG[2] =  i:0
  14 Eq               2    7    9 (BINARY)      61 if r[2]==r[9] goto 7; xyz column 0
REG[2] =  i:0
REG[9] =   t1[c](8)
REG[7] =  i:0
  15 SCopy            2    8    0               00 r[8]=r[2]; v1
REG[8] =  i:0
  16 MakeRecord       7    2    5               00 r[5]=mkrec(r[7..8]); for xyz
REG[5] =  s3[030808...](8)
  17 SCopy            2    7    0               00 r[7]=r[2]; v1
REG[7] =  i:0
  18 SCopy            3    8    0               00 r[8]=r[3]; v2
REG[8] =  NULL
  19 MakeRecord       7    2    6               00 r[6]=mkrec(r[7..8]); for sqlite_autoindex_v0_1
REG[6] =  s3[030800...](8)
  20 NoConflict       2   22    7 1             00 key=r[7]
REG[7] =  i:0
  21 Halt          1555    2    0 v0.v1         02 
SQL: [;UPDATE OR REPLACE v0 SET v1 = 1;]
VDBE Trace:
   0 Init             0   45    0               00 Start at 45
  45 Transaction      0    1   13 0             01 usesStmtJournal=1
  46 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
  47 String8          0   14    0 c             00 r[14]='c'
REG[14] =   t1[c](8)
  48 Goto             0    1    0               00 
   1 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
   2 OpenEphemeral    3    1    0 k(1,)         00 nColumn=1
   3 OpenRead         4    4    0 k(2,,)        00 root=4 iDb=0; xyz
   4 Explain          0    0    0 SCAN TABLE v0 USING COVERING INDEX xyz 00 
   5 Rewind           4   10   12 0             00 
   6 Column           4    1   10               00 r[10]=v0.v1
REG[10] =  i:0
   7 MakeRecord      10    1   11 A             00 r[11]=mkrec(r[10])
REG[11] =  s2[0208..](8)
   8 IdxInsert        3   11    0               00 key=r[11]
REG[11] =  s2[0208..](8)
   9 Next             4    6    0               01 
   6 Column           4    1   10               00 r[10]=v0.v1
REG[10] =  i:1
   7 MakeRecord      10    1   11 A             00 r[11]=mkrec(r[10])
REG[11] =  s2[0209..](8)
   8 IdxInsert        3   11    0               00 key=r[11]
REG[11] =  s2[0209..](8)
   9 Next             4    6    0               01 
   6 Column           4    1   10               00 r[10]=v0.v1
REG[10] =  i:31
   7 MakeRecord      10    1   11 A             00 r[11]=mkrec(r[10])
REG[11] =  s3[02011F...](8)
   8 IdxInsert        3   11    0               00 key=r[11]
REG[11] =  s3[02011F...](8)
   9 Next             4    6    0               01 
  10 Close            4    0    0               00 
  11 OpenWrite        1    4    0 k(2,,)        00 root=4 iDb=0; xyz
  12 OpenWrite        2    2    0 k(1,)         00 root=2 iDb=0; sqlite_autoindex_v0_1
  13 Rewind           3   42    0               00 
  14 RowKey           3   11    0               00 r[11]=key
REG[11] =  s2[0208..](8)
  15 NotFound         2   41   11 0             00 key=r[11]
REG[11] =  s2[0208..](8)
  16 Column           2    0    5               00 r[5]=v0.v1
REG[5] =  i:0
  17 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  18 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  19 Column           2    1    9               00 r[9]=v0.v2
REG[9] =  NULL
  20 HaltIfNull    1299    2    8 v0.v1         01 if r[8]=null halt
REG[8] =  i:1
  21 Eq               8   12   14 (BINARY)      61 if r[8]==r[14] goto 12; xyz column 0
REG[8] =  i:1
REG[14] =   t1[c](8)
REG[12] =  i:0
  22 SCopy            8   13    0               00 r[13]=r[8]; v1
REG[13] =  i:1
  23 MakeRecord      12    2    1               00 r[1]=mkrec(r[12..13]); for xyz
REG[1] =  s3[030809...](8)
  24 SCopy            8   12    0               00 r[12]=r[8]; v1
REG[12] =  i:1
  25 SCopy            9   13    0               00 r[13]=r[9]; v2
REG[13] =  NULL
  26 MakeRecord      12    2    2               00 r[2]=mkrec(r[12..13]); for sqlite_autoindex_v0_1
REG[2] =  s3[030900...](8)
  27 NoConflict       2   34   12 1             00 key=r[12]
REG[12] =  i:1
  28 Eq               5   34   12 (BINARY)      90 if r[5]==r[12] goto 34
REG[5] =  i:0
REG[12] =  i:1
  29 Column           2    0   15               00 r[15]=v0.v1
REG[15] =  i:1
  30 Eq              15   16   14 (BINARY)      61 if r[15]==r[14] goto 16
REG[15] =  i:1
REG[14] =   t1[c](8)
REG[16] =  i:0
  31 Column           2    0   17               00 r[17]=v0.v1
REG[17] =  i:1
  32 IdxDelete        1   16    2               00 key=r[16..17]
  33 Delete           2    0    0 v0            00 
  34 NotFound         2   39   11 0             00 key=r[11]
REG[11] =  s2[0208..](8)
  35 Eq              15   16   14 (BINARY)      61 if r[15]==r[14] goto 16
REG[15] =  i:1
REG[14] =   t1[c](8)
REG[16] =  i:0
  36 Column           2    0   17               00 r[17]=v0.v1
REG[17] =  i:0
  37 IdxDelete        1   16    2               00 key=r[16..17]
  38 Delete           2    0    0               00 
  39 IdxInsert        1    1    0               00 key=r[1]
REG[1] =  s3[030809...](8)
  40 IdxInsert        2    2    0               01 key=r[2]
REG[2] =  s3[030900...](8)
  41 Next             3   14    0               00 
  14 RowKey           3   11    0               00 r[11]=key
REG[11] =  s2[0209..](8)
  15 NotFound         2   41   11 0             00 key=r[11]
REG[11] =  s2[0209..](8)
  16 Column           2    0    5               00 r[5]=v0.v1
REG[5] =  i:1
  17 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  18 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  19 Column           2    1    9               00 r[9]=v0.v2
REG[9] =  NULL
  20 HaltIfNull    1299    2    8 v0.v1         01 if r[8]=null halt
REG[8] =  i:1
  21 Eq               8   12   14 (BINARY)      61 if r[8]==r[14] goto 12; xyz column 0
REG[8] =  i:1
REG[14] =   t1[c](8)
REG[12] =  i:0
  22 SCopy            8   13    0               00 r[13]=r[8]; v1
REG[13] =  i:1
  23 MakeRecord      12    2    1               00 r[1]=mkrec(r[12..13]); for xyz
REG[1] =  s3[030809...](8)
  24 SCopy            8   12    0               00 r[12]=r[8]; v1
REG[12] =  i:1
  25 SCopy            9   13    0               00 r[13]=r[9]; v2
REG[13] =  NULL
  26 MakeRecord      12    2    2               00 r[2]=mkrec(r[12..13]); for sqlite_autoindex_v0_1
REG[2] =  s3[030900...](8)
  27 NoConflict       2   34   12 1             00 key=r[12]
REG[12] =  i:1
  28 Eq               5   34   12 (BINARY)      90 if r[5]==r[12] goto 34
REG[5] =  i:1
REG[12] =  i:1
  34 NotFound         2   39   11 0             00 key=r[11]
REG[11] =  s2[0209..](8)
  35 Eq              15   16   14 (BINARY)      61 if r[15]==r[14] goto 16
REG[15] =  i:1
REG[14] =   t1[c](8)
REG[16] =  i:0
  36 Column           2    0   17               00 r[17]=v0.v1
REG[17] =  i:1
  37 IdxDelete        1   16    2               00 key=r[16..17]
  38 Delete           2    0    0               00 
  39 IdxInsert        1    1    0               00 key=r[1]
REG[1] =  s3[030809...](8)
  40 IdxInsert        2    2    0               01 key=r[2]
REG[2] =  s3[030900...](8)
  41 Next             3   14    0               00 
  14 RowKey           3   11    0               00 r[11]=key
REG[11] =  s3[02011F...](8)
  15 NotFound         2   41   11 0             00 key=r[11]
REG[11] =  s3[02011F...](8)
  16 Column           2    0    5               00 r[5]=v0.v1
REG[5] =  i:31
  17 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  18 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  19 Column           2    1    9               00 r[9]=v0.v2
REG[9] =  i:5
  20 HaltIfNull    1299    2    8 v0.v1         01 if r[8]=null halt
REG[8] =  i:1
  21 Eq               8   12   14 (BINARY)      61 if r[8]==r[14] goto 12; xyz column 0
REG[8] =  i:1
REG[14] =   t1[c](8)
REG[12] =  i:0
  22 SCopy            8   13    0               00 r[13]=r[8]; v1
REG[13] =  i:1
  23 MakeRecord      12    2    1               00 r[1]=mkrec(r[12..13]); for xyz
REG[1] =  s3[030809...](8)
  24 SCopy            8   12    0               00 r[12]=r[8]; v1
REG[12] =  i:1
  25 SCopy            9   13    0               00 r[13]=r[9]; v2
REG[13] =  i:5
  26 MakeRecord      12    2    2               00 r[2]=mkrec(r[12..13]); for sqlite_autoindex_v0_1
REG[2] =  s4[03090105....](8)
  27 NoConflict       2   34   12 1             00 key=r[12]
REG[12] =  i:1
  28 Eq               5   34   12 (BINARY)      90 if r[5]==r[12] goto 34
REG[5] =  i:31
REG[12] =  i:1
  29 Column           2    0   15               00 r[15]=v0.v1
REG[15] =  i:1
  30 Eq              15   16   14 (BINARY)      61 if r[15]==r[14] goto 16
REG[15] =  i:1
REG[14] =   t1[c](8)
REG[16] =  i:0
  31 Column           2    0   17               00 r[17]=v0.v1
REG[17] =  i:1
  32 IdxDelete        1   16    2               00 key=r[16..17]
  33 Delete           2    0    0 v0            00 
  34 NotFound         2   39   11 0             00 key=r[11]
REG[11] =  s3[02011F...](8)
  35 Eq              15   16   14 (BINARY)      61 if r[15]==r[14] goto 16
REG[15] =  i:1
REG[14] =   t1[c](8)
REG[16] =  i:0
  36 Column           2    0   17               00 r[17]=v0.v1
REG[17] =  i:31
  37 IdxDelete        1   16    2               00 key=r[16..17]
  38 Delete           2    0    0               00 
  39 IdxInsert        1    1    0               00 key=r[1]
REG[1] =  s3[030809...](8)
  40 IdxInsert        2    2    0               01 key=r[2]
REG[2] =  s4[03090105....](8)
  41 Next             3   14    0               00 
  42 Close            1    0    0               00 
  43 Noop             2    0    0               00 
  44 Halt             0    0    0               00 
SQL: [;PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0  183    0               00 Start at 183
 183 Transaction      0    0   13 0             01 usesStmtJournal=0
 184 Transaction      1    0    0 0             01 usesStmtJournal=0
 185 TableLock        0   12    0 t8            00 iDb=0 root=12 write=0
 186 TableLock        0   10    0 u             00 iDb=0 root=10 write=0
 187 TableLock        0    6    0 t1b           00 iDb=0 root=6 write=0
 188 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
 189 String8          0   13    0 c             00 r[13]='c'
REG[13] =   t1[c](8)
 190 Goto             0    1    0               00 
   1 Integer        100    1    0               00 r[1]=100
REG[1] =  i:100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
REG[1] =  i:100
   4 IntegrityCk      2   11    1 [13,10,11,9,8,6,7,4,2,1,0] 00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
REG[2] =  NULL
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
REG[1] =  i:100
  12 OpenRead         1   12    0 2             00 root=12 iDb=0; t8
  13 OpenRead         2   13    0 k(2,,)        00 root=13 iDb=0; sqlite_autoindex_t8_1
  14 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  15 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  16 Rewind           1   41    0               00 
  41 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  42 IfPos            1   44    0               00 if r[1]>0 then r[1]-=0, goto 44
REG[1] =  i:100
  44 Count            2    3    0               00 r[3]=count()
REG[3] =  i:0
  45 Eq               8   50    3               90 if r[8]==r[3] goto 50
REG[8] =  i:0
REG[3] =  i:0
  50 IfPos            1   52    0               00 if r[1]>0 then r[1]-=0, goto 52
REG[1] =  i:100
  52 OpenRead         1   10    0 2             00 root=10 iDb=0; u
  53 OpenRead         2   11    0 k(2,,)        00 root=11 iDb=0; sqlite_autoindex_u_1
  54 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  55 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  56 Rewind           1   81    0               00 
  81 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  82 IfPos            1   84    0               00 if r[1]>0 then r[1]-=0, goto 84
REG[1] =  i:100
  84 Count            2    3    0               00 r[3]=count()
REG[3] =  i:0
  85 Eq               8   90    3               90 if r[8]==r[3] goto 90
REG[8] =  i:0
REG[3] =  i:0
  90 IfPos            1   92    0               00 if r[1]>0 then r[1]-=0, goto 92
REG[1] =  i:100
  92 OpenRead         1    6    0 2             00 root=6 iDb=0; t1b
  93 OpenRead         2    7    0 k(2,,)        00 root=7 iDb=0; sqlite_autoindex_t1b_1
  94 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  95 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  96 Rewind           1  120    0               00 
  97 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  98 Column           1    0   11               00 r[11]=t1b.abc
REG[11] =  NULL
  99 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:1
 100 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
 101 Found            2  112   11 2             00 key=r[11..12]
REG[11] =  NULL
REG[12] =  i:1
 112 IsNull          11  119    0               00 if r[11]==NULL goto 119
REG[11] =  NULL
 119 Next             1   97    0               00 
 120 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
 121 IfPos            1  123    0               00 if r[1]>0 then r[1]-=0, goto 123
REG[1] =  i:100
 123 Count            2    3    0               00 r[3]=count()
REG[3] =  i:1
 124 Eq               8  129    3               90 if r[8]==r[3] goto 129
REG[8] =  i:1
REG[3] =  i:1
 129 IfPos            1  131    0               00 if r[1]>0 then r[1]-=0, goto 131
REG[1] =  i:100
 131 OpenRead         2    4    0 k(2,,)        00 root=4 iDb=0; xyz
 132 OpenRead         3    2    0 k(1,)         00 root=2 iDb=0; sqlite_autoindex_v0_1
 133 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
 134 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
 135 Integer          0    9    0               00 r[9]=0
REG[9] =  i:0
 136 Rewind           3  161    0               00 
 137 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
 138 Column           3    0    3               80 r[3]=v0.v1
REG[3] =  i:1
 139 NotNull          3  145    0               00 if r[3]!=NULL goto 145
REG[3] =  i:1
 145 Column           3    0   14               00 r[14]=v0.v1
REG[14] =  i:1
 146 Eq              14   11   13 (BINARY)      61 if r[14]==r[13] goto 11
REG[14] =  i:1
REG[13] =   t1[c](8)
REG[11] =  i:0
 147 Column           3    0   12               00 r[12]=v0.v1
REG[12] =  i:1
 148 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
 149 Found            2  160   11 2             00 key=r[11..12]
REG[11] =  i:0
REG[12] =  i:1
 160 Next             3  137    0               00 
 161 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
 162 IfPos            1  164    0               00 if r[1]>0 then r[1]-=0, goto 164
REG[1] =  i:100
 164 Count            2    3    0               00 r[3]=count()
REG[3] =  i:1
 165 Eq               8  170    3               90 if r[8]==r[3] goto 170
REG[8] =  i:1
REG[3] =  i:1
 170 IfPos            1  172    0               00 if r[1]>0 then r[1]-=0, goto 172
REG[1] =  i:100
 172 IntegrityCk      2    1    1 ]             01 
 173 IsNull           2  178    0               00 if r[2]==NULL goto 178
REG[2] =  NULL
 178 AddImm           1 -100    0               00 r[1]=r[1]+-100
REG[1] =  i:100
 179 If               1  182    0               00 
REG[1] =  i:0
 180 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
 181 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
 182 Halt             0    0    0               00 
SQL: [;CREATE TABLE nosuchtable (f_rules, f1_rules REAL PRIMARY KEY);]
VDBE Trace:
   0 Init             0   42    0               00 Start at 42
  42 Transaction      0    1   13 0             01 usesStmtJournal=0
  43 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  44 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:13
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:13
  10 Close            0    0    0               00 
  11 Noop             0   23    0               00 
  12 CreateIndex      0    4    0               00 r[4]=root iDb=0
REG[4] =  i:3
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:14
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_nosuchtable_1 00 r[7]='sqlite_autoindex_nosuchtable_1'
REG[7] =   t30[sqlite_autoinde](8)
  17 String8          0    8    0 nosuchtable   00 r[8]='nosuchtable'
REG[8] =   t11[nosuchtable](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:3
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s53[061749230100696E64657873716C6974..I#..indexsqlit](8)
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  s53[061749230100696E64657873716C6974..I#..indexsqlit](8)
REG[5] =  i:14
  22 Close            1    0    0               00 
  23 Close            0    0    0               00 
  24 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  25 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  26 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  27 MustBeInt        1   30    0               00 
REG[1] =  i:13
  28 NotExists        2   30    1               00 intkey=r[1]; pk
REG[1] =  i:13
  29 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:13
  30 IsNull          13   38    0               00 if r[13]==NULL goto 38
REG[13] =  i:13
  31 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  32 String8          0   15    0 nosuchtable   00 r[15]='nosuchtable'
REG[15] =   t11[nosuchtable](8)
  33 String8          0   16    0 nosuchtable   00 r[16]='nosuchtable'
REG[16] =   t11[nosuchtable](8)
  34 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:5
  35 String8          0   18    0 CREATE TABLE nosuchtable (f_rules, f1_rules REAL PRIMARY KEY) 00 r[18]='CREATE TABLE nosuchtable (f_rules, f1_rules REAL PRIMARY KEY)'
REG[18] =   t61[CREATE TABLE no](8)
  36 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s96[071723230181077461626C656E6F7375..##...tablenosu](8)
  37 Insert           2   19   13               00 intkey=r[13] data=r[19]
REG[19] =  s96[071723230181077461626C656E6F7375..##...tablenosu](8)
REG[13] =  i:13
  38 Close            2    0    0               00 
  39 SetCookie        0    1   14               00 
  40 ParseSchema      0    0    0 tbl_name='nosuchtable' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0   14 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 nosuchtable   00 r[2]='nosuchtable'
REG[2] =   t11[nosuchtable](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t11[nosuchtable](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t11[nosuchtable](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t11[nosuchtable](8)
REG[1] =   s3[t1b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t11[nosuchtable](8)
REG[1] =   s3[t1b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[def](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t11[nosuchtable](8)
REG[1] =   s3[def](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[e](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t11[nosuchtable](8)
REG[1] =   s1[e](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[u](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t11[nosuchtable](8)
REG[1] =   s1[u](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[u](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t11[nosuchtable](8)
REG[1] =   s1[u](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t8](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t11[nosuchtable](8)
REG[1] =   s2[t8](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t8](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t11[nosuchtable](8)
REG[1] =   s2[t8](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s11[nosuchtable](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t11[nosuchtable](8)
REG[1] =   s11[nosuchtable](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s11[nosuchtable](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s61[CREATE TABLE no](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s11[nosuchtable](8)
REG[6] =  i:5
REG[7] =   s61[CREATE TABLE no](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s11[nosuchtable](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t11[nosuchtable](8)
REG[1] =   s11[nosuchtable](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s30[sqlite_autoinde](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =  NULL
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s30[sqlite_autoinde](8)
REG[6] =  i:3
REG[7] =  NULL
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  41 Halt             0    0    0               00 
SQL: [;UPDATE t1b SET abc = NULL;]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      0    1   14 0             01 usesStmtJournal=1
  33 TableLock        0    6    1 t1b           00 iDb=0 root=6 write=1
  34 Goto             0    1    0               00 
   1 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
   2 OpenRead         0    6    0 0             00 root=6 iDb=0; t1b
   3 Explain          0    0    0 SCAN TABLE t1b 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:1
   6 RowSetAdd        2    3    0               00 rowset(2)=r[3]
REG[2] =  NULL
REG[3] =  i:1
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 OpenWrite        0    6    0 2             00 root=6 iDb=0; t1b
  10 OpenWrite        1    7    0 k(2,,)        00 root=7 iDb=0; sqlite_autoindex_t1b_1
  11 RowSetRead       2   29    3               00 r[3]=rowset(2)
REG[2] =  (rowset)
REG[3] =  i:1
  12 NotExists        0   11    3               00 intkey=r[3]
REG[3] =  i:1
  13 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  14 Column           0    1    5               00 r[5]=t1b.c
REG[5] =  i:5
  15 SCopy            4    6    0               00 r[6]=r[4]; abc
REG[6] =  NULL
  16 IntCopy          3    7    0               00 r[7]=r[3]; rowid
REG[7] =  i:1
  17 MakeRecord       6    2    1               00 r[1]=mkrec(r[6..7]); for sqlite_autoindex_t1b_1
REG[1] =  s3[030009...](8)
  18 NoConflict       1   22    6 1             00 key=r[6]
REG[6] =  NULL
  22 Column           0    0    6               00 r[6]=t1b.abc
REG[6] =  NULL
  23 Rowid            0    7    0               00 r[7]=rowid
REG[7] =  i:1
  24 IdxDelete        1    6    2               00 key=r[6..7]
  25 IdxInsert        1    1    0               00 key=r[1]
REG[1] =  s3[030009...](8)
  26 MakeRecord       4    2    9               00 r[9]=mkrec(r[4..5])
REG[9] =  s4[03000105....](8)
  27 Insert           0    9    3 t1b           05 intkey=r[3] data=r[9]
REG[9] =  s4[03000105....](8)
REG[3] =  i:1
  28 Goto             0   11    0               00 
  11 RowSetRead       2   29    3               00 r[3]=rowset(2)
REG[2] =  (rowset)
REG[3] =  i:1
  29 Close            1    0    0               00 
  30 Noop             0    0    0               00 
  31 Halt             0    0    0               00 
SQL: [;UPDATE OR REPLACE v0 SET v1 = 1;]
VDBE Trace:
   0 Init             0   45    0               00 Start at 45
  45 Transaction      0    1   14 0             01 usesStmtJournal=1
  46 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
  47 String8          0   14    0 c             00 r[14]='c'
REG[14] =   t1[c](8)
  48 Goto             0    1    0               00 
   1 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
   2 OpenEphemeral    3    1    0 k(1,)         00 nColumn=1
   3 OpenRead         4    4    0 k(2,,)        00 root=4 iDb=0; xyz
   4 Explain          0    0    0 SCAN TABLE v0 USING COVERING INDEX xyz 00 
   5 Rewind           4   10   12 0             00 
   6 Column           4    1   10               00 r[10]=v0.v1
REG[10] =  i:1
   7 MakeRecord      10    1   11 A             00 r[11]=mkrec(r[10])
REG[11] =  s2[0209..](8)
   8 IdxInsert        3   11    0               00 key=r[11]
REG[11] =  s2[0209..](8)
   9 Next             4    6    0               01 
  10 Close            4    0    0               00 
  11 OpenWrite        1    4    0 k(2,,)        00 root=4 iDb=0; xyz
  12 OpenWrite        2    2    0 k(1,)         00 root=2 iDb=0; sqlite_autoindex_v0_1
  13 Rewind           3   42    0               00 
  14 RowKey           3   11    0               00 r[11]=key
REG[11] =  s2[0209..](8)
  15 NotFound         2   41   11 0             00 key=r[11]
REG[11] =  s2[0209..](8)
  16 Column           2    0    5               00 r[5]=v0.v1
REG[5] =  i:1
  17 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  18 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  19 Column           2    1    9               00 r[9]=v0.v2
REG[9] =  i:5
  20 HaltIfNull    1299    2    8 v0.v1         01 if r[8]=null halt
REG[8] =  i:1
  21 Eq               8   12   14 (BINARY)      61 if r[8]==r[14] goto 12; xyz column 0
REG[8] =  i:1
REG[14] =   t1[c](8)
REG[12] =  i:0
  22 SCopy            8   13    0               00 r[13]=r[8]; v1
REG[13] =  i:1
  23 MakeRecord      12    2    1               00 r[1]=mkrec(r[12..13]); for xyz
REG[1] =  s3[030809...](8)
  24 SCopy            8   12    0               00 r[12]=r[8]; v1
REG[12] =  i:1
  25 SCopy            9   13    0               00 r[13]=r[9]; v2
REG[13] =  i:5
  26 MakeRecord      12    2    2               00 r[2]=mkrec(r[12..13]); for sqlite_autoindex_v0_1
REG[2] =  s4[03090105....](8)
  27 NoConflict       2   34   12 1             00 key=r[12]
REG[12] =  i:1
  28 Eq               5   34   12 (BINARY)      90 if r[5]==r[12] goto 34
REG[5] =  i:1
REG[12] =  i:1
  34 NotFound         2   39   11 0             00 key=r[11]
REG[11] =  s2[0209..](8)
  35 Eq              15   16   14 (BINARY)      61 if r[15]==r[14] goto 16

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f83d9b8d859 in __GI_abort () at abort.c:79
#2  0x00007f83d9b8d729 in __assert_fail_base (fmt=0x7f83d9d23588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x212700 "memIsValid(&aMem[pOp->p1])", file=0x222c23 "sqlite3.c", line=77360, function=<optimized out>)
    at assert.c:92
#3  0x00007f83d9b9efd6 in __GI___assert_fail (assertion=0x212700 "memIsValid(&aMem[pOp->p1])", file=0x222c23 "sqlite3.c", line=77360, function=0x213a19 "int sqlite3VdbeExec(Vdbe *)") at assert.c:101
#4  0x00000000003e2946 in sqlite3VdbeExec (p=<optimized out>) at sqlite3.c:77360
#5  0x000000000028b140 in sqlite3_step (pStmt=<optimized out>) at sqlite3.c:75131
#6  0x000000000024b5e9 in main (argc=1, argv=0x7ffdc30e8ff8) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 37725] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
