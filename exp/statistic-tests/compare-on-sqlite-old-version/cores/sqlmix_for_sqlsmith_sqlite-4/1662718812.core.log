GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000075,sig:06,src:020592+021823,time:3295468,execs:463818,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
;select v1 from v0;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
  11 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; v0
   2 Explain          0    0    0 SCAN TABLE v0 00 
   3 Rewind           0    7    0               00 
   7 Close            0    0    0               00 
   8 Halt             0    0    0               00 
SQL: [;
;select v2 from v0;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
  11 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; v0
   2 Explain          0    0    0 SCAN TABLE v0 00 
   3 Rewind           0    7    0               00 
   7 Close            0    0    0               00 
   8 Halt             0    0    0               00 
SQL: [;CREATE TABLE v3(x INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,t1 INTEGER NOT NULL,xyz DATE NOT NULL,a FLOAT NOT NULL CHECK (a>=0));]
VDBE Trace:
   0 Init             0   58    0               00 Start at 58
  58 Transaction      0    1    1 0             01 usesStmtJournal=0
  59 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  60 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:2
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:2
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:2
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 v3            00 r[7]='v3'
REG[7] =   t2[v3](8)
  21 String8          0    8    0 v3            00 r[8]='v3'
REG[8] =   t2[v3](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  23 String8          0   10    0 CREATE TABLE v3(x INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,t1 INTEGER NOT NULL,xyz DATE NOT NULL,a FLOAT NOT NULL CHECK (a>=0)) 00 r[10]='CREATE TABLE v3(x INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,t1 INTEGER NOT NULL,xyz DATE NO
REG[10] =   t129[CREATE TABLE v3](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s146[0717111101820F7461626C6576337633.......tablev3v3](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s146[0717111101820F7461626C6576337633.......tablev3v3](8)
REG[5] =  i:2
  26 Close            1    0    0               00 
  27 SetCookie        0    1    2               00 
  28 ReadCookie       0   14    2               00 
REG[14] =  i:4
  29 If              14   32    0               00 
REG[14] =  i:4
  32 CreateTable      0   13    0               00 r[13]=root iDb=0
REG[13] =  i:4
  33 OpenWrite        0    1    0 5             00 root=1 iDb=0
  34 NewRowid         0   12    0               00 r[12]=rowid
REG[12] =  i:3
  35 Blob             6   14    0              00 r[14]= (len=6)
REG[14] =  t6[060000000000......](8)
  36 Insert           0   14   12               08 intkey=r[12] data=r[14]
REG[14] =  t6[060000000000......](8)
REG[12] =  i:3
  37 Close            0    0    0               00 
  38 Close            0    0    0               00 
  39 Null             0   15   16               00 r[15..16]=NULL
REG[15] =  NULL
  40 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  41 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  42 MustBeInt       12   45    0               00 
REG[12] =  i:3
  43 NotExists        2   45   12               00 intkey=r[12]; pk
REG[12] =  i:3
  44 Rowid            2   16    0               00 r[16]=rowid
REG[16] =  i:3
  45 IsNull          16   53    0               00 if r[16]==NULL goto 53
REG[16] =  i:3
  46 String8          0   17    0 table         00 r[17]='table'
REG[17] =   t5[table](8)
  47 String8          0   18    0 sqlite_sequence 00 r[18]='sqlite_sequence'
REG[18] =   t15[sqlite_sequence](8)
  48 String8          0   19    0 sqlite_sequence 00 r[19]='sqlite_sequence'
REG[19] =   t15[sqlite_sequence](8)
  49 Copy            13   20    0               00 r[20]=r[13]
REG[20] =  i:4
  50 String8          0   21    0 CREATE TABLE sqlite_sequence(name,seq) 00 r[21]='CREATE TABLE sqlite_sequence(name,seq)'
REG[21] =   t38[CREATE TABLE sq](8)
  51 MakeRecord      17    5   22 BBBDB         00 r[22]=mkrec(r[17..21])
REG[22] =  s80[06172B2B01597461626C6573716C6974..++.Ytablesqlit](8)
  52 Insert           2   22   16               00 intkey=r[16] data=r[22]
REG[22] =  s80[06172B2B01597461626C6573716C6974..++.Ytablesqlit](8)
REG[16] =  i:3
  53 Close            2    0    0               00 
  54 SetCookie        0    1    2               00 
  55 ParseSchema      0    0    0 tbl_name='sqlite_sequence' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[v3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s15[sqlite_sequence](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s15[sqlite_sequence](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s38[CREATE TABLE sq](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s15[sqlite_sequence](8)
REG[6] =  i:4
REG[7] =   s38[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  56 ParseSchema      0    0    0 tbl_name='v3' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 v3            00 r[2]='v3'
REG[2] =   t2[v3](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[v3](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[v3](8)
REG[1] =   s2[v3](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[v3](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s129[CREATE TABLE v3](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[v3](8)
REG[6] =  i:3
REG[7] =   s129[CREATE TABLE v3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[v3](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  57 Halt             0    0    0               00 
SQL: [;COMMIT;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       1    0    0               00 
SQL: [;INSERT INTO v0(oid,v2,v2) VALUES(-9223372036854775808,26,'8000000000000000');]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    1    2 0             01 usesStmtJournal=0
  14 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
  15 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  16 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; v0
   2 Int64            0    1    0 -9223372036854775808 00 r[1]=-9223372036854775808
REG[1] =  i:-9223372036854775808
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  i:-9223372036854775808
   5 MustBeInt        1    0    0               00 
REG[1] =  i:-9223372036854775808
   6 Integer         26    3    0               00 r[3]=26
REG[3] =  i:26
   7 NotExists        0    9    1               00 intkey=r[1]
REG[1] =  i:-9223372036854775808
   9 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s4[0300011A....](8)
  10 Insert           0    4    1 v0            13 intkey=r[1] data=r[4]
REG[4] =  s4[0300011A....](8)
REG[1] =  i:-9223372036854775808
  11 Noop             0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;INSERT INTO v0(oid,v2,v2) VALUES(-36028797018963969,30,'ff7fffffffffffff');]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    1    2 0             01 usesStmtJournal=0
  14 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
  15 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  16 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; v0
   2 Int64            0    1    0 -36028797018963969 00 r[1]=-36028797018963969
REG[1] =  i:-36028797018963969
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  i:-36028797018963969
   5 MustBeInt        1    0    0               00 
REG[1] =  i:-36028797018963969
   6 Integer         30    3    0               00 r[3]=30
REG[3] =  i:30
   7 NotExists        0    9    1               00 intkey=r[1]
REG[1] =  i:-36028797018963969
   9 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s4[0300011E....](8)
  10 Insert           0    4    1 v0            13 intkey=r[1] data=r[4]
REG[4] =  s4[0300011E....](8)
REG[1] =  i:-36028797018963969
  11 Noop             0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;CREATE TABLE b(t1b INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,def INTEGER NOT NULL DEFAULT 0,d INTEGER DEFAULT 0 CHECK (d>=0),abc DATE NOT NULL DEFAULT '0000-00-00',c INTEGER NOT NULL,e "rules TEXT NOT NULL DEFAULT '',x4_rules INTEGER NOT NULL DEFAULT 0,x5_rules TEXT NOT NULL DEFAULT '',t3 INTEGER NOT NULL,v1a VARCHAR(1) NOT NULL DEFAULT 't1b' CHECK (v1a IN ('t1b', 'P', 'Y')),v1b VARCHAR(1) NOT NULL DEFAULT 't1b' CHECK (v1b IN ('Y', 't1b')),r1 VARCHAR(1) NOT NULL DEFAULT 't1b' CHECK (r1 IN ('Y', 't1b', 'P', 'T')),t4 VARCHAR(1) NOT NULL DEFAULT 't1b' CHECK (t4 IN ('Y', 't1b')),t5 TEXT NOT NULL DEFAULT '',fuzzer [v2] rules table INTEGER NOT NULL DEFAULT 0,t6 INTEGER NOT NULL DEFAULT 0);;CREATE TABLE t7(t9 INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,y FLOAT NOT NULL DEFAULT 0,x1 INTEGER NOT NULL);;CREATE TABLE t1w (t1x INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,m TEXT NOT NULL DEFAULT '',rins2 TEXT NOT NULL DEFAULT '', rins VARCHAR(1) NOT NULL DEFAULT 't1b' CHECK (rins IN ('Y', 't1b')));;CREATE TABLE t0(q INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,t2i1 TEXT NOT NULL DEFAULT '',abc1 INTEGER NOT NULL,node INTEGER NOT NULL DEFAULT 0,node_id FLOAT NOT NULL DEFAULT 0.0,t1i1 INTEGER NOT NULL DEFAULT 0,edge INTEGER NOT NULL DEFAULT 0, node_from TEXT NOT NULL DEFAULT '');;CREATE TABLE node_to (sub_nodes INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,edge_from_to INTEGER NOT NULL DEFAULT 0,edge_to_from TEXT NOT NULL DEFAULT 't1b' CHECK (edge_to_from IN ('Y', 't1b')),blobs FLOAT NOT NULL DEFAULT 0.0,k FLOAT NOT NULL DEFAULT 0.0,v FLOAT NOT NULL DEFAULT 0.0,_x_ INTEGER NOT NULL DEFAULT 2010,_xxx_ INTEGER NOT NULL DEFAULT 0 CHECK (_xxx_>=0 AND _xxx_<=12));;CREATE TABLE aa(ac INTEGER NOT NULL DEFAULT 0,ad INTEGER NOT NULL DEFAULT 0);;CREATE TABLE ae (af INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,ah INTEGER NOT NULL DEFAULT 0,ak TEXT NOT NULL DEFAULT 'Y' CHECK (ak IN ('Y', 't1b')),al TEXT NOT NULL DEFAULT 'Y' CHECK (al IN ('Y', 't1b')),ai INTEGER NOT NULL DEFAULT 2010,aj INTEGER NOT NULL DEFAULT 0 CHECK (aj>=0 AND aj<=12),am TEXT NOT NULL DEFAULT 'Y' CHECK (am IN ('Y', 't1b')),an INTEGER NOT NULL DEFAULT 0 CHECK (an IN (-1,0,1)),ag FLOAT NOT NULL DEFAULT 0.0,ba TEXT NOT NULL DEFAULT 'Y' CHECK (ba IN ('Y', 't1b')),bb INTEGER NOT NULL DEFAULT 0,bc TEXT NOT NULL DEFAULT 'Y' CHECK (bc IN ('Y', 't1b')),bd TEXT NOT NULL DEFAULT 't1b' CHECK (bd IN ('t1b', 'v2', 'Y')));;CREATE TABLE be(
  bf INT,
  bg INT,
  bh TEXT,
  bi REAL,
  bj REAL,
  bk REAL,
  bl INT,
  bm INT,
  bn,
  ca,
  cb,
  cc
);;CREATE INDEX cd ON v0 (v2);;CREATE INDEX ce ON b (t4);;CREATE INDEX cf ON t1w (rins2);;CREATE INDEX cg ON t0 (t2i1, node_from, edge, t2i1, node_from);;CREATE INDEX ch ON t0(abc1);;CREATE INDEX ci ON v0 (v2);;CREATE INDEX cj ON v0 (v2);;CREATE INDEX ck ON v0 (v1);;CREATE INDEX cl ON t7 (y);;CREATE INDEX cm ON v0 (v2);;CREATE INDEX cn ON v0 (v2);;CREATE INDEX da ON t7 (y);;CREATE INDEX db ON t7(y);;CREATE INDEX dc ON t0 (abc1);;CREATE UNIQUE INDEX dd ON v0 (v2, v2);;CREATE UNIQUE INDEX de ON v0(v2);;CREATE UNIQUE INDEX df ON t0(q);;CREATE UNIQUE INDEX dg ON v0(v1);;CREATE UNIQUE INDEX dh ON  b(e "rules);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    2 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:4
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:4
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:4
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 b             00 r[7]='b'
REG[7] =   t1[b](8)
  21 String8          0    8    0 b             00 r[8]='b'
REG[8] =   t1[b](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  23 String8          0   10    0 CREATE TABLE b(t1b INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,def INTEGER NOT NULL DEFAULT 0,d INTEGER DEFAULT 0 CHECK (d>=0),abc DATE NOT NULL DEFAULT '0000-00-00',c INTEGER NOT NULL,e "rules TEXT NOT NULL DEFAULT '',x4_rules INTEGER NOT NULL DEFAULT 0,x5_rules TEXT NOT NULL DEFAULT '',t3 INTEGER NOT NULL,v1a VARCHAR(1) NOT NULL DEFAULT 't1b' CHECK (v1a IN ('t1b', 'P', 'Y')),v1b VARCHAR(1) NOT NULL DEFAULT 't1b' CHECK (v1b IN ('Y', 't1b')),r1 VARCHAR(1) NOT NULL DEFAULT 't1b' CHECK (r1 IN ('Y', 't1b', 'P', 'T')),t4 VARCHAR(1) NOT NULL DEFAULT 't1b' CHECK (t4 IN ('Y', 't1b')),t5 TEXT NOT NULL DEFAULT '',fuzzer [v2] rules table INTEGER NOT NULL DEFAULT 0,t6 INTEGER NOT NULL DEFAULT 0);;CREATE TABLE t7(t9 INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,y FLOAT NOT NULL DEFAULT 0,x1 INTEGER NOT NULL);;CREATE TABLE t1w (t1x INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,m TEXT NOT NULL DEFAULT '',rins2 TEXT NOT NULL DEFAULT '', rins VARCHAR(1) NOT NULL DEFAULT 't1b' CHECK (rins IN ('Y', 't1b')));;CREATE TABLE t0(q INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,t2i1 TEXT NOT NULL DEFAULT '',abc1 INTEGER NOT NULL,node INTEGER NOT NULL DEFAULT 0,node_id FLOAT NOT NULL DEFAULT 0.0,t1i1 INTEGER NOT NULL DEFAULT 0,edge INTEGER NOT NULL DEFAULT 0, node_from TEXT NOT NULL DEFAULT '');;CREATE TABLE node_to (sub_nodes INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,edge_from_to INTEGER NOT NULL DEFAULT 0,edge_to_from TEXT NOT NULL DEFAULT 't1b' CHECK (edge_to_from IN ('Y', 't1b')),blobs FLOAT NOT NULL DEFAULT 0.0,k FLOAT NOT NULL DEFAULT 0.0,v FLOAT NOT NULL DEFAULT 0.0,_x_ INTEGER NOT NULL DEFAULT 2010,_xxx_ INTEGER NOT NULL DEFAULT 0 CHECK (_xxx_>=0 AND _xxx_<=12));;CREATE TABLE aa(ac INTEGER NOT NULL DEFAULT 0,ad INTEGER NOT NULL DEFAULT 0);;CREATE TABLE ae (af INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,ah INTEGER NOT NULL DEFAULT 0,ak TEXT NOT NULL DEFAULT 'Y' CHECK (ak IN ('Y', 't1b')),al TEXT NOT NULL DEFAULT 'Y' CHECK (al IN ('Y', 't1b')),ai INTEGER NOT NULL DEFAULT 2010,aj INTEGER NOT NULL DEFAULT 0 CHECK (aj>=0 AND aj<=12),am TEXT NOT NULL DEFAULT 'Y' CHECK (am IN ('Y', 't1b')),an INTEGER NOT NULL DEFAULT 0 CHECK (an IN (-1,0,1)),ag FLOAT NOT NULL DEFAULT 0.0,ba TEXT NOT NULL DEFAULT 'Y' CHECK (ba IN ('Y', 't1b')),bb INTEGER NOT NULL DEFAULT 0,bc TEXT NOT NULL DEFAULT 'Y' CHECK (bc IN ('Y', 't1b')),bd TEXT NOT NULL DEFAULT 't1b' CHECK (bd IN ('t1b', 'v2', 'Y')));;CREATE TABLE be(
  bf INT,
  bg INT,
  bh TEXT,
  bi REAL,
  bj REAL,
  bk REAL,
  bl INT,
  bm INT,
  bn,
  ca,
  cb,
  cc
);;CREATE INDEX cd ON v0 (v2);;CREATE INDEX ce ON b (t4);;CREATE INDEX cf ON t1w (rins2);;CREATE INDEX cg ON t0 (t2i1, node_from, edge, t2i1, node_from);;CREATE INDEX ch ON t0(abc1);;CREATE INDEX ci ON v0 (v2);;CREATE INDEX cj ON v0 (v2);;CREATE INDEX ck ON v0 (v1);;CREATE INDEX cl ON t7 (y);;CREATE INDEX cm ON v0 (v2);;CREATE INDEX cn ON v0 (v2);;CREATE INDEX da ON t7 (y);;CREATE INDEX db ON t7(y);;CREATE INDEX dc ON t0 (abc1);;CREATE UNIQUE INDEX dd ON v0 (v2, v2);;CREATE UNIQUE INDEX de ON v0(v2);;CREATE UNIQUE INDEX df ON t0(q);;CREATE UNIQUE INDEX dg ON v0(v1);;CREATE UNIQUE INDEX dh ON  b(e "rules) 00 r[10]='CREATE TABLE b(t1b INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,def INTEGER NOT NULL DEFAULT 0
REG[10] =   t3118[CREATE TABLE b(](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s3133[07170F0F01B0697461626C6562620543......itablebb.C](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s3133[07170F0F01B0697461626C6562620543......itablebb.C](8)
REG[5] =  i:4
  26 Close            1    0    0               00 
  27 SetCookie        0    1    3               00 
  28 ParseSchema      0    0    0 tbl_name='b' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 b             00 r[2]='b'
REG[2] =   t1[b](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[b](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[b](8)
REG[1] =   s2[v3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[b](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[b](8)
REG[1] =   s1[b](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[b](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s3118[CREATE TABLE b(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[b](8)
REG[6] =  i:5
REG[7] =   s3118[CREATE TABLE b(](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;INSERT INTO v3(oid,t1,t1) VALUES(549755813888,35,'0000008000000000');]
VDBE Trace:
   0 Init             0   26    0               00 Start at 26
  26 Transaction      0    1    3 0             01 usesStmtJournal=0
  27 TableLock        0    3    1 v3            00 iDb=0 root=3 write=1
  28 TableLock        0    4    1 sqlite_sequence 00 iDb=0 root=4 write=1
  29 OpenRead         0    4    0 2             00 root=4 iDb=0; sqlite_sequence
  30 String8          0    1    0 v3            00 r[1]='v3'
REG[1] =   t2[v3](8)
  31 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  32 Rewind           0   40    0               00 
  40 Close            0    0    0               00 
  41 Null             0    7    0               00 r[7]=NULL
REG[7] =  NULL
  42 Null             0    8    0               00 r[8]=NULL
REG[8] =  NULL
  43 Integer          0   10    0               00 r[10]=0
REG[10] =  i:0
  44 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 4             00 root=3 iDb=0; v3
   2 Int64            0    4    0 549755813888  00 r[4]=549755813888
REG[4] =  i:549755813888
   3 NotNull          4    5    0               00 if r[4]!=NULL goto 5
REG[4] =  i:549755813888
   5 MustBeInt        4    0    0               00 
REG[4] =  i:549755813888
   6 MemMax           2    4    0               00 r[2]=max(r[2],r[4])
REG[4] =  i:549755813888
   7 SoftNull         5    0    0               00 r[5]=NULL
   8 Integer         35    6    0               00 r[6]=35
REG[6] =  i:35
   9 HaltIfNull    1299    2    6 v3.t1         01 if r[6]=null halt
REG[6] =  i:35
  10 HaltIfNull    1299    2    7 v3.xyz        01 if r[7]=null halt
REG[7] =  NULL
SQL: [;CREATE INDEX f ON v0(v1);]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      0    1    3 0             01 usesStmtJournal=0
  35 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  36 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
  37 Goto             0    1    0               00 
   1 Noop             0   33    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:6
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:5
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 f             00 r[4]='f'
REG[4] =   t1[f](8)
   7 String8          0    5    0 v0            00 r[5]='v0'
REG[5] =   t2[v0](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:6
   9 String8          0    7    0 CREATE INDEX f ON v0(v1) 00 r[7]='CREATE INDEX f ON v0(v1)'
REG[7] =   t24[CREATE INDEX f ](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s39[06170F11013D696E6465786676300643.....=indexfv0.C](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s39[06170F11013D696E6465786676300643.....=indexfv0.C](8)
REG[2] =  i:5
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    1 k(2,,)        00 
  14 OpenRead         1    2    0 2             00 root=2 iDb=0; v0
  15 Rewind           1   21    0               00 
  16 Column           1    0   10               00 r[10]=v0.v1
REG[10] =  NULL
  17 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:-9223372036854775808
  18 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s11[0300068000000000000000...........](8)
  19 SorterInsert     3    9    0               00 
REG[9] =  s11[0300068000000000000000...........](8)
  20 Next             1   16    0               00 
  16 Column           1    0   10               00 r[10]=v0.v1
REG[10] =  NULL
  17 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:-36028797018963969
  18 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s11[030006FF7FFFFFFFFFFFFF...........](8)
  19 SorterInsert     3    9    0               00 
REG[9] =  s11[030006FF7FFFFFFFFFFFFF...........](8)
  20 Next             1   16    0               00 
  21 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  22 SorterSort       3   27    0               00 
  23 SorterData       3    9    2               00 r[9]=data
  24 Last             2    0   -1               00 
  25 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s11[0300068000000000000000...........](8)
  26 SorterNext       3   23    0               00 
  23 SorterData       3    9    2               00 r[9]=data
  24 Last             2    0   -1               00 
  25 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s11[030006FF7FFFFFFFFFFFFF...........](8)
  26 SorterNext       3   23    0               00 
  27 Close            1    0    0               00 
  28 Close            2    0    0               00 
  29 Close            3    0    0               00 
  30 SetCookie        0    1    4               00 
  31 ParseSchema      0    0    0 name='f' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 f             00 r[2]='f'
REG[2] =   t1[f](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[f](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[f](8)
REG[1] =   s2[v3](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[f](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[f](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[f](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[f](8)
REG[1] =   s1[f](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s1[f](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:6
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s24[CREATE INDEX f ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[f](8)
REG[6] =  i:6
REG[7] =   s24[CREATE INDEX f ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  32 Expire           0    0    0               00 
  33 Halt             0    0    0               00 
SQL: [;CREATE TRIGGER seq BEFORE UPDATE ON v0 FOR EACH ROW BEGIN     SELECT RAISE(ABORT, 'Impossible de modifier un objet (v0 est utilisé par v0)
Nom de la contrainte : seq')       WHERE NEW.v2!=0 AND NEW.v2!='' AND (SELECT v2 FROM v0 WHERE v2 = NEW.v2) IS NULL; END;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    1    4 0             01 usesStmtJournal=0
  15 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  16 Goto             0    1    0               00 
   1 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   3 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   4 String8          0    3    0 seq           00 r[3]='seq'
REG[3] =   t3[seq](8)
   5 String8          0    4    0 v0            00 r[4]='v0'
REG[4] =   t2[v0](8)
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 String8          0    6    0 CREATE TRIGGER seq BEFORE UPDATE ON v0 FOR EACH ROW BEGIN     SELECT RAISE(ABORT, 'Impossible de modifier un objet (v0 est utilisé par v0)
Nom de la contrainte : seq')       WHERE NEW.v2!=0 AND NEW.v2!='' AND (SELECT v2 FROM v0 WHERE v2 = NEW.v2) IS NULL; END 00 r[6]='CREATE TRIGGER seq BEFORE UPDATE ON v0 FOR EACH ROW BEGIN     SELECT RAISE(ABORT, 'Impossible
REG[6] =   t261[CREATE TRIGGER ](8)
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
REG[7] =  s280[071B1311088417747269676765727365.......triggerse](8)
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
REG[7] =  s280[071B1311088417747269676765727365.......triggerse](8)
REG[1] =  i:6
  10 Close            0    0    0               00 
  11 SetCookie        0    1    5               00 
  12 ParseSchema      0    0    0 type='trigger' AND name='seq' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    5 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  19 String8          0    4    0 seq           00 r[4]='seq'
REG[4] =   t3[seq](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[index](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s3[seq](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t3[seq](8)
REG[3] =   s3[seq](8)
   9 Copy             3    5    0               00 r[5]=r[3]
REG[5] =   s3[seq](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:0
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s261[CREATE TRIGGER ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s3[seq](8)
REG[6] =  i:0
REG[7] =   s261[CREATE TRIGGER ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT v2, rowid, v2 FROM v0 ORDER BY rowid
  
;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    5 0             01 usesStmtJournal=0
  13 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; v0
   3 Explain          0    0    0 SCAN TABLE v0 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=v0.v2
REG[1] =  i:26
   6 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:-9223372036854775808
   7 Copy             1    3    0               00 r[3]=r[1]
REG[3] =  i:26
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =  i:26
REG[2] =  i:-9223372036854775808
REG[3] =  i:26
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=v0.v2
REG[1] =  i:30
   6 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:-36028797018963969
   7 Copy             1    3    0               00 r[3]=r[1]
REG[3] =  i:30
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =  i:30
REG[2] =  i:-36028797018963969
REG[3] =  i:30
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [SELECT rowid, v1, v1 FROM v0 ORDER BY +rowid
  
;]
VDBE Trace:
   0 Init             0   22    0               00 Start at 22
  22 Transaction      0    0    5 0             01 usesStmtJournal=0
  23 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
  24 Goto             0    1    0               00 
   1 SorterOpen       1    5    0 k(1,B)        00 
   2 OpenRead         2    6    0 k(2,,)        00 root=6 iDb=0; f
   3 Explain          0    0    0 SCAN TABLE v0 USING COVERING INDEX f 00 
   4 Rewind           2   12    1 0             00 
   5 IdxRowid         2    2    0               00 r[2]=rowid
REG[2] =  i:-9223372036854775808
   6 Column           2    0    3               00 r[3]=v0.v1
REG[3] =  NULL
   7 Copy             3    4    0               00 r[4]=r[3]
REG[4] =  NULL
   8 Copy             2    1    0               00 r[1]=r[2]
REG[1] =  i:-9223372036854775808
   9 MakeRecord       1    4    5               00 r[5]=mkrec(r[1..4])
REG[5] =  s21[05060600008000000000000000800000................](8)
  10 SorterInsert     1    5    0               00 
REG[5] =  s21[05060600008000000000000000800000................](8)
  11 Next             2    5    0               01 
   5 IdxRowid         2    2    0               00 r[2]=rowid
REG[2] =  i:-36028797018963969
   6 Column           2    0    3               00 r[3]=v0.v1
REG[3] =  NULL
   7 Copy             3    4    0               00 r[4]=r[3]
REG[4] =  NULL
   8 Copy             2    1    0               00 r[1]=r[2]
REG[1] =  i:-36028797018963969
   9 MakeRecord       1    4    5               00 r[5]=mkrec(r[1..4])
REG[5] =  s21[0506060000FF7FFFFFFFFFFFFFFF7FFF................](8)
  10 SorterInsert     1    5    0               00 
REG[5] =  s21[0506060000FF7FFFFFFFFFFFFFFF7FFF................](8)
  11 Next             2    5    0               01 
  12 Close            2    0    0               00 
  13 OpenPseudo       3    6    5               00 5 columns in r[6]
  14 SorterSort       1   21    0               00 
  15 SorterData       1    6    3               00 r[6]=data
  16 Column           3    1    2               00 r[2]=rowid
REG[2] =  i:-9223372036854775808
  17 Column           3    2    3               00 r[3]=v1
REG[3] =  NULL
  18 Column           3    3    4               00 r[4]=v1
REG[4] =  NULL
  19 ResultRow        2    3    0               00 output=r[2..4]
REG[2] =  i:-9223372036854775808
REG[3] =  NULL
REG[4] =  NULL
  20 SorterNext       1   15    0               00 
  15 SorterData       1    6    3               00 r[6]=data
  16 Column           3    1    2               00 r[2]=rowid
REG[2] =  i:-36028797018963969
  17 Column           3    2    3               00 r[3]=v1
REG[3] =  NULL
  18 Column           3    3    4               00 r[4]=v1
REG[4] =  NULL
  19 ResultRow        2    3    0               00 output=r[2..4]
REG[2] =  i:-36028797018963969
REG[3] =  NULL
REG[4] =  NULL
  20 SorterNext       1   15    0               00 
  21 Halt             0    0    0               00 
SQL: [;UPDATE v0 SET v2=zeroblob(600)
  
;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    1    5 0             01 usesStmtJournal=1
  26 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
  27 Integer        600    8    0               00 r[8]=600
REG[8] =  i:600
  28 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; v0
   3 Explain          0    0    0 SCAN TABLE v0 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:-9223372036854775808
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:-9223372036854775808
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:-36028797018963969
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:-36028797018963969
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 OpenWrite        0    2    0 2             00 root=2 iDb=0; v0
  10 RowSetRead       1   23    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:-9223372036854775808
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:-9223372036854775808
  12 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  13 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  14 Copy             2    5    0               00 r[5]=r[2]
REG[5] =  i:-9223372036854775808
  15 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  16 Function0        1    8    7 zeroblob(1)   01 r[7]=func(r[8])
REG[8] =  i:600
REG[7] =  s0[](8)+600z
  17 Program          2   10    9 program       01 Call: seq.default
   0 Init             0    0    0 -- TRIGGER seq 00 Start at 0; Start: seq.default (BEFORE UPDATE ON v0)
   1 Param            5    1    0               00 new.v2 -> $1
REG[1] =  e0[](8)+600z
   2 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   3 Eq               2   22    1 (BINARY)      51 if r[2]==r[1] goto 22
REG[2] =  i:0
REG[1] =  e0[](8)+600z
   4 Param            5    2    0               00 new.v2 -> $2
REG[2] =  e0[](8)+600z
   5 String8          0    1    0               00 r[1]=''
REG[1] =   t0[](8)
   6 Eq               1   22    2 (BINARY)      51 if r[1]==r[2] goto 22
REG[1] =   t0[](8)
REG[2] =  e0[](8)+600z
   7 Once             0   20    0               00 
   8 Null             0    3    0               00 r[3]=NULL; Init subquery result
REG[3] =  NULL
   9 Integer          1    4    0               00 r[4]=1; LIMIT counter
REG[4] =  i:1
  10 OpenRead         0    2    0 2             00 root=2 iDb=0; v0
  11 Explain          1    0    0 SCAN TABLE v0 00 
  12 Rewind           0   19    0               00 
  13 Column           0    1    2               00 r[2]=v0.v2

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f79c63ad859 in __GI_abort () at abort.c:79
#2  0x00007f79c63ad729 in __assert_fail_base (fmt=0x7f79c6543588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", 
    assertion=0x216480 "((p->szMalloc>0 && p->z==p->zMalloc)? 1 : 0) + ((p->flags&MEM_Dyn)!=0 ? 1 : 0) + ((p->flags&MEM_Ephem)!=0 ? 1 : 0) + ((p->flags&MEM_Static)!=0 ? 1 : 0) == 1", file=0x222c23 "sqlite3.c", line=68297, 
    function=<optimized out>) at assert.c:92
#3  0x00007f79c63befd6 in __GI___assert_fail (
    assertion=0x216480 "((p->szMalloc>0 && p->z==p->zMalloc)? 1 : 0) + ((p->flags&MEM_Dyn)!=0 ? 1 : 0) + ((p->flags&MEM_Ephem)!=0 ? 1 : 0) + ((p->flags&MEM_Static)!=0 ? 1 : 0) == 1", file=0x222c23 "sqlite3.c", line=68297, 
    function=0x21e154 "int sqlite3VdbeCheckMemInvariants(Mem *)") at assert.c:101
#4  0x00000000002795e3 in sqlite3VdbeCheckMemInvariants (p=0x240a0b8) at sqlite3.c:68292
#5  0x00000000003dc517 in sqlite3VdbeExec (p=<optimized out>) at sqlite3.c:79252
#6  0x000000000028b140 in sqlite3_step (pStmt=<optimized out>) at sqlite3.c:75131
#7  0x000000000024b5e9 in main (argc=1, argv=0x7fff0f5e5ad8) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 34540] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
