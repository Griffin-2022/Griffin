GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000106,sig:06,src:020466+020514,time:3515932,execs:505743,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;CREATE TABLE v2(v3 INTEGER PRIMARY KEY,x);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    1 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:2
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:2
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:2
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 v2            00 r[7]='v2'
REG[7] =   t2[v2](8)
  21 String8          0    8    0 v2            00 r[8]='v2'
REG[8] =   t2[v2](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  23 String8          0   10    0 CREATE TABLE v2(v3 INTEGER PRIMARY KEY,x) 00 r[10]='CREATE TABLE v2(v3 INTEGER PRIMARY KEY,x)'
REG[10] =   t41[CREATE TABLE v2](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s57[06171111015F7461626C657632763203....._tablev2v2.](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s57[06171111015F7461626C657632763203....._tablev2v2.](8)
REG[5] =  i:2
  26 Close            1    0    0               00 
  27 SetCookie        0    1    2               00 
  28 ParseSchema      0    0    0 tbl_name='v2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 v2            00 r[2]='v2'
REG[2] =   t2[v2](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[v2](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[v2](8)
REG[1] =   s2[v2](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[v2](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s41[CREATE TABLE v2](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[v2](8)
REG[6] =  i:3
REG[7] =   s41[CREATE TABLE v2](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;
;PRAGMA integrity_check
;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0    2 0             01 usesStmtJournal=0
  24 Transaction      1    0    0 0             01 usesStmtJournal=0
  25 Goto             0    1    0               00 
   1 Integer        100    1    0               00 r[1]=100
REG[1] =  i:100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
REG[1] =  i:100
   4 IntegrityCk      2    3    1 [2,1]         00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
REG[2] =  NULL
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
REG[1] =  i:100
  12 IntegrityCk      2    1    1 ]             01 
  13 IsNull           2   18    0               00 if r[2]==NULL goto 18
REG[2] =  NULL
  18 AddImm           1 -100    0               00 r[1]=r[1]+-100
REG[1] =  i:100
  19 If               1   22    0               00 
REG[1] =  i:0
  20 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
  21 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
  22 Halt             0    0    0               00 
SQL: [;UPDATE OR REPLACE v0 SET v1=v1+1;]
VDBE Trace:
   0 Init             0   22    0               00 Start at 22
  22 Transaction      0    1    2 0             01 usesStmtJournal=0
  23 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
  24 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  25 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  26 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  27 Gt               9    7    8               61 if r[9]>r[8] goto 7
REG[9] =  i:1
REG[8] =  i:1
REG[7] =  i:0
  28 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; v0
   3 Explain          0    0    0 SCAN TABLE v0 00 
   4 Rewind           0    8    0               00 
   8 Close            0    0    0               00 
   9 OpenWrite        0    2    0 1             00 root=2 iDb=0; v0
  10 RowSetRead       1   20    2               00 r[2]=rowset(1)
REG[1] =  NULL
REG[2] =  NULL
  20 Noop             0    0    0               00 
  21 Halt             0    0    0               00 
SQL: [;UPDATE OR REPLACE v0 SET v1=v1+1;]
VDBE Trace:
   0 Init             0   22    0               00 Start at 22
  22 Transaction      0    1    2 0             01 usesStmtJournal=0
  23 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
  24 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  25 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  26 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  27 Gt               9    7    8               61 if r[9]>r[8] goto 7
REG[9] =  i:1
REG[8] =  i:1
REG[7] =  i:0
  28 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; v0
   3 Explain          0    0    0 SCAN TABLE v0 00 
   4 Rewind           0    8    0               00 
   8 Close            0    0    0               00 
   9 OpenWrite        0    2    0 1             00 root=2 iDb=0; v0
  10 RowSetRead       1   20    2               00 r[2]=rowset(1)
REG[1] =  NULL
REG[2] =  NULL
  20 Noop             0    0    0               00 
  21 Halt             0    0    0               00 
SQL: [;SELECT count(*), sum(v1) FROM v0;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 0             01 usesStmtJournal=0
  16 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
  17 Goto             0    1    0               00 
   1 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; v0
   3 Explain          0    0    0 SCAN TABLE v0 00 
   4 Rewind           0    9    0               00 
   9 Close            0    0    0               00 
  10 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  11 AggFinal         2    1    0 sum(1)        00 accum=r[2] N=1
  12 Copy             1    5    1               00 r[5..6]=r[1..2]
REG[5] =  i:0
REG[6] =  NULL
  13 ResultRow        5    2    0               00 output=r[5..6]
REG[5] =  i:0
REG[6] =  NULL
  14 Halt             0    0    0               00 
SQL: [;SELECT count(*), sum(v1) FROM v0;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 0             01 usesStmtJournal=0
  16 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
  17 Goto             0    1    0               00 
   1 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; v0
   3 Explain          0    0    0 SCAN TABLE v0 00 
   4 Rewind           0    9    0               00 
   9 Close            0    0    0               00 
  10 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  11 AggFinal         2    1    0 sum(1)        00 accum=r[2] N=1
  12 Copy             1    5    1               00 r[5..6]=r[1..2]
REG[5] =  i:0
REG[6] =  NULL
  13 ResultRow        5    2    0               00 output=r[5..6]
REG[5] =  i:0
REG[6] =  NULL
  14 Halt             0    0    0               00 
SQL: [DELETE FROM v0;]
VDBE Trace:
   0 Init             0    3    0               00 Start at 3
   3 Transaction      0    1    2 0             01 usesStmtJournal=0
   4 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
   5 Goto             0    1    0               00 
   1 Clear            2    0   -1 v0            00 
   2 Halt             0    0    0               00 
SQL: [;
;PRAGMA integrity_check
;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0    2 0             01 usesStmtJournal=0
  24 Transaction      1    0    0 0             01 usesStmtJournal=0
  25 Goto             0    1    0               00 
   1 Integer        100    1    0               00 r[1]=100
REG[1] =  i:100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
REG[1] =  i:100
   4 IntegrityCk      2    3    1 [2,1]         00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
REG[2] =  NULL
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
REG[1] =  i:100
  12 IntegrityCk      2    1    1 ]             01 
  13 IsNull           2   18    0               00 if r[2]==NULL goto 18
REG[2] =  NULL
  18 AddImm           1 -100    0               00 r[1]=r[1]+-100
REG[1] =  i:100
  19 If               1   22    0               00 
REG[1] =  i:0
  20 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
  21 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
  22 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f1d4ab19859 in __GI_abort () at abort.c:79
#2  0x00007f1d4ab19729 in __assert_fail_base (fmt=0x7f1d4acaf588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x212bb5 "0", file=0x222c23 "sqlite3.c", line=92844, function=<optimized out>) at assert.c:92
#3  0x00007f1d4ab2afd6 in __GI___assert_fail (assertion=0x212bb5 "0", file=0x222c23 "sqlite3.c", line=92844, function=0x20fc5f "int sqlite3ExprCompare(Expr *, Expr *, int)") at assert.c:101
#4  0x0000000000365fd9 in sqlite3ExprCompare (pA=0xdb3800, pB=0xdb8108, iTab=<optimized out>) at sqlite3.c:92844
#5  0x00000000003721e1 in sqlite3ExprCodeTemp (pParse=0xdb4090, pExpr=0xdb8108, pReg=<optimized out>) at sqlite3.c:92293
#6  0x0000000000378288 in sqlite3ExprCodeTarget (pParse=0xdb4090, pExpr=0xdb80b8, target=<optimized out>) at sqlite3.c:91782
#7  0x000000000037823c in sqlite3ExprCodeTarget (pParse=0xdb4090, pExpr=0xdb8070, target=2) at sqlite3.c:92068
#8  0x00000000003154c9 in sqlite3ExprCode (pParse=0xdb4090, pExpr=<optimized out>, target=2) at sqlite3.c:92325
#9  0x00000000003845e7 in sqlite3GenerateConstraintChecks (pParse=0x2, pTab=0xdb6270, aRegIdx=<optimized out>, iDataCur=0, iIdxCur=1, regNewData=1, regOldData=0, pkChng=0 '\000', overrideError=5 '\005', ignoreDest=-1, 
    pbMayReplace=0x7ffde3738900, aiChng=0x0) at sqlite3.c:107178
#10 0x00000000003418e6 in sqlite3Insert (pParse=<optimized out>, pTabList=<optimized out>, pSelect=<optimized out>, pColumn=0x0, onError=<optimized out>) at sqlite3.c:106860
#11 0x00000000003066b3 in yy_reduce (yypParser=0xe2d280, yyruleno=<optimized out>) at sqlite3.c:133484
#12 0x00000000002fef8e in sqlite3Parser (yyp=0xe2d280, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#13 0x00000000002fc544 in sqlite3RunParser (pParse=0xdb4090, 
    zSql=0xe2d030 ";INSERT OR REPLACE INTO v0 DEFAULT VALUES;;SELECT * FROM v2;;UPDATE OR REPLACE v0 SET v1=v1+1;;\n;VACUUM \n;;\n;CREATE TABLE xyz (t1 DEFAULT (1 BETWEEN CURRENT_TIMESTAMP AND 1));;UPDATE OR REPLACE v0 SET"..., pzErrMsg=0x7ffde3738b88) at sqlite3.c:135186
#14 0x00000000002fac4e in sqlite3Prepare (db=0xda2400, 
    zSql=0xda2186 ";INSERT OR REPLACE INTO v0 DEFAULT VALUES;;SELECT * FROM v2;;UPDATE OR REPLACE v0 SET v1=v1+1;;\n;VACUUM \n;;\n;CREATE TABLE xyz (t1 DEFAULT (1 BETWEEN CURRENT_TIMESTAMP AND 1));;UPDATE OR REPLACE v0 SET"..., nBytes=<optimized out>, saveSqlFlag=1, pReprepare=<optimized out>, ppStmt=0x7ffde3738cb8, pzTail=0x7ffde3738ca0) at sqlite3.c:112589
#15 0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0xda2400, 
    zSql=0xda2186 ";INSERT OR REPLACE INTO v0 DEFAULT VALUES;;SELECT * FROM v2;;UPDATE OR REPLACE v0 SET v1=v1+1;;\n;VACUUM \n;;\n;CREATE TABLE xyz (t1 DEFAULT (1 BETWEEN CURRENT_TIMESTAMP AND 1));;UPDATE OR REPLACE v0 SET"..., nBytes=574, saveSqlFlag=1, pOld=0x0, ppStmt=<optimized out>, pzTail=0x7ffde3738ca0) at sqlite3.c:112688
#16 0x000000000028f38c in sqlite3_prepare_v2 (db=0x2, zSql=0x7ffde3738040 "", nBytes=0, ppStmt=0x7ffde3738cb8, pzTail=<optimized out>) at sqlite3.c:112764
#17 0x000000000024b100 in main (argc=1, argv=0x7ffde3738e68) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 34824] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
