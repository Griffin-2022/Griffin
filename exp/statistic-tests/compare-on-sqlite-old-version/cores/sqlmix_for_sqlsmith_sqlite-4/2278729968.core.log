GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000340,sig:06,src:019627+008443,time:10051207,execs:1698360,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_listing=on;]
VDBE Program Listing:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;CREATE TABLE x(xyz INTEGER PRIMARY KEY,t1);]
VDBE Program Listing:
   0 Init             0   30    0               00 Start at 30
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
  16 NotExists        1   18    1               00 intkey=r[1]; pk
  17 Rowid            1    5    0               00 r[5]=rowid
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
  19 String8          0    6    0 table         00 r[6]='table'
  20 String8          0    7    0 x             00 r[7]='x'
  21 String8          0    8    0 x             00 r[8]='x'
  22 Copy             2    9    0               00 r[9]=r[2]
  23 String8          0   10    0 CREATE TABLE x(xyz INTEGER PRIMARY KEY,t1) 00 r[10]='CREATE TABLE x(xyz INTEGER PRIMARY KEY,t1)'
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
  26 Close            1    0    0               00 
  27 SetCookie        0    1    4               00 
  28 ParseSchema      0    0    0 tbl_name='x' AND type!='trigger' 00 
  29 Halt             0    0    0               00 
  30 Transaction      0    1    3 1             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   16    0               00 Start at 16
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
   7 Column           0    0    3               00 r[3]=sqlite_master.type
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
   9 Column           0    1    5               00 r[5]=sqlite_master.name
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
  12 ResultRow        5    3    0               00 output=r[5..7]
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  16 Transaction      0    0    4 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 x             00 r[2]='x'
  19 String8          0    4    0 trigger       00 r[4]='trigger'
  20 Goto             0    1    0               00 
SQL: [;INSERT INTO v0(v1) VALUES(1.23456);]
VDBE Program Listing:
   0 Init             0   20    0               00 Start at 20
   1 OpenWrite        0    2    0 1             00 root=2 iDb=0; v0
   2 OpenWrite        1    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_v0_1
   3 Integer         -1    4    0               00 r[4]=-1
   4 Real             0    5    0 1.23456       00 r[5]=1.23456
   5 Copy             5    6    0               00 r[6]=r[5]
   6 Program          2   17    7 program       01 Call: v2.default
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Copy             6    2    0               00 r[2]=r[6]
   9 SCopy            2    4    0               00 r[4]=r[2]; v1
  10 IntCopy          1    5    0               00 r[5]=r[1]; rowid
  11 MakeRecord       4    2    3               00 r[3]=mkrec(r[4..5]); for sqlite_autoindex_v0_1
  12 NoConflict       1   14    4 1             00 key=r[4]
  13 Halt          1555    2    0 v0.v1         02 
  14 IdxInsert        1    3    0               10 key=r[3]
  15 MakeRecord       2    1    9               00 r[9]=mkrec(r[2])
  16 Insert           0    9    1 v0            1B intkey=r[1] data=r[9]
  17 Close            0    0    0               00 
  18 Noop             1    0    0               00 
  19 Halt             0    0    0               00 
  20 Transaction      0    1    4 1             01 usesStmtJournal=1
  21 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
  22 Goto             0    1    0               00 
SQL: [CREATE TABLE a(b, t1b);]
VDBE Program Listing:
   0 Init             0   30    0               00 Start at 30
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
  16 NotExists        1   18    1               00 intkey=r[1]; pk
  17 Rowid            1    5    0               00 r[5]=rowid
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
  19 String8          0    6    0 table         00 r[6]='table'
  20 String8          0    7    0 a             00 r[7]='a'
  21 String8          0    8    0 a             00 r[8]='a'
  22 Copy             2    9    0               00 r[9]=r[2]
  23 String8          0   10    0 CREATE TABLE a(b, t1b) 00 r[10]='CREATE TABLE a(b, t1b)'
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
  26 Close            1    0    0               00 
  27 SetCookie        0    1    5               00 
  28 ParseSchema      0    0    0 tbl_name='a' AND type!='trigger' 00 
  29 Halt             0    0    0               00 
  30 Transaction      0    1    4 1             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   16    0               00 Start at 16
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
   7 Column           0    0    3               00 r[3]=sqlite_master.type
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
   9 Column           0    1    5               00 r[5]=sqlite_master.name
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
  12 ResultRow        5    3    0               00 output=r[5..7]
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  16 Transaction      0    0    5 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 a             00 r[2]='a'
  19 String8          0    4    0 trigger       00 r[4]='trigger'
  20 Goto             0    1    0               00 
SQL: [SELECT * FROM x , a ON (0) 
;]
VDBE Program Listing:
   0 Init             0   18    0               00 Start at 18
   1 Goto             0   15    0               00 
   2 OpenRead         0    4    0 2             00 root=4 iDb=0; x
   3 OpenRead         1    5    0 2             00 root=5 iDb=0; a
   4 Explain          0    0    0 SCAN TABLE x  00 
   5 Rewind           0   15    0               00 
   6 Explain          0    1    1 SCAN TABLE a  00 
   7 Rewind           1   14    0               00 
   8 Rowid            0    1    0               00 r[1]=rowid
   9 Column           0    1    2               00 r[2]=x.t1
  10 Column           1    0    3               00 r[3]=a.b
  11 Column           1    1    4               00 r[4]=a.t1b
  12 ResultRow        1    4    0               00 output=r[1..4]
  13 Next             1    8    0               01 
  14 Next             0    6    0               01 
  15 Close            0    0    0               00 
  16 Close            1    0    0               00 
  17 Halt             0    0    0               00 
  18 Transaction      0    0    5 1             01 usesStmtJournal=0
  19 TableLock        0    4    0 x             00 iDb=0 root=4 write=0
  20 TableLock        0    5    0 a             00 iDb=0 root=5 write=0
  21 Goto             0    1    0               00 
SQL: [SELECT * FROM v0 , a ON (NULL) 
;]
VDBE Program Listing:
   0 Init             0   17    0               00 Start at 17
   1 IfNot            1   14    1               00 
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; v0
   3 OpenRead         1    5    0 2             00 root=5 iDb=0; a
   4 Explain          0    0    0 SCAN TABLE v0 00 
   5 Rewind           0   14    0               00 
   6 Explain          0    1    1 SCAN TABLE a  00 
   7 Rewind           1   13    0               00 
   8 Column           0    0    2               00 r[2]=v0.v1
   9 Column           1    0    3               00 r[3]=a.b
  10 Column           1    1    4               00 r[4]=a.t1b
  11 ResultRow        2    3    0               00 output=r[2..4]
  12 Next             1    8    0               01 
  13 Next             0    6    0               01 
  14 Close            0    0    0               00 
  15 Close            1    0    0               00 
  16 Halt             0    0    0               00 
  17 Transaction      0    0    5 1             01 usesStmtJournal=0
  18 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
  19 TableLock        0    5    0 a             00 iDb=0 root=5 write=0
  20 Null             0    1    0               00 r[1]=NULL
  21 Goto             0    1    0               00 
SQL: [SELECT * FROM v0 , x ON ('xyz') 
;]
VDBE Program Listing:
   0 Init             0   17    0               00 Start at 17
   1 IfNot            1   14    1               00 
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; v0
   3 OpenRead         1    4    0 2             00 root=4 iDb=0; x
   4 Explain          0    0    0 SCAN TABLE v0 00 
   5 Rewind           0   14    0               00 
   6 Explain          0    1    1 SCAN TABLE x  00 
   7 Rewind           1   13    0               00 
   8 Column           0    0    2               00 r[2]=v0.v1
   9 Rowid            1    3    0               00 r[3]=rowid
  10 Column           1    1    4               00 r[4]=x.t1
  11 ResultRow        2    3    0               00 output=r[2..4]
  12 Next             1    8    0               01 
  13 Next             0    6    0               01 
  14 Close            0    0    0               00 
  15 Close            1    0    0               00 
  16 Halt             0    0    0               00 
  17 Transaction      0    0    5 1             01 usesStmtJournal=0
  18 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
  19 TableLock        0    4    0 x             00 iDb=0 root=4 write=0
  20 String8          0    1    0 xyz           00 r[1]='xyz'
  21 Goto             0    1    0               00 
SQL: [SELECT * FROM v0 , v0 USING (v1,v1)                  
;]
VDBE Program Listing:
   0 Init             0   19    0               00 Start at 19
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; v0
   2 OpenRead         2    3    0 k(2,,)        02 root=3 iDb=0; sqlite_autoindex_v0_1
   3 Explain          0    0    0 SCAN TABLE v0 00 
   4 Rewind           0   16    0               00 
   5 Explain          0    1    1 SEARCH TABLE v0 USING COVERING INDEX sqlite_autoindex_v0_1 (v1=?) 00 
   6 Column           0    0    1               00 r[1]=v0.v1
   7 IsNull           1   15    0               00 if r[1]==NULL goto 15
   8 SeekGE           2   15    1 1             00 key=r[1]
   9 IdxGT            2   15    1 1             00 key=r[1]
  10 Column           2    0    2               00 r[2]=v0.v1
  11 Ne               2   14    1 (BINARY)      51 if r[2]!=r[1] goto 14
  12 Copy             1    3    0               00 r[3]=r[1]
  13 ResultRow        3    1    0               00 output=r[3]
  14 Next             2    9    0               00 
  15 Next             0    5    0               01 
  16 Close            0    0    0               00 
  17 Close            2    0    0               00 
  18 Halt             0    0    0               00 
  19 Transaction      0    0    5 1             01 usesStmtJournal=0
  20 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
  21 Goto             0    1    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fa969543859 in __GI_abort () at abort.c:79
#2  0x00007fa969543729 in __assert_fail_base (fmt=0x7fa9696d9588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x212bb5 "0", file=0x222c23 "sqlite3.c", line=125392, function=<optimized out>) at assert.c:92
#3  0x00007fa969554fd6 in __GI___assert_fail (assertion=0x212bb5 "0", file=0x222c23 "sqlite3.c", line=125392, function=0x2266f4 "int termIsEquivalence(Parse *, Expr *)") at assert.c:101
#4  0x0000000000398c39 in exprAnalyze (pSrc=<optimized out>, pWC=<optimized out>, idxTerm=<optimized out>) at sqlite3.c:125392
#5  0x000000000038c95f in sqlite3WhereBegin (pParse=<optimized out>, pTabList=<optimized out>, pWhere=<optimized out>, pOrderBy=<optimized out>, pDistinctSet=0x1710940, wctrlFlags=0, iAuxArg=320) at sqlite3.c:125921
#6  0x0000000000328d02 in sqlite3Select (pParse=<optimized out>, p=<optimized out>, pDest=<optimized out>) at sqlite3.c:118028
#7  0x00000000003034ae in yy_reduce (yypParser=0x1723030, yyruleno=<optimized out>) at sqlite3.c:133175
#8  0x00000000002fef8e in sqlite3Parser (yyp=0x1723030, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#9  0x00000000002fc544 in sqlite3RunParser (pParse=0x1711450, 
    zSql=0x1720970 "SELECT * FROM (SELECT xyz COLLATE nocase, xyz FROM x) AS v2 \n       INNER JOIN x USING (xyz) \n;CREATE TABLE abc(c, def, d);SELECT * FROM abc NATURAL LEFT JOIN abc\n;CREATE TABLE e(f, seq);SELECT name, "..., pzErrMsg=0x7ffd6b0c6e08) at sqlite3.c:135186
#10 0x00000000002fac4e in sqlite3Prepare (db=0x16fe850, 
    zSql=0x16ff8c1 "SELECT * FROM (SELECT xyz COLLATE nocase, xyz FROM x) AS v2 \n       INNER JOIN x USING (xyz) \n;CREATE TABLE abc(c, def, d);SELECT * FROM abc NATURAL LEFT JOIN abc\n;CREATE TABLE e(f, seq);SELECT name, "..., nBytes=<optimized out>, saveSqlFlag=1, pReprepare=<optimized out>, ppStmt=0x7ffd6b0c6f38, pzTail=0x7ffd6b0c6f20) at sqlite3.c:112589
#11 0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0x16fe850, 
    zSql=0x16ff8c1 "SELECT * FROM (SELECT xyz COLLATE nocase, xyz FROM x) AS v2 \n       INNER JOIN x USING (xyz) \n;CREATE TABLE abc(c, def, d);SELECT * FROM abc NATURAL LEFT JOIN abc\n;CREATE TABLE e(f, seq);SELECT name, "..., nBytes=593, saveSqlFlag=1, pOld=0x0, ppStmt=<optimized out>, pzTail=0x7ffd6b0c6f20) at sqlite3.c:112688
#12 0x000000000028f38c in sqlite3_prepare_v2 (db=0x2, zSql=0x7ffd6b0c63f0 "", nBytes=0, ppStmt=0x7ffd6b0c6f38, pzTail=<optimized out>) at sqlite3.c:112764
#13 0x000000000024b100 in main (argc=1, argv=0x7ffd6b0c70e8) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 36730] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
