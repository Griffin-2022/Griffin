GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000375,sig:06,src:021474+020614,time:11530341,execs:1956256,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;INSERT INTO v3(xyz) VALUES(123);]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    1    6 1             01 usesStmtJournal=0
  12 TableLock        0    4    1 v3            00 iDb=0 root=4 write=1
  13 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  14 Goto             0    1    0               00 
   1 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
   2 OpenWrite        0    4    0 2             00 root=4 iDb=0; v3
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   4 Integer        123    3    0               00 r[3]=123
REG[3] =  i:123
   5 MakeRecord       2    2    5 DD            00 r[5]=mkrec(r[2..3])
REG[5] =  s4[0300017B...{](8)
   6 Insert           0    5    1 v3            1B intkey=r[1] data=r[5]
REG[5] =  s4[0300017B...{](8)
REG[1] =  i:2
   7 AddImm           4    1    0               00 r[4]=r[4]+1
REG[4] =  i:0
   8 Close            0    0    0               00 
   9 ResultRow        4    1    0               00 output=r[4]
REG[4] =  i:1
  10 Halt             0    0    0               00 
SQL: [INSERT INTO v3 VALUES(14,4)
;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    1    6 1             01 usesStmtJournal=0
  13 TableLock        0    4    1 v3            00 iDb=0 root=4 write=1
  14 Goto             0    1    0               00 
   1 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
   2 OpenWrite        0    4    0 2             00 root=4 iDb=0; v3
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   4 Integer         14    2    0               00 r[2]=14
REG[2] =  i:14
   5 Integer          4    3    0               00 r[3]=4
REG[3] =  i:4
   6 MakeRecord       2    2    5 DD            00 r[5]=mkrec(r[2..3])
REG[5] =  s5[0301010E04.....](8)
   7 Insert           0    5    1 v3            1B intkey=r[1] data=r[5]
REG[5] =  s5[0301010E04.....](8)
REG[1] =  i:3
   8 AddImm           4    1    0               00 r[4]=r[4]+1
REG[4] =  i:0
   9 Close            0    0    0               00 
  10 ResultRow        4    1    0               00 output=r[4]
REG[4] =  i:1
  11 Halt             0    0    0               00 
SQL: [INSERT INTO a VALUES(19,5)
;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    1    6 1             01 usesStmtJournal=0
  13 TableLock        0    6    1 a             00 iDb=0 root=6 write=1
  14 Goto             0    1    0               00 
   1 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
   2 OpenWrite        0    6    0 2             00 root=6 iDb=0; a
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   4 Integer         19    2    0               00 r[2]=19
REG[2] =  i:19
   5 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
   6 MakeRecord       2    2    5               00 r[5]=mkrec(r[2..3])
REG[5] =  s5[0301011305.....](8)
   7 Insert           0    5    1 a             1B intkey=r[1] data=r[5]
REG[5] =  s5[0301011305.....](8)
REG[1] =  i:3
   8 AddImm           4    1    0               00 r[4]=r[4]+1
REG[4] =  i:0
   9 Close            0    0    0               00 
  10 ResultRow        4    1    0               00 output=r[4]
REG[4] =  i:1
  11 Halt             0    0    0               00 
SQL: [INSERT INTO a VALUES(21,5)
;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    1    6 1             01 usesStmtJournal=0
  13 TableLock        0    6    1 a             00 iDb=0 root=6 write=1
  14 Goto             0    1    0               00 
   1 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
   2 OpenWrite        0    6    0 2             00 root=6 iDb=0; a
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   4 Integer         21    2    0               00 r[2]=21
REG[2] =  i:21
   5 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
   6 MakeRecord       2    2    5               00 r[5]=mkrec(r[2..3])
REG[5] =  s5[0301011505.....](8)
   7 Insert           0    5    1 a             1B intkey=r[1] data=r[5]
REG[5] =  s5[0301011505.....](8)
REG[1] =  i:4
   8 AddImm           4    1    0               00 r[4]=r[4]+1
REG[4] =  i:0
   9 Close            0    0    0               00 
  10 ResultRow        4    1    0               00 output=r[4]
REG[4] =  i:1
  11 Halt             0    0    0               00 
SQL: [INSERT INTO v0 VALUES(22,5)
;]
VDBE Trace:
   0 Init             0   48    0               00 Start at 48
  48 Transaction      0    1    6 1             01 usesStmtJournal=0
  49 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
  50 TableLock        0    3    1 sqlite_sequence 00 iDb=0 root=3 write=1
  51 OpenRead         0    3    0 2             00 root=3 iDb=0; sqlite_sequence
  52 String8          0    1    0 v0            00 r[1]='v0'
REG[1] =   t2[v0](8)
  53 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  54 Rewind           0   62    0               00 
  62 Close            0    0    0               00 
  63 Goto             0    1    0               00 
   1 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
   2 OpenWrite        0    2    0 2             00 root=2 iDb=0; v0
   3 OpenWrite        1    7    0 k(2,,)        00 root=7 iDb=0; abc
   4 OpenWrite        2    5    0 k(9,,,,,,,,,) 00 root=5 iDb=0; t1
   5 Integer         22    4    0               00 r[4]=22
REG[4] =  i:22
   6 NotNull          4    8    0               00 if r[4]!=NULL goto 8
REG[4] =  i:22
   8 MustBeInt        4    0    0               00 
REG[4] =  i:22
   9 MemMax           2    4    0               00 r[2]=max(r[2],r[4])
REG[4] =  i:22
  10 SoftNull         5    0    0               00 r[5]=NULL
  11 Integer          5    6    0               00 r[6]=5
REG[6] =  i:5
  12 NotExists        0   14    4               00 intkey=r[4]
REG[4] =  i:22
  14 Affinity         5    2    0 DB            00 affinity(r[5..6])
  15 Add              4    4   12               00 r[12]=r[4]+r[4]
REG[4] =  i:22
REG[4] =  i:22
REG[12] =  i:44
  16 Add              4   12   10               00 r[10]=r[4]+r[12]; abc column 0
REG[4] =  i:22
REG[12] =  i:44
REG[10] =  i:66
  17 IntCopy          4   11    0               00 r[11]=r[4]; rowid
REG[11] =  i:22
  18 MakeRecord      10    2    8               00 r[8]=mkrec(r[10..11]); for abc
REG[8] =  s5[0301014216...B.](8)
  19 SCopy            4   14    0               00 r[14]=r[4]; v1
REG[14] =  i:22
  20 SCopy            4   15    0               00 r[15]=r[4]; v1
REG[15] =  i:22
  21 SCopy            4   16    0               00 r[16]=r[4]; v1
REG[16] =  i:22
  22 SCopy            4   17    0               00 r[17]=r[4]; v1
REG[17] =  i:22
  23 SCopy            4   18    0               00 r[18]=r[4]; v1
REG[18] =  i:22
  24 SCopy            4   19    0               00 r[19]=r[4]; v1
REG[19] =  i:22
  25 SCopy            4   20    0               00 r[20]=r[4]; v1
REG[20] =  i:22
  26 SCopy            4   21    0               00 r[21]=r[4]; v1
REG[21] =  i:22
  27 SCopy            4   22    0               00 r[22]=r[4]; v1
REG[22] =  i:22
  28 IntCopy          4   23    0               00 r[23]=r[4]; rowid
REG[23] =  i:22
  29 MakeRecord      14   10    9               00 r[9]=mkrec(r[14..23]); for t1
REG[9] =  s21[0B010101010101010101011616161616................](8)
  30 NoConflict       2   32   14 9             00 key=r[14..22]
REG[14] =  i:22
REG[15] =  i:22
REG[16] =  i:22
REG[17] =  i:22
REG[18] =  i:22
REG[19] =  i:22
REG[20] =  i:22
REG[21] =  i:22
REG[22] =  i:22
  32 IdxInsert        1    8    0               10 key=r[8]
REG[8] =  s5[0301014216...B.](8)
  33 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s21[0B010101010101010101011616161616................](8)
  34 MakeRecord       5    2   12               00 r[12]=mkrec(r[5..6])
REG[12] =  s4[03000F35...5](8)
  35 Insert           0   12    4 v0            13 intkey=r[4] data=r[12]
REG[12] =  s4[03000F35...5](8)
REG[4] =  i:22
  36 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  37 Close            0    0    0               00 
  38 Close            1    0    0               00 
  39 Close            2    0    0               00 
  40 OpenWrite        0    3    0 2             00 root=3 iDb=0; sqlite_sequence
  41 NotNull          3   43    0               00 if r[3]!=NULL goto 43
REG[3] =  NULL
  42 NewRowid         0    3    0               00 r[3]=rowid
REG[3] =  i:1
  43 MakeRecord       1    2   13               00 r[13]=mkrec(r[1..2])
REG[13] =  s6[031101763016...v0.](8)
  44 Insert           0   13    3               08 intkey=r[3] data=r[13]
REG[13] =  s6[031101763016...v0.](8)
REG[3] =  i:1
  45 Close            0    0    0               00 
  46 ResultRow        7    1    0               00 output=r[7]
REG[7] =  i:1
  47 Halt             0    0    0               00 
SQL: [;
;CREATE INDEX c ON v3( abs(x) );]
VDBE Trace:
   0 Init             0   37    0               00 Start at 37
  37 Transaction      0    1    6 1             01 usesStmtJournal=0
  38 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  39 TableLock        0    4    1 v3            00 iDb=0 root=4 write=1
  40 Goto             0    1    0               00 
   1 Noop             0   36    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:8
   3 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
   4 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   5 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:7
   6 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   7 String8          0    4    0 c             00 r[4]='c'
REG[4] =   t1[c](8)
   8 String8          0    5    0 v3            00 r[5]='v3'
REG[5] =   t2[v3](8)
   9 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:8
  10 String8          0    7    0 CREATE INDEX c ON v3( abs(x) ) 00 r[7]='CREATE INDEX c ON v3( abs(x) )'
REG[7] =   t30[CREATE INDEX c ](8)
  11 MakeRecord       3    5    9 BBBDB         00 r[9]=mkrec(r[3..7])
REG[9] =  s45[06170F110149696E6465786376330843.....Iindexcv3.C](8)
  12 Insert           0    9    2               18 intkey=r[2] data=r[9]
REG[9] =  s45[06170F110149696E6465786376330843.....Iindexcv3.C](8)
REG[2] =  i:7
  13 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  14 Close            0    0    0               00 
  15 SorterOpen       3    0    1 k(2,,)        00 
  16 OpenRead         1    4    0 2             00 root=4 iDb=0; v3
  17 Rewind           1   24    0               00 
  18 Column           1    0   13               00 r[13]=v3.x
REG[13] =  i:9
  19 Function0        0   13   11 abs(1)        01 r[11]=func(r[13])
REG[13] =  i:9
REG[11] =  i:9
  20 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:1
  21 MakeRecord      11    2   10               00 r[10]=mkrec(r[11..12])
REG[10] =  s4[03010909....](8)
  22 SorterInsert     3   10    0               00 
REG[10] =  s4[03010909....](8)
  23 Next             1   18    0               00 
  18 Column           1    0   13               00 r[13]=v3.x
REG[13] =  NULL
  19 Function         0   13   11 abs(1)        01 r[11]=func(r[13])
REG[13] =  NULL
REG[11] =  NULL
  20 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:2
  21 MakeRecord      11    2   10               00 r[10]=mkrec(r[11..12])
REG[10] =  s4[03000102....](8)
  22 SorterInsert     3   10    0               00 
REG[10] =  s4[03000102....](8)
  23 Next             1   18    0               00 
  18 Column           1    0   13               00 r[13]=v3.x
REG[13] =  i:14
  19 Function         0   13   11 abs(1)        01 r[11]=func(r[13])
REG[13] =  i:14
REG[11] =  i:14
  20 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:3
  21 MakeRecord      11    2   10               00 r[10]=mkrec(r[11..12])
REG[10] =  s5[0301010E03.....](8)
  22 SorterInsert     3   10    0               00 
REG[10] =  s5[0301010E03.....](8)
  23 Next             1   18    0               00 
  24 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  25 SorterSort       3   30    0               00 
  26 SorterData       3   10    2               00 r[10]=data
  27 Last             2    0   -1               00 
  28 IdxInsert        2   10    0               10 key=r[10]
REG[10] =  s4[03000102....](8)
  29 SorterNext       3   26    0               00 
  26 SorterData       3   10    2               00 r[10]=data
  27 Last             2    0   -1               00 
  28 IdxInsert        2   10    0               10 key=r[10]
REG[10] =  s4[03010909....](8)
  29 SorterNext       3   26    0               00 
  26 SorterData       3   10    2               00 r[10]=data
  27 Last             2    0   -1               00 
  28 IdxInsert        2   10    0               10 key=r[10]
REG[10] =  s5[0301010E03.....](8)
  29 SorterNext       3   26    0               00 
  30 Close            1    0    0               00 
  31 Close            2    0    0               00 
  32 Close            3    0    0               00 
  33 SetCookie        0    1    7               00 
  34 ParseSchema      0    0    0 name='c' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    7 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 c             00 r[2]='c'
REG[2] =   t1[c](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[c](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[c](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[c](8)
REG[1] =   s2[v3](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[c](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[c](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[abc](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[c](8)
REG[1] =   s3[abc](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[c](8)
REG[1] =   s1[c](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s1[c](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:8
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s30[CREATE INDEX c ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[c](8)
REG[6] =  i:8
REG[7] =   s30[CREATE INDEX c ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  35 Expire           0    0    0               00 
  36 Halt             0    0    0               00 
SQL: [;
;
;CREATE TABLE def(d INTEGER PRIMARY KEY, e);]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      0    1    7 1             01 usesStmtJournal=0
  33 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  34 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:9
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:8
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:8
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:8
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:8
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:8
  18 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  19 IsNull           5   28    0               00 if r[5]==NULL goto 28
REG[5] =  i:8
  20 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  21 String8          0    7    0 def           00 r[7]='def'
REG[7] =   t3[def](8)
  22 String8          0    8    0 def           00 r[8]='def'
REG[8] =   t3[def](8)
  23 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:9
  24 String8          0   10    0 CREATE TABLE def(d INTEGER PRIMARY KEY, e) 00 r[10]='CREATE TABLE def(d INTEGER PRIMARY KEY, e)'
REG[10] =   t42[CREATE TABLE de](8)
  25 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s60[0617131301617461626C656465666465.....atabledefde](8)
  26 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s60[0617131301617461626C656465666465.....atabledefde](8)
REG[5] =  i:8
  27 AddImm          12    1    0               00 r[12]=r[12]+1
REG[12] =  i:0
  28 Close            1    0    0               00 
  29 SetCookie        0    1    8               00 
  30 ParseSchema      0    0    0 tbl_name='def' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    8 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 def           00 r[2]='def'
REG[2] =   t3[def](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[def](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[def](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[def](8)
REG[1] =   s2[v3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[def](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[def](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[def](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[def](8)
REG[1] =   s2[v3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[def](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[def](8)
REG[1] =   s3[def](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s3[def](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:9
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s42[CREATE TABLE de](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s3[def](8)
REG[6] =  i:9
REG[7] =   s42[CREATE TABLE de](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  31 Halt             0    0    0               00 
SQL: [INSERT INTO a VALUES(25,5)
;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    1    8 1             01 usesStmtJournal=0
  13 TableLock        0    6    1 a             00 iDb=0 root=6 write=1
  14 Goto             0    1    0               00 
   1 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
   2 OpenWrite        0    6    0 2             00 root=6 iDb=0; a
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   4 Integer         25    2    0               00 r[2]=25
REG[2] =  i:25
   5 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
   6 MakeRecord       2    2    5               00 r[5]=mkrec(r[2..3])
REG[5] =  s5[0301011905.....](8)
   7 Insert           0    5    1 a             1B intkey=r[1] data=r[5]
REG[5] =  s5[0301011905.....](8)
REG[1] =  i:5
   8 AddImm           4    1    0               00 r[4]=r[4]+1
REG[4] =  i:0
   9 Close            0    0    0               00 
  10 ResultRow        4    1    0               00 output=r[4]
REG[4] =  i:1
  11 Halt             0    0    0               00 
SQL: [;
;CREATE INDEX f ON a( CAST(t1b AS INTEGER) );]
VDBE Trace:
   0 Init             0   37    0               00 Start at 37
  37 Transaction      0    1    8 1             01 usesStmtJournal=0
  38 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  39 TableLock        0    6    1 a             00 iDb=0 root=6 write=1
  40 Goto             0    1    0               00 
   1 Noop             0   36    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:10
   3 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
   4 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   5 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:9
   6 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   7 String8          0    4    0 f             00 r[4]='f'
REG[4] =   t1[f](8)
   8 String8          0    5    0 a             00 r[5]='a'
REG[5] =   t1[a](8)
   9 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:10
  10 String8          0    7    0 CREATE INDEX f ON a( CAST(t1b AS INTEGER) ) 00 r[7]='CREATE INDEX f ON a( CAST(t1b AS INTEGER) )'
REG[7] =   t43[CREATE INDEX f ](8)
  11 MakeRecord       3    5    9 BBBDB         00 r[9]=mkrec(r[3..7])
REG[9] =  s57[06170F0F0163696E64657866610A4352.....cindexfa.CR](8)
  12 Insert           0    9    2               18 intkey=r[2] data=r[9]
REG[9] =  s57[06170F0F0163696E64657866610A4352.....cindexfa.CR](8)
REG[2] =  i:9
  13 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  14 Close            0    0    0               00 
  15 SorterOpen       3    0    1 k(2,,)        00 
  16 OpenRead         1    6    0 2             00 root=6 iDb=0; a
  17 Rewind           1   24    0               00 
  18 Column           1    1   11               00 r[11]=a.t1b
REG[11] =  i:4
  19 Cast            11   68    0               00 affinity(r[11])
REG[11] =  i:4
  20 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:1
  21 MakeRecord      11    2   10               00 r[10]=mkrec(r[11..12])
REG[10] =  s4[03010904....](8)
  22 SorterInsert     3   10    0               00 
REG[10] =  s4[03010904....](8)
  23 Next             1   18    0               00 
  18 Column           1    1   11               00 r[11]=a.t1b
REG[11] =  i:4
  19 Cast            11   68    0               00 affinity(r[11])
REG[11] =  i:4
  20 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:2
  21 MakeRecord      11    2   10               00 r[10]=mkrec(r[11..12])
REG[10] =  s5[0301010402.....](8)
  22 SorterInsert     3   10    0               00 
REG[10] =  s5[0301010402.....](8)
  23 Next             1   18    0               00 
  18 Column           1    1   11               00 r[11]=a.t1b
REG[11] =  i:5
  19 Cast            11   68    0               00 affinity(r[11])
REG[11] =  i:5
  20 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:3
  21 MakeRecord      11    2   10               00 r[10]=mkrec(r[11..12])
REG[10] =  s5[0301010503.....](8)
  22 SorterInsert     3   10    0               00 
REG[10] =  s5[0301010503.....](8)
  23 Next             1   18    0               00 
  18 Column           1    1   11               00 r[11]=a.t1b
REG[11] =  i:5
  19 Cast            11   68    0               00 affinity(r[11])
REG[11] =  i:5
  20 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:4
  21 MakeRecord      11    2   10               00 r[10]=mkrec(r[11..12])
REG[10] =  s5[0301010504.....](8)
  22 SorterInsert     3   10    0               00 
REG[10] =  s5[0301010504.....](8)
  23 Next             1   18    0               00 
  18 Column           1    1   11               00 r[11]=a.t1b
REG[11] =  i:5
  19 Cast            11   68    0               00 affinity(r[11])
REG[11] =  i:5
  20 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:5
  21 MakeRecord      11    2   10               00 r[10]=mkrec(r[11..12])
REG[10] =  s5[0301010505.....](8)
  22 SorterInsert     3   10    0               00 
REG[10] =  s5[0301010505.....](8)
  23 Next             1   18    0               00 
  24 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  25 SorterSort       3   30    0               00 
  26 SorterData       3   10    2               00 r[10]=data
  27 Last             2    0   -1               00 
  28 IdxInsert        2   10    0               10 key=r[10]
REG[10] =  s4[03010904....](8)
  29 SorterNext       3   26    0               00 
  26 SorterData       3   10    2               00 r[10]=data
  27 Last             2    0   -1               00 
  28 IdxInsert        2   10    0               10 key=r[10]
REG[10] =  s5[0301010402.....](8)
  29 SorterNext       3   26    0               00 
  26 SorterData       3   10    2               00 r[10]=data
  27 Last             2    0   -1               00 
  28 IdxInsert        2   10    0               10 key=r[10]
REG[10] =  s5[0301010503.....](8)
  29 SorterNext       3   26    0               00 
  26 SorterData       3   10    2               00 r[10]=data
  27 Last             2    0   -1               00 
  28 IdxInsert        2   10    0               10 key=r[10]
REG[10] =  s5[0301010504.....](8)
  29 SorterNext       3   26    0               00 
  26 SorterData       3   10    2               00 r[10]=data
  27 Last             2    0   -1               00 
  28 IdxInsert        2   10    0               10 key=r[10]
REG[10] =  s5[0301010505.....](8)
  29 SorterNext       3   26    0               00 
  30 Close            1    0    0               00 
  31 Close            2    0    0               00 
  32 Close            3    0    0               00 
  33 SetCookie        0    1    9               00 
  34 ParseSchema      0    0    0 name='f' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    9 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 f             00 r[2]='f'
REG[2] =   t1[f](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[f](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[f](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[f](8)
REG[1] =   s2[v3](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[f](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[f](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[abc](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[f](8)
REG[1] =   s3[abc](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[f](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[def](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[f](8)
REG[1] =   s3[def](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[f](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[f](8)
REG[1] =   s1[f](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s1[f](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:10
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s43[CREATE INDEX f ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[f](8)
REG[6] =  i:10
REG[7] =   s43[CREATE INDEX f ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  35 Expire           0    0    0               00 
  36 Halt             0    0    0               00 
SQL: [;BEGIN;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [SELECT count(*) FROM a
;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    0    9 1             01 usesStmtJournal=0
   8 TableLock        0    6    0 a             00 iDb=0 root=6 write=0
   9 Goto             0    1    0               00 
   1 OpenRead         1   10    0 k(2,,)        00 root=10 iDb=0
   2 Count            1    1    0               00 r[1]=count()
REG[1] =  i:5
   3 Close            1    0    0               00 
   4 Copy             1    2    0               00 r[2]=r[1]
REG[2] =  i:5
   5 ResultRow        2    1    0               00 output=r[2]
REG[2] =  i:5
   6 Halt             0    0    0               00 
SQL: [SELECT min(x),min(xyz),max(x),max(xyz),sum(x),sum(xyz),avg(x),avg(xyz)
    FROM v3
  
;]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      0    0    9 1             01 usesStmtJournal=0
  39 TableLock        0    4    0 v3            00 iDb=0 root=4 write=0
  40 Goto             0    1    0               00 
   1 Null             0    1   10               00 r[1..10]=NULL
REG[1] =  NULL
   2 OpenRead         0    4    0 2             00 root=4 iDb=0; v3
   3 Explain          0    0    0 SCAN TABLE v3 00 
   4 Rewind           0   26    0               00 
   5 Column           0    0   11               00 r[11]=v3.x
REG[11] =  i:9
   6 CollSeq          0    0    0 (BINARY)      00 
   7 AggStep0         0   11    1 min(1)        01 accum=r[1] step(r[11])
REG[11] =  i:9
   8 Column           0    1   11               00 r[11]=v3.xyz
REG[11] =  i:4
   9 CollSeq          0    0    0 (BINARY)      00 
  10 AggStep0         0   11    2 min(1)        01 accum=r[2] step(r[11])
REG[11] =  i:4
  11 Column           0    0   11               00 r[11]=v3.x
REG[11] =  i:9
  12 CollSeq          0    0    0 (BINARY)      00 
  13 AggStep0         0   11    3 max(1)        01 accum=r[3] step(r[11])
REG[11] =  i:9
  14 Column           0    1   11               00 r[11]=v3.xyz
REG[11] =  i:4
  15 CollSeq          0    0    0 (BINARY)      00 
  16 AggStep0         0   11    4 max(1)        01 accum=r[4] step(r[11])
REG[11] =  i:4
  17 Column           0    0   11               00 r[11]=v3.x
REG[11] =  i:9
  18 AggStep0         0   11    5 sum(1)        01 accum=r[5] step(r[11])
REG[11] =  i:9
  19 Column           0    1   11               00 r[11]=v3.xyz
REG[11] =  i:4
  20 AggStep0         0   11    6 sum(1)        01 accum=r[6] step(r[11])
REG[11] =  i:4
  21 Column           0    0   11               00 r[11]=v3.x
REG[11] =  i:9
  22 AggStep0         0   11    7 avg(1)        01 accum=r[7] step(r[11])
REG[11] =  i:9
  23 Column           0    1   11               00 r[11]=v3.xyz
REG[11] =  i:4
  24 AggStep0         0   11    8 avg(1)        01 accum=r[8] step(r[11])
REG[11] =  i:4
  25 Next             0    5    0               01 
   5 Column           0    0   11               00 r[11]=v3.x
REG[11] =  NULL
   6 CollSeq          0    0    0 (BINARY)      00 
   7 AggStep          0   11    1 min(1)        01 accum=r[1] step(r[11])
REG[11] =  NULL
   8 Column           0    1   11               00 r[11]=v3.xyz
REG[11] =  i:123
   9 CollSeq          0    0    0 (BINARY)      00 
  10 AggStep          0   11    2 min(1)        01 accum=r[2] step(r[11])
REG[11] =  i:123
  11 Column           0    0   11               00 r[11]=v3.x
REG[11] =  NULL
  12 CollSeq          0    0    0 (BINARY)      00 
  13 AggStep          0   11    3 max(1)        01 accum=r[3] step(r[11])
REG[11] =  NULL
  14 Column           0    1   11               00 r[11]=v3.xyz
REG[11] =  i:123
  15 CollSeq          0    0    0 (BINARY)      00 
  16 AggStep          0   11    4 max(1)        01 accum=r[4] step(r[11])
REG[11] =  i:123
  17 Column           0    0   11               00 r[11]=v3.x
REG[11] =  NULL
  18 AggStep          0   11    5 sum(1)        01 accum=r[5] step(r[11])
REG[11] =  NULL
  19 Column           0    1   11               00 r[11]=v3.xyz
REG[11] =  i:123
  20 AggStep          0   11    6 sum(1)        01 accum=r[6] step(r[11])
REG[11] =  i:123
  21 Column           0    0   11               00 r[11]=v3.x
REG[11] =  NULL
  22 AggStep          0   11    7 avg(1)        01 accum=r[7] step(r[11])
REG[11] =  NULL
  23 Column           0    1   11               00 r[11]=v3.xyz
REG[11] =  i:123
  24 AggStep          0   11    8 avg(1)        01 accum=r[8] step(r[11])
REG[11] =  i:123
  25 Next             0    5    0               01 
   5 Column           0    0   11               00 r[11]=v3.x
REG[11] =  i:14
   6 CollSeq          0    0    0 (BINARY)      00 
   7 AggStep          0   11    1 min(1)        01 accum=r[1] step(r[11])
REG[11] =  i:14
   8 Column           0    1   11               00 r[11]=v3.xyz
REG[11] =  i:4
   9 CollSeq          0    0    0 (BINARY)      00 
  10 AggStep          0   11    2 min(1)        01 accum=r[2] step(r[11])
REG[11] =  i:4
  11 Column           0    0   11               00 r[11]=v3.x
REG[11] =  i:14
  12 CollSeq          0    0    0 (BINARY)      00 
  13 AggStep          0   11    3 max(1)        01 accum=r[3] step(r[11])
REG[11] =  i:14
  14 Column           0    1   11               00 r[11]=v3.xyz
REG[11] =  i:4
  15 CollSeq          0    0    0 (BINARY)      00 
  16 AggStep          0   11    4 max(1)        01 accum=r[4] step(r[11])
REG[11] =  i:4
  17 Column           0    0   11               00 r[11]=v3.x
REG[11] =  i:14
  18 AggStep          0   11    5 sum(1)        01 accum=r[5] step(r[11])
REG[11] =  i:14
  19 Column           0    1   11               00 r[11]=v3.xyz
REG[11] =  i:4
  20 AggStep          0   11    6 sum(1)        01 accum=r[6] step(r[11])
REG[11] =  i:4
  21 Column           0    0   11               00 r[11]=v3.x
REG[11] =  i:14
  22 AggStep          0   11    7 avg(1)        01 accum=r[7] step(r[11])
REG[11] =  i:14
  23 Column           0    1   11               00 r[11]=v3.xyz
REG[11] =  i:4
  24 AggStep          0   11    8 avg(1)        01 accum=r[8] step(r[11])
REG[11] =  i:4
  25 Next             0    5    0               01 
  26 Close            0    0    0               00 
  27 AggFinal         1    1    0 min(1)        00 accum=r[1] N=1
  28 AggFinal         2    1    0 min(1)        00 accum=r[2] N=1
  29 AggFinal         3    1    0 max(1)        00 accum=r[3] N=1
  30 AggFinal         4    1    0 max(1)        00 accum=r[4] N=1
  31 AggFinal         5    1    0 sum(1)        00 accum=r[5] N=1
  32 AggFinal         6    1    0 sum(1)        00 accum=r[6] N=1
  33 AggFinal         7    1    0 avg(1)        00 accum=r[7] N=1
  34 AggFinal         8    1    0 avg(1)        00 accum=r[8] N=1
  35 Copy             1   12    7               00 r[12..19]=r[1..8]
REG[12] =  i:9
REG[13] =  i:4
REG[14] =  i:14
REG[15] =  i:123
REG[16] =  i:23
REG[17] =  i:131
REG[18] =  r:11.5
REG[19] =  r:43.6667
  36 ResultRow       12    8    0               00 output=r[12..19]
REG[12] =  i:9
REG[13] =  i:4
REG[14] =  i:14
REG[15] =  i:123
REG[16] =  i:23
REG[17] =  i:131
REG[18] =  r:11.5
REG[19] =  r:43.6667
  37 Halt             0    0    0               00 
SQL: [SELECT v1, count(*) FROM v0 GROUP BY v1 ORDER BY v1
;]
VDBE Trace:
   0 Init             0   35    0               00 Start at 35
  35 Transaction      0    0    9 1             01 usesStmtJournal=0
  36 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
  37 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 Noop             2    1    0               00 
   3 Integer          0    4    0               00 r[4]=0; clear abort flag
REG[4] =  i:0
   4 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
REG[3] =  i:0
   5 Null             0    7    7               00 r[7..7]=NULL
REG[7] =  NULL
   6 Gosub            6   32    0               00 
REG[6] =  i:6
  32 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  33 Return           6    0    0               00 
REG[6] =  i:6
   7 OpenRead         0    2    0 0             00 root=2 iDb=0; v0
   8 Explain          0    0    0 SCAN TABLE v0 00 
   9 Rewind           0   21    0               00 
  10 Rowid            0    8    0               00 r[8]=rowid
REG[8] =  i:22
  11 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  NULL
REG[8] =  i:22
  12 Jump            13   17   13               00 
  13 Move             8    7    1               00 r[7]=r[8]
REG[7] =  i:22
  14 Gosub            5   26    0               00 output one row
REG[5] =  i:14
  26 IfPos            3   28    0               00 if r[3]>0 then r[3]-=0, goto 28; Groupby result generator entry point
REG[3] =  i:0
  27 Return           5    0    0               00 
REG[5] =  i:14
  15 IfPos            4   34    0               00 if r[4]>0 then r[4]-=0, goto 34; check abort flag
REG[4] =  i:0
  16 Gosub            6   32    0               00 reset accumulator
REG[6] =  i:16
  32 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  33 Return           6    0    0               00 
REG[6] =  i:16
  17 AggStep0         0    0    2 count(0)      00 accum=r[2] step(r[0])
  18 Rowid            0    1    0               00 r[1]=rowid
REG[1] =  i:22
  19 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  20 Next             0   10    0               01 
  21 Close            0    0    0               00 
  22 Gosub            5   26    0               00 output final row
REG[5] =  i:22
  26 IfPos            3   28    0               00 if r[3]>0 then r[3]-=0, goto 28; Groupby result generator entry point
REG[3] =  i:1
  28 AggFinal         2    0    0 count(0)      00 accum=r[2] N=0
  29 Copy             1    9    1               00 r[9..10]=r[1..2]
REG[9] =  i:22
REG[10] =  i:1
  30 ResultRow        9    2    0               00 output=r[9..10]
REG[9] =  i:22
REG[10] =  i:1
  31 Return           5    0    0               00 end groupby result generator
REG[5] =  i:22
  23 Goto             0   34    0               00 
  34 Halt             0    0    0               00 
SQL: [SELECT v1, count(*) FROM v0 GROUP BY v1 HAVING v1>=4 ORDER BY v1
;]
VDBE Trace:
   0 Init             0   36    0               00 Start at 36
  36 Transaction      0    0    9 1             01 usesStmtJournal=0
  37 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
  38 Integer          4   10    0               00 r[10]=4
REG[10] =  i:4
  39 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 Noop             2    1    0               00 
   3 Integer          0    4    0               00 r[4]=0; clear abort flag
REG[4] =  i:0
   4 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
REG[3] =  i:0
   5 Null             0    7    7               00 r[7..7]=NULL
REG[7] =  NULL
   6 Gosub            6   33    0               00 
REG[6] =  i:6
  33 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  34 Return           6    0    0               00 
REG[6] =  i:6
   7 OpenRead         0    2    0 0             00 root=2 iDb=0; v0
   8 Explain          0    0    0 SCAN TABLE v0 00 
   9 Rewind           0   21    0               00 
  10 Rowid            0    8    0               00 r[8]=rowid
REG[8] =  i:22
  11 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  NULL
REG[8] =  i:22
  12 Jump            13   17   13               00 
  13 Move             8    7    1               00 r[7]=r[8]
REG[7] =  i:22
  14 Gosub            5   26    0               00 output one row
REG[5] =  i:14
  26 IfPos            3   28    0               00 if r[3]>0 then r[3]-=0, goto 28; Groupby result generator entry point
REG[3] =  i:0
  27 Return           5    0    0               00 
REG[5] =  i:14
  15 IfPos            4   35    0               00 if r[4]>0 then r[4]-=0, goto 35; check abort flag
REG[4] =  i:0
  16 Gosub            6   33    0               00 reset accumulator
REG[6] =  i:16
  33 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  34 Return           6    0    0               00 
REG[6] =  i:16
  17 AggStep0         0    0    2 count(0)      00 accum=r[2] step(r[0])
  18 Rowid            0    1    0               00 r[1]=rowid
REG[1] =  i:22
  19 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  20 Next             0   10    0               01 
  21 Close            0    0    0               00 
  22 Gosub            5   26    0               00 output final row
REG[5] =  i:22
  26 IfPos            3   28    0               00 if r[3]>0 then r[3]-=0, goto 28; Groupby result generator entry point
REG[3] =  i:1
  28 AggFinal         2    0    0 count(0)      00 accum=r[2] N=0
  29 Lt              10   27    1               54 if r[10]<r[1] goto 27
REG[10] =  i:4
REG[1] =  i:22
  30 Copy             1   11    1               00 r[11..12]=r[1..2]
REG[11] =  i:22
REG[12] =  i:1
  31 ResultRow       11    2    0               00 output=r[11..12]
REG[11] =  i:22
REG[12] =  i:1
  32 Return           5    0    0               00 end groupby result generator
REG[5] =  i:22
  23 Goto             0   35    0               00 
  35 Halt             0    0    0               00 
SQL: [SELECT v2 AS x, count(*) AS y FROM v0 
    GROUP BY x
    HAVING y>=4 
    ORDER BY max(v2)+0
  
;]
VDBE Trace:
   0 Init             0   57    0               00 Start at 57
  57 Transaction      0    0    9 1             01 usesStmtJournal=0
  58 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
  59 Integer          4   14    0               00 r[14]=4
REG[14] =  i:4
  60 Integer          0   19    0               00 r[19]=0
REG[19] =  i:0
  61 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 SorterOpen       2    1    0 k(1,B)        00 
   3 Integer          0    5    0               00 r[5]=0; clear abort flag
REG[5] =  i:0
   4 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
   5 Null             0    8    8               00 r[8..8]=NULL
REG[8] =  NULL
   6 Gosub            7   47    0               00 
REG[7] =  i:6
  47 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  48 Return           7    0    0               00 
REG[7] =  i:6
   7 OpenRead         0    2    0 2             00 root=2 iDb=0; v0
   8 Explain          0    0    0 SCAN TABLE v0 00 
   9 Rewind           0   14    0               00 
  10 Column           0    1   10               00 r[10]=v0.v2
REG[10] =   s1[5](8)
  11 MakeRecord      10    1   11               00 r[11]=mkrec(r[10])
REG[11] =  s3[020F35..5](8)
  12 SorterInsert     2   11    0               00 
REG[11] =  s3[020F35..5](8)
  13 Next             0   10    0               01 
  14 Close            0    0    0               00 
  15 OpenPseudo       3   11    1               00 1 columns in r[11]
  16 SorterSort       2   49    0               00 GROUP BY sort
  17 SorterData       2   11    3               00 r[11]=data
  18 Column           3    0    9               00 r[9]=
REG[9] =   s1[5](8)
  19 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  NULL
REG[9] =   s1[5](8)
  20 Jump            21   25   21               00 
  21 Move             9    8    1               00 r[8]=r[9]
REG[8] =   s1[5](8)
  22 Gosub            6   37    0               00 output one row
REG[6] =  i:22
  37 IfPos            4   39    0               00 if r[4]>0 then r[4]-=0, goto 39; Groupby result generator entry point
REG[4] =  i:0
  38 Return           6    0    0               00 
REG[6] =  i:22
  23 IfPos            5   49    0               00 if r[5]>0 then r[5]-=0, goto 49; check abort flag
REG[5] =  i:0
  24 Gosub            7   47    0               00 reset accumulator
REG[7] =  i:24
  47 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  48 Return           7    0    0               00 
REG[7] =  i:24
  25 AggStep0         0    0    2 count(0)      00 accum=r[2] step(r[0])
  26 Column           3    0   10               00 r[10]=
REG[10] =   s1[5](8)
  27 CollSeq         12    0    0 (BINARY)      00 
  28 AggStep0         0   10    3 max(1)        01 accum=r[3] step(r[10])
REG[10] =   s1[5](8)
  29 If              12   31    0               00 
REG[12] =  i:0
  30 Column           3    0    1               00 r[1]=
REG[1] =   s1[5](8)
  31 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  32 SorterNext       2   17    0               00 
  33 Gosub            6   37    0               00 output final row
REG[6] =  i:33
  37 IfPos            4   39    0               00 if r[4]>0 then r[4]-=0, goto 39; Groupby result generator entry point
REG[4] =  i:1
  39 AggFinal         2    0    0 count(0)      00 accum=r[2] N=0
  40 AggFinal         3    1    0 max(1)        00 accum=r[3] N=1
  41 Lt              14   38    2               51 if r[14]<r[2] goto 38
REG[14] =  i:4
REG[2] =  i:1
  38 Return           6    0    0               00 
REG[6] =  i:33
  34 Goto             0   49    0               00 
  49 OpenPseudo       4   20    4               00 4 columns in r[20]
  50 SorterSort       1   56    0               00 
  56 Halt             0    0    0               00 
SQL: [SELECT v1 AS x FROM v0 
    GROUP BY x
    HAVING count(*)>=4 
    ORDER BY max(v1)+0
  
;]
VDBE Trace:
   0 Init             0   49    0               00 Start at 49
  49 Transaction      0    0    9 1             01 usesStmtJournal=0
  50 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
  51 Integer          4   13    0               00 r[13]=4
REG[13] =  i:4
  52 Integer          0   17    0               00 r[17]=0
REG[17] =  i:0
  53 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 Noop             2    1    0               00 
   3 Integer          0    5    0               00 r[5]=0; clear abort flag
REG[5] =  i:0
   4 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
   5 Null             0    8    8               00 r[8..8]=NULL
REG[8] =  NULL
   6 Gosub            7   40    0               00 
REG[7] =  i:6
  40 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  41 Return           7    0    0               00 
REG[7] =  i:6
   7 OpenRead         0    2    0 0             00 root=2 iDb=0; v0
   8 Explain          0    0    0 SCAN TABLE v0 00 
   9 Rewind           0   25    0               00 
  10 Rowid            0    9    0               00 r[9]=rowid
REG[9] =  i:22
  11 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  NULL
REG[9] =  i:22
  12 Jump            13   17   13               00 
  13 Move             9    8    1               00 r[8]=r[9]
REG[8] =  i:22
  14 Gosub            6   30    0               00 output one row
REG[6] =  i:14
  30 IfPos            4   32    0               00 if r[4]>0 then r[4]-=0, goto 32; Groupby result generator entry point
REG[4] =  i:0
  31 Return           6    0    0               00 
REG[6] =  i:14
  15 IfPos            5   42    0               00 if r[5]>0 then r[5]-=0, goto 42; check abort flag
REG[5] =  i:0
  16 Gosub            7   40    0               00 reset accumulator
REG[7] =  i:16
  40 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  41 Return           7    0    0               00 
REG[7] =  i:16
  17 Rowid            0   10    0               00 r[10]=rowid
REG[10] =  i:22
  18 CollSeq         11    0    0 (BINARY)      00 
  19 AggStep0         0   10    2 max(1)        01 accum=r[2] step(r[10])
REG[10] =  i:22
  20 AggStep0         0    0    3 count(0)      00 accum=r[3] step(r[0])
  21 If              11   23    0               00 
REG[11] =  i:0
  22 Rowid            0    1    0               00 r[1]=rowid
REG[1] =  i:22
  23 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  24 Next             0   10    0               01 
  25 Close            0    0    0               00 
  26 Gosub            6   30    0               00 output final row
REG[6] =  i:26
  30 IfPos            4   32    0               00 if r[4]>0 then r[4]-=0, goto 32; Groupby result generator entry point
REG[4] =  i:1
  32 AggFinal         2    1    0 max(1)        00 accum=r[2] N=1
  33 AggFinal         3    0    0 count(0)      00 accum=r[3] N=0
  34 Lt              13   31    3               51 if r[13]<r[3] goto 31
REG[13] =  i:4
REG[3] =  i:1
  31 Return           6    0    0               00 
REG[6] =  i:26
  27 Goto             0   42    0               00 
  42 OpenPseudo       3   18    3               00 3 columns in r[18]
  43 SorterSort       1   48    0               00 
  48 Halt             0    0    0               00 
SQL: [;SELECT t1b, sum(b) FROM a WHERE b=5 GROUP BY t1b;]
VDBE Trace:
   0 Init             0   45    0               00 Start at 45
  45 Transaction      0    0    9 1             01 usesStmtJournal=0
  46 TableLock        0    6    0 a             00 iDb=0 root=6 write=0
  47 Integer          5   11    0               00 r[11]=5
REG[11] =  i:5
  48 Goto             0    1    0               00 
   1 SorterOpen       1    2    0 k(1,B)        00 
   2 Integer          0    5    0               00 r[5]=0; clear abort flag
REG[5] =  i:0
   3 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
   4 Null             0    8    8               00 r[8..8]=NULL
REG[8] =  NULL
   5 Gosub            7   42    0               00 
REG[7] =  i:5
  42 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  43 Return           7    0    0               00 
REG[7] =  i:5
   6 OpenRead         0    6    0 2             00 root=6 iDb=0; a
   7 Explain          0    0    0 SCAN TABLE a  00 
   8 Rewind           0   16    0               00 
   9 Column           0    0   10               00 r[10]=a.b
REG[10] =  i:10
  10 Ne              11   15   10 (BINARY)      51 if r[11]!=r[10] goto 15
REG[11] =  i:5
REG[10] =  i:10
  15 Next             0    9    0               01 
   9 Column           0    0   10               00 r[10]=a.b
REG[10] =  i:11
  10 Ne              11   15   10 (BINARY)      51 if r[11]!=r[10] goto 15
REG[11] =  i:5
REG[10] =  i:11
  15 Next             0    9    0               01 
   9 Column           0    0   10               00 r[10]=a.b
REG[10] =  i:19
  10 Ne              11   15   10 (BINARY)      51 if r[11]!=r[10] goto 15
REG[11] =  i:5
REG[10] =  i:19
  15 Next             0    9    0               01 
   9 Column           0    0   10               00 r[10]=a.b
REG[10] =  i:21
  10 Ne              11   15   10 (BINARY)      51 if r[11]!=r[10] goto 15
REG[11] =  i:5
REG[10] =  i:21
  15 Next             0    9    0               01 
   9 Column           0    0   10               00 r[10]=a.b
REG[10] =  i:25
  10 Ne              11   15   10 (BINARY)      51 if r[11]!=r[10] goto 15
REG[11] =  i:5
REG[10] =  i:25
  15 Next             0    9    0               01 
  16 Close            0    0    0               00 
  17 OpenPseudo       2   10    2               00 2 columns in r[10]
  18 SorterSort       1   44    0               00 GROUP BY sort
  44 Halt             0    0    0               00 
SQL: [;UPDATE v0 SET v1 = NULL;]
VDBE Trace:
   0 Init             0   70    0               00 Start at 70
  70 Transaction      0    1    9 1             01 usesStmtJournal=1
  71 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
  72 Goto             0    1    0               00 
   1 Null             0    3    4               00 r[3..4]=NULL
REG[3] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; v0
   3 Explain          0    0    0 SCAN TABLE v0 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:22
   6 RowSetAdd        3    4    0               00 rowset(3)=r[4]
REG[3] =  NULL
REG[4] =  i:22
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  10 OpenWrite        0    2    0 2             00 root=2 iDb=0; v0
  11 OpenWrite        1    7    0 k(2,,)        00 root=7 iDb=0; abc
  12 OpenWrite        2    5    0 k(9,,,,,,,,,) 00 root=5 iDb=0; t1
  13 RowSetRead       3   65    4               00 r[4]=rowset(3)
REG[3] =  (rowset)
REG[4] =  i:22
  14 NotExists        0   13    4               00 intkey=r[4]
REG[4] =  i:22
  15 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  16 MustBeInt        5    0    0               00 
REG[5] =  NULL
SQL: [;CREATE TABLE seq (i, t2 REAL PRIMARY KEY);]
VDBE Trace:
   0 Init             0   46    0               00 Start at 46
  46 Transaction      0    1    9 1             01 usesStmtJournal=0
  47 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  48 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:11
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:10
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:10
  10 Close            0    0    0               00 
  11 Noop             0   25    0               00 
  12 CreateIndex      0    4    0               00 r[4]=root iDb=0
REG[4] =  i:12
  13 Integer          0   11    0               00 r[11]=0
REG[11] =  i:0
  14 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  15 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:11
  16 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  17 String8          0    7    0 sqlite_autoindex_seq_1 00 r[7]='sqlite_autoindex_seq_1'
REG[7] =   t22[sqlite_autoinde](8)
  18 String8          0    8    0 seq           00 r[8]='seq'
REG[8] =   t3[seq](8)
  19 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:12
  20 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  21 MakeRecord       6    5   12 BBBDB         00 r[12]=mkrec(r[6..10])
REG[12] =  s37[061739130100696E64657873716C6974..9...indexsqlit](8)
  22 Insert           1   12    5               18 intkey=r[5] data=r[12]
REG[12] =  s37[061739130100696E64657873716C6974..9...indexsqlit](8)
REG[5] =  i:11
  23 AddImm          11    1    0               00 r[11]=r[11]+1
REG[11] =  i:0
  24 Close            1    0    0               00 
  25 Close            0    0    0               00 
  26 Null             0   13   14               00 r[13..14]=NULL
REG[13] =  NULL
  27 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  28 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  29 MustBeInt        1   32    0               00 
REG[1] =  i:10
  30 NotExists        2   32    1               00 intkey=r[1]; pk
REG[1] =  i:10
  31 Rowid            2   14    0               00 r[14]=rowid
REG[14] =  i:10
  32 Integer          0   21    0               00 r[21]=0
REG[21] =  i:0
  33 IsNull          14   42    0               00 if r[14]==NULL goto 42
REG[14] =  i:10
  34 String8          0   15    0 table         00 r[15]='table'
REG[15] =   t5[table](8)
  35 String8          0   16    0 seq           00 r[16]='seq'
REG[16] =   t3[seq](8)
  36 String8          0   17    0 seq           00 r[17]='seq'
REG[17] =   t3[seq](8)
  37 Copy             2   18    0               00 r[18]=r[2]
REG[18] =  i:11
  38 String8          0   19    0 CREATE TABLE seq (i, t2 REAL PRIMARY KEY) 00 r[19]='CREATE TABLE seq (i, t2 REAL PRIMARY KEY)'
REG[19] =   t41[CREATE TABLE se](8)
  39 MakeRecord      15    5   20 BBBDB         00 r[20]=mkrec(r[15..19])
REG[20] =  s59[06171313015F7461626C657365717365....._tableseqse](8)
  40 Insert           2   20   14               00 intkey=r[14] data=r[20]
REG[20] =  s59[06171313015F7461626C657365717365....._tableseqse](8)
REG[14] =  i:10
  41 AddImm          21    1    0               00 r[21]=r[21]+1
REG[21] =  i:0
  42 Close            2    0    0               00 
  43 SetCookie        0    1   10               00 
  44 ParseSchema      0    0    0 tbl_name='seq' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0   10 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 seq           00 r[2]='seq'
REG[2] =   t3[seq](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[seq](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[seq](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[seq](8)
REG[1] =   s2[v3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[seq](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[seq](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[seq](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[seq](8)
REG[1] =   s2[v3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[def](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[seq](8)
REG[1] =   s3[def](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[seq](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[seq](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[seq](8)
REG[1] =   s3[seq](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s3[seq](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:11
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s41[CREATE TABLE se](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s3[seq](8)
REG[6] =  i:11
REG[7] =   s41[CREATE TABLE se](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[seq](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[seq](8)
REG[1] =   s3[seq](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s22[sqlite_autoinde](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:12
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =  NULL
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s22[sqlite_autoinde](8)
REG[6] =  i:12
REG[7] =  NULL
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  45 Halt             0    0    0               00 
SQL: [;PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0  210    0               00 Start at 210
 210 Transaction      0    0   10 1             01 usesStmtJournal=0
 211 Transaction      1    0    0 1             01 usesStmtJournal=0
 212 TableLock        0   11    0 seq           00 iDb=0 root=11 write=0
 213 TableLock        0    6    0 a             00 iDb=0 root=6 write=0
 214 TableLock        0    4    0 v3            00 iDb=0 root=4 write=0
 215 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
 216 Goto             0    1    0               00 
   1 Integer        100    1    0               00 r[1]=100
REG[1] =  i:100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
REG[1] =  i:100
   4 IntegrityCk      2   12    1 [12,9,6,10,4,8,3,2,7,5] 00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
REG[2] =  NULL
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
REG[1] =  i:100
  12 OpenRead         1   11    0 2             00 root=11 iDb=0; seq
  13 OpenRead         2   12    0 k(2,,)        00 root=12 iDb=0; sqlite_autoindex_seq_1
  14 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  15 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  16 Rewind           1   41    0               00 
  41 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  42 IfPos            1   44    0               00 if r[1]>0 then r[1]-=0, goto 44
REG[1] =  i:100
  44 Count            2    3    0               00 r[3]=count()
REG[3] =  i:0
  45 Eq               8   50    3               90 if r[8]==r[3] goto 50
REG[8] =  i:0
REG[3] =  i:0
  50 IfPos            1   52    0               00 if r[1]>0 then r[1]-=0, goto 52
REG[1] =  i:100
  52 OpenRead         1    6    0 2             00 root=6 iDb=0; a
  53 OpenRead         2   10    0 k(2,,)        00 root=10 iDb=0; f
  54 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  55 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  56 Rewind           1   74    0               00 
  57 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  58 Column           1    1   11               00 r[11]=a.t1b
REG[11] =  i:4
  59 Cast            11   68    0               00 affinity(r[11])
REG[11] =  i:4
  60 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:1
  61 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  62 Found            2   73   11 2             00 key=r[11..12]
REG[11] =  i:4
REG[12] =  i:1
  73 Next             1   57    0               00 
  57 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
  58 Column           1    1   11               00 r[11]=a.t1b
REG[11] =  i:4
  59 Cast            11   68    0               00 affinity(r[11])
REG[11] =  i:4
  60 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:2
  61 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:1
  62 Found            2   73   11 2             00 key=r[11..12]
REG[11] =  i:4
REG[12] =  i:2
  73 Next             1   57    0               00 
  57 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:2
  58 Column           1    1   11               00 r[11]=a.t1b
REG[11] =  i:5
  59 Cast            11   68    0               00 affinity(r[11])
REG[11] =  i:5
  60 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:3
  61 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:2
  62 Found            2   73   11 2             00 key=r[11..12]
REG[11] =  i:5
REG[12] =  i:3
  73 Next             1   57    0               00 
  57 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:3
  58 Column           1    1   11               00 r[11]=a.t1b
REG[11] =  i:5
  59 Cast            11   68    0               00 affinity(r[11])
REG[11] =  i:5
  60 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:4
  61 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:3
  62 Found            2   73   11 2             00 key=r[11..12]
REG[11] =  i:5
REG[12] =  i:4
  73 Next             1   57    0               00 
  57 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:4
  58 Column           1    1   11               00 r[11]=a.t1b
REG[11] =  i:5
  59 Cast            11   68    0               00 affinity(r[11])
REG[11] =  i:5
  60 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:5
  61 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:4
  62 Found            2   73   11 2             00 key=r[11..12]
REG[11] =  i:5
REG[12] =  i:5
  73 Next             1   57    0               00 
  74 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  75 IfPos            1   77    0               00 if r[1]>0 then r[1]-=0, goto 77
REG[1] =  i:100
  77 Count            2    3    0               00 r[3]=count()
REG[3] =  i:5
  78 Eq               8   83    3               90 if r[8]==r[3] goto 83
REG[8] =  i:5
REG[3] =  i:5
  83 IfPos            1   85    0               00 if r[1]>0 then r[1]-=0, goto 85
REG[1] =  i:100
  85 OpenRead         1    4    0 2             00 root=4 iDb=0; v3
  86 OpenRead         2    8    0 k(2,,)        00 root=8 iDb=0; c
  87 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  88 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  89 Rewind           1  107    0               00 
  90 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  91 Column           1    0   13               00 r[13]=v3.x
REG[13] =  i:9
  92 Function0        0   13   11 abs(1)        01 r[11]=func(r[13])
REG[13] =  i:9
REG[11] =  i:9
  93 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:1
  94 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  95 Found            2  106   11 2             00 key=r[11..12]
REG[11] =  i:9
REG[12] =  i:1
 106 Next             1   90    0               00 
  90 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
  91 Column           1    0   13               00 r[13]=v3.x
REG[13] =  NULL
  92 Function         0   13   11 abs(1)        01 r[11]=func(r[13])
REG[13] =  NULL
REG[11] =  NULL
  93 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:2
  94 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:1
  95 Found            2  106   11 2             00 key=r[11..12]
REG[11] =  NULL
REG[12] =  i:2
 106 Next             1   90    0               00 
  90 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:2
  91 Column           1    0   13               00 r[13]=v3.x
REG[13] =  i:14
  92 Function         0   13   11 abs(1)        01 r[11]=func(r[13])
REG[13] =  i:14
REG[11] =  i:14
  93 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:3
  94 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:2
  95 Found            2  106   11 2             00 key=r[11..12]
REG[11] =  i:14
REG[12] =  i:3
 106 Next             1   90    0               00 
 107 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
 108 IfPos            1  110    0               00 if r[1]>0 then r[1]-=0, goto 110
REG[1] =  i:100
 110 Count            2    3    0               00 r[3]=count()
REG[3] =  i:3
 111 Eq               8  116    3               90 if r[8]==r[3] goto 116
REG[8] =  i:3
REG[3] =  i:3
 116 IfPos            1  118    0               00 if r[1]>0 then r[1]-=0, goto 118
REG[1] =  i:100
 118 OpenRead         1    2    0 2             00 root=2 iDb=0; v0
 119 OpenRead         2    7    0 k(2,,)        00 root=7 iDb=0; abc
 120 OpenRead         3    5    0 k(9,,,,,,,,,) 00 root=5 iDb=0; t1
 121 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
 122 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
 123 Integer          0    9    0               00 r[9]=0
REG[9] =  i:0
 124 Rewind           1  180    0               00 
 125 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
 126 Rowid            1   15    0               00 r[15]=rowid
REG[15] =  i:22
 127 Add             15   15   14               00 r[14]=r[15]+r[15]
REG[15] =  i:22
REG[15] =  i:22
REG[14] =  i:44
 128 Add             15   14   11               00 r[11]=r[15]+r[14]
REG[15] =  i:22
REG[14] =  i:44
REG[11] =  i:66
 129 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:22
 130 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
 131 Found            2  142   11 2             00 key=r[11..12]
REG[11] =  i:66
REG[12] =  i:22
 142 Rowid            1   17    0               00 r[17]=rowid; v0.v1
REG[17] =  i:22
 143 Rowid            1   18    0               00 r[18]=rowid; v0.v1
REG[18] =  i:22
 144 Rowid            1   19    0               00 r[19]=rowid; v0.v1
REG[19] =  i:22
 145 Rowid            1   20    0               00 r[20]=rowid; v0.v1
REG[20] =  i:22
 146 Rowid            1   21    0               00 r[21]=rowid; v0.v1
REG[21] =  i:22
 147 Rowid            1   22    0               00 r[22]=rowid; v0.v1
REG[22] =  i:22
 148 Rowid            1   23    0               00 r[23]=rowid; v0.v1
REG[23] =  i:22
 149 Rowid            1   24    0               00 r[24]=rowid; v0.v1
REG[24] =  i:22
 150 Rowid            1   25    0               00 r[25]=rowid; v0.v1
REG[25] =  i:22
 151 Rowid            1   26    0               00 r[26]=rowid
REG[26] =  i:22
 152 AddImm           9    1    0               00 r[9]=r[9]+1
REG[9] =  i:0
 153 Found            3  164   17 10            00 key=r[17..26]
REG[17] =  i:22
REG[18] =  i:22
REG[19] =  i:22
REG[20] =  i:22
REG[21] =  i:22
REG[22] =  i:22
REG[23] =  i:22
REG[24] =  i:22
REG[25] =  i:22
REG[26] =  i:22
 164 IsNull          17  179    0               00 if r[17]==NULL goto 179
REG[17] =  i:22
 165 IsNull          18  179    0               00 if r[18]==NULL goto 179
REG[18] =  i:22
 166 IsNull          19  179    0               00 if r[19]==NULL goto 179
REG[19] =  i:22
 167 IsNull          20  179    0               00 if r[20]==NULL goto 179
REG[20] =  i:22
 168 IsNull          21  179    0               00 if r[21]==NULL goto 179
REG[21] =  i:22
 169 IsNull          22  179    0               00 if r[22]==NULL goto 179
REG[22] =  i:22
 170 IsNull          23  179    0               00 if r[23]==NULL goto 179
REG[23] =  i:22
 171 IsNull          24  179    0               00 if r[24]==NULL goto 179
REG[24] =  i:22
 172 IsNull          25  179    0               00 if r[25]==NULL goto 179
REG[25] =  i:22
 173 Next             3  175    0               00 
 174 Goto             0  179    0               00 
 179 Next             1  125    0               00 
 180 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
 181 IfPos            1  183    0               00 if r[1]>0 then r[1]-=0, goto 183
REG[1] =  i:100
 183 Count            2    3    0               00 r[3]=count()
REG[3] =  i:1
 184 Eq               8  189    3               90 if r[8]==r[3] goto 189
REG[8] =  i:1
REG[3] =  i:1
 189 IfPos            1  191    0               00 if r[1]>0 then r[1]-=0, goto 191
REG[1] =  i:100
 191 Count            3    3    0               00 r[3]=count()
REG[3] =  i:1
 192 Eq               9  197    3               90 if r[9]==r[3] goto 197
REG[9] =  i:1
REG[3] =  i:1
 197 IfPos            1  199    0               00 if r[1]>0 then r[1]-=0, goto 199
REG[1] =  i:100
 199 IntegrityCk      2    1    1 ]             01 
 200 IsNull           2  205    0               00 if r[2]==NULL goto 205
REG[2] =  NULL
 205 AddImm           1 -100    0               00 r[1]=r[1]+-100
REG[1] =  i:100
 206 If               1  209    0               00 
REG[1] =  i:0
 207 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
 208 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
 209 Halt             0    0    0               00 
SQL: [;INSERT INTO a(b, b) VALUES (0, $x), (0, 0);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   10 1             01 usesStmtJournal=0
  29 TableLock        0    6    1 a             00 iDb=0 root=6 write=1
  30 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  31 Goto             0    1    0               00 
   1 InitCoroutine    4    9    2               00 
   9 Integer          0    9    0               00 r[9]=0
REG[9] =  i:0
  10 OpenWrite        0    6    0 2             00 root=6 iDb=0; a
  11 OpenWrite        1   10    0 k(2,,)        00 root=10 iDb=0; f
  12 Yield            4   24    0               00 
REG[4] =  i:1
REG[4] =  i:12
   2 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   3 Variable         1    6    0 $x            00 r[6]=parameter(1,$x)
REG[6] =  NULL
   4 Yield            4    0    0               00 
REG[4] =  i:12
REG[4] =  i:4
  13 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
  14 SCopy            5    2    0               00 r[2]=r[5]
REG[2] =  i:0
  15 SCopy            3   11    0               00 r[11]=r[3]
REG[11] =  NULL
  16 Cast            11   68    0               00 affinity(r[11]); f column 0
REG[11] =  NULL
  17 IntCopy          1   12    0               00 r[12]=r[1]; rowid
REG[12] =  i:6
  18 MakeRecord      11    2   10               00 r[10]=mkrec(r[11..12]); for f
REG[10] =  s4[03000106....](8)
  19 IdxInsert        1   10    0               10 key=r[10]
REG[10] =  s4[03000106....](8)
  20 MakeRecord       2    2   13               00 r[13]=mkrec(r[2..3])
REG[13] =  s3[030800...](8)
  21 Insert           0   13    1 a             1B intkey=r[1] data=r[13]
REG[13] =  s3[030800...](8)
REG[1] =  i:6
  22 AddImm           9    1    0               00 r[9]=r[9]+1
REG[9] =  i:0
  23 Goto             0   12    0               00 
  12 Yield            4   24    0               00 
REG[4] =  i:4
REG[4] =  i:12
   5 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   6 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
   7 Yield            4    0    0               00 
REG[4] =  i:12
REG[4] =  i:7
  13 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:7
  14 SCopy            5    2    0               00 r[2]=r[5]
REG[2] =  i:0
  15 SCopy            3   11    0               00 r[11]=r[3]
REG[11] =  NULL
  16 Cast            11   68    0               00 affinity(r[11]); f column 0
REG[11] =  NULL
  17 IntCopy          1   12    0               00 r[12]=r[1]; rowid
REG[12] =  i:7
  18 MakeRecord      11    2   10               00 r[10]=mkrec(r[11..12]); for f
REG[10] =  s4[03000107....](8)
  19 IdxInsert        1   10    0               10 key=r[10]
REG[10] =  s4[03000107....](8)
  20 MakeRecord       2    2   13               00 r[13]=mkrec(r[2..3])
REG[13] =  s3[030800...](8)
  21 Insert           0   13    1 a             1B intkey=r[1] data=r[13]
REG[13] =  s3[030800...](8)
REG[1] =  i:7
  22 AddImm           9    1    0               00 r[9]=r[9]+1
REG[9] =  i:1
  23 Goto             0   12    0               00 
  12 Yield            4   24    0               00 
REG[4] =  i:7
REG[4] =  i:12
   8 EndCoroutine     4    0    0               00 
REG[4] =  i:12
  24 Close            0    0    0               00 
  25 Close            1    0    0               00 
  26 ResultRow        9    1    0               00 output=r[9]
REG[9] =  i:2
  27 Halt             0    0    0               00 
SQL: [;UPDATE v0 SET v2 = NULL;]
VDBE Trace:
   0 Init             0   35    0               00 Start at 35
  35 Transaction      0    1   10 1             01 usesStmtJournal=0
  36 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
  37 Goto             0    1    0               00 
   1 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; v0
   3 Explain          0    0    0 SCAN TABLE v0 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:22
   6 RowSetAdd        2    3    0               00 rowset(2)=r[3]
REG[2] =  NULL
REG[3] =  i:22
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  10 OpenWrite        0    2    0 2             00 root=2 iDb=0; v0
  11 OpenWrite        1    7    0 k(2,,)        00 root=7 iDb=0; abc
  12 RowSetRead       2   31    3               00 r[3]=rowset(2)
REG[2] =  (rowset)
REG[3] =  i:22
  13 NotExists        0   12    3               00 intkey=r[3]
REG[3] =  i:22
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  16 Affinity         4    2    0 DB            00 affinity(r[4..5])
  17 Add              3    3    9               00 r[9]=r[3]+r[3]
REG[3] =  i:22
REG[3] =  i:22
REG[9] =  i:44
  18 Add              3    9    7               00 r[7]=r[3]+r[9]; abc column 0
REG[3] =  i:22
REG[9] =  i:44
REG[7] =  i:66
  19 IntCopy          3    8    0               00 r[8]=r[3]; rowid
REG[8] =  i:22
  20 MakeRecord       7    2    1               00 r[1]=mkrec(r[7..8]); for abc
REG[1] =  s5[0301014216...B.](8)
  21 Rowid            0   10    0               00 r[10]=rowid
REG[10] =  i:22
  22 Add             10   10    9               00 r[9]=r[10]+r[10]
REG[10] =  i:22
REG[10] =  i:22
REG[9] =  i:44
  23 Add             10    9    7               00 r[7]=r[10]+r[9]
REG[10] =  i:22
REG[9] =  i:44
REG[7] =  i:66
  24 Rowid            0    8    0               00 r[8]=rowid
REG[8] =  i:22
  25 IdxDelete        1    7    2               00 key=r[7..8]
  26 IdxInsert        1    1    0               00 key=r[1]
REG[1] =  s5[0301014216...B.](8)
  27 MakeRecord       4    2    9               00 r[9]=mkrec(r[4..5])
REG[9] =  s3[030000...](8)
  28 Insert           0    9    3 v0            05 intkey=r[3] data=r[9]
REG[9] =  s3[030000...](8)
REG[3] =  i:22
  29 AddImm           6    1    0               00 r[6]=r[6]+1
REG[6] =  i:0
  30 Goto             0   12    0               00 
  12 RowSetRead       2   31    3               00 r[3]=rowset(2)
REG[2] =  (rowset)
REG[3] =  i:22
  31 Close            1    0    0               00 
  32 Close            0    0    0               00 
  33 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:1
  34 Halt             0    0    0               00 
SQL: [;PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0  210    0               00 Start at 210
 210 Transaction      0    0   10 1             01 usesStmtJournal=0
 211 Transaction      1    0    0 1             01 usesStmtJournal=0
 212 TableLock        0   11    0 seq           00 iDb=0 root=11 write=0
 213 TableLock        0    6    0 a             00 iDb=0 root=6 write=0
 214 TableLock        0    4    0 v3            00 iDb=0 root=4 write=0
 215 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
 216 Goto             0    1    0               00 
   1 Integer        100    1    0               00 r[1]=100
REG[1] =  i:100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
REG[1] =  i:100
   4 IntegrityCk      2   12    1 [12,9,6,10,4,8,3,2,7,5] 00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
REG[2] =  NULL
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
REG[1] =  i:100
  12 OpenRead         1   11    0 2             00 root=11 iDb=0; seq
  13 OpenRead         2   12    0 k(2,,)        00 root=12 iDb=0; sqlite_autoindex_seq_1
  14 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  15 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  16 Rewind           1   41    0               00 
  41 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  42 IfPos            1   44    0               00 if r[1]>0 then r[1]-=0, goto 44
REG[1] =  i:100
  44 Count            2    3    0               00 r[3]=count()
REG[3] =  i:0
  45 Eq               8   50    3               90 if r[8]==r[3] goto 50
REG[8] =  i:0
REG[3] =  i:0
  50 IfPos            1   52    0               00 if r[1]>0 then r[1]-=0, goto 52
REG[1] =  i:100
  52 OpenRead         1    6    0 2             00 root=6 iDb=0; a
  53 OpenRead         2   10    0 k(2,,)        00 root=10 iDb=0; f
  54 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  55 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  56 Rewind           1   74    0               00 
  57 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  58 Column           1    1   11               00 r[11]=a.t1b
REG[11] =  i:4
  59 Cast            11   68    0               00 affinity(r[11])
REG[11] =  i:4
  60 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:1
  61 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  62 Found            2   73   11 2             00 key=r[11..12]
REG[11] =  i:4
REG[12] =  i:1
  73 Next             1   57    0               00 
  57 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
  58 Column           1    1   11               00 r[11]=a.t1b
REG[11] =  i:4
  59 Cast            11   68    0               00 affinity(r[11])
REG[11] =  i:4
  60 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:2
  61 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:1
  62 Found            2   73   11 2             00 key=r[11..12]
REG[11] =  i:4
REG[12] =  i:2
  73 Next             1   57    0               00 
  57 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:2
  58 Column           1    1   11               00 r[11]=a.t1b
REG[11] =  i:5
  59 Cast            11   68    0               00 affinity(r[11])
REG[11] =  i:5
  60 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:3
  61 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:2
  62 Found            2   73   11 2             00 key=r[11..12]
REG[11] =  i:5
REG[12] =  i:3
  73 Next             1   57    0               00 
  57 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:3
  58 Column           1    1   11               00 r[11]=a.t1b
REG[11] =  i:5
  59 Cast            11   68    0               00 affinity(r[11])
REG[11] =  i:5
  60 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:4
  61 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:3
  62 Found            2   73   11 2             00 key=r[11..12]
REG[11] =  i:5
REG[12] =  i:4
  73 Next             1   57    0               00 
  57 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:4
  58 Column           1    1   11               00 r[11]=a.t1b
REG[11] =  i:5
  59 Cast            11   68    0               00 affinity(r[11])
REG[11] =  i:5
  60 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:5
  61 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:4
  62 Found            2   73   11 2             00 key=r[11..12]
REG[11] =  i:5
REG[12] =  i:5
  73 Next             1   57    0               00 
  57 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:5
  58 Column           1    1   11               00 r[11]=a.t1b
REG[11] =  NULL
  59 Cast            11   68    0               00 affinity(r[11])
REG[11] =  NULL
  60 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:6
  61 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:5
  62 Found            2   73   11 2             00 key=r[11..12]
REG[11] =  NULL
REG[12] =  i:6
  73 Next             1   57    0               00 
  57 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:6
  58 Column           1    1   11               00 r[11]=a.t1b
REG[11] =  NULL
  59 Cast            11   68    0               00 affinity(r[11])
REG[11] =  NULL
  60 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:7
  61 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:6
  62 Found            2   73   11 2             00 key=r[11..12]
REG[11] =  NULL
REG[12] =  i:7
  73 Next             1   57    0               00 
  74 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  75 IfPos            1   77    0               00 if r[1]>0 then r[1]-=0, goto 77
REG[1] =  i:100
  77 Count            2    3    0               00 r[3]=count()
REG[3] =  i:7
  78 Eq               8   83    3               90 if r[8]==r[3] goto 83
REG[8] =  i:7
REG[3] =  i:7
  83 IfPos            1   85    0               00 if r[1]>0 then r[1]-=0, goto 85
REG[1] =  i:100
  85 OpenRead         1    4    0 2             00 root=4 iDb=0; v3
  86 OpenRead         2    8    0 k(2,,)        00 root=8 iDb=0; c
  87 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  88 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  89 Rewind           1  107    0               00 
  90 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  91 Column           1    0   13               00 r[13]=v3.x
REG[13] =  i:9
  92 Function0        0   13   11 abs(1)        01 r[11]=func(r[13])
REG[13] =  i:9
REG[11] =  i:9
  93 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:1
  94 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  95 Found            2  106   11 2             00 key=r[11..12]
REG[11] =  i:9
REG[12] =  i:1
 106 Next             1   90    0               00 
  90 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
  91 Column           1    0   13               00 r[13]=v3.x
REG[13] =  NULL
  92 Function         0   13   11 abs(1)        01 r[11]=func(r[13])
REG[13] =  NULL
REG[11] =  NULL
  93 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:2
  94 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:1
  95 Found            2  106   11 2             00 key=r[11..12]
REG[11] =  NULL
REG[12] =  i:2
 106 Next             1   90    0               00 
  90 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:2
  91 Column           1    0   13               00 r[13]=v3.x
REG[13] =  i:14
  92 Function         0   13   11 abs(1)        01 r[11]=func(r[13])
REG[13] =  i:14
REG[11] =  i:14
  93 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:3
  94 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:2
  95 Found            2  106   11 2             00 key=r[11..12]
REG[11] =  i:14
REG[12] =  i:3
 106 Next             1   90    0               00 
 107 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
 108 IfPos            1  110    0               00 if r[1]>0 then r[1]-=0, goto 110
REG[1] =  i:100
 110 Count            2    3    0               00 r[3]=count()
REG[3] =  i:3
 111 Eq               8  116    3               90 if r[8]==r[3] goto 116
REG[8] =  i:3
REG[3] =  i:3
 116 IfPos            1  118    0               00 if r[1]>0 then r[1]-=0, goto 118
REG[1] =  i:100
 118 OpenRead         1    2    0 2             00 root=2 iDb=0; v0
 119 OpenRead         2    7    0 k(2,,)        00 root=7 iDb=0; abc
 120 OpenRead         3    5    0 k(9,,,,,,,,,) 00 root=5 iDb=0; t1
 121 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
 122 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
 123 Integer          0    9    0               00 r[9]=0
REG[9] =  i:0
 124 Rewind           1  180    0               00 
 125 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
 126 Rowid            1   15    0               00 r[15]=rowid
REG[15] =  i:22
 127 Add             15   15   14               00 r[14]=r[15]+r[15]
REG[15] =  i:22
REG[15] =  i:22
REG[14] =  i:44
 128 Add             15   14   11               00 r[11]=r[15]+r[14]
REG[15] =  i:22
REG[14] =  i:44
REG[11] =  i:66
 129 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:22
 130 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
 131 Found            2  142   11 2             00 key=r[11..12]
REG[11] =  i:66
REG[12] =  i:22
 142 Rowid            1   17    0               00 r[17]=rowid; v0.v1
REG[17] =  i:22
 143 Rowid            1   18    0               00 r[18]=rowid; v0.v1
REG[18] =  i:22
 144 Rowid            1   19    0               00 r[19]=rowid; v0.v1
REG[19] =  i:22
 145 Rowid            1   20    0               00 r[20]=rowid; v0.v1
REG[20] =  i:22
 146 Rowid            1   21    0               00 r[21]=rowid; v0.v1
REG[21] =  i:22
 147 Rowid            1   22    0               00 r[22]=rowid; v0.v1
REG[22] =  i:22
 148 Rowid            1   23    0               00 r[23]=rowid; v0.v1
REG[23] =  i:22
 149 Rowid            1   24    0               00 r[24]=rowid; v0.v1
REG[24] =  i:22
 150 Rowid            1   25    0               00 r[25]=rowid; v0.v1
REG[25] =  i:22
 151 Rowid            1   26    0               00 r[26]=rowid
REG[26] =  i:22
 152 AddImm           9    1    0               00 r[9]=r[9]+1
REG[9] =  i:0
 153 Found            3  164   17 10            00 key=r[17..26]
REG[17] =  i:22
REG[18] =  i:22
REG[19] =  i:22
REG[20] =  i:22
REG[21] =  i:22
REG[22] =  i:22
REG[23] =  i:22
REG[24] =  i:22
REG[25] =  i:22
REG[26] =  i:22
 164 IsNull          17  179    0               00 if r[17]==NULL goto 179
REG[17] =  i:22
 165 IsNull          18  179    0               00 if r[18]==NULL goto 179
REG[18] =  i:22
 166 IsNull          19  179    0               00 if r[19]==NULL goto 179
REG[19] =  i:22
 167 IsNull          20  179    0               00 if r[20]==NULL goto 179
REG[20] =  i:22
 168 IsNull          21  179    0               00 if r[21]==NULL goto 179
REG[21] =  i:22
 169 IsNull          22  179    0               00 if r[22]==NULL goto 179
REG[22] =  i:22
 170 IsNull          23  179    0               00 if r[23]==NULL goto 179
REG[23] =  i:22
 171 IsNull          24  179    0               00 if r[24]==NULL goto 179
REG[24] =  i:22
 172 IsNull          25  179    0               00 if r[25]==NULL goto 179
REG[25] =  i:22
 173 Next             3  175    0               00 
 174 Goto             0  179    0               00 
 179 Next             1  125    0               00 
 180 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
 181 IfPos            1  183    0               00 if r[1]>0 then r[1]-=0, goto 183
REG[1] =  i:100
 183 Count            2    3    0               00 r[3]=count()
REG[3] =  i:1
 184 Eq               8  189    3               90 if r[8]==r[3] goto 189
REG[8] =  i:1
REG[3] =  i:1
 189 IfPos            1  191    0               00 if r[1]>0 then r[1]-=0, goto 191
REG[1] =  i:100
 191 Count            3    3    0               00 r[3]=count()
REG[3] =  i:1
 192 Eq               9  197    3               90 if r[9]==r[3] goto 197
REG[9] =  i:1
REG[3] =  i:1
 197 IfPos            1  199    0               00 if r[1]>0 then r[1]-=0, goto 199
REG[1] =  i:100
 199 IntegrityCk      2    1    1 ]             01 
 200 IsNull           2  205    0               00 if r[2]==NULL goto 205
REG[2] =  NULL
 205 AddImm           1 -100    0               00 r[1]=r[1]+-100
REG[1] =  i:100
 206 If               1  209    0               00 
REG[1] =  i:0
 207 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
 208 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
 209 Halt             0    0    0               00 
SQL: [;
;DROP TABLE IF EXISTS a;]
VDBE Trace:
   0 Init             0   71    0               00 Start at 71
  71 Transaction      0    1   10 1             01 usesStmtJournal=1
  72 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  73 String8          0    4    0 a             00 r[4]='a'
REG[4] =   t1[a](8)
  74 String8          0    6    0 trigger       00 r[6]='trigger'
REG[6] =   t7[trigger](8)
  75 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   5 Rewind           0   15    0               00 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[v0](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t1[a](8)
REG[3] =   s2[v0](8)
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s15[sqlite_sequence](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t1[a](8)
REG[3] =   s15[sqlite_sequence](8)
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[v3](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t1[a](8)
REG[3] =   s2[v3](8)
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[v0](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t1[a](8)
REG[3] =   s2[v0](8)
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s1[a](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t1[a](8)
REG[3] =   s1[a](8)
   8 Column           0    0    5               00 r[5]=sqlite_master.type
REG[5] =   s5[table](8)
   9 Eq               6   14    5 (BINARY)      52 if r[6]==r[5] goto 14
REG[6] =   t7[trigger](8)
REG[5] =   s5[table](8)
  10 AddImm           1    1    0               00 r[1]=r[1]+1
REG[1] =  i:0
  11 Rowid            0    7    0               00 r[7]=rowid
REG[7] =  i:5
  12 Once             0   13    0               00 
  13 Delete           0    0    0 sqlite_master 02 
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[v0](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t1[a](8)
REG[3] =   s2[v0](8)
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[v3](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t1[a](8)
REG[3] =   s2[v3](8)
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s3[def](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t1[a](8)
REG[3] =   s3[def](8)
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s1[a](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t1[a](8)
REG[3] =   s1[a](8)
   8 Column           0    0    5               00 r[5]=sqlite_master.type
REG[5] =   s5[index](8)
   9 Eq               6   14    5 (BINARY)      52 if r[6]==r[5] goto 14
REG[6] =   t7[trigger](8)
REG[5] =   s5[index](8)
  10 AddImm           1    1    0               00 r[1]=r[1]+1
REG[1] =  i:1
  11 Rowid            0    7    0               00 r[7]=rowid
REG[7] =  i:9
  12 Once             0   13    0               00 
  13 Delete           0    0    0 sqlite_master 02 
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s3[seq](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t1[a](8)
REG[3] =   s3[seq](8)
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s3[seq](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t1[a](8)
REG[3] =   s3[seq](8)
  14 Next             0    6    0               01 
  15 Close            0    0    0               00 
  16 Destroy         10    5    0               00 
REG[5] =  i:0
  17 Null             0    8    9               00 r[8..9]=NULL
REG[8] =  NULL
  18 IfNot            5   27    1               00 
REG[5] =  i:0
  27 Close            1    0    0               00 
  28 Integer          0   16    0               00 r[16]=0
REG[16] =  i:0
  29 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  30 RowSetRead       8   41    9               00 r[9]=rowset(8)
REG[8] =  NULL
REG[9] =  NULL
  41 Close            1    0    0               00 
  42 Destroy          6    5    0               00 
REG[5] =  i:0
  43 Null             0   17   18               00 r[17..18]=NULL
REG[17] =  NULL
  44 IfNot            5   53    1               00 
REG[5] =  i:0
  53 Close            2    0    0               00 
  54 Integer          0   25    0               00 r[25]=0
REG[25] =  i:0
  55 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  56 RowSetRead      17   67   18               00 r[18]=rowset(17)
REG[17] =  NULL
REG[18] =  NULL
  67 Close            2    0    0               00 
  68 DropTable        0    0    0 a             00 
  69 SetCookie        0    1   11               00 
  70 Halt             0    0    0               00 
SQL: [;INSERT INTO def(d, d) VALUES (0, $x), (0, 0);]
VDBE Trace:
   0 Init             0   26    0               00 Start at 26
  26 Transaction      0    1   11 1             01 usesStmtJournal=1
  27 TableLock        0    9    1 def           00 iDb=0 root=9 write=1
  28 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  29 Goto             0    1    0               00 
   1 InitCoroutine    4    9    2               00 
   9 Integer          0    9    0               00 r[9]=0
REG[9] =  i:0
  10 OpenWrite        0    9    0 2             00 root=9 iDb=0; def
  11 Yield            4   23    0               00 
REG[4] =  i:1
REG[4] =  i:11
   2 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   3 Variable         1    6    0 $x            00 r[6]=parameter(1,$x)
REG[6] =  NULL
   4 Yield            4    0    0               00 
REG[4] =  i:11
REG[4] =  i:4
  12 Copy             6    1    0               00 r[1]=r[6]
REG[1] =  NULL
  13 NotNull          1   15    0               00 if r[1]!=NULL goto 15
REG[1] =  NULL
  14 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
  15 MustBeInt        1    0    0               00 
REG[1] =  i:1
  16 SoftNull         2    0    0               00 r[2]=NULL
  17 NotExists        0   19    1               00 intkey=r[1]
REG[1] =  i:1
  19 MakeRecord       2    2   10 D             00 r[10]=mkrec(r[2..3])
REG[10] =  s3[030000...](8)
  20 Insert           0   10    1 def           13 intkey=r[1] data=r[10]
REG[10] =  s3[030000...](8)
REG[1] =  i:1
  21 AddImm           9    1    0               00 r[9]=r[9]+1
REG[9] =  i:0
  22 Goto             0   11    0               00 
  11 Yield            4   23    0               00 
REG[4] =  i:4
REG[4] =  i:11
   5 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   6 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
   7 Yield            4    0    0               00 
REG[4] =  i:11
REG[4] =  i:7
  12 Copy             6    1    0               00 r[1]=r[6]
REG[1] =  i:0
  13 NotNull          1   15    0               00 if r[1]!=NULL goto 15
REG[1] =  i:0
  15 MustBeInt        1    0    0               00 
REG[1] =  i:0
  16 SoftNull         2    0    0               00 r[2]=NULL
  17 NotExists        0   19    1               00 intkey=r[1]
REG[1] =  i:0
  19 MakeRecord       2    2   10 D             00 r[10]=mkrec(r[2..3])
REG[10] =  s3[030000...](8)
  20 Insert           0   10    1 def           13 intkey=r[1] data=r[10]
REG[10] =  s3[030000...](8)
REG[1] =  i:0
  21 AddImm           9    1    0               00 r[9]=r[9]+1
REG[9] =  i:1
  22 Goto             0   11    0               00 
  11 Yield            4   23    0               00 
REG[4] =  i:7
REG[4] =  i:11
   8 EndCoroutine     4    0    0               00 
REG[4] =  i:11
  23 Close            0    0    0               00 
  24 ResultRow        9    1    0               00 output=r[9]
REG[9] =  i:2
  25 Halt             0    0    0               00 
SQL: [;UPDATE def SET d = NULL;]
VDBE Trace:
   0 Init             0   29    0               00 Start at 29
  29 Transaction      0    1   11 1             01 usesStmtJournal=1
  30 TableLock        0    9    1 def           00 iDb=0 root=9 write=1
  31 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    9    0 0             00 root=9 iDb=0; def
   3 Explain          0    0    0 SCAN TABLE def 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:0
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:0
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:1
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  10 OpenWrite        0    9    0 2             00 root=9 iDb=0; def
  11 RowSetRead       1   26    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:0
  12 NotExists        0   11    2               00 intkey=r[2]
REG[2] =  i:0
  13 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  14 MustBeInt        3    0    0               00 
REG[3] =  NULL
SQL: [;SELECT DISTINCT * FROM v3 WHERE (v3.xyz IS NULL);]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0   11 1             01 usesStmtJournal=0
  17 TableLock        0    4    0 v3            00 iDb=0 root=4 write=0
  18 Goto             0    1    0               00 
   1 OpenEphemeral    1    0    0 k(2,B,B)      08 nColumn=0
   2 OpenRead         0    4    0 2             00 root=4 iDb=0; v3
   3 Explain          0    0    0 SCAN TABLE v3 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=v3.xyz
REG[1] =  i:4
   6 NotNull          1   13    0               00 if r[1]!=NULL goto 13
REG[1] =  i:4
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=v3.xyz
REG[1] =  i:123
   6 NotNull          1   13    0               00 if r[1]!=NULL goto 13
REG[1] =  i:123
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=v3.xyz
REG[1] =  i:4
   6 NotNull          1   13    0               00 if r[1]!=NULL goto 13
REG[1] =  i:4
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
;DROP TABLE IF EXISTS def;]
VDBE Trace:
   0 Init             0   45    0               00 Start at 45
  45 Transaction      0    1   11 1             01 usesStmtJournal=1
  46 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  47 String8          0    4    0 def           00 r[4]='def'
REG[4] =   t3[def](8)
  48 String8          0    6    0 trigger       00 r[6]='trigger'
REG[6] =   t7[trigger](8)
  49 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   5 Rewind           0   15    0               00 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[v0](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t3[def](8)
REG[3] =   s2[v0](8)
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s15[sqlite_sequence](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t3[def](8)
REG[3] =   s15[sqlite_sequence](8)
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[v3](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t3[def](8)
REG[3] =   s2[v3](8)
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[v0](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t3[def](8)
REG[3] =   s2[v0](8)
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[v0](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t3[def](8)
REG[3] =   s2[v0](8)
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[v3](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t3[def](8)
REG[3] =   s2[v3](8)
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s3[def](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t3[def](8)
REG[3] =   s3[def](8)
   8 Column           0    0    5               00 r[5]=sqlite_master.type
REG[5] =   s5[table](8)
   9 Eq               6   14    5 (BINARY)      52 if r[6]==r[5] goto 14
REG[6] =   t7[trigger](8)
REG[5] =   s5[table](8)
  10 AddImm           1    1    0               00 r[1]=r[1]+1
REG[1] =  i:0
  11 Rowid            0    7    0               00 r[7]=rowid
REG[7] =  i:8
  12 Once             0   13    0               00 
  13 Delete           0    0    0 sqlite_master 02 
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s3[seq](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t3[def](8)
REG[3] =   s3[seq](8)
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s3[seq](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t3[def](8)
REG[3] =   s3[seq](8)
  14 Next             0    6    0               01 
  15 Close            0    0    0               00 
  16 Destroy          9    5    0               00 
REG[5] =  i:0
  17 Null             0    8    9               00 r[8..9]=NULL
REG[8] =  NULL
  18 IfNot            5   27    1               00 
REG[5] =  i:0
  27 Close            1    0    0               00 
  28 Integer          0   16    0               00 r[16]=0
REG[16] =  i:0
  29 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  30 RowSetRead       8   41    9               00 r[9]=rowset(8)
REG[8] =  NULL
REG[9] =  NULL
  41 Close            1    0    0               00 
  42 DropTable        0    0    0 def           00 
  43 SetCookie        0    1   12               00 
  44 Halt             0    0    0               00 
SQL: [;PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0  177    0               00 Start at 177
 177 Transaction      0    0   12 1             01 usesStmtJournal=0
 178 Transaction      1    0    0 1             01 usesStmtJournal=0
 179 TableLock        0   11    0 seq           00 iDb=0 root=11 write=0
 180 TableLock        0    4    0 v3            00 iDb=0 root=4 write=0
 181 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
 182 Goto             0    1    0               00 
   1 Integer        100    1    0               00 r[1]=100
REG[1] =  i:100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
REG[1] =  i:100
   4 IntegrityCk      2    9    1 [12,4,8,3,2,7,5,1,0,-1431655766] 00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
REG[2] =  NULL
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
REG[1] =  i:100
  12 OpenRead         1   11    0 2             00 root=11 iDb=0; seq
  13 OpenRead         2   12    0 k(2,,)        00 root=12 iDb=0; sqlite_autoindex_seq_1
  14 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  15 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  16 Rewind           1   41    0               00 
  41 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  42 IfPos            1   44    0               00 if r[1]>0 then r[1]-=0, goto 44
REG[1] =  i:100
  44 Count            2    3    0               00 r[3]=count()
REG[3] =  i:0
  45 Eq               8   50    3               90 if r[8]==r[3] goto 50
REG[8] =  i:0
REG[3] =  i:0
  50 IfPos            1   52    0               00 if r[1]>0 then r[1]-=0, goto 52
REG[1] =  i:100
  52 OpenRead         1    4    0 2             00 root=4 iDb=0; v3
  53 OpenRead         2    8    0 k(2,,)        00 root=8 iDb=0; c
  54 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  55 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  56 Rewind           1   74    0               00 
  57 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  58 Column           1    0   13               00 r[13]=v3.x
REG[13] =  i:9
  59 Function0        0   13   11 abs(1)        01 r[11]=func(r[13])
REG[13] =  i:9
REG[11] =  i:9
  60 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:1
  61 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  62 Found            2   73   11 2             00 key=r[11..12]
REG[11] =  i:9
REG[12] =  i:1
  73 Next             1   57    0               00 
  57 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
  58 Column           1    0   13               00 r[13]=v3.x
REG[13] =  NULL
  59 Function         0   13   11 abs(1)        01 r[11]=func(r[13])
REG[13] =  NULL
REG[11] =  NULL
  60 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:2
  61 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:1
  62 Found            2   73   11 2             00 key=r[11..12]
REG[11] =  NULL
REG[12] =  i:2
  73 Next             1   57    0               00 
  57 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:2
  58 Column           1    0   13               00 r[13]=v3.x
REG[13] =  i:14
  59 Function         0   13   11 abs(1)        01 r[11]=func(r[13])
REG[13] =  i:14
REG[11] =  i:14
  60 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:3
  61 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:2
  62 Found            2   73   11 2             00 key=r[11..12]
REG[11] =  i:14
REG[12] =  i:3
  73 Next             1   57    0               00 
  74 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  75 IfPos            1   77    0               00 if r[1]>0 then r[1]-=0, goto 77
REG[1] =  i:100
  77 Count            2    3    0               00 r[3]=count()
REG[3] =  i:3
  78 Eq               8   83    3               90 if r[8]==r[3] goto 83
REG[8] =  i:3
REG[3] =  i:3
  83 IfPos            1   85    0               00 if r[1]>0 then r[1]-=0, goto 85
REG[1] =  i:100
  85 OpenRead         1    2    0 2             00 root=2 iDb=0; v0
  86 OpenRead         2    7    0 k(2,,)        00 root=7 iDb=0; abc
  87 OpenRead         3    5    0 k(9,,,,,,,,,) 00 root=5 iDb=0; t1
  88 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  89 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  90 Integer          0    9    0               00 r[9]=0
REG[9] =  i:0
  91 Rewind           1  147    0               00 
  92 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  93 Rowid            1   15    0               00 r[15]=rowid
REG[15] =  i:22
  94 Add             15   15   14               00 r[14]=r[15]+r[15]
REG[15] =  i:22
REG[15] =  i:22
REG[14] =  i:44
  95 Add             15   14   11               00 r[11]=r[15]+r[14]
REG[15] =  i:22
REG[14] =  i:44
REG[11] =  i:66
  96 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:22
  97 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  98 Found            2  109   11 2             00 key=r[11..12]
REG[11] =  i:66
REG[12] =  i:22
 109 Rowid            1   17    0               00 r[17]=rowid; v0.v1
REG[17] =  i:22
 110 Rowid            1   18    0               00 r[18]=rowid; v0.v1
REG[18] =  i:22
 111 Rowid            1   19    0               00 r[19]=rowid; v0.v1
REG[19] =  i:22
 112 Rowid            1   20    0               00 r[20]=rowid; v0.v1
REG[20] =  i:22
 113 Rowid            1   21    0               00 r[21]=rowid; v0.v1
REG[21] =  i:22
 114 Rowid            1   22    0               00 r[22]=rowid; v0.v1
REG[22] =  i:22
 115 Rowid            1   23    0               00 r[23]=rowid; v0.v1
REG[23] =  i:22
 116 Rowid            1   24    0               00 r[24]=rowid; v0.v1
REG[24] =  i:22
 117 Rowid            1   25    0               00 r[25]=rowid; v0.v1
REG[25] =  i:22
 118 Rowid            1   26    0               00 r[26]=rowid
REG[26] =  i:22
 119 AddImm           9    1    0               00 r[9]=r[9]+1
REG[9] =  i:0
 120 Found            3  131   17 10            00 key=r[17..26]
REG[17] =  i:22
REG[18] =  i:22
REG[19] =  i:22
REG[20] =  i:22
REG[21] =  i:22
REG[22] =  i:22
REG[23] =  i:22
REG[24] =  i:22
REG[25] =  i:22
REG[26] =  i:22
 131 IsNull          17  146    0               00 if r[17]==NULL goto 146
REG[17] =  i:22
 132 IsNull          18  146    0               00 if r[18]==NULL goto 146
REG[18] =  i:22
 133 IsNull          19  146    0               00 if r[19]==NULL goto 146
REG[19] =  i:22
 134 IsNull          20  146    0               00 if r[20]==NULL goto 146
REG[20] =  i:22
 135 IsNull          21  146    0               00 if r[21]==NULL goto 146
REG[21] =  i:22
 136 IsNull          22  146    0               00 if r[22]==NULL goto 146
REG[22] =  i:22
 137 IsNull          23  146    0               00 if r[23]==NULL goto 146
REG[23] =  i:22
 138 IsNull          24  146    0               00 if r[24]==NULL goto 146
REG[24] =  i:22
 139 IsNull          25  146    0               00 if r[25]==NULL goto 146
REG[25] =  i:22
 140 Next             3  142    0               00 
 141 Goto             0  146    0               00 
 146 Next             1   92    0               00 
 147 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
 148 IfPos            1  150    0               00 if r[1]>0 then r[1]-=0, goto 150
REG[1] =  i:100
 150 Count            2    3    0               00 r[3]=count()
REG[3] =  i:1
 151 Eq               8  156    3               90 if r[8]==r[3] goto 156
REG[8] =  i:1
REG[3] =  i:1
 156 IfPos            1  158    0               00 if r[1]>0 then r[1]-=0, goto 158
REG[1] =  i:100
 158 Count            3    3    0               00 r[3]=count()
REG[3] =  i:1
 159 Eq               9  164    3               90 if r[9]==r[3] goto 164
REG[9] =  i:1
REG[3] =  i:1
 164 IfPos            1  166    0               00 if r[1]>0 then r[1]-=0, goto 166
REG[1] =  i:100
 166 IntegrityCk      2    1    1 ]             01 
 167 IsNull           2  172    0               00 if r[2]==NULL goto 172
REG[2] =  NULL
 172 AddImm           1 -100    0               00 r[1]=r[1]+-100
REG[1] =  i:100
 173 If               1  176    0               00 
REG[1] =  i:0
 174 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
 175 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
 176 Halt             0    0    0               00 
SQL: [;INSERT INTO seq(i, t2) VALUES (0, $x), (0, 0);]
VDBE Trace:
   0 Init             0   29    0               00 Start at 29
  29 Transaction      0    1   12 1             01 usesStmtJournal=1
  30 TableLock        0   11    1 seq           00 iDb=0 root=11 write=1
  31 Goto             0    1    0               00 
   1 InitCoroutine    4    9    2               00 
   9 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
  10 OpenWrite        0   11    0 2             00 root=11 iDb=0; seq
  11 OpenWrite        1   12    0 k(2,,)        00 root=12 iDb=0; sqlite_autoindex_seq_1
  12 Yield            4   25    0               00 
REG[4] =  i:1
REG[4] =  i:12
   2 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   3 Variable         1    3    0 $x            00 r[3]=parameter(1,$x)
REG[3] =  NULL
   4 Yield            4    0    0               00 
REG[4] =  i:12
REG[4] =  i:4
  13 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
  14 Affinity         2    2    0 AE            00 affinity(r[2..3])
  15 SCopy            3    7    0               00 r[7]=r[3]; t2
REG[7] =  NULL
  16 IntCopy          1    8    0               00 r[8]=r[1]; rowid
REG[8] =  i:1
  17 MakeRecord       7    2    6               00 r[6]=mkrec(r[7..8]); for sqlite_autoindex_seq_1
REG[6] =  s3[030009...](8)
  18 NoConflict       1   20    7 1             00 key=r[7]
REG[7] =  NULL
  20 IdxInsert        1    6    0               10 key=r[6]
REG[6] =  s3[030009...](8)
  21 MakeRecord       2    2   10               00 r[10]=mkrec(r[2..3])
REG[10] =  s3[030800...](8)
  22 Insert           0   10    1 seq           1B intkey=r[1] data=r[10]
REG[10] =  s3[030800...](8)
REG[1] =  i:1
  23 AddImm           5    1    0               00 r[5]=r[5]+1
REG[5] =  i:0
  24 Goto             0   12    0               00 
  12 Yield            4   25    0               00 
REG[4] =  i:4
REG[4] =  i:12
   5 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   6 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
   7 Yield            4    0    0               00 
REG[4] =  i:12
REG[4] =  i:7
  13 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
  14 Affinity         2    2    0 AE            00 affinity(r[2..3])
  15 SCopy            3    7    0               00 r[7]=r[3]; t2
REG[7] =  i:0
  16 IntCopy          1    8    0               00 r[8]=r[1]; rowid
REG[8] =  i:2
  17 MakeRecord       7    2    6               00 r[6]=mkrec(r[7..8]); for sqlite_autoindex_seq_1
REG[6] =  s4[03080102....](8)
  18 NoConflict       1   20    7 1             00 key=r[7]
REG[7] =  i:0
  20 IdxInsert        1    6    0               10 key=r[6]
REG[6] =  s4[03080102....](8)
  21 MakeRecord       2    2   10               00 r[10]=mkrec(r[2..3])
REG[10] =  s3[030808...](8)
  22 Insert           0   10    1 seq           1B intkey=r[1] data=r[10]
REG[10] =  s3[030808...](8)
REG[1] =  i:2
  23 AddImm           5    1    0               00 r[5]=r[5]+1
REG[5] =  i:1
  24 Goto             0   12    0               00 
  12 Yield            4   25    0               00 
REG[4] =  i:7
REG[4] =  i:12
   8 EndCoroutine     4    0    0               00 
REG[4] =  i:12
  25 Close            0    0    0               00 
  26 Close            1    0    0               00 
  27 ResultRow        5    1    0               00 output=r[5]
REG[5] =  i:2
  28 Halt             0    0    0               00 
SQL: [;UPDATE OR REPLACE v3 SET xyz = 1;]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      0    1   12 1             01 usesStmtJournal=0
  35 TableLock        0    4    1 v3            00 iDb=0 root=4 write=1
  36 Goto             0    1    0               00 
   1 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
   2 OpenRead         0    4    0 0             00 root=4 iDb=0; v3
   3 Explain          0    0    0 SCAN TABLE v3 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:1
   6 RowSetAdd        2    3    0               00 rowset(2)=r[3]
REG[2] =  NULL
REG[3] =  i:1
   7 Next             0    5    0               01 
   5 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:2
   6 RowSetAdd        2    3    0               00 rowset(2)=r[3]
REG[2] =  (rowset)
REG[3] =  i:2
   7 Next             0    5    0               01 
   5 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:3
   6 RowSetAdd        2    3    0               00 rowset(2)=r[3]
REG[2] =  (rowset)
REG[3] =  i:3
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  10 OpenWrite        0    4    0 2             00 root=4 iDb=0; v3
  11 OpenWrite        1    8    0 k(2,,)        00 root=8 iDb=0; c
  12 RowSetRead       2   30    3               00 r[3]=rowset(2)
REG[2] =  (rowset)
REG[3] =  i:1
  13 NotExists        0   12    3               00 intkey=r[3]
REG[3] =  i:1
  14 Column           0    0    4               00 r[4]=v3.x
REG[4] =  i:9
  15 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  16 Affinity         4    2    0 DD            00 affinity(r[4..5])
  17 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:9
  18 Function0        0    9    7 abs(1)        01 r[7]=func(r[9]); c column 0
REG[9] =  i:9
REG[7] =  i:9
  19 IntCopy          3    8    0               00 r[8]=r[3]; rowid
REG[8] =  i:1
  20 MakeRecord       7    2    1               00 r[1]=mkrec(r[7..8]); for c
REG[1] =  s4[03010909....](8)
  21 Copy             4   10    0               00 r[10]=r[4]
REG[10] =  i:9
  22 Function0        0   10    7 abs(1)        01 r[7]=func(r[10])
REG[10] =  i:9
REG[7] =  i:9
  23 Rowid            0    8    0               00 r[8]=rowid
REG[8] =  i:1
  24 IdxDelete        1    7    2               00 key=r[7..8]
  25 IdxInsert        1    1    0               00 key=r[1]
REG[1] =  s4[03010909....](8)
  26 MakeRecord       4    2   11               00 r[11]=mkrec(r[4..5])
REG[11] =  s4[03010909....](8)
  27 Insert           0   11    3 v3            05 intkey=r[3] data=r[11]
REG[11] =  s4[03010909....](8)
REG[3] =  i:1
  28 AddImm           6    1    0               00 r[6]=r[6]+1
REG[6] =  i:0
  29 Goto             0   12    0               00 
  12 RowSetRead       2   30    3               00 r[3]=rowset(2)
REG[2] =  (rowset)
REG[3] =  i:2
  13 NotExists        0   12    3               00 intkey=r[3]
REG[3] =  i:2
  14 Column           0    0    4               00 r[4]=v3.x
REG[4] =  NULL
  15 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  16 Affinity         4    2    0 DD            00 affinity(r[4..5])
  17 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  NULL
  18 Function         0    9    7 abs(1)        01 r[7]=func(r[9]); c column 0
REG[9] =  NULL
REG[7] =  NULL
  19 IntCopy          3    8    0               00 r[8]=r[3]; rowid
REG[8] =  i:2
  20 MakeRecord       7    2    1               00 r[1]=mkrec(r[7..8]); for c
REG[1] =  s4[03000102....](8)
  21 Copy             4   10    0               00 r[10]=r[4]
REG[10] =  NULL
  22 Function         0   10    7 abs(1)        01 r[7]=func(r[10])
REG[10] =  NULL
REG[7] =  NULL
  23 Rowid            0    8    0               00 r[8]=rowid
REG[8] =  i:2
  24 IdxDelete        1    7    2               00 key=r[7..8]
  25 IdxInsert        1    1    0               00 key=r[1]
REG[1] =  s4[03000102....](8)
  26 MakeRecord       4    2   11               00 r[11]=mkrec(r[4..5])
REG[11] =  s3[030009...](8)
  27 Insert           0   11    3 v3            05 intkey=r[3] data=r[11]
REG[11] =  s3[030009...](8)
REG[3] =  i:2
  28 AddImm           6    1    0               00 r[6]=r[6]+1
REG[6] =  i:1
  29 Goto             0   12    0               00 
  12 RowSetRead       2   30    3               00 r[3]=rowset(2)
REG[2] =  (rowset)
REG[3] =  i:3
  13 NotExists        0   12    3               00 intkey=r[3]
REG[3] =  i:3
  14 Column           0    0    4               00 r[4]=v3.x
REG[4] =  i:14
  15 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  16 Affinity         4    2    0 DD            00 affinity(r[4..5])
  17 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:14
  18 Function         0    9    7 abs(1)        01 r[7]=func(r[9]); c column 0
REG[9] =  i:14
REG[7] =  i:14
  19 IntCopy          3    8    0               00 r[8]=r[3]; rowid
REG[8] =  i:3
  20 MakeRecord       7    2    1               00 r[1]=mkrec(r[7..8]); for c
REG[1] =  s5[0301010E03.....](8)
  21 Copy             4   10    0               00 r[10]=r[4]
REG[10] =  i:14
  22 Function         0   10    7 abs(1)        01 r[7]=func(r[10])
REG[10] =  i:14
REG[7] =  i:14
  23 Rowid            0    8    0               00 r[8]=rowid
REG[8] =  i:3
  24 IdxDelete        1    7    2               00 key=r[7..8]
  25 IdxInsert        1    1    0               00 key=r[1]
REG[1] =  s5[0301010E03.....](8)
  26 MakeRecord       4    2   11               00 r[11]=mkrec(r[4..5])
REG[11] =  s4[0301090E....](8)
  27 Insert           0   11    3 v3            05 intkey=r[3] data=r[11]
REG[11] =  s4[0301090E....](8)
REG[3] =  i:3
  28 AddImm           6    1    0               00 r[6]=r[6]+1
REG[6] =  i:2
  29 Goto             0   12    0               00 
  12 RowSetRead       2   30    3               00 r[3]=rowset(2)
REG[2] =  (rowset)
REG[3] =  i:3
  30 Close            1    0    0               00 
  31 Close            0    0    0               00 
  32 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:3
  33 Halt             0    0    0               00 
SQL: [;UPDATE OR REPLACE v3 SET x = 1;]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      0    1   12 1             01 usesStmtJournal=0
  35 TableLock        0    4    1 v3            00 iDb=0 root=4 write=1
  36 Goto             0    1    0               00 
   1 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
   2 OpenRead         0    4    0 0             00 root=4 iDb=0; v3
   3 Explain          0    0    0 SCAN TABLE v3 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:1
   6 RowSetAdd        2    3    0               00 rowset(2)=r[3]
REG[2] =  NULL
REG[3] =  i:1
   7 Next             0    5    0               01 
   5 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:2
   6 RowSetAdd        2    3    0               00 rowset(2)=r[3]
REG[2] =  (rowset)
REG[3] =  i:2
   7 Next             0    5    0               01 
   5 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:3
   6 RowSetAdd        2    3    0               00 rowset(2)=r[3]
REG[2] =  (rowset)
REG[3] =  i:3
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  10 OpenWrite        0    4    0 2             00 root=4 iDb=0; v3
  11 OpenWrite        1    8    0 k(2,,)        00 root=8 iDb=0; c
  12 RowSetRead       2   30    3               00 r[3]=rowset(2)
REG[2] =  (rowset)
REG[3] =  i:1
  13 NotExists        0   12    3               00 intkey=r[3]
REG[3] =  i:1
  14 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  15 Column           0    1    5               00 r[5]=v3.xyz
REG[5] =  i:1
  16 Affinity         4    2    0 DD            00 affinity(r[4..5])
  17 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:1
  18 Function0        0    9    7 abs(1)        01 r[7]=func(r[9]); c column 0
REG[9] =  i:1
REG[7] =  i:1
  19 IntCopy          3    8    0               00 r[8]=r[3]; rowid
REG[8] =  i:1
  20 MakeRecord       7    2    1               00 r[1]=mkrec(r[7..8]); for c
REG[1] =  s3[030909...](8)
  21 Column           0    0   10               00 r[10]=v3.x
REG[10] =  i:9
  22 Function0        0   10    7 abs(1)        01 r[7]=func(r[10])
REG[10] =  i:9
REG[7] =  i:9
  23 Rowid            0    8    0               00 r[8]=rowid
REG[8] =  i:1
  24 IdxDelete        1    7    2               00 key=r[7..8]
  25 IdxInsert        1    1    0               00 key=r[1]
REG[1] =  s3[030909...](8)
  26 MakeRecord       4    2   11               00 r[11]=mkrec(r[4..5])
REG[11] =  s3[030909...](8)
  27 Insert           0   11    3 v3            05 intkey=r[3] data=r[11]
REG[11] =  s3[030909...](8)
REG[3] =  i:1
  28 AddImm           6    1    0               00 r[6]=r[6]+1
REG[6] =  i:0
  29 Goto             0   12    0               00 
  12 RowSetRead       2   30    3               00 r[3]=rowset(2)
REG[2] =  (rowset)
REG[3] =  i:2
  13 NotExists        0   12    3               00 intkey=r[3]
REG[3] =  i:2
  14 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  15 Column           0    1    5               00 r[5]=v3.xyz
REG[5] =  i:1
  16 Affinity         4    2    0 DD            00 affinity(r[4..5])
  17 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:1
  18 Function         0    9    7 abs(1)        01 r[7]=func(r[9]); c column 0
REG[9] =  i:1
REG[7] =  i:1
  19 IntCopy          3    8    0               00 r[8]=r[3]; rowid
REG[8] =  i:2
  20 MakeRecord       7    2    1               00 r[1]=mkrec(r[7..8]); for c
REG[1] =  s4[03090102....](8)
  21 Column           0    0   10               00 r[10]=v3.x
REG[10] =  NULL
  22 Function         0   10    7 abs(1)        01 r[7]=func(r[10])
REG[10] =  NULL
REG[7] =  NULL
  23 Rowid            0    8    0               00 r[8]=rowid
REG[8] =  i:2
  24 IdxDelete        1    7    2               00 key=r[7..8]
  25 IdxInsert        1    1    0               00 key=r[1]
REG[1] =  s4[03090102....](8)
  26 MakeRecord       4    2   11               00 r[11]=mkrec(r[4..5])
REG[11] =  s3[030909...](8)
  27 Insert           0   11    3 v3            05 intkey=r[3] data=r[11]
REG[11] =  s3[030909...](8)
REG[3] =  i:2
  28 AddImm           6    1    0               00 r[6]=r[6]+1
REG[6] =  i:1
  29 Goto             0   12    0               00 
  12 RowSetRead       2   30    3               00 r[3]=rowset(2)
REG[2] =  (rowset)
REG[3] =  i:3
  13 NotExists        0   12    3               00 intkey=r[3]
REG[3] =  i:3
  14 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  15 Column           0    1    5               00 r[5]=v3.xyz
REG[5] =  i:1
  16 Affinity         4    2    0 DD            00 affinity(r[4..5])
  17 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:1
  18 Function         0    9    7 abs(1)        01 r[7]=func(r[9]); c column 0
REG[9] =  i:1
REG[7] =  i:1
  19 IntCopy          3    8    0               00 r[8]=r[3]; rowid
REG[8] =  i:3
  20 MakeRecord       7    2    1               00 r[1]=mkrec(r[7..8]); for c
REG[1] =  s4[03090103....](8)
  21 Column           0    0   10               00 r[10]=v3.x
REG[10] =  i:14
  22 Function         0   10    7 abs(1)        01 r[7]=func(r[10])
REG[10] =  i:14
REG[7] =  i:14
  23 Rowid            0    8    0               00 r[8]=rowid
REG[8] =  i:3
  24 IdxDelete        1    7    2               00 key=r[7..8]
  25 IdxInsert        1    1    0               00 key=r[1]
REG[1] =  s4[03090103....](8)
  26 MakeRecord       4    2   11               00 r[11]=mkrec(r[4..5])
REG[11] =  s3[030909...](8)
  27 Insert           0   11    3 v3            05 intkey=r[3] data=r[11]
REG[11] =  s3[030909...](8)
REG[3] =  i:3
  28 AddImm           6    1    0               00 r[6]=r[6]+1
REG[6] =  i:2
  29 Goto             0   12    0               00 
  12 RowSetRead       2   30    3               00 r[3]=rowset(2)
REG[2] =  (rowset)
REG[3] =  i:3
  30 Close            1    0    0               00 
  31 Close            0    0    0               00 
  32 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:3
  33 Halt             0    0    0               00 
SQL: [;CREATE TABLE ab (counter, u REAL PRIMARY KEY);]
VDBE Trace:
   0 Init             0   46    0               00 Start at 46
  46 Transaction      0    1   12 1             01 usesStmtJournal=0
  47 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  48 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:6
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:12
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:12
  10 Close            0    0    0               00 
  11 Noop             0   25    0               00 
  12 CreateIndex      0    4    0               00 r[4]=root iDb=0
REG[4] =  i:9
  13 Integer          0   11    0               00 r[11]=0
REG[11] =  i:0
  14 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  15 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:13
  16 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  17 String8          0    7    0 sqlite_autoindex_ab_1 00 r[7]='sqlite_autoindex_ab_1'
REG[7] =   t21[sqlite_autoinde](8)
  18 String8          0    8    0 ab            00 r[8]='ab'
REG[8] =   t2[ab](8)
  19 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:9
  20 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  21 MakeRecord       6    5   12 BBBDB         00 r[12]=mkrec(r[6..10])
REG[12] =  s35[061737110100696E64657873716C6974..7...indexsqlit](8)
  22 Insert           1   12    5               18 intkey=r[5] data=r[12]
REG[12] =  s35[061737110100696E64657873716C6974..7...indexsqlit](8)
REG[5] =  i:13
  23 AddImm          11    1    0               00 r[11]=r[11]+1
REG[11] =  i:0
  24 Close            1    0    0               00 
  25 Close            0    0    0               00 
  26 Null             0   13   14               00 r[13..14]=NULL
REG[13] =  NULL
  27 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  28 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  29 MustBeInt        1   32    0               00 
REG[1] =  i:12
  30 NotExists        2   32    1               00 intkey=r[1]; pk
REG[1] =  i:12
  31 Rowid            2   14    0               00 r[14]=rowid
REG[14] =  i:12
  32 Integer          0   21    0               00 r[21]=0
REG[21] =  i:0
  33 IsNull          14   42    0               00 if r[14]==NULL goto 42
REG[14] =  i:12
  34 String8          0   15    0 table         00 r[15]='table'
REG[15] =   t5[table](8)
  35 String8          0   16    0 ab            00 r[16]='ab'
REG[16] =   t2[ab](8)
  36 String8          0   17    0 ab            00 r[17]='ab'
REG[17] =   t2[ab](8)
  37 Copy             2   18    0               00 r[18]=r[2]
REG[18] =  i:6
  38 String8          0   19    0 CREATE TABLE ab (counter, u REAL PRIMARY KEY) 00 r[19]='CREATE TABLE ab (counter, u REAL PRIMARY KEY)'
REG[19] =   t45[CREATE TABLE ab](8)
  39 MakeRecord      15    5   20 BBBDB         00 r[20]=mkrec(r[15..19])
REG[20] =  s61[0617111101677461626C656162616206.....gtableabab.](8)
  40 Insert           2   20   14               00 intkey=r[14] data=r[20]
REG[20] =  s61[0617111101677461626C656162616206.....gtableabab.](8)
REG[14] =  i:12
  41 AddImm          21    1    0               00 r[21]=r[21]+1
REG[21] =  i:0
  42 Close            2    0    0               00 
  43 SetCookie        0    1   13               00 
  44 ParseSchema      0    0    0 tbl_name='ab' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0   13 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 ab            00 r[2]='ab'
REG[2] =   t2[ab](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[ab](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[ab](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[ab](8)
REG[1] =   s2[v3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[ab](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[ab](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[ab](8)
REG[1] =   s2[v3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[seq](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[ab](8)
REG[1] =   s3[seq](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[seq](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[ab](8)
REG[1] =   s3[seq](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[ab](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[ab](8)
REG[1] =   s2[ab](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[ab](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:6
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s45[CREATE TABLE ab](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[ab](8)
REG[6] =  i:6
REG[7] =   s45[CREATE TABLE ab](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[ab](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[ab](8)
REG[1] =   s2[ab](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s21[sqlite_autoinde](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:9
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =  NULL
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s21[sqlite_autoinde](8)
REG[6] =  i:9
REG[7] =  NULL
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  45 Halt             0    0    0               00 
SQL: [;
;DROP TABLE IF EXISTS seq;]
VDBE Trace:
   0 Init             0   71    0               00 Start at 71
  71 Transaction      0    1   13 1             01 usesStmtJournal=1
  72 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  73 String8          0    4    0 seq           00 r[4]='seq'
REG[4] =   t3[seq](8)
  74 String8          0    6    0 trigger       00 r[6]='trigger'
REG[6] =   t7[trigger](8)
  75 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   5 Rewind           0   15    0               00 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[v0](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t3[seq](8)
REG[3] =   s2[v0](8)
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s15[sqlite_sequence](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t3[seq](8)
REG[3] =   s15[sqlite_sequence](8)
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[v3](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t3[seq](8)
REG[3] =   s2[v3](8)
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[v0](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t3[seq](8)
REG[3] =   s2[v0](8)
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[v0](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t3[seq](8)
REG[3] =   s2[v0](8)
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[v3](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t3[seq](8)
REG[3] =   s2[v3](8)
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s3[seq](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t3[seq](8)
REG[3] =   s3[seq](8)
   8 Column           0    0    5               00 r[5]=sqlite_master.type
REG[5] =   s5[table](8)
   9 Eq               6   14    5 (BINARY)      52 if r[6]==r[5] goto 14
REG[6] =   t7[trigger](8)
REG[5] =   s5[table](8)
  10 AddImm           1    1    0               00 r[1]=r[1]+1
REG[1] =  i:0
  11 Rowid            0    7    0               00 r[7]=rowid
REG[7] =  i:10
  12 Once             0   13    0               00 
  13 Delete           0    0    0 sqlite_master 02 
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s3[seq](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t3[seq](8)
REG[3] =   s3[seq](8)
   8 Column           0    0    5               00 r[5]=sqlite_master.type
REG[5] =   s5[index](8)
   9 Eq               6   14    5 (BINARY)      52 if r[6]==r[5] goto 14
REG[6] =   t7[trigger](8)
REG[5] =   s5[index](8)
  10 AddImm           1    1    0               00 r[1]=r[1]+1
REG[1] =  i:1
  11 Rowid            0    7    0               00 r[7]=rowid
REG[7] =  i:11
  12 Once             0   13    0               00 
  13 Delete           0    0    0 sqlite_master 02 
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[ab](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t3[seq](8)
REG[3] =   s2[ab](8)
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[ab](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t3[seq](8)
REG[3] =   s2[ab](8)
  14 Next             0    6    0               01 
  15 Close            0    0    0               00 
  16 Destroy         12    5    0               00 
REG[5] =  i:0
  17 Null             0    8    9               00 r[8..9]=NULL
REG[8] =  NULL
  18 IfNot            5   27    1               00 
REG[5] =  i:0
  27 Close            1    0    0               00 
  28 Integer          0   16    0               00 r[16]=0
REG[16] =  i:0
  29 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  30 RowSetRead       8   41    9               00 r[9]=rowset(8)
REG[8] =  NULL
REG[9] =  NULL
  41 Close            1    0    0               00 
  42 Destroy         11    5    0               00 
REG[5] =  i:0
  43 Null             0   17   18               00 r[17..18]=NULL
REG[17] =  NULL
  44 IfNot            5   53    1               00 
REG[5] =  i:0
  53 Close            2    0    0               00 
  54 Integer          0   25    0               00 r[25]=0
REG[25] =  i:0
  55 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  56 RowSetRead      17   67   18               00 r[18]=rowset(17)
REG[17] =  NULL
REG[18] =  NULL
  67 Close            2    0    0               00 
  68 DropTable        0    0    0 seq           00 
  69 SetCookie        0    1   14               00 
  70 Halt             0    0    0               00 
SQL: [;UPDATE v3 SET xyz = NULL;]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      0    1   14 1             01 usesStmtJournal=0
  35 TableLock        0    4    1 v3            00 iDb=0 root=4 write=1
  36 Goto             0    1    0               00 
   1 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
   2 OpenRead         0    4    0 0             00 root=4 iDb=0; v3
   3 Explain          0    0    0 SCAN TABLE v3 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:1
   6 RowSetAdd        2    3    0               00 rowset(2)=r[3]
REG[2] =  NULL
REG[3] =  i:1
   7 Next             0    5    0               01 
   5 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:2
   6 RowSetAdd        2    3    0               00 rowset(2)=r[3]
REG[2] =  (rowset)
REG[3] =  i:2
   7 Next             0    5    0               01 
   5 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:3
   6 RowSetAdd        2    3    0               00 rowset(2)=r[3]
REG[2] =  (rowset)
REG[3] =  i:3
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  10 OpenWrite        0    4    0 2             00 root=4 iDb=0; v3
  11 OpenWrite        1    8    0 k(2,,)        00 root=8 iDb=0; c
  12 RowSetRead       2   30    3               00 r[3]=rowset(2)
REG[2] =  (rowset)
REG[3] =  i:1
  13 NotExists        0   12    3               00 intkey=r[3]
REG[3] =  i:1
  14 Column           0    0    4               00 r[4]=v3.x
REG[4] =  i:1
  15 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  16 Affinity         4    2    0 DD            00 affinity(r[4..5])
  17 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:1
  18 Function0        0    9    7 abs(1)        01 r[7]=func(r[9]); c column 0
REG[9] =  i:1
REG[7] =  i:1
  19 IntCopy          3    8    0               00 r[8]=r[3]; rowid
REG[8] =  i:1
  20 MakeRecord       7    2    1               00 r[1]=mkrec(r[7..8]); for c
REG[1] =  s3[030909...](8)
  21 Copy             4   10    0               00 r[10]=r[4]
REG[10] =  i:1
  22 Function0        0   10    7 abs(1)        01 r[7]=func(r[10])
REG[10] =  i:1
REG[7] =  i:1
  23 Rowid            0    8    0               00 r[8]=rowid
REG[8] =  i:1
  24 IdxDelete        1    7    2               00 key=r[7..8]
  25 IdxInsert        1    1    0               00 key=r[1]
REG[1] =  s3[030909...](8)
  26 MakeRecord       4    2   11               00 r[11]=mkrec(r[4..5])
REG[11] =  s3[030900...](8)
  27 Insert           0   11    3 v3            05 intkey=r[3] data=r[11]
REG[11] =  s3[030900...](8)
REG[3] =  i:1
  28 AddImm           6    1    0               00 r[6]=r[6]+1
REG[6] =  i:0
  29 Goto             0   12    0               00 
  12 RowSetRead       2   30    3               00 r[3]=rowset(2)
REG[2] =  (rowset)
REG[3] =  i:2
  13 NotExists        0   12    3               00 intkey=r[3]
REG[3] =  i:2
  14 Column           0    0    4               00 r[4]=v3.x
REG[4] =  i:1
  15 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  16 Affinity         4    2    0 DD            00 affinity(r[4..5])
  17 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:1
  18 Function         0    9    7 abs(1)        01 r[7]=func(r[9]); c column 0
REG[9] =  i:1
REG[7] =  i:1
  19 IntCopy          3    8    0               00 r[8]=r[3]; rowid
REG[8] =  i:2
  20 MakeRecord       7    2    1               00 r[1]=mkrec(r[7..8]); for c
REG[1] =  s4[03090102....](8)
  21 Copy             4   10    0               00 r[10]=r[4]
REG[10] =  i:1
  22 Function         0   10    7 abs(1)        01 r[7]=func(r[10])
REG[10] =  i:1
REG[7] =  i:1
  23 Rowid            0    8    0               00 r[8]=rowid
REG[8] =  i:2
  24 IdxDelete        1    7    2               00 key=r[7..8]
  25 IdxInsert        1    1    0               00 key=r[1]
REG[1] =  s4[03090102....](8)
  26 MakeRecord       4    2   11               00 r[11]=mkrec(r[4..5])
REG[11] =  s3[030900...](8)
  27 Insert           0   11    3 v3            05 intkey=r[3] data=r[11]
REG[11] =  s3[030900...](8)
REG[3] =  i:2
  28 AddImm           6    1    0               00 r[6]=r[6]+1
REG[6] =  i:1
  29 Goto             0   12    0               00 
  12 RowSetRead       2   30    3               00 r[3]=rowset(2)
REG[2] =  (rowset)
REG[3] =  i:3
  13 NotExists        0   12    3               00 intkey=r[3]
REG[3] =  i:3
  14 Column           0    0    4               00 r[4]=v3.x
REG[4] =  i:1
  15 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  16 Affinity         4    2    0 DD            00 affinity(r[4..5])
  17 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:1
  18 Function         0    9    7 abs(1)        01 r[7]=func(r[9]); c column 0
REG[9] =  i:1
REG[7] =  i:1
  19 IntCopy          3    8    0               00 r[8]=r[3]; rowid
REG[8] =  i:3
  20 MakeRecord       7    2    1               00 r[1]=mkrec(r[7..8]); for c
REG[1] =  s4[03090103....](8)
  21 Copy             4   10    0               00 r[10]=r[4]
REG[10] =  i:1
  22 Function         0   10    7 abs(1)        01 r[7]=func(r[10])
REG[10] =  i:1
REG[7] =  i:1
  23 Rowid            0    8    0               00 r[8]=rowid
REG[8] =  i:3
  24 IdxDelete        1    7    2               00 key=r[7..8]
  25 IdxInsert        1    1    0               00 key=r[1]
REG[1] =  s4[03090103....](8)
  26 MakeRecord       4    2   11               00 r[11]=mkrec(r[4..5])
REG[11] =  s3[030900...](8)
  27 Insert           0   11    3 v3            05 intkey=r[3] data=r[11]
REG[11] =  s3[030900...](8)
REG[3] =  i:3
  28 AddImm           6    1    0               00 r[6]=r[6]+1
REG[6] =  i:2
  29 Goto             0   12    0               00 
  12 RowSetRead       2   30    3               00 r[3]=rowset(2)
REG[2] =  (rowset)
REG[3] =  i:3
  30 Close            1    0    0               00 
  31 Close            0    0    0               00 
  32 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:3
  33 Halt             0    0    0               00 
SQL: [;INSERT INTO ab(counter, counter) VALUES (0, $x), (0, 0);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1   14 1             01 usesStmtJournal=1
  31 TableLock        0    6    1 ab            00 iDb=0 root=6 write=1
  32 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  33 Goto             0    1    0               00 
   1 InitCoroutine    4    9    2               00 
   9 Integer          0    9    0               00 r[9]=0
REG[9] =  i:0
  10 OpenWrite        0    6    0 2             00 root=6 iDb=0; ab
  11 OpenWrite        1    9    0 k(2,,)        00 root=9 iDb=0; sqlite_autoindex_ab_1
  12 Yield            4   26    0               00 
REG[4] =  i:1
REG[4] =  i:12
   2 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   3 Variable         1    6    0 $x            00 r[6]=parameter(1,$x)
REG[6] =  NULL
   4 Yield            4    0    0               00 
REG[4] =  i:12
REG[4] =  i:4
  13 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
  14 SCopy            5    2    0               00 r[2]=r[5]
REG[2] =  i:0
  15 Affinity         2    2    0 AE            00 affinity(r[2..3])
  16 SCopy            3   11    0               00 r[11]=r[3]; u
REG[11] =  NULL
  17 IntCopy          1   12    0               00 r[12]=r[1]; rowid
REG[12] =  i:1
  18 MakeRecord      11    2   10               00 r[10]=mkrec(r[11..12]); for sqlite_autoindex_ab_1
REG[10] =  s3[030009...](8)
  19 NoConflict       1   21   11 1             00 key=r[11]
REG[11] =  NULL
  21 IdxInsert        1   10    0               10 key=r[10]
REG[10] =  s3[030009...](8)
  22 MakeRecord       2    2   14               00 r[14]=mkrec(r[2..3])
REG[14] =  s3[030800...](8)
  23 Insert           0   14    1 ab            1B intkey=r[1] data=r[14]
REG[14] =  s3[030800...](8)
REG[1] =  i:1
  24 AddImm           9    1    0               00 r[9]=r[9]+1
REG[9] =  i:0
  25 Goto             0   12    0               00 
  12 Yield            4   26    0               00 
REG[4] =  i:4
REG[4] =  i:12
   5 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   6 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
   7 Yield            4    0    0               00 
REG[4] =  i:12
REG[4] =  i:7
  13 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
  14 SCopy            5    2    0               00 r[2]=r[5]
REG[2] =  i:0
  15 Affinity         2    2    0 AE            00 affinity(r[2..3])
  16 SCopy            3   11    0               00 r[11]=r[3]; u
REG[11] =  NULL
  17 IntCopy          1   12    0               00 r[12]=r[1]; rowid
REG[12] =  i:2
  18 MakeRecord      11    2   10               00 r[10]=mkrec(r[11..12]); for sqlite_autoindex_ab_1
REG[10] =  s4[03000102....](8)
  19 NoConflict       1   21   11 1             00 key=r[11]
REG[11] =  NULL
  21 IdxInsert        1   10    0               10 key=r[10]
REG[10] =  s4[03000102....](8)
  22 MakeRecord       2    2   14               00 r[14]=mkrec(r[2..3])
REG[14] =  s3[030800...](8)
  23 Insert           0   14    1 ab            1B intkey=r[1] data=r[14]
REG[14] =  s3[030800...](8)
REG[1] =  i:2
  24 AddImm           9    1    0               00 r[9]=r[9]+1
REG[9] =  i:1
  25 Goto             0   12    0               00 
  12 Yield            4   26    0               00 
REG[4] =  i:7
REG[4] =  i:12
   8 EndCoroutine     4    0    0               00 
REG[4] =  i:12
  26 Close            0    0    0               00 
  27 Close            1    0    0               00 
  28 ResultRow        9    1    0               00 output=r[9]
REG[9] =  i:2
  29 Halt             0    0    0               00 
SQL: [;UPDATE ab SET counter = NULL;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    1   14 1             01 usesStmtJournal=0
  24 TableLock        0    6    1 ab            00 iDb=0 root=6 write=1
  25 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    6    0 0             00 root=6 iDb=0; ab
   3 Explain          0    0    0 SCAN TABLE ab 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:2
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
  10 OpenWrite        0    6    0 2             00 root=6 iDb=0; ab
  11 RowSetRead       1   20    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  12 NotExists        0   11    2               00 intkey=r[2]
REG[2] =  i:1
  13 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  14 Column           0    1    4               00 r[4]=ab.u
REG[4] =  NULL
  15 RealAffinity     4    0    0               00 
REG[4] =  NULL
  16 MakeRecord       3    2    6 AE            00 r[6]=mkrec(r[3..4])
REG[6] =  s3[030000...](8)
  17 Insert           0    6    2 ab            05 intkey=r[2] data=r[6]
REG[6] =  s3[030000...](8)
REG[2] =  i:1
  18 AddImm           5    1    0               00 r[5]=r[5]+1
REG[5] =  i:0
  19 Goto             0   11    0               00 
  11 RowSetRead       1   20    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  12 NotExists        0   11    2               00 intkey=r[2]
REG[2] =  i:2
  13 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  14 Column           0    1    4               00 r[4]=ab.u
REG[4] =  NULL
  15 RealAffinity     4    0    0               00 
REG[4] =  NULL
  16 MakeRecord       3    2    6 AE            00 r[6]=mkrec(r[3..4])
REG[6] =  s3[030000...](8)
  17 Insert           0    6    2 ab            05 intkey=r[2] data=r[6]
REG[6] =  s3[030000...](8)
REG[2] =  i:2
  18 AddImm           5    1    0               00 r[5]=r[5]+1
REG[5] =  i:1
  19 Goto             0   11    0               00 
  11 RowSetRead       1   20    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  20 Close            0    0    0               00 
  21 ResultRow        5    1    0               00 output=r[5]
REG[5] =  i:2
  22 Halt             0    0    0               00 
SQL: [;
;DROP TABLE IF EXISTS ab;]
VDBE Trace:
   0 Init             0   71    0               00 Start at 71
  71 Transaction      0    1   14 1             01 usesStmtJournal=1
  72 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  73 String8          0    4    0 ab            00 r[4]='ab'
REG[4] =   t2[ab](8)
  74 String8          0    6    0 trigger       00 r[6]='trigger'
REG[6] =   t7[trigger](8)
  75 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   5 Rewind           0   15    0               00 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[v0](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t2[ab](8)
REG[3] =   s2[v0](8)
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s15[sqlite_sequence](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t2[ab](8)
REG[3] =   s15[sqlite_sequence](8)
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[v3](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t2[ab](8)
REG[3] =   s2[v3](8)
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[v0](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t2[ab](8)
REG[3] =   s2[v0](8)
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[v0](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t2[ab](8)
REG[3] =   s2[v0](8)
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[v3](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t2[ab](8)
REG[3] =   s2[v3](8)
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[ab](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t2[ab](8)
REG[3] =   s2[ab](8)
   8 Column           0    0    5               00 r[5]=sqlite_master.type
REG[5] =   s5[table](8)
   9 Eq               6   14    5 (BINARY)      52 if r[6]==r[5] goto 14
REG[6] =   t7[trigger](8)
REG[5] =   s5[table](8)
  10 AddImm           1    1    0               00 r[1]=r[1]+1
REG[1] =  i:0
  11 Rowid            0    7    0               00 r[7]=rowid
REG[7] =  i:12
  12 Once             0   13    0               00 
  13 Delete           0    0    0 sqlite_master 02 
  14 Next             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[ab](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t2[ab](8)
REG[3] =   s2[ab](8)
   8 Column           0    0    5               00 r[5]=sqlite_master.type
REG[5] =   s5[index](8)
   9 Eq               6   14    5 (BINARY)      52 if r[6]==r[5] goto 14
REG[6] =   t7[trigger](8)
REG[5] =   s5[index](8)
  10 AddImm           1    1    0               00 r[1]=r[1]+1
REG[1] =  i:1
  11 Rowid            0    7    0               00 r[7]=rowid
REG[7] =  i:13
  12 Once             0   13    0               00 
  13 Delete           0    0    0 sqlite_master 02 
  14 Next             0    6    0               01 
  15 Close            0    0    0               00 
  16 Destroy          9    5    0               00 
REG[5] =  i:0
  17 Null             0    8    9               00 r[8..9]=NULL
REG[8] =  NULL
  18 IfNot            5   27    1               00 
REG[5] =  i:0
  27 Close            1    0    0               00 
  28 Integer          0   16    0               00 r[16]=0
REG[16] =  i:0
  29 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  30 RowSetRead       8   41    9               00 r[9]=rowset(8)
REG[8] =  NULL
REG[9] =  NULL
  41 Close            1    0    0               00 
  42 Destroy          6    5    0               00 
REG[5] =  i:0
  43 Null             0   17   18               00 r[17..18]=NULL
REG[17] =  NULL
  44 IfNot            5   53    1               00 
REG[5] =  i:0
  53 Close            2    0    0               00 
  54 Integer          0   25    0               00 r[25]=0
REG[25] =  i:0
  55 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  56 RowSetRead      17   67   18               00 r[18]=rowset(17)
REG[17] =  NULL
REG[18] =  NULL
  67 Close            2    0    0               00 
  68 DropTable        0    0    0 ab            00 
  69 SetCookie        0    1   15               00 
  70 Halt             0    0    0               00 
SQL: [;UPDATE v0 SET v1 = NULL;]
VDBE Trace:
   0 Init             0   70    0               00 Start at 70
  70 Transaction      0    1   15 1             01 usesStmtJournal=1
  71 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
  72 Goto             0    1    0               00 
   1 Null             0    3    4               00 r[3..4]=NULL
REG[3] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; v0
   3 Explain          0    0    0 SCAN TABLE v0 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:22
   6 RowSetAdd        3    4    0               00 rowset(3)=r[4]
REG[3] =  NULL
REG[4] =  i:22
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  10 OpenWrite        0    2    0 2             00 root=2 iDb=0; v0
  11 OpenWrite        1    7    0 k(2,,)        00 root=7 iDb=0; abc
  12 OpenWrite        2    5    0 k(9,,,,,,,,,) 00 root=5 iDb=0; t1
  13 RowSetRead       3   65    4               00 r[4]=rowset(3)
REG[3] =  (rowset)
REG[4] =  i:22
  14 NotExists        0   13    4               00 intkey=r[4]
REG[4] =  i:22
  15 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  16 MustBeInt        5    0    0               00 
REG[5] =  NULL
SQL: [;UPDATE OR REPLACE v0 SET v1 = 1;]
VDBE Trace:
   0 Init             0   98    0               00 Start at 98
  98 Transaction      0    1   15 1             01 usesStmtJournal=0
  99 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
 100 Goto             0    1    0               00 
   1 Null             0    3    4               00 r[3..4]=NULL
REG[3] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; v0
   3 Explain          0    0    0 SCAN TABLE v0 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:22
   6 RowSetAdd        3    4    0               00 rowset(3)=r[4]
REG[3] =  NULL
REG[4] =  i:22
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  10 OpenWrite        0    2    0 2             00 root=2 iDb=0; v0
  11 OpenWrite        1    7    0 k(2,,)        00 root=7 iDb=0; abc
  12 OpenWrite        2    5    0 k(9,,,,,,,,,) 00 root=5 iDb=0; t1
  13 RowSetRead       3   93    4               00 r[4]=rowset(3)
REG[3] =  (rowset)
REG[4] =  i:22
  14 NotExists        0   13    4               00 intkey=r[4]
REG[4] =  i:22
  15 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  16 MustBeInt        5    0    0               00 
REG[5] =  i:1
  17 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  18 Column           0    1    7               00 r[7]=v0.v2
REG[7] =  NULL
  19 Eq               5   36    4               90 if r[5]==r[4] goto 36
REG[5] =  i:1
REG[4] =  i:22
  20 NotExists        0   36    5               00 intkey=r[5]
REG[5] =  i:1
  36 Affinity         6    2    0 DB            00 affinity(r[6..7])
  37 Add              5    5   11               00 r[11]=r[5]+r[5]
REG[5] =  i:1
REG[5] =  i:1
REG[11] =  i:2
  38 Add              5   11   14               00 r[14]=r[5]+r[11]; abc column 0
REG[5] =  i:1
REG[11] =  i:2
REG[14] =  i:3
  39 IntCopy          5   15    0               00 r[15]=r[5]; rowid
REG[15] =  i:1
  40 MakeRecord      14    2    1               00 r[1]=mkrec(r[14..15]); for abc
REG[1] =  s4[03010903....](8)
  41 SCopy            5   23    0               00 r[23]=r[5]; v1
REG[23] =  i:1
  42 SCopy            5   24    0               00 r[24]=r[5]; v1
REG[24] =  i:1
  43 SCopy            5   25    0               00 r[25]=r[5]; v1
REG[25] =  i:1
  44 SCopy            5   26    0               00 r[26]=r[5]; v1
REG[26] =  i:1
  45 SCopy            5   27    0               00 r[27]=r[5]; v1
REG[27] =  i:1
  46 SCopy            5   28    0               00 r[28]=r[5]; v1
REG[28] =  i:1
  47 SCopy            5   29    0               00 r[29]=r[5]; v1
REG[29] =  i:1
  48 SCopy            5   30    0               00 r[30]=r[5]; v1
REG[30] =  i:1
  49 SCopy            5   31    0               00 r[31]=r[5]; v1
REG[31] =  i:1
  50 IntCopy          5   32    0               00 r[32]=r[5]; rowid
REG[32] =  i:1
  51 MakeRecord      23   10    2               00 r[2]=mkrec(r[23..32]); for t1
REG[2] =  s11[0B09090909090909090909...........](8)
  52 NoConflict       2   71   23 9             00 key=r[23..31]
REG[23] =  i:1
REG[24] =  i:1
REG[25] =  i:1
REG[26] =  i:1
REG[27] =  i:1
REG[28] =  i:1
REG[29] =  i:1
REG[30] =  i:1
REG[31] =  i:1
  71 NotExists        0   87    4               00 intkey=r[4]
REG[4] =  i:22
  72 Add             12   12   11               00 r[11]=r[12]+r[12]

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f19b14aa859 in __GI_abort () at abort.c:79
#2  0x00007f19b14aa729 in __assert_fail_base (fmt=0x7f19b1640588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x212700 "memIsValid(&aMem[pOp->p1])", file=0x222c23 "sqlite3.c", line=77360, function=<optimized out>)
    at assert.c:92
#3  0x00007f19b14bbfd6 in __GI___assert_fail (assertion=0x212700 "memIsValid(&aMem[pOp->p1])", file=0x222c23 "sqlite3.c", line=77360, function=0x213a19 "int sqlite3VdbeExec(Vdbe *)") at assert.c:101
#4  0x00000000003e2946 in sqlite3VdbeExec (p=<optimized out>) at sqlite3.c:77360
#5  0x000000000028b140 in sqlite3_step (pStmt=<optimized out>) at sqlite3.c:75131
#6  0x000000000024b5e9 in main (argc=1, argv=0x7fff193991e8) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 36975] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
