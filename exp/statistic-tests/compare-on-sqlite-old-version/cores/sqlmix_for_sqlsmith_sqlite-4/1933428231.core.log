GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000482,sig:06,src:021250+024809,time:19332234,execs:3342579,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [PRAGMA main.page_size = 65536;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [;PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0    2 1             01 usesStmtJournal=0
  24 Transaction      1    0    0 1             01 usesStmtJournal=0
  25 Goto             0    1    0               00 
   1 Integer        100    1    0               00 r[1]=100
REG[1] =  i:100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
REG[1] =  i:100
   4 IntegrityCk      2    3    1 [2,1,0,-1431655766,-1431655766,-1431655766,-14316 00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
REG[2] =  NULL
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
REG[1] =  i:100
  12 IntegrityCk      2    1    1 ]             01 
  13 IsNull           2   18    0               00 if r[2]==NULL goto 18
REG[2] =  NULL
  18 AddImm           1 -100    0               00 r[1]=r[1]+-100
REG[1] =  i:100
  19 If               1   22    0               00 
REG[1] =  i:0
  20 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
  21 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
  22 Halt             0    0    0               00 
SQL: [;
;UPDATE v0 SET v1=v1;]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      0    1    2 1             01 usesStmtJournal=0
  19 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
  20 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; v0
   3 Explain          0    0    0 SCAN TABLE v0 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 OpenWrite        0    2    0 1             00 root=2 iDb=0; v0
  10 RowSetRead       1   16    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:1
  12 Column           0    0    3               00 r[3]=v0.v1
REG[3] =  s170000[52F4CB9792C7EEE03F03EC4597F0D019R.......?..E....](8)
  13 MakeRecord       3    1    4               00 r[4]=mkrec(r[3])
REG[4] =  s170004[0494E02C52F4CB9792C7EEE03F03EC45...,R.......?..E](8)
  14 Insert           0    4    2 v0            05 intkey=r[2] data=r[4]
REG[4] =  s170004[0494E02C52F4CB9792C7EEE03F03EC45...,R.......?..E](8)
REG[2] =  i:1
  15 Goto             0   10    0               00 
  10 RowSetRead       1   16    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  16 Noop             0    0    0               00 
  17 Halt             0    0    0               00 
SQL: [;PRAGMA count_changes = 1;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;CREATE INDEX t1 on v0("v1"=v1);]
VDBE Trace:
   0 Init             0   37    0               00 Start at 37
  37 Transaction      0    1    2 1             01 usesStmtJournal=0
  38 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  39 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
  40 Goto             0    1    0               00 
   1 Noop             0   36    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:4
   3 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
   4 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   5 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:3
   6 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   7 String8          0    4    0 t1            00 r[4]='t1'
REG[4] =   t2[t1](8)
   8 String8          0    5    0 v0            00 r[5]='v0'
REG[5] =   t2[v0](8)
   9 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:4
  10 String8          0    7    0 CREATE INDEX t1 on v0("v1"=v1) 00 r[7]='CREATE INDEX t1 on v0("v1"=v1)'
REG[7] =   t30[CREATE INDEX t1](8)
  11 MakeRecord       3    5    9 BBBDB         00 r[9]=mkrec(r[3..7])
REG[9] =  s46[061711110149696E6465787431763004.....Iindext1v0.](8)
  12 Insert           0    9    2               18 intkey=r[2] data=r[9]
REG[9] =  s46[061711110149696E6465787431763004.....Iindext1v0.](8)
REG[2] =  i:3
  13 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  14 Close            0    0    0               00 
  15 SorterOpen       3    0    1 k(2,,)        00 
  16 OpenRead         1    2    0 1             00 root=2 iDb=0; v0
  17 Rewind           1   24    0               00 
  18 Column           1    0   13               00 r[13]=v0.v1
REG[13] =  s170000[52F4CB9792C7EEE03F03EC4597F0D019R.......?..E....](8)
  19 Eq              13   11   13 (BINARY)      61 if r[13]==r[13] goto 11
REG[13] =  s170000[52F4CB9792C7EEE03F03EC4597F0D019R.......?..E....](8)
REG[13] =  s170000[52F4CB9792C7EEE03F03EC4597F0D019R.......?..E....](8)
REG[11] =  i:1
  20 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:1
  21 MakeRecord      11    2   10               00 r[10]=mkrec(r[11..12])
REG[10] =  s3[030909...](8)
  22 SorterInsert     3   10    0               00 
REG[10] =  s3[030909...](8)
  23 Next             1   18    0               00 
  24 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  25 SorterSort       3   30    0               00 
  26 SorterData       3   10    2               00 r[10]=data
  27 Last             2    0   -1               00 
  28 IdxInsert        2   10    0               10 key=r[10]
REG[10] =  s3[030909...](8)
  29 SorterNext       3   26    0               00 
  30 Close            1    0    0               00 
  31 Close            2    0    0               00 
  32 Close            3    0    0               00 
  33 SetCookie        0    1    3               00 
  34 ParseSchema      0    0    0 name='t1' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[v2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s30[CREATE INDEX t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:4
REG[7] =   s30[CREATE INDEX t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  35 Expire           0    0    0               00 
  36 Halt             0    0    0               00 
SQL: [;PRAGMA journal_mode = WAL;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 JournalMode      1    1    5               00 
REG[1] =   t6[delete](8)
   2 JournalMode      0    1    5               00 
REG[1] =   t6[memory](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t6[memory](8)
   4 Halt             0    0    0               00 
SQL: [;CREATE INDEX a ON v0(v1+v1+v1);]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      0    1    3 1             01 usesStmtJournal=0
  39 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  40 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
  41 Goto             0    1    0               00 
   1 Noop             0   37    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:5
   3 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
   4 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   5 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:4
   6 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   7 String8          0    4    0 a             00 r[4]='a'
REG[4] =   t1[a](8)
   8 String8          0    5    0 v0            00 r[5]='v0'
REG[5] =   t2[v0](8)
   9 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:5
  10 String8          0    7    0 CREATE INDEX a ON v0(v1+v1+v1) 00 r[7]='CREATE INDEX a ON v0(v1+v1+v1)'
REG[7] =   t30[CREATE INDEX a ](8)
  11 MakeRecord       3    5    9 BBBDB         00 r[9]=mkrec(r[3..7])
REG[9] =  s45[06170F110149696E6465786176300543.....Iindexav0.C](8)
  12 Insert           0    9    2               18 intkey=r[2] data=r[9]
REG[9] =  s45[06170F110149696E6465786176300543.....Iindexav0.C](8)
REG[2] =  i:4
  13 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  14 Close            0    0    0               00 
  15 SorterOpen       3    0    1 k(2,,)        00 
  16 OpenRead         1    2    0 1             00 root=2 iDb=0; v0
  17 Rewind           1   25    0               00 
  18 Column           1    0   14               00 r[14]=v0.v1
REG[14] =  s170000[52F4CB9792C7EEE03F03EC4597F0D019R.......?..E....](8)
  19 Add             14   14   13               00 r[13]=r[14]+r[14]
REG[14] =  s170000[52F4CB9792C7EEE03F03EC4597F0D019R.......?..E....](8)
REG[14] =  s170000[52F4CB9792C7EEE03F03EC4597F0D019R.......?..E....](8)
REG[13] =  i:0
  20 Add             14   13   11               00 r[11]=r[14]+r[13]
REG[14] =  s170000[52F4CB9792C7EEE03F03EC4597F0D019R.......?..E....](8)
REG[13] =  i:0
REG[11] =  i:0
  21 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:1
  22 MakeRecord      11    2   10               00 r[10]=mkrec(r[11..12])
REG[10] =  s3[030809...](8)
  23 SorterInsert     3   10    0               00 
REG[10] =  s3[030809...](8)
  24 Next             1   18    0               00 
  25 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  26 SorterSort       3   31    0               00 
  27 SorterData       3   10    2               00 r[10]=data
  28 Last             2    0   -1               00 
  29 IdxInsert        2   10    0               10 key=r[10]
REG[10] =  s3[030809...](8)
  30 SorterNext       3   27    0               00 
  31 Close            1    0    0               00 
  32 Close            2    0    0               00 
  33 Close            3    0    0               00 
  34 SetCookie        0    1    4               00 
  35 ParseSchema      0    0    0 name='a' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s2[v2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s1[a](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s30[CREATE INDEX a ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[a](8)
REG[6] =  i:5
REG[7] =   s30[CREATE INDEX a ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  36 Expire           0    0    0               00 
  37 Halt             0    0    0               00 
SQL: [SELECT typeof(CAST(x'616263' AS numeric))
;]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 Blob             3    2    0 abc           00 r[2]=abc (len=3)
REG[2] =  t3[616263abc](8)
   5 Cast             2   67    0               00 affinity(r[2])
REG[2] =  t3[616263abc](8)
   6 Goto             0    1    0               00 
   1 Function0        1    2    1 typeof(1)     01 r[1]=func(r[2])
REG[2] =  i:0
REG[1] =   t7[integer](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t7[integer](8)
   3 Halt             0    0    0               00 
SQL: [;UPDATE v0 SET v1=v1+100;]
VDBE Trace:
   0 Init             0   40    0               00 Start at 40
  40 Transaction      0    1    4 1             01 usesStmtJournal=0
  41 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
  42 Integer        100    8    0               00 r[8]=100
REG[8] =  i:100
  43 Goto             0    1    0               00 
   1 Null             0    3    4               00 r[3..4]=NULL
REG[3] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; v0
   3 Explain          0    0    0 SCAN TABLE v0 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:1
   6 RowSetAdd        3    4    0               00 rowset(3)=r[4]
REG[3] =  NULL
REG[4] =  i:1
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  10 OpenWrite        0    2    0 1             00 root=2 iDb=0; v0
  11 OpenWrite        1    5    0 k(2,,)        00 root=5 iDb=0; a
  12 OpenWrite        2    4    0 k(2,,)        00 root=4 iDb=0; t1
  13 RowSetRead       3   35    4               00 r[4]=rowset(3)
REG[3] =  (rowset)
REG[4] =  i:1
  14 NotExists        0   13    4               00 intkey=r[4]
REG[4] =  i:1
  15 Column           0    0    7               00 r[7]=v0.v1
REG[7] =  s170000[52F4CB9792C7EEE03F03EC4597F0D019R.......?..E....](8)
  16 Add              8    7    5               00 r[5]=r[8]+r[7]
REG[8] =  i:100
REG[7] =  s170000[52F4CB9792C7EEE03F03EC4597F0D019R.......?..E....](8)
REG[5] =  i:100
  17 Add              5    5   11               00 r[11]=r[5]+r[5]
REG[5] =  i:100
REG[5] =  i:100
REG[11] =  i:200
  18 Add              5   11    9               00 r[9]=r[5]+r[11]; a column 0
REG[5] =  i:100
REG[11] =  i:200
REG[9] =  i:300
  19 IntCopy          4   10    0               00 r[10]=r[4]; rowid
REG[10] =  i:1
  20 MakeRecord       9    2    1               00 r[1]=mkrec(r[9..10]); for a
REG[1] =  s5[030209012C....,](8)
  21 Eq               5    9    5 (BINARY)      61 if r[5]==r[5] goto 9; t1 column 0
REG[5] =  i:100
REG[5] =  i:100
REG[9] =  i:1
  22 MakeRecord       9    2    2               00 r[2]=mkrec(r[9..10]); for t1
REG[2] =  s3[030909...](8)
  23 Add              7    7   11               00 r[11]=r[7]+r[7]
REG[7] =  s170000[52F4CB9792C7EEE03F03EC4597F0D019R.......?..E....](8)
REG[7] =  s170000[52F4CB9792C7EEE03F03EC4597F0D019R.......?..E....](8)
REG[11] =  i:0
  24 Add              7   11    9               00 r[9]=r[7]+r[11]
REG[7] =  s170000[52F4CB9792C7EEE03F03EC4597F0D019R.......?..E....](8)
REG[11] =  i:0
REG[9] =  i:0
  25 Rowid            0   10    0               00 r[10]=rowid
REG[10] =  i:1
  26 IdxDelete        1    9    2               00 key=r[9..10]
  27 Eq               7    9    7 (BINARY)      61 if r[7]==r[7] goto 9
REG[7] =  s170000[52F4CB9792C7EEE03F03EC4597F0D019R.......?..E....](8)
REG[7] =  s170000[52F4CB9792C7EEE03F03EC4597F0D019R.......?..E....](8)
REG[9] =  i:1
  28 IdxDelete        2    9    2               00 key=r[9..10]
  29 IdxInsert        1    1    0               00 key=r[1]
REG[1] =  s5[030209012C....,](8)
  30 IdxInsert        2    2    0               00 key=r[2]
REG[2] =  s3[030909...](8)
  31 MakeRecord       5    1   11               00 r[11]=mkrec(r[5])
REG[11] =  s3[020164..d](8)
  32 Insert           0   11    4 v0            05 intkey=r[4] data=r[11]
REG[11] =  s3[020164..d](8)
REG[4] =  i:1
  33 AddImm           6    1    0               00 r[6]=r[6]+1
REG[6] =  i:0
  34 Goto             0   13    0               00 
  13 RowSetRead       3   35    4               00 r[4]=rowset(3)
REG[3] =  (rowset)
REG[4] =  i:1
  35 Close            1    0    0               00 
  36 Close            2    0    0               00 
  37 Close            0    0    0               00 
  38 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:1
  39 Halt             0    0    0               00 
SQL: [;VACUUM;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Vacuum           0    0    0               00 
SQL: [ATTACH '' AS vacuum_db;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0               00 r[1]=''
REG[1] =   t0[](8)
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
REG[2] =   t9[vacuum_db](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t0[](8)
REG[2] =   t9[vacuum_db](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      2    0    0 0             00 usesStmtJournal=0
  13 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [PRAGMA vacuum_db.synchronous=OFF]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [SELECT 'CREATE TABLE vacuum_db.' || substr(sql,14)   FROM sqlite_master WHERE type='table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    4 1             01 usesStmtJournal=0
  20 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  21 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  22 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  23 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  24 String8          0    8    0 CREATE TABLE vacuum_db. 00 r[8]='CREATE TABLE vacuum_db.'
REG[8] =   t23[CREATE TABLE va](8)
  25 Integer         14   10    0               00 r[10]=14
REG[10] =  i:14
  26 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   17    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[v0](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[v0](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:2
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:2
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s20[CREATE TABLE v0](8)
  13 Function0        2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s20[CREATE TABLE v0](8)
REG[10] =  i:14
REG[5] =   s7[v0 (v1)](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s7[v0 (v1)](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s30[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s30[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.v0 (v1)]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      2    1    0 0             01 usesStmtJournal=0
  33 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  34 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        2    2    4               00 
   4 SetCookie        2    5    1               00 
   5 CreateTable      2    2    0               00 r[2]=root iDb=2
REG[2] =  i:2
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:1
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:1
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  18 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  19 IsNull           5   28    0               00 if r[5]==NULL goto 28
REG[5] =  i:1
  20 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  21 String8          0    7    0 v0            00 r[7]='v0'
REG[7] =   t2[v0](8)
  22 String8          0    8    0 v0            00 r[8]='v0'
REG[8] =   t2[v0](8)
  23 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  24 String8          0   10    0 CREATE TABLE v0 (v1) 00 r[10]='CREATE TABLE v0 (v1)'
REG[10] =   t20[CREATE TABLE v0](8)
  25 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s36[0617111101357461626C657630763002.....5tablev0v0.](8)
  26 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s36[0617111101357461626C657630763002.....5tablev0v0.](8)
REG[5] =  i:1
  27 AddImm          12    1    0               00 r[12]=r[12]+1
REG[12] =  i:0
  28 Close            1    0    0               00 
  29 SetCookie        2    1    1               00 
  30 ParseSchema      2    0    0 tbl_name='v0' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    1 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 v0            00 r[2]='v0'
REG[2] =   t2[v0](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[v0](8)
REG[1] =   s2[v0](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[v0](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s20[CREATE TABLE v0](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[v0](8)
REG[6] =  i:2
REG[7] =   s20[CREATE TABLE v0](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  31 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[v2](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[v2](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:44
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:44
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:44
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s27[CREATE TABLE v2](8)
  13 Function         2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s27[CREATE TABLE v2](8)
REG[10] =  i:14
REG[5] =   s14[v2(v3, x, xyz)](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s14[v2(v3, x, xyz)](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s37[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s37[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.v2(v3, x, xyz)]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      2    1    1 0             01 usesStmtJournal=0
  33 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  34 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      2    2    0               00 r[2]=root iDb=2
REG[2] =  i:3
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:2
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:2
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  18 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  19 IsNull           5   28    0               00 if r[5]==NULL goto 28
REG[5] =  i:2
  20 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  21 String8          0    7    0 v2            00 r[7]='v2'
REG[7] =   t2[v2](8)
  22 String8          0    8    0 v2            00 r[8]='v2'
REG[8] =   t2[v2](8)
  23 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  24 String8          0   10    0 CREATE TABLE v2(v3, x, xyz) 00 r[10]='CREATE TABLE v2(v3, x, xyz)'
REG[10] =   t27[CREATE TABLE v2](8)
  25 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s43[0617111101437461626C657632763203.....Ctablev2v2.](8)
  26 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s43[0617111101437461626C657632763203.....Ctablev2v2.](8)
REG[5] =  i:2
  27 AddImm          12    1    0               00 r[12]=r[12]+1
REG[12] =  i:0
  28 Close            1    0    0               00 
  29 SetCookie        2    1    2               00 
  30 ParseSchema      2    0    0 tbl_name='v2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    2 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 v2            00 r[2]='v2'
REG[2] =   t2[v2](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[v2](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[v2](8)
REG[1] =   s2[v2](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[v2](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s27[CREATE TABLE v2](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[v2](8)
REG[6] =  i:3
REG[7] =   s27[CREATE TABLE v2](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  31 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  16 Next             0    4    0               01 
  17 Close            0    0    0               00 
  18 Halt             0    0    0               00 
SQL: [SELECT 'CREATE INDEX vacuum_db.' || substr(sql,14)  FROM sqlite_master WHERE sql LIKE 'CREATE INDEX %' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    4 1             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE INDEX % 00 r[2]='CREATE INDEX %'
REG[2] =   t14[CREATE INDEX %](8)
  17 String8          0    5    0 CREATE INDEX vacuum_db. 00 r[5]='CREATE INDEX vacuum_db.'
REG[5] =   t23[CREATE INDEX va](8)
  18 Integer         14    7    0               00 r[7]=14
REG[7] =  i:14
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s20[CREATE TABLE v0](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s20[CREATE TABLE v0](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE TABLE v2](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s27[CREATE TABLE v2](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s30[CREATE INDEX t1](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s30[CREATE INDEX t1](8)
REG[1] =  i:1
   6 IfNot            1   11    1               00 
REG[1] =  i:1
   7 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s30[CREATE INDEX t1](8)
   8 Function0        2    6    1 substr(2)     02 r[1]=func(r[6..7])
REG[6] =   s30[CREATE INDEX t1](8)
REG[7] =  i:14
REG[1] =   s17[t1 on v0("v1"=v](8)
   9 Concat           1    5    4               00 r[4]=r[5]+r[1]
REG[1] =   s17[t1 on v0("v1"=v](8)
REG[5] =   t23[CREATE INDEX va](8)
REG[4] =   s40[CREATE INDEX va](8)
  10 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s40[CREATE INDEX va](8)
SQL: [CREATE INDEX vacuum_db.t1 on v0("v1"=v1)]
VDBE Trace:
   0 Init             0   37    0               00 Start at 37
  37 Transaction      2    1    2 0             01 usesStmtJournal=0
  38 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  39 TableLock        2    2    1 v0            00 iDb=2 root=2 write=1
  40 Goto             0    1    0               00 
   1 Noop             0   36    0               00 
   2 CreateIndex      2    1    0               00 r[1]=root iDb=2
REG[1] =  i:4
   3 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
   4 OpenWrite        0    1    2 5             00 root=1 iDb=2; sqlite_master
   5 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:3
   6 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   7 String8          0    4    0 t1            00 r[4]='t1'
REG[4] =   t2[t1](8)
   8 String8          0    5    0 v0            00 r[5]='v0'
REG[5] =   t2[v0](8)
   9 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:4
  10 String8          0    7    0 CREATE INDEX t1 on v0("v1"=v1) 00 r[7]='CREATE INDEX t1 on v0("v1"=v1)'
REG[7] =   t30[CREATE INDEX t1](8)
  11 MakeRecord       3    5    9 BBBDB         00 r[9]=mkrec(r[3..7])
REG[9] =  s46[061711110149696E6465787431763004.....Iindext1v0.](8)
  12 Insert           0    9    2               18 intkey=r[2] data=r[9]
REG[9] =  s46[061711110149696E6465787431763004.....Iindext1v0.](8)
REG[2] =  i:3
  13 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  14 Close            0    0    0               00 
  15 SorterOpen       3    0    1 k(2,,)        00 
  16 OpenRead         1    2    2 1             00 root=2 iDb=2; v0
  17 Rewind           1   24    0               00 
  24 OpenWrite        2    1    2 k(2,,)        11 root=1 iDb=2
  25 SorterSort       3   30    0               00 
  30 Close            1    0    0               00 
  31 Close            2    0    0               00 
  32 Close            3    0    0               00 
  33 SetCookie        2    1    3               00 
  34 ParseSchema      2    0    0 name='t1' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    3 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[v2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s30[CREATE INDEX t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:4
REG[7] =   s30[CREATE INDEX t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  35 Expire           0    0    0               00 
  36 Halt             0    0    0               00 
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s30[CREATE INDEX a ](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s30[CREATE INDEX a ](8)
REG[1] =  i:1
   6 IfNot            1   11    1               00 
REG[1] =  i:1
   7 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s30[CREATE INDEX a ](8)
   8 Function         2    6    1 substr(2)     02 r[1]=func(r[6..7])
REG[6] =   s30[CREATE INDEX a ](8)
REG[7] =  i:14
REG[1] =   s17[a ON v0(v1+v1+v](8)
   9 Concat           1    5    4               00 r[4]=r[5]+r[1]
REG[1] =   s17[a ON v0(v1+v1+v](8)
REG[5] =   t23[CREATE INDEX va](8)
REG[4] =   s40[CREATE INDEX va](8)
  10 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s40[CREATE INDEX va](8)
SQL: [CREATE INDEX vacuum_db.a ON v0(v1+v1+v1)]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      2    1    3 0             01 usesStmtJournal=0
  39 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  40 TableLock        2    2    1 v0            00 iDb=2 root=2 write=1
  41 Goto             0    1    0               00 
   1 Noop             0   37    0               00 
   2 CreateIndex      2    1    0               00 r[1]=root iDb=2
REG[1] =  i:5
   3 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
   4 OpenWrite        0    1    2 5             00 root=1 iDb=2; sqlite_master
   5 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:4
   6 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   7 String8          0    4    0 a             00 r[4]='a'
REG[4] =   t1[a](8)
   8 String8          0    5    0 v0            00 r[5]='v0'
REG[5] =   t2[v0](8)
   9 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:5
  10 String8          0    7    0 CREATE INDEX a ON v0(v1+v1+v1) 00 r[7]='CREATE INDEX a ON v0(v1+v1+v1)'
REG[7] =   t30[CREATE INDEX a ](8)
  11 MakeRecord       3    5    9 BBBDB         00 r[9]=mkrec(r[3..7])
REG[9] =  s45[06170F110149696E6465786176300543.....Iindexav0.C](8)
  12 Insert           0    9    2               18 intkey=r[2] data=r[9]
REG[9] =  s45[06170F110149696E6465786176300543.....Iindexav0.C](8)
REG[2] =  i:4
  13 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  14 Close            0    0    0               00 
  15 SorterOpen       3    0    1 k(2,,)        00 
  16 OpenRead         1    2    2 1             00 root=2 iDb=2; v0
  17 Rewind           1   25    0               00 
  25 OpenWrite        2    1    2 k(2,,)        11 root=1 iDb=2
  26 SorterSort       3   31    0               00 
  31 Close            1    0    0               00 
  32 Close            2    0    0               00 
  33 Close            3    0    0               00 
  34 SetCookie        2    1    4               00 
  35 ParseSchema      2    0    0 name='a' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    4 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s2[v2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s1[a](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s30[CREATE INDEX a ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[a](8)
REG[6] =  i:5
REG[7] =   s30[CREATE INDEX a ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  36 Expire           0    0    0               00 
  37 Halt             0    0    0               00 
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'CREATE UNIQUE INDEX vacuum_db.' || substr(sql,21)   FROM sqlite_master WHERE sql LIKE 'CREATE UNIQUE INDEX %']
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    4 1             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE UNIQUE INDEX % 00 r[2]='CREATE UNIQUE INDEX %'
REG[2] =   t21[CREATE UNIQUE I](8)
  17 String8          0    5    0 CREATE UNIQUE INDEX vacuum_db. 00 r[5]='CREATE UNIQUE INDEX vacuum_db.'
REG[5] =   t30[CREATE UNIQUE I](8)
  18 Integer         21    7    0               00 r[7]=21
REG[7] =  i:21
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s20[CREATE TABLE v0](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s20[CREATE TABLE v0](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE TABLE v2](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s27[CREATE TABLE v2](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s30[CREATE INDEX t1](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s30[CREATE INDEX t1](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s30[CREATE INDEX a ](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s30[CREATE INDEX a ](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';'FROM main.sqlite_master WHERE type = 'table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    0    4 1             01 usesStmtJournal=0
  25 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  26 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  27 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  28 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  29 String8          0   10    0 INSERT INTO vacuum_db. 00 r[10]='INSERT INTO vacuum_db.'
REG[10] =   t22[INSERT INTO vac](8)
  30 String8          0   13    0  SELECT * FROM main. 00 r[13]=' SELECT * FROM main.'
REG[13] =   t20[ SELECT * FROM ](8)
  31 String8          0   14    0 ;             00 r[14]=';'
REG[14] =   t1[;](8)
  32 Goto             0    1    0               00 
   1 OpenRead         0    1    0 4             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   22    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[v0](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[v0](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:2
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:2
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[v0](8)
  13 Function0        0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s2[v0](8)
REG[11] =   z4['v0'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z4['v0'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s26[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s26[INSERT INTO vac](8)
REG[8] =   s46[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[v0](8)
  17 Function0        0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s2[v0](8)
REG[9] =   z4['v0'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z4['v0'](8)
REG[8] =   s46[INSERT INTO vac](8)
REG[5] =   s50[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s50[INSERT INTO vac](8)
REG[7] =   s51[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s51[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'v0' SELECT * FROM main.'v0';]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    0    4 1             01 usesStmtJournal=0
  34 Transaction      2    1    4 0             01 usesStmtJournal=0
  35 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
  36 TableLock        2    2    1 v0            00 iDb=2 root=2 write=1
  37 Goto             0    1    0               00 
   1 InitCoroutine    3   10    2               00 
  10 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  11 OpenWrite        1    2    2 1             00 root=2 iDb=2; v0
  12 OpenWrite        2    5    2 k(2,,)        00 root=5 iDb=2; a
  13 OpenWrite        3    4    2 k(2,,)        00 root=4 iDb=2; t1
  14 Yield            3   28    0               00 
REG[3] =  i:1
REG[3] =  i:14
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; v0
   3 Explain          0    0    0 SCAN TABLE v0 00 
   4 Rewind           0    8    0               00 
   5 Column           0    0    2               00 r[2]=v0.v1
REG[2] =  i:100
   6 Yield            3    0    0               00 
REG[3] =  i:14
REG[3] =  i:6
  15 NewRowid         1    1    0               00 r[1]=rowid
REG[1] =  i:1
  16 Add              2    2    9               00 r[9]=r[2]+r[2]
REG[2] =  i:100
REG[2] =  i:100
REG[9] =  i:200
  17 Add              2    9    7               00 r[7]=r[2]+r[9]; a column 0
REG[2] =  i:100
REG[9] =  i:200
REG[7] =  i:300
  18 IntCopy          1    8    0               00 r[8]=r[1]; rowid
REG[8] =  i:1
  19 MakeRecord       7    2    5               00 r[5]=mkrec(r[7..8]); for a
REG[5] =  s5[030209012C....,](8)
  20 Eq               2    7    2 (BINARY)      61 if r[2]==r[2] goto 7; t1 column 0
REG[2] =  i:100
REG[2] =  i:100
REG[7] =  i:1
  21 MakeRecord       7    2    6               00 r[6]=mkrec(r[7..8]); for t1
REG[6] =  s3[030909...](8)
  22 IdxInsert        2    5    0               10 key=r[5]
REG[5] =  s5[030209012C....,](8)
  23 IdxInsert        3    6    0               10 key=r[6]
REG[6] =  s3[030909...](8)
  24 MakeRecord       2    1    9               00 r[9]=mkrec(r[2])
REG[9] =  s3[020164..d](8)
  25 Insert           1    9    1 v0            1B intkey=r[1] data=r[9]
REG[9] =  s3[020164..d](8)
REG[1] =  i:1
  26 AddImm           4    1    0               00 r[4]=r[4]+1
REG[4] =  i:0
  27 Goto             0   14    0               00 
  14 Yield            3   28    0               00 
REG[3] =  i:6
REG[3] =  i:14
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 EndCoroutine     3    0    0               00 
REG[3] =  i:14
  28 Close            1    0    0               00 
  29 Close            2    0    0               00 
  30 Close            3    0    0               00 
  31 ResultRow        4    1    0               00 output=r[4]
REG[4] =  i:1
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[v2](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[v2](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:44
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:44
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:44
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[v2](8)
  13 Function         0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s2[v2](8)
REG[11] =   z4['v2'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z4['v2'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s26[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s26[INSERT INTO vac](8)
REG[8] =   s46[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[v2](8)
  17 Function         0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s2[v2](8)
REG[9] =   z4['v2'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z4['v2'](8)
REG[8] =   s46[INSERT INTO vac](8)
REG[5] =   s50[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s50[INSERT INTO vac](8)
REG[7] =   s51[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s51[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'v2' SELECT * FROM main.'v2';]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0    4 1             01 usesStmtJournal=0
  24 Transaction      2    1    4 0             01 usesStmtJournal=0
  25 TableLock        0   44    0 v2            00 iDb=0 root=44 write=0
  26 TableLock        2    3    1 v2            00 iDb=2 root=3 write=1
  27 Goto             0    1    0               00 
   1 InitCoroutine    5   12    2               00 
  12 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  13 OpenWrite        1    3    2 3             00 root=3 iDb=2; v2
  14 Yield            5   20    0               00 
REG[5] =  i:1
REG[5] =  i:14
   2 OpenRead         0   44    0 3             00 root=44 iDb=0; v2
   3 Explain          0    0    0 SCAN TABLE v2 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 EndCoroutine     5    0    0               00 
REG[5] =  i:14
  20 Close            1    0    0               00 
  21 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:0
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  21 Next             0    4    0               01 
  22 Close            0    0    0               00 
  23 Halt             0    0    0               00 
SQL: [SELECT 'DELETE FROM vacuum_db.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name='sqlite_sequence' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      2    0    4 0             01 usesStmtJournal=0
  15 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  16 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  17 String8          0    5    0 DELETE FROM vacuum_db. 00 r[5]='DELETE FROM vacuum_db.'
REG[5] =   t22[DELETE FROM vac](8)
  18 String8          0    8    0 ;             00 r[8]=';'
REG[8] =   t1[;](8)
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v0](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[v0](8)
  11 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v2](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[v2](8)
  11 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  11 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s1[a](8)
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name=='sqlite_sequence';]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      2    0    4 0             01 usesStmtJournal=0
  19 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  20 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  21 String8          0    7    0 INSERT INTO vacuum_db. 00 r[7]='INSERT INTO vacuum_db.'
REG[7] =   t22[INSERT INTO vac](8)
  22 String8          0   10    0  SELECT * FROM main. 00 r[10]=' SELECT * FROM main.'
REG[10] =   t20[ SELECT * FROM ](8)
  23 String8          0   11    0 ;             00 r[11]=';'
REG[11] =   t1[;](8)
  24 Goto             0    1    0               00 
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   16    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v0](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[v0](8)
  15 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v2](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[v2](8)
  15 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  15 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s1[a](8)
  15 Next             0    4    0               01 
  16 Close            0    0    0               00 
  17 Halt             0    0    0               00 
SQL: [INSERT INTO vacuum_db.sqlite_master   SELECT type, name, tbl_name, rootpage, sql    FROM main.sqlite_master   WHERE type='view' OR type='trigger'      OR (type='table' AND rootpage=0)]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    0    4 1             01 usesStmtJournal=0
  32 Transaction      2    1    4 0             01 usesStmtJournal=0
  33 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  34 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  35 String8          0    9    0 view          00 r[9]='view'
REG[9] =   t4[view](8)
  36 String8          0   11    0 trigger       00 r[11]='trigger'
REG[11] =   t7[trigger](8)
  37 String8          0   12    0 table         00 r[12]='table'
REG[12] =   t5[table](8)
  38 Integer          0   13    0               00 r[13]=0
REG[13] =  i:0
  39 Goto             0    1    0               00 
   1 InitCoroutine    7   20    2               00 
  20 Integer          0   14    0               00 r[14]=0
REG[14] =  i:0
  21 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  22 Yield            7   28    0               00 
REG[7] =  i:1
REG[7] =  i:22
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   18    0               00 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[table](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[table](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[table](8)
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
REG[10] =  i:2
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
REG[13] =  i:0
REG[10] =  i:2
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[table](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[table](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[table](8)
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
REG[10] =  i:44
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
REG[13] =  i:0
REG[10] =  i:44
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[index](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[index](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[index](8)
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[index](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[index](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[index](8)
  17 Next             0    5    0               01 
  18 Close            0    0    0               00 
  19 EndCoroutine     7    0    0               00 
REG[7] =  i:22
  28 Close            1    0    0               00 
  29 ResultRow       14    1    0               00 output=r[14]
REG[14] =  i:0
   2 Halt             0    0    0               00 
SQL: [;VACUUM;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Vacuum           0    0    0               00 
SQL: [ATTACH '' AS vacuum_db;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0               00 r[1]=''
REG[1] =   t0[](8)
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
REG[2] =   t9[vacuum_db](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t0[](8)
REG[2] =   t9[vacuum_db](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    5 2             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v0](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s20[CREATE TABLE v0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[v0](8)
REG[2] =  i:2
REG[3] =   s20[CREATE TABLE v0](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v2](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE TABLE v2](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[v2](8)
REG[2] =  i:3
REG[3] =   s27[CREATE TABLE v2](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s30[CREATE INDEX t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:4
REG[3] =   s30[CREATE INDEX t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s30[CREATE INDEX a ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:5
REG[3] =   s30[CREATE INDEX a ](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      2    0    0 0             00 usesStmtJournal=0
  13 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      1    0    0 2             00 usesStmtJournal=0
  13 TableLock        1    1    0 sqlite_temp_master 00 iDb=1 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          0    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [PRAGMA vacuum_db.synchronous=OFF]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [SELECT 'CREATE TABLE vacuum_db.' || substr(sql,14)   FROM sqlite_master WHERE type='table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    5 2             01 usesStmtJournal=0
  20 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  21 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  22 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  23 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  24 String8          0    8    0 CREATE TABLE vacuum_db. 00 r[8]='CREATE TABLE vacuum_db.'
REG[8] =   t23[CREATE TABLE va](8)
  25 Integer         14   10    0               00 r[10]=14
REG[10] =  i:14
  26 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   17    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[v0](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[v0](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:2
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:2
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s20[CREATE TABLE v0](8)
  13 Function0        2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s20[CREATE TABLE v0](8)
REG[10] =  i:14
REG[5] =   s7[v0 (v1)](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s7[v0 (v1)](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s30[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s30[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.v0 (v1)]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      2    1    0 0             01 usesStmtJournal=0
  33 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  34 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        2    2    4               00 
   4 SetCookie        2    5    1               00 
   5 CreateTable      2    2    0               00 r[2]=root iDb=2
REG[2] =  i:2
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:1
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:1
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  18 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  19 IsNull           5   28    0               00 if r[5]==NULL goto 28
REG[5] =  i:1
  20 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  21 String8          0    7    0 v0            00 r[7]='v0'
REG[7] =   t2[v0](8)
  22 String8          0    8    0 v0            00 r[8]='v0'
REG[8] =   t2[v0](8)
  23 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  24 String8          0   10    0 CREATE TABLE v0 (v1) 00 r[10]='CREATE TABLE v0 (v1)'
REG[10] =   t20[CREATE TABLE v0](8)
  25 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s36[0617111101357461626C657630763002.....5tablev0v0.](8)
  26 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s36[0617111101357461626C657630763002.....5tablev0v0.](8)
REG[5] =  i:1
  27 AddImm          12    1    0               00 r[12]=r[12]+1
REG[12] =  i:0
  28 Close            1    0    0               00 
  29 SetCookie        2    1    1               00 
  30 ParseSchema      2    0    0 tbl_name='v0' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    1 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 v0            00 r[2]='v0'
REG[2] =   t2[v0](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[v0](8)
REG[1] =   s2[v0](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[v0](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s20[CREATE TABLE v0](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[v0](8)
REG[6] =  i:2
REG[7] =   s20[CREATE TABLE v0](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  31 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[v2](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[v2](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:3
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:3
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s27[CREATE TABLE v2](8)
  13 Function         2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s27[CREATE TABLE v2](8)
REG[10] =  i:14
REG[5] =   s14[v2(v3, x, xyz)](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s14[v2(v3, x, xyz)](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s37[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s37[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.v2(v3, x, xyz)]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      2    1    1 0             01 usesStmtJournal=0
  33 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  34 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      2    2    0               00 r[2]=root iDb=2
REG[2] =  i:3
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:2
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:2
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  18 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  19 IsNull           5   28    0               00 if r[5]==NULL goto 28
REG[5] =  i:2
  20 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  21 String8          0    7    0 v2            00 r[7]='v2'
REG[7] =   t2[v2](8)
  22 String8          0    8    0 v2            00 r[8]='v2'
REG[8] =   t2[v2](8)
  23 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  24 String8          0   10    0 CREATE TABLE v2(v3, x, xyz) 00 r[10]='CREATE TABLE v2(v3, x, xyz)'
REG[10] =   t27[CREATE TABLE v2](8)
  25 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s43[0617111101437461626C657632763203.....Ctablev2v2.](8)
  26 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s43[0617111101437461626C657632763203.....Ctablev2v2.](8)
REG[5] =  i:2
  27 AddImm          12    1    0               00 r[12]=r[12]+1
REG[12] =  i:0
  28 Close            1    0    0               00 
  29 SetCookie        2    1    2               00 
  30 ParseSchema      2    0    0 tbl_name='v2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    2 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 v2            00 r[2]='v2'
REG[2] =   t2[v2](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[v2](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[v2](8)
REG[1] =   s2[v2](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[v2](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s27[CREATE TABLE v2](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[v2](8)
REG[6] =  i:3
REG[7] =   s27[CREATE TABLE v2](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  31 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  16 Next             0    4    0               01 
  17 Close            0    0    0               00 
  18 Halt             0    0    0               00 
SQL: [SELECT 'CREATE INDEX vacuum_db.' || substr(sql,14)  FROM sqlite_master WHERE sql LIKE 'CREATE INDEX %' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    5 2             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE INDEX % 00 r[2]='CREATE INDEX %'
REG[2] =   t14[CREATE INDEX %](8)
  17 String8          0    5    0 CREATE INDEX vacuum_db. 00 r[5]='CREATE INDEX vacuum_db.'
REG[5] =   t23[CREATE INDEX va](8)
  18 Integer         14    7    0               00 r[7]=14
REG[7] =  i:14
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s20[CREATE TABLE v0](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s20[CREATE TABLE v0](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE TABLE v2](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s27[CREATE TABLE v2](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s30[CREATE INDEX t1](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s30[CREATE INDEX t1](8)
REG[1] =  i:1
   6 IfNot            1   11    1               00 
REG[1] =  i:1
   7 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s30[CREATE INDEX t1](8)
   8 Function0        2    6    1 substr(2)     02 r[1]=func(r[6..7])
REG[6] =   s30[CREATE INDEX t1](8)
REG[7] =  i:14
REG[1] =   s17[t1 on v0("v1"=v](8)
   9 Concat           1    5    4               00 r[4]=r[5]+r[1]
REG[1] =   s17[t1 on v0("v1"=v](8)
REG[5] =   t23[CREATE INDEX va](8)
REG[4] =   s40[CREATE INDEX va](8)
  10 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s40[CREATE INDEX va](8)
SQL: [CREATE INDEX vacuum_db.t1 on v0("v1"=v1)]
VDBE Trace:
   0 Init             0   37    0               00 Start at 37
  37 Transaction      2    1    2 0             01 usesStmtJournal=0
  38 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  39 TableLock        2    2    1 v0            00 iDb=2 root=2 write=1
  40 Goto             0    1    0               00 
   1 Noop             0   36    0               00 
   2 CreateIndex      2    1    0               00 r[1]=root iDb=2
REG[1] =  i:4
   3 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
   4 OpenWrite        0    1    2 5             00 root=1 iDb=2; sqlite_master
   5 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:3
   6 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   7 String8          0    4    0 t1            00 r[4]='t1'
REG[4] =   t2[t1](8)
   8 String8          0    5    0 v0            00 r[5]='v0'
REG[5] =   t2[v0](8)
   9 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:4
  10 String8          0    7    0 CREATE INDEX t1 on v0("v1"=v1) 00 r[7]='CREATE INDEX t1 on v0("v1"=v1)'
REG[7] =   t30[CREATE INDEX t1](8)
  11 MakeRecord       3    5    9 BBBDB         00 r[9]=mkrec(r[3..7])
REG[9] =  s46[061711110149696E6465787431763004.....Iindext1v0.](8)
  12 Insert           0    9    2               18 intkey=r[2] data=r[9]
REG[9] =  s46[061711110149696E6465787431763004.....Iindext1v0.](8)
REG[2] =  i:3
  13 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  14 Close            0    0    0               00 
  15 SorterOpen       3    0    1 k(2,,)        00 
  16 OpenRead         1    2    2 1             00 root=2 iDb=2; v0
  17 Rewind           1   24    0               00 
  24 OpenWrite        2    1    2 k(2,,)        11 root=1 iDb=2
  25 SorterSort       3   30    0               00 
  30 Close            1    0    0               00 
  31 Close            2    0    0               00 
  32 Close            3    0    0               00 
  33 SetCookie        2    1    3               00 
  34 ParseSchema      2    0    0 name='t1' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    3 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[v2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s30[CREATE INDEX t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:4
REG[7] =   s30[CREATE INDEX t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  35 Expire           0    0    0               00 
  36 Halt             0    0    0               00 
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s30[CREATE INDEX a ](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s30[CREATE INDEX a ](8)
REG[1] =  i:1
   6 IfNot            1   11    1               00 
REG[1] =  i:1
   7 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s30[CREATE INDEX a ](8)
   8 Function         2    6    1 substr(2)     02 r[1]=func(r[6..7])
REG[6] =   s30[CREATE INDEX a ](8)
REG[7] =  i:14
REG[1] =   s17[a ON v0(v1+v1+v](8)
   9 Concat           1    5    4               00 r[4]=r[5]+r[1]
REG[1] =   s17[a ON v0(v1+v1+v](8)
REG[5] =   t23[CREATE INDEX va](8)
REG[4] =   s40[CREATE INDEX va](8)
  10 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s40[CREATE INDEX va](8)
SQL: [CREATE INDEX vacuum_db.a ON v0(v1+v1+v1)]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      2    1    3 0             01 usesStmtJournal=0
  39 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  40 TableLock        2    2    1 v0            00 iDb=2 root=2 write=1
  41 Goto             0    1    0               00 
   1 Noop             0   37    0               00 
   2 CreateIndex      2    1    0               00 r[1]=root iDb=2
REG[1] =  i:5
   3 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
   4 OpenWrite        0    1    2 5             00 root=1 iDb=2; sqlite_master
   5 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:4
   6 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   7 String8          0    4    0 a             00 r[4]='a'
REG[4] =   t1[a](8)
   8 String8          0    5    0 v0            00 r[5]='v0'
REG[5] =   t2[v0](8)
   9 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:5
  10 String8          0    7    0 CREATE INDEX a ON v0(v1+v1+v1) 00 r[7]='CREATE INDEX a ON v0(v1+v1+v1)'
REG[7] =   t30[CREATE INDEX a ](8)
  11 MakeRecord       3    5    9 BBBDB         00 r[9]=mkrec(r[3..7])
REG[9] =  s45[06170F110149696E6465786176300543.....Iindexav0.C](8)
  12 Insert           0    9    2               18 intkey=r[2] data=r[9]
REG[9] =  s45[06170F110149696E6465786176300543.....Iindexav0.C](8)
REG[2] =  i:4
  13 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  14 Close            0    0    0               00 
  15 SorterOpen       3    0    1 k(2,,)        00 
  16 OpenRead         1    2    2 1             00 root=2 iDb=2; v0
  17 Rewind           1   25    0               00 
  25 OpenWrite        2    1    2 k(2,,)        11 root=1 iDb=2
  26 SorterSort       3   31    0               00 
  31 Close            1    0    0               00 
  32 Close            2    0    0               00 
  33 Close            3    0    0               00 
  34 SetCookie        2    1    4               00 
  35 ParseSchema      2    0    0 name='a' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    4 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s2[v2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s1[a](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s30[CREATE INDEX a ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[a](8)
REG[6] =  i:5
REG[7] =   s30[CREATE INDEX a ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  36 Expire           0    0    0               00 
  37 Halt             0    0    0               00 
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'CREATE UNIQUE INDEX vacuum_db.' || substr(sql,21)   FROM sqlite_master WHERE sql LIKE 'CREATE UNIQUE INDEX %']
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    5 2             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE UNIQUE INDEX % 00 r[2]='CREATE UNIQUE INDEX %'
REG[2] =   t21[CREATE UNIQUE I](8)
  17 String8          0    5    0 CREATE UNIQUE INDEX vacuum_db. 00 r[5]='CREATE UNIQUE INDEX vacuum_db.'
REG[5] =   t30[CREATE UNIQUE I](8)
  18 Integer         21    7    0               00 r[7]=21
REG[7] =  i:21
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s20[CREATE TABLE v0](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s20[CREATE TABLE v0](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE TABLE v2](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s27[CREATE TABLE v2](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s30[CREATE INDEX t1](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s30[CREATE INDEX t1](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s30[CREATE INDEX a ](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s30[CREATE INDEX a ](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';'FROM main.sqlite_master WHERE type = 'table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    0    5 2             01 usesStmtJournal=0
  25 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  26 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  27 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  28 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  29 String8          0   10    0 INSERT INTO vacuum_db. 00 r[10]='INSERT INTO vacuum_db.'
REG[10] =   t22[INSERT INTO vac](8)
  30 String8          0   13    0  SELECT * FROM main. 00 r[13]=' SELECT * FROM main.'
REG[13] =   t20[ SELECT * FROM ](8)
  31 String8          0   14    0 ;             00 r[14]=';'
REG[14] =   t1[;](8)
  32 Goto             0    1    0               00 
   1 OpenRead         0    1    0 4             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   22    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[v0](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[v0](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:2
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:2
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[v0](8)
  13 Function0        0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s2[v0](8)
REG[11] =   z4['v0'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z4['v0'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s26[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s26[INSERT INTO vac](8)
REG[8] =   s46[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[v0](8)
  17 Function0        0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s2[v0](8)
REG[9] =   z4['v0'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z4['v0'](8)
REG[8] =   s46[INSERT INTO vac](8)
REG[5] =   s50[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s50[INSERT INTO vac](8)
REG[7] =   s51[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s51[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'v0' SELECT * FROM main.'v0';]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    0    5 2             01 usesStmtJournal=0
  34 Transaction      2    1    4 0             01 usesStmtJournal=0
  35 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
  36 TableLock        2    2    1 v0            00 iDb=2 root=2 write=1
  37 Goto             0    1    0               00 
   1 InitCoroutine    3   10    2               00 
  10 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  11 OpenWrite        1    2    2 1             00 root=2 iDb=2; v0
  12 OpenWrite        2    5    2 k(2,,)        00 root=5 iDb=2; a
  13 OpenWrite        3    4    2 k(2,,)        00 root=4 iDb=2; t1
  14 Yield            3   28    0               00 
REG[3] =  i:1
REG[3] =  i:14
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; v0
   3 Explain          0    0    0 SCAN TABLE v0 00 
   4 Rewind           0    8    0               00 
   5 Column           0    0    2               00 r[2]=v0.v1
REG[2] =  i:100
   6 Yield            3    0    0               00 
REG[3] =  i:14
REG[3] =  i:6
  15 NewRowid         1    1    0               00 r[1]=rowid
REG[1] =  i:1
  16 Add              2    2    9               00 r[9]=r[2]+r[2]
REG[2] =  i:100
REG[2] =  i:100
REG[9] =  i:200
  17 Add              2    9    7               00 r[7]=r[2]+r[9]; a column 0
REG[2] =  i:100
REG[9] =  i:200
REG[7] =  i:300
  18 IntCopy          1    8    0               00 r[8]=r[1]; rowid
REG[8] =  i:1
  19 MakeRecord       7    2    5               00 r[5]=mkrec(r[7..8]); for a
REG[5] =  s5[030209012C....,](8)
  20 Eq               2    7    2 (BINARY)      61 if r[2]==r[2] goto 7; t1 column 0
REG[2] =  i:100
REG[2] =  i:100
REG[7] =  i:1
  21 MakeRecord       7    2    6               00 r[6]=mkrec(r[7..8]); for t1
REG[6] =  s3[030909...](8)
  22 IdxInsert        2    5    0               10 key=r[5]
REG[5] =  s5[030209012C....,](8)
  23 IdxInsert        3    6    0               10 key=r[6]
REG[6] =  s3[030909...](8)
  24 MakeRecord       2    1    9               00 r[9]=mkrec(r[2])
REG[9] =  s3[020164..d](8)
  25 Insert           1    9    1 v0            1B intkey=r[1] data=r[9]
REG[9] =  s3[020164..d](8)
REG[1] =  i:1
  26 AddImm           4    1    0               00 r[4]=r[4]+1
REG[4] =  i:0
  27 Goto             0   14    0               00 
  14 Yield            3   28    0               00 
REG[3] =  i:6
REG[3] =  i:14
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 EndCoroutine     3    0    0               00 
REG[3] =  i:14
  28 Close            1    0    0               00 
  29 Close            2    0    0               00 
  30 Close            3    0    0               00 
  31 ResultRow        4    1    0               00 output=r[4]
REG[4] =  i:1
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[v2](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[v2](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:3
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:3
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[v2](8)
  13 Function         0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s2[v2](8)
REG[11] =   z4['v2'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z4['v2'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s26[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s26[INSERT INTO vac](8)
REG[8] =   s46[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[v2](8)
  17 Function         0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s2[v2](8)
REG[9] =   z4['v2'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z4['v2'](8)
REG[8] =   s46[INSERT INTO vac](8)
REG[5] =   s50[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s50[INSERT INTO vac](8)
REG[7] =   s51[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s51[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'v2' SELECT * FROM main.'v2';]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0    5 2             01 usesStmtJournal=0
  24 Transaction      2    1    4 0             01 usesStmtJournal=0
  25 TableLock        0    3    0 v2            00 iDb=0 root=3 write=0
  26 TableLock        2    3    1 v2            00 iDb=2 root=3 write=1
  27 Goto             0    1    0               00 
   1 InitCoroutine    5   12    2               00 
  12 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  13 OpenWrite        1    3    2 3             00 root=3 iDb=2; v2
  14 Yield            5   20    0               00 
REG[5] =  i:1
REG[5] =  i:14
   2 OpenRead         0    3    0 3             00 root=3 iDb=0; v2
   3 Explain          0    0    0 SCAN TABLE v2 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 EndCoroutine     5    0    0               00 
REG[5] =  i:14
  20 Close            1    0    0               00 
  21 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:0
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  21 Next             0    4    0               01 
  22 Close            0    0    0               00 
  23 Halt             0    0    0               00 
SQL: [SELECT 'DELETE FROM vacuum_db.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name='sqlite_sequence' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      2    0    4 0             01 usesStmtJournal=0
  15 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  16 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  17 String8          0    5    0 DELETE FROM vacuum_db. 00 r[5]='DELETE FROM vacuum_db.'
REG[5] =   t22[DELETE FROM vac](8)
  18 String8          0    8    0 ;             00 r[8]=';'
REG[8] =   t1[;](8)
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v0](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[v0](8)
  11 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v2](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[v2](8)
  11 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  11 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s1[a](8)
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name=='sqlite_sequence';]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      2    0    4 0             01 usesStmtJournal=0
  19 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  20 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  21 String8          0    7    0 INSERT INTO vacuum_db. 00 r[7]='INSERT INTO vacuum_db.'
REG[7] =   t22[INSERT INTO vac](8)
  22 String8          0   10    0  SELECT * FROM main. 00 r[10]=' SELECT * FROM main.'
REG[10] =   t20[ SELECT * FROM ](8)
  23 String8          0   11    0 ;             00 r[11]=';'
REG[11] =   t1[;](8)
  24 Goto             0    1    0               00 
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   16    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v0](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[v0](8)
  15 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v2](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[v2](8)
  15 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  15 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s1[a](8)
  15 Next             0    4    0               01 
  16 Close            0    0    0               00 
  17 Halt             0    0    0               00 
SQL: [INSERT INTO vacuum_db.sqlite_master   SELECT type, name, tbl_name, rootpage, sql    FROM main.sqlite_master   WHERE type='view' OR type='trigger'      OR (type='table' AND rootpage=0)]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    0    5 2             01 usesStmtJournal=0
  32 Transaction      2    1    4 0             01 usesStmtJournal=0
  33 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  34 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  35 String8          0    9    0 view          00 r[9]='view'
REG[9] =   t4[view](8)
  36 String8          0   11    0 trigger       00 r[11]='trigger'
REG[11] =   t7[trigger](8)
  37 String8          0   12    0 table         00 r[12]='table'
REG[12] =   t5[table](8)
  38 Integer          0   13    0               00 r[13]=0
REG[13] =  i:0
  39 Goto             0    1    0               00 
   1 InitCoroutine    7   20    2               00 
  20 Integer          0   14    0               00 r[14]=0
REG[14] =  i:0
  21 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  22 Yield            7   28    0               00 
REG[7] =  i:1
REG[7] =  i:22
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   18    0               00 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[table](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[table](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[table](8)
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
REG[10] =  i:2
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
REG[13] =  i:0
REG[10] =  i:2
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[table](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[table](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[table](8)
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
REG[10] =  i:3
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
REG[13] =  i:0
REG[10] =  i:3
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[index](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[index](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[index](8)
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[index](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[index](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[index](8)
  17 Next             0    5    0               01 
  18 Close            0    0    0               00 
  19 EndCoroutine     7    0    0               00 
REG[7] =  i:22
  28 Close            1    0    0               00 
  29 ResultRow       14    1    0               00 output=r[14]
REG[14] =  i:0
   2 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    6 3             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v0](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s20[CREATE TABLE v0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[v0](8)
REG[2] =  i:2
REG[3] =   s20[CREATE TABLE v0](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v2](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE TABLE v2](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[v2](8)
REG[2] =  i:3
REG[3] =   s27[CREATE TABLE v2](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s30[CREATE INDEX t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:4
REG[3] =   s30[CREATE INDEX t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s30[CREATE INDEX a ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:5
REG[3] =   s30[CREATE INDEX a ](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      1    0    0 3             00 usesStmtJournal=0
  13 TableLock        1    1    0 sqlite_temp_master 00 iDb=1 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          0    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [INSERT INTO v0(v1,v1) VALUES(37,1369)
;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    1    6 3             01 usesStmtJournal=0
  24 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
  25 Goto             0    1    0               00 
   1 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
   2 OpenWrite        0    2    0 1             00 root=2 iDb=0; v0
   3 OpenWrite        1    5    0 k(2,,)        00 root=5 iDb=0; a
   4 OpenWrite        2    4    0 k(2,,)        00 root=4 iDb=0; t1
   5 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   6 Integer         37    2    0               00 r[2]=37
REG[2] =  i:37
   7 Add              2    2    8               00 r[8]=r[2]+r[2]
REG[2] =  i:37
REG[2] =  i:37
REG[8] =  i:74
   8 Add              2    8    6               00 r[6]=r[2]+r[8]; a column 0
REG[2] =  i:37
REG[8] =  i:74
REG[6] =  i:111
   9 IntCopy          1    7    0               00 r[7]=r[1]; rowid
REG[7] =  i:2
  10 MakeRecord       6    2    4               00 r[4]=mkrec(r[6..7]); for a
REG[4] =  s5[0301016F02...o.](8)
  11 Eq               2    6    2 (BINARY)      61 if r[2]==r[2] goto 6; t1 column 0
REG[2] =  i:37
REG[2] =  i:37
REG[6] =  i:1
  12 MakeRecord       6    2    5               00 r[5]=mkrec(r[6..7]); for t1
REG[5] =  s4[03090102....](8)
  13 IdxInsert        1    4    0               10 key=r[4]
REG[4] =  s5[0301016F02...o.](8)
  14 IdxInsert        2    5    0               10 key=r[5]
REG[5] =  s4[03090102....](8)
  15 MakeRecord       2    1    8               00 r[8]=mkrec(r[2])
REG[8] =  s3[020125..%](8)
  16 Insert           0    8    1 v0            1B intkey=r[1] data=r[8]
REG[8] =  s3[020125..%](8)
REG[1] =  i:2
  17 AddImm           3    1    0               00 r[3]=r[3]+1
REG[3] =  i:0
  18 Close            0    0    0               00 
  19 Close            1    0    0               00 
  20 Close            2    0    0               00 
  21 ResultRow        3    1    0               00 output=r[3]
REG[3] =  i:1
  22 Halt             0    0    0               00 
SQL: [;
;VACUUM 
;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Vacuum           0    0    0               00 
SQL: [ATTACH '' AS vacuum_db;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0               00 r[1]=''
REG[1] =   t0[](8)
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
REG[2] =   t9[vacuum_db](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t0[](8)
REG[2] =   t9[vacuum_db](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      2    0    0 0             00 usesStmtJournal=0
  13 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [PRAGMA vacuum_db.synchronous=OFF]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [SELECT 'CREATE TABLE vacuum_db.' || substr(sql,14)   FROM sqlite_master WHERE type='table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    6 3             01 usesStmtJournal=0
  20 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  21 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  22 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  23 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  24 String8          0    8    0 CREATE TABLE vacuum_db. 00 r[8]='CREATE TABLE vacuum_db.'
REG[8] =   t23[CREATE TABLE va](8)
  25 Integer         14   10    0               00 r[10]=14
REG[10] =  i:14
  26 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   17    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[v0](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[v0](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:2
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:2
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s20[CREATE TABLE v0](8)
  13 Function0        2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s20[CREATE TABLE v0](8)
REG[10] =  i:14
REG[5] =   s7[v0 (v1)](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s7[v0 (v1)](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s30[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s30[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.v0 (v1)]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      2    1    0 0             01 usesStmtJournal=0
  33 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  34 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        2    2    4               00 
   4 SetCookie        2    5    1               00 
   5 CreateTable      2    2    0               00 r[2]=root iDb=2
REG[2] =  i:2
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:1
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:1
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  18 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  19 IsNull           5   28    0               00 if r[5]==NULL goto 28
REG[5] =  i:1
  20 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  21 String8          0    7    0 v0            00 r[7]='v0'
REG[7] =   t2[v0](8)
  22 String8          0    8    0 v0            00 r[8]='v0'
REG[8] =   t2[v0](8)
  23 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  24 String8          0   10    0 CREATE TABLE v0 (v1) 00 r[10]='CREATE TABLE v0 (v1)'
REG[10] =   t20[CREATE TABLE v0](8)
  25 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s36[0617111101357461626C657630763002.....5tablev0v0.](8)
  26 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s36[0617111101357461626C657630763002.....5tablev0v0.](8)
REG[5] =  i:1
  27 AddImm          12    1    0               00 r[12]=r[12]+1
REG[12] =  i:0
  28 Close            1    0    0               00 
  29 SetCookie        2    1    1               00 
  30 ParseSchema      2    0    0 tbl_name='v0' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    1 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 v0            00 r[2]='v0'
REG[2] =   t2[v0](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[v0](8)
REG[1] =   s2[v0](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[v0](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s20[CREATE TABLE v0](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[v0](8)
REG[6] =  i:2
REG[7] =   s20[CREATE TABLE v0](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  31 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[v2](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[v2](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:3
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:3
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s27[CREATE TABLE v2](8)
  13 Function         2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s27[CREATE TABLE v2](8)
REG[10] =  i:14
REG[5] =   s14[v2(v3, x, xyz)](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s14[v2(v3, x, xyz)](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s37[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s37[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.v2(v3, x, xyz)]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      2    1    1 0             01 usesStmtJournal=0
  33 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  34 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      2    2    0               00 r[2]=root iDb=2
REG[2] =  i:3
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:2
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:2
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  18 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  19 IsNull           5   28    0               00 if r[5]==NULL goto 28
REG[5] =  i:2
  20 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  21 String8          0    7    0 v2            00 r[7]='v2'
REG[7] =   t2[v2](8)
  22 String8          0    8    0 v2            00 r[8]='v2'
REG[8] =   t2[v2](8)
  23 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  24 String8          0   10    0 CREATE TABLE v2(v3, x, xyz) 00 r[10]='CREATE TABLE v2(v3, x, xyz)'
REG[10] =   t27[CREATE TABLE v2](8)
  25 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s43[0617111101437461626C657632763203.....Ctablev2v2.](8)
  26 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s43[0617111101437461626C657632763203.....Ctablev2v2.](8)
REG[5] =  i:2
  27 AddImm          12    1    0               00 r[12]=r[12]+1
REG[12] =  i:0
  28 Close            1    0    0               00 
  29 SetCookie        2    1    2               00 
  30 ParseSchema      2    0    0 tbl_name='v2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    2 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 v2            00 r[2]='v2'
REG[2] =   t2[v2](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[v2](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[v2](8)
REG[1] =   s2[v2](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[v2](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s27[CREATE TABLE v2](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[v2](8)
REG[6] =  i:3
REG[7] =   s27[CREATE TABLE v2](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  31 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  16 Next             0    4    0               01 
  17 Close            0    0    0               00 
  18 Halt             0    0    0               00 
SQL: [SELECT 'CREATE INDEX vacuum_db.' || substr(sql,14)  FROM sqlite_master WHERE sql LIKE 'CREATE INDEX %' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    6 3             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE INDEX % 00 r[2]='CREATE INDEX %'
REG[2] =   t14[CREATE INDEX %](8)
  17 String8          0    5    0 CREATE INDEX vacuum_db. 00 r[5]='CREATE INDEX vacuum_db.'
REG[5] =   t23[CREATE INDEX va](8)
  18 Integer         14    7    0               00 r[7]=14
REG[7] =  i:14
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s20[CREATE TABLE v0](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s20[CREATE TABLE v0](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE TABLE v2](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s27[CREATE TABLE v2](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s30[CREATE INDEX t1](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s30[CREATE INDEX t1](8)
REG[1] =  i:1
   6 IfNot            1   11    1               00 
REG[1] =  i:1
   7 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s30[CREATE INDEX t1](8)
   8 Function0        2    6    1 substr(2)     02 r[1]=func(r[6..7])
REG[6] =   s30[CREATE INDEX t1](8)
REG[7] =  i:14
REG[1] =   s17[t1 on v0("v1"=v](8)
   9 Concat           1    5    4               00 r[4]=r[5]+r[1]
REG[1] =   s17[t1 on v0("v1"=v](8)
REG[5] =   t23[CREATE INDEX va](8)
REG[4] =   s40[CREATE INDEX va](8)
  10 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s40[CREATE INDEX va](8)
SQL: [CREATE INDEX vacuum_db.t1 on v0("v1"=v1)]
VDBE Trace:
   0 Init             0   37    0               00 Start at 37
  37 Transaction      2    1    2 0             01 usesStmtJournal=0
  38 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  39 TableLock        2    2    1 v0            00 iDb=2 root=2 write=1
  40 Goto             0    1    0               00 
   1 Noop             0   36    0               00 
   2 CreateIndex      2    1    0               00 r[1]=root iDb=2
REG[1] =  i:4
   3 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
   4 OpenWrite        0    1    2 5             00 root=1 iDb=2; sqlite_master
   5 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:3
   6 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   7 String8          0    4    0 t1            00 r[4]='t1'
REG[4] =   t2[t1](8)
   8 String8          0    5    0 v0            00 r[5]='v0'
REG[5] =   t2[v0](8)
   9 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:4
  10 String8          0    7    0 CREATE INDEX t1 on v0("v1"=v1) 00 r[7]='CREATE INDEX t1 on v0("v1"=v1)'
REG[7] =   t30[CREATE INDEX t1](8)
  11 MakeRecord       3    5    9 BBBDB         00 r[9]=mkrec(r[3..7])
REG[9] =  s46[061711110149696E6465787431763004.....Iindext1v0.](8)
  12 Insert           0    9    2               18 intkey=r[2] data=r[9]
REG[9] =  s46[061711110149696E6465787431763004.....Iindext1v0.](8)
REG[2] =  i:3
  13 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  14 Close            0    0    0               00 
  15 SorterOpen       3    0    1 k(2,,)        00 
  16 OpenRead         1    2    2 1             00 root=2 iDb=2; v0
  17 Rewind           1   24    0               00 
  24 OpenWrite        2    1    2 k(2,,)        11 root=1 iDb=2
  25 SorterSort       3   30    0               00 
  30 Close            1    0    0               00 
  31 Close            2    0    0               00 
  32 Close            3    0    0               00 
  33 SetCookie        2    1    3               00 
  34 ParseSchema      2    0    0 name='t1' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    3 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[v2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s30[CREATE INDEX t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:4
REG[7] =   s30[CREATE INDEX t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  35 Expire           0    0    0               00 
  36 Halt             0    0    0               00 
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s30[CREATE INDEX a ](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s30[CREATE INDEX a ](8)
REG[1] =  i:1
   6 IfNot            1   11    1               00 
REG[1] =  i:1
   7 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s30[CREATE INDEX a ](8)
   8 Function         2    6    1 substr(2)     02 r[1]=func(r[6..7])
REG[6] =   s30[CREATE INDEX a ](8)
REG[7] =  i:14
REG[1] =   s17[a ON v0(v1+v1+v](8)
   9 Concat           1    5    4               00 r[4]=r[5]+r[1]
REG[1] =   s17[a ON v0(v1+v1+v](8)
REG[5] =   t23[CREATE INDEX va](8)
REG[4] =   s40[CREATE INDEX va](8)
  10 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s40[CREATE INDEX va](8)
SQL: [CREATE INDEX vacuum_db.a ON v0(v1+v1+v1)]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      2    1    3 0             01 usesStmtJournal=0
  39 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  40 TableLock        2    2    1 v0            00 iDb=2 root=2 write=1
  41 Goto             0    1    0               00 
   1 Noop             0   37    0               00 
   2 CreateIndex      2    1    0               00 r[1]=root iDb=2
REG[1] =  i:5
   3 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
   4 OpenWrite        0    1    2 5             00 root=1 iDb=2; sqlite_master
   5 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:4
   6 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   7 String8          0    4    0 a             00 r[4]='a'
REG[4] =   t1[a](8)
   8 String8          0    5    0 v0            00 r[5]='v0'
REG[5] =   t2[v0](8)
   9 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:5
  10 String8          0    7    0 CREATE INDEX a ON v0(v1+v1+v1) 00 r[7]='CREATE INDEX a ON v0(v1+v1+v1)'
REG[7] =   t30[CREATE INDEX a ](8)
  11 MakeRecord       3    5    9 BBBDB         00 r[9]=mkrec(r[3..7])
REG[9] =  s45[06170F110149696E6465786176300543.....Iindexav0.C](8)
  12 Insert           0    9    2               18 intkey=r[2] data=r[9]
REG[9] =  s45[06170F110149696E6465786176300543.....Iindexav0.C](8)
REG[2] =  i:4
  13 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  14 Close            0    0    0               00 
  15 SorterOpen       3    0    1 k(2,,)        00 
  16 OpenRead         1    2    2 1             00 root=2 iDb=2; v0
  17 Rewind           1   25    0               00 
  25 OpenWrite        2    1    2 k(2,,)        11 root=1 iDb=2
  26 SorterSort       3   31    0               00 
  31 Close            1    0    0               00 
  32 Close            2    0    0               00 
  33 Close            3    0    0               00 
  34 SetCookie        2    1    4               00 
  35 ParseSchema      2    0    0 name='a' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    4 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s2[v2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s1[a](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s30[CREATE INDEX a ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[a](8)
REG[6] =  i:5
REG[7] =   s30[CREATE INDEX a ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  36 Expire           0    0    0               00 
  37 Halt             0    0    0               00 
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'CREATE UNIQUE INDEX vacuum_db.' || substr(sql,21)   FROM sqlite_master WHERE sql LIKE 'CREATE UNIQUE INDEX %']
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    6 3             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE UNIQUE INDEX % 00 r[2]='CREATE UNIQUE INDEX %'
REG[2] =   t21[CREATE UNIQUE I](8)
  17 String8          0    5    0 CREATE UNIQUE INDEX vacuum_db. 00 r[5]='CREATE UNIQUE INDEX vacuum_db.'
REG[5] =   t30[CREATE UNIQUE I](8)
  18 Integer         21    7    0               00 r[7]=21
REG[7] =  i:21
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s20[CREATE TABLE v0](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s20[CREATE TABLE v0](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE TABLE v2](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s27[CREATE TABLE v2](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s30[CREATE INDEX t1](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s30[CREATE INDEX t1](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s30[CREATE INDEX a ](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s30[CREATE INDEX a ](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';'FROM main.sqlite_master WHERE type = 'table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    0    6 3             01 usesStmtJournal=0
  25 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  26 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  27 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  28 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  29 String8          0   10    0 INSERT INTO vacuum_db. 00 r[10]='INSERT INTO vacuum_db.'
REG[10] =   t22[INSERT INTO vac](8)
  30 String8          0   13    0  SELECT * FROM main. 00 r[13]=' SELECT * FROM main.'
REG[13] =   t20[ SELECT * FROM ](8)
  31 String8          0   14    0 ;             00 r[14]=';'
REG[14] =   t1[;](8)
  32 Goto             0    1    0               00 
   1 OpenRead         0    1    0 4             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   22    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[v0](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[v0](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:2
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:2
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[v0](8)
  13 Function0        0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s2[v0](8)
REG[11] =   z4['v0'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z4['v0'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s26[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s26[INSERT INTO vac](8)
REG[8] =   s46[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[v0](8)
  17 Function0        0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s2[v0](8)
REG[9] =   z4['v0'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z4['v0'](8)
REG[8] =   s46[INSERT INTO vac](8)
REG[5] =   s50[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s50[INSERT INTO vac](8)
REG[7] =   s51[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s51[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'v0' SELECT * FROM main.'v0';]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    0    6 3             01 usesStmtJournal=0
  34 Transaction      2    1    4 0             01 usesStmtJournal=0
  35 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
  36 TableLock        2    2    1 v0            00 iDb=2 root=2 write=1
  37 Goto             0    1    0               00 
   1 InitCoroutine    3   10    2               00 
  10 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  11 OpenWrite        1    2    2 1             00 root=2 iDb=2; v0
  12 OpenWrite        2    5    2 k(2,,)        00 root=5 iDb=2; a
  13 OpenWrite        3    4    2 k(2,,)        00 root=4 iDb=2; t1
  14 Yield            3   28    0               00 
REG[3] =  i:1
REG[3] =  i:14
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; v0
   3 Explain          0    0    0 SCAN TABLE v0 00 
   4 Rewind           0    8    0               00 
   5 Column           0    0    2               00 r[2]=v0.v1
REG[2] =  i:100
   6 Yield            3    0    0               00 
REG[3] =  i:14
REG[3] =  i:6
  15 NewRowid         1    1    0               00 r[1]=rowid
REG[1] =  i:1
  16 Add              2    2    9               00 r[9]=r[2]+r[2]
REG[2] =  i:100
REG[2] =  i:100
REG[9] =  i:200
  17 Add              2    9    7               00 r[7]=r[2]+r[9]; a column 0
REG[2] =  i:100
REG[9] =  i:200
REG[7] =  i:300
  18 IntCopy          1    8    0               00 r[8]=r[1]; rowid
REG[8] =  i:1
  19 MakeRecord       7    2    5               00 r[5]=mkrec(r[7..8]); for a
REG[5] =  s5[030209012C....,](8)
  20 Eq               2    7    2 (BINARY)      61 if r[2]==r[2] goto 7; t1 column 0
REG[2] =  i:100
REG[2] =  i:100
REG[7] =  i:1
  21 MakeRecord       7    2    6               00 r[6]=mkrec(r[7..8]); for t1
REG[6] =  s3[030909...](8)
  22 IdxInsert        2    5    0               10 key=r[5]
REG[5] =  s5[030209012C....,](8)
  23 IdxInsert        3    6    0               10 key=r[6]
REG[6] =  s3[030909...](8)
  24 MakeRecord       2    1    9               00 r[9]=mkrec(r[2])
REG[9] =  s3[020164..d](8)
  25 Insert           1    9    1 v0            1B intkey=r[1] data=r[9]
REG[9] =  s3[020164..d](8)
REG[1] =  i:1
  26 AddImm           4    1    0               00 r[4]=r[4]+1
REG[4] =  i:0
  27 Goto             0   14    0               00 
  14 Yield            3   28    0               00 
REG[3] =  i:6
REG[3] =  i:14
   7 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=v0.v1
REG[2] =  i:37
   6 Yield            3    0    0               00 
REG[3] =  i:14
REG[3] =  i:6
  15 NewRowid         1    1    0               00 r[1]=rowid
REG[1] =  i:2
  16 Add              2    2    9               00 r[9]=r[2]+r[2]
REG[2] =  i:37
REG[2] =  i:37
REG[9] =  i:74
  17 Add              2    9    7               00 r[7]=r[2]+r[9]; a column 0
REG[2] =  i:37
REG[9] =  i:74
REG[7] =  i:111
  18 IntCopy          1    8    0               00 r[8]=r[1]; rowid
REG[8] =  i:2
  19 MakeRecord       7    2    5               00 r[5]=mkrec(r[7..8]); for a
REG[5] =  s5[0301016F02...o.](8)
  20 Eq               2    7    2 (BINARY)      61 if r[2]==r[2] goto 7; t1 column 0
REG[2] =  i:37
REG[2] =  i:37
REG[7] =  i:1
  21 MakeRecord       7    2    6               00 r[6]=mkrec(r[7..8]); for t1
REG[6] =  s4[03090102....](8)
  22 IdxInsert        2    5    0               10 key=r[5]
REG[5] =  s5[0301016F02...o.](8)
  23 IdxInsert        3    6    0               10 key=r[6]
REG[6] =  s4[03090102....](8)
  24 MakeRecord       2    1    9               00 r[9]=mkrec(r[2])
REG[9] =  s3[020125..%](8)
  25 Insert           1    9    1 v0            1B intkey=r[1] data=r[9]
REG[9] =  s3[020125..%](8)
REG[1] =  i:2
  26 AddImm           4    1    0               00 r[4]=r[4]+1
REG[4] =  i:1
  27 Goto             0   14    0               00 
  14 Yield            3   28    0               00 
REG[3] =  i:6
REG[3] =  i:14
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 EndCoroutine     3    0    0               00 
REG[3] =  i:14
  28 Close            1    0    0               00 
  29 Close            2    0    0               00 
  30 Close            3    0    0               00 
  31 ResultRow        4    1    0               00 output=r[4]
REG[4] =  i:2
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[v2](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[v2](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:3
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:3
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[v2](8)
  13 Function         0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s2[v2](8)
REG[11] =   z4['v2'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z4['v2'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s26[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s26[INSERT INTO vac](8)
REG[8] =   s46[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[v2](8)
  17 Function         0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s2[v2](8)
REG[9] =   z4['v2'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z4['v2'](8)
REG[8] =   s46[INSERT INTO vac](8)
REG[5] =   s50[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s50[INSERT INTO vac](8)
REG[7] =   s51[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s51[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'v2' SELECT * FROM main.'v2';]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0    6 3             01 usesStmtJournal=0
  24 Transaction      2    1    4 0             01 usesStmtJournal=0
  25 TableLock        0    3    0 v2            00 iDb=0 root=3 write=0
  26 TableLock        2    3    1 v2            00 iDb=2 root=3 write=1
  27 Goto             0    1    0               00 
   1 InitCoroutine    5   12    2               00 
  12 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  13 OpenWrite        1    3    2 3             00 root=3 iDb=2; v2
  14 Yield            5   20    0               00 
REG[5] =  i:1
REG[5] =  i:14
   2 OpenRead         0    3    0 3             00 root=3 iDb=0; v2
   3 Explain          0    0    0 SCAN TABLE v2 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 EndCoroutine     5    0    0               00 
REG[5] =  i:14
  20 Close            1    0    0               00 
  21 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:0
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  21 Next             0    4    0               01 
  22 Close            0    0    0               00 
  23 Halt             0    0    0               00 
SQL: [SELECT 'DELETE FROM vacuum_db.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name='sqlite_sequence' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      2    0    4 0             01 usesStmtJournal=0
  15 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  16 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  17 String8          0    5    0 DELETE FROM vacuum_db. 00 r[5]='DELETE FROM vacuum_db.'
REG[5] =   t22[DELETE FROM vac](8)
  18 String8          0    8    0 ;             00 r[8]=';'
REG[8] =   t1[;](8)
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v0](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[v0](8)
  11 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v2](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[v2](8)
  11 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  11 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s1[a](8)
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name=='sqlite_sequence';]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      2    0    4 0             01 usesStmtJournal=0
  19 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  20 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  21 String8          0    7    0 INSERT INTO vacuum_db. 00 r[7]='INSERT INTO vacuum_db.'
REG[7] =   t22[INSERT INTO vac](8)
  22 String8          0   10    0  SELECT * FROM main. 00 r[10]=' SELECT * FROM main.'
REG[10] =   t20[ SELECT * FROM ](8)
  23 String8          0   11    0 ;             00 r[11]=';'
REG[11] =   t1[;](8)
  24 Goto             0    1    0               00 
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   16    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v0](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[v0](8)
  15 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v2](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[v2](8)
  15 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  15 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s1[a](8)
  15 Next             0    4    0               01 
  16 Close            0    0    0               00 
  17 Halt             0    0    0               00 
SQL: [INSERT INTO vacuum_db.sqlite_master   SELECT type, name, tbl_name, rootpage, sql    FROM main.sqlite_master   WHERE type='view' OR type='trigger'      OR (type='table' AND rootpage=0)]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    0    6 3             01 usesStmtJournal=0
  32 Transaction      2    1    4 0             01 usesStmtJournal=0
  33 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  34 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  35 String8          0    9    0 view          00 r[9]='view'
REG[9] =   t4[view](8)
  36 String8          0   11    0 trigger       00 r[11]='trigger'
REG[11] =   t7[trigger](8)
  37 String8          0   12    0 table         00 r[12]='table'
REG[12] =   t5[table](8)
  38 Integer          0   13    0               00 r[13]=0
REG[13] =  i:0
  39 Goto             0    1    0               00 
   1 InitCoroutine    7   20    2               00 
  20 Integer          0   14    0               00 r[14]=0
REG[14] =  i:0
  21 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  22 Yield            7   28    0               00 
REG[7] =  i:1
REG[7] =  i:22
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   18    0               00 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[table](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[table](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[table](8)
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
REG[10] =  i:2
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
REG[13] =  i:0
REG[10] =  i:2
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[table](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[table](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[table](8)
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
REG[10] =  i:3
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
REG[13] =  i:0
REG[10] =  i:3
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[index](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[index](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[index](8)
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[index](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[index](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[index](8)
  17 Next             0    5    0               01 
  18 Close            0    0    0               00 
  19 EndCoroutine     7    0    0               00 
REG[7] =  i:22
  28 Close            1    0    0               00 
  29 ResultRow       14    1    0               00 output=r[14]
REG[14] =  i:0
   2 Halt             0    0    0               00 
SQL: [SELECT CAST('1' AS REAL)
;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0 1             00 r[1]='1'
REG[1] =   t1[1](8)
   2 Cast             1   69    0               00 affinity(r[1])
REG[1] =   t1[1](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  r:1
   4 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    7 4             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v0](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s20[CREATE TABLE v0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[v0](8)
REG[2] =  i:2
REG[3] =   s20[CREATE TABLE v0](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v2](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE TABLE v2](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[v2](8)
REG[2] =  i:3
REG[3] =   s27[CREATE TABLE v2](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s30[CREATE INDEX t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:4
REG[3] =   s30[CREATE INDEX t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s30[CREATE INDEX a ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[a](8)
REG[2] =  i:5
REG[3] =   s30[CREATE INDEX a ](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      1    0    0 4             00 usesStmtJournal=0
  13 TableLock        1    1    0 sqlite_temp_master 00 iDb=1 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          0    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;UPDATE v0 SET v1=v1-100;]
VDBE Trace:
   0 Init             0   40    0               00 Start at 40
  40 Transaction      0    1    7 4             01 usesStmtJournal=0
  41 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
  42 Integer        100    8    0               00 r[8]=100
REG[8] =  i:100
  43 Goto             0    1    0               00 
   1 Null             0    3    4               00 r[3..4]=NULL
REG[3] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; v0
   3 Explain          0    0    0 SCAN TABLE v0 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:1
   6 RowSetAdd        3    4    0               00 rowset(3)=r[4]
REG[3] =  NULL
REG[4] =  i:1
   7 Next             0    5    0               01 
   5 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:2
   6 RowSetAdd        3    4    0               00 rowset(3)=r[4]
REG[3] =  (rowset)
REG[4] =  i:2
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  10 OpenWrite        0    2    0 1             00 root=2 iDb=0; v0
  11 OpenWrite        1    5    0 k(2,,)        00 root=5 iDb=0; a
  12 OpenWrite        2    4    0 k(2,,)        00 root=4 iDb=0; t1
  13 RowSetRead       3   35    4               00 r[4]=rowset(3)
REG[3] =  (rowset)
REG[4] =  i:1
  14 NotExists        0   13    4               00 intkey=r[4]
REG[4] =  i:1
  15 Column           0    0    7               00 r[7]=v0.v1
REG[7] =  i:100
  16 Subtract         8    7    5               00 r[5]=r[7]-r[8]
REG[8] =  i:100
REG[7] =  i:100
REG[5] =  i:0
  17 Add              5    5   11               00 r[11]=r[5]+r[5]
REG[5] =  i:0
REG[5] =  i:0
REG[11] =  i:0
  18 Add              5   11    9               00 r[9]=r[5]+r[11]; a column 0
REG[5] =  i:0
REG[11] =  i:0
REG[9] =  i:0
  19 IntCopy          4   10    0               00 r[10]=r[4]; rowid
REG[10] =  i:1
  20 MakeRecord       9    2    1               00 r[1]=mkrec(r[9..10]); for a
REG[1] =  s3[030809...](8)
  21 Eq               5    9    5 (BINARY)      61 if r[5]==r[5] goto 9; t1 column 0
REG[5] =  i:0
REG[5] =  i:0
REG[9] =  i:1
  22 MakeRecord       9    2    2               00 r[2]=mkrec(r[9..10]); for t1
REG[2] =  s3[030909...](8)
  23 Add              7    7   11               00 r[11]=r[7]+r[7]
REG[7] =  i:100
REG[7] =  i:100
REG[11] =  i:200
  24 Add              7   11    9               00 r[9]=r[7]+r[11]
REG[7] =  i:100
REG[11] =  i:200
REG[9] =  i:300
  25 Rowid            0   10    0               00 r[10]=rowid
REG[10] =  i:1
  26 IdxDelete        1    9    2               00 key=r[9..10]
  27 Eq               7    9    7 (BINARY)      61 if r[7]==r[7] goto 9
REG[7] =  i:100
REG[7] =  i:100
REG[9] =  i:1
  28 IdxDelete        2    9    2               00 key=r[9..10]
  29 IdxInsert        1    1    0               00 key=r[1]
REG[1] =  s3[030809...](8)
  30 IdxInsert        2    2    0               00 key=r[2]
REG[2] =  s3[030909...](8)
  31 MakeRecord       5    1   11               00 r[11]=mkrec(r[5])
REG[11] =  s2[0208..](8)
  32 Insert           0   11    4 v0            05 intkey=r[4] data=r[11]
REG[11] =  s2[0208..](8)
REG[4] =  i:1
  33 AddImm           6    1    0               00 r[6]=r[6]+1
REG[6] =  i:0
  34 Goto             0   13    0               00 
  13 RowSetRead       3   35    4               00 r[4]=rowset(3)
REG[3] =  (rowset)
REG[4] =  i:2
  14 NotExists        0   13    4               00 intkey=r[4]
REG[4] =  i:2
  15 Column           0    0    7               00 r[7]=v0.v1
REG[7] =  i:37
  16 Subtract         8    7    5               00 r[5]=r[7]-r[8]
REG[8] =  i:100
REG[7] =  i:37
REG[5] =  i:-63
  17 Add              5    5   11               00 r[11]=r[5]+r[5]
REG[5] =  i:-63
REG[5] =  i:-63
REG[11] =  i:-126
  18 Add              5   11    9               00 r[9]=r[5]+r[11]; a column 0
REG[5] =  i:-63
REG[11] =  i:-126
REG[9] =  i:-189
  19 IntCopy          4   10    0               00 r[10]=r[4]; rowid
REG[10] =  i:2
  20 MakeRecord       9    2    1               00 r[1]=mkrec(r[9..10]); for a
REG[1] =  s6[030201FF4302....C.](8)
  21 Eq               5    9    5 (BINARY)      61 if r[5]==r[5] goto 9; t1 column 0
REG[5] =  i:-63
REG[5] =  i:-63
REG[9] =  i:1
  22 MakeRecord       9    2    2               00 r[2]=mkrec(r[9..10]); for t1
REG[2] =  s4[03090102....](8)
  23 Add              7    7   11               00 r[11]=r[7]+r[7]
REG[7] =  i:37
REG[7] =  i:37
REG[11] =  i:74
  24 Add              7   11    9               00 r[9]=r[7]+r[11]
REG[7] =  i:37
REG[11] =  i:74
REG[9] =  i:111
  25 Rowid            0   10    0               00 r[10]=rowid
REG[10] =  i:2
  26 IdxDelete        1    9    2               00 key=r[9..10]
  27 Eq               7    9    7 (BINARY)      61 if r[7]==r[7] goto 9
REG[7] =  i:37
REG[7] =  i:37
REG[9] =  i:1
  28 IdxDelete        2    9    2               00 key=r[9..10]
  29 IdxInsert        1    1    0               00 key=r[1]
REG[1] =  s6[030201FF4302....C.](8)
  30 IdxInsert        2    2    0               00 key=r[2]
REG[2] =  s4[03090102....](8)
  31 MakeRecord       5    1   11               00 r[11]=mkrec(r[5])
REG[11] =  s3[0201C1...](8)
  32 Insert           0   11    4 v0            05 intkey=r[4] data=r[11]
REG[11] =  s3[0201C1...](8)
REG[4] =  i:2
  33 AddImm           6    1    0               00 r[6]=r[6]+1
REG[6] =  i:1
  34 Goto             0   13    0               00 
  13 RowSetRead       3   35    4               00 r[4]=rowset(3)
REG[3] =  (rowset)
REG[4] =  i:2
  35 Close            1    0    0               00 
  36 Close            2    0    0               00 
  37 Close            0    0    0               00 
  38 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:2
  39 Halt             0    0    0               00 
SQL: [;
;REINDEX;]
VDBE Trace:
   0 Init             0   41    0               00 Start at 41
  41 Transaction      0    1    7 4             01 usesStmtJournal=0
  42 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
  43 Goto             0    1    0               00 
   1 SorterOpen       2    0    1 k(2,,)        00 
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; v0
   3 Rewind           0   11    0               00 
   4 Column           0    0    5               00 r[5]=v0.v1
REG[5] =  i:0
   5 Add              5    5    4               00 r[4]=r[5]+r[5]
REG[5] =  i:0
REG[5] =  i:0
REG[4] =  i:0
   6 Add              5    4    2               00 r[2]=r[5]+r[4]
REG[5] =  i:0
REG[4] =  i:0
REG[2] =  i:0
   7 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:1
   8 MakeRecord       2    2    1               00 r[1]=mkrec(r[2..3])
REG[1] =  s3[030809...](8)
   9 SorterInsert     2    1    0               00 
REG[1] =  s3[030809...](8)
  10 Next             0    4    0               00 
   4 Column           0    0    5               00 r[5]=v0.v1
REG[5] =  i:-63
   5 Add              5    5    4               00 r[4]=r[5]+r[5]
REG[5] =  i:-63
REG[5] =  i:-63
REG[4] =  i:-126
   6 Add              5    4    2               00 r[2]=r[5]+r[4]
REG[5] =  i:-63
REG[4] =  i:-126
REG[2] =  i:-189
   7 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:2
   8 MakeRecord       2    2    1               00 r[1]=mkrec(r[2..3])
REG[1] =  s6[030201FF4302....C.](8)
   9 SorterInsert     2    1    0               00 
REG[1] =  s6[030201FF4302....C.](8)
  10 Next             0    4    0               00 
  11 Clear            5    0    0               00 
  12 OpenWrite        1    5    0 k(2,,)        01 root=5 iDb=0
  13 SorterSort       2   18    0               00 
  14 SorterData       2    1    1               00 r[1]=data
  15 Last             1    0   -1               00 
  16 IdxInsert        1    1    0               10 key=r[1]
REG[1] =  s6[030201FF4302....C.](8)
  17 SorterNext       2   14    0               00 
  14 SorterData       2    1    1               00 r[1]=data
  15 Last             1    0   -1               00 
  16 IdxInsert        1    1    0               10 key=r[1]
REG[1] =  s3[030809...](8)
  17 SorterNext       2   14    0               00 
  18 Close            0    0    0               00 
  19 Close            1    0    0               00 
  20 Close            2    0    0               00 
  21 SorterOpen       5    0    1 k(2,,)        00 
  22 OpenRead         3    2    0 1             00 root=2 iDb=0; v0
  23 Rewind           3   30    0               00 
  24 Column           3    0    4               00 r[4]=v0.v1
REG[4] =  i:0
  25 Eq               4    2    4 (BINARY)      61 if r[4]==r[4] goto 2
REG[4] =  i:0
REG[4] =  i:0
REG[2] =  i:1
  26 Rowid            3    3    0               00 r[3]=rowid
REG[3] =  i:1
  27 MakeRecord       2    2    1               00 r[1]=mkrec(r[2..3])
REG[1] =  s3[030909...](8)
  28 SorterInsert     5    1    0               00 
REG[1] =  s3[030909...](8)
  29 Next             3   24    0               00 
  24 Column           3    0    4               00 r[4]=v0.v1
REG[4] =  i:-63
  25 Eq               4    2    4 (BINARY)      61 if r[4]==r[4] goto 2
REG[4] =  i:-63
REG[4] =  i:-63
REG[2] =  i:1
  26 Rowid            3    3    0               00 r[3]=rowid
REG[3] =  i:2
  27 MakeRecord       2    2    1               00 r[1]=mkrec(r[2..3])
REG[1] =  s4[03090102....](8)
  28 SorterInsert     5    1    0               00 
REG[1] =  s4[03090102....](8)
  29 Next             3   24    0               00 
  30 Clear            4    0    0               00 
  31 OpenWrite        4    4    0 k(2,,)        01 root=4 iDb=0
  32 SorterSort       5   37    0               00 
  33 SorterData       5    1    4               00 r[1]=data
  34 Last             4    0   -1               00 
  35 IdxInsert        4    1    0               10 key=r[1]
REG[1] =  s3[030909...](8)
  36 SorterNext       5   33    0               00 
  33 SorterData       5    1    4               00 r[1]=data
  34 Last             4    0   -1               00 
  35 IdxInsert        4    1    0               10 key=r[1]
REG[1] =  s4[03090102....](8)
  36 SorterNext       5   33    0               00 
  37 Close            3    0    0               00 
  38 Close            4    0    0               00 
  39 Noop             5    0    0               00 
  40 Halt             0    0    0               00 
SQL: [;PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0   80    0               00 Start at 80
  80 Transaction      0    0    7 4             01 usesStmtJournal=0
  81 Transaction      1    0    0 4             01 usesStmtJournal=0
  82 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
  83 Goto             0    1    0               00 
   1 Integer        100    1    0               00 r[1]=100
REG[1] =  i:100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
REG[1] =  i:100
   4 IntegrityCk      2    5    1 [2,5]         00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
REG[2] =  NULL
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
REG[1] =  i:100
  12 OpenRead         1    2    0 1             00 root=2 iDb=0; v0
  13 OpenRead         2    5    0 k(2,,)        00 root=5 iDb=0; a
  14 OpenRead         3    4    0 k(2,,)        00 root=4 iDb=0; t1
  15 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  16 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  17 Integer          0    9    0               00 r[9]=0
REG[9] =  i:0
  18 Rewind           1   50    0               00 
  19 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  20 Column           1    0   14               00 r[14]=v0.v1
REG[14] =  i:0
  21 Add             14   14   13               00 r[13]=r[14]+r[14]
REG[14] =  i:0
REG[14] =  i:0
REG[13] =  i:0
  22 Add             14   13   11               00 r[11]=r[14]+r[13]
REG[14] =  i:0
REG[13] =  i:0
REG[11] =  i:0
  23 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:1
  24 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  25 Found            2   36   11 2             00 key=r[11..12]
REG[11] =  i:0
REG[12] =  i:1
  36 Eq              14   11   14 (BINARY)      61 if r[14]==r[14] goto 11
REG[14] =  i:0
REG[14] =  i:0
REG[11] =  i:1
  37 AddImm           9    1    0               00 r[9]=r[9]+1
REG[9] =  i:0
  38 Found            3   49   11 2             00 key=r[11..12]
REG[11] =  i:1
REG[12] =  i:1
  49 Next             1   19    0               00 
  19 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
  20 Column           1    0   14               00 r[14]=v0.v1
REG[14] =  i:-63
  21 Add             14   14   13               00 r[13]=r[14]+r[14]
REG[14] =  i:-63
REG[14] =  i:-63
REG[13] =  i:-126
  22 Add             14   13   11               00 r[11]=r[14]+r[13]
REG[14] =  i:-63
REG[13] =  i:-126
REG[11] =  i:-189
  23 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:2
  24 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:1
  25 Found            2   36   11 2             00 key=r[11..12]
REG[11] =  i:-189
REG[12] =  i:2
  36 Eq              14   11   14 (BINARY)      61 if r[14]==r[14] goto 11
REG[14] =  i:-63
REG[14] =  i:-63
REG[11] =  i:1
  37 AddImm           9    1    0               00 r[9]=r[9]+1
REG[9] =  i:1
  38 Found            3   49   11 2             00 key=r[11..12]
REG[11] =  i:1
REG[12] =  i:2
  49 Next             1   19    0               00 
  50 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  51 IfPos            1   53    0               00 if r[1]>0 then r[1]-=0, goto 53
REG[1] =  i:100
  53 Count            2    3    0               00 r[3]=count()
REG[3] =  i:2
  54 Eq               8   59    3               90 if r[8]==r[3] goto 59
REG[8] =  i:2
REG[3] =  i:2
  59 IfPos            1   61    0               00 if r[1]>0 then r[1]-=0, goto 61
REG[1] =  i:100
  61 Count            3    3    0               00 r[3]=count()
REG[3] =  i:2
  62 Eq               9   67    3               90 if r[9]==r[3] goto 67
REG[9] =  i:2
REG[3] =  i:2
  67 IfPos            1   69    0               00 if r[1]>0 then r[1]-=0, goto 69
REG[1] =  i:100
  69 IntegrityCk      2    1    1 ]             01 
  70 IsNull           2   75    0               00 if r[2]==NULL goto 75
REG[2] =  NULL
  75 AddImm           1 -100    0               00 r[1]=r[1]+-100
REG[1] =  i:100
  76 If               1   79    0               00 
REG[1] =  i:0
  77 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
  78 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
  79 Halt             0    0    0               00 
SQL: [;UPDATE v0 SET v1=NULL WHERE v1%2==0;]
VDBE Trace:
   0 Init             0   43    0               00 Start at 43
  43 Transaction      0    1    7 4             01 usesStmtJournal=0
  44 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
  45 Integer          2    8    0               00 r[8]=2
REG[8] =  i:2
  46 Integer          0    9    0               00 r[9]=0
REG[9] =  i:0
  47 Goto             0    1    0               00 
   1 Null             0    3    4               00 r[3..4]=NULL
REG[3] =  NULL
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; v0
   3 Explain          0    0    0 SCAN TABLE v0 00 
   4 Rewind           0   11    0               00 
   5 Column           0    0    7               00 r[7]=v0.v1
REG[7] =  i:0
   6 Remainder        8    7    6               00 r[6]=r[7]%r[8]
REG[8] =  i:2
REG[7] =  i:0
REG[6] =  i:0
   7 Ne               9   10    6               51 if r[9]!=r[6] goto 10
REG[9] =  i:0
REG[6] =  i:0
   8 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:1
   9 RowSetAdd        3    4    0               00 rowset(3)=r[4]
REG[3] =  NULL
REG[4] =  i:1
  10 Next             0    5    0               01 
   5 Column           0    0    7               00 r[7]=v0.v1
REG[7] =  i:-63
   6 Remainder        8    7    6               00 r[6]=r[7]%r[8]
REG[8] =  i:2
REG[7] =  i:-63
REG[6] =  i:-1
   7 Ne               9   10    6               51 if r[9]!=r[6] goto 10
REG[9] =  i:0
REG[6] =  i:-1
  10 Next             0    5    0               01 
  11 Close            0    0    0               00 
  12 Integer          0   10    0               00 r[10]=0
REG[10] =  i:0
  13 OpenWrite        0    2    0 1             00 root=2 iDb=0; v0
  14 OpenWrite        1    5    0 k(2,,)        00 root=5 iDb=0; a
  15 OpenWrite        2    4    0 k(2,,)        00 root=4 iDb=0; t1
  16 RowSetRead       3   38    4               00 r[4]=rowset(3)
REG[3] =  (rowset)
REG[4] =  i:1
  17 NotExists        0   16    4               00 intkey=r[4]
REG[4] =  i:1
  18 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  19 Add              5    5    7               00 r[7]=r[5]+r[5]
REG[5] =  NULL
REG[5] =  NULL
REG[7] =  NULL
  20 Add              5    7   11               00 r[11]=r[5]+r[7]; a column 0
REG[5] =  NULL
REG[7] =  NULL
REG[11] =  NULL
  21 IntCopy          4   12    0               00 r[12]=r[4]; rowid
REG[12] =  i:1
  22 MakeRecord      11    2    1               00 r[1]=mkrec(r[11..12]); for a
REG[1] =  s3[030009...](8)
  23 Eq               5   11    5 (BINARY)      61 if r[5]==r[5] goto 11; t1 column 0
REG[5] =  NULL
REG[5] =  NULL
REG[11] =  NULL
  24 MakeRecord      11    2    2               00 r[2]=mkrec(r[11..12]); for t1
REG[2] =  s3[030009...](8)
  25 Column           0    0    6               00 r[6]=v0.v1
REG[6] =  i:0
  26 Add              6    6    7               00 r[7]=r[6]+r[6]
REG[6] =  i:0
REG[6] =  i:0
REG[7] =  i:0
  27 Add              6    7   11               00 r[11]=r[6]+r[7]
REG[6] =  i:0
REG[7] =  i:0
REG[11] =  i:0
  28 Rowid            0   12    0               00 r[12]=rowid
REG[12] =  i:1
  29 IdxDelete        1   11    2               00 key=r[11..12]
  30 Eq               6   11    6 (BINARY)      61 if r[6]==r[6] goto 11
REG[6] =  i:0
REG[6] =  i:0
REG[11] =  i:1
  31 IdxDelete        2   11    2               00 key=r[11..12]
  32 IdxInsert        1    1    0               00 key=r[1]
REG[1] =  s3[030009...](8)
  33 IdxInsert        2    2    0               00 key=r[2]
REG[2] =  s3[030009...](8)
  34 MakeRecord       5    1    7               00 r[7]=mkrec(r[5])
REG[7] =  s2[0200..](8)
  35 Insert           0    7    4 v0            05 intkey=r[4] data=r[7]
REG[7] =  s2[0200..](8)
REG[4] =  i:1
  36 AddImm          10    1    0               00 r[10]=r[10]+1
REG[10] =  i:0
  37 Goto             0   16    0               00 
  16 RowSetRead       3   38    4               00 r[4]=rowset(3)
REG[3] =  (rowset)
REG[4] =  i:1
  38 Close            1    0    0               00 
  39 Close            2    0    0               00 
  40 Close            0    0    0               00 
  41 ResultRow       10    1    0               00 output=r[10]
REG[10] =  i:1
  42 Halt             0    0    0               00 
SQL: [;CREATE UNIQUE INDEX b ON v0(v1) WHERE v1<>999;]
VDBE Trace:
   0 Init             0   41    0               00 Start at 41
  41 Transaction      0    1    7 4             01 usesStmtJournal=1
  42 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  43 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
  44 Integer        999   12    0               00 r[12]=999
REG[12] =  i:999
  45 Goto             0    1    0               00 
   1 Noop             0   40    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:6
   3 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
   4 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   5 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:5
   6 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   7 String8          0    4    0 b             00 r[4]='b'
REG[4] =   t1[b](8)
   8 String8          0    5    0 v0            00 r[5]='v0'
REG[5] =   t2[v0](8)
   9 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:6
  10 String8          0    7    0 CREATE UNIQUE INDEX b ON v0(v1) WHERE v1<>999 00 r[7]='CREATE UNIQUE INDEX b ON v0(v1) WHERE v1<>999'
REG[7] =   t45[CREATE UNIQUE I](8)
  11 MakeRecord       3    5    9 BBBDB         00 r[9]=mkrec(r[3..7])
REG[9] =  s60[06170F110167696E6465786276300643.....gindexbv0.C](8)
  12 Insert           0    9    2               18 intkey=r[2] data=r[9]
REG[9] =  s60[06170F110167696E6465786276300643.....gindexbv0.C](8)
REG[2] =  i:5
  13 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  14 Close            0    0    0               00 
  15 SorterOpen       3    0    1 k(2,,)        00 
  16 OpenRead         1    2    0 1             00 root=2 iDb=0; v0
  17 Rewind           1   25    0               00 
  18 Column           1    0   11               00 r[11]=v0.v1
REG[11] =  NULL
  19 Eq              12   24   11 (BINARY)      51 if r[12]==r[11] goto 24
REG[12] =  i:999
REG[11] =  NULL
  24 Next             1   18    0               00 
  18 Column           1    0   11               00 r[11]=v0.v1
REG[11] =  i:-63
  19 Eq              12   24   11 (BINARY)      51 if r[12]==r[11] goto 24
REG[12] =  i:999
REG[11] =  i:-63
  20 Column           1    0   13               00 r[13]=v0.v1
REG[13] =  i:-63
  21 Rowid            1   14    0               00 r[14]=rowid
REG[14] =  i:2
  22 MakeRecord      13    2   10               00 r[10]=mkrec(r[13..14])
REG[10] =  s5[030101C102.....](8)
  23 SorterInsert     3   10    0               00 
REG[10] =  s5[030101C102.....](8)
  24 Next             1   18    0               00 
  25 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  26 SorterSort       3   34    0               00 
  27 Goto             0   30    0               00 
  30 SorterData       3   10    2               00 r[10]=data
  31 Last             2    0   -1               00 
  32 IdxInsert        2   10    0               10 key=r[10]
REG[10] =  s5[030101C102.....](8)
  33 SorterNext       3   28    0               00 
  34 Close            1    0    0               00 
  35 Close            2    0    0               00 
  36 Close            3    0    0               00 
  37 SetCookie        0    1    8               00 
  38 ParseSchema      0    0    0 name='b' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    8 4             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 b             00 r[2]='b'
REG[2] =   t1[b](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[b](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[b](8)
REG[1] =   s2[v2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[b](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[b](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[b](8)
REG[1] =   s1[b](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s1[b](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:6
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s45[CREATE UNIQUE I](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[b](8)
REG[6] =  i:6
REG[7] =   s45[CREATE UNIQUE I](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  39 Expire           0    0    0               00 
  40 Halt             0    0    0               00 
SQL: [;
;SELECT count(*) FROM v0 WHERE v1=999;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    8 4             01 usesStmtJournal=0
  15 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
  16 Integer        999    3    0               00 r[3]=999
REG[3] =  i:999
  17 Goto             0    1    0               00 
   1 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; v0
   3 Explain          0    0    0 SCAN TABLE v0 00 
   4 Rewind           0    9    0               00 
   5 Column           0    0    2               00 r[2]=v0.v1
REG[2] =  NULL
   6 Ne               3    8    2 (BINARY)      51 if r[3]!=r[2] goto 8
REG[3] =  i:999
REG[2] =  NULL
   8 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=v0.v1
REG[2] =  i:-63
   6 Ne               3    8    2 (BINARY)      51 if r[3]!=r[2] goto 8
REG[3] =  i:999
REG[2] =  i:-63
   8 Next             0    5    0               01 
   9 Close            0    0    0               00 
  10 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  11 Copy             1    4    0               00 r[4]=r[1]
REG[4] =  i:0
  12 ResultRow        4    1    0               00 output=r[4]
REG[4] =  i:0
  13 Halt             0    0    0               00 
SQL: [;
;PRAGMA integrity_check
;]
VDBE Trace:
   0 Init             0  113    0               00 Start at 113
 113 Transaction      0    0    8 4             01 usesStmtJournal=0
 114 Transaction      1    0    0 4             01 usesStmtJournal=0
 115 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
 116 Integer        999   13    0               00 r[13]=999
REG[13] =  i:999
 117 Goto             0    1    0               00 
   1 Integer        100    1    0               00 r[1]=100
REG[1] =  i:100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
REG[1] =  i:100
   4 IntegrityCk      2    6    1 [2,6]         00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
REG[2] =  NULL
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
REG[1] =  i:100
  12 OpenRead         1    2    0 1             00 root=2 iDb=0; v0
  13 OpenRead         2    6    0 k(2,,)        00 root=6 iDb=0; b
  14 OpenRead         3    5    0 k(2,,)        00 root=5 iDb=0; a
  15 OpenRead         4    4    0 k(2,,)        00 root=4 iDb=0; t1
  16 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  17 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  18 Integer          0    9    0               00 r[9]=0
REG[9] =  i:0
  19 Integer          0   10    0               00 r[10]=0
REG[10] =  i:0
  20 Rewind           1   75    0               00 
  21 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  22 Column           1    0   12               00 r[12]=v0.v1
REG[12] =  NULL
  23 Eq              13   45   12 (BINARY)      51 if r[13]==r[12] goto 45
REG[13] =  i:999
REG[12] =  NULL
  45 Column           1    0   16               00 r[16]=v0.v1
REG[16] =  NULL
  46 Add             16   16   12               00 r[12]=r[16]+r[16]
REG[16] =  NULL
REG[16] =  NULL
REG[12] =  NULL
  47 Add             16   12   14               00 r[14]=r[16]+r[12]
REG[16] =  NULL
REG[12] =  NULL
REG[14] =  NULL
  48 Rowid            1   15    0               00 r[15]=rowid
REG[15] =  i:1
  49 AddImm           9    1    0               00 r[9]=r[9]+1
REG[9] =  i:0
  50 Found            3   61   14 2             00 key=r[14..15]
REG[14] =  NULL
REG[15] =  i:1
  61 Eq              16   14   16 (BINARY)      61 if r[16]==r[16] goto 14
REG[16] =  NULL
REG[16] =  NULL
REG[14] =  NULL
  62 AddImm          10    1    0               00 r[10]=r[10]+1
REG[10] =  i:0
  63 Found            4   74   14 2             00 key=r[14..15]
REG[14] =  NULL
REG[15] =  i:1
  74 Next             1   21    0               00 
  21 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
  22 Column           1    0   12               00 r[12]=v0.v1
REG[12] =  i:-63
  23 Eq              13   45   12 (BINARY)      51 if r[13]==r[12] goto 45
REG[13] =  i:999
REG[12] =  i:-63
  24 Column           1    0   14               00 r[14]=v0.v1
REG[14] =  i:-63
  25 Rowid            1   15    0               00 r[15]=rowid
REG[15] =  i:2
  26 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  27 Found            2   38   14 2             00 key=r[14..15]
REG[14] =  i:-63
REG[15] =  i:2
  38 IsNull          14   45    0               00 if r[14]==NULL goto 45
REG[14] =  i:-63
  39 Next             2   41    0               00 
  40 Goto             0   45    0               00 
  45 Column           1    0   16               00 r[16]=v0.v1
REG[16] =  i:-63
  46 Add             16   16   12               00 r[12]=r[16]+r[16]
REG[16] =  i:-63
REG[16] =  i:-63
REG[12] =  i:-126
  47 Add             16   12   14               00 r[14]=r[16]+r[12]
REG[16] =  i:-63
REG[12] =  i:-126
REG[14] =  i:-189
  48 Rowid            1   15    0               00 r[15]=rowid
REG[15] =  i:2
  49 AddImm           9    1    0               00 r[9]=r[9]+1
REG[9] =  i:1
  50 Found            3   61   14 2             00 key=r[14..15]
REG[14] =  i:-189
REG[15] =  i:2
  61 Eq              16   14   16 (BINARY)      61 if r[16]==r[16] goto 14
REG[16] =  i:-63
REG[16] =  i:-63
REG[14] =  i:1
  62 AddImm          10    1    0               00 r[10]=r[10]+1
REG[10] =  i:1
  63 Found            4   74   14 2             00 key=r[14..15]
REG[14] =  i:1
REG[15] =  i:2
  74 Next             1   21    0               00 
  75 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  76 IfPos            1   78    0               00 if r[1]>0 then r[1]-=0, goto 78
REG[1] =  i:100
  78 Count            2    3    0               00 r[3]=count()
REG[3] =  i:1
  79 Eq               8   84    3               90 if r[8]==r[3] goto 84
REG[8] =  i:1
REG[3] =  i:1
  84 IfPos            1   86    0               00 if r[1]>0 then r[1]-=0, goto 86
REG[1] =  i:100
  86 Count            3    3    0               00 r[3]=count()
REG[3] =  i:2
  87 Eq               9   92    3               90 if r[9]==r[3] goto 92
REG[9] =  i:2
REG[3] =  i:2
  92 IfPos            1   94    0               00 if r[1]>0 then r[1]-=0, goto 94
REG[1] =  i:100
  94 Count            4    3    0               00 r[3]=count()
REG[3] =  i:2
  95 Eq              10  100    3               90 if r[10]==r[3] goto 100
REG[10] =  i:2
REG[3] =  i:2
 100 IfPos            1  102    0               00 if r[1]>0 then r[1]-=0, goto 102
REG[1] =  i:100
 102 IntegrityCk      2    1    1 ]             01 
 103 IsNull           2  108    0               00 if r[2]==NULL goto 108
REG[2] =  NULL
 108 AddImm           1 -100    0               00 r[1]=r[1]+-100
REG[1] =  i:100
 109 If               1  112    0               00 
REG[1] =  i:0
 110 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
 111 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
 112 Halt             0    0    0               00 
SQL: [BEGIN
;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      1    0    0 4             01 usesStmtJournal=0
  15 TableLock        1    1    0 sqlite_temp_master 00 iDb=1 root=1 write=0
  16 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          0    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   12    0               00 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0  113    0               00 Start at 113
 113 Transaction      0    0    8 4             01 usesStmtJournal=0
 114 Transaction      1    0    0 4             01 usesStmtJournal=0
 115 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
 116 Integer        999   13    0               00 r[13]=999
REG[13] =  i:999
 117 Goto             0    1    0               00 
   1 Integer        100    1    0               00 r[1]=100
REG[1] =  i:100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
REG[1] =  i:100
   4 IntegrityCk      2    6    1 [2,6]         00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
REG[2] =  NULL
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
REG[1] =  i:100
  12 OpenRead         1    2    0 1             00 root=2 iDb=0; v0
  13 OpenRead         2    6    0 k(2,,)        00 root=6 iDb=0; b
  14 OpenRead         3    5    0 k(2,,)        00 root=5 iDb=0; a
  15 OpenRead         4    4    0 k(2,,)        00 root=4 iDb=0; t1
  16 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  17 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  18 Integer          0    9    0               00 r[9]=0
REG[9] =  i:0
  19 Integer          0   10    0               00 r[10]=0
REG[10] =  i:0
  20 Rewind           1   75    0               00 
  21 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  22 Column           1    0   12               00 r[12]=v0.v1
REG[12] =  NULL
  23 Eq              13   45   12 (BINARY)      51 if r[13]==r[12] goto 45
REG[13] =  i:999
REG[12] =  NULL
  45 Column           1    0   16               00 r[16]=v0.v1
REG[16] =  NULL
  46 Add             16   16   12               00 r[12]=r[16]+r[16]
REG[16] =  NULL
REG[16] =  NULL
REG[12] =  NULL
  47 Add             16   12   14               00 r[14]=r[16]+r[12]
REG[16] =  NULL
REG[12] =  NULL
REG[14] =  NULL
  48 Rowid            1   15    0               00 r[15]=rowid
REG[15] =  i:1
  49 AddImm           9    1    0               00 r[9]=r[9]+1
REG[9] =  i:0
  50 Found            3   61   14 2             00 key=r[14..15]
REG[14] =  NULL
REG[15] =  i:1
  61 Eq              16   14   16 (BINARY)      61 if r[16]==r[16] goto 14
REG[16] =  NULL
REG[16] =  NULL
REG[14] =  NULL
  62 AddImm          10    1    0               00 r[10]=r[10]+1
REG[10] =  i:0
  63 Found            4   74   14 2             00 key=r[14..15]
REG[14] =  NULL
REG[15] =  i:1
  74 Next             1   21    0               00 
  21 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
  22 Column           1    0   12               00 r[12]=v0.v1
REG[12] =  i:-63
  23 Eq              13   45   12 (BINARY)      51 if r[13]==r[12] goto 45
REG[13] =  i:999
REG[12] =  i:-63
  24 Column           1    0   14               00 r[14]=v0.v1
REG[14] =  i:-63
  25 Rowid            1   15    0               00 r[15]=rowid
REG[15] =  i:2
  26 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  27 Found            2   38   14 2             00 key=r[14..15]
REG[14] =  i:-63
REG[15] =  i:2
  38 IsNull          14   45    0               00 if r[14]==NULL goto 45
REG[14] =  i:-63
  39 Next             2   41    0               00 
  40 Goto             0   45    0               00 
  45 Column           1    0   16               00 r[16]=v0.v1
REG[16] =  i:-63
  46 Add             16   16   12               00 r[12]=r[16]+r[16]
REG[16] =  i:-63
REG[16] =  i:-63
REG[12] =  i:-126
  47 Add             16   12   14               00 r[14]=r[16]+r[12]
REG[16] =  i:-63
REG[12] =  i:-126
REG[14] =  i:-189
  48 Rowid            1   15    0               00 r[15]=rowid
REG[15] =  i:2
  49 AddImm           9    1    0               00 r[9]=r[9]+1
REG[9] =  i:1
  50 Found            3   61   14 2             00 key=r[14..15]
REG[14] =  i:-189
REG[15] =  i:2
  61 Eq              16   14   16 (BINARY)      61 if r[16]==r[16] goto 14
REG[16] =  i:-63
REG[16] =  i:-63
REG[14] =  i:1
  62 AddImm          10    1    0               00 r[10]=r[10]+1
REG[10] =  i:1
  63 Found            4   74   14 2             00 key=r[14..15]
REG[14] =  i:1
REG[15] =  i:2
  74 Next             1   21    0               00 
  75 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  76 IfPos            1   78    0               00 if r[1]>0 then r[1]-=0, goto 78
REG[1] =  i:100
  78 Count            2    3    0               00 r[3]=count()
REG[3] =  i:1
  79 Eq               8   84    3               90 if r[8]==r[3] goto 84
REG[8] =  i:1
REG[3] =  i:1
  84 IfPos            1   86    0               00 if r[1]>0 then r[1]-=0, goto 86
REG[1] =  i:100
  86 Count            3    3    0               00 r[3]=count()
REG[3] =  i:2
  87 Eq               9   92    3               90 if r[9]==r[3] goto 92
REG[9] =  i:2
REG[3] =  i:2
  92 IfPos            1   94    0               00 if r[1]>0 then r[1]-=0, goto 94
REG[1] =  i:100
  94 Count            4    3    0               00 r[3]=count()
REG[3] =  i:2
  95 Eq              10  100    3               90 if r[10]==r[3] goto 100
REG[10] =  i:2
REG[3] =  i:2
 100 IfPos            1  102    0               00 if r[1]>0 then r[1]-=0, goto 102
REG[1] =  i:100
 102 IntegrityCk      2    1    1 ]             01 
 103 IsNull           2  108    0               00 if r[2]==NULL goto 108
REG[2] =  NULL
 108 AddImm           1 -100    0               00 r[1]=r[1]+-100
REG[1] =  i:100
 109 If               1  112    0               00 
REG[1] =  i:0
 110 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
 111 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
 112 Halt             0    0    0               00 
SQL: [;
;CREATE INDEX t1b ON v0(v1) WHERE xyzzy.v0.v1 BETWEEN 5 AND 10;]
VDBE Trace:
   0 Init             0   39    0               00 Start at 39
  39 Transaction      0    1    8 4             01 usesStmtJournal=0
  40 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  41 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
  42 Integer          5   13    0               00 r[13]=5
REG[13] =  i:5
  43 Integer         10   14    0               00 r[14]=10
REG[14] =  i:10
  44 Goto             0    1    0               00 
   1 Noop             0   38    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:7
   3 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
   4 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   5 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:6
   6 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   7 String8          0    4    0 t1b           00 r[4]='t1b'
REG[4] =   t3[t1b](8)
   8 String8          0    5    0 v0            00 r[5]='v0'
REG[5] =   t2[v0](8)
   9 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:7
  10 String8          0    7    0 CREATE INDEX t1b ON v0(v1) WHERE xyzzy.v0.v1 BETWEEN 5 AND 10 00 r[7]='CREATE INDEX t1b ON v0(v1) WHERE xyzzy.v0.v1 BETWEEN 5 AND 10'
REG[7] =   t61[CREATE INDEX t1](8)
  11 MakeRecord       3    5    9 BBBDB         00 r[9]=mkrec(r[3..7])
REG[9] =  s79[07171311018107696E64657874316276.......indext1bv](8)
  12 Insert           0    9    2               18 intkey=r[2] data=r[9]
REG[9] =  s79[07171311018107696E64657874316276.......indext1bv](8)
REG[2] =  i:6
  13 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  14 Close            0    0    0               00 
  15 SorterOpen       3    0    1 k(2,,)        00 
  16 OpenRead         1    2    0 1             00 root=2 iDb=0; v0
  17 Rewind           1   26    0               00 
  18 Column           1    0   11               00 r[11]=v0.v1
REG[11] =  NULL
  19 Lt              13   25   11 (BINARY)      51 if r[13]<r[11] goto 25
REG[13] =  i:5
REG[11] =  NULL
  25 Next             1   18    0               00 
  18 Column           1    0   11               00 r[11]=v0.v1
REG[11] =  i:-63
  19 Lt              13   25   11 (BINARY)      51 if r[13]<r[11] goto 25
REG[13] =  i:5
REG[11] =  i:-63
  25 Next             1   18    0               00 
  26 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  27 SorterSort       3   32    0               00 
  32 Close            1    0    0               00 
  33 Close            2    0    0               00 
  34 Close            3    0    0               00 
  35 SetCookie        0    1    9               00 
  36 ParseSchema      0    0    0 name='t1b' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    9 4             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1b           00 r[2]='t1b'
REG[2] =   t3[t1b](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[t1b](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[t1b](8)
REG[1] =   s2[v2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[t1b](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[t1b](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[t1b](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[t1b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[t1b](8)
REG[1] =   s3[t1b](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s3[t1b](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:7
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s61[CREATE INDEX t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s3[t1b](8)
REG[6] =  i:7
REG[7] =   s61[CREATE INDEX t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  37 Expire           0    0    0               00 
  38 Halt             0    0    0               00 
SQL: [;/* ^^^^^-- ignored */
  ANALYZE;]
VDBE Trace:
   0 Init             0  126    0               00 Start at 126
 126 Transaction      0    1    9 4             01 usesStmtJournal=0
 127 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
 128 TableLock        0    3    0 v2            00 iDb=0 root=3 write=0
 129 TableLock        0    2    0 v0            00 iDb=0 root=2 write=0
 130 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:8
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:7
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:7
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        3    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:7
  16 NotExists        3   18    1               00 intkey=r[1]; pk
REG[1] =  i:7
  17 Rowid            3    5    0               00 r[5]=rowid
REG[5] =  i:7
  18 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  19 IsNull           5   28    0               00 if r[5]==NULL goto 28
REG[5] =  i:7
  20 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  21 String8          0    7    0 sqlite_stat1  00 r[7]='sqlite_stat1'
REG[7] =   t12[sqlite_stat1](8)
  22 String8          0    8    0 sqlite_stat1  00 r[8]='sqlite_stat1'
REG[8] =   t12[sqlite_stat1](8)
  23 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:8
  24 String8          0   10    0 CREATE TABLE sqlite_stat1(tbl,idx,stat) 00 r[10]='CREATE TABLE sqlite_stat1(tbl,idx,stat)'
REG[10] =   t39[CREATE TABLE sq](8)
  25 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit](8)
  26 Insert           3   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit](8)
REG[5] =  i:7
  27 AddImm          12    1    0               00 r[12]=r[12]+1
REG[12] =  i:0
  28 Close            3    0    0               00 
  29 SetCookie        0    1   10               00 
  30 ParseSchema      0    0    0 tbl_name='sqlite_stat1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0   10 4             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 sqlite_stat1  00 r[2]='sqlite_stat1'
REG[2] =   t12[sqlite_stat1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[v2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s12[sqlite_stat1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s12[sqlite_stat1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:8
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s39[CREATE TABLE sq](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s12[sqlite_stat1](8)
REG[6] =  i:8
REG[7] =   s39[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  31 OpenWrite        0    2    0 3             10 root=2 iDb=0; sqlite_stat1
  32 OpenRead         4    3    0 3             00 root=3 iDb=0; v2
  33 String8          0   17    0 v2            00 r[17]='v2'; v2
REG[17] =   t2[v2](8)
  34 Count            4   19    0               00 r[19]=count()
REG[19] =  i:0
  35 IfNot           19   40    0               00 
REG[19] =  i:0
  40 OpenRead         4    2    0 1             00 root=2 iDb=0; v0
  41 String8          0   17    0 v0            00 r[17]='v0'
REG[17] =   t2[v0](8)
  42 String8          0   18    0 t1b           00 r[18]='t1b'; Analysis for v0.t1b
REG[18] =   t3[t1b](8)
  43 OpenRead         5    7    0 k(2,,)        00 root=7 iDb=0; t1b
  44 Integer          2   15    0               00 r[15]=2
REG[15] =  i:2
  45 Integer          1   16    0               00 r[16]=1
REG[16] =  i:1
  46 Function0        0   15   14 stat_init(2)  02 r[14]=func(r[15..16])
REG[15] =  i:2
REG[16] =  i:1
REG[14] =  z88[00000000000000000200000001000000................](8)
  47 Rewind           5   62    0               00 
  62 String8          0   18    0 b             00 r[18]='b'; Analysis for v0.b
REG[18] =   t1[b](8)
  63 OpenRead         5    6    0 k(2,,)        00 root=6 iDb=0; b
  64 Integer          2   15    0               00 r[15]=2
REG[15] =  i:2
  65 Integer          1   16    0               00 r[16]=1
REG[16] =  i:1
  66 Function0        0   15   14 stat_init(2)  02 r[14]=func(r[15..16])
REG[15] =  i:2
REG[16] =  i:1
REG[14] =  z88[00000000000000000200000001000000................](8)
  67 Rewind           5   83    0               00 
  68 Integer          0   15    0               00 r[15]=0
REG[15] =  i:0
  69 Goto             0   76    0               00 
  76 Column           5    0   20               00 r[20]=
REG[20] =  i:-63
  77 Function0        1   14   16 stat_push(2)  02 r[16]=func(r[14..15])
REG[14] =  z88[00000000000000000200000001000000................](8)
REG[15] =  i:0
REG[16] =  NULL
  78 Next             5   70    0               00 
  79 Function0        0   14   19 stat_get(1)   01 r[19]=func(r[14])
REG[14] =  z88[01000000000000000200000001000000................](8)
REG[19] =   z3[1 1](8)
  80 MakeRecord      17    3   16 BBB           00 r[16]=mkrec(r[17..19])
REG[16] =  s10[04110F13763062312031....v0b1 1](8)
  81 NewRowid         0   13    0               00 r[13]=rowid
REG[13] =  i:1
  82 Insert           0   16   13               08 intkey=r[13] data=r[16]
REG[16] =  s10[04110F13763062312031....v0b1 1](8)
REG[13] =  i:1
  83 String8          0   18    0 a             00 r[18]='a'; Analysis for v0.a
REG[18] =   t1[a](8)
  84 OpenRead         5    5    0 k(2,,)        00 root=5 iDb=0; a
  85 Integer          2   15    0               00 r[15]=2
REG[15] =  i:2
  86 Integer          1   16    0               00 r[16]=1
REG[16] =  i:1
  87 Function0        0   15   14 stat_init(2)  02 r[14]=func(r[15..16])
REG[15] =  i:2
REG[16] =  i:1
REG[14] =  z88[00000000000000000200000001000000................](8)
  88 Rewind           5  103    0               00 
  89 Integer          0   15    0               00 r[15]=0
REG[15] =  i:0
  90 Goto             0   96    0               00 
  96 Column           5    0   20               00 r[20]=
REG[20] =  NULL
  97 Function0        1   14   16 stat_push(2)  02 r[16]=func(r[14..15])
REG[14] =  z88[00000000000000000200000001000000................](8)
REG[15] =  i:0
REG[16] =  NULL
  98 Next             5   91    0               00 
  91 Integer          0   15    0               00 r[15]=0
REG[15] =  i:0
  92 Column           5    0   16               00 r[16]=
REG[16] =  i:-189
  93 Ne              16   96   20 (BINARY)      80 if r[16]!=r[20] goto 96
REG[16] =  i:-189
REG[20] =  NULL
  96 Column           5    0   20               00 r[20]=
REG[20] =  i:-189
  97 Function         1   14   16 stat_push(2)  02 r[16]=func(r[14..15])
REG[14] =  z88[01000000000000000200000001000000................](8)
REG[15] =  i:0
REG[16] =  NULL
  98 Next             5   91    0               00 
  99 Function0        0   14   19 stat_get(1)   01 r[19]=func(r[14])
REG[14] =  z88[02000000000000000200000001000000................](8)
REG[19] =   z3[2 1](8)
 100 MakeRecord      17    3   16 BBB           00 r[16]=mkrec(r[17..19])
REG[16] =  s10[04110F13763061322031....v0a2 1](8)
 101 NewRowid         0   13    0               00 r[13]=rowid
REG[13] =  i:2
 102 Insert           0   16   13               08 intkey=r[13] data=r[16]
REG[16] =  s10[04110F13763061322031....v0a2 1](8)
REG[13] =  i:2
 103 String8          0   18    0 t1            00 r[18]='t1'; Analysis for v0.t1
REG[18] =   t2[t1](8)
 104 OpenRead         5    4    0 k(2,,)        00 root=4 iDb=0; t1
 105 Integer          2   15    0               00 r[15]=2
REG[15] =  i:2
 106 Integer          1   16    0               00 r[16]=1
REG[16] =  i:1
 107 Function0        0   15   14 stat_init(2)  02 r[14]=func(r[15..16])
REG[15] =  i:2
REG[16] =  i:1
REG[14] =  z88[00000000000000000200000001000000................](8)
 108 Rewind           5  123    0               00 
 109 Integer          0   15    0               00 r[15]=0
REG[15] =  i:0
 110 Goto             0  116    0               00 
 116 Column           5    0   20               00 r[20]=
REG[20] =  NULL
 117 Function0        1   14   16 stat_push(2)  02 r[16]=func(r[14..15])
REG[14] =  z88[00000000000000000200000001000000................](8)
REG[15] =  i:0
REG[16] =  NULL
 118 Next             5  111    0               00 
 111 Integer          0   15    0               00 r[15]=0
REG[15] =  i:0
 112 Column           5    0   16               00 r[16]=
REG[16] =  i:1
 113 Ne              16  116   20 (BINARY)      80 if r[16]!=r[20] goto 116
REG[16] =  i:1
REG[20] =  NULL
 116 Column           5    0   20               00 r[20]=
REG[20] =  i:1
 117 Function         1   14   16 stat_push(2)  02 r[16]=func(r[14..15])
REG[14] =  z88[01000000000000000200000001000000................](8)
REG[15] =  i:0
REG[16] =  NULL
 118 Next             5  111    0               00 
 119 Function0        0   14   19 stat_get(1)   01 r[19]=func(r[14])
REG[14] =  z88[02000000000000000200000001000000................](8)
REG[19] =   z3[2 1](8)
 120 MakeRecord      17    3   16 BBB           00 r[16]=mkrec(r[17..19])
REG[16] =  s11[0411111376307431322031....v0t12 1](8)
 121 NewRowid         0   13    0               00 r[13]=rowid
REG[13] =  i:3
 122 Insert           0   16   13               08 intkey=r[13] data=r[16]
REG[16] =  s11[0411111376307431322031....v0t12 1](8)
REG[13] =  i:3
 123 LoadAnalysis     0    0    0               00 
SQL: [SELECT tbl,idx,stat FROM 'main'.sqlite_stat1]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0   10 4             01 usesStmtJournal=0
  12 TableLock        0    8    0 sqlite_stat1  00 iDb=0 root=8 write=0
  13 Goto             0    1    0               00 
   1 OpenRead         0    8    0 3             00 root=8 iDb=0; sqlite_stat1
   2 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_stat1.tbl
REG[1] =   s2[v0](8)
   5 Column           0    1    2               00 r[2]=sqlite_stat1.idx
REG[2] =   s1[b](8)
   6 Column           0    2    3               00 r[3]=sqlite_stat1.stat
REG[3] =   s3[1 1](8)
   7 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[v0](8)
REG[2] =   s1[b](8)
REG[3] =   s3[1 1](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_stat1.tbl
REG[1] =   s2[v0](8)
   5 Column           0    1    2               00 r[2]=sqlite_stat1.idx
REG[2] =   s1[a](8)
   6 Column           0    2    3               00 r[3]=sqlite_stat1.stat
REG[3] =   s3[2 1](8)
   7 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[v0](8)
REG[2] =   s1[a](8)
REG[3] =   s3[2 1](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_stat1.tbl
REG[1] =   s2[v0](8)
   5 Column           0    1    2               00 r[2]=sqlite_stat1.idx
REG[2] =   s2[t1](8)
   6 Column           0    2    3               00 r[3]=sqlite_stat1.stat
REG[3] =   s3[2 1](8)
   7 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[v0](8)
REG[2] =   s2[t1](8)
REG[3] =   s3[2 1](8)
   8 Next             0    4    0               01 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
 124 Expire           0    0    0               00 
 125 Halt             0    0    0               00 
SQL: [;
;UPDATE OR REPLACE v0 SET v1=789;]
VDBE Trace:
   0 Init             0   91    0               00 Start at 91
  91 Transaction      0    1   10 4             01 usesStmtJournal=0
  92 TableLock        0    2    1 v0            00 iDb=0 root=2 write=1
  93 Integer          5   10    0               00 r[10]=5
REG[10] =  i:5
  94 Integer         10   11    0               00 r[11]=10
REG[11] =  i:10
  95 Integer        999   14    0               00 r[14]=999
REG[14] =  i:999
  96 Goto             0    1    0               00 
   1 Null             0    5    6               00 r[5..6]=NULL
REG[5] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; v0
   3 Explain          0    0    0 SCAN TABLE v0 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    6    0               00 r[6]=rowid
REG[6] =  i:1
   6 RowSetAdd        5    6    0               00 rowset(5)=r[6]
REG[5] =  NULL
REG[6] =  i:1
   7 Next             0    5    0               01 
   5 Rowid            0    6    0               00 r[6]=rowid
REG[6] =  i:2
   6 RowSetAdd        5    6    0               00 rowset(5)=r[6]
REG[5] =  (rowset)
REG[6] =  i:2
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  10 OpenWrite        0    2    0 1             00 root=2 iDb=0; v0
  11 OpenWrite        1    7    0 k(2,,)        00 root=7 iDb=0; t1b
  12 OpenWrite        2    6    0 k(2,,)        00 root=6 iDb=0; b
  13 OpenWrite        3    5    0 k(2,,)        00 root=5 iDb=0; a
  14 OpenWrite        4    4    0 k(2,,)        00 root=4 iDb=0; t1
  15 RowSetRead       5   84    6               00 r[6]=rowset(5)
REG[5] =  (rowset)
REG[6] =  i:1
  16 NotExists        0   15    6               00 intkey=r[6]
REG[6] =  i:1
  17 Integer        789    7    0               00 r[7]=789
REG[7] =  i:789
  18 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
  19 Lt              10   24    7 (BINARY)      51 if r[10]<r[7] goto 24
REG[10] =  i:5
REG[7] =  i:789
  20 Gt              11   24    7 (BINARY)      51 if r[11]>r[7] goto 24
REG[11] =  i:10
REG[7] =  i:789
  24 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  25 Eq              14   52    7 (BINARY)      51 if r[14]==r[7] goto 52
REG[14] =  i:999
REG[7] =  i:789
  26 SCopy            7   12    0               00 r[12]=r[7]; v1
REG[12] =  i:789
  27 IntCopy          6   13    0               00 r[13]=r[6]; rowid
REG[13] =  i:1
  28 MakeRecord      12    2    2               00 r[2]=mkrec(r[12..13]); for b
REG[2] =  s5[0302090315.....](8)
  29 NoConflict       2   52   12 1             00 key=r[12]
REG[12] =  i:789
  52 Add              7    7    9               00 r[9]=r[7]+r[7]
REG[7] =  i:789
REG[7] =  i:789
REG[9] =  i:1578
  53 Add              7    9   17               00 r[17]=r[7]+r[9]; a column 0
REG[7] =  i:789
REG[9] =  i:1578
REG[17] =  i:2367
  54 IntCopy          6   18    0               00 r[18]=r[6]; rowid
REG[18] =  i:1
  55 MakeRecord      17    2    3               00 r[3]=mkrec(r[17..18]); for a
REG[3] =  s5[030209093F....?](8)
  56 Eq               7   17    7 (BINARY)      61 if r[7]==r[7] goto 17; t1 column 0
REG[7] =  i:789
REG[7] =  i:789
REG[17] =  i:1
  57 MakeRecord      17    2    4               00 r[4]=mkrec(r[17..18]); for t1
REG[4] =  s3[030909...](8)
  58 NotExists        0   74    6               00 intkey=r[6]
REG[6] =  i:1
  59 Lt              10   64   16 (BINARY)      51 if r[10]<r[16] goto 64

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f76fedfa859 in __GI_abort () at abort.c:79
#2  0x00007f76fedfa729 in __assert_fail_base (fmt=0x7f76fef90588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21a70e "memIsValid(&aMem[pOp->p3])", file=0x222c23 "sqlite3.c", line=77374, function=<optimized out>)
    at assert.c:92
#3  0x00007f76fee0bfd6 in __GI___assert_fail (assertion=0x21a70e "memIsValid(&aMem[pOp->p3])", file=0x222c23 "sqlite3.c", line=77374, function=0x213a19 "int sqlite3VdbeExec(Vdbe *)") at assert.c:101
#4  0x00000000003e276c in sqlite3VdbeExec (p=<optimized out>) at sqlite3.c:77374
#5  0x000000000028b140 in sqlite3_step (pStmt=<optimized out>) at sqlite3.c:75131
#6  0x000000000024b5e9 in main (argc=1, argv=0x7ffeb4d8ee48) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 37858] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
