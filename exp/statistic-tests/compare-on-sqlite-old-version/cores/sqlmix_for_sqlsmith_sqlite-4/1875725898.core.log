GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000421,sig:08,src:023260+021965,time:14916837,execs:2565473,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;CREATE VIEW ruleset AS SELECT * FROM t1w;]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1   11 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:12
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:12
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:12
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:12
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:12
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:12
  19 String8          0    6    0 view          00 r[6]='view'
REG[6] =   t4[view](8)
  20 String8          0    7    0 ruleset       00 r[7]='ruleset'
REG[7] =   t7[ruleset](8)
  21 String8          0    8    0 ruleset       00 r[8]='ruleset'
REG[8] =   t7[ruleset](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:0
  23 String8          0   10    0 CREATE VIEW ruleset AS SELECT * FROM t1w 00 r[10]='CREATE VIEW ruleset AS SELECT * FROM t1w'
REG[10] =   t40[CREATE VIEW rul](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s64[06151B1B085D7669657772756C657365.....]viewrulese](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s64[06151B1B085D7669657772756C657365.....]viewrulese](8)
REG[5] =  i:12
  26 Close            1    0    0               00 
  27 SetCookie        0    1   12               00 
  28 ParseSchema      0    0    0 tbl_name='ruleset' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0   12 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 ruleset       00 r[2]='ruleset'
REG[2] =   t7[ruleset](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[ruleset](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[abc](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[ruleset](8)
REG[1] =   s3[abc](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[ruleset](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[ruleset](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[ruleset](8)
REG[1] =   s2[v0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[counter](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[ruleset](8)
REG[1] =   s7[counter](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[ruleset](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t1x2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[ruleset](8)
REG[1] =   s4[t1x2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[abc](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[ruleset](8)
REG[1] =   s3[abc](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[abc](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[ruleset](8)
REG[1] =   s3[abc](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[ruleset](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[ruleset](8)
REG[1] =   s7[ruleset](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s4[view](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s4[view](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s7[ruleset](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:0
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s40[CREATE VIEW rul](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s7[ruleset](8)
REG[6] =  i:0
REG[7] =   s40[CREATE VIEW rul](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [; END;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       1    0    0               00 
SQL: [END;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       1    0    0               00 
SQL: [SELECT count(seq) FROM abc;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0   12 0             01 usesStmtJournal=0
  14 TableLock        0    3    0 abc           00 iDb=0 root=3 write=0
  15 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    3    0 6             00 root=3 iDb=0; abc
   3 Explain          0    0    0 SCAN TABLE abc 00 
   4 Rewind           0    8    0               00 
   8 Close            0    0    0               00 
   9 AggFinal         1    1    0 count(1)      00 accum=r[1] N=1
  10 Copy             1    4    0               00 r[4]=r[1]
REG[4] =  i:0
  11 ResultRow        4    1    0               00 output=r[4]
REG[4] =  i:0
  12 Halt             0    0    0               00 
SQL: [;INSERT INTO sqlite_stat1 VALUES('counter',null,'sz=0');]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    1   12 0             01 usesStmtJournal=0
  11 TableLock        0    6    1 sqlite_stat1  00 iDb=0 root=6 write=1
  12 Goto             0    1    0               00 
   1 OpenWrite        0    6    0 3             00 root=6 iDb=0; sqlite_stat1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 String8          0    2    0 counter       00 r[2]='counter'
REG[2] =   t7[counter](8)
   4 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   5 String8          0    4    0 sz=0          00 r[4]='sz=0'
REG[4] =   t4[sz=0](8)
   6 MakeRecord       2    3    5               00 r[5]=mkrec(r[2..4])
REG[5] =  s15[041B0015636F756E746572737A3D30....countersz=0](8)
   7 Insert           0    5    1 sqlite_stat1  1B intkey=r[1] data=r[5]
REG[5] =  s15[041B0015636F756E746572737A3D30....countersz=0](8)
REG[1] =  i:1
   8 Noop             0    0    0               00 
   9 Halt             0    0    0               00 
SQL: [DROP table "abc"
;]
VDBE Trace:
   0 Init             0  102    0               00 Start at 102
 102 Transaction      0    1   12 0             01 usesStmtJournal=1
 103 TableLock        0    6    1 sqlite_stat1  00 iDb=0 root=6 write=1
 104 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
 105 TableLock        0    4    1 sqlite_sequence 00 iDb=0 root=4 write=1
 106 String8          0    3    0 abc           00 r[3]='abc'
REG[3] =   t3[abc](8)
 107 String8          0    6    0 f_rules       00 r[6]='f_rules'
REG[6] =   t7[f_rules](8)
 108 String8          0    8    0 trigger       00 r[8]='trigger'
REG[8] =   t7[trigger](8)
 109 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    6    0 3             00 root=6 iDb=0; sqlite_stat1
   3 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   4 Rewind           0   11    0               00 
   5 Column           0    0    2               00 r[2]=sqlite_stat1.tbl
REG[2] =   s7[counter](8)
   6 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =   t3[abc](8)
REG[2] =   s7[counter](8)
  10 Next             0    5    0               01 
  11 Close            0    0    0               00 
  12 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SCAN TABLE sqlite_master 00 
  15 Rewind           1   24    0               00 
  16 Column           1    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[v0](8)
  17 Ne               6   23    2 (BINARY)      52 if r[6]!=r[2] goto 23
REG[6] =   t7[f_rules](8)
REG[2] =   s2[v0](8)
  23 Next             1   16    0               01 
  16 Column           1    1    2               00 r[2]=sqlite_master.name
REG[2] =   s3[abc](8)
  17 Ne               6   23    2 (BINARY)      52 if r[6]!=r[2] goto 23
REG[6] =   t7[f_rules](8)
REG[2] =   s3[abc](8)
  23 Next             1   16    0               01 
  16 Column           1    1    2               00 r[2]=sqlite_master.name
REG[2] =   s15[sqlite_sequence](8)
  17 Ne               6   23    2 (BINARY)      52 if r[6]!=r[2] goto 23
REG[6] =   t7[f_rules](8)
REG[2] =   s15[sqlite_sequence](8)
  23 Next             1   16    0               01 
  16 Column           1    1    2               00 r[2]=sqlite_master.name
REG[2] =   s12[sqlite_stat1](8)
  17 Ne               6   23    2 (BINARY)      52 if r[6]!=r[2] goto 23
REG[6] =   t7[f_rules](8)
REG[2] =   s12[sqlite_stat1](8)
  23 Next             1   16    0               01 
  16 Column           1    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[ab](8)
  17 Ne               6   23    2 (BINARY)      52 if r[6]!=r[2] goto 23
REG[6] =   t7[f_rules](8)
REG[2] =   s2[ab](8)
  23 Next             1   16    0               01 
  16 Column           1    1    2               00 r[2]=sqlite_master.name
REG[2] =   s7[counter](8)
  17 Ne               6   23    2 (BINARY)      52 if r[6]!=r[2] goto 23
REG[6] =   t7[f_rules](8)
REG[2] =   s7[counter](8)
  23 Next             1   16    0               01 
  16 Column           1    1    2               00 r[2]=sqlite_master.name
REG[2] =   s3[tr2](8)
  17 Ne               6   23    2 (BINARY)      52 if r[6]!=r[2] goto 23
REG[6] =   t7[f_rules](8)
REG[2] =   s3[tr2](8)
  23 Next             1   16    0               01 
  16 Column           1    1    2               00 r[2]=sqlite_master.name
REG[2] =   s4[t1x2](8)
  17 Ne               6   23    2 (BINARY)      52 if r[6]!=r[2] goto 23
REG[6] =   t7[f_rules](8)
REG[2] =   s4[t1x2](8)
  23 Next             1   16    0               01 
  16 Column           1    1    2               00 r[2]=sqlite_master.name
REG[2] =   s7[f_rules](8)
  17 Ne               6   23    2 (BINARY)      52 if r[6]!=r[2] goto 23
REG[6] =   t7[f_rules](8)
REG[2] =   s7[f_rules](8)
  18 Column           1    0    7               00 r[7]=sqlite_master.type
REG[7] =   s7[trigger](8)
  19 Ne               8   23    7 (BINARY)      52 if r[8]!=r[7] goto 23
REG[8] =   t7[trigger](8)
REG[7] =   s7[trigger](8)
  20 Rowid            1    9    0               00 r[9]=rowid
REG[9] =  i:10
  21 Once             1   22    0               00 
  22 Delete           1    0    0 sqlite_master 02 
  23 Next             1   16    0               01 
  16 Column           1    1    2               00 r[2]=sqlite_master.name
REG[2] =   s8[f1_rules](8)
  17 Ne               6   23    2 (BINARY)      52 if r[6]!=r[2] goto 23
REG[6] =   t7[f_rules](8)
REG[2] =   s8[f1_rules](8)
  23 Next             1   16    0               01 
  16 Column           1    1    2               00 r[2]=sqlite_master.name
REG[2] =   s7[ruleset](8)
  17 Ne               6   23    2 (BINARY)      52 if r[6]!=r[2] goto 23
REG[6] =   t7[f_rules](8)
REG[2] =   s7[ruleset](8)
  23 Next             1   16    0               01 
  24 Close            1    0    0               00 
  25 SetCookie        0    1   13               00 
  26 DropTrigger      0    0    0 f_rules       00 
  27 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  28 OpenWrite        2    4    0 2             00 root=4 iDb=0; sqlite_sequence
  29 Explain          0    0    0 SCAN TABLE sqlite_sequence 00 
  30 Rewind           2   37    0               00 
  37 Close            2    0    0               00 
  38 Null             0   12    0               00 r[12]=NULL
REG[12] =  NULL
  39 OpenWrite        3    1    0 5             00 root=1 iDb=0; sqlite_master
  40 Explain          0    0    0 SCAN TABLE sqlite_master 00 
  41 Rewind           3   50    0               00 
  42 Column           3    2    7               00 r[7]=sqlite_master.tbl_name
REG[7] =   s2[v0](8)
  43 Ne               3   49    7 (BINARY)      52 if r[3]!=r[7] goto 49
REG[3] =   t3[abc](8)
REG[7] =   s2[v0](8)
  49 Next             3   42    0               01 
  42 Column           3    2    7               00 r[7]=sqlite_master.tbl_name
REG[7] =   s3[abc](8)
  43 Ne               3   49    7 (BINARY)      52 if r[3]!=r[7] goto 49
REG[3] =   t3[abc](8)
REG[7] =   s3[abc](8)
  44 Column           3    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
  45 Eq               8   49    2 (BINARY)      52 if r[8]==r[2] goto 49
REG[8] =   t7[trigger](8)
REG[2] =   s5[table](8)
  46 Rowid            3   13    0               00 r[13]=rowid
REG[13] =  i:2
  47 Once             3   48    0               00 
  48 Delete           3    0    0 sqlite_master 02 
  49 Next             3   42    0               01 
  42 Column           3    2    7               00 r[7]=sqlite_master.tbl_name
REG[7] =   s15[sqlite_sequence](8)
  43 Ne               3   49    7 (BINARY)      52 if r[3]!=r[7] goto 49
REG[3] =   t3[abc](8)
REG[7] =   s15[sqlite_sequence](8)
  49 Next             3   42    0               01 
  42 Column           3    2    7               00 r[7]=sqlite_master.tbl_name
REG[7] =   s12[sqlite_stat1](8)
  43 Ne               3   49    7 (BINARY)      52 if r[3]!=r[7] goto 49
REG[3] =   t3[abc](8)
REG[7] =   s12[sqlite_stat1](8)
  49 Next             3   42    0               01 
  42 Column           3    2    7               00 r[7]=sqlite_master.tbl_name
REG[7] =   s2[v0](8)
  43 Ne               3   49    7 (BINARY)      52 if r[3]!=r[7] goto 49
REG[3] =   t3[abc](8)
REG[7] =   s2[v0](8)
  49 Next             3   42    0               01 
  42 Column           3    2    7               00 r[7]=sqlite_master.tbl_name
REG[7] =   s7[counter](8)
  43 Ne               3   49    7 (BINARY)      52 if r[3]!=r[7] goto 49
REG[3] =   t3[abc](8)
REG[7] =   s7[counter](8)
  49 Next             3   42    0               01 
  42 Column           3    2    7               00 r[7]=sqlite_master.tbl_name
REG[7] =   s3[tr2](8)
  43 Ne               3   49    7 (BINARY)      52 if r[3]!=r[7] goto 49
REG[3] =   t3[abc](8)
REG[7] =   s3[tr2](8)
  49 Next             3   42    0               01 
  42 Column           3    2    7               00 r[7]=sqlite_master.tbl_name
REG[7] =   s4[t1x2](8)
  43 Ne               3   49    7 (BINARY)      52 if r[3]!=r[7] goto 49
REG[3] =   t3[abc](8)
REG[7] =   s4[t1x2](8)
  49 Next             3   42    0               01 
  42 Column           3    2    7               00 r[7]=sqlite_master.tbl_name
REG[7] =   s3[abc](8)
  43 Ne               3   49    7 (BINARY)      52 if r[3]!=r[7] goto 49
REG[3] =   t3[abc](8)
REG[7] =   s3[abc](8)
  44 Column           3    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[index](8)
  45 Eq               8   49    2 (BINARY)      52 if r[8]==r[2] goto 49
REG[8] =   t7[trigger](8)
REG[2] =   s5[index](8)
  46 Rowid            3   13    0               00 r[13]=rowid
REG[13] =  i:11
  47 Once             3   48    0               00 
  48 Delete           3    0    0 sqlite_master 02 
  49 Next             3   42    0               01 
  42 Column           3    2    7               00 r[7]=sqlite_master.tbl_name
REG[7] =   s7[ruleset](8)
  43 Ne               3   49    7 (BINARY)      52 if r[3]!=r[7] goto 49
REG[3] =   t3[abc](8)
REG[7] =   s7[ruleset](8)
  49 Next             3   42    0               01 
  50 Close            3    0    0               00 
  51 Destroy          5    2    0               00 
REG[2] =  i:0
  52 Null             0   14   15               00 r[14..15]=NULL
REG[14] =  NULL
  53 IfNot            2   62    1               00 
REG[2] =  i:0
  62 Close            4    0    0               00 
  63 OpenWrite        4    1    0 5             00 root=1 iDb=0; sqlite_master
  64 RowSetRead      14   74   15               00 r[15]=rowset(14)
REG[14] =  NULL
REG[15] =  NULL
  74 Close            4    0    0               00 
  75 Destroy          3    2    0               00 
REG[2] =  i:0
  76 Null             0   22   23               00 r[22..23]=NULL
REG[22] =  NULL
  77 IfNot            2   86    1               00 
REG[2] =  i:0
  86 Close            5    0    0               00 
  87 OpenWrite        5    1    0 5             00 root=1 iDb=0; sqlite_master
  88 RowSetRead      22   98   23               00 r[23]=rowset(22)
REG[22] =  NULL
REG[23] =  NULL
  98 Close            5    0    0               00 
  99 DropTable        0    0    0 abc           00 
 100 SetCookie        0    1   13               00 
 101 Halt             0    0    0               00 
SQL: [PRAGMA foreign_key_check(counter)
;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0   13 0             01 usesStmtJournal=0
   3 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [SELECT count(tr1) FROM counter;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0   13 0             01 usesStmtJournal=0
  14 TableLock        0    7    0 counter       00 iDb=0 root=7 write=0
  15 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         1    7    0 k(1,)         00 root=7 iDb=0; sqlite_autoindex_counter_1
   3 Explain          0    0    0 SCAN TABLE counter 00 
   4 Rewind           1    8    3 0             00 
   8 Close            1    0    0               00 
   9 AggFinal         1    1    0 count(1)      00 accum=r[1] N=1
  10 Copy             1    4    0               00 r[4]=r[1]
REG[4] =  i:0
  11 ResultRow        4    1    0               00 output=r[4]
REG[4] =  i:0
  12 Halt             0    0    0               00 
SQL: [;ANALYZE sqlite_master;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1   13 0             01 usesStmtJournal=0
  17 TableLock        0    6    1 sqlite_stat1  00 iDb=0 root=6 write=1
  18 String8          0    3    0 sqlite_master 00 r[3]='sqlite_master'
REG[3] =   t13[sqlite_master](8)
  19 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        3    6    0 3             00 root=6 iDb=0; sqlite_stat1
   3 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   4 Rewind           3   11    0               00 
   5 Column           3    0    2               00 r[2]=sqlite_stat1.tbl
REG[2] =   s7[counter](8)
   6 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =   t13[sqlite_master](8)
REG[2] =   s7[counter](8)
  10 Next             3    5    0               01 
  11 Close            3    0    0               00 
  12 OpenWrite        0    6    0 3             00 root=6 iDb=0; sqlite_stat1
  13 LoadAnalysis     0    0    0               00 
SQL: [SELECT tbl,idx,stat FROM 'main'.sqlite_stat1]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0   13 0             01 usesStmtJournal=0
  12 TableLock        0    6    0 sqlite_stat1  00 iDb=0 root=6 write=0
  13 Goto             0    1    0               00 
   1 OpenRead         0    6    0 3             00 root=6 iDb=0; sqlite_stat1
   2 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_stat1.tbl
REG[1] =   s7[counter](8)
   5 Column           0    1    2               00 r[2]=sqlite_stat1.idx
REG[2] =  NULL
   6 Column           0    2    3               00 r[3]=sqlite_stat1.stat
REG[3] =   s4[sz=0](8)
   7 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s7[counter](8)
REG[2] =  NULL
REG[3] =   s4[sz=0](8)
   8 Next             0    4    0               01 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
  14 Expire           0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [PRAGMA foreign_key_check(t1x2)
;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0   13 0             01 usesStmtJournal=0
   3 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [PRAGMA foreign_key_check(counter)
;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0   13 0             01 usesStmtJournal=0
   3 Goto             0    1    0               00 
   1 Halt             0    0    0               00 

Program received signal SIGFPE, Arithmetic exception.
0x000000000039b265 in whereLoopAddBtree (pBuilder=<optimized out>, mPrereq=0) at sqlite3.c:128710
128710	        pNew->rRun = rSize + 1 + (15*pProbe->szIdxRow)/pTab->szTabRow;
(gdb) #0  0x000000000039b265 in whereLoopAddBtree (pBuilder=<optimized out>, mPrereq=0) at sqlite3.c:128710
#1  0x000000000038dbe4 in sqlite3WhereBegin (pParse=<optimized out>, pTabList=<optimized out>, pWhere=<optimized out>, pOrderBy=<optimized out>, pDistinctSet=0x0, wctrlFlags=4, iAuxArg=1) at sqlite3.c:129185
#2  0x000000000033a877 in sqlite3Update (pParse=<optimized out>, pTabList=<optimized out>, pChanges=<optimized out>, pWhere=<optimized out>, onError=<optimized out>) at sqlite3.c:120236
#3  0x000000000030729a in yy_reduce (yypParser=0x17fea00, yyruleno=<optimized out>) at sqlite3.c:133465
#4  0x00000000002fef8e in sqlite3Parser (yyp=0x17fea00, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#5  0x00000000002fc544 in sqlite3RunParser (pParse=0x17dea20, 
    zSql=0x18071f0 "UPDATE counter SET tr1=1 WHERE tr1=4\n;PRAGMA foreign_key_check(v0)\n;PRAGMA foreign_key_check(counter)\n;PRAGMA foreign_key_check(counter)\n;PRAGMA foreign_key_check(counter)\n;PRAGMA foreign_key_check(co"..., pzErrMsg=0x7fff8bc1c358) at sqlite3.c:135186
#6  0x00000000002fac4e in sqlite3Prepare (db=0x17dd860, 
    zSql=0x17df778 "UPDATE counter SET tr1=1 WHERE tr1=4\n;PRAGMA foreign_key_check(v0)\n;PRAGMA foreign_key_check(counter)\n;PRAGMA foreign_key_check(counter)\n;PRAGMA foreign_key_check(counter)\n;PRAGMA foreign_key_check(co"..., nBytes=<optimized out>, saveSqlFlag=1, pReprepare=<optimized out>, ppStmt=0x7fff8bc1c488, pzTail=0x7fff8bc1c470) at sqlite3.c:112589
#7  0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0x17dd860, 
    zSql=0x17df778 "UPDATE counter SET tr1=1 WHERE tr1=4\n;PRAGMA foreign_key_check(v0)\n;PRAGMA foreign_key_check(counter)\n;PRAGMA foreign_key_check(counter)\n;PRAGMA foreign_key_check(counter)\n;PRAGMA foreign_key_check(co"..., nBytes=3840, saveSqlFlag=1, pOld=0x0, ppStmt=<optimized out>, pzTail=0x7fff8bc1c470) at sqlite3.c:112688
#8  0x000000000028f38c in sqlite3_prepare_v2 (db=0x7fff8bc1be90, zSql=0x0, nBytes=0, ppStmt=0x7fff8bc1c488, pzTail=<optimized out>) at sqlite3.c:112764
#9  0x000000000024b100 in main (argc=1, argv=0x7fff8bc1c638) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 37364] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
