GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000560,sig:11,src:010868+007738,time:37363823,execs:4362341,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [PRAGMA journal_mode = off ;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 JournalMode      1    1    2               00 
REG[1] =   t3[off](8)
   2 JournalMode      0    1    2               00 
REG[1] =   t3[off](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t3[off](8)
   4 Halt             0    0    0               00 
SQL: [;
PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0    0 0             01 usesStmtJournal=0
  24 Transaction      1    0    0 0             01 usesStmtJournal=0
  25 Goto             0    1    0               00 
   1 Integer        100    1    0               00 r[1]=100
REG[1] =  i:100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
REG[1] =  i:100
   4 IntegrityCk      2    1    1 ]             00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
REG[2] =  NULL
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
REG[1] =  i:100
  12 IntegrityCk      2    1    1 ]             01 
  13 IsNull           2   18    0               00 if r[2]==NULL goto 18
REG[2] =  NULL
  18 AddImm           1 -100    0               00 r[1]=r[1]+-100
REG[1] =  i:100
  19 If               1   22    0               00 
REG[1] =  i:0
  20 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
  21 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
  22 Halt             0    0    0               00 
SQL: [PRAGMA foreign_keys = 0;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [PRAGMA incremental_vacuum;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    1    0 0             01 usesStmtJournal=0
   8 Goto             0    1    0               00 
   1 Integer       2147483647    1    0               00 r[1]=2147483647
REG[1] =  i:2147483647
   2 IncrVacuum       0    6    0               00 
   6 Halt             0    0    0               00 
SQL: [;
DETACH db6;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
   3 String8          0    3    0 db6           00 r[3]='db6'
REG[3] =   t3[db6](8)
   4 Function0        0    3    4 sqlite_detach(1) 01 r[4]=func(r[3])
REG[3] =   t3[db6](8)
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t5' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    0 0             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t5            00 r[2]='t5'
REG[2] =   t2[t5](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    0 0             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    0 0             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    0 0             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [CREATE TABLE [t1] (
    [a] INTEGER PRIMARY KEY AUTOINCREMENT,[b] TEXT, [numbers] INTEGER
  );]
VDBE Trace:
   0 Init             0   58    0               00 Start at 58
  58 Transaction      0    1    0 0             01 usesStmtJournal=0
  59 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  60 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:1
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:1
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:1
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t1            00 r[7]='t1'
REG[7] =   t2[t1](8)
  21 String8          0    8    0 t1            00 r[8]='t1'
REG[8] =   t2[t1](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  23 String8          0   10    0 CREATE TABLE [t1] (
    [a] INTEGER PRIMARY KEY AUTOINCREMENT,[b] TEXT, [numbers] INTEGER
  ) 00 r[10]='CREATE TABLE [t1] (
    [a] INTEGER PRIMARY KEY AUTOINCREMENT,[b] TEXT, [numbers] INTEGER
  
REG[10] =   t93[CREATE TABLE [t](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s110[071711110181477461626C6574317431......Gtablet1t1](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s110[071711110181477461626C6574317431......Gtablet1t1](8)
REG[5] =  i:1
  26 Close            1    0    0               00 
  27 SetCookie        0    1    1               00 
  28 ReadCookie       0   14    2               00 
REG[14] =  i:4
  29 If              14   32    0               00 
REG[14] =  i:4
  32 CreateTable      0   13    0               00 r[13]=root iDb=0
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    1 1             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s93[CREATE TABLE [t](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s93[CREATE TABLE [t](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      1    0    0 1             00 usesStmtJournal=0
  13 TableLock        1    1    0 sqlite_temp_master 00 iDb=1 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          0    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [PRAGMA incremental_vacuum;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    1    1 1             01 usesStmtJournal=0
   8 Goto             0    1    0               00 
   1 Integer       2147483647    1    0               00 r[1]=2147483647
REG[1] =  i:2147483647
   2 IncrVacuum       0    6    0               00 
   6 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='sqlite_sequence' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    1 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    1 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s93[CREATE TABLE [t](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:2
REG[7] =   s93[CREATE TABLE [t](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 

Program received signal SIGSEGV, Segmentation fault.
sqlite3OpenTable (pParse=0x1aa32c0, iCur=0, iDb=0, pTab=0x0, opcode=103) at sqlite3.c:105897
105897	  assert( !IsVirtual(pTab) );
(gdb) #0  sqlite3OpenTable (pParse=0x1aa32c0, iCur=0, iDb=0, pTab=0x0, opcode=103) at sqlite3.c:105897
#1  0x0000000000389294 in autoIncrementEnd (pParse=<optimized out>) at sqlite3.c:106205
#2  0x0000000000342171 in sqlite3AutoincrementEnd (pParse=0x1aa32c0) at sqlite3.c:106219
#3  sqlite3Insert (pParse=<optimized out>, pTabList=<optimized out>, pSelect=<optimized out>, pColumn=0x1ab4c80, onError=<optimized out>) at sqlite3.c:41372
#4  0x00000000003066b3 in yy_reduce (yypParser=0x1ab60a0, yyruleno=<optimized out>) at sqlite3.c:133484
#5  0x00000000002fef8e in sqlite3Parser (yyp=0x1ab60a0, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#6  0x00000000002fc544 in sqlite3RunParser (pParse=0x1aa32c0, 
    zSql=0x1b28590 ";\nINSERT INTO t1 (a, a, a) VALUES (1, 'ING', 18);;\nCOMMIT;BEGIN;;\nSELECT name, rootpage, sql FROM 'temp'.sqlite_temp_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;SELECT name, rootpage"..., pzErrMsg=0x7fff02464ba8) at sqlite3.c:135186
#7  0x00000000002fac4e in sqlite3Prepare (db=0x1aa0850, 
    zSql=0x1aa3ceb ";\nINSERT INTO t1 (a, a, a) VALUES (1, 'ING', 18);;\nCOMMIT;BEGIN;;\nSELECT name, rootpage, sql FROM 'temp'.sqlite_temp_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;SELECT name, rootpage"..., nBytes=<optimized out>, saveSqlFlag=1, pReprepare=<optimized out>, ppStmt=0x7fff02464cd8, pzTail=0x7fff02464cc0) at sqlite3.c:112589
#8  0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0x1aa0850, 
    zSql=0x1aa3ceb ";\nINSERT INTO t1 (a, a, a) VALUES (1, 'ING', 18);;\nCOMMIT;BEGIN;;\nSELECT name, rootpage, sql FROM 'temp'.sqlite_temp_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;SELECT name, rootpage"..., nBytes=3303, saveSqlFlag=1, pOld=0x0, ppStmt=<optimized out>, pzTail=0x7fff02464cc0) at sqlite3.c:112688
#9  0x000000000028f38c in sqlite3_prepare_v2 (db=0x1aa32c0, zSql=0x0, nBytes=0, ppStmt=0x7fff02464cd8, pzTail=<optimized out>) at sqlite3.c:112764
#10 0x000000000024b100 in main (argc=1, argv=0x7fff02464e88) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 12895] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
