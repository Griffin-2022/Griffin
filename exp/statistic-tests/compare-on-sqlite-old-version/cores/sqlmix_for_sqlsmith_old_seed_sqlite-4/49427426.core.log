GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000431,sig:06,src:009979+009638,time:22882914,execs:2235024,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    0 0             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    0 0             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
PRAGMA writable_schema=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [PRAGMA auto_vacuum = OFF;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [;
SELECT printf('%d,%d,%d,%d',55,'-11',3421);]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 String8          0    2    0 %d,%d,%d,%d   00 r[2]='%d,%d,%d,%d'
REG[2] =   t11[%d,%d,%d,%d](8)
   5 Integer         55    3    0               00 r[3]=55
REG[3] =  i:55
   6 String8          0    4    0 -11           00 r[4]='-11'
REG[4] =   t3[-11](8)
   7 Integer       3421    5    0               00 r[5]=3421
REG[5] =  i:3421
   8 Goto             0    1    0               00 
   1 Function0       15    2    1 printf(-1)    04 r[1]=func(r[2..5])
REG[2] =   t11[%d,%d,%d,%d](8)
REG[3] =  i:55
REG[4] =   t3[-11](8)
REG[5] =  i:3421
REG[1] =   s13[55,-11,3421,0](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s13[55,-11,3421,0](8)
   3 Halt             0    0    0               00 
SQL: [;
COMMIT;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       1    0    0               00 
SQL: [;
pragma locking_mode=exclusive ;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0 exclusive     00 r[1]='exclusive'
REG[1] =   t9[exclusive](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t9[exclusive](8)
   3 Halt             0    0    0               00 
SQL: [;
SELECT printf('%d,%d,%d',55,'-11',3421);]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 String8          0    2    0 %d,%d,%d      00 r[2]='%d,%d,%d'
REG[2] =   t8[%d,%d,%d](8)
   5 Integer         55    3    0               00 r[3]=55
REG[3] =  i:55
   6 String8          0    4    0 -11           00 r[4]='-11'
REG[4] =   t3[-11](8)
   7 Integer       3421    5    0               00 r[5]=3421
REG[5] =  i:3421
   8 Goto             0    1    0               00 
   1 Function0       15    2    1 printf(-1)    04 r[1]=func(r[2..5])
REG[2] =   t8[%d,%d,%d](8)
REG[3] =  i:55
REG[4] =   t3[-11](8)
REG[5] =  i:3421
REG[1] =   s11[55,-11,3421](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s11[55,-11,3421](8)
   3 Halt             0    0    0               00 
SQL: [SELECT 1 NOT IN (2);]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   5 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   6 Goto             0    1    0               00 
   1 Ne               3    1    2               61 if r[3]!=r[2] goto 1
REG[3] =  i:2
REG[2] =  i:1
REG[1] =  i:1
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   3 Halt             0    0    0               00 
SQL: [;
VACUUM
  ;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Vacuum           0    0    0               00 
SQL: [ATTACH '' AS vacuum_db;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0               00 r[1]=''
REG[1] =   t0[](8)
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
REG[2] =   t9[vacuum_db](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t0[](8)
REG[2] =   t9[vacuum_db](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      2    0    0 0             00 usesStmtJournal=0
  13 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [PRAGMA vacuum_db.synchronous=OFF]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [SELECT 'CREATE TABLE vacuum_db.' || substr(sql,14)   FROM sqlite_master WHERE type='table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    0 0             01 usesStmtJournal=0
  20 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  21 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  22 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  23 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  24 String8          0    8    0 CREATE TABLE vacuum_db. 00 r[8]='CREATE TABLE vacuum_db.'
REG[8] =   t23[CREATE TABLE va](8)
  25 Integer         14   10    0               00 r[10]=14
REG[10] =  i:14
  26 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   17    0               00 
  17 Close            0    0    0               00 
  18 Halt             0    0    0               00 
SQL: [SELECT 'CREATE INDEX vacuum_db.' || substr(sql,14)  FROM sqlite_master WHERE sql LIKE 'CREATE INDEX %' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    0 0             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE INDEX % 00 r[2]='CREATE INDEX %'
REG[2] =   t14[CREATE INDEX %](8)
  17 String8          0    5    0 CREATE INDEX vacuum_db. 00 r[5]='CREATE INDEX vacuum_db.'
REG[5] =   t23[CREATE INDEX va](8)
  18 Integer         14    7    0               00 r[7]=14
REG[7] =  i:14
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'CREATE UNIQUE INDEX vacuum_db.' || substr(sql,21)   FROM sqlite_master WHERE sql LIKE 'CREATE UNIQUE INDEX %']
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    0 0             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE UNIQUE INDEX % 00 r[2]='CREATE UNIQUE INDEX %'
REG[2] =   t21[CREATE UNIQUE I](8)
  17 String8          0    5    0 CREATE UNIQUE INDEX vacuum_db. 00 r[5]='CREATE UNIQUE INDEX vacuum_db.'
REG[5] =   t30[CREATE UNIQUE I](8)
  18 Integer         21    7    0               00 r[7]=21
REG[7] =  i:21
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';'FROM main.sqlite_master WHERE type = 'table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    0    0 0             01 usesStmtJournal=0
  25 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  26 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  27 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  28 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  29 String8          0   10    0 INSERT INTO vacuum_db. 00 r[10]='INSERT INTO vacuum_db.'
REG[10] =   t22[INSERT INTO vac](8)
  30 String8          0   13    0  SELECT * FROM main. 00 r[13]=' SELECT * FROM main.'
REG[13] =   t20[ SELECT * FROM ](8)
  31 String8          0   14    0 ;             00 r[14]=';'
REG[14] =   t1[;](8)
  32 Goto             0    1    0               00 
   1 OpenRead         0    1    0 4             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   22    0               00 
  22 Close            0    0    0               00 
  23 Halt             0    0    0               00 
SQL: [SELECT 'DELETE FROM vacuum_db.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name='sqlite_sequence' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      2    0    0 0             01 usesStmtJournal=0
  15 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  16 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  17 String8          0    5    0 DELETE FROM vacuum_db. 00 r[5]='DELETE FROM vacuum_db.'
REG[5] =   t22[DELETE FROM vac](8)
  18 String8          0    8    0 ;             00 r[8]=';'
REG[8] =   t1[;](8)
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name=='sqlite_sequence';]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      2    0    0 0             01 usesStmtJournal=0
  19 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  20 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  21 String8          0    7    0 INSERT INTO vacuum_db. 00 r[7]='INSERT INTO vacuum_db.'
REG[7] =   t22[INSERT INTO vac](8)
  22 String8          0   10    0  SELECT * FROM main. 00 r[10]=' SELECT * FROM main.'
REG[10] =   t20[ SELECT * FROM ](8)
  23 String8          0   11    0 ;             00 r[11]=';'
REG[11] =   t1[;](8)
  24 Goto             0    1    0               00 
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   16    0               00 
  16 Close            0    0    0               00 
  17 Halt             0    0    0               00 
SQL: [INSERT INTO vacuum_db.sqlite_master   SELECT type, name, tbl_name, rootpage, sql    FROM main.sqlite_master   WHERE type='view' OR type='trigger'      OR (type='table' AND rootpage=0)]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    0    0 0             01 usesStmtJournal=0
  29 Transaction      2    1    0 0             01 usesStmtJournal=0
  30 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  31 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  32 String8          0    9    0 view          00 r[9]='view'
REG[9] =   t4[view](8)
  33 String8          0   11    0 trigger       00 r[11]='trigger'
REG[11] =   t7[trigger](8)
  34 String8          0   12    0 table         00 r[12]='table'
REG[12] =   t5[table](8)
  35 Integer          0   13    0               00 r[13]=0
REG[13] =  i:0
  36 Goto             0    1    0               00 
   1 InitCoroutine    7   20    2               00 
  20 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  21 Yield            7   26    0               00 
REG[7] =  i:1
REG[7] =  i:21
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   18    0               00 
  18 Close            0    0    0               00 
  19 EndCoroutine     7    0    0               00 
REG[7] =  i:21
  26 Noop             1    0    0               00 
  27 Halt             0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [ATTACH 'test.dbxxxxxx2' AS aux;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0 test.dbxxxxxx2 00 r[1]='test.dbxxxxxx2'
REG[1] =   t14[test.dbxxxxxx2](8)
   2 String8          0    2    0 aux           00 r[2]='aux'
REG[2] =   t3[aux](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t14[test.dbxxxxxx2](8)
REG[2] =   t3[aux](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    1 1             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      2    0   61 0             00 usesStmtJournal=0
  13 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s12[sqlite_stat1](8)
REG[2] =  i:2
REG[3] =   s39[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s8[f3_rules](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s48[CREATE TABLE f3](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s8[f3_rules](8)
REG[2] =  i:3
REG[3] =   s48[CREATE TABLE f3](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      2    0   61 0             00 usesStmtJournal=0
  12 TableLock        2    2    0 sqlite_stat1  00 iDb=2 root=2 write=0
  13 Goto             0    1    0               00 
   1 OpenRead         0    2    2 3             00 root=2 iDb=2; sqlite_stat1
   2 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_stat1.tbl
REG[1] =   s8[f3_rules](8)
   5 Column           0    1    2               00 r[2]=sqlite_stat1.idx
REG[2] =  NULL
   6 Column           0    2    3               00 r[3]=sqlite_stat1.stat
REG[3] =   s1[7](8)
   7 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s8[f3_rules](8)
REG[2] =  NULL
REG[3] =   s1[7](8)
   8 Next             0    4    0               01 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [;
CREATE TABLE t1(a INTEGER PRIMARY KEY AUTOINCREMENT, b);]
VDBE Trace:
   0 Init             0   58    0               00 Start at 58
  58 Transaction      0    1    1 1             01 usesStmtJournal=0
  59 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  60 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:1
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:1
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:1
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t1            00 r[7]='t1'
REG[7] =   t2[t1](8)
  21 String8          0    8    0 t1            00 r[8]='t1'
REG[8] =   t2[t1](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  23 String8          0   10    0 CREATE TABLE t1(a INTEGER PRIMARY KEY AUTOINCREMENT, b) 00 r[10]='CREATE TABLE t1(a INTEGER PRIMARY KEY AUTOINCREMENT, b)'
REG[10] =   t55[CREATE TABLE t1](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s71[06171111017B7461626C657431743102.....{tablet1t1.](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s71[06171111017B7461626C657431743102.....{tablet1t1.](8)
REG[5] =  i:1
  26 Close            1    0    0               00 
  27 SetCookie        0    1    2               00 
  28 ReadCookie       0   14    2               00 
REG[14] =  i:4
  29 If              14   32    0               00 
REG[14] =  i:4
  32 CreateTable      0   13    0               00 r[13]=root iDb=0
REG[13] =  i:3
  33 OpenWrite        0    1    0 5             00 root=1 iDb=0
  34 NewRowid         0   12    0               00 r[12]=rowid
REG[12] =  i:2
  35 Blob             6   14    0              00 r[14]= (len=6)
REG[14] =  t6[060000000000......](8)
  36 Insert           0   14   12               08 intkey=r[12] data=r[14]
REG[14] =  t6[060000000000......](8)
REG[12] =  i:2
  37 Close            0    0    0               00 
  38 Close            0    0    0               00 
  39 Null             0   15   16               00 r[15..16]=NULL
REG[15] =  NULL
  40 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  41 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  42 MustBeInt       12   45    0               00 
REG[12] =  i:2
  43 NotExists        2   45   12               00 intkey=r[12]; pk
REG[12] =  i:2
  44 Rowid            2   16    0               00 r[16]=rowid
REG[16] =  i:2
  45 IsNull          16   53    0               00 if r[16]==NULL goto 53
REG[16] =  i:2
  46 String8          0   17    0 table         00 r[17]='table'
REG[17] =   t5[table](8)
  47 String8          0   18    0 sqlite_sequence 00 r[18]='sqlite_sequence'
REG[18] =   t15[sqlite_sequence](8)
  48 String8          0   19    0 sqlite_sequence 00 r[19]='sqlite_sequence'
REG[19] =   t15[sqlite_sequence](8)
  49 Copy            13   20    0               00 r[20]=r[13]
REG[20] =  i:3
  50 String8          0   21    0 CREATE TABLE sqlite_sequence(name,seq) 00 r[21]='CREATE TABLE sqlite_sequence(name,seq)'
REG[21] =   t38[CREATE TABLE sq](8)
  51 MakeRecord      17    5   22 BBBDB         00 r[22]=mkrec(r[17..21])
REG[22] =  s80[06172B2B01597461626C6573716C6974..++.Ytablesqlit](8)
  52 Insert           2   22   16               00 intkey=r[16] data=r[22]
REG[22] =  s80[06172B2B01597461626C6573716C6974..++.Ytablesqlit](8)
REG[16] =  i:2
  53 Close            2    0    0               00 
  54 SetCookie        0    1    2               00 
  55 ParseSchema      0    0    0 tbl_name='sqlite_sequence' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s15[sqlite_sequence](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s15[sqlite_sequence](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s38[CREATE TABLE sq](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s15[sqlite_sequence](8)
REG[6] =  i:3
REG[7] =   s38[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  56 ParseSchema      0    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s55[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:2
REG[7] =   s55[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  57 Halt             0    0    0               00 
SQL: [SELECT typeof( (SELECT count(*) FROM t1) ),  (SELECT count(*) FROM t1) ;]
VDBE Trace:
   0 Init             0   22    0               00 Start at 22
  22 Transaction      0    0    2 1             01 usesStmtJournal=0
  23 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  24 Goto             0    1    0               00 
   1 Once             0    9    0               00 
   2 Null             0    4    0               00 r[4]=NULL; Init subquery result
REG[4] =  NULL
   3 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   4 OpenRead         2    2    0 1             00 root=2 iDb=0
   5 Count            2    6    0               00 r[6]=count()
REG[6] =  i:0
   6 Close            2    0    0               00 
   7 Copy             6    4    0               00 r[4]=r[6]
REG[4] =  i:0
   8 DecrJumpZero     5    9    0               00 if (--r[5])==0 goto 9
REG[5] =  i:1
   9 Copy             4    3    0               00 r[3]=r[4]
REG[3] =  i:0
  10 Function0        0    3    1 typeof(1)     01 r[1]=func(r[3])
REG[3] =  i:0
REG[1] =   t7[integer](8)
  11 Once             1   19    0               00 
  12 Null             0    7    0               00 r[7]=NULL; Init subquery result
REG[7] =  NULL
  13 Integer          1    8    0               00 r[8]=1; LIMIT counter
REG[8] =  i:1
  14 OpenRead         3    2    0 1             00 root=2 iDb=0
  15 Count            3    9    0               00 r[9]=count()
REG[9] =  i:0
  16 Close            3    0    0               00 
  17 Copy             9    7    0               00 r[7]=r[9]
REG[7] =  i:0
  18 DecrJumpZero     8   19    0               00 if (--r[8])==0 goto 19
REG[8] =  i:1
  19 Copy             7    2    0               00 r[2]=r[7]
REG[2] =  i:0
  20 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =   t7[integer](8)
REG[2] =  i:0
  21 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_37;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_37         00 
   2 Halt             0    0    0               00 
SQL: [CREATE INDEX numbers ON t1(b);]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      0    1    2 1             01 usesStmtJournal=0
  35 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  36 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  37 Goto             0    1    0               00 
   1 Noop             0   33    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:4
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:3
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 numbers       00 r[4]='numbers'
REG[4] =   t7[numbers](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:4
   9 String8          0    7    0 CREATE INDEX numbers ON t1(b) 00 r[7]='CREATE INDEX numbers ON t1(b)'
REG[7] =   t29[CREATE INDEX nu](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s50[06171B110147696E6465786E756D6265.....Gindexnumbe](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s50[06171B110147696E6465786E756D6265.....Gindexnumbe](8)
REG[2] =  i:3
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    1 k(2,,)        00 
  14 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  15 Rewind           1   21    0               00 
  21 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  22 SorterSort       3   27    0               00 
  27 Close            1    0    0               00 
  28 Close            2    0    0               00 
  29 Close            3    0    0               00 
  30 SetCookie        0    1    3               00 
  31 ParseSchema      0    0    0 name='numbers' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 numbers       00 r[2]='numbers'
REG[2] =   t7[numbers](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s7[numbers](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s7[numbers](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s29[CREATE INDEX nu](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s7[numbers](8)
REG[6] =  i:4
REG[7] =   s29[CREATE INDEX nu](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  32 Expire           0    0    0               00 
  33 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s55[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:2
REG[7] =   s55[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s7[numbers](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s29[CREATE INDEX nu](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s7[numbers](8)
REG[6] =  i:4
REG[7] =   s29[CREATE INDEX nu](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
/* 32 */
      SELECT count(*) FROM t1;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    0    3 1             01 usesStmtJournal=0
   8 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
   9 Goto             0    1    0               00 
   1 OpenRead         1    2    0 1             00 root=2 iDb=0
   2 Count            1    1    0               00 r[1]=count()
REG[1] =  i:0
   3 Close            1    0    0               00 
   4 Copy             1    2    0               00 r[2]=r[1]
REG[2] =  i:0
   5 ResultRow        2    1    0               00 output=r[2]
REG[2] =  i:0
   6 Halt             0    0    0               00 
SQL: [;
PRAGMA page_size=512;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [SELECT 1 IN ();]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   3 Halt             0    0    0               00 
SQL: [CREATE INDEX x ON t1(b);]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      0    1    3 1             01 usesStmtJournal=0
  35 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  36 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  37 Goto             0    1    0               00 
   1 Noop             0   33    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:5
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:4
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 x             00 r[4]='x'
REG[4] =   t1[x](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:5
   9 String8          0    7    0 CREATE INDEX x ON t1(b) 00 r[7]='CREATE INDEX x ON t1(b)'
REG[7] =   t23[CREATE INDEX x ](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s38[06170F11013B696E6465787874310543.....;indexxt1.C](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s38[06170F11013B696E6465787874310543.....;indexxt1.C](8)
REG[2] =  i:4
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    1 k(2,,)        00 
  14 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  15 Rewind           1   21    0               00 
  21 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  22 SorterSort       3   27    0               00 
  27 Close            1    0    0               00 
  28 Close            2    0    0               00 
  29 Close            3    0    0               00 
  30 SetCookie        0    1    4               00 
  31 ParseSchema      0    0    0 name='x' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 x             00 r[2]='x'
REG[2] =   t1[x](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[x](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[x](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[x](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[x](8)
REG[1] =   s1[x](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s1[x](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s23[CREATE INDEX x ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[x](8)
REG[6] =  i:5
REG[7] =   s23[CREATE INDEX x ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  32 Expire           0    0    0               00 
  33 Halt             0    0    0               00 
SQL: [;
VACUUM;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Vacuum           0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='x' AND type='index' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 x             00 r[2]='x'
REG[2] =   t1[x](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[x](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[x](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[x](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[x](8)
REG[1] =   s1[x](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s1[x](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s23[CREATE INDEX x ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[x](8)
REG[6] =  i:5
REG[7] =   s23[CREATE INDEX x ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='x' AND type='index' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 x             00 r[2]='x'
REG[2] =   t1[x](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[x](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[x](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[x](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[x](8)
REG[1] =   s1[x](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s1[x](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s23[CREATE INDEX x ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[x](8)
REG[6] =  i:5
REG[7] =   s23[CREATE INDEX x ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='ab' AND type='index' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 ab            00 r[2]='ab'
REG[2] =   t2[ab](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[ab](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[ab](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[ab](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[ab](8)
REG[1] =   s1[x](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
INSERT INTO sqlite_stat1(tbl,idx,stat) VALUES('t1',null,'1000');]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      2    1   61 0             01 usesStmtJournal=0
  11 TableLock        2    2    1 sqlite_stat1  00 iDb=2 root=2 write=1
  12 Goto             0    1    0               00 
   1 OpenWrite        0    2    2 3             00 root=2 iDb=2; sqlite_stat1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   3 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
   4 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   5 String8          0    4    0 1000          00 r[4]='1000'
REG[4] =   t4[1000](8)
   6 MakeRecord       2    3    5               00 r[5]=mkrec(r[2..4])
REG[5] =  s10[04110015743131303030....t11000](8)
   7 Insert           0    5    1 sqlite_stat1  1B intkey=r[1] data=r[5]
REG[5] =  s10[04110015743131303030....t11000](8)
REG[1] =  i:2
   8 Noop             0    0    0               00 
   9 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s55[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:2
REG[7] =   s55[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s7[numbers](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s29[CREATE INDEX nu](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s7[numbers](8)
REG[6] =  i:4
REG[7] =   s29[CREATE INDEX nu](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[x](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s23[CREATE INDEX x ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[x](8)
REG[6] =  i:5
REG[7] =   s23[CREATE INDEX x ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [INSERT INTO t1 VALUES(8,256);]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    1    4 1             01 usesStmtJournal=0
  34 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  35 TableLock        0    3    1 sqlite_sequence 00 iDb=0 root=3 write=1
  36 OpenRead         0    3    0 2             00 root=3 iDb=0; sqlite_sequence
  37 String8          0    1    0 t1            00 r[1]='t1'
REG[1] =   t2[t1](8)
  38 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  39 Rewind           0   47    0               00 
  47 Close            0    0    0               00 
  48 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 OpenWrite        1    5    0 k(2,,)        00 root=5 iDb=0; x
   3 OpenWrite        2    4    0 k(2,,)        00 root=4 iDb=0; numbers
   4 Integer          8    4    0               00 r[4]=8
REG[4] =  i:8
   5 NotNull          4    7    0               00 if r[4]!=NULL goto 7
REG[4] =  i:8
   7 MustBeInt        4    0    0               00 
REG[4] =  i:8
   8 MemMax           2    4    0               00 r[2]=max(r[2],r[4])
REG[4] =  i:8
   9 SoftNull         5    0    0               00 r[5]=NULL
  10 Integer        256    6    0               00 r[6]=256
REG[6] =  i:256
  11 NotExists        0   13    4               00 intkey=r[4]
REG[4] =  i:8
  13 Affinity         5    1    0 D             00 affinity(r[5])
  14 SCopy            6    9    0               00 r[9]=r[6]; b
REG[9] =  i:256
  15 IntCopy          4   10    0               00 r[10]=r[4]; rowid
REG[10] =  i:8
  16 MakeRecord       9    2    7               00 r[7]=mkrec(r[9..10]); for x
REG[7] =  s6[030201010008......](8)
  17 SCopy            6    9    0               00 r[9]=r[6]; b
REG[9] =  i:256
  18 MakeRecord       9    2    8               00 r[8]=mkrec(r[9..10]); for numbers
REG[8] =  s6[030201010008......](8)
  19 IdxInsert        1    7    0               10 key=r[7]
REG[7] =  s6[030201010008......](8)
  20 IdxInsert        2    8    0               10 key=r[8]
REG[8] =  s6[030201010008......](8)
  21 MakeRecord       5    2   11               00 r[11]=mkrec(r[5..6])
REG[11] =  s5[0300020100.....](8)
  22 Insert           0   11    4 t1            13 intkey=r[4] data=r[11]
REG[11] =  s5[0300020100.....](8)
REG[4] =  i:8
  23 Close            0    0    0               00 
  24 Close            1    0    0               00 
  25 Close            2    0    0               00 
  26 OpenWrite        0    3    0 2             00 root=3 iDb=0; sqlite_sequence
  27 NotNull          3   29    0               00 if r[3]!=NULL goto 29
REG[3] =  NULL
  28 NewRowid         0    3    0               00 r[3]=rowid
REG[3] =  i:1
  29 MakeRecord       1    2   12               00 r[12]=mkrec(r[1..2])
REG[12] =  s6[031101743108...t1.](8)
  30 Insert           0   12    3               08 intkey=r[3] data=r[12]
REG[12] =  s6[031101743108...t1.](8)
REG[3] =  i:1
  31 Noop             0    0    0               00 
  32 Halt             0    0    0               00 
SQL: [;
SELECT b=b FROM t1;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    4 1             01 usesStmtJournal=0
  11 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  12 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 Explain          0    0    0 SCAN TABLE t1 00 
   3 Rewind           0    8    0               00 
   4 Column           0    1    2               00 r[2]=t1.b
REG[2] =  i:256
   5 Eq               2    1    2 (BINARY)      61 if r[2]==r[2] goto 1
REG[2] =  i:256
REG[2] =  i:256
REG[1] =  i:1
   6 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   7 Next             0    4    0               01 
   8 Close            0    0    0               00 
   9 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s55[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:2
REG[7] =   s55[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s7[numbers](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s29[CREATE INDEX nu](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s7[numbers](8)
REG[6] =  i:4
REG[7] =   s29[CREATE INDEX nu](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[x](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s23[CREATE INDEX x ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[x](8)
REG[6] =  i:5
REG[7] =   s23[CREATE INDEX x ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0   85    0               00 Start at 85
  85 Transaction      0    0    4 1             01 usesStmtJournal=0
  86 Transaction      1    0    0 1             01 usesStmtJournal=0
  87 Transaction      2    0   61 0             01 usesStmtJournal=0
  88 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  89 Goto             0    1    0               00 
   1 Integer        100    1    0               00 r[1]=100
REG[1] =  i:100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
REG[1] =  i:100
   4 IntegrityCk      2    5    1 [5]           00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
REG[2] =  NULL
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
REG[1] =  i:100
  12 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  13 OpenRead         2    5    0 k(2,,)        00 root=5 iDb=0; x
  14 OpenRead         3    4    0 k(2,,)        00 root=4 iDb=0; numbers
  15 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  16 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  17 Integer          0    9    0               00 r[9]=0
REG[9] =  i:0
  18 Rewind           1   47    0               00 
  19 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  20 Column           1    1   11               00 r[11]=t1.b
REG[11] =  i:256
  21 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:8
  22 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  23 Found            2   34   11 2             00 key=r[11..12]
REG[11] =  i:256
REG[12] =  i:8
  34 AddImm           9    1    0               00 r[9]=r[9]+1
REG[9] =  i:0
  35 Found            3   46   11 2             00 key=r[11..12]
REG[11] =  i:256
REG[12] =  i:8
  46 Next             1   19    0               00 
  47 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  48 IfPos            1   50    0               00 if r[1]>0 then r[1]-=0, goto 50
REG[1] =  i:100
  50 Count            2    3    0               00 r[3]=count()
REG[3] =  i:1
  51 Eq               8   56    3               90 if r[8]==r[3] goto 56
REG[8] =  i:1
REG[3] =  i:1
  56 IfPos            1   58    0               00 if r[1]>0 then r[1]-=0, goto 58
REG[1] =  i:100
  58 Count            3    3    0               00 r[3]=count()
REG[3] =  i:1
  59 Eq               9   64    3               90 if r[9]==r[3] goto 64
REG[9] =  i:1
REG[3] =  i:1
  64 IfPos            1   66    0               00 if r[1]>0 then r[1]-=0, goto 66
REG[1] =  i:100
  66 IntegrityCk      2    1    1 ]             01 
  67 IsNull           2   72    0               00 if r[2]==NULL goto 72
REG[2] =  NULL
  72 IfPos            1   74    0               00 if r[1]>0 then r[1]-=0, goto 74
REG[1] =  i:100
  74 IntegrityCk      2    3    1 [2,1]         02 
  75 IsNull           2   80    0               00 if r[2]==NULL goto 80
REG[2] =  NULL
  80 AddImm           1 -100    0               00 r[1]=r[1]+-100
REG[1] =  i:100
  81 If               1   84    0               00 
REG[1] =  i:0
  82 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
  83 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
  84 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_10;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_10         00 
   2 Halt             0    0    0               00 
SQL: [;
INSERT INTO t1 VALUES (1,6);]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    1    4 1             01 usesStmtJournal=0
  34 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  35 TableLock        0    3    1 sqlite_sequence 00 iDb=0 root=3 write=1
  36 OpenRead         0    3    0 2             00 root=3 iDb=0; sqlite_sequence
  37 String8          0    1    0 t1            00 r[1]='t1'
REG[1] =   t2[t1](8)
  38 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  39 Rewind           0   47    0               00 
  40 Column           0    0    2               00 r[2]=
REG[2] =   s2[t1](8)
  41 Ne               1   45    2               10 if r[1]!=r[2] goto 45
REG[1] =   t2[t1](8)
REG[2] =   s2[t1](8)
  42 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:1
  43 Column           0    1    2               00 r[2]=
REG[2] =  i:8
  44 Goto             0   47    0               00 
  47 Close            0    0    0               00 
  48 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 OpenWrite        1    5    0 k(2,,)        00 root=5 iDb=0; x
   3 OpenWrite        2    4    0 k(2,,)        00 root=4 iDb=0; numbers
   4 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
   5 NotNull          4    7    0               00 if r[4]!=NULL goto 7
REG[4] =  i:1
   7 MustBeInt        4    0    0               00 
REG[4] =  i:1
   8 MemMax           2    4    0               00 r[2]=max(r[2],r[4])
REG[4] =  i:1
   9 SoftNull         5    0    0               00 r[5]=NULL
  10 Integer          6    6    0               00 r[6]=6
REG[6] =  i:6
  11 NotExists        0   13    4               00 intkey=r[4]
REG[4] =  i:1
  13 Affinity         5    1    0 D             00 affinity(r[5])
  14 SCopy            6    9    0               00 r[9]=r[6]; b
REG[9] =  i:6
  15 IntCopy          4   10    0               00 r[10]=r[4]; rowid
REG[10] =  i:1
  16 MakeRecord       9    2    7               00 r[7]=mkrec(r[9..10]); for x
REG[7] =  s4[03010906....](8)
  17 SCopy            6    9    0               00 r[9]=r[6]; b
REG[9] =  i:6
  18 MakeRecord       9    2    8               00 r[8]=mkrec(r[9..10]); for numbers
REG[8] =  s4[03010906....](8)
  19 IdxInsert        1    7    0               10 key=r[7]
REG[7] =  s4[03010906....](8)
  20 IdxInsert        2    8    0               10 key=r[8]
REG[8] =  s4[03010906....](8)
  21 MakeRecord       5    2   11               00 r[11]=mkrec(r[5..6])
REG[11] =  s4[03000106....](8)
  22 Insert           0   11    4 t1            13 intkey=r[4] data=r[11]
REG[11] =  s4[03000106....](8)
REG[4] =  i:1
  23 Close            0    0    0               00 
  24 Close            1    0    0               00 
  25 Close            2    0    0               00 
  26 OpenWrite        0    3    0 2             00 root=3 iDb=0; sqlite_sequence
  27 NotNull          3   29    0               00 if r[3]!=NULL goto 29
REG[3] =  i:1
  29 MakeRecord       1    2   12               00 r[12]=mkrec(r[1..2])
REG[12] =  s6[031101743108...t1.](8)
  30 Insert           0   12    3               08 intkey=r[3] data=r[12]
REG[12] =  s6[031101743108...t1.](8)
REG[3] =  i:1
  31 Noop             0    0    0               00 
  32 Halt             0    0    0               00 
SQL: [;
SELECT a FROM t1 WHERE a==0 ORDER BY a
  ;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    4 1             01 usesStmtJournal=0
  12 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  13 Goto             0    1    0               00 
   1 Noop             1    3    0               00 
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SEARCH TABLE t1 USING INTEGER PRIMARY KEY (rowid=?) 00 
   4 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   5 MustBeInt        1    9    0               00 
REG[1] =  i:0
   6 NotExists        0    9    1               00 intkey=r[1]; pk
REG[1] =  i:0
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_68;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_68         00 
   2 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s55[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:2
REG[7] =   s55[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s7[numbers](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s29[CREATE INDEX nu](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s7[numbers](8)
REG[6] =  i:4
REG[7] =   s29[CREATE INDEX nu](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[x](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s23[CREATE INDEX x ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[x](8)
REG[6] =  i:5
REG[7] =   s23[CREATE INDEX x ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    4 1             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s55[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s55[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s38[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s15[sqlite_sequence](8)
REG[2] =  i:3
REG[3] =   s38[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[numbers](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s29[CREATE INDEX nu](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s7[numbers](8)
REG[2] =  i:4
REG[3] =   s29[CREATE INDEX nu](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s23[CREATE INDEX x ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[x](8)
REG[2] =  i:5
REG[3] =   s23[CREATE INDEX x ](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
SELECT 4|2 FROM t1;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    4 1             01 usesStmtJournal=0
  10 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  11 Integer          4    2    0               00 r[2]=4
REG[2] =  i:4
  12 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  13 Goto             0    1    0               00 
   1 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   2 Explain          0    0    0 SCAN TABLE t1 00 
   3 Rewind           0    7    0               00 
   4 BitOr            3    2    1               00 r[1]=r[3]|r[2]
REG[3] =  i:2
REG[2] =  i:4
REG[1] =  i:6
   5 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:6
   6 Next             0    4    0               01 
   4 BitOr            3    2    1               00 r[1]=r[3]|r[2]
REG[3] =  i:2
REG[2] =  i:4
REG[1] =  i:6
   5 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:6
   6 Next             0    4    0               01 
   7 Close            0    0    0               00 
   8 Halt             0    0    0               00 
SQL: [;
CREATE UNIQUE INDEX y ON t1(b) WHERE b<>999;]
VDBE Trace:
   0 Init             0   39    0               00 Start at 39
  39 Transaction      0    1    4 1             01 usesStmtJournal=1
  40 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  41 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  42 Integer        999   11    0               00 r[11]=999
REG[11] =  i:999
  43 Goto             0    1    0               00 
   1 Noop             0   38    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:6
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:5
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 y             00 r[4]='y'
REG[4] =   t1[y](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:6
   9 String8          0    7    0 CREATE UNIQUE INDEX y ON t1(b) WHERE b<>999 00 r[7]='CREATE UNIQUE INDEX y ON t1(b) WHERE b<>999'
REG[7] =   t43[CREATE UNIQUE I](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s58[06170F110163696E6465787974310643.....cindexyt1.C](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s58[06170F110163696E6465787974310643.....cindexyt1.C](8)
REG[2] =  i:5
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    1 k(2,,)        00 
  14 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  15 Rewind           1   23    0               00 
  16 Column           1    1   10               00 r[10]=t1.b
REG[10] =  i:6
  17 Eq              11   22   10 (BINARY)      51 if r[11]==r[10] goto 22
REG[11] =  i:999
REG[10] =  i:6
  18 Column           1    1   12               00 r[12]=t1.b
REG[12] =  i:6
  19 Rowid            1   13    0               00 r[13]=rowid
REG[13] =  i:1
  20 MakeRecord      12    2    9               00 r[9]=mkrec(r[12..13])
REG[9] =  s4[03010906....](8)
  21 SorterInsert     3    9    0               00 
REG[9] =  s4[03010906....](8)
  22 Next             1   16    0               00 
  16 Column           1    1   10               00 r[10]=t1.b
REG[10] =  i:256
  17 Eq              11   22   10 (BINARY)      51 if r[11]==r[10] goto 22
REG[11] =  i:999
REG[10] =  i:256
  18 Column           1    1   12               00 r[12]=t1.b
REG[12] =  i:256
  19 Rowid            1   13    0               00 r[13]=rowid
REG[13] =  i:8
  20 MakeRecord      12    2    9               00 r[9]=mkrec(r[12..13])
REG[9] =  s6[030201010008......](8)
  21 SorterInsert     3    9    0               00 
REG[9] =  s6[030201010008......](8)
  22 Next             1   16    0               00 
  23 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  24 SorterSort       3   32    0               00 
  25 Goto             0   28    0               00 
  28 SorterData       3    9    2               00 r[9]=data
  29 Last             2    0   -1               00 
  30 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s4[03010906....](8)
  31 SorterNext       3   26    0               00 
  26 SorterCompare    3   28    9 1             00 if key(3)!=trim(r[9],1) goto 28
  28 SorterData       3    9    2               00 r[9]=data
  29 Last             2    0   -1               00 
  30 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s6[030201010008......](8)
  31 SorterNext       3   26    0               00 
  32 Close            1    0    0               00 
  33 Close            2    0    0               00 
  34 Close            3    0    0               00 
  35 SetCookie        0    1    5               00 
  36 ParseSchema      0    0    0 name='y' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    5 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 y             00 r[2]='y'
REG[2] =   t1[y](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s1[x](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s1[y](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s1[y](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:6
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s43[CREATE UNIQUE I](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[y](8)
REG[6] =  i:6
REG[7] =   s43[CREATE UNIQUE I](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  37 Expire           0    0    0               00 
  38 Halt             0    0    0               00 
SQL: [INSERT INTO t1(a,a) VALUES(150, 'test1');]
VDBE Trace:
   0 Init             0   43    0               00 Start at 43
  43 Transaction      0    1    5 1             01 usesStmtJournal=0
  44 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  45 TableLock        0    3    1 sqlite_sequence 00 iDb=0 root=3 write=1
  46 OpenRead         0    3    0 2             00 root=3 iDb=0; sqlite_sequence
  47 String8          0    1    0 t1            00 r[1]='t1'
REG[1] =   t2[t1](8)
  48 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  49 Rewind           0   57    0               00 
  50 Column           0    0    2               00 r[2]=
REG[2] =   s2[t1](8)
  51 Ne               1   55    2               10 if r[1]!=r[2] goto 55
REG[1] =   t2[t1](8)
REG[2] =   s2[t1](8)
  52 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:1
  53 Column           0    1    2               00 r[2]=
REG[2] =  i:8
  54 Goto             0   57    0               00 
  57 Close            0    0    0               00 
  58 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  59 Integer        999   11    0               00 r[11]=999
REG[11] =  i:999
  60 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 OpenWrite        1    6    0 k(2,,)        00 root=6 iDb=0; y
   3 OpenWrite        2    5    0 k(2,,)        00 root=5 iDb=0; x
   4 OpenWrite        3    4    0 k(2,,)        00 root=4 iDb=0; numbers
   5 String8          0    4    0 test1         00 r[4]='test1'
REG[4] =   t5[test1](8)
   6 NotNull          4    8    0               00 if r[4]!=NULL goto 8
REG[4] =   t5[test1](8)
   8 MustBeInt        4    0    0               00 
REG[4] =   t5[test1](8)
SQL: [SAVEPOINT sp_42;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_42         00 
   2 Halt             0    0    0               00 
SQL: [VACUUM;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Vacuum           0    0    0               00 
SQL: [VACUUM;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Vacuum           0    0    0               00 
SQL: [ATTACH 'testerr.db' AS t1;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0 testerr.db    00 r[1]='testerr.db'
REG[1] =   t10[testerr.db](8)
   2 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t10[testerr.db](8)
REG[2] =   t2[t1](8)
REG[3] =  NULL
SQL: [CREATE TABLE t2(t3, t4, t5 DEFAULT 'xyz');]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    5 1             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:7
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:6
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:6
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:6
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:6
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:6
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t2            00 r[7]='t2'
REG[7] =   t2[t2](8)
  21 String8          0    8    0 t2            00 r[8]='t2'
REG[8] =   t2[t2](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:7
  23 String8          0   10    0 CREATE TABLE t2(t3, t4, t5 DEFAULT 'xyz') 00 r[10]='CREATE TABLE t2(t3, t4, t5 DEFAULT 'xyz')'
REG[10] =   t41[CREATE TABLE t2](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s57[06171111015F7461626C657432743207....._tablet2t2.](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s57[06171111015F7461626C657432743207....._tablet2t2.](8)
REG[5] =  i:6
  26 Close            1    0    0               00 
  27 SetCookie        0    1    6               00 
  28 ParseSchema      0    0    0 tbl_name='t2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t2            00 r[2]='t2'
REG[2] =   t2[t2](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t2](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t2](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:7
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s41[CREATE TABLE t2](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t2](8)
REG[6] =  i:7
REG[7] =   s41[CREATE TABLE t2](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [SELECT abs(a), a FROM t1
    INTERSECT
    SELECT a, a FROM t1
    ORDER BY 1
  ;]
VDBE Trace:
   0 Init             0   56    0               00 Start at 56
  56 Transaction      0    0    6 1             01 usesStmtJournal=0
  57 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  58 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 InitCoroutine    4   24    3               00 left SELECT
  24 InitCoroutine    5   50   25               00 right SELECT
  50 Yield            4   55    0               00 
REG[4] =  i:2
REG[4] =  i:50
   3 SorterOpen       2    5    0 k(2,B,B)      00 
   4 OpenRead         1    2    0 0             00 root=2 iDb=0; t1
   5 Explain          1    0    0 SCAN TABLE t1 00 
   6 Rewind           1   15    0               00 
   7 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:1
   8 Function0        0   12   10 abs(1)        01 r[10]=func(r[12])
REG[12] =  i:1
REG[10] =  i:1
   9 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:1
  10 Copy            10    8    0               00 r[8]=r[10]
REG[8] =  i:1
  11 Copy            11    9    0               00 r[9]=r[11]
REG[9] =  i:1
  12 MakeRecord       8    4   13               00 r[13]=mkrec(r[8..11])
REG[13] =  s5[0509090909.....](8)
  13 SorterInsert     2   13    0               00 
REG[13] =  s5[0509090909.....](8)
  14 Next             1    7    0               01 
   7 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:8
   8 Function         0   12   10 abs(1)        01 r[10]=func(r[12])
REG[12] =  i:8
REG[10] =  i:8
   9 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:8
  10 Copy            10    8    0               00 r[8]=r[10]
REG[8] =  i:8
  11 Copy            11    9    0               00 r[9]=r[11]
REG[9] =  i:8
  12 MakeRecord       8    4   13               00 r[13]=mkrec(r[8..11])
REG[13] =  s9[050101010108080808.........](8)
  13 SorterInsert     2   13    0               00 
REG[13] =  s9[050101010108080808.........](8)
  14 Next             1    7    0               01 
  15 Close            1    0    0               00 
  16 OpenPseudo       3   14    5               00 5 columns in r[14]
  17 SorterSort       2   23    0               00 
  18 SorterData       2   14    3               00 r[14]=data
  19 Column           3    2   10               00 r[10]=abs(a)
REG[10] =  i:1
  20 Column           3    3   11               00 r[11]=a
REG[11] =  i:1
  21 Yield            4    0    0               00 
REG[4] =  i:50
REG[4] =  i:21
  51 Yield            5   55    0               00 
REG[5] =  i:24
REG[5] =  i:51
  25 Noop             4    5    0               00 
  26 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
  27 Explain          2    0    0 SCAN TABLE t1 00 
  28 Rewind           0   33    0               00 
  29 Rowid            0   15    0               00 r[15]=rowid
REG[15] =  i:1
  30 Copy            15   16    0               00 r[16]=r[15]
REG[16] =  i:1
  31 Yield            5    0    0               00 
REG[5] =  i:51
REG[5] =  i:31
  52 Permutation      0    0    0 [0]           00 
  53 Compare         10   15    2 k(3,B,B,)     01 r[10..11] <-> r[15..16]
REG[10] =  i:1
REG[15] =  i:1
REG[11] =  i:1
REG[16] =  i:1
  54 Jump            45   44   48               00 
  44 Gosub            6   36    0               00 
REG[6] =  i:44
  36 IfNot            1   39    0               00 
REG[1] =  i:0
  39 Copy            10    2    1               00 r[2..3]=r[10..11]
REG[2] =  i:1
REG[3] =  i:1
  40 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  41 ResultRow       10    2    0               00 output=r[10..11]
REG[10] =  i:1
REG[11] =  i:1
  42 Return           6    0    0               00 
REG[6] =  i:44
  45 Yield            4   55    0               00 
REG[4] =  i:21
REG[4] =  i:45
  22 SorterNext       2   18    0               00 
  18 SorterData       2   14    3               00 r[14]=data
  19 Column           3    2   10               00 r[10]=abs(a)
REG[10] =  i:8
  20 Column           3    3   11               00 r[11]=a
REG[11] =  i:8
  21 Yield            4    0    0               00 
REG[4] =  i:45
REG[4] =  i:21
  46 Goto             0   52    0               00 
  52 Permutation      0    0    0 [0]           00 
  53 Compare         10   15    2 k(3,B,B,)     01 r[10..11] <-> r[15..16]
REG[10] =  i:8
REG[15] =  i:1
  54 Jump            45   44   48               00 
  48 Yield            5   55    0               00 
REG[5] =  i:31
REG[5] =  i:48
  32 Next             0   29    0               01 
  29 Rowid            0   15    0               00 r[15]=rowid
REG[15] =  i:8
  30 Copy            15   16    0               00 r[16]=r[15]
REG[16] =  i:8
  31 Yield            5    0    0               00 
REG[5] =  i:48
REG[5] =  i:31
  49 Goto             0   52    0               00 
  52 Permutation      0    0    0 [0]           00 
  53 Compare         10   15    2 k(3,B,B,)     01 r[10..11] <-> r[15..16]
REG[10] =  i:8
REG[15] =  i:8
REG[11] =  i:8
REG[16] =  i:8
  54 Jump            45   44   48               00 
  44 Gosub            6   36    0               00 
REG[6] =  i:44
  36 IfNot            1   39    0               00 
REG[1] =  i:1
  37 Compare         10    2    2 k(2,,)        00 r[10..11] <-> r[2..3]
REG[10] =  i:8
REG[2] =  i:1
  38 Jump            39   42   39               00 
  39 Copy            10    2    1               00 r[2..3]=r[10..11]
REG[2] =  i:8
REG[3] =  i:8
  40 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  41 ResultRow       10    2    0               00 output=r[10..11]
REG[10] =  i:8
REG[11] =  i:8
  42 Return           6    0    0               00 
REG[6] =  i:44
  45 Yield            4   55    0               00 
REG[4] =  i:21
REG[4] =  i:45
  22 SorterNext       2   18    0               00 
  23 EndCoroutine     4    0    0               00 
REG[4] =  i:45
  55 Halt             0    0    0               00 
SQL: [;
PRAGMA writable_schema=OFF;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s55[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:2
REG[7] =   s55[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s7[numbers](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s29[CREATE INDEX nu](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s7[numbers](8)
REG[6] =  i:4
REG[7] =   s29[CREATE INDEX nu](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[x](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s23[CREATE INDEX x ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[x](8)
REG[6] =  i:5
REG[7] =   s23[CREATE INDEX x ](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[y](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:6
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s43[CREATE UNIQUE I](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[y](8)
REG[6] =  i:6
REG[7] =   s43[CREATE UNIQUE I](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
UPDATE t1 SET b='ac', b='b%c';]
VDBE Trace:
   0 Init             0   53    0               00 Start at 53
  53 Transaction      0    1    6 1             01 usesStmtJournal=1
  54 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  55 Integer        999    9    0               00 r[9]=999
REG[9] =  i:999
  56 Goto             0    1    0               00 
   1 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:1
   6 RowSetAdd        4    5    0               00 rowset(4)=r[5]
REG[4] =  NULL
REG[5] =  i:1
   7 Next             0    5    0               01 
   5 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:8
   6 RowSetAdd        4    5    0               00 rowset(4)=r[5]
REG[4] =  (rowset)
REG[5] =  i:8
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
  10 OpenWrite        1    6    0 k(2,,)        00 root=6 iDb=0; y
  11 OpenWrite        2    5    0 k(2,,)        00 root=5 iDb=0; x
  12 OpenWrite        3    4    0 k(2,,)        00 root=4 iDb=0; numbers
  13 RowSetRead       4   48    5               00 r[5]=rowset(4)
REG[4] =  (rowset)
REG[5] =  i:1
  14 NotExists        0   13    5               00 intkey=r[5]
REG[5] =  i:1
  15 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  16 String8          0    7    0 b%c           00 r[7]='b%c'
REG[7] =   t3[b%c](8)
  17 Affinity         6    1    0 D             00 affinity(r[6])
  18 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
  19 Eq               9   27    7 (BINARY)      51 if r[9]==r[7] goto 27
REG[9] =  i:999
REG[7] =   t3[b%c](8)
  20 SCopy            7   10    0               00 r[10]=r[7]; b
REG[10] =   t3[b%c](8)
  21 IntCopy          5   11    0               00 r[11]=r[5]; rowid
REG[11] =  i:1
  22 MakeRecord      10    2    1               00 r[1]=mkrec(r[10..11]); for y
REG[1] =  s6[031309622563...b%c](8)
  23 NoConflict       1   27   10 1             00 key=r[10]
REG[10] =   t3[b%c](8)
  27 SCopy            7   10    0               00 r[10]=r[7]; b
REG[10] =   t3[b%c](8)
  28 IntCopy          5   11    0               00 r[11]=r[5]; rowid
REG[11] =  i:1
  29 MakeRecord      10    2    2               00 r[2]=mkrec(r[10..11]); for x
REG[2] =  s6[031309622563...b%c](8)
  30 SCopy            7   10    0               00 r[10]=r[7]; b
REG[10] =   t3[b%c](8)
  31 MakeRecord      10    2    3               00 r[3]=mkrec(r[10..11]); for numbers
REG[3] =  s6[031309622563...b%c](8)
  32 Column           0    1    8               00 r[8]=t1.b
REG[8] =  i:6
  33 Eq               9   37    8 (BINARY)      51 if r[9]==r[8] goto 37
REG[9] =  i:999
REG[8] =  i:6
  34 Column           0    1   10               00 r[10]=t1.b
REG[10] =  i:6
  35 Rowid            0   11    0               00 r[11]=rowid
REG[11] =  i:1
  36 IdxDelete        1   10    2               00 key=r[10..11]
  37 Column           0    1   10               00 r[10]=t1.b
REG[10] =  i:6
  38 Rowid            0   11    0               00 r[11]=rowid
REG[11] =  i:1
  39 IdxDelete        2   10    2               00 key=r[10..11]
  40 IdxDelete        3   10    2               00 key=r[10..11]
  41 IsNull           1   43    0               00 if r[1]==NULL goto 43
REG[1] =  s6[031309622563...b%c](8)
  42 IdxInsert        1    1    0               00 key=r[1]
REG[1] =  s6[031309622563...b%c](8)
  43 IdxInsert        2    2    0               00 key=r[2]
REG[2] =  s6[031309622563...b%c](8)
  44 IdxInsert        3    3    0               00 key=r[3]
REG[3] =  s6[031309622563...b%c](8)
  45 MakeRecord       6    2    8               00 r[8]=mkrec(r[6..7])
REG[8] =  s6[030013622563...b%c](8)
  46 Insert           0    8    5 t1            05 intkey=r[5] data=r[8]
REG[8] =  s6[030013622563...b%c](8)
REG[5] =  i:1
  47 Goto             0   13    0               00 
  13 RowSetRead       4   48    5               00 r[5]=rowset(4)
REG[4] =  (rowset)
REG[5] =  i:8
  14 NotExists        0   13    5               00 intkey=r[5]
REG[5] =  i:8
  15 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  16 String           3    7    0 b%c           00 r[7]='b%c' (len=3)
REG[7] =   t3[b%c](8)
  17 Affinity         6    1    0 D             00 affinity(r[6])
  18 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
  19 Eq               9   27    7 (BINARY)      51 if r[9]==r[7] goto 27
REG[9] =  i:999
REG[7] =   t3[b%c](8)
  20 SCopy            7   10    0               00 r[10]=r[7]; b
REG[10] =   t3[b%c](8)
  21 IntCopy          5   11    0               00 r[11]=r[5]; rowid
REG[11] =  i:8
  22 MakeRecord      10    2    1               00 r[1]=mkrec(r[10..11]); for y
REG[1] =  s7[03130162256308...b%c.](8)
  23 NoConflict       1   27   10 1             00 key=r[10]
REG[10] =   t3[b%c](8)
  24 IdxRowid         1   12    0               00 r[12]=rowid
REG[12] =  i:1
  25 Eq              12   27    5               90 if r[12]==r[5] goto 27
REG[12] =  i:1
REG[5] =  i:8
  26 Halt          2067    2    0 t1.b          02 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='t1x0' AND type='index' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1x0          00 r[2]='t1x0'
REG[2] =   t4[t1x0](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t1x0](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t1x0](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t1x0](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t1x0](8)
REG[1] =   s1[x](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t1x0](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t1x0](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='sqlite_stat1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 sqlite_stat1  00 r[2]='sqlite_stat1'
REG[2] =   t12[sqlite_stat1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
SELECT 5 not between a and a FROM t1;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    6 1             01 usesStmtJournal=0
  14 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  15 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
  16 Goto             0    1    0               00 
   1 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   2 Explain          0    0    0 SCAN TABLE t1 00 
   3 Rewind           0   11    0               00 
   4 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:1
   5 Ge               4    5    3               64 if r[4]>=r[3] goto 5
REG[4] =  i:1
REG[3] =  i:5
REG[5] =  i:1
   6 Le               4    6    3               64 if r[4]<=r[3] goto 6
REG[4] =  i:1
REG[3] =  i:5
REG[6] =  i:0
   7 And              5    6    2               00 r[2]=(r[5] && r[6])
REG[5] =  i:1
REG[6] =  i:0
REG[2] =  i:0
   8 Not              2    1    0               00 r[1]= !r[2]
REG[2] =  i:0
REG[1] =  i:1
   9 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  10 Next             0    4    0               01 
   4 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:8
   5 Ge               4    5    3               64 if r[4]>=r[3] goto 5
REG[4] =  i:8
REG[3] =  i:5
REG[5] =  i:0
   6 Le               4    6    3               64 if r[4]<=r[3] goto 6
REG[4] =  i:8
REG[3] =  i:5
REG[6] =  i:1
   7 And              5    6    2               00 r[2]=(r[5] && r[6])
REG[5] =  i:0
REG[6] =  i:1
REG[2] =  i:0
   8 Not              2    1    0               00 r[1]= !r[2]
REG[2] =  i:0
REG[1] =  i:1
   9 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  10 Next             0    4    0               01 
  11 Close            0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;
UPDATE t1 SET a='ABCDEFG', a='a*[DE]G';]
VDBE Trace:
   0 Init             0   59    0               00 Start at 59
  59 Transaction      0    1    6 1             01 usesStmtJournal=1
  60 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  61 Integer        999   10    0               00 r[10]=999
REG[10] =  i:999
  62 Goto             0    1    0               00 
   1 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:1
   6 RowSetAdd        4    5    0               00 rowset(4)=r[5]
REG[4] =  NULL
REG[5] =  i:1
   7 Next             0    5    0               01 
   5 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:8
   6 RowSetAdd        4    5    0               00 rowset(4)=r[5]
REG[4] =  (rowset)
REG[5] =  i:8
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
  10 OpenWrite        1    6    0 k(2,,)        00 root=6 iDb=0; y
  11 OpenWrite        2    5    0 k(2,,)        00 root=5 iDb=0; x
  12 OpenWrite        3    4    0 k(2,,)        00 root=4 iDb=0; numbers
  13 RowSetRead       4   54    5               00 r[5]=rowset(4)
REG[4] =  (rowset)
REG[5] =  i:1
  14 NotExists        0   13    5               00 intkey=r[5]
REG[5] =  i:1
  15 String8          0    6    0 a*[DE]G       00 r[6]='a*[DE]G'
REG[6] =   t7[a*[DE]G](8)
  16 MustBeInt        6    0    0               00 
REG[6] =   t7[a*[DE]G](8)
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    6 1             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s55[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s55[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s38[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s15[sqlite_sequence](8)
REG[2] =  i:3
REG[3] =   s38[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[numbers](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s29[CREATE INDEX nu](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s7[numbers](8)
REG[2] =  i:4
REG[3] =   s29[CREATE INDEX nu](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s23[CREATE INDEX x ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[x](8)
REG[2] =  i:5
REG[3] =   s23[CREATE INDEX x ](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[y](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:6
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s43[CREATE UNIQUE I](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[y](8)
REG[2] =  i:6
REG[3] =   s43[CREATE UNIQUE I](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:7
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s41[CREATE TABLE t2](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t2](8)
REG[2] =  i:7
REG[3] =   s41[CREATE TABLE t2](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [SELECT b FROM t1 WHERE b LIKE '10%' ORDER BY b;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    6 1             01 usesStmtJournal=0
  14 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  15 String8          0    2    0 10%           00 r[2]='10%'
REG[2] =   t3[10%](8)
  16 Goto             0    1    0               00 
   1 Noop             1    3    0               00 
   2 OpenRead         2    5    0 k(2,,)        00 root=5 iDb=0; x
   3 Explain          0    0    0 SCAN TABLE t1 USING COVERING INDEX x 00 
   4 Rewind           2   11    1 0             00 
   5 Column           2    0    3               00 r[3]=t1.b
REG[3] =  i:6
   6 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t3[10%](8)
REG[3] =  i:6
REG[1] =  i:0
   7 IfNot            1   10    1               00 
REG[1] =  i:0
  10 Next             2    5    0               01 
   5 Column           2    0    3               00 r[3]=t1.b
REG[3] =  i:256
   6 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t3[10%](8)
REG[3] =  i:256
REG[1] =  i:0
   7 IfNot            1   10    1               00 
REG[1] =  i:0
  10 Next             2    5    0               01 
  11 Close            2    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t2' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t2            00 r[2]='t2'
REG[2] =   t2[t2](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t2](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t2](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:7
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s41[CREATE TABLE t2](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t2](8)
REG[6] =  i:7
REG[7] =   s41[CREATE TABLE t2](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='"4' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 "4            00 r[2]='"4'
REG[2] =   t2["4](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2["4](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2["4](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2["4](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2["4](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2["4](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2["4](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
BEGIN;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [;
SELECT name FROM sqlite_master WHERE sql LIKE '%collate%';]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    6 1             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 String8          0    2    0 %collate%     00 r[2]='%collate%'
REG[2] =   t9[%collate%](8)
  15 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   10    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s55[CREATE TABLE t1](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t9[%collate%](8)
REG[3] =   s55[CREATE TABLE t1](8)
REG[1] =  i:0
   6 IfNot            1    9    1               00 
REG[1] =  i:0
   9 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s38[CREATE TABLE sq](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t9[%collate%](8)
REG[3] =   s38[CREATE TABLE sq](8)
REG[1] =  i:0
   6 IfNot            1    9    1               00 
REG[1] =  i:0
   9 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s29[CREATE INDEX nu](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t9[%collate%](8)
REG[3] =   s29[CREATE INDEX nu](8)
REG[1] =  i:0
   6 IfNot            1    9    1               00 
REG[1] =  i:0
   9 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s23[CREATE INDEX x ](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t9[%collate%](8)
REG[3] =   s23[CREATE INDEX x ](8)
REG[1] =  i:0
   6 IfNot            1    9    1               00 
REG[1] =  i:0
   9 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s43[CREATE UNIQUE I](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t9[%collate%](8)
REG[3] =   s43[CREATE UNIQUE I](8)
REG[1] =  i:0
   6 IfNot            1    9    1               00 
REG[1] =  i:0
   9 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s41[CREATE TABLE t2](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t9[%collate%](8)
REG[3] =   s41[CREATE TABLE t2](8)
REG[1] =  i:0
   6 IfNot            1    9    1               00 
REG[1] =  i:0
   9 Next             0    4    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t2' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t2            00 r[2]='t2'
REG[2] =   t2[t2](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t2](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t2](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:7
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s41[CREATE TABLE t2](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t2](8)
REG[6] =  i:7
REG[7] =   s41[CREATE TABLE t2](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
UPDATE t1 SET a='ABC', a='a[a-D]C';]
VDBE Trace:
   0 Init             0   59    0               00 Start at 59
  59 Transaction      0    1    6 1             01 usesStmtJournal=1
  60 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  61 Integer        999   10    0               00 r[10]=999
REG[10] =  i:999
  62 Goto             0    1    0               00 
   1 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:1
   6 RowSetAdd        4    5    0               00 rowset(4)=r[5]
REG[4] =  NULL
REG[5] =  i:1
   7 Next             0    5    0               01 
   5 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:8
   6 RowSetAdd        4    5    0               00 rowset(4)=r[5]
REG[4] =  (rowset)
REG[5] =  i:8
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
  10 OpenWrite        1    6    0 k(2,,)        00 root=6 iDb=0; y
  11 OpenWrite        2    5    0 k(2,,)        00 root=5 iDb=0; x
  12 OpenWrite        3    4    0 k(2,,)        00 root=4 iDb=0; numbers
  13 RowSetRead       4   54    5               00 r[5]=rowset(4)
REG[4] =  (rowset)
REG[5] =  i:1
  14 NotExists        0   13    5               00 intkey=r[5]
REG[5] =  i:1
  15 String8          0    6    0 a[a-D]C       00 r[6]='a[a-D]C'
REG[6] =   t7[a[a-D]C](8)
  16 MustBeInt        6    0    0               00 
REG[6] =   t7[a[a-D]C](8)
SQL: [;
SELECT CASE WHEN b = b THEN 'eq' ELSE 'ne' END FROM t1;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    6 1             01 usesStmtJournal=0
  14 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  15 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 Explain          0    0    0 SCAN TABLE t1 00 
   3 Rewind           0   11    0               00 
   4 Column           0    1    2               00 r[2]=t1.b
REG[2] =  i:6
   5 Ne               2    8    2 (BINARY)      51 if r[2]!=r[2] goto 8
REG[2] =  i:6
REG[2] =  i:6
   6 String8          0    1    0 eq            00 r[1]='eq'
REG[1] =   t2[eq](8)
   7 Goto             0    9    0               00 
   9 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t2[eq](8)
  10 Next             0    4    0               01 
   4 Column           0    1    2               00 r[2]=t1.b
REG[2] =  i:256
   5 Ne               2    8    2 (BINARY)      51 if r[2]!=r[2] goto 8
REG[2] =  i:256
REG[2] =  i:256
   6 String           2    1    0 eq            00 r[1]='eq' (len=2)
REG[1] =   t2[eq](8)
   7 Goto             0    9    0               00 
   9 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t2[eq](8)
  10 Next             0    4    0               01 
  11 Close            0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t6' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t6            00 r[2]='t6'
REG[2] =   t2[t6](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t6](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t6](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t6](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t6](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t6](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t6](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [SELECT count(*) FROM t2 INNER JOIN t2 
;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    6 1             01 usesStmtJournal=0
  18 TableLock        0    7    0 t2            00 iDb=0 root=7 write=0
  19 Goto             0    1    0               00 
   1 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
   2 OpenRead         0    7    0 0             00 root=7 iDb=0; t2
   3 OpenRead         1    7    0 0             00 root=7 iDb=0; t2
   4 Explain          0    0    0 SCAN TABLE t2 00 
   5 Rewind           0   11    0               00 
  11 Close            0    0    0               00 
  12 Close            1    0    0               00 
  13 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  14 Copy             1    2    0               00 r[2]=r[1]
REG[2] =  i:0
  15 ResultRow        2    1    0               00 output=r[2]
REG[2] =  i:0
  16 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f9132d17859 in __GI_abort () at abort.c:79
#2  0x00007f9132d17729 in __assert_fail_base (fmt=0x7f9132ead588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x212bb5 "0", file=0x222c23 "sqlite3.c", line=125392, function=<optimized out>) at assert.c:92
#3  0x00007f9132d28fd6 in __GI___assert_fail (assertion=0x212bb5 "0", file=0x222c23 "sqlite3.c", line=125392, function=0x2266f4 "int termIsEquivalence(Parse *, Expr *)") at assert.c:101
#4  0x0000000000398c39 in exprAnalyze (pSrc=<optimized out>, pWC=<optimized out>, idxTerm=<optimized out>) at sqlite3.c:125392
#5  0x000000000038c95f in sqlite3WhereBegin (pParse=<optimized out>, pTabList=<optimized out>, pWhere=<optimized out>, pOrderBy=<optimized out>, pDistinctSet=0x1efcf80, wctrlFlags=0, iAuxArg=320) at sqlite3.c:125921
#6  0x0000000000328d02 in sqlite3Select (pParse=<optimized out>, p=<optimized out>, pDest=<optimized out>) at sqlite3.c:118028
#7  0x00000000003034ae in yy_reduce (yypParser=0x1f3c4f0, yyruleno=<optimized out>) at sqlite3.c:133175
#8  0x00000000002fef8e in sqlite3Parser (yyp=0x1f3c4f0, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#9  0x00000000002fc544 in sqlite3RunParser (pParse=0x1eec350, 
    zSql=0x1f3bb90 "SELECT * FROM (SELECT a COLLATE nocase, a FROM t1) AS x\n       CROSS JOIN t1 ON (x.a=t1.a) ;SELECT * FROM t2 NATURAL LEFT JOIN t2;CREATE TABLE t6(t10, t7, t8, t9);PRAGMA database_list;PRAGMA foreign_k"..., pzErrMsg=0x7ffecfe3e498) at sqlite3.c:135186
#10 0x00000000002fac4e in sqlite3Prepare (db=0x1eecf70, 
    zSql=0x1eee37d "SELECT * FROM (SELECT a COLLATE nocase, a FROM t1) AS x\n       CROSS JOIN t1 ON (x.a=t1.a) ;SELECT * FROM t2 NATURAL LEFT JOIN t2;CREATE TABLE t6(t10, t7, t8, t9);PRAGMA database_list;PRAGMA foreign_k"..., nBytes=<optimized out>, saveSqlFlag=1, pReprepare=<optimized out>, ppStmt=0x7ffecfe3e5c8, pzTail=0x7ffecfe3e5b0) at sqlite3.c:112589
#11 0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0x1eecf70, 
    zSql=0x1eee37d "SELECT * FROM (SELECT a COLLATE nocase, a FROM t1) AS x\n       CROSS JOIN t1 ON (x.a=t1.a) ;SELECT * FROM t2 NATURAL LEFT JOIN t2;CREATE TABLE t6(t10, t7, t8, t9);PRAGMA database_list;PRAGMA foreign_k"..., nBytes=589, saveSqlFlag=1, pOld=0x0, ppStmt=<optimized out>, pzTail=0x7ffecfe3e5b0) at sqlite3.c:112688
#12 0x000000000028f38c in sqlite3_prepare_v2 (db=0x2, zSql=0x7ffecfe3da80 "", nBytes=0, ppStmt=0x7ffecfe3e5c8, pzTail=<optimized out>) at sqlite3.c:112764
#13 0x000000000024b100 in main (argc=1, argv=0x7ffecfe3e778) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 11857] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
