GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000429,sig:06,src:009979+006286,time:22880684,execs:2234879,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    0 0             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    0 0             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
PRAGMA writable_schema=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
SELECT printf('%d,%d,%d,%d',55,'-11',3421);]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 String8          0    2    0 %d,%d,%d,%d   00 r[2]='%d,%d,%d,%d'
REG[2] =   t11[%d,%d,%d,%d](8)
   5 Integer         55    3    0               00 r[3]=55
REG[3] =  i:55
   6 String8          0    4    0 -11           00 r[4]='-11'
REG[4] =   t3[-11](8)
   7 Integer       3421    5    0               00 r[5]=3421
REG[5] =  i:3421
   8 Goto             0    1    0               00 
   1 Function0       15    2    1 printf(-1)    04 r[1]=func(r[2..5])
REG[2] =   t11[%d,%d,%d,%d](8)
REG[3] =  i:55
REG[4] =   t3[-11](8)
REG[5] =  i:3421
REG[1] =   s13[55,-11,3421,0](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s13[55,-11,3421,0](8)
   3 Halt             0    0    0               00 
SQL: [;
COMMIT;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       1    0    0               00 
SQL: [SELECT typeof( 
    CAST (X'30002E003000300030003100' AS REAL) ),  
    CAST (X'30002E003000300030003100' AS REAL) ;]
VDBE Trace:
   0 Init             0    6    0               00 Start at 6
   6 Blob            12    3    0 0             00 r[3]=0 (len=12)
REG[3] =  t12[30002E0030003000300031000...0.0.0.1.](8)
   7 Cast             3   69    0               00 affinity(r[3])
REG[3] =  t12[30002E0030003000300031000...0.0.0.1.](8)
   8 Goto             0    1    0               00 
   1 Function0        1    3    1 typeof(1)     01 r[1]=func(r[3])
REG[3] =  r:0
REG[1] =   t4[real](8)
   2 Blob            12    2    0 0             00 r[2]=0 (len=12)
REG[2] =  t12[30002E0030003000300031000...0.0.0.1.](8)
   3 Cast             2   69    0               00 affinity(r[2])
REG[2] =  t12[30002E0030003000300031000...0.0.0.1.](8)
   4 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =   t4[real](8)
REG[2] =  r:0
   5 Halt             0    0    0               00 
SQL: [CREATE TABLE ""("" UNIQUE, x CHAR(100));]
VDBE Trace:
   0 Init             0   42    0               00 Start at 42
  42 Transaction      0    1    0 0             01 usesStmtJournal=0
  43 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  44 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Noop             0   23    0               00 
  12 CreateIndex      0    4    0               00 r[4]=root iDb=0
REG[4] =  i:3
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:2
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex__1 00 r[7]='sqlite_autoindex__1'
REG[7] =   t19[sqlite_autoinde](8)
  17 String8          0    8    0               00 r[8]=''
REG[8] =   t0[](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:3
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s31[0617330D0100696E64657873716C6974..3...indexsqlit](8)
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  s31[0617330D0100696E64657873716C6974..3...indexsqlit](8)
REG[5] =  i:2
  22 Close            1    0    0               00 
  23 Close            0    0    0               00 
  24 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  25 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  26 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  27 MustBeInt        1   30    0               00 
REG[1] =  i:1
  28 NotExists        2   30    1               00 intkey=r[1]; pk
REG[1] =  i:1
  29 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:1
  30 IsNull          13   38    0               00 if r[13]==NULL goto 38
REG[13] =  i:1
  31 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  32 String8          0   15    0               00 r[15]=''
REG[15] =   t0[](8)
  33 String8          0   16    0               00 r[16]=''
REG[16] =   t0[](8)
  34 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:2
  35 String8          0   18    0 CREATE TABLE ""("" UNIQUE, x CHAR(100)) 00 r[18]='CREATE TABLE ""("" UNIQUE, x CHAR(100))'
REG[18] =   t39[CREATE TABLE ""](8)
  36 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s51[06170D0D015B7461626C650243524541.....[table.CREA](8)
  37 Insert           2   19   13               00 intkey=r[13] data=r[19]
REG[19] =  s51[06170D0D015B7461626C650243524541.....[table.CREA](8)
REG[13] =  i:1
  38 Close            2    0    0               00 
  39 SetCookie        0    1    1               00 
  40 ParseSchema      0    0    0 tbl_name='' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    1 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0               00 r[2]=''
REG[2] =   t0[](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t0[](8)
REG[1] =   s0[](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s0[](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s39[CREATE TABLE ""](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s0[](8)
REG[6] =  i:2
REG[7] =   s39[CREATE TABLE ""](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t0[](8)
REG[1] =   s0[](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s19[sqlite_autoinde](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =  NULL
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s19[sqlite_autoinde](8)
REG[6] =  i:3
REG[7] =  NULL
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  41 Halt             0    0    0               00 
SQL: [CREATE TABLE t1(a, b);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    1 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:3
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:3
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:3
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t1            00 r[7]='t1'
REG[7] =   t2[t1](8)
  21 String8          0    8    0 t1            00 r[8]='t1'
REG[8] =   t2[t1](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  23 String8          0   10    0 CREATE TABLE t1(a, b) 00 r[10]='CREATE TABLE t1(a, b)'
REG[10] =   t21[CREATE TABLE t1](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s37[0617111101377461626C657431743104.....7tablet1t1.](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s37[0617111101377461626C657431743104.....7tablet1t1.](8)
REG[5] =  i:3
  26 Close            1    0    0               00 
  27 SetCookie        0    1    2               00 
  28 ParseSchema      0    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s21[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:4
REG[7] =   s21[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s21[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:4
REG[7] =   s21[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
COMMIT;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       1    0    0               00 
SQL: [SELECT typeof( EXISTS ( SELECT NULL, NULL, NULL ) ),  EXISTS ( SELECT NULL, NULL, NULL ) ;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Once             0    6    0               00 
   2 Integer          0    4    0               00 r[4]=0; Init EXISTS result
REG[4] =  i:0
   3 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   4 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
   5 DecrJumpZero     5    6    0               00 if (--r[5])==0 goto 6
REG[5] =  i:1
   6 Copy             4    3    0               00 r[3]=r[4]
REG[3] =  i:1
   7 Function0        0    3    1 typeof(1)     01 r[1]=func(r[3])
REG[3] =  i:1
REG[1] =   t7[integer](8)
   8 Once             1   13    0               00 
   9 Integer          0    9    0               00 r[9]=0; Init EXISTS result
REG[9] =  i:0
  10 Integer          1   10    0               00 r[10]=1; LIMIT counter
REG[10] =  i:1
  11 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  12 DecrJumpZero    10   13    0               00 if (--r[10])==0 goto 13
REG[10] =  i:1
  13 Copy             9    2    0               00 r[2]=r[9]
REG[2] =  i:1
  14 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =   t7[integer](8)
REG[2] =  i:1
  15 Halt             0    0    0               00 
SQL: [SELECT b FROM t1 WHERE b<1 OR b>20 ORDER BY b;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    0    2 0             01 usesStmtJournal=0
  22 TableLock        0    4    0 t1            00 iDb=0 root=4 write=0
  23 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  24 Integer         20    4    0               00 r[4]=20
REG[4] =  i:20
  25 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0    4    0 2             00 root=4 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0   13    0               00 
  13 Close            0    0    0               00 
  14 OpenPseudo       2    8    3               00 3 columns in r[8]
  15 SorterSort       1   20    0               00 
  20 Halt             0    0    0               00 
SQL: [SELECT a FROM t1 WHERE (a notnull AND a<4) OR a==8 ORDER BY a;]
VDBE Trace:
   0 Init             0   22    0               00 Start at 22
  22 Transaction      0    0    2 0             01 usesStmtJournal=0
  23 TableLock        0    4    0 t1            00 iDb=0 root=4 write=0
  24 Integer          4    3    0               00 r[3]=4
REG[3] =  i:4
  25 Integer          8    4    0               00 r[4]=8
REG[4] =  i:8
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0    4    0 1             00 root=4 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0   14    0               00 
  14 Close            0    0    0               00 
  15 OpenPseudo       2    8    3               00 3 columns in r[8]
  16 SorterSort       1   21    0               00 
  21 Halt             0    0    0               00 
SQL: [;
PRAGMA count_changes = 1;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
PRAGMA writable_schema=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
UPDATE sqlite_master SET sql='nonsense' WHERE name='sqlite_stat1';]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    1    2 0             01 usesStmtJournal=0
  28 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  29 String8          0    9    0 sqlite_stat1  00 r[9]='sqlite_stat1'
REG[9] =   t12[sqlite_stat1](8)
  30 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    1    0 2             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    8               00 r[8]=sqlite_master.name
REG[8] =   s0[](8)
   6 Ne               9    9    8 (BINARY)      52 if r[9]!=r[8] goto 9
REG[9] =   t12[sqlite_stat1](8)
REG[8] =   s0[](8)
   9 Next             0    5    0               01 
   5 Column           0    1    8               00 r[8]=sqlite_master.name
REG[8] =   s19[sqlite_autoinde](8)
   6 Ne               9    9    8 (BINARY)      52 if r[9]!=r[8] goto 9
REG[9] =   t12[sqlite_stat1](8)
REG[8] =   s19[sqlite_autoinde](8)
   9 Next             0    5    0               01 
   5 Column           0    1    8               00 r[8]=sqlite_master.name
REG[8] =   s2[t1](8)
   6 Ne               9    9    8 (BINARY)      52 if r[9]!=r[8] goto 9
REG[9] =   t12[sqlite_stat1](8)
REG[8] =   s2[t1](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Integer          0   10    0               00 r[10]=0
REG[10] =  i:0
  12 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
  13 RowSetRead       1   24    2               00 r[2]=rowset(1)
REG[1] =  NULL
REG[2] =  NULL
  24 Close            0    0    0               00 
  25 ResultRow       10    1    0               00 output=r[10]
REG[10] =  i:0
  26 Halt             0    0    0               00 
SQL: [SELECT b FROM t1 WHERE b<0 AND b=0 ORDER BY b;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    2 0             01 usesStmtJournal=0
  14 TableLock        0    4    0 t1            00 iDb=0 root=4 write=0
  15 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
  16 Goto             0    1    0               00 
   1 Noop             1    3    0               00 
   2 OpenRead         0    4    0 2             00 root=4 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0   11    0               00 
  11 Close            0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [SELECT b FROM t1 WHERE (b<0 AND b=0) AND b IS NULL ORDER BY b;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    2 0             01 usesStmtJournal=0
  15 TableLock        0    4    0 t1            00 iDb=0 root=4 write=0
  16 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
  17 Goto             0    1    0               00 
   1 Noop             1    3    0               00 
   2 OpenRead         0    4    0 2             00 root=4 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0   12    0               00 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [;
CREATE TABLE numbers(x INTEGER PRIMARY KEY AUTOINCREMENT, y);]
VDBE Trace:
   0 Init             0   62    0               00 Start at 62
  62 Transaction      0    1    2 0             01 usesStmtJournal=0
  63 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  64 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:4
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:4
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  18 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  19 IsNull           5   28    0               00 if r[5]==NULL goto 28
REG[5] =  i:4
  20 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  21 String8          0    7    0 numbers       00 r[7]='numbers'
REG[7] =   t7[numbers](8)
  22 String8          0    8    0 numbers       00 r[8]='numbers'
REG[8] =   t7[numbers](8)
  23 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  24 String8          0   10    0 CREATE TABLE numbers(x INTEGER PRIMARY KEY AUTOINCREMENT, y) 00 r[10]='CREATE TABLE numbers(x INTEGER PRIMARY KEY AUTOINCREMENT, y)'
REG[10] =   t60[CREATE TABLE nu](8)
  25 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s87[07171B1B0181057461626C656E756D62.......tablenumb](8)
  26 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s87[07171B1B0181057461626C656E756D62.......tablenumb](8)
REG[5] =  i:4
  27 AddImm          12    1    0               00 r[12]=r[12]+1
REG[12] =  i:0
  28 Close            1    0    0               00 
  29 SetCookie        0    1    3               00 
  30 ReadCookie       0   15    2               00 
REG[15] =  i:4
  31 If              15   34    0               00 
REG[15] =  i:4
  34 CreateTable      0   14    0               00 r[14]=root iDb=0
REG[14] =  i:6
  35 OpenWrite        0    1    0 5             00 root=1 iDb=0
  36 NewRowid         0   13    0               00 r[13]=rowid
REG[13] =  i:5
  37 Blob             6   15    0              00 r[15]= (len=6)
REG[15] =  t6[060000000000......](8)
  38 Insert           0   15   13               08 intkey=r[13] data=r[15]
REG[15] =  t6[060000000000......](8)
REG[13] =  i:5
  39 Close            0    0    0               00 
  40 Close            0    0    0               00 
  41 Null             0   16   17               00 r[16..17]=NULL
REG[16] =  NULL
  42 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  43 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  44 MustBeInt       13   47    0               00 
REG[13] =  i:5
  45 NotExists        2   47   13               00 intkey=r[13]; pk
REG[13] =  i:5
  46 Rowid            2   17    0               00 r[17]=rowid
REG[17] =  i:5
  47 Integer          0   24    0               00 r[24]=0
REG[24] =  i:0
  48 IsNull          17   57    0               00 if r[17]==NULL goto 57
REG[17] =  i:5
  49 String8          0   18    0 table         00 r[18]='table'
REG[18] =   t5[table](8)
  50 String8          0   19    0 sqlite_sequence 00 r[19]='sqlite_sequence'
REG[19] =   t15[sqlite_sequence](8)
  51 String8          0   20    0 sqlite_sequence 00 r[20]='sqlite_sequence'
REG[20] =   t15[sqlite_sequence](8)
  52 Copy            14   21    0               00 r[21]=r[14]
REG[21] =  i:6
  53 String8          0   22    0 CREATE TABLE sqlite_sequence(name,seq) 00 r[22]='CREATE TABLE sqlite_sequence(name,seq)'
REG[22] =   t38[CREATE TABLE sq](8)
  54 MakeRecord      18    5   23 BBBDB         00 r[23]=mkrec(r[18..22])
REG[23] =  s80[06172B2B01597461626C6573716C6974..++.Ytablesqlit](8)
  55 Insert           2   23   17               00 intkey=r[17] data=r[23]
REG[23] =  s80[06172B2B01597461626C6573716C6974..++.Ytablesqlit](8)
REG[17] =  i:5
  56 AddImm          24    1    0               00 r[24]=r[24]+1
REG[24] =  i:0
  57 Close            2    0    0               00 
  58 SetCookie        0    1    3               00 
  59 ParseSchema      0    0    0 tbl_name='sqlite_sequence' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s15[sqlite_sequence](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s15[sqlite_sequence](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:6
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s38[CREATE TABLE sq](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s15[sqlite_sequence](8)
REG[6] =  i:6
REG[7] =   s38[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  60 ParseSchema      0    0    0 tbl_name='numbers' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 numbers       00 r[2]='numbers'
REG[2] =   t7[numbers](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s7[numbers](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s7[numbers](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s60[CREATE TABLE nu](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s7[numbers](8)
REG[6] =  i:5
REG[7] =   s60[CREATE TABLE nu](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  61 Halt             0    0    0               00 
SQL: [SELECT a FROM t1 WHERE a NOT BETWEEN 2 AND 100 ORDER BY a;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    0    3 0             01 usesStmtJournal=0
  22 TableLock        0    4    0 t1            00 iDb=0 root=4 write=0
  23 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  24 Integer        100    4    0               00 r[4]=100
REG[4] =  i:100
  25 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0    4    0 1             00 root=4 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0   13    0               00 
  13 Close            0    0    0               00 
  14 OpenPseudo       2    8    3               00 3 columns in r[8]
  15 SorterSort       1   20    0               00 
  20 Halt             0    0    0               00 
SQL: [SELECT b FROM t1 WHERE (b+1234)||'this is b string that is at least 32 characters long' BETWEEN 1 AND 2 ORDER BY b;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0    3 0             01 usesStmtJournal=0
  24 TableLock        0    4    0 t1            00 iDb=0 root=4 write=0
  25 Integer       1234    4    0               00 r[4]=1234
REG[4] =  i:1234
  26 String8          0    5    0 this is b string that is at least 32 characters long 00 r[5]='this is b string that is at least 32 characters long'
REG[5] =   t52[this is b strin](8)
  27 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  28 Integer          2    7    0               00 r[7]=2
REG[7] =  i:2
  29 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0    4    0 2             00 root=4 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0   15    0               00 
  15 Close            0    0    0               00 
  16 OpenPseudo       2   11    3               00 3 columns in r[11]
  17 SorterSort       1   22    0               00 
  22 Halt             0    0    0               00 
SQL: [PRAGMA foreign_keys = 0;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='numbers' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 0             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 numbers       00 r[2]='numbers'
REG[2] =   t7[numbers](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s7[numbers](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s7[numbers](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s60[CREATE TABLE nu](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s7[numbers](8)
REG[6] =  i:5
REG[7] =   s60[CREATE TABLE nu](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
/* 32 */
      SELECT count(*) FROM numbers;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    0    3 0             01 usesStmtJournal=0
   8 TableLock        0    5    0 numbers       00 iDb=0 root=5 write=0
   9 Goto             0    1    0               00 
   1 OpenRead         1    5    0 1             00 root=5 iDb=0
   2 Count            1    1    0               00 r[1]=count()
REG[1] =  i:0
   3 Close            1    0    0               00 
   4 Copy             1    2    0               00 r[2]=r[1]
REG[2] =  i:0
   5 ResultRow        2    1    0               00 output=r[2]
REG[2] =  i:0
   6 Halt             0    0    0               00 
SQL: [SELECT a FROM t1 WHERE ((a not in (3,4,5,6,7,8,9,10) OR 0) AND a<11) OR 0 ORDER BY a;]
VDBE Trace:
   0 Init             0   60    0               00 Start at 60
  60 Transaction      0    0    3 0             01 usesStmtJournal=0
  61 TableLock        0    4    0 t1            00 iDb=0 root=4 write=0
  62 Integer         11    4    0               00 r[4]=11
REG[4] =  i:11
  63 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0    4    0 1             00 root=4 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0   52    0               00 
  52 Close            0    0    0               00 
  53 OpenPseudo       4    8    3               00 3 columns in r[8]
  54 SorterSort       1   59    0               00 
  59 Halt             0    0    0               00 
SQL: [;
PRAGMA page_size=512;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [;
VACUUM;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Vacuum           0    0    0               00 
SQL: [ATTACH '' AS vacuum_db;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0               00 r[1]=''
REG[1] =   t0[](8)
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
REG[2] =   t9[vacuum_db](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t0[](8)
REG[2] =   t9[vacuum_db](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      2    0    0 0             00 usesStmtJournal=0
  13 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [PRAGMA vacuum_db.synchronous=OFF]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [SELECT 'CREATE TABLE vacuum_db.' || substr(sql,14)   FROM sqlite_master WHERE type='table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    3 0             01 usesStmtJournal=0
  20 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  21 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  22 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  23 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  24 String8          0    8    0 CREATE TABLE vacuum_db. 00 r[8]='CREATE TABLE vacuum_db.'
REG[8] =   t23[CREATE TABLE va](8)
  25 Integer         14   10    0               00 r[10]=14
REG[10] =  i:14
  26 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   17    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s0[](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s0[](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:2
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:2
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s39[CREATE TABLE ""](8)
  13 Function0        2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s39[CREATE TABLE ""](8)
REG[10] =  i:14
REG[5] =   s26[""("" UNIQUE, x](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s26[""("" UNIQUE, x](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s49[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s49[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.""("" UNIQUE, x CHAR(100))]
VDBE Trace:
   0 Init             0   46    0               00 Start at 46
  46 Transaction      2    1    0 0             01 usesStmtJournal=0
  47 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  48 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        2    2    4               00 
   4 SetCookie        2    5    1               00 
   5 CreateTable      2    2    0               00 r[2]=root iDb=2
REG[2] =  i:2
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Noop             0   25    0               00 
  12 CreateIndex      2    4    0               00 r[4]=root iDb=2
REG[4] =  i:3
  13 Integer          0   11    0               00 r[11]=0
REG[11] =  i:0
  14 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  15 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:2
  16 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  17 String8          0    7    0 sqlite_autoindex__1 00 r[7]='sqlite_autoindex__1'
REG[7] =   t19[sqlite_autoinde](8)
  18 String8          0    8    0               00 r[8]=''
REG[8] =   t0[](8)
  19 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:3
  20 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  21 MakeRecord       6    5   12 BBBDB         00 r[12]=mkrec(r[6..10])
REG[12] =  s31[0617330D0100696E64657873716C6974..3...indexsqlit](8)
  22 Insert           1   12    5               18 intkey=r[5] data=r[12]
REG[12] =  s31[0617330D0100696E64657873716C6974..3...indexsqlit](8)
REG[5] =  i:2
  23 AddImm          11    1    0               00 r[11]=r[11]+1
REG[11] =  i:0
  24 Close            1    0    0               00 
  25 Close            0    0    0               00 
  26 Null             0   13   14               00 r[13..14]=NULL
REG[13] =  NULL
  27 OpenWrite        2    1    2 5             00 root=1 iDb=2; sqlite_master
  28 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  29 MustBeInt        1   32    0               00 
REG[1] =  i:1
  30 NotExists        2   32    1               00 intkey=r[1]; pk
REG[1] =  i:1
  31 Rowid            2   14    0               00 r[14]=rowid
REG[14] =  i:1
  32 Integer          0   21    0               00 r[21]=0
REG[21] =  i:0
  33 IsNull          14   42    0               00 if r[14]==NULL goto 42
REG[14] =  i:1
  34 String8          0   15    0 table         00 r[15]='table'
REG[15] =   t5[table](8)
  35 String8          0   16    0               00 r[16]=''
REG[16] =   t0[](8)
  36 String8          0   17    0               00 r[17]=''
REG[17] =   t0[](8)
  37 Copy             2   18    0               00 r[18]=r[2]
REG[18] =  i:2
  38 String8          0   19    0 CREATE TABLE ""("" UNIQUE, x CHAR(100)) 00 r[19]='CREATE TABLE ""("" UNIQUE, x CHAR(100))'
REG[19] =   t39[CREATE TABLE ""](8)
  39 MakeRecord      15    5   20 BBBDB         00 r[20]=mkrec(r[15..19])
REG[20] =  s51[06170D0D015B7461626C650243524541.....[table.CREA](8)
  40 Insert           2   20   14               00 intkey=r[14] data=r[20]
REG[20] =  s51[06170D0D015B7461626C650243524541.....[table.CREA](8)
REG[14] =  i:1
  41 AddImm          21    1    0               00 r[21]=r[21]+1
REG[21] =  i:0
  42 Close            2    0    0               00 
  43 SetCookie        2    1    1               00 
  44 ParseSchema      2    0    0 tbl_name='' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    1 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0               00 r[2]=''
REG[2] =   t0[](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t0[](8)
REG[1] =   s0[](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s0[](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s39[CREATE TABLE ""](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s0[](8)
REG[6] =  i:2
REG[7] =   s39[CREATE TABLE ""](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t0[](8)
REG[1] =   s0[](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s19[sqlite_autoinde](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =  NULL
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s19[sqlite_autoinde](8)
REG[6] =  i:3
REG[7] =  NULL
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  45 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t1](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[t1](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:4
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:4
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s21[CREATE TABLE t1](8)
  13 Function         2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s21[CREATE TABLE t1](8)
REG[10] =  i:14
REG[5] =   s8[t1(a, b)](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s8[t1(a, b)](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s31[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s31[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.t1(a, b)]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      2    1    1 0             01 usesStmtJournal=0
  33 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  34 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      2    2    0               00 r[2]=root iDb=2
REG[2] =  i:4
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:3
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:3
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  18 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  19 IsNull           5   28    0               00 if r[5]==NULL goto 28
REG[5] =  i:3
  20 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  21 String8          0    7    0 t1            00 r[7]='t1'
REG[7] =   t2[t1](8)
  22 String8          0    8    0 t1            00 r[8]='t1'
REG[8] =   t2[t1](8)
  23 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  24 String8          0   10    0 CREATE TABLE t1(a, b) 00 r[10]='CREATE TABLE t1(a, b)'
REG[10] =   t21[CREATE TABLE t1](8)
  25 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s37[0617111101377461626C657431743104.....7tablet1t1.](8)
  26 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s37[0617111101377461626C657431743104.....7tablet1t1.](8)
REG[5] =  i:3
  27 AddImm          12    1    0               00 r[12]=r[12]+1
REG[12] =  i:0
  28 Close            1    0    0               00 
  29 SetCookie        2    1    2               00 
  30 ParseSchema      2    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    2 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s21[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:4
REG[7] =   s21[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  31 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s7[numbers](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s7[numbers](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:5
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:5
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:5
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s60[CREATE TABLE nu](8)
  13 Function         2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s60[CREATE TABLE nu](8)
REG[10] =  i:14
REG[5] =   s47[numbers(x INTEG](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s47[numbers(x INTEG](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s70[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s70[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.numbers(x INTEGER PRIMARY KEY AUTOINCREMENT, y)]
VDBE Trace:
   0 Init             0   62    0               00 Start at 62
  62 Transaction      2    1    2 0             01 usesStmtJournal=0
  63 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  64 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      2    2    0               00 r[2]=root iDb=2
REG[2] =  i:5
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:4
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:4
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  18 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  19 IsNull           5   28    0               00 if r[5]==NULL goto 28
REG[5] =  i:4
  20 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  21 String8          0    7    0 numbers       00 r[7]='numbers'
REG[7] =   t7[numbers](8)
  22 String8          0    8    0 numbers       00 r[8]='numbers'
REG[8] =   t7[numbers](8)
  23 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  24 String8          0   10    0 CREATE TABLE numbers(x INTEGER PRIMARY KEY AUTOINCREMENT, y) 00 r[10]='CREATE TABLE numbers(x INTEGER PRIMARY KEY AUTOINCREMENT, y)'
REG[10] =   t60[CREATE TABLE nu](8)
  25 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s87[07171B1B0181057461626C656E756D62.......tablenumb](8)
  26 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s87[07171B1B0181057461626C656E756D62.......tablenumb](8)
REG[5] =  i:4
  27 AddImm          12    1    0               00 r[12]=r[12]+1
REG[12] =  i:0
  28 Close            1    0    0               00 
  29 SetCookie        2    1    3               00 
  30 ReadCookie       2   15    2               00 
REG[15] =  i:4
  31 If              15   34    0               00 
REG[15] =  i:4
  34 CreateTable      2   14    0               00 r[14]=root iDb=2
REG[14] =  i:6
  35 OpenWrite        0    1    2 5             00 root=1 iDb=2
  36 NewRowid         0   13    0               00 r[13]=rowid
REG[13] =  i:5
  37 Blob             6   15    0              00 r[15]= (len=6)
REG[15] =  t6[060000000000......](8)
  38 Insert           0   15   13               08 intkey=r[13] data=r[15]
REG[15] =  t6[060000000000......](8)
REG[13] =  i:5
  39 Close            0    0    0               00 
  40 Close            0    0    0               00 
  41 Null             0   16   17               00 r[16..17]=NULL
REG[16] =  NULL
  42 OpenWrite        2    1    2 5             00 root=1 iDb=2; sqlite_master
  43 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  44 MustBeInt       13   47    0               00 
REG[13] =  i:5
  45 NotExists        2   47   13               00 intkey=r[13]; pk
REG[13] =  i:5
  46 Rowid            2   17    0               00 r[17]=rowid
REG[17] =  i:5
  47 Integer          0   24    0               00 r[24]=0
REG[24] =  i:0
  48 IsNull          17   57    0               00 if r[17]==NULL goto 57
REG[17] =  i:5
  49 String8          0   18    0 table         00 r[18]='table'
REG[18] =   t5[table](8)
  50 String8          0   19    0 sqlite_sequence 00 r[19]='sqlite_sequence'
REG[19] =   t15[sqlite_sequence](8)
  51 String8          0   20    0 sqlite_sequence 00 r[20]='sqlite_sequence'
REG[20] =   t15[sqlite_sequence](8)
  52 Copy            14   21    0               00 r[21]=r[14]
REG[21] =  i:6
  53 String8          0   22    0 CREATE TABLE sqlite_sequence(name,seq) 00 r[22]='CREATE TABLE sqlite_sequence(name,seq)'
REG[22] =   t38[CREATE TABLE sq](8)
  54 MakeRecord      18    5   23 BBBDB         00 r[23]=mkrec(r[18..22])
REG[23] =  s80[06172B2B01597461626C6573716C6974..++.Ytablesqlit](8)
  55 Insert           2   23   17               00 intkey=r[17] data=r[23]
REG[23] =  s80[06172B2B01597461626C6573716C6974..++.Ytablesqlit](8)
REG[17] =  i:5
  56 AddImm          24    1    0               00 r[24]=r[24]+1
REG[24] =  i:0
  57 Close            2    0    0               00 
  58 SetCookie        2    1    3               00 
  59 ParseSchema      2    0    0 tbl_name='sqlite_sequence' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    3 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s15[sqlite_sequence](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s15[sqlite_sequence](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:6
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s38[CREATE TABLE sq](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s15[sqlite_sequence](8)
REG[6] =  i:6
REG[7] =   s38[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  60 ParseSchema      2    0    0 tbl_name='numbers' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    3 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 numbers       00 r[2]='numbers'
REG[2] =   t7[numbers](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s7[numbers](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s7[numbers](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s60[CREATE TABLE nu](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s7[numbers](8)
REG[6] =  i:5
REG[7] =   s60[CREATE TABLE nu](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  61 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s15[sqlite_sequence](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s15[sqlite_sequence](8)
  16 Next             0    4    0               01 
  17 Close            0    0    0               00 
  18 Halt             0    0    0               00 
SQL: [SELECT 'CREATE INDEX vacuum_db.' || substr(sql,14)  FROM sqlite_master WHERE sql LIKE 'CREATE INDEX %' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    3 0             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE INDEX % 00 r[2]='CREATE INDEX %'
REG[2] =   t14[CREATE INDEX %](8)
  17 String8          0    5    0 CREATE INDEX vacuum_db. 00 r[5]='CREATE INDEX vacuum_db.'
REG[5] =   t23[CREATE INDEX va](8)
  18 Integer         14    7    0               00 r[7]=14
REG[7] =  i:14
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE ""](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s39[CREATE TABLE ""](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =  NULL
REG[1] =  NULL
   6 IfNot            1   11    1               00 
REG[1] =  NULL
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s21[CREATE TABLE t1](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s21[CREATE TABLE t1](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s60[CREATE TABLE nu](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s60[CREATE TABLE nu](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s38[CREATE TABLE sq](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s38[CREATE TABLE sq](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'CREATE UNIQUE INDEX vacuum_db.' || substr(sql,21)   FROM sqlite_master WHERE sql LIKE 'CREATE UNIQUE INDEX %']
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    3 0             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE UNIQUE INDEX % 00 r[2]='CREATE UNIQUE INDEX %'
REG[2] =   t21[CREATE UNIQUE I](8)
  17 String8          0    5    0 CREATE UNIQUE INDEX vacuum_db. 00 r[5]='CREATE UNIQUE INDEX vacuum_db.'
REG[5] =   t30[CREATE UNIQUE I](8)
  18 Integer         21    7    0               00 r[7]=21
REG[7] =  i:21
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE ""](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s39[CREATE TABLE ""](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =  NULL
REG[1] =  NULL
   6 IfNot            1   11    1               00 
REG[1] =  NULL
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s21[CREATE TABLE t1](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s21[CREATE TABLE t1](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s60[CREATE TABLE nu](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s60[CREATE TABLE nu](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s38[CREATE TABLE sq](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s38[CREATE TABLE sq](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';'FROM main.sqlite_master WHERE type = 'table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    0    3 0             01 usesStmtJournal=0
  25 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  26 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  27 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  28 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  29 String8          0   10    0 INSERT INTO vacuum_db. 00 r[10]='INSERT INTO vacuum_db.'
REG[10] =   t22[INSERT INTO vac](8)
  30 String8          0   13    0  SELECT * FROM main. 00 r[13]=' SELECT * FROM main.'
REG[13] =   t20[ SELECT * FROM ](8)
  31 String8          0   14    0 ;             00 r[14]=';'
REG[14] =   t1[;](8)
  32 Goto             0    1    0               00 
   1 OpenRead         0    1    0 4             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   22    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s0[](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s0[](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:2
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:2
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s0[](8)
  13 Function0        0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s0[](8)
REG[11] =   z2[''](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z2[''](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s24[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s24[INSERT INTO vac](8)
REG[8] =   s44[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s0[](8)
  17 Function0        0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s0[](8)
REG[9] =   z2[''](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z2[''](8)
REG[8] =   s44[INSERT INTO vac](8)
REG[5] =   s46[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s46[INSERT INTO vac](8)
REG[7] =   s47[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s47[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'' SELECT * FROM main.'';]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    0    3 0             01 usesStmtJournal=1
  32 Transaction      2    1    3 0             01 usesStmtJournal=1
  33 TableLock        0    2    0               00 iDb=0 root=2 write=0
  34 TableLock        2    2    1               00 iDb=2 root=2 write=1
  35 Goto             0    1    0               00 
   1 InitCoroutine    4   11    2               00 
  11 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
  12 OpenWrite        1    2    2 2             00 root=2 iDb=2; 
  13 OpenWrite        2    3    2 k(2,,)        00 root=3 iDb=2; sqlite_autoindex__1
  14 Yield            4   27    0               00 
REG[4] =  i:1
REG[4] =  i:14
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; 
   3 Explain          0    0    0 SCAN TABLE    00 
   4 Rewind           0    9    0               00 
   9 Close            0    0    0               00 
  10 EndCoroutine     4    0    0               00 
REG[4] =  i:14
  27 Close            1    0    0               00 
  28 Close            2    0    0               00 
  29 ResultRow        5    1    0               00 output=r[5]
REG[5] =  i:0
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t1](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[t1](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:4
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:4
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[t1](8)
  13 Function         0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s2[t1](8)
REG[11] =   z4['t1'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z4['t1'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s26[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s26[INSERT INTO vac](8)
REG[8] =   s46[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[t1](8)
  17 Function         0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s2[t1](8)
REG[9] =   z4['t1'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z4['t1'](8)
REG[8] =   s46[INSERT INTO vac](8)
REG[5] =   s50[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s50[INSERT INTO vac](8)
REG[7] =   s51[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s51[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'t1' SELECT * FROM main.'t1';]
VDBE Trace:
   0 Init             0   22    0               00 Start at 22
  22 Transaction      0    0    3 0             01 usesStmtJournal=0
  23 Transaction      2    1    3 0             01 usesStmtJournal=0
  24 TableLock        0    4    0 t1            00 iDb=0 root=4 write=0
  25 TableLock        2    4    1 t1            00 iDb=2 root=4 write=1
  26 Goto             0    1    0               00 
   1 InitCoroutine    4   11    2               00 
  11 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
  12 OpenWrite        1    4    2 2             00 root=4 iDb=2; t1
  13 Yield            4   19    0               00 
REG[4] =  i:1
REG[4] =  i:13
   2 OpenRead         0    4    0 2             00 root=4 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0    9    0               00 
   9 Close            0    0    0               00 
  10 EndCoroutine     4    0    0               00 
REG[4] =  i:13
  19 Close            1    0    0               00 
  20 ResultRow        5    1    0               00 output=r[5]
REG[5] =  i:0
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s7[numbers](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s7[numbers](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:5
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:5
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:5
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s7[numbers](8)
  13 Function         0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s7[numbers](8)
REG[11] =   z9['numbers'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z9['numbers'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s31[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s31[INSERT INTO vac](8)
REG[8] =   s51[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s7[numbers](8)
  17 Function         0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s7[numbers](8)
REG[9] =   z9['numbers'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z9['numbers'](8)
REG[8] =   s51[INSERT INTO vac](8)
REG[5] =   s60[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s60[INSERT INTO vac](8)
REG[7] =   s61[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s61[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'numbers' SELECT * FROM main.'numbers';]
VDBE Trace:
   0 Init             0   35    0               00 Start at 35
  35 Transaction      0    0    3 0             01 usesStmtJournal=1
  36 Transaction      2    1    3 0             01 usesStmtJournal=1
  37 TableLock        0    5    0 numbers       00 iDb=0 root=5 write=0
  38 TableLock        2    5    1 numbers       00 iDb=2 root=5 write=1
  39 TableLock        2    6    1 sqlite_sequence 00 iDb=2 root=6 write=1
  40 OpenRead         0    6    2 2             00 root=6 iDb=2; sqlite_sequence
  41 String8          0    1    0 numbers       00 r[1]='numbers'
REG[1] =   t7[numbers](8)
  42 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  43 Rewind           0   51    0               00 
  51 Close            0    0    0               00 
  52 Goto             0    1    0               00 
   1 InitCoroutine    7   11    2               00 
  11 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  12 OpenWrite        1    5    2 2             00 root=5 iDb=2; numbers
  13 Yield            7   26    0               00 
REG[7] =  i:1
REG[7] =  i:13
   2 OpenRead         0    5    0 2             00 root=5 iDb=0; numbers
   3 Explain          0    0    0 SCAN TABLE numbers 00 
   4 Rewind           0    9    0               00 
   9 Close            0    0    0               00 
  10 EndCoroutine     7    0    0               00 
REG[7] =  i:13
  26 Close            1    0    0               00 
  27 OpenWrite        0    6    2 2             00 root=6 iDb=2; sqlite_sequence
  28 NotNull          3   30    0               00 if r[3]!=NULL goto 30
REG[3] =  NULL
  29 NewRowid         0    3    0               00 r[3]=rowid
REG[3] =  i:1
  30 MakeRecord       1    2   10               00 r[10]=mkrec(r[1..2])
REG[10] =  s10[031B006E756D62657273...numbers](8)
  31 Insert           0   10    3               08 intkey=r[3] data=r[10]
REG[10] =  s10[031B006E756D62657273...numbers](8)
REG[3] =  i:1
  32 Close            0    0    0               00 
  33 ResultRow        8    1    0               00 output=r[8]
REG[8] =  i:0
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s15[sqlite_sequence](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s15[sqlite_sequence](8)
  21 Next             0    4    0               01 
  22 Close            0    0    0               00 
  23 Halt             0    0    0               00 
SQL: [SELECT 'DELETE FROM vacuum_db.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name='sqlite_sequence' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      2    0    3 0             01 usesStmtJournal=0
  15 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  16 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  17 String8          0    5    0 DELETE FROM vacuum_db. 00 r[5]='DELETE FROM vacuum_db.'
REG[5] =   t22[DELETE FROM vac](8)
  18 String8          0    8    0 ;             00 r[8]=';'
REG[8] =   t1[;](8)
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s0[](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s0[](8)
  11 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s19[sqlite_autoinde](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s19[sqlite_autoinde](8)
  11 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  11 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[numbers](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s7[numbers](8)
  11 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s15[sqlite_sequence](8)
   6 Copy             1    7    0               00 r[7]=r[1]
REG[7] =   s15[sqlite_sequence](8)
   7 Function0        0    7    6 quote(1)      01 r[6]=func(r[7])
REG[7] =   s15[sqlite_sequence](8)
REG[6] =   z17['sqlite_sequenc](8)
   8 Concat           6    5    4               00 r[4]=r[5]+r[6]
REG[6] =   z17['sqlite_sequenc](8)
REG[5] =   t22[DELETE FROM vac](8)
REG[4] =   s39[DELETE FROM vac](8)
   9 Concat           8    4    3               00 r[3]=r[4]+r[8]
REG[8] =   t1[;](8)
REG[4] =   s39[DELETE FROM vac](8)
REG[3] =   s40[DELETE FROM vac](8)
  10 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s40[DELETE FROM vac](8)
SQL: [DELETE FROM vacuum_db.'sqlite_sequence';]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 Transaction      2    1    3 0             01 usesStmtJournal=0
   6 TableLock        2    6    1 sqlite_sequence 00 iDb=2 root=6 write=1
   7 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 Clear            6    2    1 sqlite_sequence 00 
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name=='sqlite_sequence';]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      2    0    3 0             01 usesStmtJournal=0
  19 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  20 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  21 String8          0    7    0 INSERT INTO vacuum_db. 00 r[7]='INSERT INTO vacuum_db.'
REG[7] =   t22[INSERT INTO vac](8)
  22 String8          0   10    0  SELECT * FROM main. 00 r[10]=' SELECT * FROM main.'
REG[10] =   t20[ SELECT * FROM ](8)
  23 String8          0   11    0 ;             00 r[11]=';'
REG[11] =   t1[;](8)
  24 Goto             0    1    0               00 
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   16    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s0[](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s0[](8)
  15 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s19[sqlite_autoinde](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s19[sqlite_autoinde](8)
  15 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  15 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[numbers](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s7[numbers](8)
  15 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s15[sqlite_sequence](8)
   6 Copy             1    9    0               00 r[9]=r[1]
REG[9] =   s15[sqlite_sequence](8)
   7 Function0        0    9    8 quote(1)      01 r[8]=func(r[9])
REG[9] =   s15[sqlite_sequence](8)
REG[8] =   z17['sqlite_sequenc](8)
   8 Concat           8    7    6               00 r[6]=r[7]+r[8]
REG[8] =   z17['sqlite_sequenc](8)
REG[7] =   t22[INSERT INTO vac](8)
REG[6] =   s39[INSERT INTO vac](8)
   9 Concat          10    6    5               00 r[5]=r[6]+r[10]
REG[10] =   t20[ SELECT * FROM ](8)
REG[6] =   s39[INSERT INTO vac](8)
REG[5] =   s59[INSERT INTO vac](8)
  10 Copy             1    9    0               00 r[9]=r[1]
REG[9] =   s15[sqlite_sequence](8)
  11 Function0        0    9    6 quote(1)      01 r[6]=func(r[9])
REG[9] =   s15[sqlite_sequence](8)
REG[6] =   z17['sqlite_sequenc](8)
  12 Concat           6    5    4               00 r[4]=r[5]+r[6]
REG[6] =   z17['sqlite_sequenc](8)
REG[5] =   s59[INSERT INTO vac](8)
REG[4] =   s76[INSERT INTO vac](8)
  13 Concat          11    4    3               00 r[3]=r[4]+r[11]
REG[11] =   t1[;](8)
REG[4] =   s76[INSERT INTO vac](8)
REG[3] =   s77[INSERT INTO vac](8)
  14 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s77[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'sqlite_sequence' SELECT * FROM main.'sqlite_sequence';]
VDBE Trace:
   0 Init             0   22    0               00 Start at 22
  22 Transaction      0    0    3 0             01 usesStmtJournal=0
  23 Transaction      2    1    3 0             01 usesStmtJournal=0
  24 TableLock        0    6    0 sqlite_sequence 00 iDb=0 root=6 write=0
  25 TableLock        2    6    1 sqlite_sequence 00 iDb=2 root=6 write=1
  26 Goto             0    1    0               00 
   1 InitCoroutine    4   11    2               00 
  11 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
  12 OpenWrite        1    6    2 2             00 root=6 iDb=2; sqlite_sequence
  13 Yield            4   19    0               00 
REG[4] =  i:1
REG[4] =  i:13
   2 OpenRead         0    6    0 2             00 root=6 iDb=0; sqlite_sequence
   3 Explain          0    0    0 SCAN TABLE sqlite_sequence 00 
   4 Rewind           0    9    0               00 
   9 Close            0    0    0               00 
  10 EndCoroutine     4    0    0               00 
REG[4] =  i:13
  19 Close            1    0    0               00 
  20 ResultRow        5    1    0               00 output=r[5]
REG[5] =  i:0
  15 Next             0    4    0               01 
  16 Close            0    0    0               00 
  17 Halt             0    0    0               00 
SQL: [INSERT INTO vacuum_db.sqlite_master   SELECT type, name, tbl_name, rootpage, sql    FROM main.sqlite_master   WHERE type='view' OR type='trigger'      OR (type='table' AND rootpage=0)]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    0    3 0             01 usesStmtJournal=0
  32 Transaction      2    1    3 0             01 usesStmtJournal=0
  33 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  34 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  35 String8          0    9    0 view          00 r[9]='view'
REG[9] =   t4[view](8)
  36 String8          0   11    0 trigger       00 r[11]='trigger'
REG[11] =   t7[trigger](8)
  37 String8          0   12    0 table         00 r[12]='table'
REG[12] =   t5[table](8)
  38 Integer          0   13    0               00 r[13]=0
REG[13] =  i:0
  39 Goto             0    1    0               00 
   1 InitCoroutine    7   20    2               00 
  20 Integer          0   14    0               00 r[14]=0
REG[14] =  i:0
  21 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  22 Yield            7   28    0               00 
REG[7] =  i:1
REG[7] =  i:22
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   18    0               00 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[table](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[table](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[table](8)
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
REG[10] =  i:2
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
REG[13] =  i:0
REG[10] =  i:2
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[index](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[index](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[index](8)
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[table](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[table](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[table](8)
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
REG[10] =  i:4
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
REG[13] =  i:0
REG[10] =  i:4
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[table](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[table](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[table](8)
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
REG[10] =  i:5
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
REG[13] =  i:0
REG[10] =  i:5
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[table](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[table](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[table](8)
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
REG[10] =  i:6
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
REG[13] =  i:0
REG[10] =  i:6
  17 Next             0    5    0               01 
  18 Close            0    0    0               00 
  19 EndCoroutine     7    0    0               00 
REG[7] =  i:22
  28 Close            1    0    0               00 
  29 ResultRow       14    1    0               00 output=r[14]
REG[14] =  i:0
   2 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    4 1             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s0[](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE ""](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s0[](8)
REG[2] =  i:2
REG[3] =   s39[CREATE TABLE ""](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s19[sqlite_autoinde](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s19[sqlite_autoinde](8)
REG[2] =  i:3
REG[3] =  NULL
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s21[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:4
REG[3] =   s21[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[numbers](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s60[CREATE TABLE nu](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s7[numbers](8)
REG[2] =  i:5
REG[3] =   s60[CREATE TABLE nu](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:6
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s38[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s15[sqlite_sequence](8)
REG[2] =  i:6
REG[3] =   s38[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [SELECT a FROM t1 WHERE LIKE('10%',a) ORDER BY a;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    0    4 1             01 usesStmtJournal=0
  22 TableLock        0    4    0 t1            00 iDb=0 root=4 write=0
  23 String8          0    2    0 10%           00 r[2]='10%'
REG[2] =   t3[10%](8)
  24 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0    4    0 1             00 root=4 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0   13    0               00 
  13 Close            0    0    0               00 
  14 OpenPseudo       2    7    3               00 3 columns in r[7]
  15 SorterSort       1   20    0               00 
  20 Halt             0    0    0               00 
SQL: [;
ANALYZE;]
VDBE Trace:
   0 Init             0   74    0               00 Start at 74
  74 Transaction      0    1    4 1             01 usesStmtJournal=0
  75 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  76 TableLock        0    5    0 numbers       00 iDb=0 root=5 write=0
  77 TableLock        0    4    0 t1            00 iDb=0 root=4 write=0
  78 TableLock        0    2    0               00 iDb=0 root=2 write=0
  79 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:7
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:6
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        3    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:6
  16 NotExists        3   18    1               00 intkey=r[1]; pk
REG[1] =  i:6
  17 Rowid            3    5    0               00 r[5]=rowid
REG[5] =  i:6
  18 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  19 IsNull           5   28    0               00 if r[5]==NULL goto 28
REG[5] =  i:6
  20 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  21 String8          0    7    0 sqlite_stat1  00 r[7]='sqlite_stat1'
REG[7] =   t12[sqlite_stat1](8)
  22 String8          0    8    0 sqlite_stat1  00 r[8]='sqlite_stat1'
REG[8] =   t12[sqlite_stat1](8)
  23 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:7
  24 String8          0   10    0 CREATE TABLE sqlite_stat1(tbl,idx,stat) 00 r[10]='CREATE TABLE sqlite_stat1(tbl,idx,stat)'
REG[10] =   t39[CREATE TABLE sq](8)
  25 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit](8)
  26 Insert           3   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit](8)
REG[5] =  i:6
  27 AddImm          12    1    0               00 r[12]=r[12]+1
REG[12] =  i:0
  28 Close            3    0    0               00 
  29 SetCookie        0    1    5               00 
  30 ParseSchema      0    0    0 tbl_name='sqlite_stat1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    5 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 sqlite_stat1  00 r[2]='sqlite_stat1'
REG[2] =   t12[sqlite_stat1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s12[sqlite_stat1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s12[sqlite_stat1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:7
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s39[CREATE TABLE sq](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s12[sqlite_stat1](8)
REG[6] =  i:7
REG[7] =   s39[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  31 OpenWrite        0    2    0 3             10 root=2 iDb=0; sqlite_stat1
  32 OpenRead         4    5    0 2             00 root=5 iDb=0; numbers
  33 String8          0   17    0 numbers       00 r[17]='numbers'; numbers
REG[17] =   t7[numbers](8)
  34 Count            4   19    0               00 r[19]=count()
REG[19] =  i:0
  35 IfNot           19   40    0               00 
REG[19] =  i:0
  40 OpenRead         4    4    0 2             00 root=4 iDb=0; t1
  41 String8          0   17    0 t1            00 r[17]='t1'; t1
REG[17] =   t2[t1](8)
  42 Count            4   19    0               00 r[19]=count()
REG[19] =  i:0
  43 IfNot           19   48    0               00 
REG[19] =  i:0
  48 OpenRead         4    2    0 2             00 root=2 iDb=0; 
  49 String8          0   17    0               00 r[17]=''
REG[17] =   t0[](8)
  50 String8          0   18    0 sqlite_autoindex__1 00 r[18]='sqlite_autoindex__1'; Analysis for .sqlite_autoindex__1
REG[18] =   t19[sqlite_autoinde](8)
  51 OpenRead         5    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex__1
  52 Integer          2   15    0               00 r[15]=2
REG[15] =  i:2
  53 Integer          1   16    0               00 r[16]=1
REG[16] =  i:1
  54 Function0        0   15   14 stat_init(2)  02 r[14]=func(r[15..16])
REG[15] =  i:2
REG[16] =  i:1
REG[14] =  z88[00000000000000000200000001000000................](8)
  55 Rewind           5   71    0               00 
  71 LoadAnalysis     0    0    0               00 
SQL: [SELECT tbl,idx,stat FROM 'main'.sqlite_stat1]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    5 1             01 usesStmtJournal=0
  12 TableLock        0    7    0 sqlite_stat1  00 iDb=0 root=7 write=0
  13 Goto             0    1    0               00 
   1 OpenRead         0    7    0 3             00 root=7 iDb=0; sqlite_stat1
   2 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
  72 Expire           0    0    0               00 
  73 Halt             0    0    0               00 
SQL: [SELECT b FROM t1 WHERE b = abs(+-2) ORDER BY b;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    5 1             01 usesStmtJournal=0
  13 TableLock        0    4    0 t1            00 iDb=0 root=4 write=0
  14 Integer         -2    4    0               00 r[4]=-2
REG[4] =  i:-2
  15 Function0        1    4    2 abs(1)        01 r[2]=func(r[4])
REG[4] =  i:-2
REG[2] =  i:2
  16 Goto             0    1    0               00 
   1 Noop             1    3    0               00 
   2 OpenRead         0    4    0 2             00 root=4 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [SELECT b FROM t1 WHERE b = abs(-2.0) ORDER BY b;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    5 1             01 usesStmtJournal=0
  13 TableLock        0    4    0 t1            00 iDb=0 root=4 write=0
  14 Real             0    4    0 -2            00 r[4]=-2
REG[4] =  r:-2
  15 Function0        1    4    2 abs(1)        01 r[2]=func(r[4])
REG[4] =  r:-2
REG[2] =  r:2
  16 Goto             0    1    0               00 
   1 Noop             1    3    0               00 
   2 OpenRead         0    4    0 2             00 root=4 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [SELECT typeof( ( SELECT a FROM t1 ORDER BY a DESC ) ),  ( SELECT a FROM t1 ORDER BY a DESC ) ;]
VDBE Trace:
   0 Init             0   50    0               00 Start at 50
  50 Transaction      0    0    5 1             01 usesStmtJournal=0
  51 TableLock        0    4    0 t1            00 iDb=0 root=4 write=0
  52 Goto             0    1    0               00 
   1 Once             0   23    0               00 
   2 Null             0    4    0               00 r[4]=NULL; Init subquery result
REG[4] =  NULL
   3 OpenEphemeral    2    3    0 k(1,-B)       00 nColumn=3
   4 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   5 OpenRead         0    4    0 1             00 root=4 iDb=0; t1
   6 Explain          1    0    0 SCAN TABLE t1 00 
   7 Rewind           0   18    0               00 
  18 Close            0    0    0               00 
  19 Sort             2   23    0               00 
  23 Copy             4    3    0               00 r[3]=r[4]
REG[3] =  NULL
  24 Function0        0    3    1 typeof(1)     01 r[1]=func(r[3])
REG[3] =  NULL
REG[1] =   t4[null](8)
  25 Once             1   47    0               00 
  26 Null             0   12    0               00 r[12]=NULL; Init subquery result
REG[12] =  NULL
  27 OpenEphemeral    3    3    0 k(1,-B)       00 nColumn=3
  28 Integer          1   13    0               00 r[13]=1; LIMIT counter
REG[13] =  i:1
  29 OpenRead         1    4    0 1             00 root=4 iDb=0; t1
  30 Explain          2    0    0 SCAN TABLE t1 00 
  31 Rewind           1   42    0               00 
  42 Close            1    0    0               00 
  43 Sort             3   47    0               00 
  47 Copy            12    2    0               00 r[2]=r[12]
REG[2] =  NULL
  48 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =   t4[null](8)
REG[2] =  NULL
  49 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='numbers' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    5 1             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 numbers       00 r[2]='numbers'
REG[2] =   t7[numbers](8)
  17 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t7[numbers](8)
REG[1] =   s0[](8)
  11 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t7[numbers](8)
REG[1] =   s0[](8)
  11 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t7[numbers](8)
REG[1] =   s2[t1](8)
  11 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[numbers](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t7[numbers](8)
REG[1] =   s7[numbers](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s7[numbers](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:5
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s60[CREATE TABLE nu](8)
  10 ResultRow        3    3    0               00 output=r[3..5]
REG[3] =   s7[numbers](8)
REG[4] =  i:5
REG[5] =   s60[CREATE TABLE nu](8)
  11 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t7[numbers](8)
REG[1] =   s15[sqlite_sequence](8)
  11 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t7[numbers](8)
REG[1] =   s12[sqlite_stat1](8)
  11 Next             0    5    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'abc' LIKE 'abc' ESCAPE 'ab';]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 String8          0    2    0 abc           00 r[2]='abc'
REG[2] =   t3[abc](8)
   5 String8          0    3    0 abc           00 r[3]='abc'
REG[3] =   t3[abc](8)
   6 String8          0    4    0 ab            00 r[4]='ab'
REG[4] =   t2[ab](8)
   7 Goto             0    1    0               00 
   1 Function0        7    2    1 like(3)       03 r[1]=func(r[2..4])
REG[2] =   t3[abc](8)
REG[3] =   t3[abc](8)
REG[4] =   t2[ab](8)
SQL: [SELECT typeof(+9223372036854775807);]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 Int64            0    2    0 9223372036854775807 00 r[2]=9223372036854775807
REG[2] =  i:9223372036854775807
   5 Goto             0    1    0               00 
   1 Function0        1    2    1 typeof(1)     01 r[1]=func(r[2])
REG[2] =  i:9223372036854775807
REG[1] =   t7[integer](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t7[integer](8)
   3 Halt             0    0    0               00 
SQL: [SELECT typeof(+000000009223372036854775807);]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 Int64            0    2    0 9223372036854775807 00 r[2]=9223372036854775807
REG[2] =  i:9223372036854775807
   5 Goto             0    1    0               00 
   1 Function0        1    2    1 typeof(1)     01 r[1]=func(r[2])
REG[2] =  i:9223372036854775807
REG[1] =   t7[integer](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t7[integer](8)
   3 Halt             0    0    0               00 
SQL: [SELECT typeof(9223372036854775808);]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 Real             0    2    0 9.223372036854776e+18 00 r[2]=9.223372036854776e+18
REG[2] =  r:9.22337e+18
   5 Goto             0    1    0               00 
   1 Function0        1    2    1 typeof(1)     01 r[1]=func(r[2])
REG[2] =  r:9.22337e+18
REG[1] =   t4[real](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t4[real](8)
   3 Halt             0    0    0               00 
SQL: [SELECT typeof(00000009223372036854775808);]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 Real             0    2    0 9.223372036854776e+18 00 r[2]=9.223372036854776e+18
REG[2] =  r:9.22337e+18
   5 Goto             0    1    0               00 
   1 Function0        1    2    1 typeof(1)     01 r[1]=func(r[2])
REG[2] =  r:9.22337e+18
REG[1] =   t4[real](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t4[real](8)
   3 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_10;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_10         00 
   2 Halt             0    0    0               00 
SQL: [SELECT typeof(+9223372036854775808);]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 Real             0    2    0 9.223372036854776e+18 00 r[2]=9.223372036854776e+18
REG[2] =  r:9.22337e+18
   5 Goto             0    1    0               00 
   1 Function0        1    2    1 typeof(1)     01 r[1]=func(r[2])
REG[2] =  r:9.22337e+18
REG[1] =   t4[real](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t4[real](8)
   3 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_68;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_68         00 
   2 Halt             0    0    0               00 
SQL: [SELECT typeof(+0000009223372036854775808);]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 Real             0    2    0 9.223372036854776e+18 00 r[2]=9.223372036854776e+18
REG[2] =  r:9.22337e+18
   5 Goto             0    1    0               00 
   1 Function0        1    2    1 typeof(1)     01 r[1]=func(r[2])
REG[2] =  r:9.22337e+18
REG[1] =   t4[real](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t4[real](8)
   3 Halt             0    0    0               00 
SQL: [;
SELECT 4|2 FROM numbers;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    5 1             01 usesStmtJournal=0
  10 TableLock        0    5    0 numbers       00 iDb=0 root=5 write=0
  11 Integer          4    2    0               00 r[2]=4
REG[2] =  i:4
  12 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  13 Goto             0    1    0               00 
   1 OpenRead         0    5    0 0             00 root=5 iDb=0; numbers
   2 Explain          0    0    0 SCAN TABLE numbers 00 
   3 Rewind           0    7    0               00 
   7 Close            0    0    0               00 
   8 Halt             0    0    0               00 
SQL: [CREATE TABLE t2(t3, t4, t5 DEFAULT 'xyz');]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      0    1    5 1             01 usesStmtJournal=0
  33 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  34 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:8
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:7
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:7
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:7
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:7
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:7
  18 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  19 IsNull           5   28    0               00 if r[5]==NULL goto 28
REG[5] =  i:7
  20 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  21 String8          0    7    0 t2            00 r[7]='t2'
REG[7] =   t2[t2](8)
  22 String8          0    8    0 t2            00 r[8]='t2'
REG[8] =   t2[t2](8)
  23 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:8
  24 String8          0   10    0 CREATE TABLE t2(t3, t4, t5 DEFAULT 'xyz') 00 r[10]='CREATE TABLE t2(t3, t4, t5 DEFAULT 'xyz')'
REG[10] =   t41[CREATE TABLE t2](8)
  25 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s57[06171111015F7461626C657432743208....._tablet2t2.](8)
  26 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s57[06171111015F7461626C657432743208....._tablet2t2.](8)
REG[5] =  i:7
  27 AddImm          12    1    0               00 r[12]=r[12]+1
REG[12] =  i:0
  28 Close            1    0    0               00 
  29 SetCookie        0    1    6               00 
  30 ParseSchema      0    0    0 tbl_name='t2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t2            00 r[2]='t2'
REG[2] =   t2[t2](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t2](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t2](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:8
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s41[CREATE TABLE t2](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t2](8)
REG[6] =  i:8
REG[7] =   s41[CREATE TABLE t2](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  31 Halt             0    0    0               00 
SQL: [;
SELECT '' <= "";]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 String8          0    2    0               00 r[2]=''
REG[2] =   t0[](8)
   5 Goto             0    1    0               00 
   1 Le               2    1    2               61 if r[2]<=r[2] goto 1
REG[2] =   t0[](8)
REG[2] =   t0[](8)
REG[1] =  i:1
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   3 Halt             0    0    0               00 
SQL: [SELECT abs(x), x FROM numbers
    INTERSECT
    SELECT x, x FROM numbers
    ORDER BY 1
  ;]
VDBE Trace:
   0 Init             0   56    0               00 Start at 56
  56 Transaction      0    0    6 1             01 usesStmtJournal=0
  57 TableLock        0    5    0 numbers       00 iDb=0 root=5 write=0
  58 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 InitCoroutine    4   24    3               00 left SELECT
  24 InitCoroutine    5   50   25               00 right SELECT
  50 Yield            4   55    0               00 
REG[4] =  i:2
REG[4] =  i:50
   3 SorterOpen       2    5    0 k(2,B,B)      00 
   4 OpenRead         1    5    0 0             00 root=5 iDb=0; numbers
   5 Explain          1    0    0 SCAN TABLE numbers 00 
   6 Rewind           1   15    0               00 
  15 Close            1    0    0               00 
  16 OpenPseudo       3   14    5               00 5 columns in r[14]
  17 SorterSort       2   23    0               00 
  23 EndCoroutine     4    0    0               00 
REG[4] =  i:50
  55 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    6 1             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s0[](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE ""](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s0[](8)
REG[2] =  i:2
REG[3] =   s39[CREATE TABLE ""](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s19[sqlite_autoinde](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s19[sqlite_autoinde](8)
REG[2] =  i:3
REG[3] =  NULL
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s21[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:4
REG[3] =   s21[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[numbers](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s60[CREATE TABLE nu](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s7[numbers](8)
REG[2] =  i:5
REG[3] =   s60[CREATE TABLE nu](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:6
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s38[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s15[sqlite_sequence](8)
REG[2] =  i:6
REG[3] =   s38[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:7
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s12[sqlite_stat1](8)
REG[2] =  i:7
REG[3] =   s39[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:8
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s41[CREATE TABLE t2](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t2](8)
REG[2] =  i:8
REG[3] =   s41[CREATE TABLE t2](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
PRAGMA writable_schema=OFF;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='t1x0' AND type='index' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1x0          00 r[2]='t1x0'
REG[2] =   t4[t1x0](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t1x0](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s19[sqlite_autoinde](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t1x0](8)
REG[1] =   s19[sqlite_autoinde](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t1x0](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t1x0](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t1x0](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t1x0](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t1x0](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [INSERT INTO numbers VALUES(1, zeroblob(1024*900)) ;]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    1    6 1             01 usesStmtJournal=0
  25 TableLock        0    5    1 numbers       00 iDb=0 root=5 write=1
  26 TableLock        0    6    1 sqlite_sequence 00 iDb=0 root=6 write=1
  27 OpenRead         0    6    0 2             00 root=6 iDb=0; sqlite_sequence
  28 String8          0    1    0 numbers       00 r[1]='numbers'
REG[1] =   t7[numbers](8)
  29 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  30 Rewind           0   38    0               00 
  38 Close            0    0    0               00 
  39 Integer       1024   10    0               00 r[10]=1024
REG[10] =  i:1024
  40 Integer        900   11    0               00 r[11]=900
REG[11] =  i:900
  41 Multiply        11   10    8               00 r[8]=r[11]*r[10]
REG[11] =  i:900
REG[10] =  i:1024
REG[8] =  i:921600
  42 Goto             0    1    0               00 
   1 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
   2 OpenWrite        0    5    0 2             00 root=5 iDb=0; numbers
   3 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
   4 NotNull          4    6    0               00 if r[4]!=NULL goto 6
REG[4] =  i:1
   6 MustBeInt        4    0    0               00 
REG[4] =  i:1
   7 MemMax           2    4    0               00 r[2]=max(r[2],r[4])
REG[4] =  i:1
   8 SoftNull         5    0    0               00 r[5]=NULL
   9 Function0        1    8    6 zeroblob(1)   01 r[6]=func(r[8])
REG[8] =  i:921600
REG[6] =  s0[](8)+921600z
  10 NotExists        0   12    4               00 intkey=r[4]
REG[4] =  i:1
  12 MakeRecord       5    2    9 D             00 r[9]=mkrec(r[5..6])
REG[9] =  s5[0500F0C00C.....](8)+921600z
  13 Insert           0    9    4 numbers       13 intkey=r[4] data=r[9]
REG[9] =  s5[0500F0C00C.....](8)+921600z
REG[4] =  i:1
  14 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  15 Close            0    0    0               00 
  16 OpenWrite        0    6    0 2             00 root=6 iDb=0; sqlite_sequence
  17 NotNull          3   19    0               00 if r[3]!=NULL goto 19
REG[3] =  NULL
  18 NewRowid         0    3    0               00 r[3]=rowid
REG[3] =  i:1
  19 MakeRecord       1    2   10               00 r[10]=mkrec(r[1..2])
REG[10] =  s10[031B096E756D62657273...numbers](8)
  20 Insert           0   10    3               08 intkey=r[3] data=r[10]
REG[10] =  s10[031B096E756D62657273...numbers](8)
REG[3] =  i:1
  21 Close            0    0    0               00 
  22 ResultRow        7    1    0               00 output=r[7]
REG[7] =  i:1
  23 Halt             0    0    0               00 
SQL: [INSERT INTO numbers VALUES(2, zeroblob(1024*900)) ;]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    1    6 1             01 usesStmtJournal=0
  25 TableLock        0    5    1 numbers       00 iDb=0 root=5 write=1
  26 TableLock        0    6    1 sqlite_sequence 00 iDb=0 root=6 write=1
  27 OpenRead         0    6    0 2             00 root=6 iDb=0; sqlite_sequence
  28 String8          0    1    0 numbers       00 r[1]='numbers'
REG[1] =   t7[numbers](8)
  29 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  30 Rewind           0   38    0               00 
  31 Column           0    0    2               00 r[2]=
REG[2] =   s7[numbers](8)
  32 Ne               1   36    2               10 if r[1]!=r[2] goto 36
REG[1] =   t7[numbers](8)
REG[2] =   s7[numbers](8)
  33 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:1
  34 Column           0    1    2               00 r[2]=
REG[2] =  i:1
  35 Goto             0   38    0               00 
  38 Close            0    0    0               00 
  39 Integer       1024   10    0               00 r[10]=1024
REG[10] =  i:1024
  40 Integer        900   11    0               00 r[11]=900
REG[11] =  i:900
  41 Multiply        11   10    8               00 r[8]=r[11]*r[10]
REG[11] =  i:900
REG[10] =  i:1024
REG[8] =  i:921600
  42 Goto             0    1    0               00 
   1 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
   2 OpenWrite        0    5    0 2             00 root=5 iDb=0; numbers
   3 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
   4 NotNull          4    6    0               00 if r[4]!=NULL goto 6
REG[4] =  i:2
   6 MustBeInt        4    0    0               00 
REG[4] =  i:2
   7 MemMax           2    4    0               00 r[2]=max(r[2],r[4])
REG[4] =  i:2
   8 SoftNull         5    0    0               00 r[5]=NULL
   9 Function0        1    8    6 zeroblob(1)   01 r[6]=func(r[8])
REG[8] =  i:921600
REG[6] =  s0[](8)+921600z
  10 NotExists        0   12    4               00 intkey=r[4]
REG[4] =  i:2
  12 MakeRecord       5    2    9 D             00 r[9]=mkrec(r[5..6])
REG[9] =  s5[0500F0C00C.....](8)+921600z
  13 Insert           0    9    4 numbers       13 intkey=r[4] data=r[9]
REG[9] =  s5[0500F0C00C.....](8)+921600z
REG[4] =  i:2
  14 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  15 Close            0    0    0               00 
  16 OpenWrite        0    6    0 2             00 root=6 iDb=0; sqlite_sequence
  17 NotNull          3   19    0               00 if r[3]!=NULL goto 19
REG[3] =  i:1
  19 MakeRecord       1    2   10               00 r[10]=mkrec(r[1..2])
REG[10] =  s11[031B016E756D6265727302...numbers.](8)
  20 Insert           0   10    3               08 intkey=r[3] data=r[10]
REG[10] =  s11[031B016E756D6265727302...numbers.](8)
REG[3] =  i:1
  21 Close            0    0    0               00 
  22 ResultRow        7    1    0               00 output=r[7]
REG[7] =  i:1
  23 Halt             0    0    0               00 
SQL: [DELETE FROM t1 WHERE b = 2 ;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1    6 1             01 usesStmtJournal=0
  17 TableLock        0    4    1 t1            00 iDb=0 root=4 write=1
  18 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  19 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
   3 OpenWrite        0    4    0 2             00 root=4 iDb=0; t1
   4 Explain          0    0    0 SCAN TABLE t1 00 
   5 Rewind           0   13    0               00 
  13 Close            0    0    0               00 
  14 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  15 Halt             0    0    0               00 
SQL: [;
COMMIT ;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       1    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='t2x1' AND type='index' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t2x1          00 r[2]='t2x1'
REG[2] =   t4[t2x1](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2x1](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s19[sqlite_autoinde](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2x1](8)
REG[1] =   s19[sqlite_autoinde](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2x1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2x1](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2x1](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2x1](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2x1](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='t3x1' AND type='index' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t3x1          00 r[2]='t3x1'
REG[2] =   t4[t3x1](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t3x1](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s19[sqlite_autoinde](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t3x1](8)
REG[1] =   s19[sqlite_autoinde](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t3x1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t3x1](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t3x1](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t3x1](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t3x1](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
SELECT 5 not between b and b FROM t1;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    6 1             01 usesStmtJournal=0
  14 TableLock        0    4    0 t1            00 iDb=0 root=4 write=0
  15 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
  16 Goto             0    1    0               00 
   1 OpenRead         0    4    0 2             00 root=4 iDb=0; t1
   2 Explain          0    0    0 SCAN TABLE t1 00 
   3 Rewind           0   11    0               00 
  11 Close            0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;
SELECT a<<a FROM t1;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    6 1             01 usesStmtJournal=0
  11 TableLock        0    4    0 t1            00 iDb=0 root=4 write=0
  12 Goto             0    1    0               00 
   1 OpenRead         0    4    0 1             00 root=4 iDb=0; t1
   2 Explain          0    0    0 SCAN TABLE t1 00 
   3 Rewind           0    8    0               00 
   8 Close            0    0    0               00 
   9 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t2' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t2            00 r[2]='t2'
REG[2] =   t2[t2](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t2](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t2](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:8
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s41[CREATE TABLE t2](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t2](8)
REG[6] =  i:8
REG[7] =   s41[CREATE TABLE t2](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [DELETE FROM numbers ;]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 Transaction      0    1    6 1             01 usesStmtJournal=0
   6 TableLock        0    5    1 numbers       00 iDb=0 root=5 write=1
   7 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 Clear            5    0    1 numbers       00 
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:2
   4 Halt             0    0    0               00 
SQL: [INSERT INTO t1 VALUES(2, randomblob(35*1024));]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    1    6 1             01 usesStmtJournal=0
  13 TableLock        0    4    1 t1            00 iDb=0 root=4 write=1
  14 Integer         35    7    0               00 r[7]=35
REG[7] =  i:35
  15 Integer       1024    8    0               00 r[8]=1024
REG[8] =  i:1024
  16 Multiply         8    7    5               00 r[5]=r[8]*r[7]
REG[8] =  i:1024
REG[7] =  i:35
REG[5] =  i:35840
  17 Goto             0    1    0               00 
   1 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
   2 OpenWrite        0    4    0 2             00 root=4 iDb=0; t1
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   4 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
   5 Function0        1    5    3 randomblob(1) 01 r[3]=func(r[5])
REG[5] =  i:35840
REG[3] =  z35840[A81F3A3203C9ECD695CC1696305543E8..:2........0UC.](8)
   6 MakeRecord       2    2    6               00 r[6]=mkrec(r[2..3])
REG[6] =  s35846[050184B00C02A81F3A3203C9ECD695CC........:2......](8)
   7 Insert           0    6    1 t1            1B intkey=r[1] data=r[6]
REG[6] =  s35846[050184B00C02A81F3A3203C9ECD695CC........:2......](8)
REG[1] =  i:1
   8 AddImm           4    1    0               00 r[4]=r[4]+1
REG[4] =  i:0
   9 Close            0    0    0               00 
  10 ResultRow        4    1    0               00 output=r[4]
REG[4] =  i:1
  11 Halt             0    0    0               00 
SQL: [SELECT x FROM numbers WHERE x>19 OR x<1 ORDER BY x;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    6 1             01 usesStmtJournal=0
  14 TableLock        0    5    0 numbers       00 iDb=0 root=5 write=0
  15 Integer         19    2    0               00 r[2]=19
REG[2] =  i:19
  16 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  17 Goto             0    1    0               00 
   1 Noop             1    3    0               00 
   2 OpenRead         0    5    0 0             00 root=5 iDb=0; numbers
   3 Explain          0    0    0 SCAN TABLE numbers 00 
   4 Rewind           0   11    0               00 
  11 Close            0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t2' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t2            00 r[2]='t2'
REG[2] =   t2[t2](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t2](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t2](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:8
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s41[CREATE TABLE t2](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t2](8)
REG[6] =  i:8
REG[7] =   s41[CREATE TABLE t2](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
INSERT INTO numbers VALUES(3, randomblob(128));]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    1    6 1             01 usesStmtJournal=0
  25 TableLock        0    5    1 numbers       00 iDb=0 root=5 write=1
  26 TableLock        0    6    1 sqlite_sequence 00 iDb=0 root=6 write=1
  27 OpenRead         0    6    0 2             00 root=6 iDb=0; sqlite_sequence
  28 String8          0    1    0 numbers       00 r[1]='numbers'
REG[1] =   t7[numbers](8)
  29 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  30 Rewind           0   38    0               00 
  31 Column           0    0    2               00 r[2]=
REG[2] =   s7[numbers](8)
  32 Ne               1   36    2               10 if r[1]!=r[2] goto 36
REG[1] =   t7[numbers](8)
REG[2] =   s7[numbers](8)
  33 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:1
  34 Column           0    1    2               00 r[2]=
REG[2] =  i:2
  35 Goto             0   38    0               00 
  38 Close            0    0    0               00 
  39 Integer        128    8    0               00 r[8]=128
REG[8] =  i:128
  40 Goto             0    1    0               00 
   1 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
   2 OpenWrite        0    5    0 2             00 root=5 iDb=0; numbers
   3 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
   4 NotNull          4    6    0               00 if r[4]!=NULL goto 6
REG[4] =  i:3
   6 MustBeInt        4    0    0               00 
REG[4] =  i:3
   7 MemMax           2    4    0               00 r[2]=max(r[2],r[4])
REG[4] =  i:3
   8 SoftNull         5    0    0               00 r[5]=NULL
   9 Function0        1    8    6 randomblob(1) 01 r[6]=func(r[8])
REG[8] =  i:128
REG[6] =  z128[2421788296B5952AD088E72E06DF900A$!x....*........](8)
  10 NotExists        0   12    4               00 intkey=r[4]
REG[4] =  i:3
  12 MakeRecord       5    2    9 D             00 r[9]=mkrec(r[5..6])
REG[9] =  s132[0400820C2421788296B5952AD088E72E....$!x....*....](8)
  13 Insert           0    9    4 numbers       13 intkey=r[4] data=r[9]
REG[9] =  s132[0400820C2421788296B5952AD088E72E....$!x....*....](8)
REG[4] =  i:3
  14 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  15 Close            0    0    0               00 
  16 OpenWrite        0    6    0 2             00 root=6 iDb=0; sqlite_sequence
  17 NotNull          3   19    0               00 if r[3]!=NULL goto 19
REG[3] =  i:1
  19 MakeRecord       1    2   10               00 r[10]=mkrec(r[1..2])
REG[10] =  s11[031B016E756D6265727303...numbers.](8)
  20 Insert           0   10    3               08 intkey=r[3] data=r[10]
REG[10] =  s11[031B016E756D6265727303...numbers.](8)
REG[3] =  i:1
  21 Close            0    0    0               00 
  22 ResultRow        7    1    0               00 output=r[7]
REG[7] =  i:1
  23 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='"4' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 "4            00 r[2]='"4'
REG[2] =   t2["4](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2["4](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2["4](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2["4](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2["4](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2["4](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2["4](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2["4](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
SELECT name FROM sqlite_master WHERE sql LIKE '%collate%';]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    6 1             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 String8          0    2    0 %collate%     00 r[2]='%collate%'
REG[2] =   t9[%collate%](8)
  15 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   10    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE ""](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t9[%collate%](8)
REG[3] =   s39[CREATE TABLE ""](8)
REG[1] =  i:0
   6 IfNot            1    9    1               00 
REG[1] =  i:0
   9 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t9[%collate%](8)
REG[3] =  NULL
REG[1] =  NULL
   6 IfNot            1    9    1               00 
REG[1] =  NULL
   9 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s21[CREATE TABLE t1](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t9[%collate%](8)
REG[3] =   s21[CREATE TABLE t1](8)
REG[1] =  i:0
   6 IfNot            1    9    1               00 
REG[1] =  i:0
   9 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s60[CREATE TABLE nu](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t9[%collate%](8)
REG[3] =   s60[CREATE TABLE nu](8)
REG[1] =  i:0
   6 IfNot            1    9    1               00 
REG[1] =  i:0
   9 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s38[CREATE TABLE sq](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t9[%collate%](8)
REG[3] =   s38[CREATE TABLE sq](8)
REG[1] =  i:0
   6 IfNot            1    9    1               00 
REG[1] =  i:0
   9 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE sq](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t9[%collate%](8)
REG[3] =   s39[CREATE TABLE sq](8)
REG[1] =  i:0
   6 IfNot            1    9    1               00 
REG[1] =  i:0
   9 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s41[CREATE TABLE t2](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t9[%collate%](8)
REG[3] =   s41[CREATE TABLE t2](8)
REG[1] =  i:0
   6 IfNot            1    9    1               00 
REG[1] =  i:0
   9 Next             0    4    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
UPDATE t1 SET b='ABC', b='b[b-D]C';]
VDBE Trace:
   0 Init             0   22    0               00 Start at 22
  22 Transaction      0    1    6 1             01 usesStmtJournal=0
  23 TableLock        0    4    1 t1            00 iDb=0 root=4 write=1
  24 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    4    0 0             00 root=4 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
  10 OpenWrite        0    4    0 2             00 root=4 iDb=0; t1
  11 RowSetRead       1   19    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  12 NotExists        0   11    2               00 intkey=r[2]
REG[2] =  i:1
  13 Column           0    0    3               00 r[3]=t1.a
REG[3] =  i:2
  14 String8          0    4    0 b[b-D]C       00 r[4]='b[b-D]C'
REG[4] =   t7[b[b-D]C](8)
  15 MakeRecord       3    2    6               00 r[6]=mkrec(r[3..4])
REG[6] =  s11[03011B02625B622D445D43....b[b-D]C](8)
  16 Insert           0    6    2 t1            05 intkey=r[2] data=r[6]
REG[6] =  s11[03011B02625B622D445D43....b[b-D]C](8)
REG[2] =  i:1
  17 AddImm           5    1    0               00 r[5]=r[5]+1
REG[5] =  i:0
  18 Goto             0   11    0               00 
  11 RowSetRead       1   19    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  19 Close            0    0    0               00 
  20 ResultRow        5    1    0               00 output=r[5]
REG[5] =  i:1
  21 Halt             0    0    0               00 
SQL: [;
SELECT CASE WHEN b = b THEN 'eq' ELSE 'ne' END FROM t1;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    6 1             01 usesStmtJournal=0
  14 TableLock        0    4    0 t1            00 iDb=0 root=4 write=0
  15 Goto             0    1    0               00 
   1 OpenRead         0    4    0 2             00 root=4 iDb=0; t1
   2 Explain          0    0    0 SCAN TABLE t1 00 
   3 Rewind           0   11    0               00 
   4 Column           0    1    2               00 r[2]=t1.b
REG[2] =   s7[b[b-D]C](8)
   5 Ne               2    8    2 (BINARY)      51 if r[2]!=r[2] goto 8
REG[2] =   s7[b[b-D]C](8)
REG[2] =   s7[b[b-D]C](8)
   6 String8          0    1    0 eq            00 r[1]='eq'
REG[1] =   t2[eq](8)
   7 Goto             0    9    0               00 
   9 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t2[eq](8)
  10 Next             0    4    0               01 
  11 Close            0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [SELECT count(*) FROM t1 INNER JOIN t1 
;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    6 1             01 usesStmtJournal=0
  18 TableLock        0    4    0 t1            00 iDb=0 root=4 write=0
  19 Goto             0    1    0               00 
   1 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
   2 OpenRead         0    4    0 0             00 root=4 iDb=0; t1
   3 OpenRead         1    4    0 0             00 root=4 iDb=0; t1
   4 Explain          0    0    0 SCAN TABLE t1 00 
   5 Rewind           0   11    0               00 
   6 Explain          0    1    1 SCAN TABLE t1 00 
   7 Rewind           1   10    0               00 
   8 AggStep0         0    0    1 count(0)      00 accum=r[1] step(r[0])
   9 Next             1    8    0               01 
  10 Next             0    6    0               01 
  11 Close            0    0    0               00 
  12 Close            1    0    0               00 
  13 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  14 Copy             1    2    0               00 r[2]=r[1]
REG[2] =  i:1
  15 ResultRow        2    1    0               00 output=r[2]
REG[2] =  i:1
  16 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007ffbf277a859 in __GI_abort () at abort.c:79
#2  0x00007ffbf277a729 in __assert_fail_base (fmt=0x7ffbf2910588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x212bb5 "0", file=0x222c23 "sqlite3.c", line=125392, function=<optimized out>) at assert.c:92
#3  0x00007ffbf278bfd6 in __GI___assert_fail (assertion=0x212bb5 "0", file=0x222c23 "sqlite3.c", line=125392, function=0x2266f4 "int termIsEquivalence(Parse *, Expr *)") at assert.c:101
#4  0x0000000000398c39 in exprAnalyze (pSrc=<optimized out>, pWC=<optimized out>, idxTerm=<optimized out>) at sqlite3.c:125392
#5  0x000000000038c95f in sqlite3WhereBegin (pParse=<optimized out>, pTabList=<optimized out>, pWhere=<optimized out>, pOrderBy=<optimized out>, pDistinctSet=0x1520d90, wctrlFlags=0, iAuxArg=320) at sqlite3.c:125921
#6  0x0000000000328d02 in sqlite3Select (pParse=<optimized out>, p=<optimized out>, pDest=<optimized out>) at sqlite3.c:118028
#7  0x00000000003034ae in yy_reduce (yypParser=0x15a0410, yyruleno=<optimized out>) at sqlite3.c:133175
#8  0x00000000002fef8e in sqlite3Parser (yyp=0x15a0410, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#9  0x00000000002fc544 in sqlite3RunParser (pParse=0x150f2a0, 
    zSql=0x15a2840 "SELECT * FROM (SELECT x COLLATE nocase, x FROM numbers) AS x\n       CROSS JOIN numbers ON (x.x=numbers.x) ;PRAGMA database_list;SELECT x, x FROM numbers GROUP BY x%2;SELECT a, a FROM t1 GROUP BY a%2 H"..., pzErrMsg=0x7ffc74551148) at sqlite3.c:135186
#10 0x00000000002fac4e in sqlite3Prepare (db=0x150c850, 
    zSql=0x15104f2 "SELECT * FROM (SELECT x COLLATE nocase, x FROM numbers) AS x\n       CROSS JOIN numbers ON (x.x=numbers.x) ;PRAGMA database_list;SELECT x, x FROM numbers GROUP BY x%2;SELECT a, a FROM t1 GROUP BY a%2 H"..., nBytes=<optimized out>, saveSqlFlag=1, pReprepare=<optimized out>, ppStmt=0x7ffc74551278, pzTail=0x7ffc74551260) at sqlite3.c:112589
#11 0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0x150c850, 
    zSql=0x15104f2 "SELECT * FROM (SELECT x COLLATE nocase, x FROM numbers) AS x\n       CROSS JOIN numbers ON (x.x=numbers.x) ;PRAGMA database_list;SELECT x, x FROM numbers GROUP BY x%2;SELECT a, a FROM t1 GROUP BY a%2 H"..., nBytes=525, saveSqlFlag=1, pOld=0x0, ppStmt=<optimized out>, pzTail=0x7ffc74551260) at sqlite3.c:112688
#12 0x000000000028f38c in sqlite3_prepare_v2 (db=0x2, zSql=0x7ffc74550730 "", nBytes=0, ppStmt=0x7ffc74551278, pzTail=<optimized out>) at sqlite3.c:112764
#13 0x000000000024b100 in main (argc=1, argv=0x7ffc74551428) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 11843] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
