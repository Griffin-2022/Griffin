GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000339,sig:06,src:009445+009242,time:14980683,execs:1460833,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
PRAGMA writable_schema=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
CREATE TABLE t1(a INTEGER, b REAL, PRIMARY KEY(a AUTOINCREMENT));]
VDBE Trace:
   0 Init             0   58    0               00 Start at 58
  58 Transaction      0    1    0 0             01 usesStmtJournal=0
  59 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  60 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:1
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:1
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:1
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t1            00 r[7]='t1'
REG[7] =   t2[t1](8)
  21 String8          0    8    0 t1            00 r[8]='t1'
REG[8] =   t2[t1](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  23 String8          0   10    0 CREATE TABLE t1(a INTEGER, b REAL, PRIMARY KEY(a AUTOINCREMENT)) 00 r[10]='CREATE TABLE t1(a INTEGER, b REAL, PRIMARY KEY(a AUTOINCREMENT))'
REG[10] =   t64[CREATE TABLE t1](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s81[0717111101810D7461626C6574317431.......tablet1t1](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s81[0717111101810D7461626C6574317431.......tablet1t1](8)
REG[5] =  i:1
  26 Close            1    0    0               00 
  27 SetCookie        0    1    1               00 
  28 ReadCookie       0   14    2               00 
REG[14] =  i:4
  29 If              14   32    0               00 
REG[14] =  i:4
  32 CreateTable      0   13    0               00 r[13]=root iDb=0
REG[13] =  i:3
  33 OpenWrite        0    1    0 5             00 root=1 iDb=0
  34 NewRowid         0   12    0               00 r[12]=rowid
REG[12] =  i:2
  35 Blob             6   14    0              00 r[14]= (len=6)
REG[14] =  t6[060000000000......](8)
  36 Insert           0   14   12               08 intkey=r[12] data=r[14]
REG[14] =  t6[060000000000......](8)
REG[12] =  i:2
  37 Close            0    0    0               00 
  38 Close            0    0    0               00 
  39 Null             0   15   16               00 r[15..16]=NULL
REG[15] =  NULL
  40 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  41 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  42 MustBeInt       12   45    0               00 
REG[12] =  i:2
  43 NotExists        2   45   12               00 intkey=r[12]; pk
REG[12] =  i:2
  44 Rowid            2   16    0               00 r[16]=rowid
REG[16] =  i:2
  45 IsNull          16   53    0               00 if r[16]==NULL goto 53
REG[16] =  i:2
  46 String8          0   17    0 table         00 r[17]='table'
REG[17] =   t5[table](8)
  47 String8          0   18    0 sqlite_sequence 00 r[18]='sqlite_sequence'
REG[18] =   t15[sqlite_sequence](8)
  48 String8          0   19    0 sqlite_sequence 00 r[19]='sqlite_sequence'
REG[19] =   t15[sqlite_sequence](8)
  49 Copy            13   20    0               00 r[20]=r[13]
REG[20] =  i:3
  50 String8          0   21    0 CREATE TABLE sqlite_sequence(name,seq) 00 r[21]='CREATE TABLE sqlite_sequence(name,seq)'
REG[21] =   t38[CREATE TABLE sq](8)
  51 MakeRecord      17    5   22 BBBDB         00 r[22]=mkrec(r[17..21])
REG[22] =  s80[06172B2B01597461626C6573716C6974..++.Ytablesqlit](8)
  52 Insert           2   22   16               00 intkey=r[16] data=r[22]
REG[22] =  s80[06172B2B01597461626C6573716C6974..++.Ytablesqlit](8)
REG[16] =  i:2
  53 Close            2    0    0               00 
  54 SetCookie        0    1    1               00 
  55 ParseSchema      0    0    0 tbl_name='sqlite_sequence' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    1 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s15[sqlite_sequence](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s15[sqlite_sequence](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s38[CREATE TABLE sq](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s15[sqlite_sequence](8)
REG[6] =  i:3
REG[7] =   s38[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  56 ParseSchema      0    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    1 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s64[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:2
REG[7] =   s64[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  57 Halt             0    0    0               00 
SQL: [;
DELETE FROM t1;]
VDBE Trace:
   0 Init             0    3    0               00 Start at 3
   3 Transaction      0    1    1 0             01 usesStmtJournal=0
   4 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
   5 Goto             0    1    0               00 
   1 Clear            2    0   -1 t1            00 
   2 Halt             0    0    0               00 
SQL: [;
PRAGMA writable_schema=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [ATTACH 'test2.db' AS t2;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0 test2.db      00 r[1]='test2.db'
REG[1] =   t8[test2.db](8)
   2 String8          0    2    0 t2            00 r[2]='t2'
REG[2] =   t2[t2](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t8[test2.db](8)
REG[2] =   t2[t2](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      2    0  205 0             00 usesStmtJournal=0
  13 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s10[insert_log](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s36[CREATE TABLE in](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s10[insert_log](8)
REG[2] =  i:3
REG[3] =   s36[CREATE TABLE in](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[abc](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:9
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s25[CREATE TABLE ab](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s3[abc](8)
REG[2] =  i:9
REG[3] =   s25[CREATE TABLE ab](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[def](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:8
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s25[CREATE TABLE de](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s3[def](8)
REG[2] =  i:8
REG[3] =   s25[CREATE TABLE de](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s5[files](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:7
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s30[CREATE TABLE fi](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s5[files](8)
REG[2] =  i:7
REG[3] =   s30[CREATE TABLE fi](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[log](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s19[CREATE TABLE lo](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s3[log](8)
REG[2] =  i:5
REG[3] =   s19[CREATE TABLE lo](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[c05](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s19[CREATE TABLE c0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s3[c05](8)
REG[2] =  i:4
REG[3] =   s19[CREATE TABLE c0](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[<t1>](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:11
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s25[CREATE TABLE "<](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s4[<t1>](8)
REG[2] =  i:11
REG[3] =   s25[CREATE TABLE "<](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[.v.1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s68[.C.R.E.A.T.E. .](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s4[.v.1](8)
REG[2] =  i:0
REG[3] =   s68[.C.R.E.A.T.E. .](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[h](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:6
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s17[CREATE TABLE h(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[h](8)
REG[2] =  i:6
REG[3] =   s17[CREATE TABLE h(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:12
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s12[sqlite_stat1](8)
REG[2] =  i:12
REG[3] =   s39[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[d_lastmodifdate](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:10
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s31[CREATE TABLE d_](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s15[d_lastmodifdate](8)
REG[2] =  i:10
REG[3] =   s31[CREATE TABLE d_](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[e2](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s38[CREATE VIRTUAL ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[e2](8)
REG[2] =  i:0
REG[3] =   s38[CREATE VIRTUAL ](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[high](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:13
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s20[CREATE TABLE hi](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s4[high](8)
REG[2] =  i:13
REG[3] =   s20[CREATE TABLE hi](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[v.1.](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s68[C.R.E.A.T.E. .V](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s4[v.1.](8)
REG[2] =  i:0
REG[3] =   s68[C.R.E.A.T.E. .V](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s5[cross](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:14
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s21[CREATE TABLE cr](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s5[cross](8)
REG[2] =  i:14
REG[3] =   s21[CREATE TABLE cr](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[t20](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:15
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s61[CREATE TABLE "t](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s3[t20](8)
REG[2] =  i:15
REG[3] =   s61[CREATE TABLE "t](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [SELECT randomblob($pgsz);]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 Variable         1    2    0 $pgsz         00 r[2]=parameter(1,$pgsz)
REG[2] =  NULL
   5 Goto             0    1    0               00 
   1 Function0        1    2    1 randomblob(1) 01 r[1]=func(r[2])
REG[2] =  NULL
REG[1] =  z1[9E.](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  z1[9E.](8)
   3 Halt             0    0    0               00 
SQL: [;
COMMIT;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       1    0    0               00 
SQL: [SAVEPOINT sp_6;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_6          00 
   2 Halt             0    0    0               00 
SQL: [CREATE TABLE ""("" UNIQUE, x CHAR(100));]
VDBE Trace:
   0 Init             0   42    0               00 Start at 42
  42 Transaction      0    1    1 0             01 usesStmtJournal=0
  43 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  44 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Noop             0   23    0               00 
  12 CreateIndex      0    4    0               00 r[4]=root iDb=0
REG[4] =  i:5
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:4
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex__1 00 r[7]='sqlite_autoindex__1'
REG[7] =   t19[sqlite_autoinde](8)
  17 String8          0    8    0               00 r[8]=''
REG[8] =   t0[](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:5
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s31[0617330D0100696E64657873716C6974..3...indexsqlit](8)
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  s31[0617330D0100696E64657873716C6974..3...indexsqlit](8)
REG[5] =  i:4
  22 Close            1    0    0               00 
  23 Close            0    0    0               00 
  24 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  25 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  26 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  27 MustBeInt        1   30    0               00 
REG[1] =  i:3
  28 NotExists        2   30    1               00 intkey=r[1]; pk
REG[1] =  i:3
  29 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:3
  30 IsNull          13   38    0               00 if r[13]==NULL goto 38
REG[13] =  i:3
  31 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  32 String8          0   15    0               00 r[15]=''
REG[15] =   t0[](8)
  33 String8          0   16    0               00 r[16]=''
REG[16] =   t0[](8)
  34 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:4
  35 String8          0   18    0 CREATE TABLE ""("" UNIQUE, x CHAR(100)) 00 r[18]='CREATE TABLE ""("" UNIQUE, x CHAR(100))'
REG[18] =   t39[CREATE TABLE ""](8)
  36 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s51[06170D0D015B7461626C650443524541.....[table.CREA](8)
  37 Insert           2   19   13               00 intkey=r[13] data=r[19]
REG[19] =  s51[06170D0D015B7461626C650443524541.....[table.CREA](8)
REG[13] =  i:3
  38 Close            2    0    0               00 
  39 SetCookie        0    1    2               00 
  40 ParseSchema      0    0    0 tbl_name='' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0               00 r[2]=''
REG[2] =   t0[](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t0[](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t0[](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t0[](8)
REG[1] =   s0[](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s0[](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s39[CREATE TABLE ""](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s0[](8)
REG[6] =  i:4
REG[7] =   s39[CREATE TABLE ""](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t0[](8)
REG[1] =   s0[](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s19[sqlite_autoinde](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =  NULL
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s19[sqlite_autoinde](8)
REG[6] =  i:5
REG[7] =  NULL
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  41 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_10;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_10         00 
   2 Halt             0    0    0               00 
SQL: [SELECT typeof( 
  CAST(X'2D31313235383939393036383432363234' AS INTEGER) 
),  
  CAST(X'2D31313235383939393036383432363234' AS INTEGER) 
;]
VDBE Trace:
   0 Init             0    6    0               00 Start at 6
   6 Blob            17    3    0 -1125899906842624 00 r[3]=-1125899906842624 (len=17)
REG[3] =  t17[2D313132353839393930363834323632-112589990684262](8)
   7 Cast             3   68    0               00 affinity(r[3])
REG[3] =  t17[2D313132353839393930363834323632-112589990684262](8)
   8 Goto             0    1    0               00 
   1 Function0        1    3    1 typeof(1)     01 r[1]=func(r[3])
REG[3] =  i:-1125899906842624
REG[1] =   t7[integer](8)
   2 Blob            17    2    0 -1125899906842624 00 r[2]=-1125899906842624 (len=17)
REG[2] =  t17[2D313132353839393930363834323632-112589990684262](8)
   3 Cast             2   68    0               00 affinity(r[2])
REG[2] =  t17[2D313132353839393930363834323632-112589990684262](8)
   4 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =   t7[integer](8)
REG[2] =  i:-1125899906842624
   5 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_13;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_13         00 
   2 Halt             0    0    0               00 
SQL: [INSERT INTO ""("") VALUES(1);]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    1    2 0             01 usesStmtJournal=0
  18 TableLock        0    4    1               00 iDb=0 root=4 write=1
  19 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  20 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 2             00 root=4 iDb=0; 
   2 OpenWrite        1    5    0 k(2,,)        00 root=5 iDb=0; sqlite_autoindex__1
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   4 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   5 Affinity         2    2    0 AB            00 affinity(r[2..3])
   6 SCopy            2    5    0               00 r[5]=r[2]; 
REG[5] =  i:1
   7 IntCopy          1    6    0               00 r[6]=r[1]; rowid
REG[6] =  i:1
   8 MakeRecord       5    2    4               00 r[4]=mkrec(r[5..6]); for sqlite_autoindex__1
REG[4] =  s3[030909...](8)
   9 NoConflict       1   11    5 1             00 key=r[5]
REG[5] =  i:1
  11 IdxInsert        1    4    0               10 key=r[4]
REG[4] =  s3[030909...](8)
  12 MakeRecord       2    2    8               00 r[8]=mkrec(r[2..3])
REG[8] =  s3[030900...](8)
  13 Insert           0    8    1               1B intkey=r[1] data=r[8]
REG[8] =  s3[030900...](8)
REG[1] =  i:1
  14 Close            0    0    0               00 
  15 Noop             1    0    0               00 
  16 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_15;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_15         00 
   2 Halt             0    0    0               00 
SQL: [;
ATTACH 'test.db2' AS '123corp';]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0 test.db2      00 r[1]='test.db2'
REG[1] =   t8[test.db2](8)
   2 String8          0    2    0 123corp       00 r[2]='123corp'
REG[2] =   t7[123corp](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t8[test.db2](8)
REG[2] =   t7[123corp](8)
REG[3] =  NULL
SQL: [;
PRAGMA parser_trace=OFF;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_20;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_20         00 
   2 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_23;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_23         00 
   2 Halt             0    0    0               00 
SQL: [ATTACH 'test.db2' AS aux;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0 test.db2      00 r[1]='test.db2'
REG[1] =   t8[test.db2](8)
   2 String8          0    2    0 aux           00 r[2]='aux'
REG[2] =   t3[aux](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t8[test.db2](8)
REG[2] =   t3[aux](8)
REG[3] =  NULL
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s64[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:2
REG[7] =   s64[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [PRAGMA main.journal_size_limit = 20480 ;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Int64            0    1    0 20480         00 r[1]=20480
REG[1] =  i:20480
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:20480
   3 Halt             0    0    0               00 
SQL: [;
INSERT INTO t1 VALUES(16,5);]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    1    2 0             01 usesStmtJournal=0
  22 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  23 TableLock        0    3    1 sqlite_sequence 00 iDb=0 root=3 write=1
  24 OpenRead         0    3    0 2             00 root=3 iDb=0; sqlite_sequence
  25 String8          0    1    0 t1            00 r[1]='t1'
REG[1] =   t2[t1](8)
  26 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  27 Rewind           0   35    0               00 
  35 Close            0    0    0               00 
  36 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 Integer         16    4    0               00 r[4]=16
REG[4] =  i:16
   3 NotNull          4    5    0               00 if r[4]!=NULL goto 5
REG[4] =  i:16
   5 MustBeInt        4    0    0               00 
REG[4] =  i:16
   6 MemMax           2    4    0               00 r[2]=max(r[2],r[4])
REG[4] =  i:16
   7 SoftNull         5    0    0               00 r[5]=NULL
   8 Integer          5    6    0               00 r[6]=5
REG[6] =  i:5
   9 NotExists        0   11    4               00 intkey=r[4]
REG[4] =  i:16
  11 MakeRecord       5    2    7 DE            00 r[7]=mkrec(r[5..6])
REG[7] =  s4[03000105....](8)
  12 Insert           0    7    4 t1            13 intkey=r[4] data=r[7]
REG[7] =  s4[03000105....](8)
REG[4] =  i:16
  13 Close            0    0    0               00 
  14 OpenWrite        0    3    0 2             00 root=3 iDb=0; sqlite_sequence
  15 NotNull          3   17    0               00 if r[3]!=NULL goto 17
REG[3] =  NULL
  16 NewRowid         0    3    0               00 r[3]=rowid
REG[3] =  i:1
  17 MakeRecord       1    2    8               00 r[8]=mkrec(r[1..2])
REG[8] =  s6[031101743110...t1.](8)
  18 Insert           0    8    3               08 intkey=r[3] data=r[8]
REG[8] =  s6[031101743110...t1.](8)
REG[3] =  i:1
  19 Noop             0    0    0               00 
  20 Halt             0    0    0               00 
SQL: [PRAGMA page_size;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Int64            0    1    0 4096          00 r[1]=4096
REG[1] =  i:4096
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:4096
   3 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_30;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_30         00 
   2 Halt             0    0    0               00 
SQL: [;
PRAGMA temp.page_size;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Int64            0    1    0 4096          00 r[1]=4096
REG[1] =  i:4096
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:4096
   3 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s64[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:2
REG[7] =   s64[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_31;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_31         00 
   2 Halt             0    0    0               00 
SQL: [SELECT 1 IN ();]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   3 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_42;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_42         00 
   2 Halt             0    0    0               00 
SQL: [;
INSERT INTO sqlite_stat1(tbl,idx,stat) VALUES('t1',null,'1000');]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      2    1  205 0             01 usesStmtJournal=0
  11 TableLock        2   12    1 sqlite_stat1  00 iDb=2 root=12 write=1
  12 Goto             0    1    0               00 
   1 OpenWrite        0   12    2 3             00 root=12 iDb=2; sqlite_stat1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   3 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
   4 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   5 String8          0    4    0 1000          00 r[4]='1000'
REG[4] =   t4[1000](8)
   6 MakeRecord       2    3    5               00 r[5]=mkrec(r[2..4])
REG[5] =  s10[04110015743131303030....t11000](8)
   7 Insert           0    5    1 sqlite_stat1  1B intkey=r[1] data=r[5]
REG[5] =  s10[04110015743131303030....t11000](8)
REG[1] =  i:2
   8 Noop             0    0    0               00 
   9 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_52;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_52         00 
   2 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'temp'.sqlite_temp_master WHERE tbl_name='t2' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      1    0    0 0             01 usesStmtJournal=0
  17 TableLock        1    1    0 sqlite_temp_master 00 iDb=1 root=1 write=0
  18 String8          0    2    0 t2            00 r[2]='t2'
REG[2] =   t2[t2](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          0    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   14    0               00 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [SELECT typeof( ( SELECT b FROM t1 ORDER BY b DESC ) ),  ( SELECT b FROM t1 ORDER BY b DESC ) ;]
VDBE Trace:
   0 Init             0   52    0               00 Start at 52
  52 Transaction      0    0    2 0             01 usesStmtJournal=0
  53 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  54 Goto             0    1    0               00 
   1 Once             0   24    0               00 
   2 Null             0    4    0               00 r[4]=NULL; Init subquery result
REG[4] =  NULL
   3 OpenEphemeral    2    3    0 k(1,-B)       00 nColumn=3
   4 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   5 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   6 Explain          1    0    0 SCAN TABLE t1 00 
   7 Rewind           0   19    0               00 
   8 Column           0    1    4               00 r[4]=t1.b
REG[4] =  i:5
   9 RealAffinity     4    0    0               00 
REG[4] =  i:5
  10 Copy             4    7    0               00 r[7]=r[4]
REG[7] =  r:5
  11 Sequence         2    8    0               00 r[8]=cursor[2].ctr++
REG[8] =  i:0
  12 Move             4    9    1               00 r[9]=r[4]
REG[9] =  r:5
  13 MakeRecord       7    3    6               00 r[6]=mkrec(r[7..9])
REG[6] =  s20[04070807401400000000000040140000....@.......@...](8)
  14 IdxInsert        2    6    0               00 key=r[6]
REG[6] =  s20[04070807401400000000000040140000....@.......@...](8)
  15 IfNotZero        5   18    1               00 if r[5]!=0 then r[5]-=1, goto 18
REG[5] =  i:1
  18 Next             0    8    0               01 
  19 Close            0    0    0               00 
  20 Sort             2   24    0               00 
  21 Column           2    2   11               00 r[11]=b
REG[11] =  r:5
  22 Move            11    4    1               00 r[4]=r[11]
REG[4] =  r:5
  23 Next             2   21    0               00 
  24 Copy             4    3    0               00 r[3]=r[4]
REG[3] =  r:5
  25 Function0        0    3    1 typeof(1)     01 r[1]=func(r[3])
REG[3] =  r:5
REG[1] =   t4[real](8)
  26 Once             1   49    0               00 
  27 Null             0   12    0               00 r[12]=NULL; Init subquery result
REG[12] =  NULL
  28 OpenEphemeral    3    3    0 k(1,-B)       00 nColumn=3
  29 Integer          1   13    0               00 r[13]=1; LIMIT counter
REG[13] =  i:1
  30 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  31 Explain          2    0    0 SCAN TABLE t1 00 
  32 Rewind           1   44    0               00 
  33 Column           1    1   12               00 r[12]=t1.b
REG[12] =  i:5
  34 RealAffinity    12    0    0               00 
REG[12] =  i:5
  35 Copy            12   15    0               00 r[15]=r[12]
REG[15] =  r:5
  36 Sequence         3   16    0               00 r[16]=cursor[3].ctr++
REG[16] =  i:0
  37 Move            12   17    1               00 r[17]=r[12]
REG[17] =  r:5
  38 MakeRecord      15    3   14               00 r[14]=mkrec(r[15..17])
REG[14] =  s20[04070807401400000000000040140000....@.......@...](8)
  39 IdxInsert        3   14    0               00 key=r[14]
REG[14] =  s20[04070807401400000000000040140000....@.......@...](8)
  40 IfNotZero       13   43    1               00 if r[13]!=0 then r[13]-=1, goto 43
REG[13] =  i:1
  43 Next             1   33    0               01 
  44 Close            1    0    0               00 
  45 Sort             3   49    0               00 
  46 Column           3    2   11               00 r[11]=b
REG[11] =  r:5
  47 Move            11   12    1               00 r[12]=r[11]
REG[12] =  r:5
  48 Next             3   46    0               00 
  49 Copy            12    2    0               00 r[2]=r[12]
REG[2] =  r:5
  50 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =   t4[real](8)
REG[2] =  r:5
  51 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_61;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_61         00 
   2 Halt             0    0    0               00 
SQL: [;
CREATE TABLE numbers(
    x INTEGER PRIMARY KEY AUTOINCREMENT,
    y TEXT,
    t2 TEXT,
    t3 TEXT
  );]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    2 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:6
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:5
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:5
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:5
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:5
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:5
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 numbers       00 r[7]='numbers'
REG[7] =   t7[numbers](8)
  21 String8          0    8    0 numbers       00 r[8]='numbers'
REG[8] =   t7[numbers](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:6
  23 String8          0   10    0 CREATE TABLE numbers(
    x INTEGER PRIMARY KEY AUTOINCREMENT,
    y TEXT,
    t2 TEXT,
    t3 TEXT
  ) 00 r[10]='CREATE TABLE numbers(
    x INTEGER PRIMARY KEY AUTOINCREMENT,
    y TEXT,
    t2 TEXT,
    
REG[10] =   t103[CREATE TABLE nu](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s130[07171B1B01815B7461626C656E756D62......[tablenumb](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s130[07171B1B01815B7461626C656E756D62......[tablenumb](8)
REG[5] =  i:5
  26 Close            1    0    0               00 
  27 SetCookie        0    1    3               00 
  28 ParseSchema      0    0    0 tbl_name='numbers' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 numbers       00 r[2]='numbers'
REG[2] =   t7[numbers](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s7[numbers](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s7[numbers](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:6
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s103[CREATE TABLE nu](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s7[numbers](8)
REG[6] =  i:6
REG[7] =   s103[CREATE TABLE nu](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [SELECT typeof( ( SELECT sum(b) FROM t1 )           ),  ( SELECT sum(b) FROM t1 )           ;]
VDBE Trace:
   0 Init             0   36    0               00 Start at 36
  36 Transaction      0    0    3 0             01 usesStmtJournal=0
  37 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  38 Goto             0    1    0               00 
   1 Once             0   16    0               00 
   2 Null             0    4    0               00 r[4]=NULL; Init subquery result
REG[4] =  NULL
   3 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   4 Null             0    6    7               00 r[6..7]=NULL
REG[6] =  NULL
   5 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   6 Explain          1    0    0 SCAN TABLE t1 00 
   7 Rewind           0   12    0               00 
   8 Column           0    1    8               00 r[8]=t1.b
REG[8] =  i:5
   9 RealAffinity     8    0    0               00 
REG[8] =  i:5
  10 AggStep0         0    8    6 sum(1)        01 accum=r[6] step(r[8])
REG[8] =  r:5
  11 Next             0    8    0               01 
  12 Close            0    0    0               00 
  13 AggFinal         6    1    0 sum(1)        00 accum=r[6] N=1
  14 Copy             6    4    0               00 r[4]=r[6]
REG[4] =  r:5
  15 DecrJumpZero     5   16    0               00 if (--r[5])==0 goto 16
REG[5] =  i:1
  16 Copy             4    3    0               00 r[3]=r[4]
REG[3] =  r:5
  17 Function0        0    3    1 typeof(1)     01 r[1]=func(r[3])
REG[3] =  r:5
REG[1] =   t4[real](8)
  18 Once             1   33    0               00 
  19 Null             0    9    0               00 r[9]=NULL; Init subquery result
REG[9] =  NULL
  20 Integer          1   10    0               00 r[10]=1; LIMIT counter
REG[10] =  i:1
  21 Null             0   11   12               00 r[11..12]=NULL
REG[11] =  NULL
  22 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  23 Explain          2    0    0 SCAN TABLE t1 00 
  24 Rewind           1   29    0               00 
  25 Column           1    1    8               00 r[8]=t1.b
REG[8] =  i:5
  26 RealAffinity     8    0    0               00 
REG[8] =  i:5
  27 AggStep0         0    8   11 sum(1)        01 accum=r[11] step(r[8])
REG[8] =  r:5
  28 Next             1   25    0               01 
  29 Close            1    0    0               00 
  30 AggFinal        11    1    0 sum(1)        00 accum=r[11] N=1
  31 Copy            11    9    0               00 r[9]=r[11]
REG[9] =  r:5
  32 DecrJumpZero    10   33    0               00 if (--r[10])==0 goto 33
REG[10] =  i:1
  33 Copy             9    2    0               00 r[2]=r[9]
REG[2] =  r:5
  34 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =   t4[real](8)
REG[2] =  r:5
  35 Halt             0    0    0               00 
SQL: [SELECT typeof( ( SELECT a FROM t1 WHERE b<'one' ORDER BY b )  ),  ( SELECT a FROM t1 WHERE b<'one' ORDER BY b )  ;]
VDBE Trace:
   0 Init             0   56    0               00 Start at 56
  56 Transaction      0    0    3 0             01 usesStmtJournal=0
  57 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  58 String8          0    7    0 one           00 r[7]='one'
REG[7] =   t3[one](8)
  59 Goto             0    1    0               00 
   1 Once             0   26    0               00 
   2 Null             0    4    0               00 r[4]=NULL; Init subquery result
REG[4] =  NULL
   3 OpenEphemeral    2    3    0 k(1,B)        00 nColumn=3
   4 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   5 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   6 Explain          1    0    0 SCAN TABLE t1 00 
   7 Rewind           0   21    0               00 
   8 Column           0    1    6               00 r[6]=t1.b
REG[6] =  i:5
   9 RealAffinity     6    0    0               00 
REG[6] =  i:5
  10 Ge               7   20    6 (BINARY)      55 if r[7]>=r[6] goto 20
REG[7] =   t3[one](8)
REG[6] =  r:5
  11 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:16
  12 Copy             6    9    0               00 r[9]=r[6]
REG[9] =  r:5
  13 Sequence         2   10    0               00 r[10]=cursor[2].ctr++
REG[10] =  i:0
  14 Move             4   11    1               00 r[11]=r[4]
REG[11] =  i:16
  15 MakeRecord       9    3    8               00 r[8]=mkrec(r[9..11])
REG[8] =  s13[04070801401400000000000010....@........](8)
  16 IdxInsert        2    8    0               00 key=r[8]
REG[8] =  s13[04070801401400000000000010....@........](8)
  17 IfNotZero        5   20    1               00 if r[5]!=0 then r[5]-=1, goto 20
REG[5] =  i:1
  20 Next             0    8    0               01 
  21 Close            0    0    0               00 
  22 Sort             2   26    0               00 
  23 Column           2    2   13               00 r[13]=a
REG[13] =  i:16
  24 Move            13    4    1               00 r[4]=r[13]
REG[4] =  i:16
  25 Next             2   23    0               00 
  26 Copy             4    3    0               00 r[3]=r[4]
REG[3] =  i:16
  27 Function0        0    3    1 typeof(1)     01 r[1]=func(r[3])
REG[3] =  i:16
REG[1] =   t7[integer](8)
  28 Once             1   53    0               00 
  29 Null             0   14    0               00 r[14]=NULL; Init subquery result
REG[14] =  NULL
  30 OpenEphemeral    3    3    0 k(1,B)        00 nColumn=3
  31 Integer          1   15    0               00 r[15]=1; LIMIT counter
REG[15] =  i:1
  32 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  33 Explain          2    0    0 SCAN TABLE t1 00 
  34 Rewind           1   48    0               00 
  35 Column           1    1   12               00 r[12]=t1.b
REG[12] =  i:5
  36 RealAffinity    12    0    0               00 
REG[12] =  i:5
  37 Ge               7   47   12 (BINARY)      55 if r[7]>=r[12] goto 47
REG[7] =   t3[one](8)
REG[12] =  r:5
  38 Rowid            1   14    0               00 r[14]=rowid
REG[14] =  i:16
  39 Copy            12   17    0               00 r[17]=r[12]
REG[17] =  r:5
  40 Sequence         3   18    0               00 r[18]=cursor[3].ctr++
REG[18] =  i:0
  41 Move            14   19    1               00 r[19]=r[14]
REG[19] =  i:16
  42 MakeRecord      17    3   16               00 r[16]=mkrec(r[17..19])
REG[16] =  s13[04070801401400000000000010....@........](8)
  43 IdxInsert        3   16    0               00 key=r[16]
REG[16] =  s13[04070801401400000000000010....@........](8)
  44 IfNotZero       15   47    1               00 if r[15]!=0 then r[15]-=1, goto 47
REG[15] =  i:1
  47 Next             1   35    0               01 
  48 Close            1    0    0               00 
  49 Sort             3   53    0               00 
  50 Column           3    2   20               00 r[20]=a
REG[20] =  i:16
  51 Move            20   14    1               00 r[14]=r[20]
REG[14] =  i:16
  52 Next             3   50    0               00 
  53 Copy            14    2    0               00 r[2]=r[14]
REG[2] =  i:16
  54 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =   t7[integer](8)
REG[2] =  i:16
  55 Halt             0    0    0               00 
SQL: [;
SELECT CASE WHEN '0' THEN 'true' ELSE 'false' END;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 String8          0    2    0 0             00 r[2]='0'
REG[2] =   t1[0](8)
   8 Goto             0    1    0               00 
   1 IfNot            2    4    1               00 
REG[2] =   t1[0](8)
   4 String8          0    1    0 false         00 r[1]='false'
REG[1] =   t5[false](8)
   5 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t5[false](8)
   6 Halt             0    0    0               00 
SQL: [ANALYZE sqlite_master;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    1    3 0             01 usesStmtJournal=0
  34 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  35 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:7
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:6
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        3    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:6
  16 NotExists        3   18    1               00 intkey=r[1]; pk
REG[1] =  i:6
  17 Rowid            3    5    0               00 r[5]=rowid
REG[5] =  i:6
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:6
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 sqlite_stat1  00 r[7]='sqlite_stat1'
REG[7] =   t12[sqlite_stat1](8)
  21 String8          0    8    0 sqlite_stat1  00 r[8]='sqlite_stat1'
REG[8] =   t12[sqlite_stat1](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:7
  23 String8          0   10    0 CREATE TABLE sqlite_stat1(tbl,idx,stat) 00 r[10]='CREATE TABLE sqlite_stat1(tbl,idx,stat)'
REG[10] =   t39[CREATE TABLE sq](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit](8)
  25 Insert           3   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit](8)
REG[5] =  i:6
  26 Close            3    0    0               00 
  27 SetCookie        0    1    4               00 
  28 ParseSchema      0    0    0 tbl_name='sqlite_stat1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 sqlite_stat1  00 r[2]='sqlite_stat1'
REG[2] =   t12[sqlite_stat1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s12[sqlite_stat1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s12[sqlite_stat1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:7
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s39[CREATE TABLE sq](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s12[sqlite_stat1](8)
REG[6] =  i:7
REG[7] =   s39[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 OpenWrite        0    2    0 3             10 root=2 iDb=0; sqlite_stat1
  30 LoadAnalysis     0    0    0               00 
SQL: [SELECT tbl,idx,stat FROM 'main'.sqlite_stat1]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    4 0             01 usesStmtJournal=0
  12 TableLock        0    7    0 sqlite_stat1  00 iDb=0 root=7 write=0
  13 Goto             0    1    0               00 
   1 OpenRead         0    7    0 3             00 root=7 iDb=0; sqlite_stat1
   2 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
  31 Expire           0    0    0               00 
  32 Halt             0    0    0               00 
SQL: [CREATE TABLE t4(t5, t6, t7 DEFAULT 'xyz');]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    4 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:8
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:7
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:7
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:7
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:7
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:7
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:7
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t4            00 r[7]='t4'
REG[7] =   t2[t4](8)
  21 String8          0    8    0 t4            00 r[8]='t4'
REG[8] =   t2[t4](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:8
  23 String8          0   10    0 CREATE TABLE t4(t5, t6, t7 DEFAULT 'xyz') 00 r[10]='CREATE TABLE t4(t5, t6, t7 DEFAULT 'xyz')'
REG[10] =   t41[CREATE TABLE t4](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s57[06171111015F7461626C657434743408....._tablet4t4.](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s57[06171111015F7461626C657434743408....._tablet4t4.](8)
REG[5] =  i:7
  26 Close            1    0    0               00 
  27 SetCookie        0    1    5               00 
  28 ParseSchema      0    0    0 tbl_name='t4' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    5 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t4            00 r[2]='t4'
REG[2] =   t2[t4](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s2[t4](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t4](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:8
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s41[CREATE TABLE t4](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t4](8)
REG[6] =  i:8
REG[7] =   s41[CREATE TABLE t4](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;
CREATE TABLE t8(t10 INT, t9 INT);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    5 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:9
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:8
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:8
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:8
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:8
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:8
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:8
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t8            00 r[7]='t8'
REG[7] =   t2[t8](8)
  21 String8          0    8    0 t8            00 r[8]='t8'
REG[8] =   t2[t8](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:9
  23 String8          0   10    0 CREATE TABLE t8(t10 INT, t9 INT) 00 r[10]='CREATE TABLE t8(t10 INT, t9 INT)'
REG[10] =   t32[CREATE TABLE t8](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s48[06171111014D7461626C657438743809.....Mtablet8t8.](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s48[06171111014D7461626C657438743809.....Mtablet8t8.](8)
REG[5] =  i:8
  26 Close            1    0    0               00 
  27 SetCookie        0    1    6               00 
  28 ParseSchema      0    0    0 tbl_name='t8' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t8            00 r[2]='t8'
REG[2] =   t2[t8](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s2[t4](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t8](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s2[t8](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t8](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:9
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s32[CREATE TABLE t8](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t8](8)
REG[6] =  i:9
REG[7] =   s32[CREATE TABLE t8](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    6 0             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s64[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s64[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s38[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s15[sqlite_sequence](8)
REG[2] =  i:3
REG[3] =   s38[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s0[](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE ""](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s0[](8)
REG[2] =  i:4
REG[3] =   s39[CREATE TABLE ""](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s19[sqlite_autoinde](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s19[sqlite_autoinde](8)
REG[2] =  i:5
REG[3] =  NULL
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[numbers](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:6
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s103[CREATE TABLE nu](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s7[numbers](8)
REG[2] =  i:6
REG[3] =   s103[CREATE TABLE nu](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:7
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s12[sqlite_stat1](8)
REG[2] =  i:7
REG[3] =   s39[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t4](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:8
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s41[CREATE TABLE t4](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t4](8)
REG[2] =  i:8
REG[3] =   s41[CREATE TABLE t4](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t8](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:9
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s32[CREATE TABLE t8](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t8](8)
REG[2] =  i:9
REG[3] =   s32[CREATE TABLE t8](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_63;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_63         00 
   2 Halt             0    0    0               00 
SQL: [SELECT CAST($str AS integer);]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Variable         1    1    0 $str          00 r[1]=parameter(1,$str)
REG[1] =  NULL
   2 Cast             1   68    0               00 affinity(r[1])
REG[1] =  NULL
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   4 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t8' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 0             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t8            00 r[2]='t8'
REG[2] =   t2[t8](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s2[t4](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t8](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s2[t8](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t8](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:9
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s32[CREATE TABLE t8](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t8](8)
REG[6] =  i:9
REG[7] =   s32[CREATE TABLE t8](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
INSERT INTO t1(a,a) VALUES(19,100000000000000003);]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      0    1    6 0             01 usesStmtJournal=0
  21 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  22 TableLock        0    3    1 sqlite_sequence 00 iDb=0 root=3 write=1
  23 OpenRead         0    3    0 2             00 root=3 iDb=0; sqlite_sequence
  24 String8          0    1    0 t1            00 r[1]='t1'
REG[1] =   t2[t1](8)
  25 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  26 Rewind           0   34    0               00 
  27 Column           0    0    2               00 r[2]=
REG[2] =   s2[t1](8)
  28 Ne               1   32    2               10 if r[1]!=r[2] goto 32
REG[1] =   t2[t1](8)
REG[2] =   s2[t1](8)
  29 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:1
  30 Column           0    1    2               00 r[2]=
REG[2] =  i:16
  31 Goto             0   34    0               00 
  34 Close            0    0    0               00 
  35 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  36 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 Int64            0    4    0 100000000000000003 00 r[4]=100000000000000003
REG[4] =  i:100000000000000003
   3 NotNull          4    5    0               00 if r[4]!=NULL goto 5
REG[4] =  i:100000000000000003
   5 MustBeInt        4    0    0               00 
REG[4] =  i:100000000000000003
   6 MemMax           2    4    0               00 r[2]=max(r[2],r[4])
REG[4] =  i:100000000000000003
   7 SoftNull         5    0    0               00 r[5]=NULL
   8 NotExists        0   10    4               00 intkey=r[4]
REG[4] =  i:100000000000000003
  10 MakeRecord       5    2    7 DE            00 r[7]=mkrec(r[5..6])
REG[7] =  s3[030000...](8)
  11 Insert           0    7    4 t1            13 intkey=r[4] data=r[7]
REG[7] =  s3[030000...](8)
REG[4] =  i:100000000000000003
  12 Close            0    0    0               00 
  13 OpenWrite        0    3    0 2             00 root=3 iDb=0; sqlite_sequence
  14 NotNull          3   16    0               00 if r[3]!=NULL goto 16
REG[3] =  i:1
  16 MakeRecord       1    2    8               00 r[8]=mkrec(r[1..2])
REG[8] =  s13[0311067431016345785D8A0003...t1.cEx]...](8)
  17 Insert           0    8    3               08 intkey=r[3] data=r[8]
REG[8] =  s13[0311067431016345785D8A0003...t1.cEx]...](8)
REG[3] =  i:1
  18 Noop             0    0    0               00 
  19 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t8' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 0             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t8            00 r[2]='t8'
REG[2] =   t2[t8](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s2[t4](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t8](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s2[t8](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t8](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:9
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s32[CREATE TABLE t8](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t8](8)
REG[6] =  i:9
REG[7] =   s32[CREATE TABLE t8](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [SELECT * FROM sqlite_master;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    6 0             01 usesStmtJournal=0
  14 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  15 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   11    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[t1](8)
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t1](8)
   7 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:2
   8 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s64[CREATE TABLE t1](8)
   9 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s2[t1](8)
REG[3] =   s2[t1](8)
REG[4] =  i:2
REG[5] =   s64[CREATE TABLE t1](8)
  10 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s15[sqlite_sequence](8)
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s15[sqlite_sequence](8)
   7 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:3
   8 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s38[CREATE TABLE sq](8)
   9 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s15[sqlite_sequence](8)
REG[3] =   s15[sqlite_sequence](8)
REG[4] =  i:3
REG[5] =   s38[CREATE TABLE sq](8)
  10 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s0[](8)
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s0[](8)
   7 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:4
   8 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s39[CREATE TABLE ""](8)
   9 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s0[](8)
REG[3] =   s0[](8)
REG[4] =  i:4
REG[5] =   s39[CREATE TABLE ""](8)
  10 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s19[sqlite_autoinde](8)
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s0[](8)
   7 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:5
   8 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =  NULL
   9 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[index](8)
REG[2] =   s19[sqlite_autoinde](8)
REG[3] =   s0[](8)
REG[4] =  i:5
REG[5] =  NULL
  10 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s7[numbers](8)
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s7[numbers](8)
   7 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:6
   8 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s103[CREATE TABLE nu](8)
   9 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s7[numbers](8)
REG[3] =   s7[numbers](8)
REG[4] =  i:6
REG[5] =   s103[CREATE TABLE nu](8)
  10 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s12[sqlite_stat1](8)
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s12[sqlite_stat1](8)
   7 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:7
   8 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s39[CREATE TABLE sq](8)
   9 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s12[sqlite_stat1](8)
REG[3] =   s12[sqlite_stat1](8)
REG[4] =  i:7
REG[5] =   s39[CREATE TABLE sq](8)
  10 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[t4](8)
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t4](8)
   7 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:8
   8 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s41[CREATE TABLE t4](8)
   9 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s2[t4](8)
REG[3] =   s2[t4](8)
REG[4] =  i:8
REG[5] =   s41[CREATE TABLE t4](8)
  10 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[t8](8)
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t8](8)
   7 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:9
   8 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s32[CREATE TABLE t8](8)
   9 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s2[t8](8)
REG[3] =   s2[t8](8)
REG[4] =  i:9
REG[5] =   s32[CREATE TABLE t8](8)
  10 Next             0    4    0               01 
  11 Close            0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;
BEGIN;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [;
COMMIT;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       1    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='one' AND type='index' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 0             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 one           00 r[2]='one'
REG[2] =   t3[one](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[one](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[one](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[one](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s19[sqlite_autoinde](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[one](8)
REG[1] =   s19[sqlite_autoinde](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[one](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[one](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[one](8)
REG[1] =   s2[t4](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t8](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[one](8)
REG[1] =   s2[t8](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_84;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_84         00 
   2 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_89;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_89         00 
   2 Halt             0    0    0               00 
SQL: [;
DROP TABLE IF EXISTS rins;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    6 0             01 usesStmtJournal=0
   3 Transaction      1    0    0 0             01 usesStmtJournal=0
   4 Transaction      2    0  205 0             01 usesStmtJournal=0
   5 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_95;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_95         00 
   2 Halt             0    0    0               00 
SQL: [;
SELECT 5 not between t5 and t5 FROM t4;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    6 0             01 usesStmtJournal=0
  14 TableLock        0    8    0 t4            00 iDb=0 root=8 write=0
  15 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
  16 Goto             0    1    0               00 
   1 OpenRead         0    8    0 1             00 root=8 iDb=0; t4
   2 Explain          0    0    0 SCAN TABLE t4 00 
   3 Rewind           0   11    0               00 
  11 Close            0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;
INSERT INTO sqlite_stat1 VALUES('xx3','t2x12','39667 7');]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    1    6 0             01 usesStmtJournal=0
  11 TableLock        0    7    1 sqlite_stat1  00 iDb=0 root=7 write=1
  12 Goto             0    1    0               00 
   1 OpenWrite        0    7    0 3             00 root=7 iDb=0; sqlite_stat1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 String8          0    2    0 xx3           00 r[2]='xx3'
REG[2] =   t3[xx3](8)
   4 String8          0    3    0 t2x12         00 r[3]='t2x12'
REG[3] =   t5[t2x12](8)
   5 String8          0    4    0 39667 7       00 r[4]='39667 7'
REG[4] =   t7[39667 7](8)
   6 MakeRecord       2    3    5               00 r[5]=mkrec(r[2..4])
REG[5] =  s19[0413171B787833743278313233393636....xx3t2x123966](8)
   7 Insert           0    5    1 sqlite_stat1  1B intkey=r[1] data=r[5]
REG[5] =  s19[0413171B787833743278313233393636....xx3t2x123966](8)
REG[1] =  i:1
   8 Noop             0    0    0               00 
   9 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='one' AND type='index' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 0             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 one           00 r[2]='one'
REG[2] =   t3[one](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[one](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[one](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[one](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s19[sqlite_autoinde](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[one](8)
REG[1] =   s19[sqlite_autoinde](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[one](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[one](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[one](8)
REG[1] =   s2[t4](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t8](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[one](8)
REG[1] =   s2[t8](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    6 0             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s64[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s64[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s38[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s15[sqlite_sequence](8)
REG[2] =  i:3
REG[3] =   s38[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s0[](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE ""](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s0[](8)
REG[2] =  i:4
REG[3] =   s39[CREATE TABLE ""](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s19[sqlite_autoinde](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s19[sqlite_autoinde](8)
REG[2] =  i:5
REG[3] =  NULL
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[numbers](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:6
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s103[CREATE TABLE nu](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s7[numbers](8)
REG[2] =  i:6
REG[3] =   s103[CREATE TABLE nu](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:7
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s12[sqlite_stat1](8)
REG[2] =  i:7
REG[3] =   s39[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t4](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:8
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s41[CREATE TABLE t4](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t4](8)
REG[2] =  i:8
REG[3] =   s41[CREATE TABLE t4](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t8](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:9
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s32[CREATE TABLE t8](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t8](8)
REG[2] =  i:9
REG[3] =   s32[CREATE TABLE t8](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t4' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 0             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t4            00 r[2]='t4'
REG[2] =   t2[t4](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s2[t4](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t4](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:8
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s41[CREATE TABLE t4](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t4](8)
REG[6] =  i:8
REG[7] =   s41[CREATE TABLE t4](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t8](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s2[t8](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='t2bc' AND type='index' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 0             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t2bc          00 r[2]='t2bc'
REG[2] =   t4[t2bc](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2bc](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2bc](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2bc](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s19[sqlite_autoinde](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2bc](8)
REG[1] =   s19[sqlite_autoinde](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2bc](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2bc](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2bc](8)
REG[1] =   s2[t4](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t8](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2bc](8)
REG[1] =   s2[t8](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
UPDATE numbers SET y=0;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    1    6 0             01 usesStmtJournal=0
  22 TableLock        0    6    1 numbers       00 iDb=0 root=6 write=1
  23 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    6    0 0             00 root=6 iDb=0; numbers
   3 Explain          0    0    0 SCAN TABLE numbers 00 
   4 Rewind           0    8    0               00 
   8 Close            0    0    0               00 
   9 OpenWrite        0    6    0 4             00 root=6 iDb=0; numbers
  10 RowSetRead       1   19    2               00 r[2]=rowset(1)
REG[1] =  NULL
REG[2] =  NULL
  19 Noop             0    0    0               00 
  20 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_6;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_6          00 
   2 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_15;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_15         00 
   2 Halt             0    0    0               00 
SQL: [;
INSERT INTO "sqlite_stat1" VALUES('xx3','ve','40000 21');]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    1    6 0             01 usesStmtJournal=0
  11 TableLock        0    7    1 sqlite_stat1  00 iDb=0 root=7 write=1
  12 Goto             0    1    0               00 
   1 OpenWrite        0    7    0 3             00 root=7 iDb=0; sqlite_stat1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   3 String8          0    2    0 xx3           00 r[2]='xx3'
REG[2] =   t3[xx3](8)
   4 String8          0    3    0 ve            00 r[3]='ve'
REG[3] =   t2[ve](8)
   5 String8          0    4    0 40000 21      00 r[4]='40000 21'
REG[4] =   t8[40000 21](8)
   6 MakeRecord       2    3    5               00 r[5]=mkrec(r[2..4])
REG[5] =  s17[0413111D787833766534303030302032....xx3ve40000 2](8)
   7 Insert           0    5    1 sqlite_stat1  1B intkey=r[1] data=r[5]
REG[5] =  s17[0413111D787833766534303030302032....xx3ve40000 2](8)
REG[1] =  i:2
   8 Noop             0    0    0               00 
   9 Halt             0    0    0               00 
SQL: [SELECT t7, t7+1, t7+2, t7+3, t7+4, t7+5, t7+6, t7+7, t7+8, t7+9, t7+10, t7+11, t7+12, t7+13, t7+14, t7+15, t7+16, t7+17, t7+18, t7+19, t7+20, t7+21, t7+22, t7+23, t7+24, t7+25, t7+26, t7+27, t7+28, t7+29, t7+30, t7+31, t7+32, t7+33, t7+34, t7+35, t7+36, t7+37, t7+38, t7+39, t7+40, t7+41, t7+42, t7+43, t7+44, t7+45, t7+46, t7+47, t7+48, t7+49, t7+50, t7+51, t7+52, t7+53, t7+54, t7+55, t7+56, t7+57, t7+58, t7+59, t7+60, t7+61, t7+62, t7+63, t7+64, t7+65, t7+66, t7+67, t7+68, t7+69, t7+70, t7+71, t7+72, t7+73, t7+74, t7+75, t7+76, t7+77, t7+78, t7+79, t7+80, t7+81, t7+82, t7+83, t7+84, t7+85, t7+86, t7+87, t7+88, t7+89, t7+90, t7+91, t7+92, t7+93, t7+94, t7+95, t7+96, t7+97, t7+98, t7+99, t7+100, t7+101, t7+102, t7+103, t7+104, t7+105, t7+106, t7+107, t7+108, t7+109, t7+110, t7+111, t7+112, t7+113, t7+114, t7+115, t7+116, t7+117, t7+118, t7+119 FROM t4 ORDER BY t7 LIMIT -1;]
VDBE Trace:
   0 Init             0  259    0               00 Start at 259
 259 Transaction      0    0    6 0             01 usesStmtJournal=0
 260 TableLock        0    8    0 t4            00 iDb=0 root=8 write=0
 261 Integer          1  125    0               00 r[125]=1
REG[125] =  i:1
 262 Integer          2  126    0               00 r[126]=2
REG[126] =  i:2
 263 Integer          3  127    0               00 r[127]=3
REG[127] =  i:3
 264 Integer          4  128    0               00 r[128]=4
REG[128] =  i:4
 265 Integer          5  129    0               00 r[129]=5
REG[129] =  i:5
 266 Integer          6  130    0               00 r[130]=6
REG[130] =  i:6
 267 Integer          7  131    0               00 r[131]=7
REG[131] =  i:7
 268 Integer          8  132    0               00 r[132]=8
REG[132] =  i:8
 269 Integer          9  133    0               00 r[133]=9
REG[133] =  i:9
 270 Integer         10  134    0               00 r[134]=10
REG[134] =  i:10
 271 Integer         11  135    0               00 r[135]=11
REG[135] =  i:11
 272 Integer         12  136    0               00 r[136]=12
REG[136] =  i:12
 273 Integer         13  137    0               00 r[137]=13
REG[137] =  i:13
 274 Integer         14  138    0               00 r[138]=14
REG[138] =  i:14
 275 Integer         15  139    0               00 r[139]=15
REG[139] =  i:15
 276 Integer         16  140    0               00 r[140]=16
REG[140] =  i:16
 277 Integer         17  141    0               00 r[141]=17
REG[141] =  i:17
 278 Integer         18  142    0               00 r[142]=18
REG[142] =  i:18
 279 Integer         19  143    0               00 r[143]=19
REG[143] =  i:19
 280 Integer         20  144    0               00 r[144]=20
REG[144] =  i:20
 281 Integer         21  145    0               00 r[145]=21
REG[145] =  i:21
 282 Integer         22  146    0               00 r[146]=22
REG[146] =  i:22
 283 Integer         23  147    0               00 r[147]=23
REG[147] =  i:23
 284 Integer         24  148    0               00 r[148]=24
REG[148] =  i:24
 285 Integer         25  149    0               00 r[149]=25
REG[149] =  i:25
 286 Integer         26  150    0               00 r[150]=26
REG[150] =  i:26
 287 Integer         27  151    0               00 r[151]=27
REG[151] =  i:27
 288 Integer         28  152    0               00 r[152]=28
REG[152] =  i:28
 289 Integer         29  153    0               00 r[153]=29
REG[153] =  i:29
 290 Integer         30  154    0               00 r[154]=30
REG[154] =  i:30
 291 Integer         31  155    0               00 r[155]=31
REG[155] =  i:31
 292 Integer         32  156    0               00 r[156]=32
REG[156] =  i:32
 293 Integer         33  157    0               00 r[157]=33
REG[157] =  i:33
 294 Integer         34  158    0               00 r[158]=34
REG[158] =  i:34
 295 Integer         35  159    0               00 r[159]=35
REG[159] =  i:35
 296 Integer         36  160    0               00 r[160]=36
REG[160] =  i:36
 297 Integer         37  161    0               00 r[161]=37
REG[161] =  i:37
 298 Integer         38  162    0               00 r[162]=38
REG[162] =  i:38
 299 Integer         39  163    0               00 r[163]=39
REG[163] =  i:39
 300 Integer         40  164    0               00 r[164]=40
REG[164] =  i:40
 301 Integer         41  165    0               00 r[165]=41
REG[165] =  i:41
 302 Integer         42  166    0               00 r[166]=42
REG[166] =  i:42
 303 Integer         43  167    0               00 r[167]=43
REG[167] =  i:43
 304 Integer         44  168    0               00 r[168]=44
REG[168] =  i:44
 305 Integer         45  169    0               00 r[169]=45
REG[169] =  i:45
 306 Integer         46  170    0               00 r[170]=46
REG[170] =  i:46
 307 Integer         47  171    0               00 r[171]=47
REG[171] =  i:47
 308 Integer         48  172    0               00 r[172]=48
REG[172] =  i:48
 309 Integer         49  173    0               00 r[173]=49
REG[173] =  i:49
 310 Integer         50  174    0               00 r[174]=50
REG[174] =  i:50
 311 Integer         51  175    0               00 r[175]=51
REG[175] =  i:51
 312 Integer         52  176    0               00 r[176]=52
REG[176] =  i:52
 313 Integer         53  177    0               00 r[177]=53
REG[177] =  i:53
 314 Integer         54  178    0               00 r[178]=54
REG[178] =  i:54
 315 Integer         55  179    0               00 r[179]=55
REG[179] =  i:55
 316 Integer         56  180    0               00 r[180]=56
REG[180] =  i:56
 317 Integer         57  181    0               00 r[181]=57
REG[181] =  i:57
 318 Integer         58  182    0               00 r[182]=58
REG[182] =  i:58
 319 Integer         59  183    0               00 r[183]=59
REG[183] =  i:59
 320 Integer         60  184    0               00 r[184]=60
REG[184] =  i:60
 321 Integer         61  185    0               00 r[185]=61
REG[185] =  i:61
 322 Integer         62  186    0               00 r[186]=62
REG[186] =  i:62
 323 Integer         63  187    0               00 r[187]=63
REG[187] =  i:63
 324 Integer         64  188    0               00 r[188]=64
REG[188] =  i:64
 325 Integer         65  189    0               00 r[189]=65
REG[189] =  i:65
 326 Integer         66  190    0               00 r[190]=66
REG[190] =  i:66
 327 Integer         67  191    0               00 r[191]=67
REG[191] =  i:67
 328 Integer         68  192    0               00 r[192]=68
REG[192] =  i:68
 329 Integer         69  193    0               00 r[193]=69
REG[193] =  i:69
 330 Integer         70  194    0               00 r[194]=70
REG[194] =  i:70
 331 Integer         71  195    0               00 r[195]=71
REG[195] =  i:71
 332 Integer         72  196    0               00 r[196]=72
REG[196] =  i:72
 333 Integer         73  197    0               00 r[197]=73
REG[197] =  i:73
 334 Integer         74  198    0               00 r[198]=74
REG[198] =  i:74
 335 Integer         75  199    0               00 r[199]=75
REG[199] =  i:75
 336 Integer         76  200    0               00 r[200]=76
REG[200] =  i:76
 337 Integer         77  201    0               00 r[201]=77
REG[201] =  i:77
 338 Integer         78  202    0               00 r[202]=78
REG[202] =  i:78
 339 Integer         79  203    0               00 r[203]=79
REG[203] =  i:79
 340 Integer         80  204    0               00 r[204]=80
REG[204] =  i:80
 341 Integer         81  205    0               00 r[205]=81
REG[205] =  i:81
 342 Integer         82  206    0               00 r[206]=82
REG[206] =  i:82
 343 Integer         83  207    0               00 r[207]=83
REG[207] =  i:83
 344 Integer         84  208    0               00 r[208]=84
REG[208] =  i:84
 345 Integer         85  209    0               00 r[209]=85
REG[209] =  i:85
 346 Integer         86  210    0               00 r[210]=86
REG[210] =  i:86
 347 Integer         87  211    0               00 r[211]=87
REG[211] =  i:87
 348 Integer         88  212    0               00 r[212]=88
REG[212] =  i:88
 349 Integer         89  213    0               00 r[213]=89
REG[213] =  i:89
 350 Integer         90  214    0               00 r[214]=90
REG[214] =  i:90
 351 Integer         91  215    0               00 r[215]=91
REG[215] =  i:91
 352 Integer         92  216    0               00 r[216]=92
REG[216] =  i:92
 353 Integer         93  217    0               00 r[217]=93
REG[217] =  i:93
 354 Integer         94  218    0               00 r[218]=94
REG[218] =  i:94
 355 Integer         95  219    0               00 r[219]=95
REG[219] =  i:95
 356 Integer         96  220    0               00 r[220]=96
REG[220] =  i:96
 357 Integer         97  221    0               00 r[221]=97
REG[221] =  i:97
 358 Integer         98  222    0               00 r[222]=98
REG[222] =  i:98
 359 Integer         99  223    0               00 r[223]=99
REG[223] =  i:99
 360 Integer        100  224    0               00 r[224]=100
REG[224] =  i:100
 361 Integer        101  225    0               00 r[225]=101
REG[225] =  i:101
 362 Integer        102  226    0               00 r[226]=102
REG[226] =  i:102
 363 Integer        103  227    0               00 r[227]=103
REG[227] =  i:103
 364 Integer        104  228    0               00 r[228]=104
REG[228] =  i:104
 365 Integer        105  229    0               00 r[229]=105
REG[229] =  i:105
 366 Integer        106  230    0               00 r[230]=106
REG[230] =  i:106
 367 Integer        107  231    0               00 r[231]=107
REG[231] =  i:107
 368 Integer        108  232    0               00 r[232]=108
REG[232] =  i:108
 369 Integer        109  233    0               00 r[233]=109
REG[233] =  i:109
 370 Integer        110  234    0               00 r[234]=110
REG[234] =  i:110
 371 Integer        111  235    0               00 r[235]=111
REG[235] =  i:111
 372 Integer        112  236    0               00 r[236]=112
REG[236] =  i:112
 373 Integer        113  237    0               00 r[237]=113
REG[237] =  i:113
 374 Integer        114  238    0               00 r[238]=114
REG[238] =  i:114
 375 Integer        115  239    0               00 r[239]=115
REG[239] =  i:115
 376 Integer        116  240    0               00 r[240]=116
REG[240] =  i:116
 377 Integer        117  241    0               00 r[241]=117
REG[241] =  i:117
 378 Integer        118  242    0               00 r[242]=118
REG[242] =  i:118
 379 Integer        119  243    0               00 r[243]=119
REG[243] =  i:119
 380 Goto             0    1    0               00 
   1 OpenEphemeral    1  122    0 k(1,B)        00 nColumn=122
   2 Integer         -1    1    0               00 r[1]=-1; LIMIT counter
REG[1] =  i:-1
   3 OpenRead         0    8    0 3             00 root=8 iDb=0; t4
   4 Explain          0    0    0 SCAN TABLE t4 00 
   5 Rewind           0  134    0               00 
 134 Close            0    0    0               00 
 135 Sort             1  258    0               00 
 258 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_16;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_16         00 
   2 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_42;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_42         00 
   2 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='"4' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 0             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 "4            00 r[2]='"4'
REG[2] =   t2["4](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2["4](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2["4](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2["4](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2["4](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2["4](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2["4](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2["4](8)
REG[1] =   s2[t4](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t8](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2["4](8)
REG[1] =   s2[t8](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
CREATE TABLE t11(t12 text);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    6 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:10
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:9
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:9
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:9
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:9
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:9
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:9
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t11           00 r[7]='t11'
REG[7] =   t3[t11](8)
  21 String8          0    8    0 t11           00 r[8]='t11'
REG[8] =   t3[t11](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:10
  23 String8          0   10    0 CREATE TABLE t11(t12 text) 00 r[10]='CREATE TABLE t11(t12 text)'
REG[10] =   t26[CREATE TABLE t1](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s44[0617131301417461626C657431317431.....Atablet11t1](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s44[0617131301417461626C657431317431.....Atablet11t1](8)
REG[5] =  i:9
  26 Close            1    0    0               00 
  27 SetCookie        0    1    7               00 
  28 ParseSchema      0    0    0 tbl_name='t11' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    7 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t11           00 r[2]='t11'
REG[2] =   t3[t11](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[t11](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[t11](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[t11](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[t11](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[t11](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[t11](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[t11](8)
REG[1] =   s2[t4](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t8](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[t11](8)
REG[1] =   s2[t8](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t11](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[t11](8)
REG[1] =   s3[t11](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s3[t11](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:10
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s26[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s3[t11](8)
REG[6] =  i:10
REG[7] =   s26[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_43;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_43         00 
   2 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_53;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_53         00 
   2 Halt             0    0    0               00 
SQL: [INSERT OR ABORT    INTO main.t4 (t6, t6) SELECT t6, t6 FROM t4;]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    1    7 0             01 usesStmtJournal=0
  28 TableLock        0    8    1 t4            00 iDb=0 root=8 write=1
  29 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  30 String8          0    4    0 xyz           00 r[4]='xyz'
REG[4] =   t3[xyz](8)
  31 Goto             0    1    0               00 
   1 InitCoroutine    5   11    2               00 
  11 OpenEphemeral    1    2    0               00 nColumn=2
  12 Yield            5   17    0               00 
REG[5] =  i:1
REG[5] =  i:12
   2 OpenRead         0    8    0 2             00 root=8 iDb=0; t4
   3 Explain          0    0    0 SCAN TABLE t4 00 
   4 Rewind           0    9    0               00 
   9 Close            0    0    0               00 
  10 EndCoroutine     5    0    0               00 
REG[5] =  i:12
  17 OpenWrite        2    8    0 3             00 root=8 iDb=0; t4
  18 Rewind           1   24    0               00 
  24 Close            1    0    0               00 
  25 Noop             2    0    0               00 
  26 Halt             0    0    0               00 
SQL: [;
UPDATE t1 SET b=4294967296, b=-2147483647;]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    1    7 0             01 usesStmtJournal=0
  20 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  21 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:16
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:16
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:100000000000000003
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:100000000000000003
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
  10 RowSetRead       1   17    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:16
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:16
  12 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  13 Integer       -2147483647    4    0               00 r[4]=-2147483647
REG[4] =  i:-2147483647
  14 MakeRecord       3    2    5 DE            00 r[5]=mkrec(r[3..4])
REG[5] =  s7[03000480000001.......](8)
  15 Insert           0    5    2 t1            05 intkey=r[2] data=r[5]
REG[5] =  s7[03000480000001.......](8)
REG[2] =  i:16
  16 Goto             0   10    0               00 
  10 RowSetRead       1   17    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:100000000000000003
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:100000000000000003
  12 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  13 Integer       -2147483647    4    0               00 r[4]=-2147483647
REG[4] =  i:-2147483647
  14 MakeRecord       3    2    5 DE            00 r[5]=mkrec(r[3..4])
REG[5] =  s7[03000480000001.......](8)
  15 Insert           0    5    2 t1            05 intkey=r[2] data=r[5]
REG[5] =  s7[03000480000001.......](8)
REG[2] =  i:100000000000000003
  16 Goto             0   10    0               00 
  10 RowSetRead       1   17    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:100000000000000003
  17 Noop             0    0    0               00 
  18 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_60;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_60         00 
   2 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t4' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    7 0             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t4            00 r[2]='t4'
REG[2] =   t2[t4](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s2[t4](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t4](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:8
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s41[CREATE TABLE t4](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t4](8)
REG[6] =  i:8
REG[7] =   s41[CREATE TABLE t4](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t8](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s2[t8](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t11](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s3[t11](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_76;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_76         00 
   2 Halt             0    0    0               00 
SQL: [DELETE FROM 't8';]
VDBE Trace:
   0 Init             0    3    0               00 Start at 3
   3 Transaction      0    1    7 0             01 usesStmtJournal=0
   4 TableLock        0    9    1 t8            00 iDb=0 root=9 write=1
   5 Goto             0    1    0               00 
   1 Clear            9    0   -1 t8            00 
   2 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_46;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_46         00 
   2 Halt             0    0    0               00 
SQL: [SELECT * FROM t11;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    7 0             01 usesStmtJournal=0
  10 TableLock        0   10    0 t11           00 iDb=0 root=10 write=0
  11 Goto             0    1    0               00 
   1 OpenRead         0   10    0 1             00 root=10 iDb=0; t11
   2 Explain          0    0    0 SCAN TABLE t11 00 
   3 Rewind           0    7    0               00 
   7 Close            0    0    0               00 
   8 Halt             0    0    0               00 
SQL: [;;
DELETE FROM sqlite_master WHERE type = 'index';]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    1    7 0             01 usesStmtJournal=0
  14 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  15 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  16 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   11    0               00 
   5 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
   6 Ne               3   10    2 (BINARY)      52 if r[3]!=r[2] goto 10
REG[3] =   t5[index](8)
REG[2] =   s5[table](8)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
   6 Ne               3   10    2 (BINARY)      52 if r[3]!=r[2] goto 10
REG[3] =   t5[index](8)
REG[2] =   s5[table](8)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
   6 Ne               3   10    2 (BINARY)      52 if r[3]!=r[2] goto 10
REG[3] =   t5[index](8)
REG[2] =   s5[table](8)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[index](8)
   6 Ne               3   10    2 (BINARY)      52 if r[3]!=r[2] goto 10
REG[3] =   t5[index](8)
REG[2] =   s5[index](8)
   7 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:4
   8 Once             0    9    0               00 
   9 Delete           0    1    0 sqlite_master 02 
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
   6 Ne               3   10    2 (BINARY)      52 if r[3]!=r[2] goto 10
REG[3] =   t5[index](8)
REG[2] =   s5[table](8)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
   6 Ne               3   10    2 (BINARY)      52 if r[3]!=r[2] goto 10
REG[3] =   t5[index](8)
REG[2] =   s5[table](8)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
   6 Ne               3   10    2 (BINARY)      52 if r[3]!=r[2] goto 10
REG[3] =   t5[index](8)
REG[2] =   s5[table](8)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
   6 Ne               3   10    2 (BINARY)      52 if r[3]!=r[2] goto 10
REG[3] =   t5[index](8)
REG[2] =   s5[table](8)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
   6 Ne               3   10    2 (BINARY)      52 if r[3]!=r[2] goto 10
REG[3] =   t5[index](8)
REG[2] =   s5[table](8)
  10 Next             0    5    0               01 
  11 Noop             0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;
UPDATE t1 SET a='abc', a='a[bx]c';]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    1    7 0             01 usesStmtJournal=1
  28 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  29 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:16
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:16
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:100000000000000003
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:100000000000000003
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
  10 RowSetRead       1   25    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:16
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:16
  12 String8          0    3    0 a[bx]c        00 r[3]='a[bx]c'
REG[3] =   t6[a[bx]c](8)
  13 MustBeInt        3    0    0               00 
REG[3] =   t6[a[bx]c](8)
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t4' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    7 0             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t4            00 r[2]='t4'
REG[2] =   t2[t4](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s2[t4](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t4](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:8
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s41[CREATE TABLE t4](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t4](8)
REG[6] =  i:8
REG[7] =   s41[CREATE TABLE t4](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t8](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s2[t8](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t11](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s3[t11](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [REINDEX t4;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_65;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_65         00 
   2 Halt             0    0    0               00 
SQL: [;
UPDATE t4 SET t5='ABC', t5='t5[t5-D]C';]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      0    1    7 0             01 usesStmtJournal=0
  21 TableLock        0    8    1 t4            00 iDb=0 root=8 write=1
  22 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    8    0 0             00 root=8 iDb=0; t4
   3 Explain          0    0    0 SCAN TABLE t4 00 
   4 Rewind           0    8    0               00 
   8 Close            0    0    0               00 
   9 OpenWrite        0    8    0 3             00 root=8 iDb=0; t4
  10 RowSetRead       1   18    2               00 r[2]=rowset(1)
REG[1] =  NULL
REG[2] =  NULL
  18 Noop             0    0    0               00 
  19 Halt             0    0    0               00 
SQL: [;
SELECT CASE WHEN t7 = t7 THEN 'eq' ELSE 'ne' END FROM t4;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    7 0             01 usesStmtJournal=0
  14 TableLock        0    8    0 t4            00 iDb=0 root=8 write=0
  15 Goto             0    1    0               00 
   1 OpenRead         0    8    0 3             00 root=8 iDb=0; t4
   2 Explain          0    0    0 SCAN TABLE t4 00 
   3 Rewind           0   11    0               00 
  11 Close            0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_69;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_69         00 
   2 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='numbers' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    7 0             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 numbers       00 r[2]='numbers'
REG[2] =   t7[numbers](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s0[](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s0[](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s7[numbers](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s7[numbers](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:6
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s103[CREATE TABLE nu](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s7[numbers](8)
REG[6] =  i:6
REG[7] =   s103[CREATE TABLE nu](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s2[t4](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t8](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s2[t8](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t11](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s3[t11](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [SELECT x FROM numbers WHERE x=0 AND x<0 ORDER BY x;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    7 0             01 usesStmtJournal=0
  13 TableLock        0    6    0 numbers       00 iDb=0 root=6 write=0
  14 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  15 Goto             0    1    0               00 
   1 Noop             1    3    0               00 
   2 OpenRead         0    6    0 0             00 root=6 iDb=0; numbers
   3 Explain          0    0    0 SEARCH TABLE numbers USING INTEGER PRIMARY KEY (rowid=?) 00 
   4 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   5 MustBeInt        1   10    0               00 
REG[1] =  i:0
   6 NotExists        0   10    1               00 intkey=r[1]; pk
REG[1] =  i:0
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_71;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_71         00 
   2 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_80;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_80         00 
   2 Halt             0    0    0               00 
SQL: [END;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       1    0    0               00 
SQL: [SELECT * FROM t11;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    7 0             01 usesStmtJournal=0
  10 TableLock        0   10    0 t11           00 iDb=0 root=10 write=0
  11 Goto             0    1    0               00 
   1 OpenRead         0   10    0 1             00 root=10 iDb=0; t11
   2 Explain          0    0    0 SCAN TABLE t11 00 
   3 Rewind           0    7    0               00 
   7 Close            0    0    0               00 
   8 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_90;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_90         00 
   2 Halt             0    0    0               00 
SQL: [SELECT count(*) FROM t4 , t4 
;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    7 0             01 usesStmtJournal=0
  18 TableLock        0    8    0 t4            00 iDb=0 root=8 write=0
  19 Goto             0    1    0               00 
   1 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
   2 OpenRead         0    8    0 0             00 root=8 iDb=0; t4
   3 OpenRead         1    8    0 0             00 root=8 iDb=0; t4
   4 Explain          0    0    0 SCAN TABLE t4 00 
   5 Rewind           0   11    0               00 
  11 Close            0    0    0               00 
  12 Close            1    0    0               00 
  13 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  14 Copy             1    2    0               00 r[2]=r[1]
REG[2] =  i:0
  15 ResultRow        2    1    0               00 output=r[2]
REG[2] =  i:0
  16 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f2cd1f86859 in __GI_abort () at abort.c:79
#2  0x00007f2cd1f86729 in __assert_fail_base (fmt=0x7f2cd211c588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x212bb5 "0", file=0x222c23 "sqlite3.c", line=125392, function=<optimized out>) at assert.c:92
#3  0x00007f2cd1f97fd6 in __GI___assert_fail (assertion=0x212bb5 "0", file=0x222c23 "sqlite3.c", line=125392, function=0x2266f4 "int termIsEquivalence(Parse *, Expr *)") at assert.c:101
#4  0x0000000000398c39 in exprAnalyze (pSrc=<optimized out>, pWC=<optimized out>, idxTerm=<optimized out>) at sqlite3.c:125392
#5  0x000000000038c95f in sqlite3WhereBegin (pParse=<optimized out>, pTabList=<optimized out>, pWhere=<optimized out>, pOrderBy=<optimized out>, pDistinctSet=0x10f5580, wctrlFlags=0, iAuxArg=320) at sqlite3.c:125921
#6  0x0000000000328d02 in sqlite3Select (pParse=<optimized out>, p=<optimized out>, pDest=<optimized out>) at sqlite3.c:118028
#7  0x00000000003034ae in yy_reduce (yypParser=0x117a780, yyruleno=<optimized out>) at sqlite3.c:133175
#8  0x00000000002fef8e in sqlite3Parser (yyp=0x117a780, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#9  0x00000000002fc544 in sqlite3RunParser (pParse=0x10efd60, 
    zSql=0x11f8810 "SELECT * FROM (SELECT a COLLATE nocase, a FROM t1) AS x\n       CROSS JOIN t1 ON (x.a=t1.a) ;CREATE TABLE t13(t14, t15, m);SAVEPOINT sp_61;SELECT * FROM t4 NATURAL LEFT JOIN t8;SAVEPOINT sp_79;SAVEPOIN"..., pzErrMsg=0x7ffe35f5f4e8) at sqlite3.c:135186
#10 0x00000000002fac4e in sqlite3Prepare (db=0x10edae0, 
    zSql=0x10f23d8 "SELECT * FROM (SELECT a COLLATE nocase, a FROM t1) AS x\n       CROSS JOIN t1 ON (x.a=t1.a) ;CREATE TABLE t13(t14, t15, m);SAVEPOINT sp_61;SELECT * FROM t4 NATURAL LEFT JOIN t8;SAVEPOINT sp_79;SAVEPOIN"..., nBytes=<optimized out>, saveSqlFlag=1, pReprepare=<optimized out>, ppStmt=0x7ffe35f5f618, pzTail=0x7ffe35f5f600) at sqlite3.c:112589
#11 0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0x10edae0, 
    zSql=0x10f23d8 "SELECT * FROM (SELECT a COLLATE nocase, a FROM t1) AS x\n       CROSS JOIN t1 ON (x.a=t1.a) ;CREATE TABLE t13(t14, t15, m);SAVEPOINT sp_61;SELECT * FROM t4 NATURAL LEFT JOIN t8;SAVEPOINT sp_79;SAVEPOIN"..., nBytes=9173, saveSqlFlag=1, pOld=0x0, ppStmt=<optimized out>, pzTail=0x7ffe35f5f600) at sqlite3.c:112688
#12 0x000000000028f38c in sqlite3_prepare_v2 (db=0x2, zSql=0x7ffe35f5ead0 "", nBytes=0, ppStmt=0x7ffe35f5f618, pzTail=<optimized out>) at sqlite3.c:112764
#13 0x000000000024b100 in main (argc=1, argv=0x7ffe35f5f7c8) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 11079] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
