GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000116,sig:06,src:005737+004364,time:4592943,execs:439412,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
CREATE TABLE t1(a INTEGER PRIMARY KEY, b TEXT);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    0 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    2               00 
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](16LE)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](16LE)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:1
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:1
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:1
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t10[t.a.b.l.e.](16LE)
  20 String8          0    7    0 t1            00 r[7]='t1'
REG[7] =   t4[t.1.](16LE)
  21 String8          0    8    0 t1            00 r[8]='t1'
REG[8] =   t4[t.1.](16LE)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  23 String8          0   10    0 CREATE TABLE t1(a INTEGER PRIMARY KEY, b TEXT) 00 r[10]='CREATE TABLE t1(a INTEGER PRIMARY KEY, b TEXT)'
REG[10] =   t92[C.R.E.A.T.E. .T](16LE)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s118[072115150181457400610062006C0065.!....Et.a.b.l.e](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s118[072115150181457400610062006C0065.!....Et.a.b.l.e](8)
REG[5] =  i:1
  26 Close            1    0    0               00 
  27 SetCookie        0    1    1               00 
  28 ParseSchema      0    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    1 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t4[t.1.](16LE)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t14[t.r.i.g.g.e.r.](16LE)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t.1.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t.1.](16LE)
REG[1] =   s4[t.1.](16LE)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s10[t.a.b.l.e.](16LE)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t14[t.r.i.g.g.e.r.](16LE)
REG[3] =   s10[t.a.b.l.e.](16LE)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s4[t.1.](16LE)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s92[C.R.E.A.T.E. .T](16LE)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s4[t.1.](16LE)
REG[6] =  i:2
REG[7] =   s92[C.R.E.A.T.E. .T](16LE)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [CREATE TRIGGER numbers AFTER INSERT ON t1 WHEN new.a=1 BEGIN
       INSERT INTO t1(a) VALUES(new.a);
     END;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    1    1 0             01 usesStmtJournal=0
  15 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  16 Goto             0    1    0               00 
   1 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   3 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t14[t.r.i.g.g.e.r.](16LE)
   4 String8          0    3    0 numbers       00 r[3]='numbers'
REG[3] =   t14[n.u.m.b.e.r.s.](16LE)
   5 String8          0    4    0 t1            00 r[4]='t1'
REG[4] =   t4[t.1.](16LE)
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 String8          0    6    0 CREATE TRIGGER numbers AFTER INSERT ON t1 WHEN new.a=1 BEGIN
       INSERT INTO t1(a) VALUES(new.a);
     END 00 r[6]='CREATE TRIGGER numbers AFTER INSERT ON t1 WHEN new.a=1 BEGIN
       INSERT INTO t1(a) VALUES(
REG[6] =   t218[C.R.E.A.T.E. .T](16LE)
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
REG[7] =  s257[07292915088341740072006900670067.))...At.r.i.g.g](8)
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
REG[7] =  s257[07292915088341740072006900670067.))...At.r.i.g.g](8)
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 SetCookie        0    1    2               00 
  12 ParseSchema      0    0    0 type='trigger' AND name='numbers' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t14[t.r.i.g.g.e.r.](16LE)
  19 String8          0    4    0 numbers       00 r[4]='numbers'
REG[4] =   t14[n.u.m.b.e.r.s.](16LE)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s10[t.a.b.l.e.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t14[t.r.i.g.g.e.r.](16LE)
REG[1] =   s10[t.a.b.l.e.](16LE)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s14[t.r.i.g.g.e.r.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t14[t.r.i.g.g.e.r.](16LE)
REG[1] =   s14[t.r.i.g.g.e.r.](16LE)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s14[n.u.m.b.e.r.s.](16LE)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t14[n.u.m.b.e.r.s.](16LE)
REG[3] =   s14[n.u.m.b.e.r.s.](16LE)
   9 Copy             3    5    0               00 r[5]=r[3]
REG[5] =   s14[n.u.m.b.e.r.s.](16LE)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:0
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s218[C.R.E.A.T.E. .T](16LE)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s14[n.u.m.b.e.r.s.](16LE)
REG[6] =  i:0
REG[7] =   s218[C.R.E.A.T.E. .T](16LE)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT quote( CAST(1.78 AS blob) );]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 Real             0    2    0 1.78          00 r[2]=1.78
REG[2] =  r:1.78
   5 Cast             2   65    0               00 affinity(r[2])
REG[2] =  r:1.78
   6 Goto             0    1    0               00 
   1 Function0        1    2    1 quote(1)      01 r[1]=func(r[2])
REG[2] =  s8[31002E00370038001...7.8.](16LE)
REG[1] =   s38[X.'.3.1.0.0.2.E](16LE)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s38[X.'.3.1.0.0.2.E](16LE)
   3 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE b>=1;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    2 0             01 usesStmtJournal=0
  13 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  14 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  15 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 Explain          0    0    0 SCAN TABLE t1 00 
   3 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
INSERT INTO t1 VALUES(4, 2);]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    1    2 0             01 usesStmtJournal=1
  16 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  17 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 Integer          4    1    0               00 r[1]=4
REG[1] =  i:4
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  i:4
   5 MustBeInt        1    0    0               00 
REG[1] =  i:4
   6 SoftNull         2    0    0               00 r[2]=NULL
   7 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   8 NotExists        0   10    1               00 intkey=r[1]
REG[1] =  i:4
  10 MakeRecord       2    2    4 DB            00 r[4]=mkrec(r[2..3])
REG[4] =  s5[0300113200...2.](8)
  11 Insert           0    4    1 t1            13 intkey=r[1] data=r[4]
REG[4] =  s5[0300113200...2.](8)
REG[1] =  i:4
  12 Program         -2   13    5 program       01 Call: numbers.default
   0 Init             0    0    0 -- TRIGGER numbers 00 Start at 0; Start: numbers.default (AFTER INSERT ON t1)
   1 Param            3    1    0               00 new.rowid -> $1
REG[1] =  i:4
   2 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   3 Ne               2   18    1               54 if r[2]!=r[1] goto 18
REG[2] =  i:1
REG[1] =  i:4
  18 Halt             0    0    0               00 End: numbers.default
  13 Noop             0    0    0               00 
  14 Halt             0    0    0               00 
SQL: [;
CREATE VIEW x AS SELECT b AS x, b+1 AS numbers FROM t1;]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    2 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](16LE)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](16LE)
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:3
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:3
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:3
  19 String8          0    6    0 view          00 r[6]='view'
REG[6] =   t8[v.i.e.w.](16LE)
  20 String8          0    7    0 x             00 r[7]='x'
REG[7] =   t2[x.](16LE)
  21 String8          0    8    0 x             00 r[8]='x'
REG[8] =   t2[x.](16LE)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:0
  23 String8          0   10    0 CREATE VIEW x AS SELECT b AS x, b+1 AS numbers FROM t1 00 r[10]='CREATE VIEW x AS SELECT b AS x, b+1 AS numbers FROM t1'
REG[10] =   t108[C.R.E.A.T.E. .V](16LE)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s127[071D1111088165760069006500770078......ev.i.e.w.x](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s127[071D1111088165760069006500770078......ev.i.e.w.x](8)
REG[5] =  i:3
  26 Close            1    0    0               00 
  27 SetCookie        0    1    3               00 
  28 ParseSchema      0    0    0 tbl_name='x' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 x             00 r[2]='x'
REG[2] =   t2[x.](16LE)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t14[t.r.i.g.g.e.r.](16LE)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t.1.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[x.](16LE)
REG[1] =   s4[t.1.](16LE)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t.1.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[x.](16LE)
REG[1] =   s4[t.1.](16LE)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[x.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[x.](16LE)
REG[1] =   s2[x.](16LE)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s8[v.i.e.w.](16LE)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t14[t.r.i.g.g.e.r.](16LE)
REG[3] =   s8[v.i.e.w.](16LE)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[x.](16LE)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:0
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s108[C.R.E.A.T.E. .V](16LE)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[x.](16LE)
REG[6] =  i:0
REG[7] =   s108[C.R.E.A.T.E. .V](16LE)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [CREATE TABLE y(t2 int, t3 int, t4 int);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    3 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](16LE)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](16LE)
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:4
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:4
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:4
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t10[t.a.b.l.e.](16LE)
  20 String8          0    7    0 y             00 r[7]='y'
REG[7] =   t2[y.](16LE)
  21 String8          0    8    0 y             00 r[8]='y'
REG[8] =   t2[y.](16LE)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  23 String8          0   10    0 CREATE TABLE y(t2 int, t3 int, t4 int) 00 r[10]='CREATE TABLE y(t2 int, t3 int, t4 int)'
REG[10] =   t76[C.R.E.A.T.E. .T](16LE)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s98[072111110181257400610062006C0065.!....%t.a.b.l.e](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s98[072111110181257400610062006C0065.!....%t.a.b.l.e](8)
REG[5] =  i:4
  26 Close            1    0    0               00 
  27 SetCookie        0    1    4               00 
  28 ParseSchema      0    0    0 tbl_name='y' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 y             00 r[2]='y'
REG[2] =   t2[y.](16LE)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t14[t.r.i.g.g.e.r.](16LE)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t.1.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y.](16LE)
REG[1] =   s4[t.1.](16LE)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t.1.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y.](16LE)
REG[1] =   s4[t.1.](16LE)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[x.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y.](16LE)
REG[1] =   s2[x.](16LE)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[y.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[y.](16LE)
REG[1] =   s2[y.](16LE)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s10[t.a.b.l.e.](16LE)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t14[t.r.i.g.g.e.r.](16LE)
REG[3] =   s10[t.a.b.l.e.](16LE)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[y.](16LE)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s76[C.R.E.A.T.E. .T](16LE)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[y.](16LE)
REG[6] =  i:3
REG[7] =   s76[C.R.E.A.T.E. .T](16LE)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [CREATE TRIGGER t1 INSTEAD OF DELETE ON x
      BEGIN
        DELETE FROM t1 WHERE b=old.b;
      END;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    1    4 0             01 usesStmtJournal=0
  15 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  16 Goto             0    1    0               00 
   1 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   3 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t14[t.r.i.g.g.e.r.](16LE)
   4 String8          0    3    0 t1            00 r[3]='t1'
REG[3] =   t4[t.1.](16LE)
   5 String8          0    4    0 x             00 r[4]='x'
REG[4] =   t2[x.](16LE)
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 String8          0    6    0 CREATE TRIGGER t1 INSTEAD OF DELETE ON x
      BEGIN
        DELETE FROM t1 WHERE b=old.b;
      END 00 r[6]='CREATE TRIGGER t1 INSTEAD OF DELETE ON x
      BEGIN
        DELETE FROM t1 WHERE b=old.b;
  
REG[6] =   t200[C.R.E.A.T.E. .T](16LE)
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
REG[7] =  s227[0729151108831D740072006900670067.).....t.r.i.g.g](8)
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
REG[7] =  s227[0729151108831D740072006900670067.).....t.r.i.g.g](8)
REG[1] =  i:5
  10 Close            0    0    0               00 
  11 SetCookie        0    1    5               00 
  12 ParseSchema      0    0    0 type='trigger' AND name='t1' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    5 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t14[t.r.i.g.g.e.r.](16LE)
  19 String8          0    4    0 t1            00 r[4]='t1'
REG[4] =   t4[t.1.](16LE)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s10[t.a.b.l.e.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t14[t.r.i.g.g.e.r.](16LE)
REG[1] =   s10[t.a.b.l.e.](16LE)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s14[t.r.i.g.g.e.r.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t14[t.r.i.g.g.e.r.](16LE)
REG[1] =   s14[t.r.i.g.g.e.r.](16LE)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s14[n.u.m.b.e.r.s.](16LE)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t4[t.1.](16LE)
REG[3] =   s14[n.u.m.b.e.r.s.](16LE)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s8[v.i.e.w.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t14[t.r.i.g.g.e.r.](16LE)
REG[1] =   s8[v.i.e.w.](16LE)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s10[t.a.b.l.e.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t14[t.r.i.g.g.e.r.](16LE)
REG[1] =   s10[t.a.b.l.e.](16LE)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s14[t.r.i.g.g.e.r.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t14[t.r.i.g.g.e.r.](16LE)
REG[1] =   s14[t.r.i.g.g.e.r.](16LE)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s4[t.1.](16LE)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t4[t.1.](16LE)
REG[3] =   s4[t.1.](16LE)
   9 Copy             3    5    0               00 r[5]=r[3]
REG[5] =   s4[t.1.](16LE)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:0
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s200[C.R.E.A.T.E. .T](16LE)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s4[t.1.](16LE)
REG[6] =  i:0
REG[7] =   s200[C.R.E.A.T.E. .T](16LE)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [;
SELECT b FROM (SELECT b FROM t1 ORDER BY b LIMIT 2) WHERE b=1;]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    0    5 0             01 usesStmtJournal=0
  32 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  33 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  34 Goto             0    1    0               00 
   1 InitCoroutine    1   22    2               00 sqlite_sq_1114B10
  22 Explain          0    0    0 SCAN SUBQUERY 1 00 
  23 InitCoroutine    1    0    2               00 
  24 Yield            1   30    0               00 next row of "sqlite_sq_1114B10"
REG[1] =  i:1
REG[1] =  i:24
   2 OpenEphemeral    2    3    0 k(1,B)        00 nColumn=3
   3 Integer          2    2    0               00 r[2]=2; LIMIT counter
REG[2] =  i:2
   4 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
   5 Explain          1    0    0 SCAN TABLE t1 00 
   6 Rewind           1   16    0               00 
   7 Column           1    1    5               00 r[5]=t1.b
REG[5] =   s2[2.](16LE)
   8 Copy             5    3    0               00 r[3]=r[5]
REG[3] =   s2[2.](16LE)
   9 Sequence         2    4    0               00 r[4]=cursor[2].ctr++
REG[4] =  i:0
  10 MakeRecord       3    3    6               00 r[6]=mkrec(r[3..5])
REG[6] =  s8[0411081132003200....2.2.](8)
  11 IdxInsert        2    6    0               00 key=r[6]
REG[6] =  s8[0411081132003200....2.2.](8)
  12 IfNotZero        2   15    1               00 if r[2]!=0 then r[2]-=1, goto 15
REG[2] =  i:2
  15 Next             1    7    0               01 
  16 Close            1    0    0               00 
  17 Sort             2   21    0               00 
  18 Column           2    2    5               00 r[5]=b
REG[5] =   s2[2.](16LE)
  19 Yield            1    0    0               00 
REG[1] =  i:24
REG[1] =  i:19
  25 Copy             5    7    0               00 r[7]=r[5]; sqlite_sq_1114B10.b
REG[7] =   s2[2.](16LE)
  26 Ne               8   29    7 (BINARY)      52 if r[8]!=r[7] goto 29
REG[8] =  i:1
REG[7] =   s2[2.](16LE)
  29 Goto             0   24    0               00 
  24 Yield            1   30    0               00 next row of "sqlite_sq_1114B10"
REG[1] =  i:19
REG[1] =  i:24
  20 Next             2   18    0               00 
  21 EndCoroutine     1    0    0               00 
REG[1] =  i:24
  30 Halt             0    0    0               00 
SQL: [PRAGMA auto_vacuum = 1;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [PRAGMA writable_schema = 1;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [ANALYZE;]
VDBE Trace:
   0 Init             0   49    0               00 Start at 49
  49 Transaction      0    1    5 0             01 usesStmtJournal=0
  50 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  51 TableLock        0    3    0 y             00 iDb=0 root=3 write=0
  52 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  53 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](16LE)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](16LE)
REG[1] =  i:6
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        3    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:6
  16 NotExists        3   18    1               00 intkey=r[1]; pk
REG[1] =  i:6
  17 Rowid            3    5    0               00 r[5]=rowid
REG[5] =  i:6
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:6
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t10[t.a.b.l.e.](16LE)
  20 String8          0    7    0 sqlite_stat1  00 r[7]='sqlite_stat1'
REG[7] =   t24[s.q.l.i.t.e._.s](16LE)
  21 String8          0    8    0 sqlite_stat1  00 r[8]='sqlite_stat1'
REG[8] =   t24[s.q.l.i.t.e._.s](16LE)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  23 String8          0   10    0 CREATE TABLE sqlite_stat1(tbl,idx,stat) 00 r[10]='CREATE TABLE sqlite_stat1(tbl,idx,stat)'
REG[10] =   t78[C.R.E.A.T.E. .T](16LE)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s144[07213D3D0181297400610062006C0065.!==..)t.a.b.l.e](8)
  25 Insert           3   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s144[07213D3D0181297400610062006C0065.!==..)t.a.b.l.e](8)
REG[5] =  i:6
  26 Close            3    0    0               00 
  27 SetCookie        0    1    6               00 
  28 ParseSchema      0    0    0 tbl_name='sqlite_stat1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 sqlite_stat1  00 r[2]='sqlite_stat1'
REG[2] =   t24[s.q.l.i.t.e._.s](16LE)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t14[t.r.i.g.g.e.r.](16LE)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t.1.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t24[s.q.l.i.t.e._.s](16LE)
REG[1] =   s4[t.1.](16LE)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t.1.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t24[s.q.l.i.t.e._.s](16LE)
REG[1] =   s4[t.1.](16LE)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[x.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t24[s.q.l.i.t.e._.s](16LE)
REG[1] =   s2[x.](16LE)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[y.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t24[s.q.l.i.t.e._.s](16LE)
REG[1] =   s2[y.](16LE)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[x.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t24[s.q.l.i.t.e._.s](16LE)
REG[1] =   s2[x.](16LE)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s24[s.q.l.i.t.e._.s](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t24[s.q.l.i.t.e._.s](16LE)
REG[1] =   s24[s.q.l.i.t.e._.s](16LE)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s10[t.a.b.l.e.](16LE)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t14[t.r.i.g.g.e.r.](16LE)
REG[3] =   s10[t.a.b.l.e.](16LE)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s24[s.q.l.i.t.e._.s](16LE)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s78[C.R.E.A.T.E. .T](16LE)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s24[s.q.l.i.t.e._.s](16LE)
REG[6] =  i:4
REG[7] =   s78[C.R.E.A.T.E. .T](16LE)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 OpenWrite        0    2    0 3             10 root=2 iDb=0; sqlite_stat1
  30 OpenRead         4    3    0 3             00 root=3 iDb=0; y
  31 String8          0   16    0 y             00 r[16]='y'; y
REG[16] =   t2[y.](16LE)
  32 Count            4   18    0               00 r[18]=count()
REG[18] =  i:0
  33 IfNot           18   38    0               00 
REG[18] =  i:0
  38 OpenRead         4    2    0 2             00 root=2 iDb=0; t1
  39 String8          0   16    0 t1            00 r[16]='t1'; t1
REG[16] =   t4[t.1.](16LE)
  40 Count            4   18    0               00 r[18]=count()
REG[18] =  i:1
  41 IfNot           18   46    0               00 
REG[18] =  i:1
  42 Null             0   17    0               00 r[17]=NULL
REG[17] =  NULL
  43 MakeRecord      16    3   15 BBB           00 r[15]=mkrec(r[16..18])
REG[15] =  s10[04150011740031003100....t.1.1.](8)
  44 NewRowid         0   12    0               00 r[12]=rowid
REG[12] =  i:1
  45 Insert           0   15   12               08 intkey=r[12] data=r[15]
REG[15] =  s10[04150011740031003100....t.1.1.](8)
REG[12] =  i:1
  46 LoadAnalysis     0    0    0               00 
SQL: [SELECT tbl,idx,stat FROM 'main'.sqlite_stat1]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    6 0             01 usesStmtJournal=0
  12 TableLock        0    4    0 sqlite_stat1  00 iDb=0 root=4 write=0
  13 Goto             0    1    0               00 
   1 OpenRead         0    4    0 3             00 root=4 iDb=0; sqlite_stat1
   2 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_stat1.tbl
REG[1] =   s4[t.1.](16LE)
   5 Column           0    1    2               00 r[2]=sqlite_stat1.idx
REG[2] =  NULL
   6 Column           0    2    3               00 r[3]=sqlite_stat1.stat
REG[3] =   s2[1.](16LE)
   7 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s4[t.1.](16LE)
REG[2] =  NULL
REG[3] =   s2[1.](16LE)
   8 Next             0    4    0               01 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
  47 Expire           0    0    0               00 
  48 Halt             0    0    0               00 
SQL: [;
SELECT b FROM (SELECT b FROM t1 ORDER BY b) WHERE b=1;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    6 0             01 usesStmtJournal=0
  13 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  14 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  15 Goto             0    1    0               00 
   1 Noop             2    3    0               00 
   2 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           1   10    0               00 
   5 Column           1    1    1               00 r[1]=t1.b
REG[1] =   s2[2.](16LE)
   6 Ne               2    9    1 (BINARY)      52 if r[2]!=r[1] goto 9
REG[2] =  i:1
REG[1] =   s2[2.](16LE)
   9 Next             1    5    0               01 
  10 Close            1    0    0               00 
  11 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f0598a0c859 in __GI_abort () at abort.c:79
#2  0x00007f0598a0c729 in __assert_fail_base (fmt=0x7f0598ba2588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21ece3 "p->rSetup>=pTemplate->rSetup", file=0x222c23 "sqlite3.c", line=127883, 
    function=<optimized out>) at assert.c:92
#3  0x00007f0598a1dfd6 in __GI___assert_fail (assertion=0x21ece3 "p->rSetup>=pTemplate->rSetup", file=0x222c23 "sqlite3.c", line=127883, function=0x2266b3 "WhereLoop **whereLoopFindLesser(WhereLoop **, const WhereLoop *)")
    at assert.c:101
#4  0x00000000003aaadd in whereLoopFindLesser (ppPrev=<optimized out>, pTemplate=<optimized out>) at sqlite3.c:127883
#5  0x00000000003a9d1f in whereLoopInsert (pBuilder=<optimized out>, pTemplate=0x11201b8) at sqlite3.c:127980
#6  0x000000000039b44f in whereLoopAddBtree (pBuilder=<optimized out>, mPrereq=0) at sqlite3.c:128680
#7  0x000000000038dbe4 in sqlite3WhereBegin (pParse=<optimized out>, pTabList=<optimized out>, pWhere=<optimized out>, pOrderBy=<optimized out>, pDistinctSet=0x0, wctrlFlags=0, iAuxArg=0) at sqlite3.c:129185
#8  0x000000000032e57f in sqlite3Select (pParse=<optimized out>, p=<optimized out>, pDest=<optimized out>) at sqlite3.c:118477
#9  0x00000000003034ae in yy_reduce (yypParser=0x1123d40, yyruleno=<optimized out>) at sqlite3.c:133175
#10 0x00000000002fef8e in sqlite3Parser (yyp=0x1123d40, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#11 0x00000000002fc544 in sqlite3RunParser (pParse=0x1104320, 
    zSql=0x1121350 ";\nSELECT count(*) FROM (SELECT b FROM t1 ORDER BY b) WHERE b=1;CREATE INDEX t5 ON t1(a);CREATE INDEX t6 ON t1(a);;\nSELECT name, rootpage, sql FROM \"main\".sqlite_master ORDER BY rowid;SELECT name, root"..., pzErrMsg=0x7fff891dc1a8) at sqlite3.c:135186
#12 0x00000000002fac4e in sqlite3Prepare (db=0x1101850, 
    zSql=0x1104c14 ";\nSELECT count(*) FROM (SELECT b FROM t1 ORDER BY b) WHERE b=1;CREATE INDEX t5 ON t1(a);CREATE INDEX t6 ON t1(a);;\nSELECT name, rootpage, sql FROM \"main\".sqlite_master ORDER BY rowid;SELECT name, root"..., nBytes=<optimized out>, saveSqlFlag=1, pReprepare=<optimized out>, ppStmt=0x7fff891dc2d8, pzTail=0x7fff891dc2c0) at sqlite3.c:112589
#13 0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0x1101850, 
    zSql=0x1104c14 ";\nSELECT count(*) FROM (SELECT b FROM t1 ORDER BY b) WHERE b=1;CREATE INDEX t5 ON t1(a);CREATE INDEX t6 ON t1(a);;\nSELECT name, rootpage, sql FROM \"main\".sqlite_master ORDER BY rowid;SELECT name, root"..., nBytes=3818, saveSqlFlag=1, pOld=0x0, ppStmt=<optimized out>, pzTail=0x7fff891dc2c0) at sqlite3.c:112688
#14 0x000000000028f38c in sqlite3_prepare_v2 (db=0x2, zSql=0x7fff891db6b0 "", nBytes=0, ppStmt=0x7fff891dc2d8, pzTail=<optimized out>) at sqlite3.c:112764
#15 0x000000000024b100 in main (argc=1, argv=0x7fff891dc488) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 9249] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
