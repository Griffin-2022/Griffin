GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000550,sig:06,src:005348+010601,time:35569654,execs:4093082,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT typeof( 
  CAST(X'2D31313235383939393036383432363234' AS INTEGER) 
),  
  CAST(X'2D31313235383939393036383432363234' AS INTEGER) 
;]
VDBE Trace:
   0 Init             0    6    0               00 Start at 6
   6 Blob            17    3    0 -1125899906842624 00 r[3]=-1125899906842624 (len=17)
REG[3] =  t17[2D313132353839393930363834323632-112589990684262](8)
   7 Cast             3   68    0               00 affinity(r[3])
REG[3] =  t17[2D313132353839393930363834323632-112589990684262](8)
   8 Goto             0    1    0               00 
   1 Function0        1    3    1 typeof(1)     01 r[1]=func(r[3])
REG[3] =  i:-1125899906842624
REG[1] =   t7[integer](8)
   2 Blob            17    2    0 -1125899906842624 00 r[2]=-1125899906842624 (len=17)
REG[2] =  t17[2D313132353839393930363834323632-112589990684262](8)
   3 Cast             2   68    0               00 affinity(r[2])
REG[2] =  t17[2D313132353839393930363834323632-112589990684262](8)
   4 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =   t7[integer](8)
REG[2] =  i:-1125899906842624
   5 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [ROLLBACK;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       1    1    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    0 0             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
CREATE TABLE t1(a INTEGER PRIMARY KEY, b);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    0 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:1
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:1
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:1
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t1            00 r[7]='t1'
REG[7] =   t2[t1](8)
  21 String8          0    8    0 t1            00 r[8]='t1'
REG[8] =   t2[t1](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  23 String8          0   10    0 CREATE TABLE t1(a INTEGER PRIMARY KEY, b) 00 r[10]='CREATE TABLE t1(a INTEGER PRIMARY KEY, b)'
REG[10] =   t41[CREATE TABLE t1](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s57[06171111015F7461626C657431743102....._tablet1t1.](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s57[06171111015F7461626C657431743102....._tablet1t1.](8)
REG[5] =  i:1
  26 Close            1    0    0               00 
  27 SetCookie        0    1    1               00 
  28 ParseSchema      0    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    1 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s41[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:2
REG[7] =   s41[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    1 0             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s41[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s41[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [PRAGMA default_cache_size;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Transaction      0    0    0               00 
   2 ReadCookie       0    1    3               00 
REG[1] =  i:0
   3 IfPos            1    9    0               00 if r[1]>0 then r[1]-=0, goto 9
REG[1] =  i:0
   4 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   5 Subtract         1    2    1               00 r[1]=r[2]-r[1]
REG[1] =  i:0
REG[2] =  i:0
REG[1] =  i:0
   6 IfPos            1    9    0               00 if r[1]>0 then r[1]-=0, goto 9
REG[1] =  i:0
   7 Integer       -2000    1    0               00 r[1]=-2000
REG[1] =  i:-2000
   8 Noop             0    0    0               00 
   9 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:-2000
  10 Halt             0    0    0               00 
SQL: [SELECT typeof( 
  CAST(X'2D31313235383939393036383432363234' AS INTEGER) 
),  
  CAST(X'2D31313235383939393036383432363234' AS INTEGER) 
;]
VDBE Trace:
   0 Init             0    6    0               00 Start at 6
   6 Blob            17    3    0 -1125899906842624 00 r[3]=-1125899906842624 (len=17)
REG[3] =  t17[2D313132353839393930363834323632-112589990684262](8)
   7 Cast             3   68    0               00 affinity(r[3])
REG[3] =  t17[2D313132353839393930363834323632-112589990684262](8)
   8 Goto             0    1    0               00 
   1 Function0        1    3    1 typeof(1)     01 r[1]=func(r[3])
REG[3] =  i:-1125899906842624
REG[1] =   t7[integer](8)
   2 Blob            17    2    0 -1125899906842624 00 r[2]=-1125899906842624 (len=17)
REG[2] =  t17[2D313132353839393930363834323632-112589990684262](8)
   3 Cast             2   68    0               00 affinity(r[2])
REG[2] =  t17[2D313132353839393930363834323632-112589990684262](8)
   4 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =   t7[integer](8)
REG[2] =  i:-1125899906842624
   5 Halt             0    0    0               00 
SQL: [CREATE UNIQUE INDEX numbers 
      ON t1(a, a, a);]
VDBE Trace:
   0 Init             0   39    0               00 Start at 39
  39 Transaction      0    1    1 0             01 usesStmtJournal=1
  40 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  41 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  42 Goto             0    1    0               00 
   1 Noop             0   38    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:3
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:2
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 numbers       00 r[4]='numbers'
REG[4] =   t7[numbers](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:3
   9 String8          0    7    0 CREATE UNIQUE INDEX numbers 
      ON t1(a, a, a) 00 r[7]='CREATE UNIQUE INDEX numbers 
      ON t1(a, a, a)'
REG[7] =   t49[CREATE UNIQUE I](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s70[06171B11016F696E6465786E756D6265.....oindexnumbe](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s70[06171B11016F696E6465786E756D6265.....oindexnumbe](8)
REG[2] =  i:2
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    3 k(3,,,)       00 
  14 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  15 Rewind           1   23    0               00 
  23 OpenWrite        2    1    0 k(3,,,)       11 root=1 iDb=0
  24 SorterSort       3   32    0               00 
  32 Close            1    0    0               00 
  33 Close            2    0    0               00 
  34 Close            3    0    0               00 
  35 SetCookie        0    1    2               00 
  36 ParseSchema      0    0    0 name='numbers' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 numbers       00 r[2]='numbers'
REG[2] =   t7[numbers](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s7[numbers](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s7[numbers](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s49[CREATE UNIQUE I](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s7[numbers](8)
REG[6] =  i:3
REG[7] =   s49[CREATE UNIQUE I](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  37 Expire           0    0    0               00 
  38 Halt             0    0    0               00 
SQL: [VACUUM;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Vacuum           0    0    0               00 
SQL: [ATTACH '' AS vacuum_db;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0               00 r[1]=''
REG[1] =   t0[](8)
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
REG[2] =   t9[vacuum_db](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t0[](8)
REG[2] =   t9[vacuum_db](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      2    0    0 0             00 usesStmtJournal=0
  13 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [PRAGMA vacuum_db.synchronous=OFF]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [SELECT 'CREATE TABLE vacuum_db.' || substr(sql,14)   FROM sqlite_master WHERE type='table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    2 0             01 usesStmtJournal=0
  20 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  21 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  22 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  23 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  24 String8          0    8    0 CREATE TABLE vacuum_db. 00 r[8]='CREATE TABLE vacuum_db.'
REG[8] =   t23[CREATE TABLE va](8)
  25 Integer         14   10    0               00 r[10]=14
REG[10] =  i:14
  26 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   17    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t1](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[t1](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:2
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:2
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s41[CREATE TABLE t1](8)
  13 Function0        2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s41[CREATE TABLE t1](8)
REG[10] =  i:14
REG[5] =   s28[t1(a INTEGER PR](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s28[t1(a INTEGER PR](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s51[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s51[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.t1(a INTEGER PRIMARY KEY, b)]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      2    1    0 0             01 usesStmtJournal=0
  31 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        2    2    4               00 
   4 SetCookie        2    5    1               00 
   5 CreateTable      2    2    0               00 r[2]=root iDb=2
REG[2] =  i:2
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:1
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:1
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:1
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t1            00 r[7]='t1'
REG[7] =   t2[t1](8)
  21 String8          0    8    0 t1            00 r[8]='t1'
REG[8] =   t2[t1](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  23 String8          0   10    0 CREATE TABLE t1(a INTEGER PRIMARY KEY, b) 00 r[10]='CREATE TABLE t1(a INTEGER PRIMARY KEY, b)'
REG[10] =   t41[CREATE TABLE t1](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s57[06171111015F7461626C657431743102....._tablet1t1.](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s57[06171111015F7461626C657431743102....._tablet1t1.](8)
REG[5] =  i:1
  26 Close            1    0    0               00 
  27 SetCookie        2    1    1               00 
  28 ParseSchema      2    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    1 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s41[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:2
REG[7] =   s41[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  16 Next             0    4    0               01 
  17 Close            0    0    0               00 
  18 Halt             0    0    0               00 
SQL: [SELECT 'CREATE INDEX vacuum_db.' || substr(sql,14)  FROM sqlite_master WHERE sql LIKE 'CREATE INDEX %' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    2 0             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE INDEX % 00 r[2]='CREATE INDEX %'
REG[2] =   t14[CREATE INDEX %](8)
  17 String8          0    5    0 CREATE INDEX vacuum_db. 00 r[5]='CREATE INDEX vacuum_db.'
REG[5] =   t23[CREATE INDEX va](8)
  18 Integer         14    7    0               00 r[7]=14
REG[7] =  i:14
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s41[CREATE TABLE t1](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s41[CREATE TABLE t1](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s49[CREATE UNIQUE I](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s49[CREATE UNIQUE I](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'CREATE UNIQUE INDEX vacuum_db.' || substr(sql,21)   FROM sqlite_master WHERE sql LIKE 'CREATE UNIQUE INDEX %']
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    2 0             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE UNIQUE INDEX % 00 r[2]='CREATE UNIQUE INDEX %'
REG[2] =   t21[CREATE UNIQUE I](8)
  17 String8          0    5    0 CREATE UNIQUE INDEX vacuum_db. 00 r[5]='CREATE UNIQUE INDEX vacuum_db.'
REG[5] =   t30[CREATE UNIQUE I](8)
  18 Integer         21    7    0               00 r[7]=21
REG[7] =  i:21
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s41[CREATE TABLE t1](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s41[CREATE TABLE t1](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s49[CREATE UNIQUE I](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s49[CREATE UNIQUE I](8)
REG[1] =  i:1
   6 IfNot            1   11    1               00 
REG[1] =  i:1
   7 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s49[CREATE UNIQUE I](8)
   8 Function0        2    6    1 substr(2)     02 r[1]=func(r[6..7])
REG[6] =   s49[CREATE UNIQUE I](8)
REG[7] =  i:21
REG[1] =   s29[numbers .      ](8)
   9 Concat           1    5    4               00 r[4]=r[5]+r[1]
REG[1] =   s29[numbers .      ](8)
REG[5] =   t30[CREATE UNIQUE I](8)
REG[4] =   s59[CREATE UNIQUE I](8)
  10 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s59[CREATE UNIQUE I](8)
SQL: [CREATE UNIQUE INDEX vacuum_db.numbers 
      ON t1(a, a, a)]
VDBE Trace:
   0 Init             0   39    0               00 Start at 39
  39 Transaction      2    1    1 0             01 usesStmtJournal=1
  40 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  41 TableLock        2    2    1 t1            00 iDb=2 root=2 write=1
  42 Goto             0    1    0               00 
   1 Noop             0   38    0               00 
   2 CreateIndex      2    1    0               00 r[1]=root iDb=2
REG[1] =  i:3
   3 OpenWrite        0    1    2 5             00 root=1 iDb=2; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:2
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 numbers       00 r[4]='numbers'
REG[4] =   t7[numbers](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:3
   9 String8          0    7    0 CREATE UNIQUE INDEX numbers 
      ON t1(a, a, a) 00 r[7]='CREATE UNIQUE INDEX numbers 
      ON t1(a, a, a)'
REG[7] =   t49[CREATE UNIQUE I](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s70[06171B11016F696E6465786E756D6265.....oindexnumbe](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s70[06171B11016F696E6465786E756D6265.....oindexnumbe](8)
REG[2] =  i:2
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    3 k(3,,,)       00 
  14 OpenRead         1    2    2 2             00 root=2 iDb=2; t1
  15 Rewind           1   23    0               00 
  23 OpenWrite        2    1    2 k(3,,,)       11 root=1 iDb=2
  24 SorterSort       3   32    0               00 
  32 Close            1    0    0               00 
  33 Close            2    0    0               00 
  34 Close            3    0    0               00 
  35 SetCookie        2    1    2               00 
  36 ParseSchema      2    0    0 name='numbers' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    2 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 numbers       00 r[2]='numbers'
REG[2] =   t7[numbers](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s7[numbers](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s7[numbers](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s49[CREATE UNIQUE I](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s7[numbers](8)
REG[6] =  i:3
REG[7] =   s49[CREATE UNIQUE I](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  37 Expire           0    0    0               00 
  38 Halt             0    0    0               00 
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';'FROM main.sqlite_master WHERE type = 'table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    0    2 0             01 usesStmtJournal=0
  25 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  26 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  27 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  28 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  29 String8          0   10    0 INSERT INTO vacuum_db. 00 r[10]='INSERT INTO vacuum_db.'
REG[10] =   t22[INSERT INTO vac](8)
  30 String8          0   13    0  SELECT * FROM main. 00 r[13]=' SELECT * FROM main.'
REG[13] =   t20[ SELECT * FROM ](8)
  31 String8          0   14    0 ;             00 r[14]=';'
REG[14] =   t1[;](8)
  32 Goto             0    1    0               00 
   1 OpenRead         0    1    0 4             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   22    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t1](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[t1](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:2
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:2
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[t1](8)
  13 Function0        0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s2[t1](8)
REG[11] =   z4['t1'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z4['t1'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s26[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s26[INSERT INTO vac](8)
REG[8] =   s46[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[t1](8)
  17 Function0        0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s2[t1](8)
REG[9] =   z4['t1'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z4['t1'](8)
REG[8] =   s46[INSERT INTO vac](8)
REG[5] =   s50[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s50[INSERT INTO vac](8)
REG[7] =   s51[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s51[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'t1' SELECT * FROM main.'t1';]
VDBE Trace:
   0 Init             0   22    0               00 Start at 22
  22 Transaction      0    0    2 0             01 usesStmtJournal=1
  23 Transaction      2    1    2 0             01 usesStmtJournal=1
  24 TableLock        2    2    1 t1            00 iDb=2 root=2 write=1
  25 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  26 Goto             0    1    0               00 
   1 OpenWrite        1    2    2 2             00 root=2 iDb=2; t1
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   3 Rewind           0   21    0               00 
  21 Halt             0    0    0               00 
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  21 Next             0    4    0               01 
  22 Close            0    0    0               00 
  23 Halt             0    0    0               00 
SQL: [SELECT 'DELETE FROM vacuum_db.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name='sqlite_sequence' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      2    0    2 0             01 usesStmtJournal=0
  15 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  16 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  17 String8          0    5    0 DELETE FROM vacuum_db. 00 r[5]='DELETE FROM vacuum_db.'
REG[5] =   t22[DELETE FROM vac](8)
  18 String8          0    8    0 ;             00 r[8]=';'
REG[8] =   t1[;](8)
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  11 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[numbers](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s7[numbers](8)
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name=='sqlite_sequence';]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      2    0    2 0             01 usesStmtJournal=0
  19 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  20 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  21 String8          0    7    0 INSERT INTO vacuum_db. 00 r[7]='INSERT INTO vacuum_db.'
REG[7] =   t22[INSERT INTO vac](8)
  22 String8          0   10    0  SELECT * FROM main. 00 r[10]=' SELECT * FROM main.'
REG[10] =   t20[ SELECT * FROM ](8)
  23 String8          0   11    0 ;             00 r[11]=';'
REG[11] =   t1[;](8)
  24 Goto             0    1    0               00 
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   16    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  15 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[numbers](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s7[numbers](8)
  15 Next             0    4    0               01 
  16 Close            0    0    0               00 
  17 Halt             0    0    0               00 
SQL: [INSERT INTO vacuum_db.sqlite_master   SELECT type, name, tbl_name, rootpage, sql    FROM main.sqlite_master   WHERE type='view' OR type='trigger'      OR (type='table' AND rootpage=0)]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    0    2 0             01 usesStmtJournal=0
  29 Transaction      2    1    2 0             01 usesStmtJournal=0
  30 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  31 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  32 String8          0    9    0 view          00 r[9]='view'
REG[9] =   t4[view](8)
  33 String8          0   11    0 trigger       00 r[11]='trigger'
REG[11] =   t7[trigger](8)
  34 String8          0   12    0 table         00 r[12]='table'
REG[12] =   t5[table](8)
  35 Integer          0   13    0               00 r[13]=0
REG[13] =  i:0
  36 Goto             0    1    0               00 
   1 InitCoroutine    7   20    2               00 
  20 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  21 Yield            7   26    0               00 
REG[7] =  i:1
REG[7] =  i:21
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   18    0               00 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[table](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[table](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[table](8)
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
REG[10] =  i:2
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
REG[13] =  i:0
REG[10] =  i:2
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[index](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[index](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[index](8)
  17 Next             0    5    0               01 
  18 Close            0    0    0               00 
  19 EndCoroutine     7    0    0               00 
REG[7] =  i:21
  26 Noop             1    0    0               00 
  27 Halt             0    0    0               00 
   2 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    3 1             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s41[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s41[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[numbers](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s49[CREATE UNIQUE I](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s7[numbers](8)
REG[2] =  i:3
REG[3] =   s49[CREATE UNIQUE I](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
ALTER TABLE t1 ADD x CHECK (x>x);]
VDBE Trace:
   0 Init             0   36    0               00 Start at 36
  36 Transaction      0    1    3 1             01 usesStmtJournal=0
  37 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  38 String8          0    9    0 table         00 r[9]='table'
REG[9] =   t5[table](8)
  39 String8          0   11    0 t1            00 r[11]='t1'
REG[11] =   t2[t1](8)
  40 Integer          1   14    0               00 r[14]=1
REG[14] =  i:1
  41 Integer         40   15    0               00 r[15]=40
REG[15] =  i:40
  42 String8          0   16    0 ,             00 r[16]=', '
REG[16] =   t2[, ](8)
  43 String8          0   17    0 x CHECK (x>x) 00 r[17]='x CHECK (x>x)'
REG[17] =   t13[x CHECK (x>x)](8)
  44 Integer         41   19    0               00 r[19]=41
REG[19] =  i:41
  45 Goto             0    1    0               00 
   1 SetCookie        0    1    4               00 
   2 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   3 OpenRead         0    1    0 2             00 root=1 iDb=0; sqlite_master
   4 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   5 Rewind           0   13    0               00 
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   7 Ne               9   12    8 (BINARY)      52 if r[9]!=r[8] goto 12
REG[9] =   t5[table](8)
REG[8] =   s5[table](8)
   8 Column           0    1   10               00 r[10]=sqlite_master.name
REG[10] =   s2[t1](8)
   9 Ne              11   12   10 (BINARY)      52 if r[11]!=r[10] goto 12
REG[11] =   t2[t1](8)
REG[10] =   s2[t1](8)
  10 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
  11 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
  12 Next             0    6    0               01 
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   7 Ne               9   12    8 (BINARY)      52 if r[9]!=r[8] goto 12
REG[9] =   t5[table](8)
REG[8] =   s5[index](8)
  12 Next             0    6    0               01 
  13 Close            0    0    0               00 
  14 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
  15 RowSetRead       1   31    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  16 NotExists        0   15    2               00 intkey=r[2]
REG[2] =  i:1
  17 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
  18 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t1](8)
  19 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
REG[5] =   s2[t1](8)
  20 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  21 Column           0    4   13               00 r[13]=sqlite_master.sql
REG[13] =   s41[CREATE TABLE t1](8)
  22 Function0        6   13   12 substr(3)     03 r[12]=func(r[13..15])
REG[13] =   s41[CREATE TABLE t1](8)
REG[14] =  i:1
REG[15] =  i:40
REG[12] =   s40[CREATE TABLE t1](8)
  23 Concat          16   12    8               00 r[8]=r[12]+r[16]
REG[16] =   t2[, ](8)
REG[12] =   s40[CREATE TABLE t1](8)
REG[8] =   s42[CREATE TABLE t1](8)
  24 Concat          17    8   10               00 r[10]=r[8]+r[17]
REG[17] =   t13[x CHECK (x>x)](8)
REG[8] =   s42[CREATE TABLE t1](8)
REG[10] =   s55[CREATE TABLE t1](8)
  25 Column           0    4   18               00 r[18]=sqlite_master.sql
REG[18] =   s41[CREATE TABLE t1](8)
  26 Function0        2   18    8 substr(2)     02 r[8]=func(r[18..19])
REG[18] =   s41[CREATE TABLE t1](8)
REG[19] =  i:41
REG[8] =   s1[)](8)
  27 Concat           8   10    7               00 r[7]=r[10]+r[8]
REG[8] =   s1[)](8)
REG[10] =   s55[CREATE TABLE t1](8)
REG[7] =   s56[CREATE TABLE t1](8)
  28 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s72[06171111017D7461626C657431743102.....}tablet1t1.](8)
  29 Insert           0    8    2               00 intkey=r[2] data=r[8]
REG[8] =  s72[06171111017D7461626C657431743102.....}tablet1t1.](8)
REG[2] =  i:1
  30 Goto             0   15    0               00 
  15 RowSetRead       1   31    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  31 Close            0    0    0               00 
  32 SetCookie        0    2    4               00 
  33 DropTable        0    0    0 t1            00 
  34 ParseSchema      0    0    0 tbl_name='t1' 00 
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    4 1             00 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  17 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:2
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s56[CREATE TABLE t1](8)
  10 ResultRow        3    3    0               00 output=r[3..5]
REG[3] =   s2[t1](8)
REG[4] =  i:2
REG[5] =   s56[CREATE TABLE t1](8)
  11 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s7[numbers](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:3
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s49[CREATE UNIQUE I](8)
  10 ResultRow        3    3    0               00 output=r[3..5]
REG[3] =   s7[numbers](8)
REG[4] =  i:3
REG[5] =   s49[CREATE UNIQUE I](8)
  11 Next             0    5    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
  35 Halt             0    0    0               00 
SQL: [;
SELECT a<a FROM t1;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    4 1             01 usesStmtJournal=0
  11 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  12 Goto             0    1    0               00 
   1 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   2 Explain          0    0    0 SCAN TABLE t1 00 
   3 Rewind           0    8    0               00 
   8 Close            0    0    0               00 
   9 Halt             0    0    0               00 
SQL: [;
INSERT INTO t1(oid,a,a) VALUES(34359738368,22,'0000000800000000');]
VDBE Trace:
   0 Init             0   26    0               00 Start at 26
  26 Transaction      0    1    4 1             01 usesStmtJournal=0
  27 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  28 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  29 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  30 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 3             00 root=2 iDb=0; t1
   2 OpenWrite        1    3    0 k(3,,,)       00 root=3 iDb=0; numbers
   3 String8          0    1    0 0000000800000000 00 r[1]='0000000800000000'
REG[1] =   t16[000000080000000](8)
   4 NotNull          1    6    0               00 if r[1]!=NULL goto 6
REG[1] =   t16[000000080000000](8)
   6 MustBeInt        1    0    0               00 
REG[1] =   t16[000000080000000](8)
   7 SoftNull         2    0    0               00 r[2]=NULL
   8 Gt               4   10    4 (BINARY)      51 if r[4]>r[4] goto 10
REG[4] =  NULL
REG[4] =  NULL
  10 NotExists        0   12    1               00 intkey=r[1]
REG[1] =  i:800000000
  12 Affinity         2    1    0 D             00 affinity(r[2])
  13 SCopy            1    7    0               00 r[7]=r[1]; a
REG[7] =  i:800000000
  14 SCopy            1    8    0               00 r[8]=r[1]; a
REG[8] =  i:800000000
  15 SCopy            1    9    0               00 r[9]=r[1]; a
REG[9] =  i:800000000
  16 IntCopy          1   10    0               00 r[10]=r[1]; rowid
REG[10] =  i:800000000
  17 MakeRecord       7    4    5               00 r[5]=mkrec(r[7..10]); for numbers
REG[5] =  s21[05040404042FAF08002FAF08002FAF08...../.../.../..](8)
  18 NoConflict       1   20    7 3             00 key=r[7..9]
REG[7] =  i:800000000
REG[8] =  i:800000000
REG[9] =  i:800000000
  20 IdxInsert        1    5    0               10 key=r[5]
REG[5] =  s21[05040404042FAF08002FAF08002FAF08...../.../.../..](8)
  21 MakeRecord       2    3    6               00 r[6]=mkrec(r[2..4])
REG[6] =  s4[04000000....](8)
  22 Insert           0    6    1 t1            13 intkey=r[1] data=r[6]
REG[6] =  s4[04000000....](8)
REG[1] =  i:800000000
  23 Close            0    0    0               00 
  24 Noop             1    0    0               00 
  25 Halt             0    0    0               00 
SQL: [;
SELECT b FROM t1 WHERE b='';]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    4 1             01 usesStmtJournal=0
  12 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  13 String8          0    2    0               00 r[2]=''
REG[2] =   t0[](8)
  14 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 Explain          0    0    0 SCAN TABLE t1 00 
   3 Rewind           0    9    0               00 
   4 Column           0    1    1               00 r[1]=t1.b
REG[1] =  NULL
   5 Ne               2    8    1 (BINARY)      51 if r[2]!=r[1] goto 8
REG[2] =   t0[](8)
REG[1] =  NULL
   8 Next             0    4    0               01 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
SQL: [;
PRAGMA threads = 3;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Int64            0    1    0 3             00 r[1]=3
REG[1] =  i:3
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:3
   3 Halt             0    0    0               00 
SQL: [;
UPDATE t1 SET b=1, b=2, b=3.0;]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      0    1    4 1             01 usesStmtJournal=0
  21 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  22 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:800000000
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:800000000
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 OpenWrite        0    2    0 3             00 root=2 iDb=0; t1
  10 RowSetRead       1   18    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:800000000
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:800000000
  12 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  13 Real             0    4    0 3             00 r[4]=3
REG[4] =  r:3
  14 Column           0    2    5               00 r[5]=t1.x
REG[5] =  NULL
  15 MakeRecord       3    3    6 D             00 r[6]=mkrec(r[3..5])
REG[6] =  s12[040007004008000000000000....@.......](8)
  16 Insert           0    6    2 t1            05 intkey=r[2] data=r[6]
REG[6] =  s12[040007004008000000000000....@.......](8)
REG[2] =  i:800000000
  17 Goto             0   10    0               00 
  10 RowSetRead       1   18    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:800000000
  18 Noop             0    0    0               00 
  19 Halt             0    0    0               00 
SQL: [;
SELECT x==x FROM t1;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    4 1             01 usesStmtJournal=0
  11 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  12 Goto             0    1    0               00 
   1 OpenRead         0    2    0 3             00 root=2 iDb=0; t1
   2 Explain          0    0    0 SCAN TABLE t1 00 
   3 Rewind           0    8    0               00 
   4 Column           0    2    2               00 r[2]=t1.x
REG[2] =  NULL
   5 Eq               2    1    2 (BINARY)      61 if r[2]==r[2] goto 1
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   6 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   7 Next             0    4    0               01 
   8 Close            0    0    0               00 
   9 Halt             0    0    0               00 
SQL: [;
INSERT INTO t1(oid,a,a) VALUES(4,31,'0000000000000004');]
VDBE Trace:
   0 Init             0   26    0               00 Start at 26
  26 Transaction      0    1    4 1             01 usesStmtJournal=0
  27 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  28 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  29 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  30 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 3             00 root=2 iDb=0; t1
   2 OpenWrite        1    3    0 k(3,,,)       00 root=3 iDb=0; numbers
   3 String8          0    1    0 0000000000000004 00 r[1]='0000000000000004'
REG[1] =   t16[000000000000000](8)
   4 NotNull          1    6    0               00 if r[1]!=NULL goto 6
REG[1] =   t16[000000000000000](8)
   6 MustBeInt        1    0    0               00 
REG[1] =   t16[000000000000000](8)
   7 SoftNull         2    0    0               00 r[2]=NULL
   8 Gt               4   10    4 (BINARY)      51 if r[4]>r[4] goto 10
REG[4] =  NULL
REG[4] =  NULL
  10 NotExists        0   12    1               00 intkey=r[1]
REG[1] =  i:4
  12 Affinity         2    1    0 D             00 affinity(r[2])
  13 SCopy            1    7    0               00 r[7]=r[1]; a
REG[7] =  i:4
  14 SCopy            1    8    0               00 r[8]=r[1]; a
REG[8] =  i:4
  15 SCopy            1    9    0               00 r[9]=r[1]; a
REG[9] =  i:4
  16 IntCopy          1   10    0               00 r[10]=r[1]; rowid
REG[10] =  i:4
  17 MakeRecord       7    4    5               00 r[5]=mkrec(r[7..10]); for numbers
REG[5] =  s9[050101010104040404.........](8)
  18 NoConflict       1   20    7 3             00 key=r[7..9]
REG[7] =  i:4
REG[8] =  i:4
REG[9] =  i:4
  20 IdxInsert        1    5    0               10 key=r[5]
REG[5] =  s9[050101010104040404.........](8)
  21 MakeRecord       2    3    6               00 r[6]=mkrec(r[2..4])
REG[6] =  s4[04000000....](8)
  22 Insert           0    6    1 t1            13 intkey=r[1] data=r[6]
REG[6] =  s4[04000000....](8)
REG[1] =  i:4
  23 Close            0    0    0               00 
  24 Noop             1    0    0               00 
  25 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_76;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_76         00 
   2 Halt             0    0    0               00 
SQL: [;
CREATE TRIGGER temp.y AFTER UPDATE ON t1 BEGIN
    UPDATE t1 SET a=a+1;
  END;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      1    1    0 1             01 usesStmtJournal=0
  15 TableLock        1    1    1 sqlite_temp_master 00 iDb=1 root=1 write=1
  16 Goto             0    1    0               00 
   1 OpenWrite        0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   4 String8          0    3    0 y             00 r[3]='y'
REG[3] =   t1[y](8)
   5 String8          0    4    0 t1            00 r[4]='t1'
REG[4] =   t2[t1](8)
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 String8          0    6    0 CREATE TRIGGER y AFTER UPDATE ON t1 BEGIN
    UPDATE t1 SET a=a+1;
  END 00 r[6]='CREATE TRIGGER y AFTER UPDATE ON t1 BEGIN
    UPDATE t1 SET a=a+1;
  END'
REG[6] =   t72[CREATE TRIGGER ](8)
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
REG[7] =  s90[071B0F1101811D747269676765727974.......triggeryt](8)
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
REG[7] =  s90[071B0F1101811D747269676765727974.......triggeryt](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 SetCookie        1    1    1               00 
  12 ParseSchema      1    0    0 type='trigger' AND name='y' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      1    0    1 1             00 usesStmtJournal=0
  17 TableLock        1    1    0 sqlite_temp_master 00 iDb=1 root=1 write=0
  18 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  19 String8          0    4    0 y             00 r[4]='y'
REG[4] =   t1[y](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          0    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_temp_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    3               00 r[3]=sqlite_temp_master.name
REG[3] =   s1[y](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t1[y](8)
REG[3] =   s1[y](8)
   9 Copy             3    5    0               00 r[5]=r[3]
REG[5] =   s1[y](8)
  10 Column           0    3    6               00 r[6]=sqlite_temp_master.rootpage
REG[6] =  i:0
  11 Column           0    4    7               00 r[7]=sqlite_temp_master.sql
REG[7] =   s72[CREATE TRIGGER ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[y](8)
REG[6] =  i:0
REG[7] =   s72[CREATE TRIGGER ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [;
SELECT b=1 AND b=1 FROM t1;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    4 1             01 usesStmtJournal=0
  13 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  14 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  15 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 Explain          0    0    0 SCAN TABLE t1 00 
   3 Rewind           0   10    0               00 
   4 Column           0    1    3               00 r[3]=t1.b
REG[3] =  NULL
   5 Eq               4    2    3 (BINARY)      61 if r[4]==r[3] goto 2
REG[4] =  i:1
REG[3] =  NULL
REG[2] =  NULL
   6 Eq               4    5    3 (BINARY)      61 if r[4]==r[3] goto 5
REG[4] =  i:1
REG[3] =  NULL
REG[5] =  NULL
   7 And              5    2    1               00 r[1]=(r[5] && r[2])
REG[5] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   8 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   9 Next             0    4    0               01 
   4 Column           0    1    3               00 r[3]=t1.b
REG[3] =  r:3
   5 Eq               4    2    3 (BINARY)      61 if r[4]==r[3] goto 2
REG[4] =  i:1
REG[3] =  r:3
REG[2] =  i:0
   6 Eq               4    5    3 (BINARY)      61 if r[4]==r[3] goto 5
REG[4] =  i:1
REG[3] =  r:3
REG[5] =  i:0
   7 And              5    2    1               00 r[1]=(r[5] && r[2])
REG[5] =  i:0
REG[2] =  i:0
REG[1] =  i:0
   8 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   9 Next             0    4    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [SELECT x, x FROM t1
    INTERSECT
    SELECT abs(x), x FROM t1
    ORDER BY 1
  ;]
VDBE Trace:
   0 Init             0   66    0               00 Start at 66
  66 Transaction      0    0    4 1             01 usesStmtJournal=0
  67 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  68 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 InitCoroutine    4   23    3               00 left SELECT
  23 InitCoroutine    5   60   24               00 right SELECT
  60 Yield            4   65    0               00 
REG[4] =  i:2
REG[4] =  i:60
   3 SorterOpen       2    5    0 k(2,B,B)      00 
   4 OpenRead         1    2    0 3             00 root=2 iDb=0; t1
   5 Explain          1    0    0 SCAN TABLE t1 00 
   6 Rewind           1   14    0               00 
   7 Column           1    2   10               00 r[10]=t1.x
REG[10] =  NULL
   8 Copy            10   11    0               00 r[11]=r[10]
REG[11] =  NULL
   9 Copy            10    8    0               00 r[8]=r[10]
REG[8] =  NULL
  10 Copy            11    9    0               00 r[9]=r[11]
REG[9] =  NULL
  11 MakeRecord       8    4   12               00 r[12]=mkrec(r[8..11])
REG[12] =  s5[0500000000.....](8)
  12 SorterInsert     2   12    0               00 
REG[12] =  s5[0500000000.....](8)
  13 Next             1    7    0               01 
   7 Column           1    2   10               00 r[10]=t1.x
REG[10] =  NULL
   8 Copy            10   11    0               00 r[11]=r[10]
REG[11] =  NULL
   9 Copy            10    8    0               00 r[8]=r[10]
REG[8] =  NULL
  10 Copy            11    9    0               00 r[9]=r[11]
REG[9] =  NULL
  11 MakeRecord       8    4   12               00 r[12]=mkrec(r[8..11])
REG[12] =  s5[0500000000.....](8)
  12 SorterInsert     2   12    0               00 
REG[12] =  s5[0500000000.....](8)
  13 Next             1    7    0               01 
  14 Close            1    0    0               00 
  15 OpenPseudo       3   13    5               00 5 columns in r[13]
  16 SorterSort       2   22    0               00 
  17 SorterData       2   13    3               00 r[13]=data
  18 Column           3    2   10               00 r[10]=x
REG[10] =  NULL
  19 Column           3    3   11               00 r[11]=x
REG[11] =  NULL
  20 Yield            4    0    0               00 
REG[4] =  i:60
REG[4] =  i:20
  61 Yield            5   65    0               00 
REG[5] =  i:23
REG[5] =  i:61
  24 SorterOpen       4    5    0 k(2,B,B)      00 
  25 OpenRead         0    2    0 3             00 root=2 iDb=0; t1
  26 Explain          2    0    0 SCAN TABLE t1 00 
  27 Rewind           0   36    0               00 
  28 Column           0    2   18               00 r[18]=t1.x
REG[18] =  NULL
  29 Function0        0   18   16 abs(1)        01 r[16]=func(r[18])
REG[18] =  NULL
REG[16] =  NULL
  30 Column           0    2   17               00 r[17]=t1.x
REG[17] =  NULL
  31 Copy            16   14    0               00 r[14]=r[16]
REG[14] =  NULL
  32 Copy            17   15    0               00 r[15]=r[17]
REG[15] =  NULL
  33 MakeRecord      14    4   19               00 r[19]=mkrec(r[14..17])
REG[19] =  s5[0500000000.....](8)
  34 SorterInsert     4   19    0               00 
REG[19] =  s5[0500000000.....](8)
  35 Next             0   28    0               01 
  28 Column           0    2   18               00 r[18]=t1.x
REG[18] =  NULL
  29 Function         0   18   16 abs(1)        01 r[16]=func(r[18])
REG[18] =  NULL
REG[16] =  NULL
  30 Column           0    2   17               00 r[17]=t1.x
REG[17] =  NULL
  31 Copy            16   14    0               00 r[14]=r[16]
REG[14] =  NULL
  32 Copy            17   15    0               00 r[15]=r[17]
REG[15] =  NULL
  33 MakeRecord      14    4   19               00 r[19]=mkrec(r[14..17])
REG[19] =  s5[0500000000.....](8)
  34 SorterInsert     4   19    0               00 
REG[19] =  s5[0500000000.....](8)
  35 Next             0   28    0               01 
  36 Close            0    0    0               00 
  37 OpenPseudo       5   20    5               00 5 columns in r[20]
  38 SorterSort       4   44    0               00 
  39 SorterData       4   20    5               00 r[20]=data
  40 Column           5    2   16               00 r[16]=abs(x)
REG[16] =  NULL
  41 Column           5    3   17               00 r[17]=x
REG[17] =  NULL
  42 Yield            5    0    0               00 
REG[5] =  i:61
REG[5] =  i:42
  62 Permutation      0    0    0 [0]           00 
  63 Compare         10   16    2 k(3,B,B,)     01 r[10..11] <-> r[16..17]
REG[10] =  NULL
REG[16] =  NULL
REG[11] =  NULL
REG[17] =  NULL
  64 Jump            55   54   58               00 
  54 Gosub            6   46    0               00 
REG[6] =  i:54
  46 IfNot            1   49    0               00 
REG[1] =  i:0
  49 Copy            10    2    1               00 r[2..3]=r[10..11]
REG[2] =  NULL
REG[3] =  NULL
  50 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  51 ResultRow       10    2    0               00 output=r[10..11]
REG[10] =  NULL
REG[11] =  NULL
  52 Return           6    0    0               00 
REG[6] =  i:54
  55 Yield            4   65    0               00 
REG[4] =  i:20
REG[4] =  i:55
  21 SorterNext       2   17    0               00 
  17 SorterData       2   13    3               00 r[13]=data
  18 Column           3    2   10               00 r[10]=x
REG[10] =  NULL
  19 Column           3    3   11               00 r[11]=x
REG[11] =  NULL
  20 Yield            4    0    0               00 
REG[4] =  i:55
REG[4] =  i:20
  56 Goto             0   62    0               00 
  62 Permutation      0    0    0 [0]           00 
  63 Compare         10   16    2 k(3,B,B,)     01 r[10..11] <-> r[16..17]
REG[10] =  NULL
REG[16] =  NULL
REG[11] =  NULL
REG[17] =  NULL
  64 Jump            55   54   58               00 
  54 Gosub            6   46    0               00 
REG[6] =  i:54
  46 IfNot            1   49    0               00 
REG[1] =  i:1
  47 Compare         10    2    2 k(2,B,B)      00 r[10..11] <-> r[2..3]
REG[10] =  NULL
REG[2] =  NULL
REG[11] =  NULL
REG[3] =  NULL
  48 Jump            49   52   49               00 
  52 Return           6    0    0               00 
REG[6] =  i:54
  55 Yield            4   65    0               00 
REG[4] =  i:20
REG[4] =  i:55
  21 SorterNext       2   17    0               00 
  22 EndCoroutine     4    0    0               00 
REG[4] =  i:55
  65 Halt             0    0    0               00 
SQL: [SELECT abs(a), abs(a) FROM t1
    INTERSECT
    SELECT abs(a), a FROM t1
    ORDER BY 1
  ;]
VDBE Trace:
   0 Init             0   68    0               00 Start at 68
  68 Transaction      0    0    4 1             01 usesStmtJournal=0
  69 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  70 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 InitCoroutine    4   25    3               00 left SELECT
  25 InitCoroutine    5   62   26               00 right SELECT
  62 Yield            4   67    0               00 
REG[4] =  i:2
REG[4] =  i:62
   3 SorterOpen       2    5    0 k(2,B,B)      00 
   4 OpenRead         1    2    0 0             00 root=2 iDb=0; t1
   5 Explain          1    0    0 SCAN TABLE t1 00 
   6 Rewind           1   16    0               00 
   7 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:4
   8 Function0        0   12   10 abs(1)        01 r[10]=func(r[12])
REG[12] =  i:4
REG[10] =  i:4
   9 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:4
  10 Function0        0   12   11 abs(1)        01 r[11]=func(r[12])
REG[12] =  i:4
REG[11] =  i:4
  11 Copy            10    8    0               00 r[8]=r[10]
REG[8] =  i:4
  12 Copy            11    9    0               00 r[9]=r[11]
REG[9] =  i:4
  13 MakeRecord       8    4   13               00 r[13]=mkrec(r[8..11])
REG[13] =  s9[050101010104040404.........](8)
  14 SorterInsert     2   13    0               00 
REG[13] =  s9[050101010104040404.........](8)
  15 Next             1    7    0               01 
   7 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:800000000
   8 Function         0   12   10 abs(1)        01 r[10]=func(r[12])
REG[12] =  i:800000000
REG[10] =  i:800000000
   9 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:800000000
  10 Function         0   12   11 abs(1)        01 r[11]=func(r[12])
REG[12] =  i:800000000
REG[11] =  i:800000000
  11 Copy            10    8    0               00 r[8]=r[10]
REG[8] =  i:800000000
  12 Copy            11    9    0               00 r[9]=r[11]
REG[9] =  i:800000000
  13 MakeRecord       8    4   13               00 r[13]=mkrec(r[8..11])
REG[13] =  s21[05040404042FAF08002FAF08002FAF08...../.../.../..](8)
  14 SorterInsert     2   13    0               00 
REG[13] =  s21[05040404042FAF08002FAF08002FAF08...../.../.../..](8)
  15 Next             1    7    0               01 
  16 Close            1    0    0               00 
  17 OpenPseudo       3   14    5               00 5 columns in r[14]
  18 SorterSort       2   24    0               00 
  19 SorterData       2   14    3               00 r[14]=data
  20 Column           3    2   10               00 r[10]=abs(a)
REG[10] =  i:4
  21 Column           3    3   11               00 r[11]=abs(a)
REG[11] =  i:4
  22 Yield            4    0    0               00 
REG[4] =  i:62
REG[4] =  i:22
  63 Yield            5   67    0               00 
REG[5] =  i:25
REG[5] =  i:63
  26 SorterOpen       4    5    0 k(2,B,B)      00 
  27 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
  28 Explain          2    0    0 SCAN TABLE t1 00 
  29 Rewind           0   38    0               00 
  30 Rowid            0   19    0               00 r[19]=rowid
REG[19] =  i:4
  31 Function0        0   19   17 abs(1)        01 r[17]=func(r[19])
REG[19] =  i:4
REG[17] =  i:4
  32 Rowid            0   18    0               00 r[18]=rowid
REG[18] =  i:4
  33 Copy            17   15    0               00 r[15]=r[17]
REG[15] =  i:4
  34 Copy            18   16    0               00 r[16]=r[18]
REG[16] =  i:4
  35 MakeRecord      15    4   20               00 r[20]=mkrec(r[15..18])
REG[20] =  s9[050101010104040404.........](8)
  36 SorterInsert     4   20    0               00 
REG[20] =  s9[050101010104040404.........](8)
  37 Next             0   30    0               01 
  30 Rowid            0   19    0               00 r[19]=rowid
REG[19] =  i:800000000
  31 Function         0   19   17 abs(1)        01 r[17]=func(r[19])
REG[19] =  i:800000000
REG[17] =  i:800000000
  32 Rowid            0   18    0               00 r[18]=rowid
REG[18] =  i:800000000
  33 Copy            17   15    0               00 r[15]=r[17]
REG[15] =  i:800000000
  34 Copy            18   16    0               00 r[16]=r[18]
REG[16] =  i:800000000
  35 MakeRecord      15    4   20               00 r[20]=mkrec(r[15..18])
REG[20] =  s21[05040404042FAF08002FAF08002FAF08...../.../.../..](8)
  36 SorterInsert     4   20    0               00 
REG[20] =  s21[05040404042FAF08002FAF08002FAF08...../.../.../..](8)
  37 Next             0   30    0               01 
  38 Close            0    0    0               00 
  39 OpenPseudo       5   21    5               00 5 columns in r[21]
  40 SorterSort       4   46    0               00 
  41 SorterData       4   21    5               00 r[21]=data
  42 Column           5    2   17               00 r[17]=abs(a)
REG[17] =  i:4
  43 Column           5    3   18               00 r[18]=a
REG[18] =  i:4
  44 Yield            5    0    0               00 
REG[5] =  i:63
REG[5] =  i:44
  64 Permutation      0    0    0 [0]           00 
  65 Compare         10   17    2 k(3,B,B,)     01 r[10..11] <-> r[17..18]
REG[10] =  i:4
REG[17] =  i:4
REG[11] =  i:4
REG[18] =  i:4
  66 Jump            57   56   60               00 
  56 Gosub            6   48    0               00 
REG[6] =  i:56
  48 IfNot            1   51    0               00 
REG[1] =  i:0
  51 Copy            10    2    1               00 r[2..3]=r[10..11]
REG[2] =  i:4
REG[3] =  i:4
  52 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  53 ResultRow       10    2    0               00 output=r[10..11]
REG[10] =  i:4
REG[11] =  i:4
  54 Return           6    0    0               00 
REG[6] =  i:56
  57 Yield            4   67    0               00 
REG[4] =  i:22
REG[4] =  i:57
  23 SorterNext       2   19    0               00 
  19 SorterData       2   14    3               00 r[14]=data
  20 Column           3    2   10               00 r[10]=abs(a)
REG[10] =  i:800000000
  21 Column           3    3   11               00 r[11]=abs(a)
REG[11] =  i:800000000
  22 Yield            4    0    0               00 
REG[4] =  i:57
REG[4] =  i:22
  58 Goto             0   64    0               00 
  64 Permutation      0    0    0 [0]           00 
  65 Compare         10   17    2 k(3,B,B,)     01 r[10..11] <-> r[17..18]
REG[10] =  i:800000000
REG[17] =  i:4
  66 Jump            57   56   60               00 
  60 Yield            5   67    0               00 
REG[5] =  i:44
REG[5] =  i:60
  45 SorterNext       4   41    0               00 
  41 SorterData       4   21    5               00 r[21]=data
  42 Column           5    2   17               00 r[17]=abs(a)
REG[17] =  i:800000000
  43 Column           5    3   18               00 r[18]=a
REG[18] =  i:800000000
  44 Yield            5    0    0               00 
REG[5] =  i:60
REG[5] =  i:44
  61 Goto             0   64    0               00 
  64 Permutation      0    0    0 [0]           00 
  65 Compare         10   17    2 k(3,B,B,)     01 r[10..11] <-> r[17..18]
REG[10] =  i:800000000
REG[17] =  i:800000000
REG[11] =  i:800000000
REG[18] =  i:800000000
  66 Jump            57   56   60               00 
  56 Gosub            6   48    0               00 
REG[6] =  i:56
  48 IfNot            1   51    0               00 
REG[1] =  i:1
  49 Compare         10    2    2 k(2,,)        00 r[10..11] <-> r[2..3]
REG[10] =  i:800000000
REG[2] =  i:4
  50 Jump            51   54   51               00 
  51 Copy            10    2    1               00 r[2..3]=r[10..11]
REG[2] =  i:800000000
REG[3] =  i:800000000
  52 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  53 ResultRow       10    2    0               00 output=r[10..11]
REG[10] =  i:800000000
REG[11] =  i:800000000
  54 Return           6    0    0               00 
REG[6] =  i:56
  57 Yield            4   67    0               00 
REG[4] =  i:22
REG[4] =  i:57
  23 SorterNext       2   19    0               00 
  24 EndCoroutine     4    0    0               00 
REG[4] =  i:57
  67 Halt             0    0    0               00 
SQL: [;
ALTER TABLE t1 ADD t2 CHECK (t1>t2);]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      0    1    4 1             01 usesStmtJournal=0
  39 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  40 String8          0    9    0 table         00 r[9]='table'
REG[9] =   t5[table](8)
  41 String8          0   11    0 t1            00 r[11]='t1'
REG[11] =   t2[t1](8)
  42 Integer          1   14    0               00 r[14]=1
REG[14] =  i:1
  43 Integer         55   15    0               00 r[15]=55
REG[15] =  i:55
  44 String8          0   16    0 ,             00 r[16]=', '
REG[16] =   t2[, ](8)
  45 String8          0   17    0 t2 CHECK (t1>t2) 00 r[17]='t2 CHECK (t1>t2)'
REG[17] =   t16[t2 CHECK (t1>t2](8)
  46 Integer         56   19    0               00 r[19]=56
REG[19] =  i:56
  47 Goto             0    1    0               00 
   1 SetCookie        0    1    5               00 
   2 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   3 OpenRead         0    1    0 2             00 root=1 iDb=0; sqlite_master
   4 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   5 Rewind           0   13    0               00 
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   7 Ne               9   12    8 (BINARY)      52 if r[9]!=r[8] goto 12
REG[9] =   t5[table](8)
REG[8] =   s5[table](8)
   8 Column           0    1   10               00 r[10]=sqlite_master.name
REG[10] =   s2[t1](8)
   9 Ne              11   12   10 (BINARY)      52 if r[11]!=r[10] goto 12
REG[11] =   t2[t1](8)
REG[10] =   s2[t1](8)
  10 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
  11 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
  12 Next             0    6    0               01 
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   7 Ne               9   12    8 (BINARY)      52 if r[9]!=r[8] goto 12
REG[9] =   t5[table](8)
REG[8] =   s5[index](8)
  12 Next             0    6    0               01 
  13 Close            0    0    0               00 
  14 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
  15 RowSetRead       1   31    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  16 NotExists        0   15    2               00 intkey=r[2]
REG[2] =  i:1
  17 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
  18 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t1](8)
  19 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
REG[5] =   s2[t1](8)
  20 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  21 Column           0    4   13               00 r[13]=sqlite_master.sql
REG[13] =   s56[CREATE TABLE t1](8)
  22 Function0        6   13   12 substr(3)     03 r[12]=func(r[13..15])
REG[13] =   s56[CREATE TABLE t1](8)
REG[14] =  i:1
REG[15] =  i:55
REG[12] =   s55[CREATE TABLE t1](8)
  23 Concat          16   12    8               00 r[8]=r[12]+r[16]
REG[16] =   t2[, ](8)
REG[12] =   s55[CREATE TABLE t1](8)
REG[8] =   s57[CREATE TABLE t1](8)
  24 Concat          17    8   10               00 r[10]=r[8]+r[17]
REG[17] =   t16[t2 CHECK (t1>t2](8)
REG[8] =   s57[CREATE TABLE t1](8)
REG[10] =   s73[CREATE TABLE t1](8)
  25 Column           0    4   18               00 r[18]=sqlite_master.sql
REG[18] =   s56[CREATE TABLE t1](8)
  26 Function0        2   18    8 substr(2)     02 r[8]=func(r[18..19])
REG[18] =   s56[CREATE TABLE t1](8)
REG[19] =  i:56
REG[8] =   s1[)](8)
  27 Concat           8   10    7               00 r[7]=r[10]+r[8]
REG[8] =   s1[)](8)
REG[10] =   s73[CREATE TABLE t1](8)
REG[7] =   s74[CREATE TABLE t1](8)
  28 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s91[071711110181217461626C6574317431......!tablet1t1](8)
  29 Insert           0    8    2               00 intkey=r[2] data=r[8]
REG[8] =  s91[071711110181217461626C6574317431......!tablet1t1](8)
REG[2] =  i:1
  30 Goto             0   15    0               00 
  15 RowSetRead       1   31    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  31 Close            0    0    0               00 
  32 SetCookie        0    2    4               00 
  33 DropTrigger      1    0    0 y             00 
  34 DropTable        0    0    0 t1            00 
  35 ParseSchema      0    0    0 tbl_name='t1' 00 
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    5 1             00 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  17 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:2
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s74[CREATE TABLE t1](8)
  10 ResultRow        3    3    0               00 output=r[3..5]
REG[3] =   s2[t1](8)
REG[4] =  i:2
REG[5] =   s74[CREATE TABLE t1](8)
  11 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s7[numbers](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:3
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s49[CREATE UNIQUE I](8)
  10 ResultRow        3    3    0               00 output=r[3..5]
REG[3] =   s7[numbers](8)
REG[4] =  i:3
REG[5] =   s49[CREATE UNIQUE I](8)
  11 Next             0    5    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    5 2             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s74[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s74[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[numbers](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s49[CREATE UNIQUE I](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s7[numbers](8)
REG[2] =  i:3
REG[3] =   s49[CREATE UNIQUE I](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    5 2             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s74[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s74[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[numbers](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s49[CREATE UNIQUE I](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s7[numbers](8)
REG[2] =  i:3
REG[3] =   s49[CREATE UNIQUE I](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    5 2             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s74[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s74[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[numbers](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s49[CREATE UNIQUE I](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s7[numbers](8)
REG[2] =  i:3
REG[3] =   s49[CREATE UNIQUE I](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    5 2             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s74[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s74[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[numbers](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s49[CREATE UNIQUE I](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s7[numbers](8)
REG[2] =  i:3
REG[3] =   s49[CREATE UNIQUE I](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
PRAGMA writable_schema=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    5 2             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s74[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s74[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[numbers](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s49[CREATE UNIQUE I](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s7[numbers](8)
REG[2] =  i:3
REG[3] =   s49[CREATE UNIQUE I](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      1    0    1 2             00 usesStmtJournal=0
  13 TableLock        1    1    0 sqlite_temp_master 00 iDb=1 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          0    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_temp_master.name
REG[1] =   s1[y](8)
   6 Column           0    3    2               00 r[2]=sqlite_temp_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_temp_master.sql
REG[3] =   s72[CREATE TRIGGER ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[y](8)
REG[2] =  i:0
REG[3] =   s72[CREATE TRIGGER ](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
SELECT t2/t2 FROM t1;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    5 2             01 usesStmtJournal=0
  11 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  12 Goto             0    1    0               00 
   1 OpenRead         0    2    0 4             00 root=2 iDb=0; t1
   2 Explain          0    0    0 SCAN TABLE t1 00 
   3 Rewind           0    8    0               00 
   4 Column           0    3    2               00 r[2]=t1.t2
REG[2] =  NULL
   5 Divide           2    2    1               00 r[1]=r[2]/r[2]
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   6 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   7 Next             0    4    0               01 
   4 Column           0    3    2               00 r[2]=t1.t2
REG[2] =  NULL
   5 Divide           2    2    1               00 r[1]=r[2]/r[2]
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   6 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   7 Next             0    4    0               01 
   8 Close            0    0    0               00 
   9 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f738e3e7859 in __GI_abort () at abort.c:79
#2  0x00007f738e3e7729 in __assert_fail_base (fmt=0x7f738e57d588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x20d94f "op==TK_CASE", file=0x222c23 "sqlite3.c", line=92150, function=<optimized out>) at assert.c:92
#3  0x00007f738e3f8fd6 in __GI___assert_fail (assertion=0x20d94f "op==TK_CASE", file=0x222c23 "sqlite3.c", line=92150, function=0x21a1ea "int sqlite3ExprCodeTarget(Parse *, Expr *, int)") at assert.c:101
#4  0x000000000037b938 in sqlite3ExprCodeTarget (pParse=0x229ca10, pExpr=0x22b3d50, target=7) at sqlite3.c:92150
#5  0x000000000037228a in sqlite3ExprCodeTemp (pParse=0x229ca10, pExpr=0x22b3d50, pReg=0x7ffd5e512244) at sqlite3.c:92302
#6  0x0000000000371435 in sqlite3ExprIfTrue (pParse=0x229ca10, pExpr=0x2328650, dest=<optimized out>, jumpIfNull=16) at sqlite3.c:92559
#7  0x0000000000384b90 in sqlite3GenerateConstraintChecks (pParse=<optimized out>, pTab=0x22b4850, aRegIdx=<optimized out>, iDataCur=0, iIdxCur=1, regNewData=1, regOldData=0, pkChng=1 '\001', overrideError=10 '\n', 
    ignoreDest=-1, pbMayReplace=0x7ffd5e512530, aiChng=0x0) at sqlite3.c:107197
#8  0x00000000003418e6 in sqlite3Insert (pParse=<optimized out>, pTabList=<optimized out>, pSelect=<optimized out>, pColumn=0x22af200, onError=<optimized out>) at sqlite3.c:106860
#9  0x00000000003066b3 in yy_reduce (yypParser=0x22ba5e0, yyruleno=<optimized out>) at sqlite3.c:133484
#10 0x00000000002fef8e in sqlite3Parser (yyp=0x22ba5e0, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#11 0x00000000002fc544 in sqlite3RunParser (pParse=0x229ca10, 
    zSql=0x232b850 ";\nINSERT INTO t1(oid,x,t2) VALUES(1099511627775,57,'000000ffffffffff');;\nSELECT a isnull FROM t1;;\nSELECT min(t2), max(t2) FROM t1;;\nSELECT t2 isnull FROM t1;;\nSELECT name, rootpage, sql FROM 'main'.s"..., pzErrMsg=0x7ffd5e5127b8) at sqlite3.c:135186
#12 0x00000000002fac4e in sqlite3Prepare (db=0x229b850, 
    zSql=0x229f0c0 ";\nINSERT INTO t1(oid,x,t2) VALUES(1099511627775,57,'000000ffffffffff');;\nSELECT a isnull FROM t1;;\nSELECT min(t2), max(t2) FROM t1;;\nSELECT t2 isnull FROM t1;;\nSELECT name, rootpage, sql FROM 'main'.s"..., nBytes=<optimized out>, saveSqlFlag=1, pReprepare=<optimized out>, ppStmt=0x7ffd5e5128e8, pzTail=0x7ffd5e5128d0) at sqlite3.c:112589
#13 0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0x229b850, 
    zSql=0x229f0c0 ";\nINSERT INTO t1(oid,x,t2) VALUES(1099511627775,57,'000000ffffffffff');;\nSELECT a isnull FROM t1;;\nSELECT min(t2), max(t2) FROM t1;;\nSELECT t2 isnull FROM t1;;\nSELECT name, rootpage, sql FROM 'main'.s"..., nBytes=3862, saveSqlFlag=1, pOld=0x0, ppStmt=<optimized out>, pzTail=0x7ffd5e5128d0) at sqlite3.c:112688
#14 0x000000000028f38c in sqlite3_prepare_v2 (db=0x2, zSql=0x7ffd5e511db0 "", nBytes=0, ppStmt=0x7ffd5e5128e8, pzTail=<optimized out>) at sqlite3.c:112764
#15 0x000000000024b100 in main (argc=1, argv=0x7ffd5e512a98) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 12825] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
