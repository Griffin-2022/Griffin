GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000414,sig:06,src:009875+009242,time:21465225,execs:2084291,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    0 0             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [ANALYZE;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    1    0 0             01 usesStmtJournal=0
  34 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  35 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        3    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:1
  16 NotExists        3   18    1               00 intkey=r[1]; pk
REG[1] =  i:1
  17 Rowid            3    5    0               00 r[5]=rowid
REG[5] =  i:1
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:1
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 sqlite_stat1  00 r[7]='sqlite_stat1'
REG[7] =   t12[sqlite_stat1](8)
  21 String8          0    8    0 sqlite_stat1  00 r[8]='sqlite_stat1'
REG[8] =   t12[sqlite_stat1](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  23 String8          0   10    0 CREATE TABLE sqlite_stat1(tbl,idx,stat) 00 r[10]='CREATE TABLE sqlite_stat1(tbl,idx,stat)'
REG[10] =   t39[CREATE TABLE sq](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit](8)
  25 Insert           3   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit](8)
REG[5] =  i:1
  26 Close            3    0    0               00 
  27 SetCookie        0    1    1               00 
  28 ParseSchema      0    0    0 tbl_name='sqlite_stat1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    1 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 sqlite_stat1  00 r[2]='sqlite_stat1'
REG[2] =   t12[sqlite_stat1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s12[sqlite_stat1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s12[sqlite_stat1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s39[CREATE TABLE sq](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s12[sqlite_stat1](8)
REG[6] =  i:2
REG[7] =   s39[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 OpenWrite        0    2    0 3             10 root=2 iDb=0; sqlite_stat1
  30 LoadAnalysis     0    0    0               00 
SQL: [SELECT tbl,idx,stat FROM 'main'.sqlite_stat1]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    1 0             01 usesStmtJournal=0
  12 TableLock        0    2    0 sqlite_stat1  00 iDb=0 root=2 write=0
  13 Goto             0    1    0               00 
   1 OpenRead         0    2    0 3             00 root=2 iDb=0; sqlite_stat1
   2 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
  31 Expire           0    0    0               00 
  32 Halt             0    0    0               00 
SQL: [SELECT length('€€€€€ð€€€ÿ') AS x;]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 String8          0    2    0 €€€€€ð€€€ÿ    00 r[2]='€€€€€ð€€€ÿ'
REG[2] =   t10[..........](8)
   5 Goto             0    1    0               00 
   1 Function0        1    2    1 length(1)     01 r[1]=func(r[2])
REG[2] =   t10[..........](8)
REG[1] =  i:7
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:7
   3 Halt             0    0    0               00 
SQL: [;
SELECT printf('%d,%d,%d,%d',55,'-11',3421);]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 String8          0    2    0 %d,%d,%d,%d   00 r[2]='%d,%d,%d,%d'
REG[2] =   t11[%d,%d,%d,%d](8)
   5 Integer         55    3    0               00 r[3]=55
REG[3] =  i:55
   6 String8          0    4    0 -11           00 r[4]='-11'
REG[4] =   t3[-11](8)
   7 Integer       3421    5    0               00 r[5]=3421
REG[5] =  i:3421
   8 Goto             0    1    0               00 
   1 Function0       15    2    1 printf(-1)    04 r[1]=func(r[2..5])
REG[2] =   t11[%d,%d,%d,%d](8)
REG[3] =  i:55
REG[4] =   t3[-11](8)
REG[5] =  i:3421
REG[1] =   s13[55,-11,3421,0](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s13[55,-11,3421,0](8)
   3 Halt             0    0    0               00 
SQL: [SELECT randomblob($pgsz);]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 Variable         1    2    0 $pgsz         00 r[2]=parameter(1,$pgsz)
REG[2] =  NULL
   5 Goto             0    1    0               00 
   1 Function0        1    2    1 randomblob(1) 01 r[1]=func(r[2])
REG[2] =  NULL
REG[1] =  z1[71q](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  z1[71q](8)
   3 Halt             0    0    0               00 
SQL: [;
COMMIT;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       1    0    0               00 
SQL: [VACUUM;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Vacuum           0    0    0               00 
SQL: [ATTACH '' AS vacuum_db;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0               00 r[1]=''
REG[1] =   t0[](8)
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
REG[2] =   t9[vacuum_db](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t0[](8)
REG[2] =   t9[vacuum_db](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      2    0    0 0             00 usesStmtJournal=0
  13 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [PRAGMA vacuum_db.synchronous=OFF]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [SELECT 'CREATE TABLE vacuum_db.' || substr(sql,14)   FROM sqlite_master WHERE type='table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    1 0             01 usesStmtJournal=0
  20 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  21 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  22 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  23 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  24 String8          0    8    0 CREATE TABLE vacuum_db. 00 r[8]='CREATE TABLE vacuum_db.'
REG[8] =   t23[CREATE TABLE va](8)
  25 Integer         14   10    0               00 r[10]=14
REG[10] =  i:14
  26 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   17    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s12[sqlite_stat1](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s12[sqlite_stat1](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:2
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:2
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s39[CREATE TABLE sq](8)
  13 Function0        2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s39[CREATE TABLE sq](8)
REG[10] =  i:14
REG[5] =   s26[sqlite_stat1(tb](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s26[sqlite_stat1(tb](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s49[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s49[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.sqlite_stat1(tbl,idx,stat)]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      2    1    0 0             01 usesStmtJournal=0
  31 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        2    2    4               00 
   4 SetCookie        2    5    1               00 
   5 CreateTable      2    2    0               00 r[2]=root iDb=2
REG[2] =  i:2
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:1
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:1
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:1
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 sqlite_stat1  00 r[7]='sqlite_stat1'
REG[7] =   t12[sqlite_stat1](8)
  21 String8          0    8    0 sqlite_stat1  00 r[8]='sqlite_stat1'
REG[8] =   t12[sqlite_stat1](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  23 String8          0   10    0 CREATE TABLE sqlite_stat1(tbl,idx,stat) 00 r[10]='CREATE TABLE sqlite_stat1(tbl,idx,stat)'
REG[10] =   t39[CREATE TABLE sq](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit](8)
REG[5] =  i:1
  26 Close            1    0    0               00 
  27 SetCookie        2    1    1               00 
  28 ParseSchema      2    0    0 tbl_name='sqlite_stat1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    1 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 sqlite_stat1  00 r[2]='sqlite_stat1'
REG[2] =   t12[sqlite_stat1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s12[sqlite_stat1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s12[sqlite_stat1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s39[CREATE TABLE sq](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s12[sqlite_stat1](8)
REG[6] =  i:2
REG[7] =   s39[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
  16 Next             0    4    0               01 
  17 Close            0    0    0               00 
  18 Halt             0    0    0               00 
SQL: [SELECT 'CREATE INDEX vacuum_db.' || substr(sql,14)  FROM sqlite_master WHERE sql LIKE 'CREATE INDEX %' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    1 0             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE INDEX % 00 r[2]='CREATE INDEX %'
REG[2] =   t14[CREATE INDEX %](8)
  17 String8          0    5    0 CREATE INDEX vacuum_db. 00 r[5]='CREATE INDEX vacuum_db.'
REG[5] =   t23[CREATE INDEX va](8)
  18 Integer         14    7    0               00 r[7]=14
REG[7] =  i:14
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE sq](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s39[CREATE TABLE sq](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'CREATE UNIQUE INDEX vacuum_db.' || substr(sql,21)   FROM sqlite_master WHERE sql LIKE 'CREATE UNIQUE INDEX %']
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    1 0             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE UNIQUE INDEX % 00 r[2]='CREATE UNIQUE INDEX %'
REG[2] =   t21[CREATE UNIQUE I](8)
  17 String8          0    5    0 CREATE UNIQUE INDEX vacuum_db. 00 r[5]='CREATE UNIQUE INDEX vacuum_db.'
REG[5] =   t30[CREATE UNIQUE I](8)
  18 Integer         21    7    0               00 r[7]=21
REG[7] =  i:21
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE sq](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s39[CREATE TABLE sq](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';'FROM main.sqlite_master WHERE type = 'table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    0    1 0             01 usesStmtJournal=0
  25 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  26 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  27 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  28 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  29 String8          0   10    0 INSERT INTO vacuum_db. 00 r[10]='INSERT INTO vacuum_db.'
REG[10] =   t22[INSERT INTO vac](8)
  30 String8          0   13    0  SELECT * FROM main. 00 r[13]=' SELECT * FROM main.'
REG[13] =   t20[ SELECT * FROM ](8)
  31 String8          0   14    0 ;             00 r[14]=';'
REG[14] =   t1[;](8)
  32 Goto             0    1    0               00 
   1 OpenRead         0    1    0 4             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   22    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s12[sqlite_stat1](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s12[sqlite_stat1](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:2
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:2
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s12[sqlite_stat1](8)
  13 Function0        0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s12[sqlite_stat1](8)
REG[11] =   z14['sqlite_stat1'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z14['sqlite_stat1'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s36[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s36[INSERT INTO vac](8)
REG[8] =   s56[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s12[sqlite_stat1](8)
  17 Function0        0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s12[sqlite_stat1](8)
REG[9] =   z14['sqlite_stat1'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z14['sqlite_stat1'](8)
REG[8] =   s56[INSERT INTO vac](8)
REG[5] =   s70[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s70[INSERT INTO vac](8)
REG[7] =   s71[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s71[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'sqlite_stat1' SELECT * FROM main.'sqlite_stat1';]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    1 0             01 usesStmtJournal=0
  12 Transaction      2    1    1 0             01 usesStmtJournal=0
  13 TableLock        2    2    1 sqlite_stat1  00 iDb=2 root=2 write=1
  14 TableLock        0    2    0 sqlite_stat1  00 iDb=0 root=2 write=0
  15 Goto             0    1    0               00 
   1 OpenWrite        1    2    2 3             00 root=2 iDb=2; sqlite_stat1
   2 OpenRead         0    2    0 3             00 root=2 iDb=0; sqlite_stat1
   3 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
  21 Next             0    4    0               01 
  22 Close            0    0    0               00 
  23 Halt             0    0    0               00 
SQL: [SELECT 'DELETE FROM vacuum_db.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name='sqlite_sequence' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      2    0    1 0             01 usesStmtJournal=0
  15 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  16 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  17 String8          0    5    0 DELETE FROM vacuum_db. 00 r[5]='DELETE FROM vacuum_db.'
REG[5] =   t22[DELETE FROM vac](8)
  18 String8          0    8    0 ;             00 r[8]=';'
REG[8] =   t1[;](8)
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s12[sqlite_stat1](8)
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name=='sqlite_sequence';]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      2    0    1 0             01 usesStmtJournal=0
  19 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  20 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  21 String8          0    7    0 INSERT INTO vacuum_db. 00 r[7]='INSERT INTO vacuum_db.'
REG[7] =   t22[INSERT INTO vac](8)
  22 String8          0   10    0  SELECT * FROM main. 00 r[10]=' SELECT * FROM main.'
REG[10] =   t20[ SELECT * FROM ](8)
  23 String8          0   11    0 ;             00 r[11]=';'
REG[11] =   t1[;](8)
  24 Goto             0    1    0               00 
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   16    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s12[sqlite_stat1](8)
  15 Next             0    4    0               01 
  16 Close            0    0    0               00 
  17 Halt             0    0    0               00 
SQL: [INSERT INTO vacuum_db.sqlite_master   SELECT type, name, tbl_name, rootpage, sql    FROM main.sqlite_master   WHERE type='view' OR type='trigger'      OR (type='table' AND rootpage=0)]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    0    1 0             01 usesStmtJournal=0
  29 Transaction      2    1    1 0             01 usesStmtJournal=0
  30 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  31 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  32 String8          0    9    0 view          00 r[9]='view'
REG[9] =   t4[view](8)
  33 String8          0   11    0 trigger       00 r[11]='trigger'
REG[11] =   t7[trigger](8)
  34 String8          0   12    0 table         00 r[12]='table'
REG[12] =   t5[table](8)
  35 Integer          0   13    0               00 r[13]=0
REG[13] =  i:0
  36 Goto             0    1    0               00 
   1 InitCoroutine    7   20    2               00 
  20 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  21 Yield            7   26    0               00 
REG[7] =  i:1
REG[7] =  i:21
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   18    0               00 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[table](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[table](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[table](8)
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
REG[10] =  i:2
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
REG[13] =  i:0
REG[10] =  i:2
  17 Next             0    5    0               01 
  18 Close            0    0    0               00 
  19 EndCoroutine     7    0    0               00 
REG[7] =  i:21
  26 Noop             1    0    0               00 
  27 Halt             0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT typeof( 
    CAST (X'30002E003000300030003100' AS REAL) ),  
    CAST (X'30002E003000300030003100' AS REAL) ;]
VDBE Trace:
   0 Init             0    6    0               00 Start at 6
   6 Blob            12    3    0 0             00 r[3]=0 (len=12)
REG[3] =  t12[30002E0030003000300031000...0.0.0.1.](8)
   7 Cast             3   69    0               00 affinity(r[3])
REG[3] =  t12[30002E0030003000300031000...0.0.0.1.](8)
   8 Goto             0    1    0               00 
   1 Function0        1    3    1 typeof(1)     01 r[1]=func(r[3])
REG[3] =  r:0
REG[1] =   t4[real](8)
   2 Blob            12    2    0 0             00 r[2]=0 (len=12)
REG[2] =  t12[30002E0030003000300031000...0.0.0.1.](8)
   3 Cast             2   69    0               00 affinity(r[2])
REG[2] =  t12[30002E0030003000300031000...0.0.0.1.](8)
   4 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =   t4[real](8)
REG[2] =  r:0
   5 Halt             0    0    0               00 
SQL: [;
COMMIT;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       1    0    0               00 
SQL: [;
PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    2 1             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s12[sqlite_stat1](8)
REG[2] =  i:2
REG[3] =   s39[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 1             00 usesStmtJournal=0
  12 TableLock        0    2    0 sqlite_stat1  00 iDb=0 root=2 write=0
  13 Goto             0    1    0               00 
   1 OpenRead         0    2    0 3             00 root=2 iDb=0; sqlite_stat1
   2 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
SQL: [;
VACUUM;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Vacuum           0    0    0               00 
SQL: [ATTACH '' AS vacuum_db;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0               00 r[1]=''
REG[1] =   t0[](8)
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
REG[2] =   t9[vacuum_db](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t0[](8)
REG[2] =   t9[vacuum_db](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      2    0    0 0             00 usesStmtJournal=0
  13 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [PRAGMA vacuum_db.synchronous=OFF]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [SELECT 'CREATE TABLE vacuum_db.' || substr(sql,14)   FROM sqlite_master WHERE type='table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    2 1             01 usesStmtJournal=0
  20 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  21 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  22 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  23 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  24 String8          0    8    0 CREATE TABLE vacuum_db. 00 r[8]='CREATE TABLE vacuum_db.'
REG[8] =   t23[CREATE TABLE va](8)
  25 Integer         14   10    0               00 r[10]=14
REG[10] =  i:14
  26 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   17    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s12[sqlite_stat1](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s12[sqlite_stat1](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:2
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:2
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s39[CREATE TABLE sq](8)
  13 Function0        2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s39[CREATE TABLE sq](8)
REG[10] =  i:14
REG[5] =   s26[sqlite_stat1(tb](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s26[sqlite_stat1(tb](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s49[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s49[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.sqlite_stat1(tbl,idx,stat)]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      2    1    0 0             01 usesStmtJournal=0
  31 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        2    2    4               00 
   4 SetCookie        2    5    1               00 
   5 CreateTable      2    2    0               00 r[2]=root iDb=2
REG[2] =  i:2
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:1
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:1
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:1
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 sqlite_stat1  00 r[7]='sqlite_stat1'
REG[7] =   t12[sqlite_stat1](8)
  21 String8          0    8    0 sqlite_stat1  00 r[8]='sqlite_stat1'
REG[8] =   t12[sqlite_stat1](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  23 String8          0   10    0 CREATE TABLE sqlite_stat1(tbl,idx,stat) 00 r[10]='CREATE TABLE sqlite_stat1(tbl,idx,stat)'
REG[10] =   t39[CREATE TABLE sq](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit](8)
REG[5] =  i:1
  26 Close            1    0    0               00 
  27 SetCookie        2    1    1               00 
  28 ParseSchema      2    0    0 tbl_name='sqlite_stat1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    1 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 sqlite_stat1  00 r[2]='sqlite_stat1'
REG[2] =   t12[sqlite_stat1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s12[sqlite_stat1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s12[sqlite_stat1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s39[CREATE TABLE sq](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s12[sqlite_stat1](8)
REG[6] =  i:2
REG[7] =   s39[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
  16 Next             0    4    0               01 
  17 Close            0    0    0               00 
  18 Halt             0    0    0               00 
SQL: [SELECT 'CREATE INDEX vacuum_db.' || substr(sql,14)  FROM sqlite_master WHERE sql LIKE 'CREATE INDEX %' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    2 1             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE INDEX % 00 r[2]='CREATE INDEX %'
REG[2] =   t14[CREATE INDEX %](8)
  17 String8          0    5    0 CREATE INDEX vacuum_db. 00 r[5]='CREATE INDEX vacuum_db.'
REG[5] =   t23[CREATE INDEX va](8)
  18 Integer         14    7    0               00 r[7]=14
REG[7] =  i:14
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE sq](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s39[CREATE TABLE sq](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'CREATE UNIQUE INDEX vacuum_db.' || substr(sql,21)   FROM sqlite_master WHERE sql LIKE 'CREATE UNIQUE INDEX %']
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    2 1             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE UNIQUE INDEX % 00 r[2]='CREATE UNIQUE INDEX %'
REG[2] =   t21[CREATE UNIQUE I](8)
  17 String8          0    5    0 CREATE UNIQUE INDEX vacuum_db. 00 r[5]='CREATE UNIQUE INDEX vacuum_db.'
REG[5] =   t30[CREATE UNIQUE I](8)
  18 Integer         21    7    0               00 r[7]=21
REG[7] =  i:21
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE sq](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s39[CREATE TABLE sq](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';'FROM main.sqlite_master WHERE type = 'table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    0    2 1             01 usesStmtJournal=0
  25 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  26 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  27 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  28 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  29 String8          0   10    0 INSERT INTO vacuum_db. 00 r[10]='INSERT INTO vacuum_db.'
REG[10] =   t22[INSERT INTO vac](8)
  30 String8          0   13    0  SELECT * FROM main. 00 r[13]=' SELECT * FROM main.'
REG[13] =   t20[ SELECT * FROM ](8)
  31 String8          0   14    0 ;             00 r[14]=';'
REG[14] =   t1[;](8)
  32 Goto             0    1    0               00 
   1 OpenRead         0    1    0 4             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   22    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s12[sqlite_stat1](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s12[sqlite_stat1](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:2
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:2
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s12[sqlite_stat1](8)
  13 Function0        0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s12[sqlite_stat1](8)
REG[11] =   z14['sqlite_stat1'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z14['sqlite_stat1'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s36[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s36[INSERT INTO vac](8)
REG[8] =   s56[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s12[sqlite_stat1](8)
  17 Function0        0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s12[sqlite_stat1](8)
REG[9] =   z14['sqlite_stat1'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z14['sqlite_stat1'](8)
REG[8] =   s56[INSERT INTO vac](8)
REG[5] =   s70[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s70[INSERT INTO vac](8)
REG[7] =   s71[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s71[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'sqlite_stat1' SELECT * FROM main.'sqlite_stat1';]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 1             01 usesStmtJournal=0
  12 Transaction      2    1    1 0             01 usesStmtJournal=0
  13 TableLock        2    2    1 sqlite_stat1  00 iDb=2 root=2 write=1
  14 TableLock        0    2    0 sqlite_stat1  00 iDb=0 root=2 write=0
  15 Goto             0    1    0               00 
   1 OpenWrite        1    2    2 3             00 root=2 iDb=2; sqlite_stat1
   2 OpenRead         0    2    0 3             00 root=2 iDb=0; sqlite_stat1
   3 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
  21 Next             0    4    0               01 
  22 Close            0    0    0               00 
  23 Halt             0    0    0               00 
SQL: [SELECT 'DELETE FROM vacuum_db.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name='sqlite_sequence' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      2    0    1 0             01 usesStmtJournal=0
  15 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  16 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  17 String8          0    5    0 DELETE FROM vacuum_db. 00 r[5]='DELETE FROM vacuum_db.'
REG[5] =   t22[DELETE FROM vac](8)
  18 String8          0    8    0 ;             00 r[8]=';'
REG[8] =   t1[;](8)
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s12[sqlite_stat1](8)
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name=='sqlite_sequence';]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      2    0    1 0             01 usesStmtJournal=0
  19 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  20 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  21 String8          0    7    0 INSERT INTO vacuum_db. 00 r[7]='INSERT INTO vacuum_db.'
REG[7] =   t22[INSERT INTO vac](8)
  22 String8          0   10    0  SELECT * FROM main. 00 r[10]=' SELECT * FROM main.'
REG[10] =   t20[ SELECT * FROM ](8)
  23 String8          0   11    0 ;             00 r[11]=';'
REG[11] =   t1[;](8)
  24 Goto             0    1    0               00 
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   16    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s12[sqlite_stat1](8)
  15 Next             0    4    0               01 
  16 Close            0    0    0               00 
  17 Halt             0    0    0               00 
SQL: [INSERT INTO vacuum_db.sqlite_master   SELECT type, name, tbl_name, rootpage, sql    FROM main.sqlite_master   WHERE type='view' OR type='trigger'      OR (type='table' AND rootpage=0)]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    0    2 1             01 usesStmtJournal=0
  29 Transaction      2    1    1 0             01 usesStmtJournal=0
  30 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  31 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  32 String8          0    9    0 view          00 r[9]='view'
REG[9] =   t4[view](8)
  33 String8          0   11    0 trigger       00 r[11]='trigger'
REG[11] =   t7[trigger](8)
  34 String8          0   12    0 table         00 r[12]='table'
REG[12] =   t5[table](8)
  35 Integer          0   13    0               00 r[13]=0
REG[13] =  i:0
  36 Goto             0    1    0               00 
   1 InitCoroutine    7   20    2               00 
  20 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  21 Yield            7   26    0               00 
REG[7] =  i:1
REG[7] =  i:21
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   18    0               00 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[table](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[table](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[table](8)
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
REG[10] =  i:2
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
REG[13] =  i:0
REG[10] =  i:2
  17 Next             0    5    0               01 
  18 Close            0    0    0               00 
  19 EndCoroutine     7    0    0               00 
REG[7] =  i:21
  26 Noop             1    0    0               00 
  27 Halt             0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
ATTACH 'test.db2' AS '123corp';]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0 test.db2      00 r[1]='test.db2'
REG[1] =   t8[test.db2](8)
   2 String8          0    2    0 123corp       00 r[2]='123corp'
REG[2] =   t7[123corp](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t8[test.db2](8)
REG[2] =   t7[123corp](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    3 2             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s12[sqlite_stat1](8)
REG[2] =  i:2
REG[3] =   s39[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    3 2             00 usesStmtJournal=0
  12 TableLock        0    2    0 sqlite_stat1  00 iDb=0 root=2 write=0
  13 Goto             0    1    0               00 
   1 OpenRead         0    2    0 3             00 root=2 iDb=0; sqlite_stat1
   2 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      2    0  259 0             00 usesStmtJournal=0
  13 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[n1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s21[CREATE TABLE n1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[n1](8)
REG[2] =  i:2
REG[3] =   s21[CREATE TABLE n1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[n2](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s21[CREATE TABLE n2](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[n2](8)
REG[2] =  i:3
REG[3] =   s21[CREATE TABLE n2](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[n3](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s21[CREATE TABLE n3](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[n3](8)
REG[2] =  i:4
REG[3] =   s21[CREATE TABLE n3](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s8[f3_rules](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:6
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s48[CREATE TABLE f3](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s8[f3_rules](8)
REG[2] =  i:6
REG[3] =   s48[CREATE TABLE f3](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s5[files](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:7
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s30[CREATE TABLE fi](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s5[files](8)
REG[2] =  i:7
REG[3] =   s30[CREATE TABLE fi](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s8[t4...abc](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:8
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s29[CREATE TABLE "t](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s8[t4...abc](8)
REG[2] =  i:8
REG[3] =   s29[CREATE TABLE "t](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v2](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s34[CREATE VIEW v2 ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[v2](8)
REG[2] =  i:0
REG[3] =   s34[CREATE VIEW v2 ](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v3](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s34[CREATE VIEW v3 ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[v3](8)
REG[2] =  i:0
REG[3] =   s34[CREATE VIEW v3 ](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t.2.](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:9
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s48[C.R.E.A.T.E. .T](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s4[t.2.](8)
REG[2] =  i:9
REG[3] =   s48[C.R.E.A.T.E. .T](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[v.1.](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s68[C.R.E.A.T.E. .V](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s4[v.1.](8)
REG[2] =  i:0
REG[3] =   s68[C.R.E.A.T.E. .V](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s12[sqlite_stat1](8)
REG[2] =  i:5
REG[3] =   s39[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[.t.2](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:10
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s48[.C.R.E.A.T.E. .](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s4[.t.2](8)
REG[2] =  i:10
REG[3] =   s48[.C.R.E.A.T.E. .](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    3 3             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s12[sqlite_stat1](8)
REG[2] =  i:2
REG[3] =   s39[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    3 3             00 usesStmtJournal=0
  12 TableLock        0    2    0 sqlite_stat1  00 iDb=0 root=2 write=0
  13 Goto             0    1    0               00 
   1 OpenRead         0    2    0 3             00 root=2 iDb=0; sqlite_stat1
   2 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
SQL: [;
ANALYZE;]
VDBE Trace:
   0 Init             0    6    0               00 Start at 6
   6 Transaction      0    1    3 3             01 usesStmtJournal=0
   7 TableLock        0    2    1 sqlite_stat1  00 iDb=0 root=2 write=1
   8 Goto             0    1    0               00 
   1 Clear            2    0    0               00 
   2 OpenWrite        0    2    0 3             00 root=2 iDb=0; sqlite_stat1
   3 LoadAnalysis     0    0    0               00 
SQL: [SELECT tbl,idx,stat FROM 'main'.sqlite_stat1]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    3 3             01 usesStmtJournal=0
  12 TableLock        0    2    0 sqlite_stat1  00 iDb=0 root=2 write=0
  13 Goto             0    1    0               00 
   1 OpenRead         0    2    0 3             00 root=2 iDb=0; sqlite_stat1
   2 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
   4 Expire           0    0    0               00 
   5 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'temp'.sqlite_temp_master WHERE name='s2' AND type='table' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      1    0    0 2             01 usesStmtJournal=0
  17 TableLock        1    1    0 sqlite_temp_master 00 iDb=1 root=1 write=0
  18 String8          0    2    0 s2            00 r[2]='s2'
REG[2] =   t2[s2](8)
  19 String8          0    4    0 table         00 r[4]='table'
REG[4] =   t5[table](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          0    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   14    0               00 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [ROLLBACK;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       1    1    0               00 
SQL: [SAVEPOINT sp_84;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 sp_84         00 
   2 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='y' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 3             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 y             00 r[2]='y'
REG[2] =   t1[y](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
ATTACH 'test.db2' AS '123corp';]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0 test.db2      00 r[1]='test.db2'
REG[1] =   t8[test.db2](8)
   2 String8          0    2    0 123corp       00 r[2]='123corp'
REG[2] =   t7[123corp](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t8[test.db2](8)
REG[2] =   t7[123corp](8)
REG[3] =  NULL
SQL: [ATTACH 'test.db2' AS aux;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0 test.db2      00 r[1]='test.db2'
REG[1] =   t8[test.db2](8)
   2 String8          0    2    0 aux           00 r[2]='aux'
REG[2] =   t3[aux](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t8[test.db2](8)
REG[2] =   t3[aux](8)
REG[3] =  NULL
SQL: [DROP TABLE IF EXISTS t1;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    3 3             01 usesStmtJournal=0
   3 Transaction      1    0    0 2             01 usesStmtJournal=0
   4 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='i2' AND type='index' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 3             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 i2            00 r[2]='i2'
REG[2] =   t2[i2](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[i2](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
CREATE TABLE t1(a INTEGER PRIMARY KEY AUTOINCREMENT, b);]
VDBE Trace:
   0 Init             0   58    0               00 Start at 58
  58 Transaction      0    1    3 3             01 usesStmtJournal=0
  59 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  60 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:2
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:2
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:2
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t1            00 r[7]='t1'
REG[7] =   t2[t1](8)
  21 String8          0    8    0 t1            00 r[8]='t1'
REG[8] =   t2[t1](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  23 String8          0   10    0 CREATE TABLE t1(a INTEGER PRIMARY KEY AUTOINCREMENT, b) 00 r[10]='CREATE TABLE t1(a INTEGER PRIMARY KEY AUTOINCREMENT, b)'
REG[10] =   t55[CREATE TABLE t1](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s71[06171111017B7461626C657431743103.....{tablet1t1.](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s71[06171111017B7461626C657431743103.....{tablet1t1.](8)
REG[5] =  i:2
  26 Close            1    0    0               00 
  27 SetCookie        0    1    4               00 
  28 ReadCookie       0   14    2               00 
REG[14] =  i:4
  29 If              14   32    0               00 
REG[14] =  i:4
  32 CreateTable      0   13    0               00 r[13]=root iDb=0
REG[13] =  i:4
  33 OpenWrite        0    1    0 5             00 root=1 iDb=0
  34 NewRowid         0   12    0               00 r[12]=rowid
REG[12] =  i:3
  35 Blob             6   14    0              00 r[14]= (len=6)
REG[14] =  t6[060000000000......](8)
  36 Insert           0   14   12               08 intkey=r[12] data=r[14]
REG[14] =  t6[060000000000......](8)
REG[12] =  i:3
  37 Close            0    0    0               00 
  38 Close            0    0    0               00 
  39 Null             0   15   16               00 r[15..16]=NULL
REG[15] =  NULL
  40 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  41 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  42 MustBeInt       12   45    0               00 
REG[12] =  i:3
  43 NotExists        2   45   12               00 intkey=r[12]; pk
REG[12] =  i:3
  44 Rowid            2   16    0               00 r[16]=rowid
REG[16] =  i:3
  45 IsNull          16   53    0               00 if r[16]==NULL goto 53
REG[16] =  i:3
  46 String8          0   17    0 table         00 r[17]='table'
REG[17] =   t5[table](8)
  47 String8          0   18    0 sqlite_sequence 00 r[18]='sqlite_sequence'
REG[18] =   t15[sqlite_sequence](8)
  48 String8          0   19    0 sqlite_sequence 00 r[19]='sqlite_sequence'
REG[19] =   t15[sqlite_sequence](8)
  49 Copy            13   20    0               00 r[20]=r[13]
REG[20] =  i:4
  50 String8          0   21    0 CREATE TABLE sqlite_sequence(name,seq) 00 r[21]='CREATE TABLE sqlite_sequence(name,seq)'
REG[21] =   t38[CREATE TABLE sq](8)
  51 MakeRecord      17    5   22 BBBDB         00 r[22]=mkrec(r[17..21])
REG[22] =  s80[06172B2B01597461626C6573716C6974..++.Ytablesqlit](8)
  52 Insert           2   22   16               00 intkey=r[16] data=r[22]
REG[22] =  s80[06172B2B01597461626C6573716C6974..++.Ytablesqlit](8)
REG[16] =  i:3
  53 Close            2    0    0               00 
  54 SetCookie        0    1    4               00 
  55 ParseSchema      0    0    0 tbl_name='sqlite_sequence' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 3             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s15[sqlite_sequence](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s15[sqlite_sequence](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s38[CREATE TABLE sq](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s15[sqlite_sequence](8)
REG[6] =  i:4
REG[7] =   s38[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  56 ParseSchema      0    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 3             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s55[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:3
REG[7] =   s55[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  57 Halt             0    0    0               00 
SQL: [;
INSERT INTO t1 VALUES(16,5);]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    1    4 3             01 usesStmtJournal=0
  22 TableLock        0    3    1 t1            00 iDb=0 root=3 write=1
  23 TableLock        0    4    1 sqlite_sequence 00 iDb=0 root=4 write=1
  24 OpenRead         0    4    0 2             00 root=4 iDb=0; sqlite_sequence
  25 String8          0    1    0 t1            00 r[1]='t1'
REG[1] =   t2[t1](8)
  26 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  27 Rewind           0   35    0               00 
  35 Close            0    0    0               00 
  36 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 2             00 root=3 iDb=0; t1
   2 Integer         16    4    0               00 r[4]=16
REG[4] =  i:16
   3 NotNull          4    5    0               00 if r[4]!=NULL goto 5
REG[4] =  i:16
   5 MustBeInt        4    0    0               00 
REG[4] =  i:16
   6 MemMax           2    4    0               00 r[2]=max(r[2],r[4])
REG[4] =  i:16
   7 SoftNull         5    0    0               00 r[5]=NULL
   8 Integer          5    6    0               00 r[6]=5
REG[6] =  i:5
   9 NotExists        0   11    4               00 intkey=r[4]
REG[4] =  i:16
  11 MakeRecord       5    2    7 D             00 r[7]=mkrec(r[5..6])
REG[7] =  s4[03000105....](8)
  12 Insert           0    7    4 t1            13 intkey=r[4] data=r[7]
REG[7] =  s4[03000105....](8)
REG[4] =  i:16
  13 Close            0    0    0               00 
  14 OpenWrite        0    4    0 2             00 root=4 iDb=0; sqlite_sequence
  15 NotNull          3   17    0               00 if r[3]!=NULL goto 17
REG[3] =  NULL
  16 NewRowid         0    3    0               00 r[3]=rowid
REG[3] =  i:1
  17 MakeRecord       1    2    8               00 r[8]=mkrec(r[1..2])
REG[8] =  s6[031101743110...t1.](8)
  18 Insert           0    8    3               08 intkey=r[3] data=r[8]
REG[8] =  s6[031101743110...t1.](8)
REG[3] =  i:1
  19 Noop             0    0    0               00 
  20 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 3             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s55[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:3
REG[7] =   s55[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 3             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s55[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:3
REG[7] =   s55[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [SELECT typeof( 
  (SELECT a FROM t1 UNION SELECT a+1 FROM t1)
),  
  (SELECT a FROM t1 UNION SELECT a+1 FROM t1)
;]
VDBE Trace:
   0 Init             0   58    0               00 Start at 58
  58 Transaction      0    0    4 3             01 usesStmtJournal=0
  59 TableLock        0    3    0 t1            00 iDb=0 root=3 write=0
  60 Integer          1    7    0               00 r[7]=1
REG[7] =  i:1
  61 Goto             0    1    0               00 
   1 Once             0   27    0               00 
   2 Null             0    4    0               00 r[4]=NULL; Init subquery result
REG[4] =  NULL
   3 OpenEphemeral    4    1    0 k(1,B)        00 nColumn=1
   4 OpenRead         1    3    0 0             00 root=3 iDb=0; t1
   5 Explain          2    0    0 SCAN TABLE t1 00 
   6 Rewind           1   11    0               00 
   7 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:16
   8 MakeRecord       5    1    6               00 r[6]=mkrec(r[5])
REG[6] =  s3[020110...](8)
   9 IdxInsert        4    6    0               00 key=r[6]
REG[6] =  s3[020110...](8)
  10 Next             1    7    0               01 
  11 Close            1    0    0               00 
  12 OpenRead         0    3    0 0             00 root=3 iDb=0; t1
  13 Explain          3    0    0 SCAN TABLE t1 00 
  14 Rewind           0   20    0               00 
  15 Rowid            0    6    0               00 r[6]=rowid
REG[6] =  i:16
  16 Add              7    6    5               00 r[5]=r[7]+r[6]
REG[7] =  i:1
REG[6] =  i:16
REG[5] =  i:17
  17 MakeRecord       5    1    8               00 r[8]=mkrec(r[5])
REG[8] =  s3[020111...](8)
  18 IdxInsert        4    8    0               00 key=r[8]
REG[8] =  s3[020111...](8)
  19 Next             0   15    0               01 
  20 Close            0    0    0               00 
  21 Integer          1    9    0               00 r[9]=1; LIMIT counter
REG[9] =  i:1
  22 Rewind           4   26    0               00 
  23 Column           4    0    4               00 r[4]=
REG[4] =  i:16
  24 DecrJumpZero     9   26    0               00 if (--r[9])==0 goto 26
REG[9] =  i:1
  26 Close            4    0    0               00 
  27 Copy             4    3    0               00 r[3]=r[4]
REG[3] =  i:16
  28 Function0        0    3    1 typeof(1)     01 r[1]=func(r[3])
REG[3] =  i:16
REG[1] =   t7[integer](8)
  29 Once             1   55    0               00 
  30 Null             0   10    0               00 r[10]=NULL; Init subquery result
REG[10] =  NULL
  31 OpenEphemeral    5    1    0 k(1,B)        00 nColumn=1
  32 OpenRead         3    3    0 0             00 root=3 iDb=0; t1
  33 Explain          5    0    0 SCAN TABLE t1 00 
  34 Rewind           3   39    0               00 
  35 Rowid            3   11    0               00 r[11]=rowid
REG[11] =  i:16
  36 MakeRecord      11    1    6               00 r[6]=mkrec(r[11])
REG[6] =  s3[020110...](8)
  37 IdxInsert        5    6    0               00 key=r[6]
REG[6] =  s3[020110...](8)
  38 Next             3   35    0               01 
  39 Close            3    0    0               00 
  40 OpenRead         2    3    0 0             00 root=3 iDb=0; t1
  41 Explain          6    0    0 SCAN TABLE t1 00 
  42 Rewind           2   48    0               00 
  43 Rowid            2    6    0               00 r[6]=rowid
REG[6] =  i:16
  44 Add              7    6   11               00 r[11]=r[7]+r[6]
REG[7] =  i:1
REG[6] =  i:16
REG[11] =  i:17
  45 MakeRecord      11    1    8               00 r[8]=mkrec(r[11])
REG[8] =  s3[020111...](8)
  46 IdxInsert        5    8    0               00 key=r[8]
REG[8] =  s3[020111...](8)
  47 Next             2   43    0               01 
  48 Close            2    0    0               00 
  49 Integer          1   13    0               00 r[13]=1; LIMIT counter
REG[13] =  i:1
  50 Rewind           5   54    0               00 
  51 Column           5    0   10               00 r[10]=
REG[10] =  i:16
  52 DecrJumpZero    13   54    0               00 if (--r[13])==0 goto 54
REG[13] =  i:1
  54 Close            5    0    0               00 
  55 Copy            10    2    0               00 r[2]=r[10]
REG[2] =  i:16
  56 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =   t7[integer](8)
REG[2] =  i:16
  57 Halt             0    0    0               00 
SQL: [SELECT 1 IN ();]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   3 Halt             0    0    0               00 
SQL: [UPDATE sqlite_stat1 SET stat='10000' WHERE tbl='t1';]
VDBE Trace:
   0 Init             0   22    0               00 Start at 22
  22 Transaction      0    1    4 3             01 usesStmtJournal=0
  23 TableLock        0    2    1 sqlite_stat1  00 iDb=0 root=2 write=1
  24 String8          0    7    0 t1            00 r[7]='t1'
REG[7] =   t2[t1](8)
  25 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; sqlite_stat1
   3 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 OpenWrite        0    2    0 3             00 root=2 iDb=0; sqlite_stat1
  12 RowSetRead       1   20    2               00 r[2]=rowset(1)
REG[1] =  NULL
REG[2] =  NULL
  20 Noop             0    0    0               00 
  21 Halt             0    0    0               00 
SQL: [;
INSERT INTO sqlite_stat1(tbl,idx,stat) VALUES('t1',null,'1000');]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    1    4 3             01 usesStmtJournal=0
  11 TableLock        0    2    1 sqlite_stat1  00 iDb=0 root=2 write=1
  12 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 3             00 root=2 iDb=0; sqlite_stat1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
   4 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   5 String8          0    4    0 1000          00 r[4]='1000'
REG[4] =   t4[1000](8)
   6 MakeRecord       2    3    5               00 r[5]=mkrec(r[2..4])
REG[5] =  s10[04110015743131303030....t11000](8)
   7 Insert           0    5    1 sqlite_stat1  1B intkey=r[1] data=r[5]
REG[5] =  s10[04110015743131303030....t11000](8)
REG[1] =  i:1
   8 Noop             0    0    0               00 
   9 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 3             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s55[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:3
REG[7] =   s55[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
SELECT a=2 OR a=1 FROM t1;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    4 3             01 usesStmtJournal=0
  13 TableLock        0    3    0 t1            00 iDb=0 root=3 write=0
  14 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  15 Integer          1    7    0               00 r[7]=1
REG[7] =  i:1
  16 Goto             0    1    0               00 
   1 OpenRead         0    3    0 0             00 root=3 iDb=0; t1
   2 Explain          0    0    0 SCAN TABLE t1 00 
   3 Rewind           0   10    0               00 
   4 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:16
   5 Eq               4    2    3               64 if r[4]==r[3] goto 2
REG[4] =  i:2
REG[3] =  i:16
REG[2] =  i:0
   6 Eq               7    5    3               64 if r[7]==r[3] goto 5
REG[7] =  i:1
REG[3] =  i:16
REG[5] =  i:0
   7 Or               5    2    1               00 r[1]=(r[5] || r[2])
REG[5] =  i:0
REG[2] =  i:0
REG[1] =  i:0
   8 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   9 Next             0    4    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [SELECT typeof( ( SELECT b FROM t1 ORDER BY b DESC ) ),  ( SELECT b FROM t1 ORDER BY b DESC ) ;]
VDBE Trace:
   0 Init             0   50    0               00 Start at 50
  50 Transaction      0    0    4 3             01 usesStmtJournal=0
  51 TableLock        0    3    0 t1            00 iDb=0 root=3 write=0
  52 Goto             0    1    0               00 
   1 Once             0   23    0               00 
   2 Null             0    4    0               00 r[4]=NULL; Init subquery result
REG[4] =  NULL
   3 OpenEphemeral    2    3    0 k(1,-B)       00 nColumn=3
   4 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   5 OpenRead         0    3    0 2             00 root=3 iDb=0; t1
   6 Explain          1    0    0 SCAN TABLE t1 00 
   7 Rewind           0   18    0               00 
   8 Column           0    1    4               00 r[4]=t1.b
REG[4] =  i:5
   9 Copy             4    7    0               00 r[7]=r[4]
REG[7] =  i:5
  10 Sequence         2    8    0               00 r[8]=cursor[2].ctr++
REG[8] =  i:0
  11 Move             4    9    1               00 r[9]=r[4]
REG[9] =  i:5
  12 MakeRecord       7    3    6               00 r[6]=mkrec(r[7..9])
REG[6] =  s6[040108010505......](8)
  13 IdxInsert        2    6    0               00 key=r[6]
REG[6] =  s6[040108010505......](8)
  14 IfNotZero        5   17    1               00 if r[5]!=0 then r[5]-=1, goto 17
REG[5] =  i:1
  17 Next             0    8    0               01 
  18 Close            0    0    0               00 
  19 Sort             2   23    0               00 
  20 Column           2    2   11               00 r[11]=b
REG[11] =  i:5
  21 Move            11    4    1               00 r[4]=r[11]
REG[4] =  i:5
  22 Next             2   20    0               00 
  23 Copy             4    3    0               00 r[3]=r[4]
REG[3] =  i:5
  24 Function0        0    3    1 typeof(1)     01 r[1]=func(r[3])
REG[3] =  i:5
REG[1] =   t7[integer](8)
  25 Once             1   47    0               00 
  26 Null             0   12    0               00 r[12]=NULL; Init subquery result
REG[12] =  NULL
  27 OpenEphemeral    3    3    0 k(1,-B)       00 nColumn=3
  28 Integer          1   13    0               00 r[13]=1; LIMIT counter
REG[13] =  i:1
  29 OpenRead         1    3    0 2             00 root=3 iDb=0; t1
  30 Explain          2    0    0 SCAN TABLE t1 00 
  31 Rewind           1   42    0               00 
  32 Column           1    1   12               00 r[12]=t1.b
REG[12] =  i:5
  33 Copy            12   15    0               00 r[15]=r[12]
REG[15] =  i:5
  34 Sequence         3   16    0               00 r[16]=cursor[3].ctr++
REG[16] =  i:0
  35 Move            12   17    1               00 r[17]=r[12]
REG[17] =  i:5
  36 MakeRecord      15    3   14               00 r[14]=mkrec(r[15..17])
REG[14] =  s6[040108010505......](8)
  37 IdxInsert        3   14    0               00 key=r[14]
REG[14] =  s6[040108010505......](8)
  38 IfNotZero       13   41    1               00 if r[13]!=0 then r[13]-=1, goto 41
REG[13] =  i:1
  41 Next             1   32    0               01 
  42 Close            1    0    0               00 
  43 Sort             3   47    0               00 
  44 Column           3    2   11               00 r[11]=b
REG[11] =  i:5
  45 Move            11   12    1               00 r[12]=r[11]
REG[12] =  i:5
  46 Next             3   44    0               00 
  47 Copy            12    2    0               00 r[2]=r[12]
REG[2] =  i:5
  48 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =   t7[integer](8)
REG[2] =  i:5
  49 Halt             0    0    0               00 
SQL: [;
CREATE TABLE numbers(
    x INTEGER PRIMARY KEY AUTOINCREMENT,
    y TEXT,
    t2 TEXT,
    t3 TEXT
  );]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    4 3             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:4
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:4
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:4
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 numbers       00 r[7]='numbers'
REG[7] =   t7[numbers](8)
  21 String8          0    8    0 numbers       00 r[8]='numbers'
REG[8] =   t7[numbers](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  23 String8          0   10    0 CREATE TABLE numbers(
    x INTEGER PRIMARY KEY AUTOINCREMENT,
    y TEXT,
    t2 TEXT,
    t3 TEXT
  ) 00 r[10]='CREATE TABLE numbers(
    x INTEGER PRIMARY KEY AUTOINCREMENT,
    y TEXT,
    t2 TEXT,
    
REG[10] =   t103[CREATE TABLE nu](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s130[07171B1B01815B7461626C656E756D62......[tablenumb](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s130[07171B1B01815B7461626C656E756D62......[tablenumb](8)
REG[5] =  i:4
  26 Close            1    0    0               00 
  27 SetCookie        0    1    5               00 
  28 ParseSchema      0    0    0 tbl_name='numbers' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    5 3             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 numbers       00 r[2]='numbers'
REG[2] =   t7[numbers](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s7[numbers](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s7[numbers](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s103[CREATE TABLE nu](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s7[numbers](8)
REG[6] =  i:5
REG[7] =   s103[CREATE TABLE nu](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    5 3             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s55[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:3
REG[7] =   s55[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [SELECT typeof( ( SELECT a FROM t1 WHERE b<'one' ORDER BY b )  ),  ( SELECT a FROM t1 WHERE b<'one' ORDER BY b )  ;]
VDBE Trace:
   0 Init             0   54    0               00 Start at 54
  54 Transaction      0    0    5 3             01 usesStmtJournal=0
  55 TableLock        0    3    0 t1            00 iDb=0 root=3 write=0
  56 String8          0    7    0 one           00 r[7]='one'
REG[7] =   t3[one](8)
  57 Goto             0    1    0               00 
   1 Once             0   25    0               00 
   2 Null             0    4    0               00 r[4]=NULL; Init subquery result
REG[4] =  NULL
   3 OpenEphemeral    2    3    0 k(1,B)        00 nColumn=3
   4 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   5 OpenRead         0    3    0 2             00 root=3 iDb=0; t1
   6 Explain          1    0    0 SCAN TABLE t1 00 
   7 Rewind           0   20    0               00 
   8 Column           0    1    6               00 r[6]=t1.b
REG[6] =  i:5
   9 Ge               7   19    6 (BINARY)      51 if r[7]>=r[6] goto 19
REG[7] =   t3[one](8)
REG[6] =  i:5
  10 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:16
  11 Copy             6    9    0               00 r[9]=r[6]
REG[9] =  i:5
  12 Sequence         2   10    0               00 r[10]=cursor[2].ctr++
REG[10] =  i:0
  13 Move             4   11    1               00 r[11]=r[4]
REG[11] =  i:16
  14 MakeRecord       9    3    8               00 r[8]=mkrec(r[9..11])
REG[8] =  s6[040108010510......](8)
  15 IdxInsert        2    8    0               00 key=r[8]
REG[8] =  s6[040108010510......](8)
  16 IfNotZero        5   19    1               00 if r[5]!=0 then r[5]-=1, goto 19
REG[5] =  i:1
  19 Next             0    8    0               01 
  20 Close            0    0    0               00 
  21 Sort             2   25    0               00 
  22 Column           2    2   13               00 r[13]=a
REG[13] =  i:16
  23 Move            13    4    1               00 r[4]=r[13]
REG[4] =  i:16
  24 Next             2   22    0               00 
  25 Copy             4    3    0               00 r[3]=r[4]
REG[3] =  i:16
  26 Function0        0    3    1 typeof(1)     01 r[1]=func(r[3])
REG[3] =  i:16
REG[1] =   t7[integer](8)
  27 Once             1   51    0               00 
  28 Null             0   14    0               00 r[14]=NULL; Init subquery result
REG[14] =  NULL
  29 OpenEphemeral    3    3    0 k(1,B)        00 nColumn=3
  30 Integer          1   15    0               00 r[15]=1; LIMIT counter
REG[15] =  i:1
  31 OpenRead         1    3    0 2             00 root=3 iDb=0; t1
  32 Explain          2    0    0 SCAN TABLE t1 00 
  33 Rewind           1   46    0               00 
  34 Column           1    1   12               00 r[12]=t1.b
REG[12] =  i:5
  35 Ge               7   45   12 (BINARY)      51 if r[7]>=r[12] goto 45
REG[7] =   t3[one](8)
REG[12] =  i:5
  36 Rowid            1   14    0               00 r[14]=rowid
REG[14] =  i:16
  37 Copy            12   17    0               00 r[17]=r[12]
REG[17] =  i:5
  38 Sequence         3   18    0               00 r[18]=cursor[3].ctr++
REG[18] =  i:0
  39 Move            14   19    1               00 r[19]=r[14]
REG[19] =  i:16
  40 MakeRecord      17    3   16               00 r[16]=mkrec(r[17..19])
REG[16] =  s6[040108010510......](8)
  41 IdxInsert        3   16    0               00 key=r[16]
REG[16] =  s6[040108010510......](8)
  42 IfNotZero       15   45    1               00 if r[15]!=0 then r[15]-=1, goto 45
REG[15] =  i:1
  45 Next             1   34    0               01 
  46 Close            1    0    0               00 
  47 Sort             3   51    0               00 
  48 Column           3    2   20               00 r[20]=a
REG[20] =  i:16
  49 Move            20   14    1               00 r[14]=r[20]
REG[14] =  i:16
  50 Next             3   48    0               00 
  51 Copy            14    2    0               00 r[2]=r[14]
REG[2] =  i:16
  52 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =   t7[integer](8)
REG[2] =  i:16
  53 Halt             0    0    0               00 
SQL: [;
SELECT CASE WHEN '0' THEN 'true' ELSE 'false' END;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 String8          0    2    0 0             00 r[2]='0'
REG[2] =   t1[0](8)
   8 Goto             0    1    0               00 
   1 IfNot            2    4    1               00 
REG[2] =   t1[0](8)
   4 String8          0    1    0 false         00 r[1]='false'
REG[1] =   t5[false](8)
   5 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t5[false](8)
   6 Halt             0    0    0               00 
SQL: [ANALYZE sqlite_master;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1    5 3             01 usesStmtJournal=0
  17 TableLock        0    2    1 sqlite_stat1  00 iDb=0 root=2 write=1
  18 String8          0    3    0 sqlite_master 00 r[3]='sqlite_master'
REG[3] =   t13[sqlite_master](8)
  19 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        3    2    0 3             00 root=2 iDb=0; sqlite_stat1
   3 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   4 Rewind           3   11    0               00 
   5 Column           3    0    2               00 r[2]=sqlite_stat1.tbl
REG[2] =   s2[t1](8)
   6 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =   t13[sqlite_master](8)
REG[2] =   s2[t1](8)
  10 Next             3    5    0               01 
  11 Close            3    0    0               00 
  12 OpenWrite        0    2    0 3             00 root=2 iDb=0; sqlite_stat1
  13 LoadAnalysis     0    0    0               00 
SQL: [SELECT tbl,idx,stat FROM 'main'.sqlite_stat1]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    5 3             01 usesStmtJournal=0
  12 TableLock        0    2    0 sqlite_stat1  00 iDb=0 root=2 write=0
  13 Goto             0    1    0               00 
   1 OpenRead         0    2    0 3             00 root=2 iDb=0; sqlite_stat1
   2 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_stat1.tbl
REG[1] =   s2[t1](8)
   5 Column           0    1    2               00 r[2]=sqlite_stat1.idx
REG[2] =  NULL
   6 Column           0    2    3               00 r[3]=sqlite_stat1.stat
REG[3] =   s4[1000](8)
   7 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  NULL
REG[3] =   s4[1000](8)
   8 Next             0    4    0               01 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
  14 Expire           0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [CREATE TABLE t4(t5, t6, t7 DEFAULT 'xyz');]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    5 3             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:6
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:5
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:5
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:5
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:5
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:5
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t4            00 r[7]='t4'
REG[7] =   t2[t4](8)
  21 String8          0    8    0 t4            00 r[8]='t4'
REG[8] =   t2[t4](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:6
  23 String8          0   10    0 CREATE TABLE t4(t5, t6, t7 DEFAULT 'xyz') 00 r[10]='CREATE TABLE t4(t5, t6, t7 DEFAULT 'xyz')'
REG[10] =   t41[CREATE TABLE t4](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s57[06171111015F7461626C657434743406....._tablet4t4.](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s57[06171111015F7461626C657434743406....._tablet4t4.](8)
REG[5] =  i:5
  26 Close            1    0    0               00 
  27 SetCookie        0    1    6               00 
  28 ParseSchema      0    0    0 tbl_name='t4' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 3             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t4            00 r[2]='t4'
REG[2] =   t2[t4](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s2[t4](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t4](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:6
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s41[CREATE TABLE t4](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t4](8)
REG[6] =  i:6
REG[7] =   s41[CREATE TABLE t4](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [CREATE TABLE t8 (t9 INTEGER PRIMARY KEY AUTOINCREMENT, t11, t12 BLOB, t13, t14 INTEGER, t15 INTEGER, m, rins INTEGER, t16 INTEGER, t17 INTEGER, t18 INTEGER, t19 INTEGER, t20 INTEGER, one INTEGER, c INTEGER, i1 INTEGER, i2a, i2b, p INTEGER, q, r, t10 INTEGER, mask, ab INTEGER DEFAULT -1, v1 TEXT DEFAULT NULL, db5 INTEGER DEFAULT NULL, automated_conversation INTEGER DEFAULT 0, abc INTEGER DEFAULT -1, abcview INTEGER DEFAULT -1);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    6 3             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:7
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:6
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:6
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:6
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:6
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:6
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t8            00 r[7]='t8'
REG[7] =   t2[t8](8)
  21 String8          0    8    0 t8            00 r[8]='t8'
REG[8] =   t2[t8](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:7
  23 String8          0   10    0 CREATE TABLE t8 (t9 INTEGER PRIMARY KEY AUTOINCREMENT, t11, t12 BLOB, t13, t14 INTEGER, t15 INTEGER, m, rins INTEGER, t16 INTEGER, t17 INTEGER, t18 INTEGER, t19 INTEGER, t20 INTEGER, one INTEGER, c INTEGER, i1 INTEGER, i2a, i2b, p INTEGER, q, r, t10 INTEGER, mask, ab INTEGER DEFAULT -1, v1 TEXT DEFAULT NULL, db5 INTEGER DEFAULT NULL, automated_conversation INTEGER DEFAULT 0, abc INTEGER DEFAULT -1, abcview INTEGER DEFAULT -1) 00 r[10]='CREATE TABLE t8 (t9 INTEGER PRIMARY KEY AUTOINCREMENT, t11, t12 BLOB, t13, t14 INTEGER, t15 
REG[10] =   t429[CREATE TABLE t8](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s446[071711110186677461626C6574387438......gtablet8t8](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s446[071711110186677461626C6574387438......gtablet8t8](8)
REG[5] =  i:6
  26 Close            1    0    0               00 
  27 SetCookie        0    1    7               00 
  28 ParseSchema      0    0    0 tbl_name='t8' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    7 3             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t8            00 r[2]='t8'
REG[2] =   t2[t8](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s2[t4](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t8](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s2[t8](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t8](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:7
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s429[CREATE TABLE t8](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t8](8)
REG[6] =  i:7
REG[7] =   s429[CREATE TABLE t8](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='t1x0' AND type='index' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    7 3             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1x0          00 r[2]='t1x0'
REG[2] =   t4[t1x0](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t1x0](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t1x0](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t1x0](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t1x0](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t1x0](8)
REG[1] =   s2[t4](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t8](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t1x0](8)
REG[1] =   s2[t8](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='t2x1' AND type='index' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    7 3             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t2x1          00 r[2]='t2x1'
REG[2] =   t4[t2x1](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2x1](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2x1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2x1](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2x1](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2x1](8)
REG[1] =   s2[t4](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t8](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2x1](8)
REG[1] =   s2[t8](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [INSERT OR FAIL     INTO numbers DEFAULT VALUES;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    1    7 3             01 usesStmtJournal=0
  16 TableLock        0    5    1 numbers       00 iDb=0 root=5 write=1
  17 TableLock        0    4    1 sqlite_sequence 00 iDb=0 root=4 write=1
  18 OpenRead         0    4    0 2             00 root=4 iDb=0; sqlite_sequence
  19 String8          0    1    0 numbers       00 r[1]='numbers'
REG[1] =   t7[numbers](8)
  20 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  21 Rewind           0   29    0               00 
  22 Column           0    0    2               00 r[2]=
REG[2] =   s2[t1](8)
  23 Ne               1   27    2               10 if r[1]!=r[2] goto 27
REG[1] =   t7[numbers](8)
REG[2] =   s2[t1](8)
  27 Next             0   22    0               00 
  28 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
  29 Close            0    0    0               00 
  30 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  31 Null             0    7    0               00 r[7]=NULL
REG[7] =  NULL
  32 Null             0    8    0               00 r[8]=NULL
REG[8] =  NULL
  33 Goto             0    1    0               00 
   1 OpenWrite        0    5    0 4             00 root=5 iDb=0; numbers
   2 NewRowid         0    4    2               00 r[4]=rowid
REG[2] =  i:0
REG[4] =  i:1
   3 MemMax           2    4    0               00 r[2]=max(r[2],r[4])
REG[4] =  i:1
   4 SoftNull         5    0    0               00 r[5]=NULL
   5 MakeRecord       5    4    9 DBBB          00 r[9]=mkrec(r[5..8])
REG[9] =  s5[0500000000.....](8)
   6 Insert           0    9    4 numbers       1B intkey=r[4] data=r[9]
REG[9] =  s5[0500000000.....](8)
REG[4] =  i:1
   7 Close            0    0    0               00 
   8 OpenWrite        0    4    0 2             00 root=4 iDb=0; sqlite_sequence
   9 NotNull          3   11    0               00 if r[3]!=NULL goto 11
REG[3] =  NULL
  10 NewRowid         0    3    0               00 r[3]=rowid
REG[3] =  i:2
  11 MakeRecord       1    2   10               00 r[10]=mkrec(r[1..2])
REG[10] =  s10[031B096E756D62657273...numbers](8)
  12 Insert           0   10    3               08 intkey=r[3] data=r[10]
REG[10] =  s10[031B096E756D62657273...numbers](8)
REG[3] =  i:2
  13 Noop             0    0    0               00 
  14 Halt             0    0    0               00 
SQL: [;
INSERT INTO sqlite_stat1 VALUES('numbers','t1x1','10747267 50 40');]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    1    7 3             01 usesStmtJournal=0
  11 TableLock        0    2    1 sqlite_stat1  00 iDb=0 root=2 write=1
  12 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 3             00 root=2 iDb=0; sqlite_stat1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   3 String8          0    2    0 numbers       00 r[2]='numbers'
REG[2] =   t7[numbers](8)
   4 String8          0    3    0 t1x1          00 r[3]='t1x1'
REG[3] =   t4[t1x1](8)
   5 String8          0    4    0 10747267 50 40 00 r[4]='10747267 50 40'
REG[4] =   t14[10747267 50 40](8)
   6 MakeRecord       2    3    5               00 r[5]=mkrec(r[2..4])
REG[5] =  s29[041B15296E756D626572737431783131...)numberst1x11](8)
   7 Insert           0    5    1 sqlite_stat1  1B intkey=r[1] data=r[5]
REG[5] =  s29[041B15296E756D626572737431783131...)numberst1x11](8)
REG[1] =  i:2
   8 Noop             0    0    0               00 
   9 Halt             0    0    0               00 
SQL: [;
SELECT 5 not between x and x FROM numbers;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    7 3             01 usesStmtJournal=0
  14 TableLock        0    5    0 numbers       00 iDb=0 root=5 write=0
  15 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
  16 Goto             0    1    0               00 
   1 OpenRead         0    5    0 0             00 root=5 iDb=0; numbers
   2 Explain          0    0    0 SCAN TABLE numbers 00 
   3 Rewind           0   11    0               00 
   4 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:1
   5 Ge               4    5    3               64 if r[4]>=r[3] goto 5
REG[4] =  i:1
REG[3] =  i:5
REG[5] =  i:1
   6 Le               4    6    3               64 if r[4]<=r[3] goto 6
REG[4] =  i:1
REG[3] =  i:5
REG[6] =  i:0
   7 And              5    6    2               00 r[2]=(r[5] && r[6])
REG[5] =  i:1
REG[6] =  i:0
REG[2] =  i:0
   8 Not              2    1    0               00 r[1]= !r[2]
REG[2] =  i:0
REG[1] =  i:1
   9 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  10 Next             0    4    0               01 
  11 Close            0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;
INSERT INTO sqlite_stat1 VALUES('xx3','t1x0','10747267 1');]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    1    7 3             01 usesStmtJournal=0
  11 TableLock        0    2    1 sqlite_stat1  00 iDb=0 root=2 write=1
  12 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 3             00 root=2 iDb=0; sqlite_stat1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   3 String8          0    2    0 xx3           00 r[2]='xx3'
REG[2] =   t3[xx3](8)
   4 String8          0    3    0 t1x0          00 r[3]='t1x0'
REG[3] =   t4[t1x0](8)
   5 String8          0    4    0 10747267 1    00 r[4]='10747267 1'
REG[4] =   t10[10747267 1](8)
   6 MakeRecord       2    3    5               00 r[5]=mkrec(r[2..4])
REG[5] =  s21[04131521787833743178303130373437...!xx3t1x010747](8)
   7 Insert           0    5    1 sqlite_stat1  1B intkey=r[1] data=r[5]
REG[5] =  s21[04131521787833743178303130373437...!xx3t1x010747](8)
REG[1] =  i:3
   8 Noop             0    0    0               00 
   9 Halt             0    0    0               00 
SQL: [;
INSERT INTO sqlite_stat1 VALUES('r','t2x10','39667 19834');]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    1    7 3             01 usesStmtJournal=0
  11 TableLock        0    2    1 sqlite_stat1  00 iDb=0 root=2 write=1
  12 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 3             00 root=2 iDb=0; sqlite_stat1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   3 String8          0    2    0 r             00 r[2]='r'
REG[2] =   t1[r](8)
   4 String8          0    3    0 t2x10         00 r[3]='t2x10'
REG[3] =   t5[t2x10](8)
   5 String8          0    4    0 39667 19834   00 r[4]='39667 19834'
REG[4] =   t11[39667 19834](8)
   6 MakeRecord       2    3    5               00 r[5]=mkrec(r[2..4])
REG[5] =  s21[040F1723727432783130333936363720...#rt2x1039667 ](8)
   7 Insert           0    5    1 sqlite_stat1  1B intkey=r[1] data=r[5]
REG[5] =  s21[040F1723727432783130333936363720...#rt2x1039667 ](8)
REG[1] =  i:4
   8 Noop             0    0    0               00 
   9 Halt             0    0    0               00 
SQL: [;
INSERT INTO sqlite_stat1 VALUES('xx3','t2x4','39667 4408');]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    1    7 3             01 usesStmtJournal=0
  11 TableLock        0    2    1 sqlite_stat1  00 iDb=0 root=2 write=1
  12 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 3             00 root=2 iDb=0; sqlite_stat1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   3 String8          0    2    0 xx3           00 r[2]='xx3'
REG[2] =   t3[xx3](8)
   4 String8          0    3    0 t2x4          00 r[3]='t2x4'
REG[3] =   t4[t2x4](8)
   5 String8          0    4    0 39667 4408    00 r[4]='39667 4408'
REG[4] =   t10[39667 4408](8)
   6 MakeRecord       2    3    5               00 r[5]=mkrec(r[2..4])
REG[5] =  s21[04131521787833743278343339363637...!xx3t2x439667](8)
   7 Insert           0    5    1 sqlite_stat1  1B intkey=r[1] data=r[5]
REG[5] =  s21[04131521787833743278343339363637...!xx3t2x439667](8)
REG[1] =  i:5
   8 Noop             0    0    0               00 
   9 Halt             0    0    0               00 
SQL: [;
INSERT INTO "sqlite_stat1" VALUES('xx3','vbde','40000 400 1 1');]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    1    7 3             01 usesStmtJournal=0
  11 TableLock        0    2    1 sqlite_stat1  00 iDb=0 root=2 write=1
  12 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 3             00 root=2 iDb=0; sqlite_stat1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   3 String8          0    2    0 xx3           00 r[2]='xx3'
REG[2] =   t3[xx3](8)
   4 String8          0    3    0 vbde          00 r[3]='vbde'
REG[3] =   t4[vbde](8)
   5 String8          0    4    0 40000 400 1 1 00 r[4]='40000 400 1 1'
REG[4] =   t13[40000 400 1 1](8)
   6 MakeRecord       2    3    5               00 r[5]=mkrec(r[2..4])
REG[5] =  s24[04131527787833766264653430303030...'xx3vbde40000](8)
   7 Insert           0    5    1 sqlite_stat1  1B intkey=r[1] data=r[5]
REG[5] =  s24[04131527787833766264653430303030...'xx3vbde40000](8)
REG[1] =  i:6
   8 Noop             0    0    0               00 
   9 Halt             0    0    0               00 
SQL: [INSERT OR REPLACE  INTO t1      (b, b) VALUES(1, 2);]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1    7 3             01 usesStmtJournal=0
  17 TableLock        0    3    1 t1            00 iDb=0 root=3 write=1
  18 TableLock        0    4    1 sqlite_sequence 00 iDb=0 root=4 write=1
  19 OpenRead         0    4    0 2             00 root=4 iDb=0; sqlite_sequence
  20 String8          0    1    0 t1            00 r[1]='t1'
REG[1] =   t2[t1](8)
  21 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  22 Rewind           0   30    0               00 
  23 Column           0    0    2               00 r[2]=
REG[2] =   s2[t1](8)
  24 Ne               1   28    2               10 if r[1]!=r[2] goto 28
REG[1] =   t2[t1](8)
REG[2] =   s2[t1](8)
  25 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:1
  26 Column           0    1    2               00 r[2]=
REG[2] =  i:16
  27 Goto             0   30    0               00 
  30 Close            0    0    0               00 
  31 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 2             00 root=3 iDb=0; t1
   2 NewRowid         0    4    2               00 r[4]=rowid
REG[2] =  i:16
REG[4] =  i:17
   3 MemMax           2    4    0               00 r[2]=max(r[2],r[4])
REG[4] =  i:17
   4 SoftNull         5    0    0               00 r[5]=NULL
   5 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
   6 MakeRecord       5    2    7 D             00 r[7]=mkrec(r[5..6])
REG[7] =  s3[030009...](8)
   7 Insert           0    7    4 t1            1B intkey=r[4] data=r[7]
REG[7] =  s3[030009...](8)
REG[4] =  i:17
   8 Close            0    0    0               00 
   9 OpenWrite        0    4    0 2             00 root=4 iDb=0; sqlite_sequence
  10 NotNull          3   12    0               00 if r[3]!=NULL goto 12
REG[3] =  i:1
  12 MakeRecord       1    2    8               00 r[8]=mkrec(r[1..2])
REG[8] =  s6[031101743111...t1.](8)
  13 Insert           0    8    3               08 intkey=r[3] data=r[8]
REG[8] =  s6[031101743111...t1.](8)
REG[3] =  i:1
  14 Noop             0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [INSERT OR FAIL     INTO main.t4 (t7, t7) VALUES(1, 2);]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    1    7 3             01 usesStmtJournal=0
   9 TableLock        0    6    1 t4            00 iDb=0 root=6 write=1
  10 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  11 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  12 Goto             0    1    0               00 
   1 OpenWrite        0    6    0 3             00 root=6 iDb=0; t4
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
   4 MakeRecord       2    3    5               00 r[5]=mkrec(r[2..4])
REG[5] =  s4[04000009....](8)
   5 Insert           0    5    1 t4            1B intkey=r[1] data=r[5]
REG[5] =  s4[04000009....](8)
REG[1] =  i:1
   6 Noop             0    0    0               00 
   7 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t8' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    7 3             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t8            00 r[2]='t8'
REG[2] =   t2[t8](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s2[t4](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t8](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t8](8)
REG[1] =   s2[t8](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t8](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:7
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s429[CREATE TABLE t8](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t8](8)
REG[6] =  i:7
REG[7] =   s429[CREATE TABLE t8](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='"4' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    7 3             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 "4            00 r[2]='"4'
REG[2] =   t2["4](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2["4](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2["4](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2["4](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2["4](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2["4](8)
REG[1] =   s2[t4](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t8](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2["4](8)
REG[1] =   s2[t8](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='numbers' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    7 3             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 numbers       00 r[2]='numbers'
REG[2] =   t7[numbers](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s7[numbers](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s7[numbers](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s103[CREATE TABLE nu](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s7[numbers](8)
REG[6] =  i:5
REG[7] =   s103[CREATE TABLE nu](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s2[t4](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t8](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[numbers](8)
REG[1] =   s2[t8](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [INSERT INTO t4 DEFAULT VALUES;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    1    7 3             01 usesStmtJournal=0
   8 TableLock        0    6    1 t4            00 iDb=0 root=6 write=1
   9 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 String8          0    4    0 xyz           00 r[4]='xyz'
REG[4] =   t3[xyz](8)
  12 Goto             0    1    0               00 
   1 OpenWrite        0    6    0 3             00 root=6 iDb=0; t4
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   3 MakeRecord       2    3    5               00 r[5]=mkrec(r[2..4])
REG[5] =  s7[0400001378797A....xyz](8)
   4 Insert           0    5    1 t4            1B intkey=r[1] data=r[5]
REG[5] =  s7[0400001378797A....xyz](8)
REG[1] =  i:2
   5 Noop             0    0    0               00 
   6 Halt             0    0    0               00 
SQL: [;
UPDATE t4 SET t7='abc', t7='t7?c';]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      0    1    7 3             01 usesStmtJournal=0
  21 TableLock        0    6    1 t4            00 iDb=0 root=6 write=1
  22 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    6    0 0             00 root=6 iDb=0; t4
   3 Explain          0    0    0 SCAN TABLE t4 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:2
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 OpenWrite        0    6    0 3             00 root=6 iDb=0; t4
  10 RowSetRead       1   18    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:1
  12 Column           0    0    3               00 r[3]=t4.t5
REG[3] =  NULL
  13 Column           0    1    4               00 r[4]=t4.t6
REG[4] =  NULL
  14 String8          0    5    0 t7?c          00 r[5]='t7?c'
REG[5] =   t4[t7?c](8)
  15 MakeRecord       3    3    6               00 r[6]=mkrec(r[3..5])
REG[6] =  s8[0400001574373F63....t7?c](8)
  16 Insert           0    6    2 t4            05 intkey=r[2] data=r[6]
REG[6] =  s8[0400001574373F63....t7?c](8)
REG[2] =  i:1
  17 Goto             0   10    0               00 
  10 RowSetRead       1   18    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:2
  12 Column           0    0    3               00 r[3]=t4.t5
REG[3] =  NULL
  13 Column           0    1    4               00 r[4]=t4.t6
REG[4] =  NULL
  14 String           4    5    0 t7?c          00 r[5]='t7?c' (len=4)
REG[5] =   t4[t7?c](8)
  15 MakeRecord       3    3    6               00 r[6]=mkrec(r[3..5])
REG[6] =  s8[0400001574373F63....t7?c](8)
  16 Insert           0    6    2 t4            05 intkey=r[2] data=r[6]
REG[6] =  s8[0400001574373F63....t7?c](8)
REG[2] =  i:2
  17 Goto             0   10    0               00 
  10 RowSetRead       1   18    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  18 Noop             0    0    0               00 
  19 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t4' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    7 3             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t4            00 r[2]='t4'
REG[2] =   t2[t4](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[numbers](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s7[numbers](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s2[t4](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t4](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:6
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s41[CREATE TABLE t4](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t4](8)
REG[6] =  i:6
REG[7] =   s41[CREATE TABLE t4](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t8](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s2[t8](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
SELECT CASE WHEN y = y THEN 'eq' ELSE 'ne' END FROM numbers;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    7 3             01 usesStmtJournal=0
  14 TableLock        0    5    0 numbers       00 iDb=0 root=5 write=0
  15 Goto             0    1    0               00 
   1 OpenRead         0    5    0 2             00 root=5 iDb=0; numbers
   2 Explain          0    0    0 SCAN TABLE numbers 00 
   3 Rewind           0   11    0               00 
   4 Column           0    1    2               00 r[2]=numbers.y
REG[2] =  NULL
   5 Ne               2    8    2 (BINARY)      51 if r[2]!=r[2] goto 8
REG[2] =  NULL
REG[2] =  NULL
   8 String8          0    1    0 ne            00 r[1]='ne'
REG[1] =   t2[ne](8)
   9 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t2[ne](8)
  10 Next             0    4    0               01 
  11 Close            0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [SELECT b FROM t1 WHERE b=0 AND b<0 ORDER BY b;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    7 3             01 usesStmtJournal=0
  14 TableLock        0    3    0 t1            00 iDb=0 root=3 write=0
  15 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
  16 Goto             0    1    0               00 
   1 Noop             1    3    0               00 
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0   11    0               00 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  i:5
   6 Ne               2   10    1 (BINARY)      51 if r[2]!=r[1] goto 10
REG[2] =  i:0
REG[1] =  i:5
  10 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  i:1
   6 Ne               2   10    1 (BINARY)      51 if r[2]!=r[1] goto 10
REG[2] =  i:0
REG[1] =  i:1
  10 Next             0    5    0               01 
  11 Close            0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [SELECT t2 FROM numbers WHERE ((t2<2 OR t2 IS NULL) AND t3<3) OR t3>1e10 ORDER BY t2;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0    7 3             01 usesStmtJournal=0
  26 TableLock        0    5    0 numbers       00 iDb=0 root=5 write=0
  27 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
  28 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  29 Real             0    5    0 10000000000   00 r[5]=10000000000
REG[5] =  r:1e+10
  30 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0    5    0 4             00 root=5 iDb=0; numbers
   3 Explain          0    0    0 SCAN TABLE numbers 00 
   4 Rewind           0   17    0               00 
   5 Column           0    2    1               00 r[1]=numbers.t2
REG[1] =  NULL
   6 Lt               2    8    1 (BINARY)      42 if r[2]<r[1] goto 8
REG[2] =  i:2
REG[1] =  NULL
   7 NotNull          1   10    0               00 if r[1]!=NULL goto 10
REG[1] =  NULL
   8 Column           0    3    3               00 r[3]=numbers.t3
REG[3] =  NULL
   9 Lt               4   12    3 (BINARY)      42 if r[4]<r[3] goto 12
REG[4] =  i:3
REG[3] =  NULL
  10 Column           0    3    3               00 r[3]=numbers.t3
REG[3] =  NULL
  11 Le               5   16    3 (BINARY)      52 if r[5]<=r[3] goto 16
REG[5] =  r:1e+10
REG[3] =  NULL
  16 Next             0    5    0               01 
  17 Close            0    0    0               00 
  18 OpenPseudo       2    9    3               00 3 columns in r[9]
  19 SorterSort       1   24    0               00 
  24 Halt             0    0    0               00 
SQL: [;
SELECT round(-('-'||'123'));]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
   5 String8          0    5    0 -             00 r[5]='-'
REG[5] =   t1[-](8)
   6 String8          0    6    0 123           00 r[6]='123'
REG[6] =   t3[123](8)
   7 Concat           6    5    4               00 r[4]=r[5]+r[6]
REG[6] =   t3[123](8)
REG[5] =   t1[-](8)
REG[4] =   s4[-123](8)
   8 Subtract         4    3    2               00 r[2]=r[3]-r[4]
REG[4] =   s4[-123](8)
REG[3] =  i:0
REG[2] =  i:123
   9 Goto             0    1    0               00 
   1 Function0        1    2    1 round(1)      01 r[1]=func(r[2])
REG[2] =  i:123
REG[1] =  r:123
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  r:123
   3 Halt             0    0    0               00 
SQL: [SELECT * FROM t8 CROSS JOIN t4 LIMIT 1
;]
VDBE Trace:
   0 Init             0   47    0               00 Start at 47
  47 Transaction      0    0    7 3             01 usesStmtJournal=0
  48 TableLock        0    7    0 t8            00 iDb=0 root=7 write=0
  49 TableLock        0    6    0 t4            00 iDb=0 root=6 write=0
  50 Goto             0    1    0               00 
   1 Integer          1    1    0               00 r[1]=1; LIMIT counter
REG[1] =  i:1
   2 OpenRead         0    7    0 29            00 root=7 iDb=0; t8
   3 OpenRead         1    6    0 3             00 root=6 iDb=0; t4
   4 Explain          0    0    0 SCAN TABLE t8 00 
   5 Rewind           0   44    0               00 
  44 Close            0    0    0               00 
  45 Close            1    0    0               00 
  46 Halt             0    0    0               00 
SQL: [SELECT count(*) FROM t8 , t8 
;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    7 3             01 usesStmtJournal=0
  18 TableLock        0    7    0 t8            00 iDb=0 root=7 write=0
  19 Goto             0    1    0               00 
   1 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
   2 OpenRead         0    7    0 0             00 root=7 iDb=0; t8
   3 OpenRead         1    7    0 0             00 root=7 iDb=0; t8
   4 Explain          0    0    0 SCAN TABLE t8 00 
   5 Rewind           0   11    0               00 
  11 Close            0    0    0               00 
  12 Close            1    0    0               00 
  13 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  14 Copy             1    2    0               00 r[2]=r[1]
REG[2] =  i:0
  15 ResultRow        2    1    0               00 output=r[2]
REG[2] =  i:0
  16 Halt             0    0    0               00 
SQL: [SELECT * FROM t4 CROSS JOIN numbers ON ('0.9') ;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    0    7 3             01 usesStmtJournal=0
  22 TableLock        0    6    0 t4            00 iDb=0 root=6 write=0
  23 TableLock        0    5    0 numbers       00 iDb=0 root=5 write=0
  24 String8          0    1    0 0.9           00 r[1]='0.9'
REG[1] =   t3[0.9](8)
  25 Goto             0    1    0               00 
   1 IfNot            1   18    1               00 
REG[1] =   t3[0.9](8)
   2 OpenRead         0    6    0 3             00 root=6 iDb=0; t4
   3 OpenRead         1    5    0 4             00 root=5 iDb=0; numbers
   4 Explain          0    0    0 SCAN TABLE t4 00 
   5 Rewind           0   18    0               00 
   6 Explain          0    1    1 SCAN TABLE numbers 00 
   7 Rewind           1   17    0               00 
   8 Column           0    0    2               00 r[2]=t4.t5
REG[2] =  NULL
   9 Column           0    1    3               00 r[3]=t4.t6
REG[3] =  NULL
  10 Column           0    2    4 xyz           00 r[4]=t4.t7
REG[4] =   s4[t7?c](8)
  11 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  12 Column           1    1    6               00 r[6]=numbers.y
REG[6] =  NULL
  13 Column           1    2    7               00 r[7]=numbers.t2
REG[7] =  NULL
  14 Column           1    3    8               00 r[8]=numbers.t3
REG[8] =  NULL
  15 ResultRow        2    7    0               00 output=r[2..8]
REG[2] =  NULL
REG[3] =  NULL
REG[4] =   s4[t7?c](8)
REG[5] =  i:1
REG[6] =  NULL
REG[7] =  NULL
REG[8] =  NULL
  16 Next             1    8    0               01 
  17 Next             0    6    0               01 
   6 Explain          0    1    1 SCAN TABLE numbers 00 
   7 Rewind           1   17    0               00 
   8 Column           0    0    2               00 r[2]=t4.t5
REG[2] =  NULL
   9 Column           0    1    3               00 r[3]=t4.t6
REG[3] =  NULL
  10 Column           0    2    4 xyz           00 r[4]=t4.t7
REG[4] =   s4[t7?c](8)
  11 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  12 Column           1    1    6               00 r[6]=numbers.y
REG[6] =  NULL
  13 Column           1    2    7               00 r[7]=numbers.t2
REG[7] =  NULL
  14 Column           1    3    8               00 r[8]=numbers.t3
REG[8] =  NULL
  15 ResultRow        2    7    0               00 output=r[2..8]
REG[2] =  NULL
REG[3] =  NULL
REG[4] =   s4[t7?c](8)
REG[5] =  i:1
REG[6] =  NULL
REG[7] =  NULL
REG[8] =  NULL
  16 Next             1    8    0               01 
  17 Next             0    6    0               01 
  18 Close            0    0    0               00 
  19 Close            1    0    0               00 
  20 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f9fac15c859 in __GI_abort () at abort.c:79
#2  0x00007f9fac15c729 in __assert_fail_base (fmt=0x7f9fac2f2588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x212bb5 "0", file=0x222c23 "sqlite3.c", line=125392, function=<optimized out>) at assert.c:92
#3  0x00007f9fac16dfd6 in __GI___assert_fail (assertion=0x212bb5 "0", file=0x222c23 "sqlite3.c", line=125392, function=0x2266f4 "int termIsEquivalence(Parse *, Expr *)") at assert.c:101
#4  0x0000000000398c39 in exprAnalyze (pSrc=<optimized out>, pWC=<optimized out>, idxTerm=<optimized out>) at sqlite3.c:125392
#5  0x000000000038c95f in sqlite3WhereBegin (pParse=<optimized out>, pTabList=<optimized out>, pWhere=<optimized out>, pOrderBy=<optimized out>, pDistinctSet=0x12c67d0, wctrlFlags=0, iAuxArg=320) at sqlite3.c:125921
#6  0x0000000000328d02 in sqlite3Select (pParse=<optimized out>, p=<optimized out>, pDest=<optimized out>) at sqlite3.c:118028
#7  0x00000000003034ae in yy_reduce (yypParser=0x1347c20, yyruleno=<optimized out>) at sqlite3.c:133175
#8  0x00000000002fef8e in sqlite3Parser (yyp=0x1347c20, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#9  0x00000000002fc544 in sqlite3RunParser (pParse=0x12b3a10, 
    zSql=0x1344a10 "SELECT * FROM (SELECT x COLLATE nocase, x FROM numbers) AS x\n       CROSS JOIN numbers ON (x.x=numbers.x) ;PRAGMA foreign_keys;DROP table \"numbers\";DROP table \"t4\";DROP table \"t8\";CREATE TABLE numbers"..., pzErrMsg=0x7fff82434078) at sqlite3.c:135186
#10 0x00000000002fac4e in sqlite3Prepare (db=0x12b2850, 
    zSql=0x12b6cfa "SELECT * FROM (SELECT x COLLATE nocase, x FROM numbers) AS x\n       CROSS JOIN numbers ON (x.x=numbers.x) ;PRAGMA foreign_keys;DROP table \"numbers\";DROP table \"t4\";DROP table \"t8\";CREATE TABLE numbers"..., nBytes=<optimized out>, saveSqlFlag=1, pReprepare=<optimized out>, ppStmt=0x7fff824341a8, pzTail=0x7fff82434190) at sqlite3.c:112589
#11 0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0x12b2850, 
    zSql=0x12b6cfa "SELECT * FROM (SELECT x COLLATE nocase, x FROM numbers) AS x\n       CROSS JOIN numbers ON (x.x=numbers.x) ;PRAGMA foreign_keys;DROP table \"numbers\";DROP table \"t4\";DROP table \"t8\";CREATE TABLE numbers"..., nBytes=1143, saveSqlFlag=1, pOld=0x0, ppStmt=<optimized out>, pzTail=0x7fff82434190) at sqlite3.c:112688
#12 0x000000000028f38c in sqlite3_prepare_v2 (db=0x2, zSql=0x7fff82433660 "", nBytes=0, ppStmt=0x7fff824341a8, pzTail=<optimized out>) at sqlite3.c:112764
#13 0x000000000024b100 in main (argc=1, argv=0x7fff82434358) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 11671] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
