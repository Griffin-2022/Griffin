GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000126,sig:06,src:021266+012462,time:2220738,execs:333409,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
parser: [[[;CREATE VIEW b AS SELECT * FROM test;;CREATE TRIGGER c AFTER INSERT ON test BEGIN
    UPDATE test 
       SET (a,t1)=((WITH cte1(a) AS (SELECT 1 FROM b) SELECT b.a FROM b, cte1),1);
  END;;ALTER TABLE test RENAME TO t2;CREATE VIRTUAL TABLE 't8' USING expert('CREATE TABLE x(''a'' COLLATE BINARY, ''b'' COLLATE BINARY)')
;;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;;INSERT INTO t2 VALUES(98,99);]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'CREATE' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[ecmd CREATE]
parser: Input 'VIEW' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 1.
parser: ... then shift 'createkw', go to state 134
parser: FALLBACK VIEW => ID
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 390
parser: Shift 'VIEW', go to state 322
parser: Return. Stack=[ecmd createkw temp VIEW]
parser: Input 'ID' in state 322
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 228
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists ID]
parser: Input 'AS' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 228.
parser: ... then shift 'nm', go to state 321
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 320
parser: Reduce 226 [eidlist_opt ::=].
parser: ... then shift 'eidlist_opt', go to state 464
parser: Shift 'AS', go to state 37
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS]
parser: Input 'SELECT' in state 37
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 97
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 97
parser: Reduce 97 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'SEMI' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Reduce 147 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 128 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 37.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 37.
parser: ... then shift 'select', pending reduce 78
parser: Reduce 78 [cmd ::= createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS select], go to state 1.
parser: [[[UPDATE 'main'.sqlite_master SET type='view', name='b', tbl_name='b', rootpage=#2, sql='CREATE VIEW b AS SELECT * FROM test' WHERE rowid=#1]]]
parser: Input 'UPDATE' in state 0
parser: Reduce 380 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'STRING' in state 299
parser: Reduce 71 [orconf ::=].
parser: ... then shift 'orconf', go to state 167
parser: Shift 'STRING', pending reduce 338
parser: Return. Stack=[with UPDATE orconf STRING]
parser: Input 'DOT' with pending reduce 338
parser: Reduce 338 [nm ::= STRING], go to state 167.
parser: ... then shift 'nm', go to state 395
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 432
parser: Reduce 114 [xfullname ::= nm DOT nm], go to state 167.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 431
parser: Shift 'SET', go to state 155
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 155
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 155.
parser: ... then shift 'nm', go to state 445
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'STRING' in state 84
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 84.
parser: ... then shift 'term', go to state 58
parser: Reduce 152 [setlist ::= nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'VARIABLE' in state 86
parser: Shift 'VARIABLE', pending reduce 174
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ VARIABLE]
parser: Input 'COMMA' with pending reduce 174
parser: Reduce 174 [expr ::= VARIABLE], go to state 86.
parser: ... then shift 'expr', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'WHERE' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ]
parser: Input 'VARIABLE' in state 117
parser: Shift 'VARIABLE', pending reduce 174
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ VARIABLE]
parser: Input 'SEMI' with pending reduce 174
parser: Reduce 174 [expr ::= VARIABLE], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 148 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 149
parser: Reduce 149 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 327
parser: Reduce 327 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 323 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[SELECT*FROM"main".sqlite_master WHERE tbl_name='b' AND type!='trigger' ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 97
parser: Return. Stack=[SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 97
parser: Reduce 97 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 110
parser: Reduce 110 [dbnm ::= DOT nm], go to state 350.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'NE' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'NE', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE STRING]
parser: Input 'ORDER' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 183 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 148 [where_opt ::= WHERE expr], go to state 363.
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 517
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 517
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 134 [sortorder ::=].
parser: ... then shift 'sortorder', go to state 353
parser: Reduce 137 [nulls ::=].
parser: ... then shift 'nulls', pending reduce 131
parser: Reduce 131 [sortlist ::= expr sortorder nulls], go to state 26.
parser: ... then shift 'sortlist', go to state 516
parser: Reduce 129 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 80
parser: Reduce 80 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE VIEW b AS SELECT * FROM test]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'VIEW' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: FALLBACK VIEW => ID
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 390
parser: Shift 'VIEW', go to state 322
parser: Return. Stack=[createkw temp VIEW]
parser: Input 'ID' in state 322
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 228
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw temp VIEW ifnotexists ID]
parser: Input 'AS' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 228.
parser: ... then shift 'nm', go to state 321
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 320
parser: Reduce 226 [eidlist_opt ::=].
parser: ... then shift 'eidlist_opt', go to state 464
parser: Shift 'AS', go to state 37
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS]
parser: Input 'SELECT' in state 37
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 97
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 97
parser: Reduce 97 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'SEMI' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Reduce 147 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 128 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 37.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 37.
parser: ... then shift 'select', pending reduce 78
parser: Reduce 78 [cmd ::= createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[;CREATE TRIGGER c AFTER INSERT ON test BEGIN
    UPDATE test 
       SET (a,t1)=((WITH cte1(a) AS (SELECT 1 FROM b) SELECT b.a FROM b, cte1),1);
  END;;ALTER TABLE test RENAME TO t2;CREATE VIRTUAL TABLE 't8' USING expert('CREATE TABLE x(''a'' COLLATE BINARY, ''b'' COLLATE BINARY)')
;;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;;INSERT INTO t2 VALUES(98,99);]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'CREATE' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[ecmd CREATE]
parser: Input 'TRIGGER' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 1.
parser: ... then shift 'createkw', go to state 134
parser: FALLBACK TRIGGER => ID
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 390
parser: Shift 'TRIGGER', go to state 319
parser: Return. Stack=[ecmd createkw temp TRIGGER]
parser: Input 'ID' in state 319
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 227
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd createkw temp TRIGGER ifnotexists ID]
parser: Input 'AFTER' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 227.
parser: ... then shift 'nm', go to state 318
parser: FALLBACK AFTER => ID
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 257
parser: Shift 'AFTER', pending reduce 246
parser: Return. Stack=[ecmd createkw temp TRIGGER ifnotexists nm dbnm AFTER]
parser: Input 'INSERT' with pending reduce 246
parser: Reduce 246 [trigger_time ::= BEFORE|AFTER], go to state 257.
parser: ... then shift 'trigger_time', go to state 256
parser: Shift 'INSERT', pending reduce 249
parser: Return. Stack=[ecmd createkw temp TRIGGER ifnotexists nm dbnm trigger_time INSERT]
parser: Input 'ON' with pending reduce 249
parser: Reduce 249 [trigger_event ::= DELETE|INSERT], go to state 256.
parser: ... then shift 'trigger_event', go to state 463
parser: Shift 'ON', go to state 181
parser: Return. Stack=[ecmd createkw temp TRIGGER ifnotexists nm dbnm trigger_time trigger_event ON]
parser: Input 'ID' in state 181
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd createkw temp TRIGGER ifnotexists nm dbnm trigger_time trigger_event ON ID]
parser: Input 'BEGIN' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 181.
parser: ... then shift 'nm', go to state 462
parser: FALLBACK BEGIN => ID
parser: Reduce 111 [fullname ::= nm], go to state 181.
parser: ... then shift 'fullname', go to state 317
parser: FALLBACK BEGIN => ID
parser: Reduce 366 [foreach_clause ::=].
parser: ... then shift 'foreach_clause', go to state 316
parser: FALLBACK BEGIN => ID
parser: Reduce 252 [when_clause ::=].
parser: ... then shift 'when_clause', pending reduce 245
parser: Reduce 245 [trigger_decl ::= temp TRIGGER ifnotexists nm dbnm trigger_time trigger_event ON fullname foreach_clause when_clause], go to state 134.
parser: ... then shift 'trigger_decl', go to state 453
parser: Shift 'BEGIN', go to state 144
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN]
parser: Input 'UPDATE' in state 144
parser: Shift 'UPDATE', go to state 312
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE]
parser: Input 'ID' in state 312
parser: Reduce 71 [orconf ::=].
parser: ... then shift 'orconf', go to state 179
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf ID]
parser: Input 'SET' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 179.
parser: ... then shift 'nm', go to state 451
parser: Reduce 368 [trnm ::= nm], go to state 179.
parser: ... then shift 'trnm', go to state 276
parser: Reduce 369 [tridxby ::=].
parser: ... then shift 'tridxby', go to state 448
parser: Shift 'SET', go to state 158
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET]
parser: Input 'LP' in state 158
parser: Shift 'LP', go to state 177
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP]
parser: Input 'ID' in state 177
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP ID]
parser: Input 'COMMA' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 177.
parser: ... then shift 'nm', pending reduce 165
parser: Reduce 165 [idlist ::= nm], go to state 177.
parser: ... then shift 'idlist', go to state 400
parser: Shift 'COMMA', go to state 241
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist COMMA]
parser: Input 'ID' in state 241
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist COMMA ID]
parser: Input 'RP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 241.
parser: ... then shift 'nm', pending reduce 164
parser: Reduce 164 [idlist ::= idlist COMMA nm], go to state 177.
parser: ... then shift 'idlist', go to state 400
parser: Shift 'RP', go to state 444
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP]
parser: Input 'EQ' in state 444
parser: Shift 'EQ', go to state 83
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ]
parser: Input 'LP' in state 83
parser: Shift 'LP', go to state 4
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP]
parser: Input 'LP' in state 4
parser: Shift 'LP', go to state 4
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP]
parser: Input 'WITH' in state 4
parser: Shift 'WITH', go to state 162
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH]
parser: Input 'ID' in state 162
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 162.
parser: ... then shift 'nm', go to state 338
parser: Shift 'LP', go to state 184
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH nm LP]
parser: Input 'ID' in state 184
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH nm LP ID]
parser: Input 'RP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 184.
parser: ... then shift 'nm', go to state 339
parser: Reduce 230 [collate ::=].
parser: ... then shift 'collate', go to state 281
parser: Reduce 134 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 229
parser: Reduce 229 [eidlist ::= nm collate sortorder], go to state 184.
parser: ... then shift 'eidlist', go to state 410
parser: Shift 'RP', pending reduce 227
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH nm LP eidlist RP]
parser: Input 'AS' with pending reduce 227
parser: Reduce 227 [eidlist_opt ::= LP eidlist RP], go to state 338.
parser: ... then shift 'eidlist_opt', go to state 489
parser: Shift 'AS', go to state 488
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH nm eidlist_opt AS]
parser: Input 'LP' in state 488
parser: Shift 'LP', go to state 39
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH nm eidlist_opt AS LP]
parser: Input 'SELECT' in state 39
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH nm eidlist_opt AS LP SELECT]
parser: Input 'INTEGER' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH nm eidlist_opt AS LP SELECT distinct sclp scanpt INTEGER]
parser: Input 'FROM' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 77.
parser: ... then shift 'term', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH nm eidlist_opt AS LP SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH nm eidlist_opt AS LP SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'RP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Reduce 147 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 128 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 39.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 39.
parser: ... then shift 'select', go to state 487
parser: Shift 'RP', pending reduce 290
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH nm eidlist_opt AS LP select RP]
parser: Input 'SELECT' with pending reduce 290
parser: Reduce 290 [wqlist ::= nm eidlist_opt AS LP select RP], go to state 162.
parser: ... then shift 'wqlist', go to state 143
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH wqlist SELECT]
parser: Input 'ID' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 419
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH wqlist SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 419
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 493
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH wqlist SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH wqlist SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'FROM' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 536
parser: Reduce 169 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH wqlist SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH wqlist SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'COMMA' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Shift 'COMMA', pending reduce 117
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH wqlist SELECT distinct selcollist FROM seltablist COMMA]
parser: Input 'ID' with pending reduce 117
parser: Reduce 117 [joinop ::= COMMA|JOIN], go to state 263.
parser: ... then shift 'joinop', pending reduce 103
parser: Reduce 103 [stl_prefix ::= seltablist joinop], go to state 197.
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH wqlist SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'RP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Reduce 147 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 128 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 143.
parser: ... then shift 'oneselect', go to state 265
parser: Reduce 81 [select ::= WITH wqlist selectnowith], go to state 4.
parser: ... then shift 'select', go to state 485
parser: Shift 'RP', pending reduce 207
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP select RP]
parser: Input 'COMMA' with pending reduce 207
parser: Reduce 207 [expr ::= LP select RP], go to state 4.
parser: ... then shift 'expr', go to state 50
parser: Reduce 220 [nexprlist ::= expr], go to state 4.
parser: ... then shift 'nexprlist', go to state 486
parser: Shift 'COMMA', go to state 91
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP nexprlist COMMA]
parser: Input 'INTEGER' in state 91
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP nexprlist COMMA INTEGER]
parser: Input 'RP' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 91.
parser: ... then shift 'term', go to state 49
parser: Shift 'RP', pending reduce 182
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP nexprlist COMMA term RP]
parser: Input 'SEMI' with pending reduce 182
parser: Reduce 182 [expr ::= LP nexprlist COMMA expr RP], go to state 83.
parser: ... then shift 'expr', go to state 57
parser: Reduce 153 [setlist ::= LP idlist RP EQ expr], go to state 158.
parser: ... then shift 'setlist', go to state 275
parser: Reduce 147 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 378
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', pending reduce 259
parser: Reduce 259 [trigger_cmd ::= UPDATE orconf trnm tridxby SET setlist where_opt scanpt], go to state 144.
parser: ... then shift 'trigger_cmd', go to state 437
parser: Shift 'SEMI', pending reduce 255
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN trigger_cmd SEMI]
parser: Input 'END' with pending reduce 255
parser: Reduce 255 [trigger_cmd_list ::= trigger_cmd SEMI], go to state 144.
parser: ... then shift 'trigger_cmd_list', go to state 189
parser: Shift 'END', pending reduce 244
parser: Return. Stack=[ecmd createkw trigger_decl BEGIN trigger_cmd_list END]
parser: Input 'SEMI' with pending reduce 244
parser: Reduce 244 [cmd ::= createkw trigger_decl BEGIN trigger_cmd_list END], go to state 1.
parser: [[[INSERT INTO 'main'.sqlite_master VALUES('trigger','c','test',0,'CREATE TRIGGER c AFTER INSERT ON test BEGIN
    UPDATE test 
       SET (a,t1)=((WITH cte1(a) AS (SELECT 1 FROM b) SELECT b.a FROM b, cte1),1);
  END')]]]
parser: Input 'INSERT' in state 0
parser: Reduce 380 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 71 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 160
parser: Reduce 160 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 430
parser: Shift 'INTO', go to state 166
parser: Return. Stack=[with insert_cmd INTO]
parser: Input 'STRING' in state 166
parser: Shift 'STRING', pending reduce 338
parser: Return. Stack=[with insert_cmd INTO STRING]
parser: Input 'DOT' with pending reduce 338
parser: Reduce 338 [nm ::= STRING], go to state 166.
parser: ... then shift 'nm', go to state 395
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with insert_cmd INTO nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with insert_cmd INTO nm DOT ID]
parser: Input 'VALUES' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 432
parser: Reduce 114 [xfullname ::= nm DOT nm], go to state 166.
parser: ... then shift 'xfullname', go to state 298
parser: Reduce 162 [idlist_opt ::=].
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'VALUES', go to state 528
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES]
parser: Input 'LP' in state 528
parser: Shift 'LP', go to state 28
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP]
parser: Input 'STRING' in state 28
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 28.
parser: ... then shift 'term', go to state 70
parser: Reduce 220 [nexprlist ::= expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 413
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 413
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 413
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA INTEGER]
parser: Input 'COMMA' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 413
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'RP' in state 539
parser: Reduce 172 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 413
parser: Shift 'RP', pending reduce 90
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist RP]
parser: Input 'SEMI' with pending reduce 90
parser: Reduce 90 [values ::= VALUES LP nexprlist RP], go to state 35.
parser: ... then shift 'values', go to state 534
parser: Reduce 354 [oneselect ::= values], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 156 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 154
parser: Reduce 154 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 327
parser: Reduce 327 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 323 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[SELECT*FROM"main".sqlite_master WHERE type='trigger' AND name='c' ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 97
parser: Return. Stack=[SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 97
parser: Reduce 97 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 110
parser: Reduce 110 [dbnm ::= DOT nm], go to state 350.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr EQ STRING]
parser: Input 'ORDER' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 183 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 148 [where_opt ::= WHERE expr], go to state 363.
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 517
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 517
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 134 [sortorder ::=].
parser: ... then shift 'sortorder', go to state 353
parser: Reduce 137 [nulls ::=].
parser: ... then shift 'nulls', pending reduce 131
parser: Reduce 131 [sortlist ::= expr sortorder nulls], go to state 26.
parser: ... then shift 'sortlist', go to state 516
parser: Reduce 129 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 80
parser: Reduce 80 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TRIGGER c AFTER INSERT ON test BEGIN
    UPDATE test 
       SET (a,t1)=((WITH cte1(a) AS (SELECT 1 FROM b) SELECT b.a FROM b, cte1),1);
  END]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TRIGGER' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: FALLBACK TRIGGER => ID
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 390
parser: Shift 'TRIGGER', go to state 319
parser: Return. Stack=[createkw temp TRIGGER]
parser: Input 'ID' in state 319
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 227
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw temp TRIGGER ifnotexists ID]
parser: Input 'AFTER' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 227.
parser: ... then shift 'nm', go to state 318
parser: FALLBACK AFTER => ID
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 257
parser: Shift 'AFTER', pending reduce 246
parser: Return. Stack=[createkw temp TRIGGER ifnotexists nm dbnm AFTER]
parser: Input 'INSERT' with pending reduce 246
parser: Reduce 246 [trigger_time ::= BEFORE|AFTER], go to state 257.
parser: ... then shift 'trigger_time', go to state 256
parser: Shift 'INSERT', pending reduce 249
parser: Return. Stack=[createkw temp TRIGGER ifnotexists nm dbnm trigger_time INSERT]
parser: Input 'ON' with pending reduce 249
parser: Reduce 249 [trigger_event ::= DELETE|INSERT], go to state 256.
parser: ... then shift 'trigger_event', go to state 463
parser: Shift 'ON', go to state 181
parser: Return. Stack=[createkw temp TRIGGER ifnotexists nm dbnm trigger_time trigger_event ON]
parser: Input 'ID' in state 181
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw temp TRIGGER ifnotexists nm dbnm trigger_time trigger_event ON ID]
parser: Input 'BEGIN' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 181.
parser: ... then shift 'nm', go to state 462
parser: FALLBACK BEGIN => ID
parser: Reduce 111 [fullname ::= nm], go to state 181.
parser: ... then shift 'fullname', go to state 317
parser: FALLBACK BEGIN => ID
parser: Reduce 366 [foreach_clause ::=].
parser: ... then shift 'foreach_clause', go to state 316
parser: FALLBACK BEGIN => ID
parser: Reduce 252 [when_clause ::=].
parser: ... then shift 'when_clause', pending reduce 245
parser: Reduce 245 [trigger_decl ::= temp TRIGGER ifnotexists nm dbnm trigger_time trigger_event ON fullname foreach_clause when_clause], go to state 134.
parser: ... then shift 'trigger_decl', go to state 453
parser: Shift 'BEGIN', go to state 144
parser: Return. Stack=[createkw trigger_decl BEGIN]
parser: Input 'UPDATE' in state 144
parser: Shift 'UPDATE', go to state 312
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE]
parser: Input 'ID' in state 312
parser: Reduce 71 [orconf ::=].
parser: ... then shift 'orconf', go to state 179
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf ID]
parser: Input 'SET' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 179.
parser: ... then shift 'nm', go to state 451
parser: Reduce 368 [trnm ::= nm], go to state 179.
parser: ... then shift 'trnm', go to state 276
parser: Reduce 369 [tridxby ::=].
parser: ... then shift 'tridxby', go to state 448
parser: Shift 'SET', go to state 158
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET]
parser: Input 'LP' in state 158
parser: Shift 'LP', go to state 177
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP]
parser: Input 'ID' in state 177
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP ID]
parser: Input 'COMMA' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 177.
parser: ... then shift 'nm', pending reduce 165
parser: Reduce 165 [idlist ::= nm], go to state 177.
parser: ... then shift 'idlist', go to state 400
parser: Shift 'COMMA', go to state 241
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist COMMA]
parser: Input 'ID' in state 241
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist COMMA ID]
parser: Input 'RP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 241.
parser: ... then shift 'nm', pending reduce 164
parser: Reduce 164 [idlist ::= idlist COMMA nm], go to state 177.
parser: ... then shift 'idlist', go to state 400
parser: Shift 'RP', go to state 444
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP]
parser: Input 'EQ' in state 444
parser: Shift 'EQ', go to state 83
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ]
parser: Input 'LP' in state 83
parser: Shift 'LP', go to state 4
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP]
parser: Input 'LP' in state 4
parser: Shift 'LP', go to state 4
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP]
parser: Input 'WITH' in state 4
parser: Shift 'WITH', go to state 162
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH]
parser: Input 'ID' in state 162
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 162.
parser: ... then shift 'nm', go to state 338
parser: Shift 'LP', go to state 184
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH nm LP]
parser: Input 'ID' in state 184
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH nm LP ID]
parser: Input 'RP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 184.
parser: ... then shift 'nm', go to state 339
parser: Reduce 230 [collate ::=].
parser: ... then shift 'collate', go to state 281
parser: Reduce 134 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 229
parser: Reduce 229 [eidlist ::= nm collate sortorder], go to state 184.
parser: ... then shift 'eidlist', go to state 410
parser: Shift 'RP', pending reduce 227
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH nm LP eidlist RP]
parser: Input 'AS' with pending reduce 227
parser: Reduce 227 [eidlist_opt ::= LP eidlist RP], go to state 338.
parser: ... then shift 'eidlist_opt', go to state 489
parser: Shift 'AS', go to state 488
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH nm eidlist_opt AS]
parser: Input 'LP' in state 488
parser: Shift 'LP', go to state 39
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH nm eidlist_opt AS LP]
parser: Input 'SELECT' in state 39
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH nm eidlist_opt AS LP SELECT]
parser: Input 'INTEGER' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH nm eidlist_opt AS LP SELECT distinct sclp scanpt INTEGER]
parser: Input 'FROM' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 77.
parser: ... then shift 'term', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH nm eidlist_opt AS LP SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH nm eidlist_opt AS LP SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'RP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Reduce 147 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 128 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 39.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 39.
parser: ... then shift 'select', go to state 487
parser: Shift 'RP', pending reduce 290
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH nm eidlist_opt AS LP select RP]
parser: Input 'SELECT' with pending reduce 290
parser: Reduce 290 [wqlist ::= nm eidlist_opt AS LP select RP], go to state 162.
parser: ... then shift 'wqlist', go to state 143
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH wqlist SELECT]
parser: Input 'ID' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 419
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH wqlist SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 419
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 493
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH wqlist SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH wqlist SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'FROM' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 536
parser: Reduce 169 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH wqlist SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH wqlist SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'COMMA' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Shift 'COMMA', pending reduce 117
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH wqlist SELECT distinct selcollist FROM seltablist COMMA]
parser: Input 'ID' with pending reduce 117
parser: Reduce 117 [joinop ::= COMMA|JOIN], go to state 263.
parser: ... then shift 'joinop', pending reduce 103
parser: Reduce 103 [stl_prefix ::= seltablist joinop], go to state 197.
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH wqlist SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'RP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Reduce 147 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 128 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 143.
parser: ... then shift 'oneselect', go to state 265
parser: Reduce 81 [select ::= WITH wqlist selectnowith], go to state 4.
parser: ... then shift 'select', go to state 485
parser: Shift 'RP', pending reduce 207
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP select RP]
parser: Input 'COMMA' with pending reduce 207
parser: Reduce 207 [expr ::= LP select RP], go to state 4.
parser: ... then shift 'expr', go to state 50
parser: Reduce 220 [nexprlist ::= expr], go to state 4.
parser: ... then shift 'nexprlist', go to state 486
parser: Shift 'COMMA', go to state 91
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP nexprlist COMMA]
parser: Input 'INTEGER' in state 91
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP nexprlist COMMA INTEGER]
parser: Input 'RP' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 91.
parser: ... then shift 'term', go to state 49
parser: Shift 'RP', pending reduce 182
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP nexprlist COMMA term RP]
parser: Input 'SEMI' with pending reduce 182
parser: Reduce 182 [expr ::= LP nexprlist COMMA expr RP], go to state 83.
parser: ... then shift 'expr', go to state 57
parser: Reduce 153 [setlist ::= LP idlist RP EQ expr], go to state 158.
parser: ... then shift 'setlist', go to state 275
parser: Reduce 147 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 378
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', pending reduce 259
parser: Reduce 259 [trigger_cmd ::= UPDATE orconf trnm tridxby SET setlist where_opt scanpt], go to state 144.
parser: ... then shift 'trigger_cmd', go to state 437
parser: Shift 'SEMI', pending reduce 255
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd SEMI]
parser: Input 'END' with pending reduce 255
parser: Reduce 255 [trigger_cmd_list ::= trigger_cmd SEMI], go to state 144.
parser: ... then shift 'trigger_cmd_list', go to state 189
parser: Shift 'END', pending reduce 244
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list END]
parser: Input 'SEMI' with pending reduce 244
parser: Reduce 244 [cmd ::= createkw trigger_decl BEGIN trigger_cmd_list END], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[;ALTER TABLE test RENAME TO t2;CREATE VIRTUAL TABLE 't8' USING expert('CREATE TABLE x(''a'' COLLATE BINARY, ''b'' COLLATE BINARY)')
;;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;;INSERT INTO t2 VALUES(98,99);]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'ALTER' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'ALTER', go to state 426
parser: Return. Stack=[ecmd ALTER]
parser: Input 'TABLE' in state 426
parser: Shift 'TABLE', go to state 133
parser: Return. Stack=[ecmd ALTER TABLE]
parser: Input 'ID' in state 133
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd ALTER TABLE ID]
parser: Input 'RENAME' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 133.
parser: ... then shift 'nm', go to state 462
parser: FALLBACK RENAME => ID
parser: Reduce 111 [fullname ::= nm], go to state 133.
parser: ... then shift 'fullname', go to state 425
parser: Shift 'RENAME', go to state 269
parser: Return. Stack=[ecmd ALTER TABLE fullname RENAME]
parser: Input 'TO' in state 269
parser: Shift 'TO', go to state 212
parser: Return. Stack=[ecmd ALTER TABLE fullname RENAME TO]
parser: Input 'ID' in state 212
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd ALTER TABLE fullname RENAME TO ID]
parser: Input 'SEMI' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 212.
parser: ... then shift 'nm', pending reduce 277
parser: Reduce 277 [cmd ::= ALTER TABLE fullname RENAME TO nm], go to state 1.
parser: [[[UPDATE "main".sqlite_master SET sql = sqlite_rename_table('main', type, name, sql, 'test', 't2', 0) WHERE (type!='index' OR tbl_name='test' COLLATE nocase)AND   name NOT LIKE 'sqliteX_%' ESCAPE 'X']]]
parser: Input 'UPDATE' in state 0
parser: Reduce 380 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'ID' in state 299
parser: Reduce 71 [orconf ::=].
parser: ... then shift 'orconf', go to state 167
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf ID]
parser: Input 'DOT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 167.
parser: ... then shift 'nm', go to state 395
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 432
parser: Reduce 114 [xfullname ::= nm DOT nm], go to state 167.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 431
parser: Shift 'SET', go to state 155
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 155
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 155.
parser: ... then shift 'nm', go to state 445
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'ID' in state 84
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID]
parser: Input 'LP' in state 419
parser: Shift 'LP', go to state 266
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP]
parser: Input 'STRING' in state 266
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 11.
parser: ... then shift 'term', go to state 70
parser: Reduce 220 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'ID' in state 107
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA ID]
parser: Input 'COMMA' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'ID' in state 107
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA ID]
parser: Input 'COMMA' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'ID' in state 107
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA ID]
parser: Input 'COMMA' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA INTEGER]
parser: Input 'RP' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Reduce 359 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 484
parser: Shift 'RP', go to state 146
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct exprlist RP]
parser: Input 'WHERE' in state 146
parser: Reduce 177 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 84.
parser: ... then shift 'expr', go to state 58
parser: Reduce 152 [setlist ::= nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'LP' in state 93
parser: Shift 'LP', go to state 4
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE LP]
parser: Input 'ID' in state 4
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE LP ID]
parser: Input 'NE' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 4.
parser: ... then shift 'expr', go to state 50
parser: Shift 'NE', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE LP expr NE]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE LP expr NE STRING]
parser: Input 'OR' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 4.
parser: ... then shift 'expr', go to state 50
parser: Shift 'OR', go to state 119
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE LP expr OR]
parser: Input 'ID' in state 119
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE LP expr OR ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 119.
parser: ... then shift 'expr', go to state 74
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE LP expr OR expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE LP expr OR expr EQ STRING]
parser: Input 'COLLATE' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Shift 'COLLATE', go to state 418
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE LP expr OR expr EQ term COLLATE]
parser: Input 'ID' in state 418
parser: Shift 'ID', pending reduce 175
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE LP expr OR expr EQ term COLLATE ID]
parser: Input 'RP' with pending reduce 175
parser: Reduce 175 [expr ::= expr COLLATE ID|STRING], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 119.
parser: ... then shift 'expr', go to state 74
parser: Reduce 184 [expr ::= expr OR expr], go to state 4.
parser: ... then shift 'expr', go to state 50
parser: Shift 'RP', pending reduce 166
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE LP expr RP]
parser: Input 'AND' with pending reduce 166
parser: Reduce 166 [expr ::= LP expr RP], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND ID]
parser: Input 'NOT' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'NOT', go to state 386
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND expr NOT]
parser: Input 'LIKE_KW' in state 386
parser: Shift 'LIKE_KW', pending reduce 191
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND expr NOT LIKE_KW]
parser: Input 'STRING' with pending reduce 191
parser: Reduce 191 [likeop ::= NOT LIKE_KW|MATCH], go to state 76.
parser: ... then shift 'likeop', go to state 112
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND expr likeop STRING]
parser: Input 'ESCAPE' in state 539
parser: Reduce 172 [term ::= STRING], go to state 112.
parser: ... then shift 'term', go to state 124
parser: Shift 'ESCAPE', go to state 111
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND expr likeop term ESCAPE]
parser: Input 'STRING' in state 111
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND expr likeop term ESCAPE STRING]
parser: Input 'SEMI' in state 539
parser: Reduce 172 [term ::= STRING], go to state 111.
parser: ... then shift 'term', go to state 128
parser: Reduce 193 [expr ::= expr likeop expr ESCAPE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 183 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 148 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 149
parser: Reduce 149 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 327
parser: Reduce 327 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 323 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: [[[UPDATE 'main'.sqlite_master SET tbl_name = 't2', name = CASE WHEN type='table' THEN 't2' WHEN name LIKE 'sqliteX_autoindex%' ESCAPE 'X'      AND type='index' THEN 'sqlite_autoindex_' || 't2' || substr(name,4+18) ELSE name END WHERE tbl_name='test' COLLATE nocase AND (type='table' OR type='index' OR type='trigger');]]]
parser: Input 'UPDATE' in state 0
parser: Reduce 380 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'STRING' in state 299
parser: Reduce 71 [orconf ::=].
parser: ... then shift 'orconf', go to state 167
parser: Shift 'STRING', pending reduce 338
parser: Return. Stack=[with UPDATE orconf STRING]
parser: Input 'DOT' with pending reduce 338
parser: Reduce 338 [nm ::= STRING], go to state 167.
parser: ... then shift 'nm', go to state 395
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 432
parser: Reduce 114 [xfullname ::= nm DOT nm], go to state 167.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 431
parser: Shift 'SET', go to state 155
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 155
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 155.
parser: ... then shift 'nm', go to state 445
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'STRING' in state 84
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 84.
parser: ... then shift 'term', go to state 58
parser: Reduce 152 [setlist ::= nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'CASE' in state 86
parser: Shift 'CASE', go to state 27
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE]
parser: Input 'WHEN' in state 27
parser: Reduce 217 [case_operand ::=].
parser: ... then shift 'case_operand', go to state 359
parser: Shift 'WHEN', go to state 99
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand WHEN]
parser: Input 'ID' in state 99
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand WHEN ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 99.
parser: ... then shift 'expr', go to state 51
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand WHEN expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand WHEN expr EQ STRING]
parser: Input 'THEN' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 99.
parser: ... then shift 'expr', go to state 51
parser: Shift 'THEN', go to state 98
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand WHEN expr THEN]
parser: Input 'STRING' in state 98
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand WHEN expr THEN STRING]
parser: Input 'WHEN' in state 539
parser: Reduce 172 [term ::= STRING], go to state 98.
parser: ... then shift 'term', go to state 66
parser: Reduce 213 [case_exprlist ::= WHEN expr THEN expr], go to state 359.
parser: ... then shift 'case_exprlist', go to state 286
parser: Shift 'WHEN', go to state 102
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand case_exprlist WHEN]
parser: Input 'ID' in state 102
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand case_exprlist WHEN ID]
parser: Input 'LIKE_KW' in state 419
parser: FALLBACK LIKE_KW => ID
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 102.
parser: ... then shift 'expr', go to state 52
parser: Shift 'LIKE_KW', pending reduce 358
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand case_exprlist WHEN expr LIKE_KW]
parser: Input 'STRING' with pending reduce 358
parser: Reduce 358 [likeop ::= LIKE_KW|MATCH], go to state 52.
parser: ... then shift 'likeop', go to state 112
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand case_exprlist WHEN expr likeop STRING]
parser: Input 'ESCAPE' in state 539
parser: Reduce 172 [term ::= STRING], go to state 112.
parser: ... then shift 'term', go to state 124
parser: Shift 'ESCAPE', go to state 111
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand case_exprlist WHEN expr likeop term ESCAPE]
parser: Input 'STRING' in state 111
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand case_exprlist WHEN expr likeop term ESCAPE STRING]
parser: Input 'AND' in state 539
parser: Reduce 172 [term ::= STRING], go to state 111.
parser: ... then shift 'term', go to state 128
parser: Reduce 193 [expr ::= expr likeop expr ESCAPE expr], go to state 102.
parser: ... then shift 'expr', go to state 52
parser: Shift 'AND', go to state 120
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand case_exprlist WHEN expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand case_exprlist WHEN expr AND ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand case_exprlist WHEN expr AND expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand case_exprlist WHEN expr AND expr EQ STRING]
parser: Input 'THEN' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 183 [expr ::= expr AND expr], go to state 102.
parser: ... then shift 'expr', go to state 52
parser: Shift 'THEN', go to state 101
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand case_exprlist WHEN expr THEN]
parser: Input 'STRING' in state 101
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand case_exprlist WHEN expr THEN STRING]
parser: Input 'CONCAT' in state 539
parser: Reduce 172 [term ::= STRING], go to state 101.
parser: ... then shift 'term', go to state 68
parser: Shift 'CONCAT', go to state 113
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand case_exprlist WHEN expr THEN term CONCAT]
parser: Input 'STRING' in state 113
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand case_exprlist WHEN expr THEN term CONCAT STRING]
parser: Input 'CONCAT' in state 539
parser: Reduce 172 [term ::= STRING], go to state 113.
parser: ... then shift 'term', go to state 148
parser: Reduce 190 [expr ::= expr CONCAT expr], go to state 101.
parser: ... then shift 'expr', go to state 68
parser: Shift 'CONCAT', go to state 113
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand case_exprlist WHEN expr THEN expr CONCAT]
parser: Input 'ID' in state 113
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand case_exprlist WHEN expr THEN expr CONCAT ID]
parser: Input 'LP' in state 419
parser: Shift 'LP', go to state 266
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand case_exprlist WHEN expr THEN expr CONCAT ID LP]
parser: Input 'ID' in state 266
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand case_exprlist WHEN expr THEN expr CONCAT ID LP distinct ID]
parser: Input 'COMMA' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 220 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand case_exprlist WHEN expr THEN expr CONCAT ID LP distinct nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand case_exprlist WHEN expr THEN expr CONCAT ID LP distinct nexprlist COMMA INTEGER]
parser: Input 'PLUS' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Shift 'PLUS', go to state 115
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand case_exprlist WHEN expr THEN expr CONCAT ID LP distinct nexprlist COMMA term PLUS]
parser: Input 'INTEGER' in state 115
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand case_exprlist WHEN expr THEN expr CONCAT ID LP distinct nexprlist COMMA term PLUS INTEGER]
parser: Input 'RP' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 115.
parser: ... then shift 'term', go to state 132
parser: Reduce 188 [expr ::= expr PLUS|MINUS expr], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Reduce 359 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 484
parser: Shift 'RP', go to state 146
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand case_exprlist WHEN expr THEN expr CONCAT ID LP distinct exprlist RP]
parser: Input 'ELSE' in state 146
parser: Reduce 177 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 113.
parser: ... then shift 'expr', go to state 148
parser: Reduce 190 [expr ::= expr CONCAT expr], go to state 101.
parser: ... then shift 'expr', go to state 68
parser: Reduce 212 [case_exprlist ::= case_exprlist WHEN expr THEN expr], go to state 359.
parser: ... then shift 'case_exprlist', go to state 286
parser: Shift 'ELSE', go to state 100
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand case_exprlist ELSE]
parser: Input 'ID' in state 100
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand case_exprlist ELSE ID]
parser: Input 'END' in state 419
parser: FALLBACK END => ID
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 100.
parser: ... then shift 'expr', go to state 67
parser: FALLBACK END => ID
parser: Reduce 214 [case_else ::= ELSE expr], go to state 286.
parser: ... then shift 'case_else', go to state 527
parser: Shift 'END', pending reduce 211
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand case_exprlist case_else END]
parser: Input 'WHERE' with pending reduce 211
parser: Reduce 211 [expr ::= CASE case_operand case_exprlist case_else END], go to state 86.
parser: ... then shift 'expr', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ STRING]
parser: Input 'COLLATE' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Shift 'COLLATE', go to state 418
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ term COLLATE]
parser: Input 'ID' in state 418
parser: Shift 'ID', pending reduce 175
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ term COLLATE ID]
parser: Input 'AND' with pending reduce 175
parser: Reduce 175 [expr ::= expr COLLATE ID|STRING], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND]
parser: Input 'LP' in state 120
parser: Shift 'LP', go to state 4
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND LP]
parser: Input 'ID' in state 4
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND LP ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 4.
parser: ... then shift 'expr', go to state 50
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND LP expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND LP expr EQ STRING]
parser: Input 'OR' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 4.
parser: ... then shift 'expr', go to state 50
parser: Shift 'OR', go to state 119
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND LP expr OR]
parser: Input 'ID' in state 119
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND LP expr OR ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 119.
parser: ... then shift 'expr', go to state 74
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND LP expr OR expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND LP expr OR expr EQ STRING]
parser: Input 'OR' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 119.
parser: ... then shift 'expr', go to state 74
parser: Reduce 184 [expr ::= expr OR expr], go to state 4.
parser: ... then shift 'expr', go to state 50
parser: Shift 'OR', go to state 119
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND LP expr OR]
parser: Input 'ID' in state 119
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND LP expr OR ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 119.
parser: ... then shift 'expr', go to state 74
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND LP expr OR expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND LP expr OR expr EQ STRING]
parser: Input 'RP' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 119.
parser: ... then shift 'expr', go to state 74
parser: Reduce 184 [expr ::= expr OR expr], go to state 4.
parser: ... then shift 'expr', go to state 50
parser: Shift 'RP', pending reduce 166
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND LP expr RP]
parser: Input 'SEMI' with pending reduce 166
parser: Reduce 166 [expr ::= LP expr RP], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 183 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 148 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 149
parser: Reduce 149 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 327
parser: Reduce 327 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 323 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: [[[UPDATE sqlite_temp_master SET sql = sqlite_rename_table('main', type, name, sql, 'test', 't2', 1), tbl_name = CASE WHEN tbl_name='test' COLLATE nocase AND           sqlite_rename_test('main', sql, type, name, 1) THEN 't2' ELSE tbl_name END WHERE type IN ('view', 'trigger')]]]
parser: Input 'UPDATE' in state 0
parser: Reduce 380 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'ID' in state 299
parser: Reduce 71 [orconf ::=].
parser: ... then shift 'orconf', go to state 167
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf ID]
parser: Input 'SET' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 167.
parser: ... then shift 'nm', go to state 395
parser: Reduce 113 [xfullname ::= nm], go to state 167.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 431
parser: Shift 'SET', go to state 155
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 155
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 155.
parser: ... then shift 'nm', go to state 445
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'ID' in state 84
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID]
parser: Input 'LP' in state 419
parser: Shift 'LP', go to state 266
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP]
parser: Input 'STRING' in state 266
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 11.
parser: ... then shift 'term', go to state 70
parser: Reduce 220 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'ID' in state 107
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA ID]
parser: Input 'COMMA' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'ID' in state 107
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA ID]
parser: Input 'COMMA' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'ID' in state 107
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA ID]
parser: Input 'COMMA' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA INTEGER]
parser: Input 'RP' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Reduce 359 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 484
parser: Shift 'RP', go to state 146
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct exprlist RP]
parser: Input 'COMMA' in state 146
parser: Reduce 177 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 84.
parser: ... then shift 'expr', go to state 58
parser: Reduce 152 [setlist ::= nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'CASE' in state 86
parser: Shift 'CASE', go to state 27
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE]
parser: Input 'WHEN' in state 27
parser: Reduce 217 [case_operand ::=].
parser: ... then shift 'case_operand', go to state 359
parser: Shift 'WHEN', go to state 99
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand WHEN]
parser: Input 'ID' in state 99
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand WHEN ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 99.
parser: ... then shift 'expr', go to state 51
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand WHEN expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand WHEN expr EQ STRING]
parser: Input 'COLLATE' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Shift 'COLLATE', go to state 418
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand WHEN expr EQ term COLLATE]
parser: Input 'ID' in state 418
parser: Shift 'ID', pending reduce 175
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand WHEN expr EQ term COLLATE ID]
parser: Input 'AND' with pending reduce 175
parser: Reduce 175 [expr ::= expr COLLATE ID|STRING], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 99.
parser: ... then shift 'expr', go to state 51
parser: Shift 'AND', go to state 120
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand WHEN expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand WHEN expr AND ID]
parser: Input 'LP' in state 419
parser: Shift 'LP', go to state 266
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand WHEN expr AND ID LP]
parser: Input 'STRING' in state 266
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand WHEN expr AND ID LP distinct STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 11.
parser: ... then shift 'term', go to state 70
parser: Reduce 220 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand WHEN expr AND ID LP distinct nexprlist COMMA]
parser: Input 'ID' in state 107
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand WHEN expr AND ID LP distinct nexprlist COMMA ID]
parser: Input 'COMMA' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand WHEN expr AND ID LP distinct nexprlist COMMA]
parser: Input 'ID' in state 107
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand WHEN expr AND ID LP distinct nexprlist COMMA ID]
parser: Input 'COMMA' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand WHEN expr AND ID LP distinct nexprlist COMMA]
parser: Input 'ID' in state 107
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand WHEN expr AND ID LP distinct nexprlist COMMA ID]
parser: Input 'COMMA' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand WHEN expr AND ID LP distinct nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand WHEN expr AND ID LP distinct nexprlist COMMA INTEGER]
parser: Input 'RP' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Reduce 359 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 484
parser: Shift 'RP', go to state 146
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand WHEN expr AND ID LP distinct exprlist RP]
parser: Input 'THEN' in state 146
parser: Reduce 177 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 183 [expr ::= expr AND expr], go to state 99.
parser: ... then shift 'expr', go to state 51
parser: Shift 'THEN', go to state 98
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand WHEN expr THEN]
parser: Input 'STRING' in state 98
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand WHEN expr THEN STRING]
parser: Input 'ELSE' in state 539
parser: Reduce 172 [term ::= STRING], go to state 98.
parser: ... then shift 'term', go to state 66
parser: Reduce 213 [case_exprlist ::= WHEN expr THEN expr], go to state 359.
parser: ... then shift 'case_exprlist', go to state 286
parser: Shift 'ELSE', go to state 100
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand case_exprlist ELSE]
parser: Input 'ID' in state 100
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand case_exprlist ELSE ID]
parser: Input 'END' in state 419
parser: FALLBACK END => ID
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 100.
parser: ... then shift 'expr', go to state 67
parser: FALLBACK END => ID
parser: Reduce 214 [case_else ::= ELSE expr], go to state 286.
parser: ... then shift 'case_else', go to state 527
parser: Shift 'END', pending reduce 211
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ CASE case_operand case_exprlist case_else END]
parser: Input 'WHERE' with pending reduce 211
parser: Reduce 211 [expr ::= CASE case_operand case_exprlist case_else END], go to state 86.
parser: ... then shift 'expr', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'IN' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'IN', pending reduce 204
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr IN]
parser: Input 'LP' with pending reduce 204
parser: Reduce 204 [in_op ::= IN], go to state 63.
parser: ... then shift 'in_op', go to state 209
parser: Shift 'LP', go to state 3
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr in_op LP]
parser: Input 'STRING' in state 3
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr in_op LP STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 3.
parser: ... then shift 'term', go to state 70
parser: Reduce 220 [nexprlist ::= expr], go to state 3.
parser: ... then shift 'nexprlist', go to state 519
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr in_op LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr in_op LP nexprlist COMMA STRING]
parser: Input 'RP' in state 539
parser: Reduce 172 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 3.
parser: ... then shift 'nexprlist', go to state 519
parser: Reduce 359 [exprlist ::= nexprlist], go to state 3.
parser: ... then shift 'exprlist', go to state 521
parser: Shift 'RP', pending reduce 206
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr in_op LP exprlist RP]
parser: Input 'SEMI' with pending reduce 206
parser: Reduce 206 [expr ::= expr in_op LP exprlist RP], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 148 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 149
parser: Reduce 149 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 327
parser: Reduce 327 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 323 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: [[[SELECT 1 FROM "main".sqlite_master WHERE name NOT LIKE 'sqliteX_%' ESCAPE 'X' AND sql NOT LIKE 'create virtual%' AND sqlite_rename_test('main', sql, type, name, 0)=NULL ]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'INTEGER' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[SELECT distinct sclp scanpt INTEGER]
parser: Input 'FROM' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 77.
parser: ... then shift 'term', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 110
parser: Reduce 110 [dbnm ::= DOT nm], go to state 350.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'NOT' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'NOT', go to state 386
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr NOT]
parser: Input 'LIKE_KW' in state 386
parser: Shift 'LIKE_KW', pending reduce 191
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr NOT LIKE_KW]
parser: Input 'STRING' with pending reduce 191
parser: Reduce 191 [likeop ::= NOT LIKE_KW|MATCH], go to state 63.
parser: ... then shift 'likeop', go to state 112
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr likeop STRING]
parser: Input 'ESCAPE' in state 539
parser: Reduce 172 [term ::= STRING], go to state 112.
parser: ... then shift 'term', go to state 124
parser: Shift 'ESCAPE', go to state 111
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr likeop term ESCAPE]
parser: Input 'STRING' in state 111
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr likeop term ESCAPE STRING]
parser: Input 'AND' in state 539
parser: Reduce 172 [term ::= STRING], go to state 111.
parser: ... then shift 'term', go to state 128
parser: Reduce 193 [expr ::= expr likeop expr ESCAPE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'NOT' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'NOT', go to state 386
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NOT]
parser: Input 'LIKE_KW' in state 386
parser: Shift 'LIKE_KW', pending reduce 191
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NOT LIKE_KW]
parser: Input 'STRING' with pending reduce 191
parser: Reduce 191 [likeop ::= NOT LIKE_KW|MATCH], go to state 76.
parser: ... then shift 'likeop', go to state 112
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr likeop STRING]
parser: Input 'AND' in state 539
parser: Reduce 172 [term ::= STRING], go to state 112.
parser: ... then shift 'term', go to state 124
parser: Reduce 192 [expr ::= expr likeop expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 183 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'LP' in state 419
parser: Shift 'LP', go to state 266
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP]
parser: Input 'STRING' in state 266
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 11.
parser: ... then shift 'term', go to state 70
parser: Reduce 220 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA]
parser: Input 'ID' in state 107
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA ID]
parser: Input 'COMMA' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA]
parser: Input 'ID' in state 107
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA ID]
parser: Input 'COMMA' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA]
parser: Input 'ID' in state 107
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA ID]
parser: Input 'COMMA' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA INTEGER]
parser: Input 'RP' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Reduce 359 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 484
parser: Shift 'RP', go to state 146
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct exprlist RP]
parser: Input 'EQ' in state 146
parser: Reduce 177 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr EQ]
parser: Input 'NULL' in state 117
parser: Shift 'NULL', pending reduce 171
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr EQ NULL]
parser: Input 'SEMI' with pending reduce 171
parser: Reduce 171 [term ::= NULL|FLOAT|BLOB], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 183 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 148 [where_opt ::= WHERE expr], go to state 363.
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 128 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 80
parser: Reduce 80 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 327
parser: Reduce 327 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 323 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: [[[SELECT 1 FROM temp.sqlite_master WHERE name NOT LIKE 'sqliteX_%' ESCAPE 'X' AND sql NOT LIKE 'create virtual%' AND sqlite_rename_test('main', sql, type, name, 1)=NULL ]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'INTEGER' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[SELECT distinct sclp scanpt INTEGER]
parser: Input 'FROM' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 77.
parser: ... then shift 'term', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'TEMP' in state 197
parser: FALLBACK TEMP => ID
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: FALLBACK TEMP => ID
parser: Shift 'TEMP', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix TEMP]
parser: Input 'DOT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 110
parser: Reduce 110 [dbnm ::= DOT nm], go to state 350.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'NOT' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'NOT', go to state 386
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr NOT]
parser: Input 'LIKE_KW' in state 386
parser: Shift 'LIKE_KW', pending reduce 191
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr NOT LIKE_KW]
parser: Input 'STRING' with pending reduce 191
parser: Reduce 191 [likeop ::= NOT LIKE_KW|MATCH], go to state 63.
parser: ... then shift 'likeop', go to state 112
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr likeop STRING]
parser: Input 'ESCAPE' in state 539
parser: Reduce 172 [term ::= STRING], go to state 112.
parser: ... then shift 'term', go to state 124
parser: Shift 'ESCAPE', go to state 111
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr likeop term ESCAPE]
parser: Input 'STRING' in state 111
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr likeop term ESCAPE STRING]
parser: Input 'AND' in state 539
parser: Reduce 172 [term ::= STRING], go to state 111.
parser: ... then shift 'term', go to state 128
parser: Reduce 193 [expr ::= expr likeop expr ESCAPE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'NOT' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'NOT', go to state 386
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NOT]
parser: Input 'LIKE_KW' in state 386
parser: Shift 'LIKE_KW', pending reduce 191
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NOT LIKE_KW]
parser: Input 'STRING' with pending reduce 191
parser: Reduce 191 [likeop ::= NOT LIKE_KW|MATCH], go to state 76.
parser: ... then shift 'likeop', go to state 112
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr likeop STRING]
parser: Input 'AND' in state 539
parser: Reduce 172 [term ::= STRING], go to state 112.
parser: ... then shift 'term', go to state 124
parser: Reduce 192 [expr ::= expr likeop expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 183 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'LP' in state 419
parser: Shift 'LP', go to state 266
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP]
parser: Input 'STRING' in state 266
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 11.
parser: ... then shift 'term', go to state 70
parser: Reduce 220 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA]
parser: Input 'ID' in state 107
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA ID]
parser: Input 'COMMA' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA]
parser: Input 'ID' in state 107
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA ID]
parser: Input 'COMMA' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA]
parser: Input 'ID' in state 107
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA ID]
parser: Input 'COMMA' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA INTEGER]
parser: Input 'RP' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Reduce 359 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 484
parser: Shift 'RP', go to state 146
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct exprlist RP]
parser: Input 'EQ' in state 146
parser: Reduce 177 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr EQ]
parser: Input 'NULL' in state 117
parser: Shift 'NULL', pending reduce 171
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr EQ NULL]
parser: Input 'SEMI' with pending reduce 171
parser: Reduce 171 [term ::= NULL|FLOAT|BLOB], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 183 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 148 [where_opt ::= WHERE expr], go to state 363.
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 128 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 80
parser: Reduce 80 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 327
parser: Reduce 327 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 323 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[CREATE TABLE test(t1,a)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 390
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP ID]
parser: Input 'COMMA' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 192
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 379
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 152
parser: Reduce 336 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'RP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Reduce 61 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 540
parser: Shift 'RP', go to state 364
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 364
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: [[[UPDATE 'main'.sqlite_master SET type='table', name='test', tbl_name='test', rootpage=#2, sql='CREATE TABLE test(t1,a)' WHERE rowid=#1]]]
parser: Input 'UPDATE' in state 0
parser: Reduce 380 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'STRING' in state 299
parser: Reduce 71 [orconf ::=].
parser: ... then shift 'orconf', go to state 167
parser: Shift 'STRING', pending reduce 338
parser: Return. Stack=[with UPDATE orconf STRING]
parser: Input 'DOT' with pending reduce 338
parser: Reduce 338 [nm ::= STRING], go to state 167.
parser: ... then shift 'nm', go to state 395
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 432
parser: Reduce 114 [xfullname ::= nm DOT nm], go to state 167.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 431
parser: Shift 'SET', go to state 155
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 155
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 155.
parser: ... then shift 'nm', go to state 445
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'STRING' in state 84
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 84.
parser: ... then shift 'term', go to state 58
parser: Reduce 152 [setlist ::= nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'VARIABLE' in state 86
parser: Shift 'VARIABLE', pending reduce 174
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ VARIABLE]
parser: Input 'COMMA' with pending reduce 174
parser: Reduce 174 [expr ::= VARIABLE], go to state 86.
parser: ... then shift 'expr', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'WHERE' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ]
parser: Input 'VARIABLE' in state 117
parser: Shift 'VARIABLE', pending reduce 174
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ VARIABLE]
parser: Input 'SEMI' with pending reduce 174
parser: Reduce 174 [expr ::= VARIABLE], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 148 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 149
parser: Reduce 149 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 327
parser: Reduce 327 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 323 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'create_table_args', pending reduce 334
parser: Reduce 334 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE VIEW b AS SELECT * FROM test]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'VIEW' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: FALLBACK VIEW => ID
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 390
parser: Shift 'VIEW', go to state 322
parser: Return. Stack=[createkw temp VIEW]
parser: Input 'ID' in state 322
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 228
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw temp VIEW ifnotexists ID]
parser: Input 'AS' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 228.
parser: ... then shift 'nm', go to state 321
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 320
parser: Reduce 226 [eidlist_opt ::=].
parser: ... then shift 'eidlist_opt', go to state 464
parser: Shift 'AS', go to state 37
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS]
parser: Input 'SELECT' in state 37
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 97
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 97
parser: Reduce 97 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'SEMI' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Reduce 147 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 128 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 37.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 37.
parser: ... then shift 'select', pending reduce 78
parser: Reduce 78 [cmd ::= createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS select], go to state 0.
parser: [[[UPDATE 'main'.sqlite_master SET type='view', name='b', tbl_name='b', rootpage=#2, sql='CREATE VIEW b AS SELECT * FROM test' WHERE rowid=#1]]]
parser: Input 'UPDATE' in state 0
parser: Reduce 380 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'STRING' in state 299
parser: Reduce 71 [orconf ::=].
parser: ... then shift 'orconf', go to state 167
parser: Shift 'STRING', pending reduce 338
parser: Return. Stack=[with UPDATE orconf STRING]
parser: Input 'DOT' with pending reduce 338
parser: Reduce 338 [nm ::= STRING], go to state 167.
parser: ... then shift 'nm', go to state 395
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 432
parser: Reduce 114 [xfullname ::= nm DOT nm], go to state 167.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 431
parser: Shift 'SET', go to state 155
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 155
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 155.
parser: ... then shift 'nm', go to state 445
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'STRING' in state 84
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 84.
parser: ... then shift 'term', go to state 58
parser: Reduce 152 [setlist ::= nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'VARIABLE' in state 86
parser: Shift 'VARIABLE', pending reduce 174
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ VARIABLE]
parser: Input 'COMMA' with pending reduce 174
parser: Reduce 174 [expr ::= VARIABLE], go to state 86.
parser: ... then shift 'expr', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'WHERE' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ]
parser: Input 'VARIABLE' in state 117
parser: Shift 'VARIABLE', pending reduce 174
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ VARIABLE]
parser: Input 'SEMI' with pending reduce 174
parser: Reduce 174 [expr ::= VARIABLE], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 148 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 149
parser: Reduce 149 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 327
parser: Reduce 327 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 323 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TRIGGER c AFTER INSERT ON test BEGIN
    UPDATE test 
       SET (a,t1)=((WITH cte1(a) AS (SELECT 1 FROM b) SELECT b.a FROM b, cte1),1);
  END]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TRIGGER' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: FALLBACK TRIGGER => ID
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 390
parser: Shift 'TRIGGER', go to state 319
parser: Return. Stack=[createkw temp TRIGGER]
parser: Input 'ID' in state 319
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 227
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw temp TRIGGER ifnotexists ID]
parser: Input 'AFTER' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 227.
parser: ... then shift 'nm', go to state 318
parser: FALLBACK AFTER => ID
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 257
parser: Shift 'AFTER', pending reduce 246
parser: Return. Stack=[createkw temp TRIGGER ifnotexists nm dbnm AFTER]
parser: Input 'INSERT' with pending reduce 246
parser: Reduce 246 [trigger_time ::= BEFORE|AFTER], go to state 257.
parser: ... then shift 'trigger_time', go to state 256
parser: Shift 'INSERT', pending reduce 249
parser: Return. Stack=[createkw temp TRIGGER ifnotexists nm dbnm trigger_time INSERT]
parser: Input 'ON' with pending reduce 249
parser: Reduce 249 [trigger_event ::= DELETE|INSERT], go to state 256.
parser: ... then shift 'trigger_event', go to state 463
parser: Shift 'ON', go to state 181
parser: Return. Stack=[createkw temp TRIGGER ifnotexists nm dbnm trigger_time trigger_event ON]
parser: Input 'ID' in state 181
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw temp TRIGGER ifnotexists nm dbnm trigger_time trigger_event ON ID]
parser: Input 'BEGIN' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 181.
parser: ... then shift 'nm', go to state 462
parser: FALLBACK BEGIN => ID
parser: Reduce 111 [fullname ::= nm], go to state 181.
parser: ... then shift 'fullname', go to state 317
parser: FALLBACK BEGIN => ID
parser: Reduce 366 [foreach_clause ::=].
parser: ... then shift 'foreach_clause', go to state 316
parser: FALLBACK BEGIN => ID
parser: Reduce 252 [when_clause ::=].
parser: ... then shift 'when_clause', pending reduce 245
parser: Reduce 245 [trigger_decl ::= temp TRIGGER ifnotexists nm dbnm trigger_time trigger_event ON fullname foreach_clause when_clause], go to state 134.
parser: ... then shift 'trigger_decl', go to state 453
parser: Shift 'BEGIN', go to state 144
parser: Return. Stack=[createkw trigger_decl BEGIN]
parser: Input 'UPDATE' in state 144
parser: Shift 'UPDATE', go to state 312
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE]
parser: Input 'ID' in state 312
parser: Reduce 71 [orconf ::=].
parser: ... then shift 'orconf', go to state 179
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf ID]
parser: Input 'SET' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 179.
parser: ... then shift 'nm', go to state 451
parser: Reduce 368 [trnm ::= nm], go to state 179.
parser: ... then shift 'trnm', go to state 276
parser: Reduce 369 [tridxby ::=].
parser: ... then shift 'tridxby', go to state 448
parser: Shift 'SET', go to state 158
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET]
parser: Input 'LP' in state 158
parser: Shift 'LP', go to state 177
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP]
parser: Input 'ID' in state 177
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP ID]
parser: Input 'COMMA' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 177.
parser: ... then shift 'nm', pending reduce 165
parser: Reduce 165 [idlist ::= nm], go to state 177.
parser: ... then shift 'idlist', go to state 400
parser: Shift 'COMMA', go to state 241
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist COMMA]
parser: Input 'ID' in state 241
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist COMMA ID]
parser: Input 'RP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 241.
parser: ... then shift 'nm', pending reduce 164
parser: Reduce 164 [idlist ::= idlist COMMA nm], go to state 177.
parser: ... then shift 'idlist', go to state 400
parser: Shift 'RP', go to state 444
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP]
parser: Input 'EQ' in state 444
parser: Shift 'EQ', go to state 83
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ]
parser: Input 'LP' in state 83
parser: Shift 'LP', go to state 4
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP]
parser: Input 'LP' in state 4
parser: Shift 'LP', go to state 4
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP]
parser: Input 'WITH' in state 4
parser: Shift 'WITH', go to state 162
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH]
parser: Input 'ID' in state 162
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 162.
parser: ... then shift 'nm', go to state 338
parser: Shift 'LP', go to state 184
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH nm LP]
parser: Input 'ID' in state 184
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH nm LP ID]
parser: Input 'RP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 184.
parser: ... then shift 'nm', go to state 339
parser: Reduce 230 [collate ::=].
parser: ... then shift 'collate', go to state 281
parser: Reduce 134 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 229
parser: Reduce 229 [eidlist ::= nm collate sortorder], go to state 184.
parser: ... then shift 'eidlist', go to state 410
parser: Shift 'RP', pending reduce 227
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH nm LP eidlist RP]
parser: Input 'AS' with pending reduce 227
parser: Reduce 227 [eidlist_opt ::= LP eidlist RP], go to state 338.
parser: ... then shift 'eidlist_opt', go to state 489
parser: Shift 'AS', go to state 488
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH nm eidlist_opt AS]
parser: Input 'LP' in state 488
parser: Shift 'LP', go to state 39
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH nm eidlist_opt AS LP]
parser: Input 'SELECT' in state 39
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH nm eidlist_opt AS LP SELECT]
parser: Input 'INTEGER' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH nm eidlist_opt AS LP SELECT distinct sclp scanpt INTEGER]
parser: Input 'FROM' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 77.
parser: ... then shift 'term', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH nm eidlist_opt AS LP SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH nm eidlist_opt AS LP SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'RP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Reduce 147 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 128 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 39.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 39.
parser: ... then shift 'select', go to state 487
parser: Shift 'RP', pending reduce 290
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH nm eidlist_opt AS LP select RP]
parser: Input 'SELECT' with pending reduce 290
parser: Reduce 290 [wqlist ::= nm eidlist_opt AS LP select RP], go to state 162.
parser: ... then shift 'wqlist', go to state 143
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH wqlist SELECT]
parser: Input 'ID' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 419
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH wqlist SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 419
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 493
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH wqlist SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH wqlist SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'FROM' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 536
parser: Reduce 169 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH wqlist SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH wqlist SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'COMMA' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Shift 'COMMA', pending reduce 117
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH wqlist SELECT distinct selcollist FROM seltablist COMMA]
parser: Input 'ID' with pending reduce 117
parser: Reduce 117 [joinop ::= COMMA|JOIN], go to state 263.
parser: ... then shift 'joinop', pending reduce 103
parser: Reduce 103 [stl_prefix ::= seltablist joinop], go to state 197.
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP WITH wqlist SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'RP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Reduce 147 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 128 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 143.
parser: ... then shift 'oneselect', go to state 265
parser: Reduce 81 [select ::= WITH wqlist selectnowith], go to state 4.
parser: ... then shift 'select', go to state 485
parser: Shift 'RP', pending reduce 207
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP LP select RP]
parser: Input 'COMMA' with pending reduce 207
parser: Reduce 207 [expr ::= LP select RP], go to state 4.
parser: ... then shift 'expr', go to state 50
parser: Reduce 220 [nexprlist ::= expr], go to state 4.
parser: ... then shift 'nexprlist', go to state 486
parser: Shift 'COMMA', go to state 91
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP nexprlist COMMA]
parser: Input 'INTEGER' in state 91
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[createkw trigger_decl BEGIN UPDATE orconf trnm tridxby SET LP idlist RP EQ LP nexprlist COMMA INTEGER]
parser: Input 'RP' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 91.

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fbf80e72859 in __GI_abort () at abort.c:79
#2  0x00007fbf80e72729 in __assert_fail_base (fmt=0x7fbf81008588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x217a67 "p->p!=pPtr", file=0x2291f4 "sqlite3.c", line=103850, function=<optimized out>) at assert.c:92
#3  0x00007fbf80e83fd6 in __GI___assert_fail (assertion=0x217a67 "p->p!=pPtr", file=0x2291f4 "sqlite3.c", line=103850, function=0x226da1 "void renameTokenCheckAll(Parse *, void *)") at assert.c:101
#4  0x0000000000320f78 in renameTokenCheckAll (pParse=0x7ffdd4d54b60, pPtr=0x22ed770) at sqlite3.c:103850
#5  0x0000000000306280 in sqlite3RenameTokenMap (pParse=0x7ffdd4d54b60, pPtr=0x22ed770, pToken=0x7ffdd4d54400) at sqlite3.c:103875
#6  0x0000000000305043 in sqlite3ExprListSetName (pParse=0x7ffdd4d54b60, pList=0x23196b0, pName=0x7ffdd4d54400, dequote=0) at sqlite3.c:99243
#7  0x000000000034166b in selectExpander (pWalker=0x7ffdd4d546a0, p=0x22ec9d0) at sqlite3.c:130708
#8  0x00000000003203a6 in sqlite3WalkSelect (pWalker=0x7ffdd4d546a0, p=0x22ec9d0) at sqlite3.c:95676
#9  0x00000000003404c3 in selectExpander (pWalker=0x7ffdd4d546a0, p=0x22edcf0) at sqlite3.c:130554
#10 0x00000000003203a6 in sqlite3WalkSelect (pWalker=0x7ffdd4d546a0, p=0x22edcf0) at sqlite3.c:95676
#11 0x000000000033573a in sqlite3SelectExpand (pParse=0x7ffdd4d54b60, pSelect=0x22edcf0) at sqlite3.c:130806
#12 0x0000000000335550 in sqlite3SelectPrep (pParse=0x7ffdd4d54b60, p=0x22edcf0, pOuterNC=0x7ffdd4d54a88) at sqlite3.c:130891
#13 0x0000000000337e46 in resolveSelectStep (pWalker=0x7ffdd4d54970, p=0x22edcf0) at sqlite3.c:97139
#14 0x00000000003203a6 in sqlite3WalkSelect (pWalker=0x7ffdd4d54970, p=0x22edcf0) at sqlite3.c:95676
#15 0x00000000003377e1 in resolveExprStep (pWalker=0x7ffdd4d54970, pExpr=0x22ec6f0) at sqlite3.c:96660
#16 0x000000000031fe22 in walkExpr (pWalker=0x7ffdd4d54970, pExpr=0x22ec6f0) at sqlite3.c:95554
#17 0x000000000031fdc8 in sqlite3WalkExpr (pWalker=0x7ffdd4d54970, pExpr=0x22ec6f0) at sqlite3.c:95582
#18 0x0000000000339089 in sqlite3ResolveExprNames (pNC=0x7ffdd4d54a88, pExpr=0x22ec6f0) at sqlite3.c:97416
#19 0x00000000003391b5 in sqlite3ResolveExprListNames (pNC=0x7ffdd4d54a88, pList=0x23195a0) at sqlite3.c:97441
#20 0x0000000000426b97 in renameResolveTrigger (pParse=0x7ffdd4d54b60, zDb=0x22e2630 "main") at sqlite3.c:104332
#21 0x0000000000425a07 in renameTableFunc (context=0x22d2dc0, NotUsed=7, argv=0x22d2df0) at sqlite3.c:104731
#22 0x00000000003e9e49 in sqlite3VdbeExec (p=0x22de940) at sqlite3.c:91482
#23 0x000000000041ba74 in sqlite3Step (p=0x22de940) at sqlite3.c:82300
#24 0x0000000000293d5d in sqlite3_step (pStmt=0x22de940) at sqlite3.c:82365
#25 0x0000000000258a39 in main (argc=1, argv=0x7ffdd4d55a08) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 51133] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
