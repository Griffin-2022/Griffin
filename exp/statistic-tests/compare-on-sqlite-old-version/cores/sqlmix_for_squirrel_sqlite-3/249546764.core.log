GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000596,sig:06,src:021572+025721,time:36022883,execs:7055550,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT hex('€') AS x
;]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 €             00 r[3]='€'
REG[3] =   t1[.](8)
   6 Function0        1    3    2 hex(1)        01 r[2]=func(r[3])
REG[3] =   t1[.](8)
REG[2] =   z2[80](8)
   7 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s2[80](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s2[80](8)
   4 Halt             0    0    0               00 
SQL: [select length(zeroblob(-1))
;]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 Integer         -1    4    0               00 r[4]=-1
REG[4] =  i:-1
   6 Function0        1    4    3 zeroblob(1)   01 r[3]=func(r[4])
REG[4] =  i:-1
REG[3] =  sx0[|]+0z
   7 Function0        1    3    2 length(1)     01 r[2]=func(r[3])
REG[3] =  sx0[|]+0z
REG[2] =  i:0
   8 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =  i:0
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   4 Halt             0    0    0               00 
SQL: [CREATE TABLE t2(x, log_entry, UNIQUE(x, log_entry));]
VDBE Trace:
   0 Init             0   39    0               00 Start at 39
  39 Transaction      0    1    1 0             01 usesStmtJournal=0
  40 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  tx6[060000000000|......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  tx6[060000000000|......]
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      0    4    2               00 r[4]=root iDb=0 flags=2
REG[4] =  i:3
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:3
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_t2_1 00 r[7]='sqlite_autoindex_t2_1'
REG[7] =   t21[sqlite_autoindex_t2_1](8)
  17 String8          0    8    0 t2            00 r[8]='t2'
REG[8] =   t2[t2](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:3
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[6] =   t5[index](8)
REG[7] =   t21[sqlite_autoindex_t2_1](8)
REG[8] =   t2[t2](8)
REG[9] =  i:3
REG[10] =  NULL
REG[11] =  sx35[061737110100696E64657873716C6974655F6175746F696E64|..7...indexsqlite_autoind]
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  sx35[061737110100696E64657873716C6974655F6175746F696E64|..7...indexsqlite_autoind]
REG[5] =  i:3
  22 Close            0    0    0               00 
  23 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  24 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  25 Explain         25    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  26 SeekRowid        2   28    1               00 intkey=r[1]
REG[1] =  i:2
  27 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:2
  28 IsNull          13   36    0               00 if r[13]==NULL goto 36
REG[13] =  i:2
  29 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  30 String8          0   15    0 t2            00 r[15]='t2'
REG[15] =   t2[t2](8)
  31 String8          0   16    0 t2            00 r[16]='t2'
REG[16] =   t2[t2](8)
  32 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:2
  33 String8          0   18    0 CREATE TABLE t2(x, log_entry, UNIQUE(x, log_entry)) 00 r[18]='CREATE TABLE t2(x, log_entry, UNIQUE(x, log_entry))'
REG[18] =   t51[CREATE TABLE t2(x, log_en](8)
  34 MakeRecord      14    5   12 BBBDB         00 r[12]=mkrec(r[14..18])
REG[14] =   t5[table](8)
REG[15] =   t2[t2](8)
REG[16] =   t2[t2](8)
REG[17] =  i:2
REG[18] =   t51[CREATE TABLE t2(x, log_en](8)
REG[12] =  sx67[0617111101737461626C657432743202435245415445205441|.....stablet2t2.CREATE TA]
  35 Insert           2   12   13               00 intkey=r[13] data=r[12]
REG[12] =  sx67[0617111101737461626C657432743202435245415445205441|.....stablet2t2.CREATE TA]
REG[13] =  i:2
  36 SetCookie        0    1    2               00 
  37 ParseSchema      0    0    0 tbl_name='t2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    2 0             00 usesStmtJournal=0
  18 String8          0    2    0 t2            00 r[2]='t2'
REG[2] =   t2[t2](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[test](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t2](8)
REG[1] =   s4[test](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t2](8)
REG[1] =   s2[t2](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t2](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s2[t2](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:2
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s51[CREATE TABLE t2(x, log_en](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s2[t2](8)
REG[6] =   s2[t2](8)
REG[7] =  i:2
REG[8] =   s51[CREATE TABLE t2(x, log_en](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t2](8)
REG[1] =   s2[t2](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[index](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s21[sqlite_autoindex_t2_1](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s2[t2](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:3
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =  NULL
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[index](8)
REG[5] =   s21[sqlite_autoindex_t2_1](8)
REG[6] =   s2[t2](8)
REG[7] =  i:3
REG[8] =  NULL
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  38 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
SQL: [;CREATE TRIGGER col1 AFTER INSERT ON t1 BEGIN
    INSERT INTO t1
        WITH t1(a,a) AS (VALUES(1,'cte1'),(2,'cte2'))
        SELECT
          new.a,
          (SELECT a FROM t1 WHERE a=new.a),
          (SELECT a FROM main.t1 WHERE a=new.a);
  END;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      1    1    1 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 OpenWrite        0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   3 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   4 String8          0    3    0 col1          00 r[3]='col1'
REG[3] =   t4[col1](8)
   5 String8          0    4    0 t1            00 r[4]='t1'
REG[4] =   t2[t1](8)
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 String8          0    6    0 CREATE TRIGGER col1 AFTER INSERT ON t1 BEGIN
    INSERT INTO t1
        WITH t1(a,a) AS (VALUES(1,'cte1'),(2,'cte2'))
        SELECT
          new.a,
          (SELECT a FROM t1 WHERE a=new.a),
          (SELECT a FROM main.t1 WHERE a=new.a);
  END 00 r[6]='CREATE TRIGGER col1 AFTER INSERT ON t1 BEGIN
    INSERT INTO t1
        WITH t1(a,a) AS (VALU
REG[6] =   t248[CREATE TRIGGER col1 AFTER](8)
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
REG[2] =   t7[trigger](8)
REG[3] =   t4[col1](8)
REG[4] =   t2[t1](8)
REG[5] =  i:0
REG[6] =   t248[CREATE TRIGGER col1 AFTER](8)
REG[7] =  sx268[071B151108837D74726967676572636F6C3174314352454154|......}triggercol1t1CREAT]
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
REG[7] =  sx268[071B151108837D74726967676572636F6C3174314352454154|......}triggercol1t1CREAT]
REG[1] =  i:2
  10 SetCookie        1    1    2               00 
  11 ParseSchema      1    0    0 type='trigger' AND name='col1' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      1    0    2 0             00 usesStmtJournal=0
  18 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  19 String8          0    3    0 col1          00 r[3]='col1'
REG[3] =   t4[col1](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_temp_master.type
REG[1] =   s5[table](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  15 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_temp_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    1               00 r[1]=sqlite_temp_master.name
REG[1] =   s4[col1](8)
   8 Ne               3   15    1 (BINARY)      52 if r[1]!=r[3] goto 15
REG[3] =   t4[col1](8)
REG[1] =   s4[col1](8)
   9 Column           0    0    4               00 r[4]=sqlite_temp_master.type
REG[4] =   s7[trigger](8)
  10 Column           0    1    5               00 r[5]=sqlite_temp_master.name
REG[5] =   s4[col1](8)
  11 Column           0    2    6               00 r[6]=sqlite_temp_master.tbl_name
REG[6] =   s2[t1](8)
  12 Column           0    3    7               00 r[7]=sqlite_temp_master.rootpage
REG[7] =  i:0
  13 Column           0    4    8               00 r[8]=sqlite_temp_master.sql
REG[8] =   s248[CREATE TRIGGER col1 AFTER](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s7[trigger](8)
REG[5] =   s4[col1](8)
REG[6] =   s2[t1](8)
REG[7] =  i:0
REG[8] =   s248[CREATE TRIGGER col1 AFTER](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [ALTER TABLE t1 RENAME c TO t1;]
VDBE Trace:
   0 Init             0   77    0               00 Start at 77
  77 Transaction      1    1    2 0             01 usesStmtJournal=1
  78 String8          0    9    0 sqliteX_%     00 r[9]='sqliteX_%'
REG[9] =   t9[sqliteX_%](8)
  79 String8          0   11    0 X             00 r[11]='X'
REG[11] =   t1[X](8)
  80 String8          0   12    0 index         00 r[12]='index'
REG[12] =   t5[index](8)
  81 String8          0   13    0 t1            00 r[13]='t1'
REG[13] =   t2[t1](8)
  82 String8          0   14    0 create virtual% 00 r[14]='create virtual%'
REG[14] =   t15[create virtual%](8)
  83 String8          0   20    0 temp          00 r[20]='temp'
REG[20] =   t4[temp](8)
  84 String8          0   21    0 t1            00 r[21]='t1'
REG[21] =   t2[t1](8)
  85 Integer          2   22    0               00 r[22]=2
REG[22] =  i:2
  86 String8          0   23    0 t1            00 r[23]='t1'
REG[23] =   t2[t1](8)
  87 Integer          0   24    0               00 r[24]=0
REG[24] =  i:0
  88 Integer          1   25    0               00 r[25]=1
REG[25] =  i:1
  89 String8          0   33    0 trigger       00 r[33]='trigger'
REG[33] =   t7[trigger](8)
  90 String8          0   34    0 view          00 r[34]='view'
REG[34] =   t4[view](8)
  91 String8          0   39    0 temp          00 r[39]='temp'
REG[39] =   t4[temp](8)
  92 String8          0   40    0 t1            00 r[40]='t1'
REG[40] =   t2[t1](8)
  93 Integer          2   41    0               00 r[41]=2
REG[41] =  i:2
  94 String8          0   42    0 t1            00 r[42]='t1'
REG[42] =   t2[t1](8)
  95 Integer          0   43    0               00 r[43]=0
REG[43] =  i:0
  96 Integer          1   44    0               00 r[44]=1
REG[44] =  i:1
  97 String8          0   46    0 sqliteX_%     00 r[46]='sqliteX_%'
REG[46] =   t9[sqliteX_%](8)
  98 String8          0   48    0 X             00 r[48]='X'
REG[48] =   t1[X](8)
  99 String8          0   49    0 create virtual% 00 r[49]='create virtual%'
REG[49] =   t15[create virtual%](8)
 100 String8          0   51    0 temp          00 r[51]='temp'
REG[51] =   t4[temp](8)
 101 Integer          1   55    0               00 r[55]=1
REG[55] =  i:1
 102 Null             0   56    0               00 r[56]=NULL
REG[56] =  NULL
 103 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   18    0               00 
   5 Column           0    1   10               00 r[10]=sqlite_temp_master.name
REG[10] =   s2[t1](8)
   6 Function0        5    9    8 like(3)       03 r[8]=func(r[9..11])
REG[9] =   t9[sqliteX_%](8)
REG[10] =   s2[t1](8)
REG[11] =   t1[X](8)
REG[8] =  i:0
   7 If               8   17    1               00 
REG[8] =  i:0
   8 Column           0    0    8               00 r[8]=sqlite_temp_master.type
REG[8] =   s5[table](8)
   9 Ne              12   12    8 (BINARY)      42 if r[8]!=r[12] goto 12
REG[12] =   t5[index](8)
REG[8] =   s5[table](8)
  12 Column           0    4   15               00 r[15]=sqlite_temp_master.sql
REG[15] =   s22[CREATE TABLE t1(a,b,c)](8)
  13 Function0        1   14    8 like(2)       02 r[8]=func(r[14..15])
REG[14] =   t15[create virtual%](8)
REG[15] =   s22[CREATE TABLE t1(a,b,c)](8)
REG[8] =  i:0
  14 If               8   17    1               00 
REG[8] =  i:0
  15 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
  16 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
  17 Next             0    5    0               01 
   5 Column           0    1   10               00 r[10]=sqlite_temp_master.name
REG[10] =   s4[col1](8)
   6 Function         5    9    8 like(3)       03 r[8]=func(r[9..11])
REG[9] =   t9[sqliteX_%](8)
REG[10] =   s4[col1](8)
REG[11] =   t1[X](8)
REG[8] =  i:0
   7 If               8   17    1               00 
REG[8] =  i:0
   8 Column           0    0    8               00 r[8]=sqlite_temp_master.type
REG[8] =   s7[trigger](8)
   9 Ne              12   12    8 (BINARY)      42 if r[8]!=r[12] goto 12
REG[12] =   t5[index](8)
REG[8] =   s7[trigger](8)
  12 Column           0    4   15               00 r[15]=sqlite_temp_master.sql
REG[15] =   s248[CREATE TRIGGER col1 AFTER](8)
  13 Function         1   14    8 like(2)       02 r[8]=func(r[14..15])
REG[14] =   t15[create virtual%](8)
REG[15] =   s248[CREATE TRIGGER col1 AFTER](8)
REG[8] =  i:0
  14 If               8   17    1               00 
REG[8] =  i:0
  15 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
  16 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:2
  17 Next             0    5    0               01 
  18 OpenWrite        0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
  19 RowSetRead       1   32    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  20 NotExists        0   19    2               00 intkey=r[2]
REG[2] =  i:1
  21 Column           0    0    3               00 r[3]=sqlite_temp_master.type
REG[3] =   s5[table](8)
  22 Column           0    1    4               00 r[4]=sqlite_temp_master.name
REG[4] =   s2[t1](8)
  23 Column           0    2    5               00 r[5]=sqlite_temp_master.tbl_name
REG[5] =   s2[t1](8)
  24 Column           0    3    6               00 r[6]=sqlite_temp_master.rootpage
REG[6] =  i:2
  25 Column           0    4   17               00 r[17]=sqlite_temp_master.sql
REG[17] =   s22[CREATE TABLE t1(a,b,c)](8)
  26 Column           0    0   18               00 r[18]=sqlite_temp_master.type
REG[18] =   s5[table](8)
  27 Column           0    1   19               00 r[19]=sqlite_temp_master.name
REG[19] =   s2[t1](8)
  28 Function0      504   17    7 sqlite_rename_column(9) 09 r[7]=func(r[17..25])
REG[17] =   s22[CREATE TABLE t1(a,b,c)](8)
REG[18] =   s5[table](8)
REG[19] =   s2[t1](8)
REG[20] =   t4[temp](8)
REG[21] =   t2[t1](8)
REG[22] =  i:2
REG[23] =   t2[t1](8)
REG[24] =  i:0
REG[25] =  i:1
REG[7] =   s23[CREATE TABLE t1(a,b,t1)](8)
  29 MakeRecord       3    5   16 BBBDB         00 r[16]=mkrec(r[3..7])
REG[3] =   s5[table](8)
REG[4] =   s2[t1](8)
REG[5] =   s2[t1](8)
REG[6] =  i:2
REG[7] =   s23[CREATE TABLE t1(a,b,t1)](8)
REG[16] =  sx39[06171111013B7461626C657431743102435245415445205441|.....;tablet1t1.CREATE TA]
  30 Insert           0   16    2               00 intkey=r[2] data=r[16]
REG[16] =  sx39[06171111013B7461626C657431743102435245415445205441|.....;tablet1t1.CREATE TA]
REG[2] =  i:1
  31 Goto             0   19    0               00 
  19 RowSetRead       1   32    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  20 NotExists        0   19    2               00 intkey=r[2]
REG[2] =  i:2
  21 Column           0    0    3               00 r[3]=sqlite_temp_master.type
REG[3] =   s7[trigger](8)
  22 Column           0    1    4               00 r[4]=sqlite_temp_master.name
REG[4] =   s4[col1](8)
  23 Column           0    2    5               00 r[5]=sqlite_temp_master.tbl_name
REG[5] =   s2[t1](8)
  24 Column           0    3    6               00 r[6]=sqlite_temp_master.rootpage
REG[6] =  i:0
  25 Column           0    4   17               00 r[17]=sqlite_temp_master.sql
REG[17] =   s248[CREATE TRIGGER col1 AFTER](8)
  26 Column           0    0   18               00 r[18]=sqlite_temp_master.type
REG[18] =   s7[trigger](8)
  27 Column           0    1   19               00 r[19]=sqlite_temp_master.name
REG[19] =   s4[col1](8)
  28 Function       504   17    7 sqlite_rename_column(9) 09 r[7]=func(r[17..25])
REG[17] =   s248[CREATE TRIGGER col1 AFTER](8)
REG[18] =   s7[trigger](8)
REG[19] =   s4[col1](8)
REG[20] =   t4[temp](8)
REG[21] =   t2[t1](8)
REG[22] =  i:2
REG[23] =   t2[t1](8)
REG[24] =  i:0
REG[25] =  i:1
SQL: [SELECT hex('À¿') AS x
;]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 À¿            00 r[3]='À¿'
REG[3] =   t2[..](8)
   6 Function0        1    3    2 hex(1)        01 r[2]=func(r[3])
REG[3] =   t2[..](8)
REG[2] =   z4[C0BF](8)
   7 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s4[C0BF](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s4[C0BF](8)
   4 Halt             0    0    0               00 
SQL: [SELECT hex('À¿') AS x
;]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 À¿            00 r[3]='À¿'
REG[3] =   t2[..](8)
   6 Function0        1    3    2 hex(1)        01 r[2]=func(r[3])
REG[3] =   t2[..](8)
REG[2] =   z4[C0BF](8)
   7 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s4[C0BF](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s4[C0BF](8)
   4 Halt             0    0    0               00 
SQL: [ATTACH ':memory:' AS aux1;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 String8          0    1    0 :memory:      00 r[1]=':memory:'
REG[1] =   t8[:memory:](8)
   2 String8          0    2    0 aux1          00 r[2]='aux1'
REG[2] =   t4[aux1](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t8[:memory:](8)
REG[2] =   t4[aux1](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      2    0    0 0             00 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
  12 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [ALTER TABLE t2 RENAME TO v2;]
VDBE Trace:
   0 Init             0  140    0               00 Start at 140
 140 Transaction      0    1    2 0             01 usesStmtJournal=1
 141 Transaction      1    1    2 0             01 usesStmtJournal=1
 142 String8          0    9    0 index         00 r[9]='index'
REG[9] =   t5[index](8)
 143 String8          0   10    0 t2            00 r[10]='t2'
REG[10] =   t2[t2](8)
 144 String8          0   11    0 sqliteX_%     00 r[11]='sqliteX_%'
REG[11] =   t9[sqliteX_%](8)
 145 String8          0   13    0 X             00 r[13]='X'
REG[13] =   t1[X](8)
 146 String8          0   15    0 main          00 r[15]='main'
REG[15] =   t4[main](8)
 147 String8          0   19    0 t2            00 r[19]='t2'
REG[19] =   t2[t2](8)
 148 String8          0   20    0 v2            00 r[20]='v2'
REG[20] =   t2[v2](8)
 149 Integer          0   21    0               00 r[21]=0
REG[21] =  i:0
 150 String8          0   29    0 table         00 r[29]='table'
REG[29] =   t5[table](8)
 151 String8          0   30    0 trigger       00 r[30]='trigger'
REG[30] =   t7[trigger](8)
 152 String8          0   32    0 sqliteX_autoindex% 00 r[32]='sqliteX_autoindex%'
REG[32] =   t18[sqliteX_autoindex%](8)
 153 String8          0   34    0 X             00 r[34]='X'
REG[34] =   t1[X](8)
 154 String8          0   47    0 sqlite_autoindex_ 00 r[47]='sqlite_autoindex_'
REG[47] =   t17[sqlite_autoindex_](8)
 155 String8          0   83    0 v2            00 r[83]='v2'
REG[83] =   t2[v2](8)
 156 Concat          83   47   35               00 r[35]=r[47]+r[83]
REG[83] =   t2[v2](8)
REG[47] =   t17[sqlite_autoindex_](8)
REG[35] =   s19[sqlite_autoindex_v2](8)
 157 Integer          2   83    0               00 r[83]=2
REG[83] =  i:2
 158 Integer         18   47    0               00 r[47]=18
REG[47] =  i:18
 159 Add             47   83   37               00 r[37]=r[47]+r[83]
REG[47] =  i:18
REG[83] =  i:2
REG[37] =  i:20
 160 String8          0   45    0 view          00 r[45]='view'
REG[45] =   t4[view](8)
 161 String8          0   48    0 main          00 r[48]='main'
REG[48] =   t4[main](8)
 162 Integer          1   52    0               00 r[52]=1
REG[52] =  i:1
 163 String8          0   53    0 main          00 r[53]='main'
REG[53] =   t4[main](8)
 164 String8          0   57    0 t2            00 r[57]='t2'
REG[57] =   t2[t2](8)
 165 String8          0   58    0 v2            00 r[58]='v2'
REG[58] =   t2[v2](8)
 166 Integer          1   59    0               00 r[59]=1
REG[59] =  i:1
 167 String8          0   60    0 sqliteX_%     00 r[60]='sqliteX_%'
REG[60] =   t9[sqliteX_%](8)
 168 String8          0   62    0 X             00 r[62]='X'
REG[62] =   t1[X](8)
 169 String8          0   63    0 create virtual% 00 r[63]='create virtual%'
REG[63] =   t15[create virtual%](8)
 170 String8          0   65    0 main          00 r[65]='main'
REG[65] =   t4[main](8)
 171 Integer          0   69    0               00 r[69]=0
REG[69] =  i:0
 172 Null             0   70    0               00 r[70]=NULL
REG[70] =  NULL
 173 String8          0   72    0 sqliteX_%     00 r[72]='sqliteX_%'
REG[72] =   t9[sqliteX_%](8)
 174 String8          0   74    0 X             00 r[74]='X'
REG[74] =   t1[X](8)
 175 String8          0   75    0 create virtual% 00 r[75]='create virtual%'
REG[75] =   t15[create virtual%](8)
 176 String8          0   77    0 main          00 r[77]='main'
REG[77] =   t4[main](8)
 177 Integer          1   81    0               00 r[81]=1
REG[81] =  i:1
 178 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    1    0 3             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   15    0               00 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s4[view](8)
   6 Ne               9    9    8 (BINARY)      42 if r[8]!=r[9] goto 9
REG[9] =   t5[index](8)
REG[8] =   s4[view](8)
   9 Column           0    1   12               00 r[12]=sqlite_master.name
REG[12] =   s4[test](8)
  10 Function0        5   11    8 like(3)       03 r[8]=func(r[11..13])
REG[11] =   t9[sqliteX_%](8)
REG[12] =   s4[test](8)
REG[13] =   t1[X](8)
REG[8] =  i:0
  11 If               8   14    1               00 
REG[8] =  i:0
  12 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
  13 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
  14 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Ne               9    9    8 (BINARY)      42 if r[8]!=r[9] goto 9
REG[9] =   t5[index](8)
REG[8] =   s5[table](8)
   9 Column           0    1   12               00 r[12]=sqlite_master.name
REG[12] =   s2[t2](8)
  10 Function         5   11    8 like(3)       03 r[8]=func(r[11..13])
REG[11] =   t9[sqliteX_%](8)
REG[12] =   s2[t2](8)
REG[13] =   t1[X](8)
REG[8] =  i:0
  11 If               8   14    1               00 
REG[8] =  i:0
  12 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
  13 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:2
  14 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   6 Ne               9    9    8 (BINARY)      42 if r[8]!=r[9] goto 9
REG[9] =   t5[index](8)
REG[8] =   s5[index](8)
   7 Column           0    2    8               00 r[8]=sqlite_master.tbl_name
REG[8] =   s2[t2](8)
   8 Ne              10   14    8 (NOCASE)      52 if r[8]!=r[10] goto 14
REG[10] =   t2[t2](8)
REG[8] =   s2[t2](8)
   9 Column           0    1   12               00 r[12]=sqlite_master.name
REG[12] =   s21[sqlite_autoindex_t2_1](8)
  10 Function         5   11    8 like(3)       03 r[8]=func(r[11..13])
REG[11] =   t9[sqliteX_%](8)
REG[12] =   s21[sqlite_autoindex_t2_1](8)
REG[13] =   t1[X](8)
REG[8] =  i:1
  11 If               8   14    1               00 
REG[8] =  i:1
  14 Next             0    5    0               01 
  15 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
  16 RowSetRead       1   29    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  17 NotExists        0   16    2               00 intkey=r[2]
REG[2] =  i:1
  18 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s4[view](8)
  19 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[test](8)
  20 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
REG[5] =   s4[test](8)
  21 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:0
  22 Column           0    0   16               00 r[16]=sqlite_master.type
REG[16] =   s4[view](8)
  23 Column           0    1   17               00 r[17]=sqlite_master.name
REG[17] =   s4[test](8)
  24 Column           0    4   18               00 r[18]=sqlite_master.sql
REG[18] =   s110[CREATE VIEW test AS SELEC](8)
  25 Function0      113   15    7 sqlite_rename_table(7) 07 r[7]=func(r[15..21])
REG[15] =   t4[main](8)
REG[16] =   s4[view](8)
REG[17] =   s4[test](8)
REG[18] =   s110[CREATE VIEW test AS SELEC](8)
REG[19] =   t2[t2](8)
REG[20] =   t2[v2](8)
REG[21] =  i:0
SQL: [;ALTER TABLE pragma_compile_options RENAME TO flubber;]
VDBE Trace:
   0 Init             0  140    0               00 Start at 140
 140 Transaction      0    1    2 0             01 usesStmtJournal=1
 141 Transaction      1    1    2 0             01 usesStmtJournal=1
 142 String8          0    9    0 index         00 r[9]='index'
REG[9] =   t5[index](8)
 143 String8          0   10    0 pragma_compile_options 00 r[10]='pragma_compile_options'
REG[10] =   t22[pragma_compile_options](8)
 144 String8          0   11    0 sqliteX_%     00 r[11]='sqliteX_%'
REG[11] =   t9[sqliteX_%](8)
 145 String8          0   13    0 X             00 r[13]='X'
REG[13] =   t1[X](8)
 146 String8          0   15    0 main          00 r[15]='main'
REG[15] =   t4[main](8)
 147 String8          0   19    0 pragma_compile_options 00 r[19]='pragma_compile_options'
REG[19] =   t22[pragma_compile_options](8)
 148 String8          0   20    0 flubber       00 r[20]='flubber'
REG[20] =   t7[flubber](8)
 149 Integer          0   21    0               00 r[21]=0
REG[21] =  i:0
 150 String8          0   29    0 table         00 r[29]='table'
REG[29] =   t5[table](8)
 151 String8          0   30    0 trigger       00 r[30]='trigger'
REG[30] =   t7[trigger](8)
 152 String8          0   32    0 sqliteX_autoindex% 00 r[32]='sqliteX_autoindex%'
REG[32] =   t18[sqliteX_autoindex%](8)
 153 String8          0   34    0 X             00 r[34]='X'
REG[34] =   t1[X](8)
 154 String8          0   47    0 sqlite_autoindex_ 00 r[47]='sqlite_autoindex_'
REG[47] =   t17[sqlite_autoindex_](8)
 155 String8          0   83    0 flubber       00 r[83]='flubber'
REG[83] =   t7[flubber](8)
 156 Concat          83   47   35               00 r[35]=r[47]+r[83]
REG[83] =   t7[flubber](8)
REG[47] =   t17[sqlite_autoindex_](8)
REG[35] =   s24[sqlite_autoindex_flubber](8)
 157 Integer         22   83    0               00 r[83]=22
REG[83] =  i:22
 158 Integer         18   47    0               00 r[47]=18
REG[47] =  i:18
 159 Add             47   83   37               00 r[37]=r[47]+r[83]
REG[47] =  i:18
REG[83] =  i:22
REG[37] =  i:40
 160 String8          0   45    0 view          00 r[45]='view'
REG[45] =   t4[view](8)
 161 String8          0   48    0 main          00 r[48]='main'
REG[48] =   t4[main](8)
 162 Integer          1   52    0               00 r[52]=1
REG[52] =  i:1
 163 String8          0   53    0 main          00 r[53]='main'
REG[53] =   t4[main](8)
 164 String8          0   57    0 pragma_compile_options 00 r[57]='pragma_compile_options'
REG[57] =   t22[pragma_compile_options](8)
 165 String8          0   58    0 flubber       00 r[58]='flubber'
REG[58] =   t7[flubber](8)
 166 Integer          1   59    0               00 r[59]=1
REG[59] =  i:1
 167 String8          0   60    0 sqliteX_%     00 r[60]='sqliteX_%'
REG[60] =   t9[sqliteX_%](8)
 168 String8          0   62    0 X             00 r[62]='X'
REG[62] =   t1[X](8)
 169 String8          0   63    0 create virtual% 00 r[63]='create virtual%'
REG[63] =   t15[create virtual%](8)
 170 String8          0   65    0 main          00 r[65]='main'
REG[65] =   t4[main](8)
 171 Integer          0   69    0               00 r[69]=0
REG[69] =  i:0
 172 Null             0   70    0               00 r[70]=NULL
REG[70] =  NULL
 173 String8          0   72    0 sqliteX_%     00 r[72]='sqliteX_%'
REG[72] =   t9[sqliteX_%](8)
 174 String8          0   74    0 X             00 r[74]='X'
REG[74] =   t1[X](8)
 175 String8          0   75    0 create virtual% 00 r[75]='create virtual%'
REG[75] =   t15[create virtual%](8)
 176 String8          0   77    0 main          00 r[77]='main'
REG[77] =   t4[main](8)
 177 Integer          1   81    0               00 r[81]=1
REG[81] =  i:1
 178 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    1    0 3             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   15    0               00 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s4[view](8)
   6 Ne               9    9    8 (BINARY)      42 if r[8]!=r[9] goto 9
REG[9] =   t5[index](8)
REG[8] =   s4[view](8)
   9 Column           0    1   12               00 r[12]=sqlite_master.name
REG[12] =   s4[test](8)
  10 Function0        5   11    8 like(3)       03 r[8]=func(r[11..13])
REG[11] =   t9[sqliteX_%](8)
REG[12] =   s4[test](8)
REG[13] =   t1[X](8)
REG[8] =  i:0
  11 If               8   14    1               00 
REG[8] =  i:0
  12 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
  13 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
  14 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Ne               9    9    8 (BINARY)      42 if r[8]!=r[9] goto 9
REG[9] =   t5[index](8)
REG[8] =   s5[table](8)
   9 Column           0    1   12               00 r[12]=sqlite_master.name
REG[12] =   s2[t2](8)
  10 Function         5   11    8 like(3)       03 r[8]=func(r[11..13])
REG[11] =   t9[sqliteX_%](8)
REG[12] =   s2[t2](8)
REG[13] =   t1[X](8)
REG[8] =  i:0
  11 If               8   14    1               00 
REG[8] =  i:0
  12 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
  13 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:2
  14 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   6 Ne               9    9    8 (BINARY)      42 if r[8]!=r[9] goto 9
REG[9] =   t5[index](8)
REG[8] =   s5[index](8)
   7 Column           0    2    8               00 r[8]=sqlite_master.tbl_name
REG[8] =   s2[t2](8)
   8 Ne              10   14    8 (NOCASE)      52 if r[8]!=r[10] goto 14
REG[10] =   t22[pragma_compile_options](8)
REG[8] =   s2[t2](8)
  14 Next             0    5    0               01 
  15 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
  16 RowSetRead       1   29    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  17 NotExists        0   16    2               00 intkey=r[2]
REG[2] =  i:1
  18 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s4[view](8)
  19 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[test](8)
  20 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
REG[5] =   s4[test](8)
  21 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:0
  22 Column           0    0   16               00 r[16]=sqlite_master.type
REG[16] =   s4[view](8)
  23 Column           0    1   17               00 r[17]=sqlite_master.name
REG[17] =   s4[test](8)
  24 Column           0    4   18               00 r[18]=sqlite_master.sql
REG[18] =   s110[CREATE VIEW test AS SELEC](8)
  25 Function0      113   15    7 sqlite_rename_table(7) 07 r[7]=func(r[15..21])

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f1a35482859 in __GI_abort () at abort.c:79
#2  0x00007f1a35482729 in __assert_fail_base (fmt=0x7f1a35618588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x223ab6 "pPtr!=0", file=0x2291f4 "sqlite3.c", line=103985, function=<optimized out>) at assert.c:92
#3  0x00007f1a35493fd6 in __GI___assert_fail (assertion=0x223ab6 "pPtr!=0", file=0x2291f4 "sqlite3.c", line=103985, function=0x22a5c7 "void renameTokenFind(Parse *, struct RenameCtx *, void *)") at assert.c:101
#4  0x0000000000427519 in renameTokenFind (pParse=0x7ffe7c1b90f0, pCtx=0x7ffe7c1b92d8, pPtr=0x0) at sqlite3.c:103985
#5  0x0000000000427432 in renameTableSelectCb (pWalker=0x7ffe7c1b9290, pSelect=0x15f3cf0) at sqlite3.c:104607
#6  0x00000000003203a6 in sqlite3WalkSelect (pWalker=0x7ffe7c1b9290, p=0x15f3cf0) at sqlite3.c:95676
#7  0x00000000004255d0 in renameTableFunc (context=0x15bc4d0, NotUsed=7, argv=0x15bc500) at sqlite3.c:104685
#8  0x00000000003e9e49 in sqlite3VdbeExec (p=0x15d1b00) at sqlite3.c:91482
#9  0x000000000041ba74 in sqlite3Step (p=0x15d1b00) at sqlite3.c:82300
#10 0x0000000000293d5d in sqlite3_step (pStmt=0x15d1b00) at sqlite3.c:82365
#11 0x0000000000258a39 in main (argc=1, argv=0x7ffe7c1b9f98) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 56302] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
