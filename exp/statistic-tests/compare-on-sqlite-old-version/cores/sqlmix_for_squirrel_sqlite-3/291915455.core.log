GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000158,sig:06,src:021551+021299,time:2508468,execs:405407,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;CREATE TABLE tr1(newname,v2 view,v1);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    3 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:6
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  tx6[060000000000|......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  tx6[060000000000|......]
REG[1] =  i:5
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:5
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:5
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:5
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 tr1           00 r[7]='tr1'
REG[7] =   t3[tr1](8)
  20 String8          0    8    0 tr1           00 r[8]='tr1'
REG[8] =   t3[tr1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:6
  22 String8          0   10    0 CREATE TABLE tr1(newname,v2 view,v1) 00 r[10]='CREATE TABLE tr1(newname,v2 view,v1)'
REG[10] =   t36[CREATE TABLE tr1(newname,](8)
  23 MakeRecord       6    5    4 BBBDB         00 r[4]=mkrec(r[6..10])
REG[6] =   t5[table](8)
REG[7] =   t3[tr1](8)
REG[8] =   t3[tr1](8)
REG[9] =  i:6
REG[10] =   t36[CREATE TABLE tr1(newname,](8)
REG[4] =  sx54[0617131301557461626C657472317472310643524541544520|.....Utabletr1tr1.CREATE ]
  24 Insert           1    4    5               00 intkey=r[5] data=r[4]
REG[4] =  sx54[0617131301557461626C657472317472310643524541544520|.....Utabletr1tr1.CREATE ]
REG[5] =  i:5
  25 SetCookie        0    1    4               00 
  26 ParseSchema      0    0    0 tbl_name='tr1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    4 0             00 usesStmtJournal=0
  18 String8          0    2    0 tr1           00 r[2]='tr1'
REG[2] =   t3[tr1](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[test](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t3[tr1](8)
REG[1] =   s4[test](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[test](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t3[tr1](8)
REG[1] =   s4[test](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t3[tr1](8)
REG[1] =   s1[b](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t3[tr1](8)
REG[1] =   s2[t2](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t3[tr1](8)
REG[1] =   s3[tr1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s3[tr1](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s3[tr1](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:6
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s36[CREATE TABLE tr1(newname,](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s3[tr1](8)
REG[6] =   s3[tr1](8)
REG[7] =  i:6
REG[8] =   s36[CREATE TABLE tr1(newname,](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO test(t1,t1,t1) VALUES(1,2,2),('abc','def','def'),(4,5,6);]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    1    4 0             01 usesStmtJournal=1
  34 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  35 Goto             0    1    0               00 
   1 InitCoroutine    4   16    2               00 
  16 OpenWrite        0    2    0 2             00 root=2 iDb=0; test
  17 OpenWrite        1    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_test_1
  18 Yield            4   32    0               00 
REG[4] =  i:1
REG[4] =  i:18
   2 Explain          2    0    0 SCAN 3 CONSTANT ROWS 00 
   3 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
   4 Integer          2    6    0               00 r[6]=2
REG[6] =  i:2
   5 Integer          2    7    0               00 r[7]=2
REG[7] =  i:2
   6 Yield            4    0    0               00 
REG[4] =  i:18
REG[4] =  i:6
  19 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
  20 SCopy            5    2    0               00 r[2]=r[5]
REG[2] =  i:1
  21 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_test_1
  22 SCopy            2   12    0               00 r[12]=r[2]; t1
REG[12] =  i:1
  23 IntCopy          1   13    0               00 r[13]=r[1]; rowid
REG[13] =  i:1
  24 MakeRecord      12    2   11               00 r[11]=mkrec(r[12..13]); for sqlite_autoindex_test_1
REG[11] =  sx3[030909|...]
  25 Abortable        0    0    0               00 
  26 NoConflict       1   28   12 1             00 key=r[12]
REG[12] =  i:1
  28 MakeRecord       2    2   14               00 r[14]=mkrec(r[2..3])
REG[14] =  sx3[030900|...]
  29 IdxInsert        1   11   12 2             10 key=r[11]
REG[11] =  sx3[030909|...]
  30 Insert           0   14    1 test          39 intkey=r[1] data=r[14]
REG[14] =  sx3[030900|...]
REG[1] =  i:1
  31 Goto             0   18    0               00 
  18 Yield            4   32    0               00 
REG[4] =  i:6
REG[4] =  i:18
   7 String8          0    5    0 abc           00 r[5]='abc'
REG[5] =   t3[abc](8)
   8 String8          0    6    0 def           00 r[6]='def'
REG[6] =   t3[def](8)
   9 String8          0    7    0 def           00 r[7]='def'
REG[7] =   t3[def](8)
  10 Yield            4    0    0               00 
REG[4] =  i:18
REG[4] =  i:10
  19 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
  20 SCopy            5    2    0               00 r[2]=r[5]
REG[2] =   t3[abc](8)
  21 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_test_1
  22 SCopy            2   12    0               00 r[12]=r[2]; t1
REG[12] =   t3[abc](8)
  23 IntCopy          1   13    0               00 r[13]=r[1]; rowid
REG[13] =  i:2
  24 MakeRecord      12    2   11               00 r[11]=mkrec(r[12..13]); for sqlite_autoindex_test_1
REG[11] =  sx7[03130161626302|...abc.]
  25 Abortable        0    0    0               00 
  26 NoConflict       1   28   12 1             00 key=r[12]
REG[12] =   t3[abc](8)
  28 MakeRecord       2    2   14               00 r[14]=mkrec(r[2..3])
REG[14] =  sx6[031300616263|...abc]
  29 IdxInsert        1   11   12 2             10 key=r[11]
REG[11] =  sx7[03130161626302|...abc.]
  30 Insert           0   14    1 test          39 intkey=r[1] data=r[14]
REG[14] =  sx6[031300616263|...abc]
REG[1] =  i:2
  31 Goto             0   18    0               00 
  18 Yield            4   32    0               00 
REG[4] =  i:10
REG[4] =  i:18
  11 Integer          4    5    0               00 r[5]=4
REG[5] =  i:4
  12 Integer          5    6    0               00 r[6]=5
REG[6] =  i:5
  13 Integer          6    7    0               00 r[7]=6
REG[7] =  i:6
  14 Yield            4    0    0               00 
REG[4] =  i:18
REG[4] =  i:14
  19 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
  20 SCopy            5    2    0               00 r[2]=r[5]
REG[2] =  i:4
  21 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_test_1
  22 SCopy            2   12    0               00 r[12]=r[2]; t1
REG[12] =  i:4
  23 IntCopy          1   13    0               00 r[13]=r[1]; rowid
REG[13] =  i:3
  24 MakeRecord      12    2   11               00 r[11]=mkrec(r[12..13]); for sqlite_autoindex_test_1
REG[11] =  sx5[0301010403|.....]
  25 Abortable        0    0    0               00 
  26 NoConflict       1   28   12 1             00 key=r[12]
REG[12] =  i:4
  28 MakeRecord       2    2   14               00 r[14]=mkrec(r[2..3])
REG[14] =  sx4[03010004|....]
  29 IdxInsert        1   11   12 2             10 key=r[11]
REG[11] =  sx5[0301010403|.....]
  30 Insert           0   14    1 test          39 intkey=r[1] data=r[14]
REG[14] =  sx4[03010004|....]
REG[1] =  i:3
  31 Goto             0   18    0               00 
  18 Yield            4   32    0               00 
REG[4] =  i:14
REG[4] =  i:18
  15 EndCoroutine     4    0    0               00 
REG[4] =  i:18
  32 Halt             0    0    0               00 
SQL: [;
;DROP TABLE IF EXISTS t8;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    4 0             01 usesStmtJournal=0
   3 Transaction      1    0    0 0             01 usesStmtJournal=0
   4 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [;;DROP TABLE IF EXISTS t0;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    4 0             01 usesStmtJournal=0
   3 Transaction      1    0    0 0             01 usesStmtJournal=0
   4 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [;SELECT '2:', typeof(a), a FROM test WHERE a+0<10;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    4 0             01 usesStmtJournal=0
  15 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  16 Integer         10    4    0               00 r[4]=10
REG[4] =  i:10
  17 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; test
   2 Explain          2    0    0 SCAN TABLE test 00 
   3 Rewind           0   13    0               00 
   4 Column           0    1    2               00 r[2]=test.a
REG[2] =  NULL
   5 Add              3    2    1               00 r[1]=r[3]+r[2]
REG[3] =  i:0
REG[2] =  NULL
REG[1] =  NULL
   6 Ge               4   12    1               50 if r[1]>=r[4] goto 12
REG[4] =  i:10
REG[1] =  NULL
  12 Next             0    4    0               01 
   4 Column           0    1    2               00 r[2]=test.a
REG[2] =  NULL
   5 Add              3    2    1               00 r[1]=r[3]+r[2]
REG[3] =  i:0
REG[2] =  NULL
REG[1] =  NULL
   6 Ge               4   12    1               50 if r[1]>=r[4] goto 12
REG[4] =  i:10
REG[1] =  NULL
  12 Next             0    4    0               01 
   4 Column           0    1    2               00 r[2]=test.a
REG[2] =  NULL
   5 Add              3    2    1               00 r[1]=r[3]+r[2]
REG[3] =  i:0
REG[2] =  NULL
REG[1] =  NULL
   6 Ge               4   12    1               50 if r[1]>=r[4] goto 12
REG[4] =  i:10
REG[1] =  NULL
  12 Next             0    4    0               01 
  13 Halt             0    0    0               00 
SQL: [ VALUES(0, 0, 0, 0);]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   3 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   4 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
   5 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
   6 ResultRow        1    4    0               00 output=r[1..4]
REG[1] =  i:0
REG[2] =  i:0
REG[3] =  i:0
REG[4] =  i:0
   7 Halt             0    0    0               00 
SQL: [VALUES(1, 1, 1, 1);]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   5 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
   6 ResultRow        1    4    0               00 output=r[1..4]
REG[1] =  i:1
REG[2] =  i:1
REG[3] =  i:1
REG[4] =  i:1
   7 Halt             0    0    0               00 
SQL: [;CREATE INDEX dual ON tr1(1);]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    1    4 0             01 usesStmtJournal=1
  34 Goto             0    1    0               00 
   1 Noop             0   32    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:7
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:6
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 dual          00 r[4]='dual'
REG[4] =   t4[dual](8)
   7 String8          0    5    0 tr1           00 r[5]='tr1'
REG[5] =   t3[tr1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:7
   9 String8          0    7    0 CREATE INDEX dual ON tr1(1) 00 r[7]='CREATE INDEX dual ON tr1(1)'
REG[7] =   t27[CREATE INDEX dual ON tr1(](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[3] =   t5[index](8)
REG[4] =   t4[dual](8)
REG[5] =   t3[tr1](8)
REG[6] =  i:7
REG[7] =   t27[CREATE INDEX dual ON tr1(](8)
REG[8] =  sx46[061715130143696E6465786475616C74723107435245415445|.....Cindexdualtr1.CREATE]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  sx46[061715130143696E6465786475616C74723107435245415445|.....Cindexdualtr1.CREATE]
REG[2] =  i:6
  12 SorterOpen       3    0    1 k(2,,)        00 
  13 OpenRead         1    6    0 3             00 root=6 iDb=0; tr1
  14 Rewind           1   20    0               00 
  20 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  21 SorterSort       3   26    0               00 
  26 Close            1    0    0               00 
  27 Close            2    0    0               00 
  28 Close            3    0    0               00 
  29 SetCookie        0    1    5               00 
  30 ParseSchema      0    0    0 name='dual' AND type='index' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    5 0             00 usesStmtJournal=0
  18 String8          0    2    0 dual          00 r[2]='dual'
REG[2] =   t4[dual](8)
  19 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[test](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t4[dual](8)
REG[1] =   s4[test](8)
  15 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s23[sqlite_autoindex_test_1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t4[dual](8)
REG[1] =   s23[sqlite_autoindex_test_1](8)
  15 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[b](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t4[dual](8)
REG[1] =   s1[b](8)
  15 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t4[dual](8)
REG[1] =   s2[t2](8)
  15 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tr1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t4[dual](8)
REG[1] =   s3[tr1](8)
  15 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[dual](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t4[dual](8)
REG[1] =   s4[dual](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   15    1 (BINARY)      52 if r[1]!=r[3] goto 15
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[index](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s4[dual](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s3[tr1](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:7
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s27[CREATE INDEX dual ON tr1(](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[index](8)
REG[5] =   s4[dual](8)
REG[6] =   s3[tr1](8)
REG[7] =  i:7
REG[8] =   s27[CREATE INDEX dual ON tr1(](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  31 Expire           0    1    0               00 
  32 Halt             0    0    0               00 
SQL: [;;REPLACE INTO b(c,c) VALUES(1,3);]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    1    5 0             01 usesStmtJournal=0
  11 Integer       999999    5    0               00 r[5]=999999
REG[5] =  i:999999
  12 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 1             00 root=4 iDb=0; b
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 Lt               2    7    2 (BINARY)      52 if r[2]<r[2] goto 7

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fbf6784f859 in __GI_abort () at abort.c:79
#2  0x00007fbf6784f729 in __assert_fail_base (fmt=0x7fbf679e5588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21dc88 "pIn1!=pIn3", file=0x2291f4 "sqlite3.c", line=86002, function=<optimized out>) at assert.c:92
#3  0x00007fbf67860fd6 in __GI___assert_fail (assertion=0x21dc88 "pIn1!=pIn3", file=0x2291f4 "sqlite3.c", line=86002, function=0x216a86 "int sqlite3VdbeExec(Vdbe *)") at assert.c:101
#4  0x00000000003cf4ad in sqlite3VdbeExec (p=0x1b57f80) at sqlite3.c:86002
#5  0x000000000041ba74 in sqlite3Step (p=0x1b57f80) at sqlite3.c:82300
#6  0x0000000000293d5d in sqlite3_step (pStmt=0x1b57f80) at sqlite3.c:82365
#7  0x0000000000258a39 in main (argc=1, argv=0x7ffed5f308e8) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 51627] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
