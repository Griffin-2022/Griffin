GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000535,sig:06,src:024419+010612,time:26359145,execs:5184516,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;;CREATE INDEX a ON test (lower(t1));]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      0    1    1 0             01 usesStmtJournal=1
  35 Goto             0    1    0               00 
   1 Noop             0   33    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:3
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:2
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 a             00 r[4]='a'
REG[4] =   t1[a](8)
   7 String8          0    5    0 test          00 r[5]='test'
REG[5] =   t4[test](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:3
   9 String8          0    7    0 CREATE INDEX a ON test (lower(t1)) 00 r[7]='CREATE INDEX a ON test (lower(t1))'
REG[7] =   t34[CREATE INDEX a ON test (l](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[3] =   t5[index](8)
REG[4] =   t1[a](8)
REG[5] =   t4[test](8)
REG[6] =  i:3
REG[7] =   t34[CREATE INDEX a ON test (l](8)
REG[8] =  sx51[06170F150151696E6465786174657374034352454154452049|.....Qindexatest.CREATE I]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  sx51[06170F150151696E6465786174657374034352454154452049|.....Qindexatest.CREATE I]
REG[2] =  i:2
  12 SorterOpen       3    0    1 k(2,,)        00 
  13 OpenRead         1    2    0 1             00 root=2 iDb=0; test
  14 Rewind           1   21    0               00 
  15 Column           1    0   12               00 r[12]=test.t1
REG[12] =  i:3578824042033200656
  16 PureFunc0        0   12   10 lower(1)      01 
REG[12] =  i:3578824042033200656
REG[10] =   z19[3578824042033200656](8)
  17 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:1
  18 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  sx22[03330933353738383234303432303333323030363536|.3.3578824042033200656]
  19 SorterInsert     3    9    0               00 key=r[9]
REG[9] =  sx22[03330933353738383234303432303333323030363536|.3.3578824042033200656]
  20 Next             1   15    0               00 
  15 Column           1    0   12               00 r[12]=test.t1
REG[12] =  i:3029012920382354029
  16 PureFunc         0   12   10 lower(1)      01 
REG[12] =  i:3029012920382354029
REG[10] =   z19[3029012920382354029](8)
  17 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:2
  18 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  sx23[0333013330323930313239323033383233353430323902|.3.3029012920382354029.]
  19 SorterInsert     3    9    0               00 key=r[9]
REG[9] =  sx23[0333013330323930313239323033383233353430323902|.3.3029012920382354029.]
  20 Next             1   15    0               00 
  21 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  22 SorterSort       3   27    0               00 
  23 SorterData       3    9    2               00 r[9]=data
  24 SeekEnd          2    0    0               00 
  25 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  sx23[0333013330323930313239323033383233353430323902|.3.3029012920382354029.]
  26 SorterNext       3   23    0               00 
  23 SorterData       3    9    2               00 r[9]=data
  24 SeekEnd          2    0    0               00 
  25 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  sx22[03330933353738383234303432303333323030363536|.3.3578824042033200656]
  26 SorterNext       3   23    0               00 
  27 Close            1    0    0               00 
  28 Close            2    0    0               00 
  29 Close            3    0    0               00 
  30 SetCookie        0    1    2               00 
  31 ParseSchema      0    0    0 name='a' AND type='index' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    2 0             00 usesStmtJournal=0
  18 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  19 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[test](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[a](8)
REG[1] =   s4[test](8)
  15 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   15    1 (BINARY)      52 if r[1]!=r[3] goto 15
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[index](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[a](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s4[test](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:3
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s34[CREATE INDEX a ON test (l](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[index](8)
REG[5] =   s1[a](8)
REG[6] =   s4[test](8)
REG[7] =  i:3
REG[8] =   s34[CREATE INDEX a ON test (l](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  32 Expire           0    1    0               00 
  33 Halt             0    0    0               00 
SQL: [SELECT total(t1) OVER ( ORDER BY t1 RANGE BETWEEN 0.3 FOLLOWING AND 10 FOLLOWING ) FROM test ORDER BY t1
  
;]
VDBE Trace:
   0 Init             0  154    0               00 Start at 154
 154 Transaction      0    0    2 0             01 usesStmtJournal=0
 155 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenEphemeral    1    2    0               00 nColumn=2
   3 OpenDup          2    1    0               00 
   4 OpenDup          3    1    0               00 
   5 OpenDup          4    1    0               00 
   6 InitCoroutine    3   26    7               00 
  26 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  27 Explain         27    0    0 SCAN SUBQUERY 2 00 
  28 InitCoroutine    3    0    7               00 
  29 Yield            3  102    0               00 next row of 
REG[3] =  i:6
REG[3] =  i:29
   7 Explain          7    0    0 CO-ROUTINE 2  00 
   8 SorterOpen       6    4    0 k(1,B)        00 
   9 OpenRead         0    2    0 1             00 root=2 iDb=0; test
  10 Explain         10    7    0 SCAN TABLE test 00 
  11 Rewind           0   17    0               00 
  12 Column           0    0    5               00 r[5]=test.t1
REG[5] =  i:3578824042033200656
  13 Column           0    0    4               00 r[4]=test.t1
REG[4] =  i:3578824042033200656
  14 MakeRecord       4    2    7               00 r[7]=mkrec(r[4..5])
REG[7] =  sx19[03060631AA89813B043E1031AA89813B043E10|...1...;.>.1...;.>.]
  15 SorterInsert     6    7    4 2             00 key=r[7]
REG[7] =  sx19[03060631AA89813B043E1031AA89813B043E10|...1...;.>.1...;.>.]
  16 Next             0   12    0               01 
  12 Column           0    0    5               00 r[5]=test.t1
REG[5] =  i:3029012920382354029
  13 Column           0    0    4               00 r[4]=test.t1
REG[4] =  i:3029012920382354029
  14 MakeRecord       4    2    7               00 r[7]=mkrec(r[4..5])
REG[7] =  sx19[0306062A093733E375726D2A093733E375726D|...*.73.urm*.73.urm]
  15 SorterInsert     6    7    4 2             00 key=r[7]
REG[7] =  sx19[0306062A093733E375726D2A093733E375726D|...*.73.urm*.73.urm]
  16 Next             0   12    0               01 
  17 Explain         17    7    0 USE TEMP B-TREE FOR ORDER BY 00 
  18 OpenPseudo       7    8    4               00 4 columns in r[8]
  19 SorterSort       6   25    0               00 
  20 SorterData       6    8    7               00 r[8]=data
  21 Column           7    0    6               00 r[6]=
REG[6] =  i:3029012920382354029
  22 Column           7    1    5               00 r[5]=
REG[5] =  i:3029012920382354029
  23 Yield            3    0    0               00 
REG[3] =  i:29
REG[3] =  i:23
  30 Copy             5   11    0               00 r[11]=r[5]
REG[11] =  i:3029012920382354029
  31 Copy             6   12    0               00 r[12]=r[6]
REG[12] =  i:3029012920382354029
  32 MakeRecord      11    2   13               00 r[13]=mkrec(r[11..12])
REG[13] =  sx19[0306062A093733E375726D2A093733E375726D|...*.73.urm*.73.urm]
  33 NewRowid         2   14    0               00 r[14]=rowid
REG[14] =  i:1
  34 Insert           2   13   14               00 intkey=r[14] data=r[13]
REG[13] =  sx19[0306062A093733E375726D2A093733E375726D|...*.73.urm*.73.urm]
REG[14] =  i:1
  35 Ne               9   57   14               00 if r[14]!=r[9] goto 57
REG[9] =  i:1
REG[14] =  i:1
  36 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
  37 Real             0   15    0 0.3           00 r[15]=0.3
REG[15] =  r:0.29999999999999999
  38 Integer          0   22    0               00 r[22]=0
REG[22] =  i:0
  39 String8          0   23    0               00 r[23]=''
REG[23] =   t0[](8)
  40 Ge              23   42   15               53 if r[15]>=r[23] goto 42
REG[23] =   t0[](8)
REG[15] =  r:0.29999999999999999
  41 Ge              22   43   15               00 if r[15]>=r[22] goto 43
REG[22] =  i:0
REG[15] =  r:0.29999999999999999
  43 Integer         10   16    0               00 r[16]=10
REG[16] =  i:10
  44 Integer          0   22    0               00 r[22]=0
REG[22] =  i:0
  45 String8          0   24    0               00 r[24]=''
REG[24] =   t0[](8)
  46 Ge              24   48   16               53 if r[16]>=r[24] goto 48
REG[24] =   t0[](8)
REG[16] =  i:10
  47 Ge              22   49   16               00 if r[16]>=r[22] goto 49
REG[22] =  i:0
REG[16] =  i:10
  49 Rewind           3    1    0               00 
  50 Rewind           1    1    0               00 
  51 Rewind           4    1    0               00 
  52 Copy            11   17    0               00 r[17]=r[11]
REG[17] =  i:3029012920382354029
  53 Copy            17   18    0               00 r[18]=r[17]
REG[18] =  i:3029012920382354029
  54 Copy            17   19    0               00 r[19]=r[17]
REG[19] =  i:3029012920382354029
  55 Copy            17   20    0               00 r[20]=r[17]
REG[20] =  i:3029012920382354029
  56 Goto             0  101    0               00 
 101 Goto             0   29    0               00 
  29 Yield            3  102    0               00 next row of 
REG[3] =  i:23
REG[3] =  i:29
  24 SorterNext       6   20    0               00 
  20 SorterData       6    8    7               00 r[8]=data
  21 Column           7    0    6               00 r[6]=
REG[6] =  i:3578824042033200656
  22 Column           7    1    5               00 r[5]=
REG[5] =  i:3578824042033200656
  23 Yield            3    0    0               00 
REG[3] =  i:29
REG[3] =  i:23
  30 Copy             5   11    0               00 r[11]=r[5]
REG[11] =  i:3578824042033200656
  31 Copy             6   12    0               00 r[12]=r[6]
REG[12] =  i:3578824042033200656
  32 MakeRecord      11    2   13               00 r[13]=mkrec(r[11..12])
REG[13] =  sx19[03060631AA89813B043E1031AA89813B043E10|...1...;.>.1...;.>.]
  33 NewRowid         2   14    0               00 r[14]=rowid
REG[14] =  i:2
  34 Insert           2   13   14               00 intkey=r[14] data=r[13]
REG[13] =  sx19[03060631AA89813B043E1031AA89813B043E10|...1...;.>.1...;.>.]
REG[14] =  i:2
  35 Ne               9   57   14               00 if r[14]!=r[9] goto 57
REG[9] =  i:1
REG[14] =  i:2
  57 Compare         17   11    1 k(1,B)        00 r[17] <-> r[11]
REG[17] =  i:3029012920382354029
REG[11] =  i:3578824042033200656
  58 Jump            59  101   59               00 
  59 Copy            11   17    0               00 r[17]=r[11]
REG[17] =  i:3578824042033200656
  60 Column           4    1   21               00 r[21]=
REG[21] =  i:3029012920382354029
  61 AggStep          0   21    1 total(1)      01 accum=r[1] step(r[21])
REG[21] =  i:3029012920382354029
  62 Next             4   64    0               00 
  64 Column           4    0   22               00 r[22]=
REG[22] =  i:3578824042033200656
  65 Compare         20   22    1 k(1,B)        00 r[20] <-> r[22]
REG[20] =  i:3029012920382354029
REG[22] =  i:3578824042033200656
  66 Jump            67   60   67               00 
  67 Copy            22   20    0               00 r[20]=r[22]
REG[20] =  i:3578824042033200656
  68 Column           1    0   22               00 r[22]=
REG[22] =  i:3029012920382354029
  69 Column           4    0   25               00 r[25]=
REG[25] =  i:3578824042033200656
  70 String8          0   26    0               00 r[26]=''
REG[26] =   t0[](8)
  71 Ge              26   73   22               00 if r[22]>=r[26] goto 73
REG[26] =   t0[](8)
REG[22] =  i:3029012920382354029
  72 Add             16   22   22               00 r[22]=r[16]+r[22]
REG[16] =  i:10
REG[22] =  i:3029012920382354029
REG[22] =  i:3029012920382354039
  73 Ge              25  101   22               80 if r[22]>=r[25] goto 101
REG[25] =  i:3578824042033200656
REG[22] =  i:3029012920382354039
  74 Column           1    0   25               00 r[25]=
REG[25] =  i:3029012920382354029
  75 Column           3    0   22               00 r[22]=
REG[22] =  i:3029012920382354029
  76 String8          0   27    0               00 r[27]=''
REG[27] =   t0[](8)
  77 Ge              27   79   25               00 if r[25]>=r[27] goto 79
REG[27] =   t0[](8)
REG[25] =  i:3029012920382354029
  78 Add             15   25   25               00 r[25]=r[15]+r[25]
REG[15] =  r:0.29999999999999999
REG[25] =  i:3029012920382354029
REG[25] =  r:3.0290129203823539e+18
  79 Le              22   92   25               80 if r[25]<=r[22] goto 92
REG[22] =  i:3029012920382354029
REG[25] =  r:3.0290129203823539e+18
  92 AggValue         1    1    2 total(1)      00 r[2]=value N=1
  93 Gosub           10  149    0               00 
REG[10] =  i:93
 149 Noop             0    0    0               00 inner-loop subroutine
 150 Copy             2   29    0               00 r[29]=r[2]
REG[29] =  r:3.0290129203823539e+18
 151 ResultRow       29    1    0               00 output=r[29]
REG[29] =  r:3.0290129203823539e+18
 152 Return          10    0    0               00 end inner-loop subroutine
REG[10] =  i:93
  94 Next             1   96    0               00 
  96 Column           1    0   25               00 r[25]=
REG[25] =  i:3578824042033200656
  97 Compare         19   25    1 k(1,B)        00 r[19] <-> r[25]
REG[19] =  i:3029012920382354029
REG[25] =  i:3578824042033200656
  98 Jump            99   93   99               00 
  99 Copy            25   19    0               00 r[19]=r[25]
REG[19] =  i:3578824042033200656
 100 Goto             0   68    0               00 
  68 Column           1    0   22               00 r[22]=
REG[22] =  i:3578824042033200656
  69 Column           4    0   25               00 r[25]=
REG[25] =  i:3578824042033200656
  70 String           0   26    0               00 r[26]='' (len=0)
REG[26] =   t0[](8)
  71 Ge              26   73   22               00 if r[22]>=r[26] goto 73
REG[26] =   t0[](8)
REG[22] =  i:3578824042033200656
  72 Add             16   22   22               00 r[22]=r[16]+r[22]
REG[16] =  i:10
REG[22] =  i:3578824042033200656
REG[22] =  i:3578824042033200666
  73 Ge              25  101   22               80 if r[22]>=r[25] goto 101
REG[25] =  i:3578824042033200656
REG[22] =  i:3578824042033200666
 101 Goto             0   29    0               00 
  29 Yield            3  102    0               00 next row of 
REG[3] =  i:23
REG[3] =  i:29
  24 SorterNext       6   20    0               00 
  25 EndCoroutine     3    0    0               00 
REG[3] =  i:29
 102 Rewind           2  147    0               00 
 103 Column           4    1   21               00 r[21]=
REG[21] =  i:3578824042033200656
 104 AggStep          0   21    1 total(1)      01 accum=r[1] step(r[21])
REG[21] =  i:3578824042033200656
 105 Next             4  107    0               00 
 106 Goto             0  111    0               00 
 111 Column           1    0   25               00 r[25]=
REG[25] =  i:3578824042033200656
 112 Column           3    0   22               00 r[22]=
REG[22] =  i:3029012920382354029
 113 String8          0   28    0               00 r[28]=''
REG[28] =   t0[](8)
 114 Ge              28  116   25               00 if r[25]>=r[28] goto 116
REG[28] =   t0[](8)
REG[25] =  i:3578824042033200656
 115 Add             15   25   25               00 r[25]=r[15]+r[25]
REG[15] =  r:0.29999999999999999
REG[25] =  i:3578824042033200656
REG[25] =  r:3.5788240420332006e+18
 116 Le              22  129   25               80 if r[25]<=r[22] goto 129
REG[22] =  i:3029012920382354029
REG[25] =  r:3.5788240420332006e+18
 117 Rowid            3   22    0               00 r[22]=rowid
REG[22] =  i:1
 118 Rowid            4   25    0               00 r[25]=rowid
REG[25] =  NULL
 119 Ge              25  129   22               00 if r[22]>=r[25] goto 129
REG[25] =  NULL
REG[22] =  i:1
 120 Column           3    1   21               00 r[21]=
REG[21] =  i:3029012920382354029
 121 AggInverse       1   21    1 total(1)      01 accum=r[1] inverse(r[21])
REG[21] =  i:3029012920382354029
 122 Next             3  124    0               00 
 124 Column           3    0   25               00 r[25]=
REG[25] =  i:3578824042033200656
 125 Compare         18   25    1 k(1,B)        00 r[18] <-> r[25]
REG[18] =  i:3029012920382354029
REG[25] =  i:3578824042033200656
 126 Jump           127  117  127               00 
 127 Copy            25   18    0               00 r[18]=r[25]
REG[18] =  i:3578824042033200656
 128 Goto             0  111    0               00 
 111 Column           1    0   25               00 r[25]=
REG[25] =  i:3578824042033200656
 112 Column           3    0   22               00 r[22]=
REG[22] =  i:3578824042033200656
 113 String           0   28    0               00 r[28]='' (len=0)
REG[28] =   t0[](8)
 114 Ge              28  116   25               00 if r[25]>=r[28] goto 116
REG[28] =   t0[](8)
REG[25] =  i:3578824042033200656
 115 Add             15   25   25               00 r[25]=r[15]+r[25]
REG[15] =  r:0.29999999999999999
REG[25] =  i:3578824042033200656
REG[25] =  r:3.5788240420332006e+18
 116 Le              22  129   25               80 if r[25]<=r[22] goto 129
REG[22] =  i:3578824042033200656
REG[25] =  r:3.5788240420332006e+18
 129 AggValue         1    1    2 total(1)      00 r[2]=value N=1
 130 Gosub           10  149    0               00 
REG[10] =  i:130
 149 Noop             0    0    0               00 inner-loop subroutine
 150 Copy             2   29    0               00 r[29]=r[2]
REG[29] =  r:3.5788240420332006e+18
 151 ResultRow       29    1    0               00 output=r[29]
REG[29] =  r:3.5788240420332006e+18
 152 Return          10    0    0               00 end inner-loop subroutine
REG[10] =  i:130
 131 Next             1  133    0               00 
 132 Goto             0  147    0               00 
 147 ResetSorter      1    0    0               00 
 148 Goto             0  153    0               00 
 153 Halt             0    0    0               00 
SQL: [;CREATE VIEW b AS SELECT * FROM test;]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    2 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  tx6[060000000000|......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  tx6[060000000000|......]
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:3
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:3
  18 String8          0    6    0 view          00 r[6]='view'
REG[6] =   t4[view](8)
  19 String8          0    7    0 b             00 r[7]='b'
REG[7] =   t1[b](8)
  20 String8          0    8    0 b             00 r[8]='b'
REG[8] =   t1[b](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:0
  22 String8          0   10    0 CREATE VIEW b AS SELECT * FROM test 00 r[10]='CREATE VIEW b AS SELECT * FROM test'
REG[10] =   t35[CREATE VIEW b AS SELECT *](8)
  23 MakeRecord       6    5    4 BBBDB         00 r[4]=mkrec(r[6..10])
REG[6] =   t4[view](8)
REG[7] =   t1[b](8)
REG[8] =   t1[b](8)
REG[9] =  i:0
REG[10] =   t35[CREATE VIEW b AS SELECT *](8)
REG[4] =  sx47[06150F0F085376696577626243524541544520564945572062|.....SviewbbCREATE VIEW b]
  24 Insert           1    4    5               00 intkey=r[5] data=r[4]
REG[4] =  sx47[06150F0F085376696577626243524541544520564945572062|.....SviewbbCREATE VIEW b]
REG[5] =  i:3
  25 SetCookie        0    1    3               00 
  26 ParseSchema      0    0    0 tbl_name='b' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    3 0             00 usesStmtJournal=0
  18 String8          0    2    0 b             00 r[2]='b'
REG[2] =   t1[b](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[test](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[b](8)
REG[1] =   s4[test](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[test](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[b](8)
REG[1] =   s4[test](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[b](8)
REG[1] =   s1[b](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s4[view](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s4[view](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s4[view](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[b](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s1[b](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:0
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s35[CREATE VIEW b AS SELECT *](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s4[view](8)
REG[5] =   s1[b](8)
REG[6] =   s1[b](8)
REG[7] =  i:0
REG[8] =   s35[CREATE VIEW b AS SELECT *](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;CREATE TEMP TRIGGER c AFTER UPDATE OF t1, t1 ON test BEGIN
    UPDATE test SET t1=t1+1 WHERE new.t1<t1;
  END;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      1    1    0 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 OpenWrite        0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   4 String8          0    3    0 c             00 r[3]='c'
REG[3] =   t1[c](8)
   5 String8          0    4    0 test          00 r[4]='test'
REG[4] =   t4[test](8)
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 String8          0    6    0 CREATE TRIGGER c AFTER UPDATE OF t1, t1 ON test BEGIN
    UPDATE test SET t1=t1+1 WHERE new.t1<t1;
  END 00 r[6]='CREATE TRIGGER c AFTER UPDATE OF t1, t1 ON test BEGIN
    UPDATE test SET t1=t1+1 WHERE new.t
REG[6] =   t104[CREATE TRIGGER c AFTER UP](8)
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
REG[2] =   t7[trigger](8)
REG[3] =   t1[c](8)
REG[4] =   t4[test](8)
REG[5] =  i:0
REG[6] =   t104[CREATE TRIGGER c AFTER UP](8)
REG[7] =  sx124[071B0F1501815D747269676765726374657374004352454154|......]triggerctest.CREAT]
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
REG[7] =  sx124[071B0F1501815D747269676765726374657374004352454154|......]triggerctest.CREAT]
REG[1] =  i:1
  10 SetCookie        1    1    1               00 
  11 ParseSchema      1    0    0 type='trigger' AND name='c' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      1    0    1 0             00 usesStmtJournal=0
  18 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  19 String8          0    3    0 c             00 r[3]='c'
REG[3] =   t1[c](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_temp_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    1               00 r[1]=sqlite_temp_master.name
REG[1] =   s1[c](8)
   8 Ne               3   15    1 (BINARY)      52 if r[1]!=r[3] goto 15
REG[3] =   t1[c](8)
REG[1] =   s1[c](8)
   9 Column           0    0    4               00 r[4]=sqlite_temp_master.type
REG[4] =   s7[trigger](8)
  10 Column           0    1    5               00 r[5]=sqlite_temp_master.name
REG[5] =   s1[c](8)
  11 Column           0    2    6               00 r[6]=sqlite_temp_master.tbl_name
REG[6] =   s4[test](8)
  12 Column           0    3    7               00 r[7]=sqlite_temp_master.rootpage
REG[7] =  i:0
  13 Column           0    4    8               00 r[8]=sqlite_temp_master.sql
REG[8] =   s104[CREATE TRIGGER c AFTER UP](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s7[trigger](8)
REG[5] =   s1[c](8)
REG[6] =   s4[test](8)
REG[7] =  i:0
REG[8] =   s104[CREATE TRIGGER c AFTER UP](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [SELECT total(t1) OVER ( ORDER BY t1 RANGE BETWEEN 1.0 PRECEDING AND 2.0 PRECEDING ) FROM test ORDER BY t1
  
;]
VDBE Trace:
   0 Init             0  153    0               00 Start at 153
 153 Transaction      0    0    3 0             01 usesStmtJournal=0
 154 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenEphemeral    1    2    0               00 nColumn=2
   3 OpenDup          2    1    0               00 
   4 OpenDup          3    1    0               00 
   5 OpenDup          4    1    0               00 
   6 InitCoroutine    3   26    7               00 
  26 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  27 Explain         27    0    0 SCAN SUBQUERY 2 00 
  28 InitCoroutine    3    0    7               00 
  29 Yield            3  103    0               00 next row of 
REG[3] =  i:6
REG[3] =  i:29
   7 Explain          7    0    0 CO-ROUTINE 2  00 
   8 SorterOpen       6    4    0 k(1,B)        00 
   9 OpenRead         0    2    0 1             00 root=2 iDb=0; test
  10 Explain         10    7    0 SCAN TABLE test 00 
  11 Rewind           0   17    0               00 
  12 Column           0    0    5               00 r[5]=test.t1
REG[5] =  i:3578824042033200656
  13 Column           0    0    4               00 r[4]=test.t1
REG[4] =  i:3578824042033200656
  14 MakeRecord       4    2    7               00 r[7]=mkrec(r[4..5])
REG[7] =  sx19[03060631AA89813B043E1031AA89813B043E10|...1...;.>.1...;.>.]
  15 SorterInsert     6    7    4 2             00 key=r[7]
REG[7] =  sx19[03060631AA89813B043E1031AA89813B043E10|...1...;.>.1...;.>.]
  16 Next             0   12    0               01 
  12 Column           0    0    5               00 r[5]=test.t1
REG[5] =  i:3029012920382354029
  13 Column           0    0    4               00 r[4]=test.t1
REG[4] =  i:3029012920382354029
  14 MakeRecord       4    2    7               00 r[7]=mkrec(r[4..5])
REG[7] =  sx19[0306062A093733E375726D2A093733E375726D|...*.73.urm*.73.urm]
  15 SorterInsert     6    7    4 2             00 key=r[7]
REG[7] =  sx19[0306062A093733E375726D2A093733E375726D|...*.73.urm*.73.urm]
  16 Next             0   12    0               01 
  17 Explain         17    7    0 USE TEMP B-TREE FOR ORDER BY 00 
  18 OpenPseudo       7    8    4               00 4 columns in r[8]
  19 SorterSort       6   25    0               00 
  20 SorterData       6    8    7               00 r[8]=data
  21 Column           7    0    6               00 r[6]=
REG[6] =  i:3029012920382354029
  22 Column           7    1    5               00 r[5]=
REG[5] =  i:3029012920382354029
  23 Yield            3    0    0               00 
REG[3] =  i:29
REG[3] =  i:23
  30 Copy             5   11    0               00 r[11]=r[5]
REG[11] =  i:3029012920382354029
  31 Copy             6   12    0               00 r[12]=r[6]
REG[12] =  i:3029012920382354029
  32 MakeRecord      11    2   13               00 r[13]=mkrec(r[11..12])
REG[13] =  sx19[0306062A093733E375726D2A093733E375726D|...*.73.urm*.73.urm]
  33 NewRowid         2   14    0               00 r[14]=rowid
REG[14] =  i:1
  34 Insert           2   13   14               00 intkey=r[14] data=r[13]
REG[13] =  sx19[0306062A093733E375726D2A093733E375726D|...*.73.urm*.73.urm]
REG[14] =  i:1
  35 Ne               9   57   14               00 if r[14]!=r[9] goto 57
REG[9] =  i:1
REG[14] =  i:1
  36 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
  37 Real             0   15    0 1             00 r[15]=1
REG[15] =  r:1
  38 Integer          0   22    0               00 r[22]=0
REG[22] =  i:0
  39 String8          0   23    0               00 r[23]=''
REG[23] =   t0[](8)
  40 Ge              23   42   15               53 if r[15]>=r[23] goto 42
REG[23] =   t0[](8)
REG[15] =  r:1
  41 Ge              22   43   15               00 if r[15]>=r[22] goto 43
REG[22] =  i:0
REG[15] =  r:1
  43 Real             0   16    0 2             00 r[16]=2
REG[16] =  r:2
  44 Integer          0   22    0               00 r[22]=0
REG[22] =  i:0
  45 String8          0   24    0               00 r[24]=''
REG[24] =   t0[](8)
  46 Ge              24   48   16               53 if r[16]>=r[24] goto 48
REG[24] =   t0[](8)
REG[16] =  r:2
  47 Ge              22   49   16               00 if r[16]>=r[22] goto 49
REG[22] =  i:0
REG[16] =  r:2
  49 Rewind           3    1    0               00 
  50 Rewind           1    1    0               00 
  51 Rewind           4    1    0               00 
  52 Copy            11   17    0               00 r[17]=r[11]
REG[17] =  i:3029012920382354029
  53 Copy            17   18    0               00 r[18]=r[17]
REG[18] =  i:3029012920382354029
  54 Copy            17   19    0               00 r[19]=r[17]
REG[19] =  i:3029012920382354029
  55 Copy            17   20    0               00 r[20]=r[17]
REG[20] =  i:3029012920382354029
  56 Goto             0  102    0               00 
 102 Goto             0   29    0               00 
  29 Yield            3  103    0               00 next row of 
REG[3] =  i:23
REG[3] =  i:29
  24 SorterNext       6   20    0               00 
  20 SorterData       6    8    7               00 r[8]=data
  21 Column           7    0    6               00 r[6]=
REG[6] =  i:3578824042033200656
  22 Column           7    1    5               00 r[5]=
REG[5] =  i:3578824042033200656
  23 Yield            3    0    0               00 
REG[3] =  i:29
REG[3] =  i:23
  30 Copy             5   11    0               00 r[11]=r[5]
REG[11] =  i:3578824042033200656
  31 Copy             6   12    0               00 r[12]=r[6]
REG[12] =  i:3578824042033200656
  32 MakeRecord      11    2   13               00 r[13]=mkrec(r[11..12])
REG[13] =  sx19[03060631AA89813B043E1031AA89813B043E10|...1...;.>.1...;.>.]
  33 NewRowid         2   14    0               00 r[14]=rowid
REG[14] =  i:2
  34 Insert           2   13   14               00 intkey=r[14] data=r[13]
REG[13] =  sx19[03060631AA89813B043E1031AA89813B043E10|...1...;.>.1...;.>.]
REG[14] =  i:2
  35 Ne               9   57   14               00 if r[14]!=r[9] goto 57
REG[9] =  i:1
REG[14] =  i:2
  57 Compare         17   11    1 k(1,B)        00 r[17] <-> r[11]
REG[17] =  i:3029012920382354029
REG[11] =  i:3578824042033200656
  58 Jump            59  102   59               00 
  59 Copy            11   17    0               00 r[17]=r[11]
REG[17] =  i:3578824042033200656
  60 Column           4    0   22               00 r[22]=
REG[22] =  i:3029012920382354029
  61 Column           1    0   25               00 r[25]=
REG[25] =  i:3029012920382354029
  62 String8          0   26    0               00 r[26]=''
REG[26] =   t0[](8)
  63 Ge              26   65   22               00 if r[22]>=r[26] goto 65
REG[26] =   t0[](8)
REG[22] =  i:3029012920382354029
  64 Add             16   22   22               00 r[22]=r[16]+r[22]
REG[16] =  r:2
REG[22] =  i:3029012920382354029
REG[22] =  r:3.0290129203823539e+18
  65 Gt              25   75   22               80 if r[22]>r[25] goto 75
REG[25] =  i:3029012920382354029
REG[22] =  r:3.0290129203823539e+18
  66 Column           4    1   21               00 r[21]=
REG[21] =  i:3029012920382354029
  67 AggStep          0   21    1 total(1)      01 accum=r[1] step(r[21])
REG[21] =  i:3029012920382354029
  68 Next             4   70    0               00 
  70 Column           4    0   25               00 r[25]=
REG[25] =  i:3578824042033200656
  71 Compare         20   25    1 k(1,B)        00 r[20] <-> r[25]
REG[20] =  i:3029012920382354029
REG[25] =  i:3578824042033200656
  72 Jump            73   66   73               00 
  73 Copy            25   20    0               00 r[20]=r[25]
REG[20] =  i:3578824042033200656
  74 Goto             0   60    0               00 
  60 Column           4    0   22               00 r[22]=
REG[22] =  i:3578824042033200656
  61 Column           1    0   25               00 r[25]=
REG[25] =  i:3029012920382354029
  62 String           0   26    0               00 r[26]='' (len=0)
REG[26] =   t0[](8)
  63 Ge              26   65   22               00 if r[22]>=r[26] goto 65
REG[26] =   t0[](8)
REG[22] =  i:3578824042033200656
  64 Add             16   22   22               00 r[22]=r[16]+r[22]
REG[16] =  r:2
REG[22] =  i:3578824042033200656
REG[22] =  r:3.5788240420332006e+18
  65 Gt              25   75   22               80 if r[22]>r[25] goto 75
REG[25] =  i:3029012920382354029
REG[22] =  r:3.5788240420332006e+18
  75 Column           3    0   25               00 r[25]=
REG[25] =  i:3029012920382354029
  76 Column           1    0   22               00 r[22]=
REG[22] =  i:3029012920382354029
  77 String8          0   27    0               00 r[27]=''
REG[27] =   t0[](8)
  78 Ge              27   80   25               00 if r[25]>=r[27] goto 80
REG[27] =   t0[](8)
REG[25] =  i:3029012920382354029
  79 Add             15   25   25               00 r[25]=r[15]+r[25]
REG[15] =  r:1
REG[25] =  i:3029012920382354029
REG[25] =  r:3.0290129203823539e+18
  80 Ge              22   94   25               80 if r[25]>=r[22] goto 94
REG[22] =  i:3029012920382354029
REG[25] =  r:3.0290129203823539e+18
  81 Rowid            3   22    0               00 r[22]=rowid
REG[22] =  i:1
  82 Rowid            4   25    0               00 r[25]=rowid
REG[25] =  i:2
  83 Ge              25   94   22               00 if r[22]>=r[25] goto 94
REG[25] =  i:2
REG[22] =  i:1
  84 Column           3    1   21               00 r[21]=
REG[21] =  i:3029012920382354029
  85 AggInverse       1   21    1 total(1)      01 accum=r[1] inverse(r[21])
REG[21] =  i:3029012920382354029
  86 Delete           3    0    0               02 
  87 Next             3   89    0               00 
  89 Column           3    0   25               00 r[25]=
REG[25] =  i:3578824042033200656
  90 Compare         18   25    1 k(1,B)        00 r[18] <-> r[25]
REG[18] =  i:3029012920382354029
REG[25] =  i:3578824042033200656
  91 Jump            92   81   92               00 
  92 Copy            25   18    0               00 r[18]=r[25]
REG[18] =  i:3578824042033200656
  93 Goto             0   75    0               00 
  75 Column           3    0   25               00 r[25]=
REG[25] =  i:3578824042033200656
  76 Column           1    0   22               00 r[22]=
REG[22] =  NULL
  77 String           0   27    0               00 r[27]='' (len=0)
REG[27] =   t0[](8)
  78 Ge              27   80   25               00 if r[25]>=r[27] goto 80
REG[27] =   t0[](8)
REG[25] =  i:3578824042033200656
  79 Add             15   25   25               00 r[25]=r[15]+r[25]
REG[15] =  r:1
REG[25] =  i:3578824042033200656
REG[25] =  r:3.5788240420332006e+18
  80 Ge              22   94   25               80 if r[25]>=r[22] goto 94
REG[22] =  NULL
REG[25] =  r:3.5788240420332006e+18
  94 AggValue         1    1    2 total(1)      00 r[2]=value N=1
  95 Gosub           10  148    0               00 
REG[10] =  i:95
 148 Noop             0    0    0               00 inner-loop subroutine
 149 Copy             2   30    0               00 r[30]=r[2]
REG[30] =  r:0
 150 ResultRow       30    1    0               00 output=r[30]
REG[30] =  r:0
 151 Return          10    0    0               00 end inner-loop subroutine
REG[10] =  i:95
  96 Next             1   98    0               00 
  98 Column           1    0   25               00 r[25]=
REG[25] =  i:3578824042033200656
  99 Compare         19   25    1 k(1,B)        00 r[19] <-> r[25]
REG[19] =  i:3029012920382354029
REG[25] =  i:3578824042033200656
 100 Jump           101   95  101               00 
 101 Copy            25   19    0               00 r[19]=r[25]
REG[19] =  i:3578824042033200656
 102 Goto             0   29    0               00 
  29 Yield            3  103    0               00 next row of 
REG[3] =  i:23
REG[3] =  i:29
  24 SorterNext       6   20    0               00 
  25 EndCoroutine     3    0    0               00 
REG[3] =  i:29
 103 Rewind           2  146    0               00 
 104 Column           4    0   25               00 r[25]=
REG[25] =  i:3578824042033200656
 105 Column           1    0   22               00 r[22]=
REG[22] =  i:3578824042033200656
 106 String8          0   28    0               00 r[28]=''
REG[28] =   t0[](8)
 107 Ge              28  109   25               00 if r[25]>=r[28] goto 109
REG[28] =   t0[](8)
REG[25] =  i:3578824042033200656
 108 Add             16   25   25               00 r[25]=r[16]+r[25]
REG[16] =  r:2
REG[25] =  i:3578824042033200656
REG[25] =  r:3.5788240420332006e+18
 109 Gt              22  119   25               80 if r[25]>r[22] goto 119
REG[22] =  i:3578824042033200656
REG[25] =  r:3.5788240420332006e+18
 110 Column           4    1   21               00 r[21]=
REG[21] =  i:3578824042033200656
 111 AggStep          0   21    1 total(1)      01 accum=r[1] step(r[21])
REG[21] =  i:3578824042033200656
 112 Next             4  114    0               00 
 113 Goto             0  119    0               00 
 119 Column           3    0   22               00 r[22]=
REG[22] =  i:3578824042033200656
 120 Column           1    0   25               00 r[25]=
REG[25] =  i:3578824042033200656
 121 String8          0   29    0               00 r[29]=''
REG[29] =   t0[](8)
 122 Ge              29  124   22               00 if r[22]>=r[29] goto 124
REG[29] =   t0[](8)
REG[22] =  i:3578824042033200656
 123 Add             15   22   22               00 r[22]=r[15]+r[22]
REG[15] =  r:1
REG[22] =  i:3578824042033200656
REG[22] =  r:3.5788240420332006e+18
 124 Ge              25  138   22               80 if r[22]>=r[25] goto 138
REG[25] =  i:3578824042033200656
REG[22] =  r:3.5788240420332006e+18
 125 Rowid            3   25    0               00 r[25]=rowid
REG[25] =  i:2
 126 Rowid            4   22    0               00 r[22]=rowid
REG[22] =  NULL
 127 Ge              22  138   25               00 if r[25]>=r[22] goto 138
REG[22] =  NULL
REG[25] =  i:2
 128 Column           3    1   21               00 r[21]=
REG[21] =  i:3578824042033200656
 129 AggInverse       1   21    1 total(1)      01 accum=r[1] inverse(r[21])
REG[21] =  i:3578824042033200656
 130 Delete           3    0    0               02 
 131 Next             3  133    0               00 
 132 Goto             0  138    0               00 
 138 AggValue         1    1    2 total(1)      00 r[2]=value N=1
 139 Gosub           10  148    0               00 
REG[10] =  i:139
 148 Noop             0    0    0               00 inner-loop subroutine
 149 Copy             2   30    0               00 r[30]=r[2]
REG[30] =  r:0
 150 ResultRow       30    1    0               00 output=r[30]
REG[30] =  r:0
 151 Return          10    0    0               00 end inner-loop subroutine
REG[10] =  i:139
 140 Next             1  142    0               00 
 141 Goto             0  146    0               00 
 146 ResetSorter      1    0    0               00 
 147 Goto             0  152    0               00 
 152 Halt             0    0    0               00 
SQL: [PRAGMA incremental_vacuum;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    1    3 0             01 usesStmtJournal=0
   8 Goto             0    1    0               00 
   1 Integer       2147483647    1    0               00 r[1]=2147483647
REG[1] =  i:2147483647
   2 IncrVacuum       0    6    0               00 
   6 Halt             0    0    0               00 
SQL: [;
;SAVEPOINT "save1" 
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Savepoint        0    0    0 save1         00 
   2 Halt             0    0    0               00 
SQL: [;PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0   68   65               00 Start at 68
  68 Transaction      0    0    3 0             01 usesStmtJournal=0
  69 Transaction      1    0    1 0             01 usesStmtJournal=0
  70 Goto             0    1    0               00 
   1 Integer         99    1    0               00 r[1]=99
REG[1] =  i:99
   2 IntegrityCk      2    4    1 [0,2,3,1]     00 
   3 IsNull           2    9    0               00 if r[2]==NULL goto 9
REG[2] =  NULL
   9 OpenRead         1    2    0 1             00 root=2 iDb=0; test
  10 OpenRead         2    3    0 k(2,,)        00 root=3 iDb=0; a
  11 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  12 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  13 Rewind           1   31    0               00 
  14 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  15 Column           1    0    3               80 r[3]=
REG[3] =  i:3578824042033200656
  16 Column           1    0   12               00 r[12]=test.t1
REG[12] =  i:3578824042033200656
  17 PureFunc0        0   12   10 lower(1)      01 
REG[12] =  i:3578824042033200656
REG[10] =   z19[3578824042033200656](8)
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:1
  19 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  20 Found            2   30   10 2             00 key=r[10..11]
REG[10] =   z19[3578824042033200656](8)
REG[11] =  i:1
  30 Next             1   14    0               00 
  14 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
  15 Column           1    0    3               80 r[3]=
REG[3] =  i:3029012920382354029
  16 Column           1    0   12               00 r[12]=test.t1
REG[12] =  i:3029012920382354029
  17 PureFunc         0   12   10 lower(1)      01 
REG[12] =  i:3029012920382354029
REG[10] =   z19[3029012920382354029](8)
  18 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:2
  19 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:1
  20 Found            2   30   10 2             00 key=r[10..11]
REG[10] =   z19[3029012920382354029](8)
REG[11] =  i:2
  30 Next             1   14    0               00 
  31 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
  32 Count            2    3    0               00 r[3]=count()
REG[3] =  i:2
  33 Eq               8   39    3               90 if r[3]==r[8] goto 39
REG[8] =  i:2
REG[3] =  i:2
  39 OpenRead         1    1    0 5             00 root=1 iDb=0; sqlite_master
  40 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  41 Rewind           1   45    0               00 
  42 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  43 Column           1    4    3               80 r[3]=
REG[3] =   s29[CREATE TABLE test(t1 INTE](8)
  44 Next             1   42    0               00 
  42 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
  43 Column           1    4    3               80 r[3]=
REG[3] =   s34[CREATE INDEX a ON test (l](8)
  44 Next             1   42    0               00 
  42 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:2
  43 Column           1    4    3               80 r[3]=
REG[3] =   s35[CREATE VIEW b AS SELECT *](8)
  44 Next             1   42    0               00 
  45 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
  46 IntegrityCk      2    1    1 [1]           01 
  47 IsNull           2   53    0               00 if r[2]==NULL goto 53
REG[2] =  NULL
  53 OpenRead         1    1    1 5             00 root=1 iDb=1; sqlite_temp_master
  54 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  55 Rewind           1   59    0               00 
  56 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  57 Column           1    4    3               80 r[3]=
REG[3] =   s104[CREATE TRIGGER c AFTER UP](8)
  58 Next             1   56    0               00 
  59 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
  60 AddImm           1  -99    0               00 r[1]=r[1]+-99
REG[1] =  i:99
  61 IfNotZero        1   64    0               00 if r[1]!=0 then r[1]--, goto 64
REG[1] =  i:0
  62 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
  63 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
  64 Halt             0    0    0               00 
SQL: [CREATE TABLE t2(x INTEGER);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    3 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  tx6[060000000000|......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  tx6[060000000000|......]
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:4
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:4
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t2            00 r[7]='t2'
REG[7] =   t2[t2](8)
  20 String8          0    8    0 t2            00 r[8]='t2'
REG[8] =   t2[t2](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  22 String8          0   10    0 CREATE TABLE t2(x INTEGER) 00 r[10]='CREATE TABLE t2(x INTEGER)'
REG[10] =   t26[CREATE TABLE t2(x INTEGER](8)
  23 MakeRecord       6    5    4 BBBDB         00 r[4]=mkrec(r[6..10])
REG[6] =   t5[table](8)
REG[7] =   t2[t2](8)
REG[8] =   t2[t2](8)
REG[9] =  i:4
REG[10] =   t26[CREATE TABLE t2(x INTEGER](8)
REG[4] =  sx42[0617111101417461626C657432743204435245415445205441|.....Atablet2t2.CREATE TA]
  24 Insert           1    4    5               00 intkey=r[5] data=r[4]
REG[4] =  sx42[0617111101417461626C657432743204435245415445205441|.....Atablet2t2.CREATE TA]
REG[5] =  i:4
  25 SetCookie        0    1    4               00 
  26 ParseSchema      0    0    0 tbl_name='t2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    4 0             00 usesStmtJournal=0
  18 String8          0    2    0 t2            00 r[2]='t2'
REG[2] =   t2[t2](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[test](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t2](8)
REG[1] =   s4[test](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[test](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t2](8)
REG[1] =   s4[test](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t2](8)
REG[1] =   s1[b](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t2](8)
REG[1] =   s2[t2](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t2](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s2[t2](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:4
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s26[CREATE TABLE t2(x INTEGER](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s2[t2](8)
REG[6] =   s2[t2](8)
REG[7] =  i:4
REG[8] =   s26[CREATE TABLE t2(x INTEGER](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [ROLLBACK
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    1    0               00 
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    1 1             00 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s4[test](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s4[test](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:2
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s29[CREATE TABLE test(t1 INTE](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s4[test](8)
REG[3] =   s4[test](8)
REG[4] =  i:2
REG[5] =   s29[CREATE TABLE test(t1 INTE](8)
  11 Next             0    5    0               01 
  12 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      1    0    0 1             00 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   12    0               00 
  12 Halt             0    0    0               00 
SQL: [SELECT total(t1) OVER ( ORDER BY t1 NULLS LAST RANGE BETWEEN 0.3 PRECEDING AND 10 FOLLOWING ) FROM test ORDER BY t1
  
;]
VDBE Trace:
   0 Init             0  166    0               00 Start at 166
 166 Transaction      0    0    1 1             01 usesStmtJournal=0
 167 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenEphemeral    1    3    0               00 nColumn=3
   3 OpenDup          2    1    0               00 
   4 OpenDup          3    1    0               00 
   5 OpenDup          4    1    0               00 
   6 InitCoroutine    3   28    7               00 
  28 SorterOpen       8    3    0 k(1,B)        00 
  29 Integer          1   10    0               00 r[10]=1
REG[10] =  i:1
  30 Explain         30    0    0 SCAN SUBQUERY 2 00 
  31 InitCoroutine    3    0    7               00 
  32 Yield            3  112    0               00 next row of 
REG[3] =  i:6
REG[3] =  i:32
   7 Explain          7    0    0 CO-ROUTINE 2  00 
   8 SorterOpen       6    5    0 k(1,N.B)      00 
   9 OpenRead         0    2    0 1             00 root=2 iDb=0; test
  10 Explain         10    7    0 SCAN TABLE test 00 
  11 Rewind           0   18    0               00 
  12 Column           0    0    5               00 r[5]=test.t1
REG[5] =  i:3578824042033200656
  13 Column           0    0    6               00 r[6]=test.t1
REG[6] =  i:3578824042033200656
  14 Column           0    0    4               00 r[4]=test.t1
REG[4] =  i:3578824042033200656
  15 MakeRecord       4    3    8               00 r[8]=mkrec(r[4..6])
REG[8] =  sx28[0406060631AA89813B043E1031AA89813B043E1031AA89813B|....1...;.>.1...;.>.1...;]
  16 SorterInsert     6    8    4 3             00 key=r[8]
REG[8] =  sx28[0406060631AA89813B043E1031AA89813B043E1031AA89813B|....1...;.>.1...;.>.1...;]
  17 Next             0   12    0               01 
  12 Column           0    0    5               00 r[5]=test.t1
REG[5] =  i:3029012920382354029
  13 Column           0    0    6               00 r[6]=test.t1
REG[6] =  i:3029012920382354029
  14 Column           0    0    4               00 r[4]=test.t1
REG[4] =  i:3029012920382354029
  15 MakeRecord       4    3    8               00 r[8]=mkrec(r[4..6])
REG[8] =  sx28[040606062A093733E375726D2A093733E375726D2A093733E3|....*.73.urm*.73.urm*.73.]
  16 SorterInsert     6    8    4 3             00 key=r[8]
REG[8] =  sx28[040606062A093733E375726D2A093733E375726D2A093733E3|....*.73.urm*.73.urm*.73.]
  17 Next             0   12    0               01 
  18 Explain         18    7    0 USE TEMP B-TREE FOR ORDER BY 00 
  19 OpenPseudo       7    9    5               00 5 columns in r[9]
  20 SorterSort       6   27    0               00 
  21 SorterData       6    9    7               00 r[9]=data
  22 Column           7    0    7               00 r[7]=
REG[7] =  i:3029012920382354029
  23 Column           7    2    6               00 r[6]=
REG[6] =  i:3029012920382354029
  24 Column           7    1    5               00 r[5]=
REG[5] =  i:3029012920382354029
  25 Yield            3    0    0               00 
REG[3] =  i:32
REG[3] =  i:25
  33 Copy             5   12    0               00 r[12]=r[5]
REG[12] =  i:3029012920382354029
  34 Copy             6   13    0               00 r[13]=r[6]
REG[13] =  i:3029012920382354029
  35 Copy             7   14    0               00 r[14]=r[7]
REG[14] =  i:3029012920382354029
  36 MakeRecord      12    3   15               00 r[15]=mkrec(r[12..14])
REG[15] =  sx28[040606062A093733E375726D2A093733E375726D2A093733E3|....*.73.urm*.73.urm*.73.]
  37 NewRowid         2   16    0               00 r[16]=rowid
REG[16] =  i:1
  38 Insert           2   15   16               00 intkey=r[16] data=r[15]
REG[15] =  sx28[040606062A093733E375726D2A093733E375726D2A093733E3|....*.73.urm*.73.urm*.73.]
REG[16] =  i:1
  39 Ne              10   61   16               00 if r[16]!=r[10] goto 61
REG[10] =  i:1
REG[16] =  i:1
  40 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
  41 Real             0   17    0 0.3           00 r[17]=0.3
REG[17] =  r:0.29999999999999999
  42 Integer          0   24    0               00 r[24]=0
REG[24] =  i:0
  43 String8          0   25    0               00 r[25]=''
REG[25] =   t0[](8)
  44 Ge              25   46   17               53 if r[17]>=r[25] goto 46
REG[25] =   t0[](8)
REG[17] =  r:0.29999999999999999
  45 Ge              24   47   17               00 if r[17]>=r[24] goto 47
REG[24] =  i:0
REG[17] =  r:0.29999999999999999
  47 Integer         10   18    0               00 r[18]=10
REG[18] =  i:10
  48 Integer          0   24    0               00 r[24]=0
REG[24] =  i:0
  49 String8          0   26    0               00 r[26]=''
REG[26] =   t0[](8)
  50 Ge              26   52   18               53 if r[18]>=r[26] goto 52
REG[26] =   t0[](8)
REG[18] =  i:10
  51 Ge              24   53   18               00 if r[18]>=r[24] goto 53
REG[24] =  i:0
REG[18] =  i:10
  53 Rewind           3    1    0               00 
  54 Rewind           1    1    0               00 
  55 Rewind           4    1    0               00 
  56 Copy            13   19    0               00 r[19]=r[13]
REG[19] =  i:3029012920382354029
  57 Copy            19   20    0               00 r[20]=r[19]
REG[20] =  i:3029012920382354029
  58 Copy            19   21    0               00 r[21]=r[19]
REG[21] =  i:3029012920382354029
  59 Copy            19   22    0               00 r[22]=r[19]
REG[22] =  i:3029012920382354029
  60 Goto             0  111    0               00 
 111 Goto             0   32    0               00 
  32 Yield            3  112    0               00 next row of 
REG[3] =  i:25
REG[3] =  i:32
  26 SorterNext       6   21    0               00 
  21 SorterData       6    9    7               00 r[9]=data
  22 Column           7    0    7               00 r[7]=
REG[7] =  i:3578824042033200656
  23 Column           7    2    6               00 r[6]=
REG[6] =  i:3578824042033200656
  24 Column           7    1    5               00 r[5]=
REG[5] =  i:3578824042033200656
  25 Yield            3    0    0               00 
REG[3] =  i:32
REG[3] =  i:25
  33 Copy             5   12    0               00 r[12]=r[5]
REG[12] =  i:3578824042033200656
  34 Copy             6   13    0               00 r[13]=r[6]
REG[13] =  i:3578824042033200656
  35 Copy             7   14    0               00 r[14]=r[7]
REG[14] =  i:3578824042033200656
  36 MakeRecord      12    3   15               00 r[15]=mkrec(r[12..14])
REG[15] =  sx28[0406060631AA89813B043E1031AA89813B043E1031AA89813B|....1...;.>.1...;.>.1...;]
  37 NewRowid         2   16    0               00 r[16]=rowid
REG[16] =  i:2
  38 Insert           2   15   16               00 intkey=r[16] data=r[15]
REG[15] =  sx28[0406060631AA89813B043E1031AA89813B043E1031AA89813B|....1...;.>.1...;.>.1...;]
REG[16] =  i:2
  39 Ne              10   61   16               00 if r[16]!=r[10] goto 61
REG[10] =  i:1
REG[16] =  i:2
  61 Compare         19   13    1 k(1,N.B)      00 r[19] <-> r[13]
REG[19] =  i:3029012920382354029
REG[13] =  i:3578824042033200656
  62 Jump            63  111   63               00 
  63 Copy            13   19    0               00 r[19]=r[13]
REG[19] =  i:3578824042033200656
  64 Column           4    2   23               00 r[23]=
REG[23] =  i:3029012920382354029
  65 AggStep          0   23    1 total(1)      01 accum=r[1] step(r[23])
REG[23] =  i:3029012920382354029
  66 Next             4   68    0               00 
  68 Column           4    1   24               00 r[24]=
REG[24] =  i:3578824042033200656
  69 Compare         22   24    1 k(1,N.B)      00 r[22] <-> r[24]
REG[22] =  i:3029012920382354029
REG[24] =  i:3578824042033200656
  70 Jump            71   64   71               00 
  71 Copy            24   22    0               00 r[22]=r[24]
REG[22] =  i:3578824042033200656
  72 Column           1    1   24               00 r[24]=
REG[24] =  i:3029012920382354029
  73 Column           4    1   27               00 r[27]=
REG[27] =  i:3578824042033200656
  74 String8          0   28    0               00 r[28]=''
REG[28] =   t0[](8)
  75 Ge              28   77   24               00 if r[24]>=r[28] goto 77
REG[28] =   t0[](8)
REG[24] =  i:3029012920382354029
  76 Add             18   24   24               00 r[24]=r[18]+r[24]
REG[18] =  i:10
REG[24] =  i:3029012920382354029
REG[24] =  i:3029012920382354039
  77 NotNull         24   80    0               00 if r[24]!=NULL goto 80
REG[24] =  i:3029012920382354039
  80 IsNull          27   82    0               00 if r[27]==NULL goto 82
REG[27] =  i:3578824042033200656
  81 Ge              27  111   24               80 if r[24]>=r[27] goto 111
REG[27] =  i:3578824042033200656
REG[24] =  i:3029012920382354039
  82 AggValue         1    1    2 total(1)      00 r[2]=value N=1
  83 Gosub           11  152    0               00 
REG[11] =  i:83
 152 Noop             0    0    0               00 inner-loop subroutine
 153 Copy             2   32    0               00 r[32]=r[2]
REG[32] =  r:3.0290129203823539e+18
 154 Column           1    0   31               00 r[31]=.t1
REG[31] =  i:3029012920382354029
 155 MakeRecord      31    2   33               00 r[33]=mkrec(r[31..32])
REG[33] =  sx19[0306072A093733E375726D43C5049B99F1BAB9|...*.73.urmC.......]
 156 SorterInsert     8   33   31 2             00 key=r[33]
REG[33] =  sx19[0306072A093733E375726D43C5049B99F1BAB9|...*.73.urmC.......]
 157 Return          11    0    0               00 end inner-loop subroutine
REG[11] =  i:83
  84 Next             1   86    0               00 
  86 Column           1    1   27               00 r[27]=
REG[27] =  i:3578824042033200656
  87 Compare         21   27    1 k(1,N.B)      00 r[21] <-> r[27]
REG[21] =  i:3029012920382354029
REG[27] =  i:3578824042033200656
  88 Jump            89   83   89               00 
  89 Copy            27   21    0               00 r[21]=r[27]
REG[21] =  i:3578824042033200656
  90 Column           3    1   27               00 r[27]=
REG[27] =  i:3029012920382354029
  91 Column           1    1   24               00 r[24]=
REG[24] =  i:3578824042033200656
  92 String8          0   29    0               00 r[29]=''
REG[29] =   t0[](8)
  93 Ge              29   95   27               00 if r[27]>=r[29] goto 95
REG[29] =   t0[](8)
REG[27] =  i:3029012920382354029
  94 Add             17   27   27               00 r[27]=r[17]+r[27]
REG[17] =  r:0.29999999999999999
REG[27] =  i:3029012920382354029
REG[27] =  r:3.0290129203823539e+18
  95 NotNull         27   98    0               00 if r[27]!=NULL goto 98
REG[27] =  r:3.0290129203823539e+18
  98 IsNull          24  100    0               00 if r[24]==NULL goto 100
REG[24] =  i:3578824042033200656
  99 Ge              24  110   27               80 if r[27]>=r[24] goto 110
REG[24] =  i:3578824042033200656
REG[27] =  r:3.0290129203823539e+18
 100 Column           3    2   23               00 r[23]=
REG[23] =  i:3029012920382354029
 101 AggInverse       1   23    1 total(1)      01 accum=r[1] inverse(r[23])
REG[23] =  i:3029012920382354029
 102 Delete           3    0    0               02 
 103 Next             3  105    0               00 
 105 Column           3    1   24               00 r[24]=
REG[24] =  i:3578824042033200656
 106 Compare         20   24    1 k(1,N.B)      00 r[20] <-> r[24]
REG[20] =  i:3029012920382354029
REG[24] =  i:3578824042033200656
 107 Jump           108  100  108               00 
 108 Copy            24   20    0               00 r[20]=r[24]
REG[20] =  i:3578824042033200656
 109 Goto             0   90    0               00 
  90 Column           3    1   27               00 r[27]=
REG[27] =  i:3578824042033200656
  91 Column           1    1   24               00 r[24]=
REG[24] =  i:3578824042033200656
  92 String           0   29    0               00 r[29]='' (len=0)
REG[29] =   t0[](8)
  93 Ge              29   95   27               00 if r[27]>=r[29] goto 95
REG[29] =   t0[](8)
REG[27] =  i:3578824042033200656
  94 Add             17   27   27               00 r[27]=r[17]+r[27]
REG[17] =  r:0.29999999999999999
REG[27] =  i:3578824042033200656
REG[27] =  r:3.5788240420332006e+18
  95 NotNull         27   98    0               00 if r[27]!=NULL goto 98
REG[27] =  r:3.5788240420332006e+18
  98 IsNull          24  100    0               00 if r[24]==NULL goto 100
REG[24] =  i:3578824042033200656
  99 Ge              24  110   27               80 if r[27]>=r[24] goto 110
REG[24] =  i:3578824042033200656
REG[27] =  r:3.5788240420332006e+18
 100 Column           3    2   23               00 r[23]=
REG[23] =  i:3578824042033200656
 101 AggStep1         1   23    1 total(1)      01 accum=r[1] step(r[23])

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f9e305d2859 in __GI_abort () at abort.c:79
#2  0x00007f9e305d2729 in __assert_fail_base (fmt=0x7f9e30768588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21b464 "p->cnt>0", file=0x2291f4 "sqlite3.c", line=115487, function=<optimized out>) at assert.c:92
#3  0x00007f9e305e3fd6 in __GI___assert_fail (assertion=0x21b464 "p->cnt>0", file=0x2291f4 "sqlite3.c", line=115487, function=0x227efa "void sumInverse(sqlite3_context *, int, sqlite3_value **)") at assert.c:101
#4  0x000000000027d795 in sumInverse (context=0x10faa00, argc=1, argv=0x10faa30) at sqlite3.c:115487
#5  0x00000000003e5c26 in sqlite3VdbeExec (p=0x110a270) at sqlite3.c:90625
#6  0x000000000041ba74 in sqlite3Step (p=0x110a270) at sqlite3.c:82300
#7  0x0000000000293d5d in sqlite3_step (pStmt=0x110a270) at sqlite3.c:82365
#8  0x0000000000258a39 in main (argc=1, argv=0x7ffd0ea50c68) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 55606] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
