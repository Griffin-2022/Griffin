GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000625,sig:06,src:024406+020238,time:40711352,execs:7967767,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [UPDATE test SET c=c*3
;]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    1    2 0             01 usesStmtJournal=0
  25 Integer          3   17    0               00 r[17]=3
REG[17] =  i:3
  26 Goto             0    1    0               00 
   1 Null             0   12   14               00 r[12..14]=NULL
REG[12] =  NULL
   2 Noop             2    3    0               00 
   3 OpenWrite        1    2    0 k(3,,,)       00 root=2 iDb=0; sqlite_autoindex_test_1
   4 Explain          4    0    0 SCAN TABLE test 00 
   5 Rewind           1   23   16 0             00 
  23 Halt             0    0    0               00 
SQL: [BEGIN
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
SQL: [;INSERT INTO test(c,c) VALUES(8,88);]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      0    1    2 0             01 usesStmtJournal=0
  19 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  20 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  21 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  22 Goto             0    1    0               00 
   1 OpenWrite        1    2    0 k(3,,,)       00 root=2 iDb=0; sqlite_autoindex_test_1
   2 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   3 Integer          8    5    0               00 r[5]=8
REG[5] =  i:8
   4 HaltIfNull    1299    2    2 test.t1       01 if r[2]=null halt
REG[2] =  NULL
SQL: [;UPDATE test SET t1=4, t1=11 WHERE t1==2
  
;]
VDBE Trace:
   0 Init             0   44    0               00 Start at 44
  44 Transaction      0    1    2 0             01 usesStmtJournal=1
  45 Goto             0    1    0               00 
   1 Null             0   17   19               00 r[17..19]=NULL
REG[17] =  NULL
   2 OpenEphemeral    2    3    0 k(3,,,)       00 nColumn=3
   3 OpenRead         3    2    0 k(3,,,)       02 root=2 iDb=0; sqlite_autoindex_test_1
   4 Explain          4    0    0 SEARCH TABLE test USING PRIMARY KEY (t1=?) 00 
   5 Integer          2   21    0               00 r[21]=2
REG[21] =  i:2
   6 SeekGE           3   14   21 1             00 key=r[21]
REG[21] =  i:2
  14 OpenWrite        1    2    0 k(3,,,)       00 root=2 iDb=0; sqlite_autoindex_test_1
  15 Rewind           2   43    0               00 
  43 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM test ORDER BY a,a
;]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    0    2 0             01 usesStmtJournal=0
  25 Goto             0    1    0               00 
   1 SorterOpen       1    7    0 k(2,B,B)      00 
   2 OpenRead         2    2    0 k(3,,,)       00 root=2 iDb=0; sqlite_autoindex_test_1
   3 Explain          3    0    0 SCAN TABLE test 00 
   4 Rewind           2   13    1 0             00 
  13 Explain         13    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  14 OpenPseudo       3    8    7               00 7 columns in r[8]
  15 SorterSort       1   23    0               00 
  23 Halt             0    0    0               00 
SQL: [UPDATE test SET c=c+1 WHERE c==8
;]
VDBE Trace:
   0 Init             0   26    0               00 Start at 26
  26 Transaction      0    1    2 0             01 usesStmtJournal=0
  27 Integer          8   17    0               00 r[17]=8
REG[17] =  i:8
  28 Integer          1   18    0               00 r[18]=1
REG[18] =  i:1
  29 Goto             0    1    0               00 
   1 Null             0   12   14               00 r[12..14]=NULL
REG[12] =  NULL
   2 Noop             2    3    0               00 
   3 OpenWrite        1    2    0 k(3,,,)       00 root=2 iDb=0; sqlite_autoindex_test_1
   4 Explain          4    0    0 SCAN TABLE test 00 
   5 Rewind           1   25   16 0             00 
  25 Halt             0    0    0               00 
SQL: [;;CREATE INDEX col1 ON test(b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b);]
VDBE Trace:
   0 Init             0  152    0               00 Start at 152
 152 Transaction      0    1    2 0             01 usesStmtJournal=1
 153 Goto             0    1    0               00 
   1 Noop             0  151    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:4
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:3
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 col1          00 r[4]='col1'
REG[4] =   t4[col1](8)
   7 String8          0    5    0 test          00 r[5]='test'
REG[5] =   t4[test](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:4
   9 String8          0    7    0 CREATE INDEX col1 ON test(b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b) 00 r[7]='CREATE INDEX col1 ON test(b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b,b
REG[7] =   t264[CREATE INDEX col1 ON test](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[3] =   t5[index](8)
REG[4] =   t4[col1](8)
REG[5] =   t4[test](8)
REG[6] =  i:4
REG[7] =   t264[CREATE INDEX col1 ON test](8)
REG[8] =  sx285[0717151501841D696E646578636F6C31746573740443524541|.......indexcol1test.CREA]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  sx285[0717151501841D696E646578636F6C31746573740443524541|.......indexcol1test.CREA]
REG[2] =  i:3
  12 SorterOpen       3    0  119 k(121,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, 00 
  13 OpenRead         1    2    0 k(3,,,)       00 root=2 iDb=0; test
  14 Rewind           1  139    0               00 
 139 OpenWrite        2    1    0 k(121,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, 11 root=1 iDb=0
 140 SorterSort       3  145    0               00 
 145 Close            1    0    0               00 
 146 Close            2    0    0               00 
 147 Close            3    0    0               00 
 148 SetCookie        0    1    3               00 
 149 ParseSchema      0    0    0 name='col1' AND type='index' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    3 0             00 usesStmtJournal=0
  18 String8          0    2    0 col1          00 r[2]='col1'
REG[2] =   t4[col1](8)
  19 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[test](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t4[col1](8)
REG[1] =   s4[test](8)
  15 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t4[col1](8)
REG[1] =   s2[t2](8)
  15 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[col1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t4[col1](8)
REG[1] =   s4[col1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   15    1 (BINARY)      52 if r[1]!=r[3] goto 15
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[index](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s4[col1](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s4[test](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:4
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s264[CREATE INDEX col1 ON test](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[index](8)
REG[5] =   s4[col1](8)
REG[6] =   s4[test](8)
REG[7] =  i:4
REG[8] =   s264[CREATE INDEX col1 ON test](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
 150 Expire           0    1    0               00 
 151 Halt             0    0    0               00 
SQL: [;ALTER TABLE test RENAME c TO "c;c";]
VDBE Trace:
   0 Init             0   95    0               00 Start at 95
  95 Transaction      0    1    3 0             01 usesStmtJournal=1
  96 Transaction      1    1    0 0             01 usesStmtJournal=1
  97 String8          0    9    0 sqliteX_%     00 r[9]='sqliteX_%'
REG[9] =   t9[sqliteX_%](8)
  98 String8          0   11    0 X             00 r[11]='X'
REG[11] =   t1[X](8)
  99 String8          0   12    0 index         00 r[12]='index'
REG[12] =   t5[index](8)
 100 String8          0   13    0 test          00 r[13]='test'
REG[13] =   t4[test](8)
 101 String8          0   14    0 create virtual% 00 r[14]='create virtual%'
REG[14] =   t15[create virtual%](8)
 102 String8          0   20    0 main          00 r[20]='main'
REG[20] =   t4[main](8)
 103 String8          0   21    0 test          00 r[21]='test'
REG[21] =   t4[test](8)
 104 Integer          3   22    0               00 r[22]=3
REG[22] =  i:3
 105 String8          0   23    0 c;c           00 r[23]='c;c'
REG[23] =   t3[c;c](8)
 106 Integer        128   24    0               00 r[24]=128
REG[24] =  i:128
 107 Integer          0   25    0               00 r[25]=0
REG[25] =  i:0
 108 String8          0   33    0 trigger       00 r[33]='trigger'
REG[33] =   t7[trigger](8)
 109 String8          0   34    0 view          00 r[34]='view'
REG[34] =   t4[view](8)
 110 String8          0   39    0 main          00 r[39]='main'
REG[39] =   t4[main](8)
 111 String8          0   40    0 test          00 r[40]='test'
REG[40] =   t4[test](8)
 112 Integer          3   41    0               00 r[41]=3
REG[41] =  i:3
 113 String8          0   42    0 c;c           00 r[42]='c;c'
REG[42] =   t3[c;c](8)
 114 Integer        128   43    0               00 r[43]=128
REG[43] =  i:128
 115 Integer          1   44    0               00 r[44]=1
REG[44] =  i:1
 116 String8          0   46    0 sqliteX_%     00 r[46]='sqliteX_%'
REG[46] =   t9[sqliteX_%](8)
 117 String8          0   48    0 X             00 r[48]='X'
REG[48] =   t1[X](8)
 118 String8          0   49    0 create virtual% 00 r[49]='create virtual%'
REG[49] =   t15[create virtual%](8)
 119 String8          0   51    0 main          00 r[51]='main'
REG[51] =   t4[main](8)
 120 Integer          0   55    0               00 r[55]=0
REG[55] =  i:0
 121 Null             0   56    0               00 r[56]=NULL
REG[56] =  NULL
 122 String8          0   58    0 sqliteX_%     00 r[58]='sqliteX_%'
REG[58] =   t9[sqliteX_%](8)
 123 String8          0   60    0 X             00 r[60]='X'
REG[60] =   t1[X](8)
 124 String8          0   61    0 create virtual% 00 r[61]='create virtual%'
REG[61] =   t15[create virtual%](8)
 125 String8          0   63    0 main          00 r[63]='main'
REG[63] =   t4[main](8)
 126 Integer          1   67    0               00 r[67]=1
REG[67] =  i:1
 127 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   18    0               00 
   5 Column           0    1   10               00 r[10]=sqlite_master.name
REG[10] =   s4[test](8)
   6 Function0        5    9    8 like(3)       03 r[8]=func(r[9..11])
REG[9] =   t9[sqliteX_%](8)
REG[10] =   s4[test](8)
REG[11] =   t1[X](8)
REG[8] =  i:0
   7 If               8   17    1               00 
REG[8] =  i:0
   8 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   9 Ne              12   12    8 (BINARY)      42 if r[8]!=r[12] goto 12
REG[12] =   t5[index](8)
REG[8] =   s5[table](8)
  12 Column           0    4   15               00 r[15]=sqlite_master.sql
REG[15] =   s61[CREATE TABLE test(t1,a,b,](8)
  13 Function0        1   14    8 like(2)       02 r[8]=func(r[14..15])
REG[14] =   t15[create virtual%](8)
REG[15] =   s61[CREATE TABLE test(t1,a,b,](8)
REG[8] =  i:0
  14 If               8   17    1               00 
REG[8] =  i:0
  15 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
  16 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
  17 Next             0    5    0               01 
   5 Column           0    1   10               00 r[10]=sqlite_master.name
REG[10] =   s2[t2](8)
   6 Function         5    9    8 like(3)       03 r[8]=func(r[9..11])
REG[9] =   t9[sqliteX_%](8)
REG[10] =   s2[t2](8)
REG[11] =   t1[X](8)
REG[8] =  i:0
   7 If               8   17    1               00 
REG[8] =  i:0
   8 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   9 Ne              12   12    8 (BINARY)      42 if r[8]!=r[12] goto 12
REG[12] =   t5[index](8)
REG[8] =   s5[table](8)
  12 Column           0    4   15               00 r[15]=sqlite_master.sql
REG[15] =   s36[CREATE TABLE t2(x int,log](8)
  13 Function         1   14    8 like(2)       02 r[8]=func(r[14..15])
REG[14] =   t15[create virtual%](8)
REG[15] =   s36[CREATE TABLE t2(x int,log](8)
REG[8] =  i:0
  14 If               8   17    1               00 
REG[8] =  i:0
  15 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
  16 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:2
  17 Next             0    5    0               01 
   5 Column           0    1   10               00 r[10]=sqlite_master.name
REG[10] =   s4[col1](8)
   6 Function         5    9    8 like(3)       03 r[8]=func(r[9..11])
REG[9] =   t9[sqliteX_%](8)
REG[10] =   s4[col1](8)
REG[11] =   t1[X](8)
REG[8] =  i:0
   7 If               8   17    1               00 
REG[8] =  i:0
   8 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   9 Ne              12   12    8 (BINARY)      42 if r[8]!=r[12] goto 12
REG[12] =   t5[index](8)
REG[8] =   s5[index](8)
  10 Column           0    2    8               00 r[8]=sqlite_master.tbl_name
REG[8] =   s4[test](8)
  11 Ne              13   17    8 (BINARY)      52 if r[8]!=r[13] goto 17
REG[13] =   t4[test](8)
REG[8] =   s4[test](8)
  12 Column           0    4   15               00 r[15]=sqlite_master.sql
REG[15] =   s264[CREATE INDEX col1 ON test](8)
  13 Function         1   14    8 like(2)       02 r[8]=func(r[14..15])
REG[14] =   t15[create virtual%](8)
REG[15] =   s264[CREATE INDEX col1 ON test](8)
REG[8] =  i:0
  14 If               8   17    1               00 
REG[8] =  i:0
  15 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:3
  16 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:3
  17 Next             0    5    0               01 
  18 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
  19 RowSetRead       1   32    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  20 NotExists        0   19    2               00 intkey=r[2]
REG[2] =  i:1
  21 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
  22 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[test](8)
  23 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
REG[5] =   s4[test](8)
  24 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  25 Column           0    4   17               00 r[17]=sqlite_master.sql
REG[17] =   s61[CREATE TABLE test(t1,a,b,](8)
  26 Column           0    0   18               00 r[18]=sqlite_master.type
REG[18] =   s5[table](8)
  27 Column           0    1   19               00 r[19]=sqlite_master.name
REG[19] =   s4[test](8)
  28 Function0      504   17    7 sqlite_rename_column(9) 09 r[7]=func(r[17..25])
REG[17] =   s61[CREATE TABLE test(t1,a,b,](8)
REG[18] =   s5[table](8)
REG[19] =   s4[test](8)
REG[20] =   t4[main](8)
REG[21] =   t4[test](8)
REG[22] =  i:3
REG[23] =   t3[c;c](8)
REG[24] =  i:128
REG[25] =  i:0
REG[7] =   s65[CREATE TABLE test(t1,a,b,](8)
  29 MakeRecord       3    5   16 BBBDB         00 r[16]=mkrec(r[3..7])
REG[3] =   s5[table](8)
REG[4] =   s4[test](8)
REG[5] =   s4[test](8)
REG[6] =  i:2
REG[7] =   s65[CREATE TABLE test(t1,a,b,](8)
REG[16] =  sx86[0717151501810F7461626C6574657374746573740243524541|.......tabletesttest.CREA]
  30 Insert           0   16    2               00 intkey=r[2] data=r[16]
REG[16] =  sx86[0717151501810F7461626C6574657374746573740243524541|.......tabletesttest.CREA]
REG[2] =  i:1
  31 Goto             0   19    0               00 
  19 RowSetRead       1   32    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  20 NotExists        0   19    2               00 intkey=r[2]
REG[2] =  i:2
  21 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
  22 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t2](8)
  23 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
REG[5] =   s2[t2](8)
  24 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  25 Column           0    4   17               00 r[17]=sqlite_master.sql
REG[17] =   s36[CREATE TABLE t2(x int,log](8)
  26 Column           0    0   18               00 r[18]=sqlite_master.type
REG[18] =   s5[table](8)
  27 Column           0    1   19               00 r[19]=sqlite_master.name
REG[19] =   s2[t2](8)
  28 Function       504   17    7 sqlite_rename_column(9) 09 r[7]=func(r[17..25])
REG[17] =   s36[CREATE TABLE t2(x int,log](8)
REG[18] =   s5[table](8)
REG[19] =   s2[t2](8)
REG[20] =   t4[main](8)
REG[21] =   t4[test](8)
REG[22] =  i:3
REG[23] =   t3[c;c](8)
REG[24] =  i:128
REG[25] =  i:0
REG[7] =   s36[CREATE TABLE t2(x int,log](8)
  29 MakeRecord       3    5   16 BBBDB         00 r[16]=mkrec(r[3..7])
REG[3] =   s5[table](8)
REG[4] =   s2[t2](8)
REG[5] =   s2[t2](8)
REG[6] =  i:3
REG[7] =   s36[CREATE TABLE t2(x int,log](8)
REG[16] =  sx52[0617111101557461626C657432743203435245415445205441|.....Utablet2t2.CREATE TA]
  30 Insert           0   16    2               00 intkey=r[2] data=r[16]
REG[16] =  sx52[0617111101557461626C657432743203435245415445205441|.....Utablet2t2.CREATE TA]
REG[2] =  i:2
  31 Goto             0   19    0               00 
  19 RowSetRead       1   32    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:3
  20 NotExists        0   19    2               00 intkey=r[2]
REG[2] =  i:3
  21 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
  22 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[col1](8)
  23 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
REG[5] =   s4[test](8)
  24 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  25 Column           0    4   17               00 r[17]=sqlite_master.sql
REG[17] =   s264[CREATE INDEX col1 ON test](8)
  26 Column           0    0   18               00 r[18]=sqlite_master.type
REG[18] =   s5[index](8)
  27 Column           0    1   19               00 r[19]=sqlite_master.name
REG[19] =   s4[col1](8)
  28 Function       504   17    7 sqlite_rename_column(9) 09 r[7]=func(r[17..25])
REG[17] =   s264[CREATE INDEX col1 ON test](8)
REG[18] =   s5[index](8)
REG[19] =   s4[col1](8)
REG[20] =   t4[main](8)
REG[21] =   t4[test](8)
REG[22] =  i:3
REG[23] =   t3[c;c](8)
REG[24] =  i:128
REG[25] =  i:0
REG[7] =   s264[CREATE INDEX col1 ON test](8)
  29 MakeRecord       3    5   16 BBBDB         00 r[16]=mkrec(r[3..7])
REG[3] =   s5[index](8)
REG[4] =   s4[col1](8)
REG[5] =   s4[test](8)
REG[6] =  i:4
REG[7] =   s264[CREATE INDEX col1 ON test](8)
REG[16] =  sx285[0717151501841D696E646578636F6C31746573740443524541|.......indexcol1test.CREA]
  30 Insert           0   16    2               00 intkey=r[2] data=r[16]
REG[16] =  sx285[0717151501841D696E646578636F6C31746573740443524541|.......indexcol1test.CREA]
REG[2] =  i:3
  31 Goto             0   19    0               00 
  19 RowSetRead       1   32    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:3
  32 Null             0   26   27               00 r[26..27]=NULL
REG[26] =  NULL
  33 OpenRead         1    1    1 1             00 root=1 iDb=1; sqlite_temp_master
  34 Explain         34    0    0 SCAN TABLE sqlite_master 00 
  35 Rewind           1   43    0               00 
  43 OpenWrite        1    1    1 5             00 root=1 iDb=1; sqlite_temp_master
  44 RowSetRead      26   57   27               00 r[27]=rowset(26)
REG[26] =  NULL
REG[27] =  NULL
  57 SetCookie        0    1    4               00 
  58 ParseSchema      0    0    0               00 
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    4 1             00 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s4[test](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s4[test](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:2
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s65[CREATE TABLE test(t1,a,b,](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s4[test](8)
REG[3] =   s4[test](8)
REG[4] =  i:2
REG[5] =   s65[CREATE TABLE test(t1,a,b,](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[t2](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t2](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:3
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s36[CREATE TABLE t2(x int,log](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s2[t2](8)
REG[3] =   s2[t2](8)
REG[4] =  i:3
REG[5] =   s36[CREATE TABLE t2(x int,log](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s4[col1](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s4[test](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:4
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s264[CREATE INDEX col1 ON test](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[index](8)
REG[2] =   s4[col1](8)
REG[3] =   s4[test](8)
REG[4] =  i:4
REG[5] =   s264[CREATE INDEX col1 ON test](8)
  11 Next             0    5    0               01 
  12 Halt             0    0    0               00 
  59 ParseSchema      1    0    0               00 
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      1    0    0 1             00 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   12    0               00 
  12 Halt             0    0    0               00 
  60 OpenRead         3    1    0 5             00 root=1 iDb=0; sqlite_master
  61 Explain         61    0    0 SCAN TABLE sqlite_master 00 
  62 Rewind           3   77    0               00 
  63 Column           3    1   47               00 r[47]=sqlite_master.name
REG[47] =   s4[test](8)
  64 Function0        5   46   45 like(3)       03 r[45]=func(r[46..48])
REG[46] =   t9[sqliteX_%](8)
REG[47] =   s4[test](8)
REG[48] =   t1[X](8)
REG[45] =  i:0
  65 If              45   76    1               00 
REG[45] =  i:0
  66 Column           3    4   50               00 r[50]=sqlite_master.sql
REG[50] =   s65[CREATE TABLE test(t1,a,b,](8)
  67 Function0        1   49   45 like(2)       02 r[45]=func(r[49..50])
REG[49] =   t15[create virtual%](8)
REG[50] =   s65[CREATE TABLE test(t1,a,b,](8)
REG[45] =  i:0
  68 If              45   76    1               00 
REG[45] =  i:0
  69 Column           3    4   52               00 r[52]=sqlite_master.sql
REG[52] =   s65[CREATE TABLE test(t1,a,b,](8)
  70 Column           3    0   53               00 r[53]=sqlite_master.type
REG[53] =   s5[table](8)
  71 Column           3    1   54               00 r[54]=sqlite_master.name
REG[54] =   s4[test](8)
  72 Function0       17   51   45 sqlite_rename_test(5) 05 r[45]=func(r[51..55])
REG[51] =   t4[main](8)
REG[52] =   s65[CREATE TABLE test(t1,a,b,](8)
REG[53] =   s5[table](8)
REG[54] =   s4[test](8)
REG[55] =  i:0
REG[45] =  NULL
  73 Ne              56   76   45               50 if r[45]!=r[56] goto 76
REG[56] =  NULL
REG[45] =  NULL
  76 Next             3   63    0               01 
  63 Column           3    1   47               00 r[47]=sqlite_master.name
REG[47] =   s2[t2](8)
  64 Function         5   46   45 like(3)       03 r[45]=func(r[46..48])
REG[46] =   t9[sqliteX_%](8)
REG[47] =   s2[t2](8)
REG[48] =   t1[X](8)
REG[45] =  i:0
  65 If              45   76    1               00 
REG[45] =  i:0
  66 Column           3    4   50               00 r[50]=sqlite_master.sql
REG[50] =   s36[CREATE TABLE t2(x int,log](8)
  67 Function         1   49   45 like(2)       02 r[45]=func(r[49..50])
REG[49] =   t15[create virtual%](8)
REG[50] =   s36[CREATE TABLE t2(x int,log](8)
REG[45] =  i:0
  68 If              45   76    1               00 
REG[45] =  i:0
  69 Column           3    4   52               00 r[52]=sqlite_master.sql
REG[52] =   s36[CREATE TABLE t2(x int,log](8)
  70 Column           3    0   53               00 r[53]=sqlite_master.type
REG[53] =   s5[table](8)
  71 Column           3    1   54               00 r[54]=sqlite_master.name
REG[54] =   s2[t2](8)
  72 Function        17   51   45 sqlite_rename_test(5) 05 r[45]=func(r[51..55])
REG[51] =   t4[main](8)
REG[52] =   s36[CREATE TABLE t2(x int,log](8)
REG[53] =   s5[table](8)
REG[54] =   s2[t2](8)
REG[55] =  i:0
REG[45] =  NULL
  73 Ne              56   76   45               50 if r[45]!=r[56] goto 76
REG[56] =  NULL
REG[45] =  NULL
  76 Next             3   63    0               01 
  63 Column           3    1   47               00 r[47]=sqlite_master.name
REG[47] =   s4[col1](8)
  64 Function         5   46   45 like(3)       03 r[45]=func(r[46..48])
REG[46] =   t9[sqliteX_%](8)
REG[47] =   s4[col1](8)
REG[48] =   t1[X](8)
REG[45] =  i:0
  65 If              45   76    1               00 
REG[45] =  i:0
  66 Column           3    4   50               00 r[50]=sqlite_master.sql
REG[50] =   s264[CREATE INDEX col1 ON test](8)
  67 Function         1   49   45 like(2)       02 r[45]=func(r[49..50])
REG[49] =   t15[create virtual%](8)
REG[50] =   s264[CREATE INDEX col1 ON test](8)
REG[45] =  i:0
  68 If              45   76    1               00 
REG[45] =  i:0
  69 Column           3    4   52               00 r[52]=sqlite_master.sql
REG[52] =   s264[CREATE INDEX col1 ON test](8)
  70 Column           3    0   53               00 r[53]=sqlite_master.type
REG[53] =   s5[index](8)
  71 Column           3    1   54               00 r[54]=sqlite_master.name
REG[54] =   s4[col1](8)
  72 Function        17   51   45 sqlite_rename_test(5) 05 r[45]=func(r[51..55])
REG[51] =   t4[main](8)
REG[52] =   s264[CREATE INDEX col1 ON test](8)
REG[53] =   s5[index](8)
REG[54] =   s4[col1](8)
REG[55] =  i:0
REG[45] =  NULL
  73 Ne              56   76   45               50 if r[45]!=r[56] goto 76
REG[56] =  NULL
REG[45] =  NULL
  76 Next             3   63    0               01 
  77 OpenRead         4    1    1 5             00 root=1 iDb=1; sqlite_temp_master
  78 Explain         78    0    0 SCAN TABLE sqlite_master 00 
  79 Rewind           4   94    0               00 
  94 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
SQL: [;INSERT OR IGNORE INTO test(b,b,b,b) VALUES(2,3,4,5);]
VDBE Trace:
   0 Init             0  142    0               00 Start at 142
 142 Transaction      0    1    4 1             01 usesStmtJournal=0
 143 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
 144 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
 145 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
 146 Goto             0    1    0               00 
   1 OpenWrite        1    4    0 k(121,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, 00 root=4 iDb=0; col1
   2 OpenWrite        2    2    0 k(3,,,)       00 root=2 iDb=0; sqlite_autoindex_test_1
   3 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   4 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
   5 IsNull           2  141    0               00 if r[2]==NULL goto 141
REG[2] =  NULL
 141 Halt             0    0    0               00 
SQL: [ALTER TABLE test RENAME t1 TO tr1;]
VDBE Trace:
   0 Init             0   95    0               00 Start at 95
  95 Transaction      0    1    4 1             01 usesStmtJournal=1
  96 Transaction      1    1    0 1             01 usesStmtJournal=1
  97 String8          0    9    0 sqliteX_%     00 r[9]='sqliteX_%'
REG[9] =   t9[sqliteX_%](8)
  98 String8          0   11    0 X             00 r[11]='X'
REG[11] =   t1[X](8)
  99 String8          0   12    0 index         00 r[12]='index'
REG[12] =   t5[index](8)
 100 String8          0   13    0 test          00 r[13]='test'
REG[13] =   t4[test](8)
 101 String8          0   14    0 create virtual% 00 r[14]='create virtual%'
REG[14] =   t15[create virtual%](8)
 102 String8          0   20    0 main          00 r[20]='main'
REG[20] =   t4[main](8)
 103 String8          0   21    0 test          00 r[21]='test'
REG[21] =   t4[test](8)
 104 Integer          0   22    0               00 r[22]=0
REG[22] =  i:0
 105 String8          0   23    0 tr1           00 r[23]='tr1'
REG[23] =   t3[tr1](8)
 106 Integer          0   24    0               00 r[24]=0
REG[24] =  i:0
 107 Integer          0   25    0               00 r[25]=0
REG[25] =  i:0
 108 String8          0   33    0 trigger       00 r[33]='trigger'
REG[33] =   t7[trigger](8)
 109 String8          0   34    0 view          00 r[34]='view'
REG[34] =   t4[view](8)
 110 String8          0   39    0 main          00 r[39]='main'
REG[39] =   t4[main](8)
 111 String8          0   40    0 test          00 r[40]='test'
REG[40] =   t4[test](8)
 112 Integer          0   41    0               00 r[41]=0
REG[41] =  i:0
 113 String8          0   42    0 tr1           00 r[42]='tr1'
REG[42] =   t3[tr1](8)
 114 Integer          0   43    0               00 r[43]=0
REG[43] =  i:0
 115 Integer          1   44    0               00 r[44]=1
REG[44] =  i:1
 116 String8          0   46    0 sqliteX_%     00 r[46]='sqliteX_%'
REG[46] =   t9[sqliteX_%](8)
 117 String8          0   48    0 X             00 r[48]='X'
REG[48] =   t1[X](8)
 118 String8          0   49    0 create virtual% 00 r[49]='create virtual%'
REG[49] =   t15[create virtual%](8)
 119 String8          0   51    0 main          00 r[51]='main'
REG[51] =   t4[main](8)
 120 Integer          0   55    0               00 r[55]=0
REG[55] =  i:0
 121 Null             0   56    0               00 r[56]=NULL
REG[56] =  NULL
 122 String8          0   58    0 sqliteX_%     00 r[58]='sqliteX_%'
REG[58] =   t9[sqliteX_%](8)
 123 String8          0   60    0 X             00 r[60]='X'
REG[60] =   t1[X](8)
 124 String8          0   61    0 create virtual% 00 r[61]='create virtual%'
REG[61] =   t15[create virtual%](8)
 125 String8          0   63    0 main          00 r[63]='main'
REG[63] =   t4[main](8)
 126 Integer          1   67    0               00 r[67]=1
REG[67] =  i:1
 127 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   18    0               00 
   5 Column           0    1   10               00 r[10]=sqlite_master.name
REG[10] =   s4[test](8)
   6 Function0        5    9    8 like(3)       03 r[8]=func(r[9..11])
REG[9] =   t9[sqliteX_%](8)
REG[10] =   s4[test](8)
REG[11] =   t1[X](8)
REG[8] =  i:0
   7 If               8   17    1               00 
REG[8] =  i:0
   8 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   9 Ne              12   12    8 (BINARY)      42 if r[8]!=r[12] goto 12
REG[12] =   t5[index](8)
REG[8] =   s5[table](8)
  12 Column           0    4   15               00 r[15]=sqlite_master.sql
REG[15] =   s65[CREATE TABLE test(t1,a,b,](8)
  13 Function0        1   14    8 like(2)       02 r[8]=func(r[14..15])
REG[14] =   t15[create virtual%](8)
REG[15] =   s65[CREATE TABLE test(t1,a,b,](8)
REG[8] =  i:0
  14 If               8   17    1               00 
REG[8] =  i:0
  15 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
  16 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
  17 Next             0    5    0               01 
   5 Column           0    1   10               00 r[10]=sqlite_master.name
REG[10] =   s2[t2](8)
   6 Function         5    9    8 like(3)       03 r[8]=func(r[9..11])
REG[9] =   t9[sqliteX_%](8)
REG[10] =   s2[t2](8)
REG[11] =   t1[X](8)
REG[8] =  i:0
   7 If               8   17    1               00 
REG[8] =  i:0
   8 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   9 Ne              12   12    8 (BINARY)      42 if r[8]!=r[12] goto 12
REG[12] =   t5[index](8)
REG[8] =   s5[table](8)
  12 Column           0    4   15               00 r[15]=sqlite_master.sql
REG[15] =   s36[CREATE TABLE t2(x int,log](8)
  13 Function         1   14    8 like(2)       02 r[8]=func(r[14..15])
REG[14] =   t15[create virtual%](8)
REG[15] =   s36[CREATE TABLE t2(x int,log](8)
REG[8] =  i:0
  14 If               8   17    1               00 
REG[8] =  i:0
  15 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
  16 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:2
  17 Next             0    5    0               01 
   5 Column           0    1   10               00 r[10]=sqlite_master.name
REG[10] =   s4[col1](8)
   6 Function         5    9    8 like(3)       03 r[8]=func(r[9..11])
REG[9] =   t9[sqliteX_%](8)
REG[10] =   s4[col1](8)
REG[11] =   t1[X](8)
REG[8] =  i:0
   7 If               8   17    1               00 
REG[8] =  i:0
   8 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   9 Ne              12   12    8 (BINARY)      42 if r[8]!=r[12] goto 12
REG[12] =   t5[index](8)
REG[8] =   s5[index](8)
  10 Column           0    2    8               00 r[8]=sqlite_master.tbl_name
REG[8] =   s4[test](8)
  11 Ne              13   17    8 (BINARY)      52 if r[8]!=r[13] goto 17
REG[13] =   t4[test](8)
REG[8] =   s4[test](8)
  12 Column           0    4   15               00 r[15]=sqlite_master.sql
REG[15] =   s264[CREATE INDEX col1 ON test](8)
  13 Function         1   14    8 like(2)       02 r[8]=func(r[14..15])
REG[14] =   t15[create virtual%](8)
REG[15] =   s264[CREATE INDEX col1 ON test](8)
REG[8] =  i:0
  14 If               8   17    1               00 
REG[8] =  i:0
  15 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:3
  16 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:3
  17 Next             0    5    0               01 
  18 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
  19 RowSetRead       1   32    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  20 NotExists        0   19    2               00 intkey=r[2]
REG[2] =  i:1
  21 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
  22 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[test](8)
  23 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
REG[5] =   s4[test](8)
  24 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  25 Column           0    4   17               00 r[17]=sqlite_master.sql
REG[17] =   s65[CREATE TABLE test(t1,a,b,](8)
  26 Column           0    0   18               00 r[18]=sqlite_master.type
REG[18] =   s5[table](8)
  27 Column           0    1   19               00 r[19]=sqlite_master.name
REG[19] =   s4[test](8)
  28 Function0      504   17    7 sqlite_rename_column(9) 09 r[7]=func(r[17..25])
REG[17] =   s65[CREATE TABLE test(t1,a,b,](8)
REG[18] =   s5[table](8)
REG[19] =   s4[test](8)
REG[20] =   t4[main](8)
REG[21] =   t4[test](8)
REG[22] =  i:0
REG[23] =   t3[tr1](8)
REG[24] =  i:0
REG[25] =  i:0
REG[7] =   s67[CREATE TABLE test(tr1,a,b](8)
  29 MakeRecord       3    5   16 BBBDB         00 r[16]=mkrec(r[3..7])
REG[3] =   s5[table](8)
REG[4] =   s4[test](8)
REG[5] =   s4[test](8)
REG[6] =  i:2
REG[7] =   s67[CREATE TABLE test(tr1,a,b](8)
REG[16] =  sx88[071715150181137461626C6574657374746573740243524541|.......tabletesttest.CREA]
  30 Insert           0   16    2               00 intkey=r[2] data=r[16]
REG[16] =  sx88[071715150181137461626C6574657374746573740243524541|.......tabletesttest.CREA]
REG[2] =  i:1
  31 Goto             0   19    0               00 
  19 RowSetRead       1   32    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  20 NotExists        0   19    2               00 intkey=r[2]
REG[2] =  i:2
  21 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
  22 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t2](8)
  23 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
REG[5] =   s2[t2](8)
  24 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  25 Column           0    4   17               00 r[17]=sqlite_master.sql
REG[17] =   s36[CREATE TABLE t2(x int,log](8)
  26 Column           0    0   18               00 r[18]=sqlite_master.type
REG[18] =   s5[table](8)
  27 Column           0    1   19               00 r[19]=sqlite_master.name
REG[19] =   s2[t2](8)
  28 Function       504   17    7 sqlite_rename_column(9) 09 r[7]=func(r[17..25])
REG[17] =   s36[CREATE TABLE t2(x int,log](8)
REG[18] =   s5[table](8)
REG[19] =   s2[t2](8)
REG[20] =   t4[main](8)
REG[21] =   t4[test](8)
REG[22] =  i:0
REG[23] =   t3[tr1](8)
REG[24] =  i:0
REG[25] =  i:0
REG[7] =   s36[CREATE TABLE t2(x int,log](8)
  29 MakeRecord       3    5   16 BBBDB         00 r[16]=mkrec(r[3..7])
REG[3] =   s5[table](8)
REG[4] =   s2[t2](8)
REG[5] =   s2[t2](8)
REG[6] =  i:3
REG[7] =   s36[CREATE TABLE t2(x int,log](8)
REG[16] =  sx52[0617111101557461626C657432743203435245415445205441|.....Utablet2t2.CREATE TA]
  30 Insert           0   16    2               00 intkey=r[2] data=r[16]
REG[16] =  sx52[0617111101557461626C657432743203435245415445205441|.....Utablet2t2.CREATE TA]
REG[2] =  i:2
  31 Goto             0   19    0               00 
  19 RowSetRead       1   32    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:3
  20 NotExists        0   19    2               00 intkey=r[2]
REG[2] =  i:3
  21 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
  22 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[col1](8)
  23 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
REG[5] =   s4[test](8)
  24 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  25 Column           0    4   17               00 r[17]=sqlite_master.sql
REG[17] =   s264[CREATE INDEX col1 ON test](8)
  26 Column           0    0   18               00 r[18]=sqlite_master.type
REG[18] =   s5[index](8)
  27 Column           0    1   19               00 r[19]=sqlite_master.name
REG[19] =   s4[col1](8)
  28 Function       504   17    7 sqlite_rename_column(9) 09 r[7]=func(r[17..25])
REG[17] =   s264[CREATE INDEX col1 ON test](8)
REG[18] =   s5[index](8)
REG[19] =   s4[col1](8)
REG[20] =   t4[main](8)
REG[21] =   t4[test](8)
REG[22] =  i:0
REG[23] =   t3[tr1](8)
REG[24] =  i:0
REG[25] =  i:0
REG[7] =   s264[CREATE INDEX col1 ON test](8)
  29 MakeRecord       3    5   16 BBBDB         00 r[16]=mkrec(r[3..7])
REG[3] =   s5[index](8)
REG[4] =   s4[col1](8)
REG[5] =   s4[test](8)
REG[6] =  i:4
REG[7] =   s264[CREATE INDEX col1 ON test](8)
REG[16] =  sx285[0717151501841D696E646578636F6C31746573740443524541|.......indexcol1test.CREA]
  30 Insert           0   16    2               00 intkey=r[2] data=r[16]
REG[16] =  sx285[0717151501841D696E646578636F6C31746573740443524541|.......indexcol1test.CREA]
REG[2] =  i:3
  31 Goto             0   19    0               00 
  19 RowSetRead       1   32    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:3
  32 Null             0   26   27               00 r[26..27]=NULL
REG[26] =  NULL
  33 OpenRead         1    1    1 1             00 root=1 iDb=1; sqlite_temp_master
  34 Explain         34    0    0 SCAN TABLE sqlite_master 00 
  35 Rewind           1   43    0               00 
  43 OpenWrite        1    1    1 5             00 root=1 iDb=1; sqlite_temp_master
  44 RowSetRead      26   57   27               00 r[27]=rowset(26)
REG[26] =  NULL
REG[27] =  NULL
  57 SetCookie        0    1    5               00 
  58 ParseSchema      0    0    0               00 
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    5 2             00 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s4[test](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s4[test](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:2
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s67[CREATE TABLE test(tr1,a,b](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s4[test](8)
REG[3] =   s4[test](8)
REG[4] =  i:2
REG[5] =   s67[CREATE TABLE test(tr1,a,b](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[t2](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t2](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:3
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s36[CREATE TABLE t2(x int,log](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s2[t2](8)
REG[3] =   s2[t2](8)
REG[4] =  i:3
REG[5] =   s36[CREATE TABLE t2(x int,log](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s4[col1](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s4[test](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:4
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s264[CREATE INDEX col1 ON test](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[index](8)
REG[2] =   s4[col1](8)
REG[3] =   s4[test](8)
REG[4] =  i:4
REG[5] =   s264[CREATE INDEX col1 ON test](8)
  11 Next             0    5    0               01 
  12 Halt             0    0    0               00 
  59 ParseSchema      1    0    0               00 
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      1    0    0 2             00 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   12    0               00 
  12 Halt             0    0    0               00 
  60 OpenRead         3    1    0 5             00 root=1 iDb=0; sqlite_master
  61 Explain         61    0    0 SCAN TABLE sqlite_master 00 
  62 Rewind           3   77    0               00 
  63 Column           3    1   47               00 r[47]=sqlite_master.name
REG[47] =   s4[test](8)
  64 Function0        5   46   45 like(3)       03 r[45]=func(r[46..48])
REG[46] =   t9[sqliteX_%](8)
REG[47] =   s4[test](8)
REG[48] =   t1[X](8)
REG[45] =  i:0
  65 If              45   76    1               00 
REG[45] =  i:0
  66 Column           3    4   50               00 r[50]=sqlite_master.sql
REG[50] =   s67[CREATE TABLE test(tr1,a,b](8)
  67 Function0        1   49   45 like(2)       02 r[45]=func(r[49..50])
REG[49] =   t15[create virtual%](8)
REG[50] =   s67[CREATE TABLE test(tr1,a,b](8)
REG[45] =  i:0
  68 If              45   76    1               00 
REG[45] =  i:0
  69 Column           3    4   52               00 r[52]=sqlite_master.sql
REG[52] =   s67[CREATE TABLE test(tr1,a,b](8)
  70 Column           3    0   53               00 r[53]=sqlite_master.type
REG[53] =   s5[table](8)
  71 Column           3    1   54               00 r[54]=sqlite_master.name
REG[54] =   s4[test](8)
  72 Function0       17   51   45 sqlite_rename_test(5) 05 r[45]=func(r[51..55])
REG[51] =   t4[main](8)
REG[52] =   s67[CREATE TABLE test(tr1,a,b](8)
REG[53] =   s5[table](8)
REG[54] =   s4[test](8)
REG[55] =  i:0
REG[45] =  NULL
  73 Ne              56   76   45               50 if r[45]!=r[56] goto 76
REG[56] =  NULL
REG[45] =  NULL
  76 Next             3   63    0               01 
  63 Column           3    1   47               00 r[47]=sqlite_master.name
REG[47] =   s2[t2](8)
  64 Function         5   46   45 like(3)       03 r[45]=func(r[46..48])
REG[46] =   t9[sqliteX_%](8)
REG[47] =   s2[t2](8)
REG[48] =   t1[X](8)
REG[45] =  i:0
  65 If              45   76    1               00 
REG[45] =  i:0
  66 Column           3    4   50               00 r[50]=sqlite_master.sql
REG[50] =   s36[CREATE TABLE t2(x int,log](8)
  67 Function         1   49   45 like(2)       02 r[45]=func(r[49..50])
REG[49] =   t15[create virtual%](8)
REG[50] =   s36[CREATE TABLE t2(x int,log](8)
REG[45] =  i:0
  68 If              45   76    1               00 
REG[45] =  i:0
  69 Column           3    4   52               00 r[52]=sqlite_master.sql
REG[52] =   s36[CREATE TABLE t2(x int,log](8)
  70 Column           3    0   53               00 r[53]=sqlite_master.type
REG[53] =   s5[table](8)
  71 Column           3    1   54               00 r[54]=sqlite_master.name
REG[54] =   s2[t2](8)
  72 Function        17   51   45 sqlite_rename_test(5) 05 r[45]=func(r[51..55])
REG[51] =   t4[main](8)
REG[52] =   s36[CREATE TABLE t2(x int,log](8)
REG[53] =   s5[table](8)
REG[54] =   s2[t2](8)
REG[55] =  i:0
REG[45] =  NULL
  73 Ne              56   76   45               50 if r[45]!=r[56] goto 76
REG[56] =  NULL
REG[45] =  NULL
  76 Next             3   63    0               01 
  63 Column           3    1   47               00 r[47]=sqlite_master.name
REG[47] =   s4[col1](8)
  64 Function         5   46   45 like(3)       03 r[45]=func(r[46..48])
REG[46] =   t9[sqliteX_%](8)
REG[47] =   s4[col1](8)
REG[48] =   t1[X](8)
REG[45] =  i:0
  65 If              45   76    1               00 
REG[45] =  i:0
  66 Column           3    4   50               00 r[50]=sqlite_master.sql
REG[50] =   s264[CREATE INDEX col1 ON test](8)
  67 Function         1   49   45 like(2)       02 r[45]=func(r[49..50])
REG[49] =   t15[create virtual%](8)
REG[50] =   s264[CREATE INDEX col1 ON test](8)
REG[45] =  i:0
  68 If              45   76    1               00 
REG[45] =  i:0
  69 Column           3    4   52               00 r[52]=sqlite_master.sql
REG[52] =   s264[CREATE INDEX col1 ON test](8)
  70 Column           3    0   53               00 r[53]=sqlite_master.type
REG[53] =   s5[index](8)
  71 Column           3    1   54               00 r[54]=sqlite_master.name
REG[54] =   s4[col1](8)
  72 Function        17   51   45 sqlite_rename_test(5) 05 r[45]=func(r[51..55])
REG[51] =   t4[main](8)
REG[52] =   s264[CREATE INDEX col1 ON test](8)
REG[53] =   s5[index](8)
REG[54] =   s4[col1](8)
REG[55] =  i:0
REG[45] =  NULL
  73 Ne              56   76   45               50 if r[45]!=r[56] goto 76
REG[56] =  NULL
REG[45] =  NULL
  76 Next             3   63    0               01 
  77 OpenRead         4    1    1 5             00 root=1 iDb=1; sqlite_temp_master
  78 Explain         78    0    0 SCAN TABLE sqlite_master 00 
  79 Rewind           4   94    0               00 
  94 Halt             0    0    0               00 
SQL: [PRAGMA count_changes=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t2 WHERE log_entry IN ('2');]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    5 2             01 usesStmtJournal=0
  13 String8          0    2    0 2             00 r[2]='2'
REG[2] =   t1[2](8)
  14 Goto             0    1    0               00 
   1 OpenRead         0    3    0 2             00 root=3 iDb=0; t2
   2 Explain          2    0    0 SCAN TABLE t2 00 
   3 Rewind           0   11    0               00 
   4 Noop             0    0    0               00 begin IN expr
   5 Column           0    1    1               00 r[1]=t2.log_entry
REG[1] =  i:64
   6 Ne               1   10    2 (BINARY)      54 if r[2]!=r[1] goto 10; end IN expr
REG[1] =  i:64
REG[2] =   t1[2](8)
  10 Next             0    4    0               01 
  11 Halt             0    0    0               00 
SQL: [UPDATE t2 SET x=x+1 WHERE log_entry==8
;]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    1    5 2             01 usesStmtJournal=0
  20 Integer          8    7    0               00 r[7]=8
REG[7] =  i:8
  21 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  22 Goto             0    1    0               00 
   1 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   2 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   3 OpenWrite        0    3    0 2             00 root=3 iDb=0; t2
   4 Explain          4    0    0 SCAN TABLE t2 00 
   5 Rewind           0   17    0               00 
   6 Column           0    1    6               00 r[6]=t2.log_entry
REG[6] =  i:64
   7 Ne               7   16    6 (BINARY)      54 if r[6]!=r[7] goto 16
REG[7] =  i:8
REG[6] =  i:64
  16 Next             0    6    0               01 
  17 ResultRow        5    1    0               00 output=r[5]
REG[5] =  i:0
  18 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 ORDER BY log_entry,log_entry
;]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      0    0    5 2             01 usesStmtJournal=0
  21 Goto             0    1    0               00 
   1 SorterOpen       1    5    0 k(2,B,B)      00 
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   11    0               00 
   5 Column           0    0    3               00 r[3]=t2.x
REG[3] =  i:6
   6 Column           0    1    1               00 r[1]=t2.log_entry
REG[1] =  i:64
   7 Column           0    1    2               00 r[2]=t2.log_entry
REG[2] =  i:64
   8 MakeRecord       1    3    5               00 r[5]=mkrec(r[1..3])
REG[5] =  sx7[04010101404006|....@@.]
   9 SorterInsert     1    5    1 3             00 key=r[5]
REG[5] =  sx7[04010101404006|....@@.]
  10 Next             0    5    0               01 
  11 Explain         11    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  12 OpenPseudo       2    6    5               00 5 columns in r[6]
  13 SorterSort       1   19    0               00 
  14 SorterData       1    6    2               00 r[6]=data
  15 Column           2    1    4               00 r[4]=log_entry
REG[4] =  i:64
  16 Column           2    2    3               00 r[3]=x
REG[3] =  i:6
  17 ResultRow        3    2    0               00 output=r[3..4]
REG[3] =  i:6
REG[4] =  i:64
  18 SorterNext       1   14    0               00 
  19 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE x==78 ORDER BY x,x
;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    5 2             01 usesStmtJournal=0
  13 Integer         78    2    0               00 r[2]=78
REG[2] =  i:78
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   11    0               00 
   5 Column           0    0    1               00 r[1]=t2.x
REG[1] =  i:6
   6 Ne               2   10    1 (BINARY)      54 if r[1]!=r[2] goto 10
REG[2] =  i:78
REG[1] =  i:6
  10 Next             0    5    0               01 
  11 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 ORDER BY log_entry,log_entry
;]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      0    0    5 2             01 usesStmtJournal=0
  21 Goto             0    1    0               00 
   1 SorterOpen       1    5    0 k(2,B,B)      00 
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   11    0               00 
   5 Column           0    0    3               00 r[3]=t2.x
REG[3] =  i:6
   6 Column           0    1    1               00 r[1]=t2.log_entry
REG[1] =  i:64
   7 Column           0    1    2               00 r[2]=t2.log_entry
REG[2] =  i:64
   8 MakeRecord       1    3    5               00 r[5]=mkrec(r[1..3])
REG[5] =  sx7[04010101404006|....@@.]
   9 SorterInsert     1    5    1 3             00 key=r[5]
REG[5] =  sx7[04010101404006|....@@.]
  10 Next             0    5    0               01 
  11 Explain         11    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  12 OpenPseudo       2    6    5               00 5 columns in r[6]
  13 SorterSort       1   19    0               00 
  14 SorterData       1    6    2               00 r[6]=data
  15 Column           2    1    4               00 r[4]=log_entry
REG[4] =  i:64
  16 Column           2    2    3               00 r[3]=x
REG[3] =  i:6
  17 ResultRow        3    2    0               00 output=r[3..4]
REG[3] =  i:6
REG[4] =  i:64
  18 SorterNext       1   14    0               00 
  19 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE log_entry==8 ORDER BY log_entry,log_entry
;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    5 2             01 usesStmtJournal=0
  13 Integer          8    2    0               00 r[2]=8
REG[2] =  i:8
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   11    0               00 
   5 Column           0    1    1               00 r[1]=t2.log_entry
REG[1] =  i:64
   6 Ne               2   10    1 (BINARY)      54 if r[1]!=r[2] goto 10
REG[2] =  i:8
REG[1] =  i:64
  10 Next             0    5    0               01 
  11 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE x==89 ORDER BY x,x
;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    5 2             01 usesStmtJournal=0
  13 Integer         89    2    0               00 r[2]=89
REG[2] =  i:89
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   11    0               00 
   5 Column           0    0    1               00 r[1]=t2.x
REG[1] =  i:6
   6 Ne               2   10    1 (BINARY)      54 if r[1]!=r[2] goto 10
REG[2] =  i:89
REG[1] =  i:6
  10 Next             0    5    0               01 
  11 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE log_entry==88 ORDER BY x,log_entry
;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    0    5 2             01 usesStmtJournal=0
  22 Integer         88    2    0               00 r[2]=88
REG[2] =  i:88
  23 Goto             0    1    0               00 
   1 SorterOpen       1    5    0 k(2,B,B)      00 
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   12    0               00 
   5 Column           0    1    1               00 r[1]=t2.log_entry
REG[1] =  i:64
   6 Ne               2   11    1 (BINARY)      54 if r[1]!=r[2] goto 11
REG[2] =  i:88
REG[1] =  i:64
  11 Next             0    5    0               01 
  12 Explain         12    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  13 OpenPseudo       2    8    5               00 5 columns in r[8]
  14 SorterSort       1   20    0               00 
  20 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE x==778 ORDER BY x,x
;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    5 2             01 usesStmtJournal=0
  13 Integer        778    2    0               00 r[2]=778
REG[2] =  i:778
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   11    0               00 
   5 Column           0    0    1               00 r[1]=t2.x
REG[1] =  i:6
   6 Ne               2   10    1 (BINARY)      54 if r[1]!=r[2] goto 10
REG[2] =  i:778
REG[1] =  i:6
  10 Next             0    5    0               01 
  11 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE log_entry==8 ORDER BY log_entry,log_entry
;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    5 2             01 usesStmtJournal=0
  13 Integer          8    2    0               00 r[2]=8
REG[2] =  i:8
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   11    0               00 
   5 Column           0    1    1               00 r[1]=t2.log_entry
REG[1] =  i:64
   6 Ne               2   10    1 (BINARY)      54 if r[1]!=r[2] goto 10
REG[2] =  i:8
REG[1] =  i:64
  10 Next             0    5    0               01 
  11 Halt             0    0    0               00 
SQL: [UPDATE t2 SET log_entry=log_entry-1 WHERE log_entry<=100 and log_entry==128
;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    1    5 2             01 usesStmtJournal=0
  22 Integer        100    7    0               00 r[7]=100
REG[7] =  i:100
  23 Integer        128    8    0               00 r[8]=128
REG[8] =  i:128
  24 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  25 Goto             0    1    0               00 
   1 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   2 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   3 OpenWrite        0    3    0 2             00 root=3 iDb=0; t2
   4 Explain          4    0    0 SCAN TABLE t2 00 
   5 Rewind           0   19    0               00 
   6 Column           0    1    6               00 r[6]=t2.log_entry
REG[6] =  i:64
   7 Gt               7   18    6 (BINARY)      54 if r[6]>r[7] goto 18
REG[7] =  i:100
REG[6] =  i:64
   8 Column           0    1    6               00 r[6]=t2.log_entry
REG[6] =  i:64
   9 Ne               8   18    6 (BINARY)      54 if r[6]!=r[8] goto 18
REG[8] =  i:128
REG[6] =  i:64
  18 Next             0    6    0               01 
  19 ResultRow        5    1    0               00 output=r[5]
REG[5] =  i:0
  20 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 ORDER BY log_entry,log_entry
;]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      0    0    5 2             01 usesStmtJournal=0
  21 Goto             0    1    0               00 
   1 SorterOpen       1    5    0 k(2,B,B)      00 
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   11    0               00 
   5 Column           0    0    3               00 r[3]=t2.x
REG[3] =  i:6
   6 Column           0    1    1               00 r[1]=t2.log_entry
REG[1] =  i:64
   7 Column           0    1    2               00 r[2]=t2.log_entry
REG[2] =  i:64
   8 MakeRecord       1    3    5               00 r[5]=mkrec(r[1..3])
REG[5] =  sx7[04010101404006|....@@.]
   9 SorterInsert     1    5    1 3             00 key=r[5]
REG[5] =  sx7[04010101404006|....@@.]
  10 Next             0    5    0               01 
  11 Explain         11    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  12 OpenPseudo       2    6    5               00 5 columns in r[6]
  13 SorterSort       1   19    0               00 
  14 SorterData       1    6    2               00 r[6]=data
  15 Column           2    1    4               00 r[4]=log_entry
REG[4] =  i:64
  16 Column           2    2    3               00 r[3]=x
REG[3] =  i:6
  17 ResultRow        3    2    0               00 output=r[3..4]
REG[3] =  i:6
REG[4] =  i:64
  18 SorterNext       1   14    0               00 
  19 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE x==77 ORDER BY x,x
;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    5 2             01 usesStmtJournal=0
  13 Integer         77    2    0               00 r[2]=77
REG[2] =  i:77
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   11    0               00 
   5 Column           0    0    1               00 r[1]=t2.x
REG[1] =  i:6
   6 Ne               2   10    1 (BINARY)      54 if r[1]!=r[2] goto 10
REG[2] =  i:77
REG[1] =  i:6
  10 Next             0    5    0               01 
  11 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE x==778 ORDER BY x,x
;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    5 2             01 usesStmtJournal=0
  13 Integer        778    2    0               00 r[2]=778
REG[2] =  i:778
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   11    0               00 
   5 Column           0    0    1               00 r[1]=t2.x
REG[1] =  i:6
   6 Ne               2   10    1 (BINARY)      54 if r[1]!=r[2] goto 10
REG[2] =  i:778
REG[1] =  i:6
  10 Next             0    5    0               01 
  11 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE log_entry==8 ORDER BY log_entry,log_entry
;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    5 2             01 usesStmtJournal=0
  13 Integer          8    2    0               00 r[2]=8
REG[2] =  i:8
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   11    0               00 
   5 Column           0    1    1               00 r[1]=t2.log_entry
REG[1] =  i:64
   6 Ne               2   10    1 (BINARY)      54 if r[1]!=r[2] goto 10
REG[2] =  i:8
REG[1] =  i:64
  10 Next             0    5    0               01 
  11 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 ORDER BY log_entry,x
;]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    5 2             01 usesStmtJournal=0
  20 Goto             0    1    0               00 
   1 SorterOpen       1    5    0 k(2,B,B)      00 
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=t2.log_entry
REG[1] =  i:64
   6 Column           0    0    2               00 r[2]=t2.x
REG[2] =  i:6
   7 MakeRecord       1    2    5               00 r[5]=mkrec(r[1..2])
REG[5] =  sx5[0301014006|...@.]
   8 SorterInsert     1    5    1 2             00 key=r[5]
REG[5] =  sx5[0301014006|...@.]
   9 Next             0    5    0               01 
  10 Explain         10    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  11 OpenPseudo       2    6    5               00 5 columns in r[6]
  12 SorterSort       1   18    0               00 
  13 SorterData       1    6    2               00 r[6]=data
  14 Column           2    0    4               00 r[4]=log_entry
REG[4] =  i:64
  15 Column           2    1    3               00 r[3]=x
REG[3] =  i:6
  16 ResultRow        3    2    0               00 output=r[3..4]
REG[3] =  i:6
REG[4] =  i:64
  17 SorterNext       1   13    0               00 
  18 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE x==89 ORDER BY log_entry,x
;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    0    5 2             01 usesStmtJournal=0
  22 Integer         89    2    0               00 r[2]=89
REG[2] =  i:89
  23 Goto             0    1    0               00 
   1 SorterOpen       1    5    0 k(2,B,B)      00 
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   12    0               00 
   5 Column           0    0    1               00 r[1]=t2.x
REG[1] =  i:6
   6 Ne               2   11    1 (BINARY)      54 if r[1]!=r[2] goto 11
REG[2] =  i:89
REG[1] =  i:6
  11 Next             0    5    0               01 
  12 Explain         12    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  13 OpenPseudo       2    8    5               00 5 columns in r[8]
  14 SorterSort       1   20    0               00 
  20 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 ORDER BY log_entry,log_entry
;]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      0    0    5 2             01 usesStmtJournal=0
  21 Goto             0    1    0               00 
   1 SorterOpen       1    5    0 k(2,B,B)      00 
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   11    0               00 
   5 Column           0    0    3               00 r[3]=t2.x
REG[3] =  i:6
   6 Column           0    1    1               00 r[1]=t2.log_entry
REG[1] =  i:64
   7 Column           0    1    2               00 r[2]=t2.log_entry
REG[2] =  i:64
   8 MakeRecord       1    3    5               00 r[5]=mkrec(r[1..3])
REG[5] =  sx7[04010101404006|....@@.]
   9 SorterInsert     1    5    1 3             00 key=r[5]
REG[5] =  sx7[04010101404006|....@@.]
  10 Next             0    5    0               01 
  11 Explain         11    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  12 OpenPseudo       2    6    5               00 5 columns in r[6]
  13 SorterSort       1   19    0               00 
  14 SorterData       1    6    2               00 r[6]=data
  15 Column           2    1    4               00 r[4]=log_entry
REG[4] =  i:64
  16 Column           2    2    3               00 r[3]=x
REG[3] =  i:6
  17 ResultRow        3    2    0               00 output=r[3..4]
REG[3] =  i:6
REG[4] =  i:64
  18 SorterNext       1   14    0               00 
  19 Halt             0    0    0               00 
SQL: [UPDATE t2 SET log_entry=log_entry-1 WHERE log_entry==8 and log_entry<800
;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    1    5 2             01 usesStmtJournal=0
  22 Integer          8    7    0               00 r[7]=8
REG[7] =  i:8
  23 Integer        800    8    0               00 r[8]=800
REG[8] =  i:800
  24 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  25 Goto             0    1    0               00 
   1 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   2 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   3 OpenWrite        0    3    0 2             00 root=3 iDb=0; t2
   4 Explain          4    0    0 SCAN TABLE t2 00 
   5 Rewind           0   19    0               00 
   6 Column           0    1    6               00 r[6]=t2.log_entry
REG[6] =  i:64
   7 Ne               7   18    6 (BINARY)      54 if r[6]!=r[7] goto 18
REG[7] =  i:8
REG[6] =  i:64
  18 Next             0    6    0               01 
  19 ResultRow        5    1    0               00 output=r[5]
REG[5] =  i:0
  20 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE log_entry==89 ORDER BY log_entry,log_entry
;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    5 2             01 usesStmtJournal=0
  13 Integer         89    2    0               00 r[2]=89
REG[2] =  i:89
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   11    0               00 
   5 Column           0    1    1               00 r[1]=t2.log_entry
REG[1] =  i:64
   6 Ne               2   10    1 (BINARY)      54 if r[1]!=r[2] goto 10
REG[2] =  i:89
REG[1] =  i:64
  10 Next             0    5    0               01 
  11 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE x==78 ORDER BY x,x
;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    5 2             01 usesStmtJournal=0
  13 Integer         78    2    0               00 r[2]=78
REG[2] =  i:78
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   11    0               00 
   5 Column           0    0    1               00 r[1]=t2.x
REG[1] =  i:6
   6 Ne               2   10    1 (BINARY)      54 if r[1]!=r[2] goto 10
REG[2] =  i:78
REG[1] =  i:6
  10 Next             0    5    0               01 
  11 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE x==778 ORDER BY x,log_entry
;]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      0    0    5 2             01 usesStmtJournal=0
  33 Integer        778    2    0               00 r[2]=778
REG[2] =  i:778
  34 Goto             0    1    0               00 
   1 SorterOpen       1    2    0 k(1,B)        00 
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   19    0               00 
   5 Column           0    0    1               00 r[1]=t2.x
REG[1] =  i:6
   6 Ne               2   18    1 (BINARY)      54 if r[1]!=r[2] goto 18
REG[2] =  i:778
REG[1] =  i:6
  18 Next             0    5    0               01 
  19 Explain         19    0    0 USE TEMP B-TREE FOR RIGHT PART OF ORDER BY 00 
  20 Gosub            9   22    0               00 
REG[9] =  i:20
  22 Once             0   24    0               00 
  23 OpenPseudo       2   10    4               00 4 columns in r[10]
  24 SorterSort       1   31    0               00 
  31 Halt             0    0    0               00 
SQL: [UPDATE t2 SET x=x-1 WHERE x>100 and log_entry==128
;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    1    5 2             01 usesStmtJournal=0
  22 Integer        100    7    0               00 r[7]=100
REG[7] =  i:100
  23 Integer        128    8    0               00 r[8]=128
REG[8] =  i:128
  24 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  25 Goto             0    1    0               00 
   1 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   2 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   3 OpenWrite        0    3    0 2             00 root=3 iDb=0; t2
   4 Explain          4    0    0 SCAN TABLE t2 00 
   5 Rewind           0   19    0               00 
   6 Column           0    0    6               00 r[6]=t2.x
REG[6] =  i:6
   7 Le               7   18    6 (BINARY)      54 if r[6]<=r[7] goto 18
REG[7] =  i:100
REG[6] =  i:6
  18 Next             0    6    0               01 
  19 ResultRow        5    1    0               00 output=r[5]
REG[5] =  i:0
  20 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE log_entry==78 ORDER BY log_entry,log_entry
;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    5 2             01 usesStmtJournal=0
  13 Integer         78    2    0               00 r[2]=78
REG[2] =  i:78
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   11    0               00 
   5 Column           0    1    1               00 r[1]=t2.log_entry
REG[1] =  i:64
   6 Ne               2   10    1 (BINARY)      54 if r[1]!=r[2] goto 10
REG[2] =  i:78
REG[1] =  i:64
  10 Next             0    5    0               01 
  11 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE x==8 ORDER BY x,log_entry
;]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      0    0    5 2             01 usesStmtJournal=0
  33 Integer          8    2    0               00 r[2]=8
REG[2] =  i:8
  34 Goto             0    1    0               00 
   1 SorterOpen       1    2    0 k(1,B)        00 
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   19    0               00 
   5 Column           0    0    1               00 r[1]=t2.x
REG[1] =  i:6
   6 Ne               2   18    1 (BINARY)      54 if r[1]!=r[2] goto 18
REG[2] =  i:8
REG[1] =  i:6
  18 Next             0    5    0               01 
  19 Explain         19    0    0 USE TEMP B-TREE FOR RIGHT PART OF ORDER BY 00 
  20 Gosub            9   22    0               00 
REG[9] =  i:20
  22 Once             0   24    0               00 
  23 OpenPseudo       2   10    4               00 4 columns in r[10]
  24 SorterSort       1   31    0               00 
  31 Halt             0    0    0               00 
SQL: [UPDATE t2 SET x=x-1 WHERE x<=100 and x==128
;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    1    5 2             01 usesStmtJournal=0
  22 Integer        100    7    0               00 r[7]=100
REG[7] =  i:100
  23 Integer        128    8    0               00 r[8]=128
REG[8] =  i:128
  24 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  25 Goto             0    1    0               00 
   1 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   2 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   3 OpenWrite        0    3    0 2             00 root=3 iDb=0; t2
   4 Explain          4    0    0 SCAN TABLE t2 00 
   5 Rewind           0   19    0               00 
   6 Column           0    0    6               00 r[6]=t2.x
REG[6] =  i:6
   7 Gt               7   18    6 (BINARY)      54 if r[6]>r[7] goto 18
REG[7] =  i:100
REG[6] =  i:6
   8 Column           0    0    6               00 r[6]=t2.x
REG[6] =  i:6
   9 Ne               8   18    6 (BINARY)      54 if r[6]!=r[8] goto 18
REG[8] =  i:128
REG[6] =  i:6
  18 Next             0    6    0               01 
  19 ResultRow        5    1    0               00 output=r[5]
REG[5] =  i:0
  20 Halt             0    0    0               00 
SQL: [;SELECT * FROM t2;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    5 2             01 usesStmtJournal=0
  10 Goto             0    1    0               00 
   1 OpenRead         0    3    0 2             00 root=3 iDb=0; t2
   2 Explain          2    0    0 SCAN TABLE t2 00 
   3 Rewind           0    8    0               00 
   4 Column           0    0    1               00 r[1]=t2.x
REG[1] =  i:6
   5 Column           0    1    2               00 r[2]=t2.log_entry
REG[2] =  i:64
   6 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =  i:6
REG[2] =  i:64
   7 Next             0    4    0               01 
   8 Halt             0    0    0               00 
SQL: [;SELECT log_entry,x FROM t2;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    5 2             01 usesStmtJournal=0
  10 Goto             0    1    0               00 
   1 OpenRead         0    3    0 2             00 root=3 iDb=0; t2
   2 Explain          2    0    0 SCAN TABLE t2 00 
   3 Rewind           0    8    0               00 
   4 Column           0    1    1               00 r[1]=t2.log_entry
REG[1] =  i:64
   5 Column           0    0    2               00 r[2]=t2.x
REG[2] =  i:6
   6 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =  i:64
REG[2] =  i:6
   7 Next             0    4    0               01 
   8 Halt             0    0    0               00 
SQL: [;SELECT log_entry,log_entry FROM t2;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    5 2             01 usesStmtJournal=0
  10 Goto             0    1    0               00 
   1 OpenRead         0    3    0 2             00 root=3 iDb=0; t2
   2 Explain          2    0    0 SCAN TABLE t2 00 
   3 Rewind           0    8    0               00 
   4 Column           0    1    1               00 r[1]=t2.log_entry
REG[1] =  i:64
   5 Column           0    1    2               00 r[2]=t2.log_entry
REG[2] =  i:64
   6 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =  i:64
REG[2] =  i:64
   7 Next             0    4    0               01 
   8 Halt             0    0    0               00 
SQL: [;
;UPDATE t2 AS xyz SET log_entry=log_entry+1 WHERE EXISTS(SELECT 1 FROM t2 WHERE t2.x<xyz.x);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    5 2             01 usesStmtJournal=0
  31 Integer          1   12    0               00 r[12]=1
REG[12] =  i:1
  32 Goto             0    1    0               00 
   1 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   2 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   3 OpenWrite        0    3    0 2             00 root=3 iDb=0; t2
   4 Explain          4    0    0 SCAN TABLE t2 AS xyz 00 
   5 Rewind           0   28    0               00 
   6 Explain          6    0    0 CORRELATED SCALAR SUBQUERY 1 00 
   7 Integer          0    7    0               00 r[7]=0; Init EXISTS result
REG[7] =  i:0
   8 Integer          1    8    0               00 r[8]=1; LIMIT counter
REG[8] =  i:1
   9 OpenRead         1    3    0 1             00 root=3 iDb=0; t2
  10 Explain         10    6    0 SCAN TABLE t2 00 
  11 Rewind           1   18    0               00 
  12 Column           1    0    9               00 r[9]=t2.x
REG[9] =  i:6
  13 Column           0    0   10               00 r[10]=t2.x
REG[10] =  i:6
  14 Ge              10   17    9 (BINARY)      53 if r[9]>=r[10] goto 17
REG[10] =  i:6
REG[9] =  i:6
  17 Next             1   12    0               01 
  18 IfNot            7   27    1               00 
REG[7] =  i:0
  27 Next             0    6    0               01 
  28 ResultRow        5    1    0               00 output=r[5]
REG[5] =  i:0
  29 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
SQL: [;CREATE TABLE newname(v1);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    5 2             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  tx6[060000000000|......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  tx6[060000000000|......]
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:4
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:4
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 newname       00 r[7]='newname'
REG[7] =   t7[newname](8)
  20 String8          0    8    0 newname       00 r[8]='newname'
REG[8] =   t7[newname](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  22 String8          0   10    0 CREATE TABLE newname(v1) 00 r[10]='CREATE TABLE newname(v1)'
REG[10] =   t24[CREATE TABLE newname(v1)](8)
  23 MakeRecord       6    5    4 BBBDB         00 r[4]=mkrec(r[6..10])
REG[6] =   t5[table](8)
REG[7] =   t7[newname](8)
REG[8] =   t7[newname](8)
REG[9] =  i:5
REG[10] =   t24[CREATE TABLE newname(v1)](8)
REG[4] =  sx50[06171B1B013D7461626C656E65776E616D656E65776E616D65|.....=tablenewnamenewname]
  24 Insert           1    4    5               00 intkey=r[5] data=r[4]
REG[4] =  sx50[06171B1B013D7461626C656E65776E616D656E65776E616D65|.....=tablenewnamenewname]
REG[5] =  i:4
  25 SetCookie        0    1    6               00 
  26 ParseSchema      0    0    0 tbl_name='newname' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    6 2             00 usesStmtJournal=0
  18 String8          0    2    0 newname       00 r[2]='newname'
REG[2] =   t7[newname](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[test](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[newname](8)
REG[1] =   s4[test](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[newname](8)
REG[1] =   s2[t2](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[test](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[newname](8)
REG[1] =   s4[test](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[newname](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[newname](8)
REG[1] =   s7[newname](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s7[newname](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s7[newname](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:5
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s24[CREATE TABLE newname(v1)](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s7[newname](8)
REG[6] =   s7[newname](8)
REG[7] =  i:5
REG[8] =   s24[CREATE TABLE newname(v1)](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;COMMIT;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    0    0               00 
SQL: [;SELECT count(*) FROM t2;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    0    6 2             01 usesStmtJournal=0
   8 Goto             0    1    0               00 
   1 OpenRead         1    3    0 1             00 root=3 iDb=0
   2 Count            1    1    0               00 r[1]=count()
REG[1] =  i:1
   3 Close            1    0    0               00 
   4 Copy             1    2    0               00 r[2]=r[1]
REG[2] =  i:1
   5 ResultRow        2    1    0               00 output=r[2]
REG[2] =  i:1
   6 Halt             0    0    0               00 
SQL: [;UPDATE t2 SET rowid=rowid-9999;]
VDBE Trace:
   0 Init             0   29    0               00 Start at 29
  29 Transaction      0    1    6 2             01 usesStmtJournal=1
  30 Integer       9999    9    0               00 r[9]=9999
REG[9] =  i:9999
  31 Goto             0    1    0               00 
   1 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
   2 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   3 OpenRead         0    3    0 0             00 root=3 iDb=0; t2
   4 Explain          4    0    0 SCAN TABLE t2 00 
   5 Rewind           0    9    0               00 
   6 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   7 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
   8 Next             0    6    0               01 
   9 OpenWrite        0    3    0 2             00 root=3 iDb=0; t2
  10 RowSetRead       1   27    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  11 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:1
  12 Rowid            0    8    0               00 r[8]=rowid
REG[8] =  i:1
  13 Subtract         9    8    3               00 r[3]=r[8]-r[9]
REG[9] =  i:9999
REG[8] =  i:1
REG[3] =  i:-9998
  14 MustBeInt        3    0    0               00 
REG[3] =  i:-9998
  15 Column           0    0    4               00 r[4]=t2.x
REG[4] =  i:6
  16 Column           0    1    5               00 r[5]=t2.log_entry
REG[5] =  i:64
  17 Eq               3   21    2               90 if r[2]==r[3] goto 21
REG[3] =  i:-9998
REG[2] =  i:1
  18 Noop             0    0    0               00 uniqueness check for ROWID
  19 NotExists        0   21    3               00 intkey=r[3]
REG[3] =  i:-9998
  21 MakeRecord       4    2    7 DD            00 r[7]=mkrec(r[4..5])
REG[4] =  i:6
REG[5] =  i:64
REG[7] =  sx5[0301010640|....@]
  22 NotExists        0   10    2               00 intkey=r[2]
REG[2] =  i:1
  23 Delete           0    0    0               00 
  24 Insert           0    7    3 t2            05 intkey=r[3] data=r[7]
REG[7] =  sx5[0301010640|....@]
REG[3] =  i:-9998
  25 AddImm           6    1    0               00 r[6]=r[6]+1
REG[6] =  i:0
  26 Goto             0   10    0               00 
  10 RowSetRead       1   27    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  27 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:1
  28 Halt             0    0    0               00 
SQL: [;SELECT count(*) FROM t2 WHERE log_entry=rowid;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    6 2             01 usesStmtJournal=0
  15 Goto             0    1    0               00 
   1 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    2               00 r[2]=t2.log_entry
REG[2] =  i:64
   6 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:-9998
   7 Ne               3    9    2 (BINARY)      53 if r[2]!=r[3] goto 9
REG[3] =  i:-9998
REG[2] =  i:64
   9 Next             0    5    0               01 
  10 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  11 Copy             1    4    0               00 r[4]=r[1]
REG[4] =  i:0
  12 ResultRow        4    1    0               00 output=r[4]
REG[4] =  i:0
  13 Halt             0    0    0               00 
SQL: [;SELECT count(*) FROM t2 WHERE log_entry=rowid+1;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    6 2             01 usesStmtJournal=0
  16 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  17 Goto             0    1    0               00 
   1 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   11    0               00 
   5 Column           0    1    2               00 r[2]=t2.log_entry
REG[2] =  i:64
   6 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:-9998
   7 Add              5    4    3               00 r[3]=r[5]+r[4]
REG[5] =  i:1
REG[4] =  i:-9998
REG[3] =  i:-9997
   8 Ne               3   10    2 (BINARY)      54 if r[2]!=r[3] goto 10
REG[3] =  i:-9997
REG[2] =  i:64
  10 Next             0    5    0               01 
  11 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  12 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:0
  13 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:0
  14 Halt             0    0    0               00 
SQL: [;SELECT * FROM t2 ORDER BY +x;]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      0    0    6 2             01 usesStmtJournal=0
  21 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   11    0               00 
   5 Column           0    0    2               00 r[2]=t2.x
REG[2] =  i:6
   6 Column           0    1    3               00 r[3]=t2.log_entry
REG[3] =  i:64
   7 Column           0    0    1               00 r[1]=t2.x
REG[1] =  i:6
   8 MakeRecord       1    3    4               00 r[4]=mkrec(r[1..3])
REG[4] =  sx7[04010101060640|......@]
   9 SorterInsert     1    4    1 3             00 key=r[4]
REG[4] =  sx7[04010101060640|......@]
  10 Next             0    5    0               01 
  11 Explain         11    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  12 OpenPseudo       2    5    4               00 4 columns in r[5]
  13 SorterSort       1   19    0               00 
  14 SorterData       1    5    2               00 r[5]=data
  15 Column           2    2    3               00 r[3]=log_entry
REG[3] =  i:64
  16 Column           2    1    2               00 r[2]=x
REG[2] =  i:6
  17 ResultRow        2    2    0               00 output=r[2..3]
REG[2] =  i:6
REG[3] =  i:64
  18 SorterNext       1   14    0               00 
  19 Halt             0    0    0               00 
SQL: [;
;DROP TABLE IF EXISTS t2;]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      0    1    6 2             01 usesStmtJournal=1
  39 String8          0    3    0 t2            00 r[3]='t2'
REG[3] =   t2[t2](8)
  40 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  41 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s4[test](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[t2](8)
REG[2] =   s4[test](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t2](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[t2](8)
REG[2] =   s2[t2](8)
   7 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
   8 Eq               4   12    2 (BINARY)      52 if r[2]==r[4] goto 12
REG[4] =   t7[trigger](8)
REG[2] =   s5[table](8)
   9 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:2
  10 Once             0   11    0               00 
  11 Delete           0    0    0               02 
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s4[test](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[t2](8)
REG[2] =   s4[test](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s7[newname](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[t2](8)
REG[2] =   s7[newname](8)
  12 Next             0    5    0               01 
  13 Destroy          3    2    0               00 
REG[2] =  i:0
  14 Null             0    6    7               00 r[6..7]=NULL
REG[6] =  NULL
  15 IfNot            2   24    1               00 
REG[2] =  i:0
  24 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  25 RowSetRead       6   35    7               00 r[7]=rowset(6)
REG[6] =  NULL
REG[7] =  NULL
  35 DropTable        0    0    0 t2            00 
  36 SetCookie        0    1    7               00 
  37 Halt             0    0    0               00 
SQL: [;CREATE TABLE v2(new view,dual);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    7 2             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  tx6[060000000000|......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  tx6[060000000000|......]
REG[1] =  i:5
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:5
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:5
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:5
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 v2            00 r[7]='v2'
REG[7] =   t2[v2](8)
  20 String8          0    8    0 v2            00 r[8]='v2'
REG[8] =   t2[v2](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  22 String8          0   10    0 CREATE TABLE v2(new view,dual) 00 r[10]='CREATE TABLE v2(new view,dual)'
REG[10] =   t30[CREATE TABLE v2(new view,](8)
  23 MakeRecord       6    5    4 BBBDB         00 r[4]=mkrec(r[6..10])
REG[6] =   t5[table](8)
REG[7] =   t2[v2](8)
REG[8] =   t2[v2](8)
REG[9] =  i:3
REG[10] =   t30[CREATE TABLE v2(new view,](8)
REG[4] =  sx46[0617111101497461626C657632763203435245415445205441|.....Itablev2v2.CREATE TA]
  24 Insert           1    4    5               00 intkey=r[5] data=r[4]
REG[4] =  sx46[0617111101497461626C657632763203435245415445205441|.....Itablev2v2.CREATE TA]
REG[5] =  i:5
  25 SetCookie        0    1    8               00 
  26 ParseSchema      0    0    0 tbl_name='v2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    8 2             00 usesStmtJournal=0
  18 String8          0    2    0 v2            00 r[2]='v2'
REG[2] =   t2[v2](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[test](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[v2](8)
REG[1] =   s4[test](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[test](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[v2](8)
REG[1] =   s4[test](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[newname](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[v2](8)
REG[1] =   s7[newname](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[v2](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[v2](8)
REG[1] =   s2[v2](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[v2](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s2[v2](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:3
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s30[CREATE TABLE v2(new view,](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s2[v2](8)
REG[6] =   s2[v2](8)
REG[7] =  i:3
REG[8] =   s30[CREATE TABLE v2(new view,](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO newname(v1) VALUES(1);]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    1    8 2             01 usesStmtJournal=0
  11 Goto             0    1    0               00 
   1 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
   2 OpenWrite        0    5    0 1             00 root=5 iDb=0; newname
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   4 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   5 MakeRecord       2    1    4               00 r[4]=mkrec(r[2])
REG[4] =  sx2[0209|..]
   6 Insert           0    4    1 newname       39 intkey=r[1] data=r[4]
REG[4] =  sx2[0209|..]
REG[1] =  i:1
   7 AddImm           3    1    0               00 r[3]=r[3]+1
REG[3] =  i:0
   8 ResultRow        3    1    0               00 output=r[3]
REG[3] =  i:1
   9 Halt             0    0    0               00 
SQL: [;CREATE INDEX forumpost ON newname(1) WHERE 3;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    1    8 2             01 usesStmtJournal=1
  34 Goto             0    1    0               00 
   1 Noop             0   32    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:6
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:6
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 forumpost     00 r[4]='forumpost'
REG[4] =   t9[forumpost](8)
   7 String8          0    5    0 newname       00 r[5]='newname'
REG[5] =   t7[newname](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:6
   9 String8          0    7    0 CREATE INDEX forumpost ON newname(1) WHERE 3 00 r[7]='CREATE INDEX forumpost ON newname(1) WHERE 3'
REG[7] =   t44[CREATE INDEX forumpost ON](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[3] =   t5[index](8)
REG[4] =   t9[forumpost](8)
REG[5] =   t7[newname](8)
REG[6] =  i:6
REG[7] =   t44[CREATE INDEX forumpost ON](8)
REG[8] =  sx72[06171F1B0165696E646578666F72756D706F73746E65776E61|.....eindexforumpostnewna]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  sx72[06171F1B0165696E646578666F72756D706F73746E65776E61|.....eindexforumpostnewna]
REG[2] =  i:6
  12 SorterOpen       3    0    1 k(2,,)        00 
  13 OpenRead         1    5    0 1             00 root=5 iDb=0; newname
  14 Rewind           1   20    0               00 
  15 Integer          1   10    0               00 r[10]=1
REG[10] =  i:1
  16 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:1
  17 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  sx3[030909|...]
  18 SorterInsert     3    9    0               00 key=r[9]
REG[9] =  sx3[030909|...]
  19 Next             1   15    0               00 
  20 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  21 SorterSort       3   26    0               00 
  22 SorterData       3    9    2               00 r[9]=data
  23 SeekEnd          2    0    0               00 
  24 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  sx3[030909|...]
  25 SorterNext       3   22    0               00 
  26 Close            1    0    0               00 
  27 Close            2    0    0               00 
  28 Close            3    0    0               00 
  29 SetCookie        0    1    9               00 
  30 ParseSchema      0    0    0 name='forumpost' AND type='index' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    9 2             00 usesStmtJournal=0
  18 String8          0    2    0 forumpost     00 r[2]='forumpost'
REG[2] =   t9[forumpost](8)
  19 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[test](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t9[forumpost](8)
REG[1] =   s4[test](8)
  15 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[col1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t9[forumpost](8)
REG[1] =   s4[col1](8)
  15 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s7[newname](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t9[forumpost](8)
REG[1] =   s7[newname](8)
  15 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[v2](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t9[forumpost](8)
REG[1] =   s2[v2](8)
  15 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s9[forumpost](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t9[forumpost](8)
REG[1] =   s9[forumpost](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   15    1 (BINARY)      52 if r[1]!=r[3] goto 15
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[index](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s9[forumpost](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s7[newname](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:6
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s44[CREATE INDEX forumpost ON](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[index](8)
REG[5] =   s9[forumpost](8)
REG[6] =   s7[newname](8)
REG[7] =  i:6
REG[8] =   s44[CREATE INDEX forumpost ON](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  31 Expire           0    1    0               00 
  32 Halt             0    0    0               00 
SQL: [;UPDATE newname SET v1=2, v1=3 WHERE 3;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    1    9 2             01 usesStmtJournal=0
  18 Goto             0    1    0               00 
   1 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
   2 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   3 OpenWrite        0    5    0 1             08 root=5 iDb=0; newname
   4 OpenWrite        1    6    0 k(2,,)        00 root=6 iDb=0; forumpost
   5 Explain          5    0    0 SCAN TABLE newname USING INDEX forumpost 00 
   6 Rewind           1   15    5 0             00 
   7 DeferredSeek     1    0    0               00 Move 0 to 1.rowid if needed
   8 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   9 IsNull           2   15    0               00 if r[2]==NULL goto 15
REG[2] =  i:1
  10 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  11 MakeRecord       3    1    1               00 r[1]=mkrec(r[3])
REG[1] =  sx3[020103|...]
  12 Insert           0    1    2 newname       07 intkey=r[2] data=r[1]

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f3d826c0859 in __GI_abort () at abort.c:79
#2  0x00007f3d826c0729 in __assert_fail_base (fmt=0x7f3d82856588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x20b7fc "pCur->curFlags & BTCF_ValidNKey", file=0x2291f4 "sqlite3.c", line=72014, 
    function=<optimized out>) at assert.c:92
#3  0x00007f3d826d1fd6 in __GI___assert_fail (assertion=0x20b7fc "pCur->curFlags & BTCF_ValidNKey", file=0x2291f4 "sqlite3.c", line=72014, 
    function=0x20cd99 "int sqlite3BtreeInsert(BtCursor *, const BtreePayload *, int, int)") at assert.c:101
#4  0x00000000003ef34f in sqlite3BtreeInsert (pCur=0xf9f870, pX=0x7ffe11562258, flags=2, seekResult=0) at sqlite3.c:72014
#5  0x00000000003dcf1b in sqlite3VdbeExec (p=0xf94a80) at sqlite3.c:88789
#6  0x000000000041ba74 in sqlite3Step (p=0xf94a80) at sqlite3.c:82300
#7  0x0000000000293d5d in sqlite3_step (pStmt=0xf94a80) at sqlite3.c:82365
#8  0x0000000000258a39 in main (argc=1, argv=0x7ffe11562d38) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 56505] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
