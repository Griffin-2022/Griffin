GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/bin_for_sqlancer_aflpp/usr/local/bin/sqlite3...
[New LWP 119002]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
Core was generated by `/root/bin_for_sqlancer_aflpp/usr/local/bin/sqlite3'.
Program terminated with signal SIGABRT, Aborted.
#0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007ff5f027e859 in __GI_abort () at abort.c:79
#2  0x00007ff5f027e729 in __assert_fail_base (
    fmt=0x7ff5f0414588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", 
    assertion=0x22935b "pMem1->enc==pMem2->enc || pMem1->db->mallocFailed", 
    file=0x2363a2 "sqlite3.c", line=80468, function=<optimized out>)
    at assert.c:92
#3  0x00007ff5f028ffd6 in __GI___assert_fail (
    assertion=0x22935b "pMem1->enc==pMem2->enc || pMem1->db->mallocFailed", 
    file=0x2363a2 "sqlite3.c", line=80468, 
    function=0x2239d3 "int sqlite3MemCompare(const Mem *, const Mem *, const CollSeq *)") at assert.c:101
#4  0x00000000002dfe7c in sqlite3MemCompare (pMem1=0x7ffede5e8f30, 
    pMem2=0x1627648, pColl=0x0) at sqlite3.c:80468
#5  0x00000000003fd00e in vdbeRecordCompareDebug (nKey1=17, pKey1=0x1628ee1, 
    pPKey2=0x7ffede5e93c8, desiredResult=-14351870) at sqlite3.c:80223
#6  0x00000000003fbbb0 in sqlite3VdbeRecordCompareWithSkip (nKey1=17, 
    pKey1=0x1628ee1, pPKey2=0x7ffede5e93c8, bSkip=1) at sqlite3.c:80714
#7  0x00000000003fdc52 in vdbeRecordCompareInt (nKey1=17, pKey1=0x1628ee1, 
    pPKey2=0x7ffede5e93c8) at sqlite3.c:80834
#8  0x00000000003f9848 in sqlite3BtreeMovetoUnpacked (pCur=0x16020c0, 
    pIdxKey=0x7ffede5e93c8, intKey=0, biasRight=0, pRes=0x7ffede5e9668)
    at sqlite3.c:68687
#9  0x0000000000431c48 in sqlite3VdbeExec (p=0x15ff600) at sqlite3.c:87856
#10 0x00000000004d6b14 in sqlite3Step (p=0x15ff600) at sqlite3.c:81930
#11 0x00000000002e7efd in sqlite3_step (pStmt=0x15ff600) at sqlite3.c:81995
#12 0x000000000029b299 in exec_prepared_stmt (pArg=0x7ffede5e9d60, 
    pStmt=0x15ff600) at shell.c:10505
#13 0x0000000000296b00 in shell_exec (pArg=0x7ffede5e9d60, 
    zSql=0x161c3e0 "INSERT OR IGNORE INTO t0 VALUES (NULL, '8&'), (x'', x'db53');", pzErrMsg=0x7ffede5e9ce0) at shell.c:10810
#14 0x000000000029909c in runOneSqlLine (p=0x7ffede5e9d60, 
    zSql=0x161c3e0 "INSERT OR IGNORE INTO t0 VALUES (NULL, '8&'), (x'', x'db53');", in=0x7ff5f0448980 <_IO_2_1_stdin_>, startline=68) at shell.c:16321
#15 0x0000000000297b5f in process_input (p=0x7ffede5e9d60) at shell.c:16421
#16 0x00000000002860fe in main (argc=1, argv=0x7ffede5eb3e8) at shell.c:17182
(gdb) quit
