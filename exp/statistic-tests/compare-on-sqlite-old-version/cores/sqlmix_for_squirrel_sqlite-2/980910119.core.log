GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000516,sig:06,src:023385+021225,time:34481994,execs:6640340,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;CREATE INDEX t3 ON t1(x);]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    1    1 0             01 usesStmtJournal=1
  34 Goto             0    1    0               00 
   1 Noop             0   32    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:3
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:2
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 t3            00 r[4]='t3'
REG[4] =   t2[t3](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:3
   9 String8          0    7    0 CREATE INDEX t3 ON t1(x) 00 r[7]='CREATE INDEX t3 ON t1(x)'
REG[7] =   t24[CREATE INDEX t3 ON t1(x)](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[3] =   t5[index](8)
REG[4] =   t2[t3](8)
REG[5] =   t2[t1](8)
REG[6] =  i:3
REG[7] =   t24[CREATE INDEX t3 ON t1(x)](8)
REG[8] =  sx40[06171111013D696E646578743374310343524541544520494E|.....=indext3t1.CREATE IN]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  sx40[06171111013D696E646578743374310343524541544520494E|.....=indext3t1.CREATE IN]
REG[2] =  i:2
  12 SorterOpen       3    0    1 k(2,,)        00 
  13 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  14 Rewind           1   20    0               00 
  15 Rowid            1   10    0               00 r[10]=rowid; t1.x
REG[10] =  i:2
  16 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:2
  17 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  sx5[0301010202|.....]
  18 SorterInsert     3    9    0               00 key=r[9]
REG[9] =  sx5[0301010202|.....]
  19 Next             1   15    0               00 
  20 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  21 SorterSort       3   26    0               00 
  22 SorterData       3    9    2               00 r[9]=data
  23 SeekEnd          2    0    0               00 
  24 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  sx5[0301010202|.....]
  25 SorterNext       3   22    0               00 
  26 Close            1    0    0               00 
  27 Close            2    0    0               00 
  28 Close            3    0    0               00 
  29 SetCookie        0    1    2               00 
  30 ParseSchema      0    0    0 name='t3' AND type='index' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    2 0             00 usesStmtJournal=0
  18 String8          0    2    0 t3            00 r[2]='t3'
REG[2] =   t2[t3](8)
  19 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t3](8)
REG[1] =   s2[t1](8)
  15 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t3](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t3](8)
REG[1] =   s2[t3](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   15    1 (BINARY)      52 if r[1]!=r[3] goto 15
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[index](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t3](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s2[t1](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:3
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s24[CREATE INDEX t3 ON t1(x)](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[index](8)
REG[5] =   s2[t3](8)
REG[6] =   s2[t1](8)
REG[7] =  i:3
REG[8] =   s24[CREATE INDEX t3 ON t1(x)](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  31 Expire           0    1    0               00 
  32 Halt             0    0    0               00 
SQL: [SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      1    0    0 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   12    0               00 
  12 Halt             0    0    0               00 
SQL: [;CREATE INDEX t4 ON t1(t2)
    WHERE date(t2) BETWEEN '2017-06-01' AND '2017-08-31';]
VDBE Trace:
   0 Init             0   37    0               00 Start at 37
  37 Transaction      0    1    2 0             01 usesStmtJournal=1
  38 String8          0   12    0 2017-06-01    00 r[12]='2017-06-01'
REG[12] =   t10[2017-06-01](8)
  39 String8          0   13    0 2017-08-31    00 r[13]='2017-08-31'
REG[13] =   t10[2017-08-31](8)
  40 Goto             0    1    0               00 
   1 Noop             0   36    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:4
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:3
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 t4            00 r[4]='t4'
REG[4] =   t2[t4](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:4
   9 String8          0    7    0 CREATE INDEX t4 ON t1(t2)
    WHERE date(t2) BETWEEN '2017-06-01' AND '2017-08-31' 00 r[7]='CREATE INDEX t4 ON t1(t2)
    WHERE date(t2) BETWEEN '2017-06-01' AND '2017-08-31''
REG[7] =   t82[CREATE INDEX t4 ON t1(t2)](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[3] =   t5[index](8)
REG[4] =   t2[t4](8)
REG[5] =   t2[t1](8)
REG[6] =  i:4
REG[7] =   t82[CREATE INDEX t4 ON t1(t2)](8)
REG[8] =  sx99[07171111018131696E64657874347431044352454154452049|......1indext4t1.CREATE I]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  sx99[07171111018131696E64657874347431044352454154452049|......1indext4t1.CREATE I]
REG[2] =  i:3
  12 SorterOpen       3    0    1 k(2,,)        00 
  13 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  14 Rewind           1   24    0               00 
  15 Column           1    1   11               00 r[11]=t1.t2
REG[11] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  16 PureFunc0        0   11   10 date(-1)      01 
REG[11] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
REG[10] =  NULL
  17 Lt              12   23   10               50 if r[10]<r[12] goto 23
REG[12] =   t10[2017-06-01](8)
REG[10] =  NULL
  23 Next             1   15    0               00 
  24 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  25 SorterSort       3   30    0               00 
  30 Close            1    0    0               00 
  31 Close            2    0    0               00 
  32 Close            3    0    0               00 
  33 SetCookie        0    1    3               00 
  34 ParseSchema      0    0    0 name='t4' AND type='index' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    3 0             00 usesStmtJournal=0
  18 String8          0    2    0 t4            00 r[2]='t4'
REG[2] =   t2[t4](8)
  19 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t4](8)
REG[1] =   s2[t1](8)
  15 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t3](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t4](8)
REG[1] =   s2[t3](8)
  15 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t4](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t4](8)
REG[1] =   s2[t4](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   15    1 (BINARY)      52 if r[1]!=r[3] goto 15
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[index](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t4](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s2[t1](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:4
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s82[CREATE INDEX t4 ON t1(t2)](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[index](8)
REG[5] =   s2[t4](8)
REG[6] =   s2[t1](8)
REG[7] =  i:4
REG[8] =   s82[CREATE INDEX t4 ON t1(t2)](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  35 Expire           0    1    0               00 
  36 Halt             0    0    0               00 
SQL: [;
;SELECT t2, sum(t2) OVER (PARTITION BY t2 ORDER BY t2) FROM t1;]
VDBE Trace:
   0 Init             0  106    0               00 Start at 106
 106 Transaction      0    0    3 0             01 usesStmtJournal=0
 107 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenEphemeral    1    4    0               00 nColumn=4
   3 OpenDup          2    1    0               00 
   4 OpenDup          3    1    0               00 
   5 OpenDup          4    1    0               00 
   6 InitCoroutine    3   31    7               00 
  31 Null             0   12   12               00 r[12..12]=NULL
REG[12] =  NULL
  32 Integer          1   13    0               00 r[13]=1
REG[13] =  i:1
  33 Explain         33    0    0 SCAN SUBQUERY 2 00 
  34 InitCoroutine    3    0    7               00 
  35 Yield            3   77    0               00 next row of 
REG[3] =  i:6
REG[3] =  i:35
   7 Explain          7    0    0 CO-ROUTINE 2  00 
   8 SorterOpen       6    7    0 k(2,B,B)      00 
   9 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
  10 Explain         10    7    0 SCAN TABLE t1 00 
  11 Rewind           0   20    0               00 
  12 Column           0    1    6               00 r[6]=t1.t2
REG[6] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  13 Column           0    1    7               00 r[7]=t1.t2
REG[7] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  14 Column           0    1    8               00 r[8]=t1.t2
REG[8] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  15 Column           0    1    4               00 r[4]=t1.t2
REG[4] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  16 Column           0    1    5               00 r[5]=t1.t2
REG[5] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  17 MakeRecord       4    5   10               00 r[10]=mkrec(r[4..8])
REG[10] =  sx12511[0BA714A714A714A714A714F59EDF069A6129B0F7A32FE417B5|................a).../...]
  18 SorterInsert     6   10    4 5             00 key=r[10]
REG[10] =  sx12511[0BA714A714A714A714A714F59EDF069A6129B0F7A32FE417B5|................a).../...]
  19 Next             0   12    0               01 
  20 Explain         20    7    0 USE TEMP B-TREE FOR ORDER BY 00 
  21 OpenPseudo       7   11    7               00 7 columns in r[11]
  22 SorterSort       6   30    0               00 
  23 SorterData       6   11    7               00 r[11]=data
  24 Column           7    1    9               00 r[9]=
REG[9] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  25 Column           7    4    8               00 r[8]=
REG[8] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  26 Column           7    3    7               00 r[7]=
REG[7] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  27 Column           7    2    6               00 r[6]=
REG[6] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  28 Yield            3    0    0               00 
REG[3] =  i:35
REG[3] =  i:28
  36 Copy             6   15    0               00 r[15]=r[6]
REG[15] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  37 Copy             7   16    0               00 r[16]=r[7]
REG[16] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  38 Copy             8   17    0               00 r[17]=r[8]
REG[17] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  39 Copy             9   18    0               00 r[18]=r[9]
REG[18] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  40 MakeRecord      15    4   19               00 r[19]=mkrec(r[15..18])
REG[19] =  sx10009[09A714A714A714A714F59EDF069A6129B0F7A32FE417B516A5|..............a).../.....]
  41 Compare         16   12    1 k(1,B)        00 r[16] <-> r[12]
REG[16] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
REG[12] =  NULL
  42 Jump            43   45   43               00 
  43 Gosub           25   78    0               00 call flush_partition
REG[25] =  i:43
  78 Rewind           2   97    0               00 
  97 ResetSorter      1    0    0               00 
  98 Return          25    0    0               00 
REG[25] =  i:43
  44 Copy            16   12    0               00 r[12]=r[16]
REG[12] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  45 NewRowid         2   20    0               00 r[20]=rowid
REG[20] =  i:1
  46 Insert           2   19   20               00 intkey=r[20] data=r[19]
REG[19] =  sx10009[09A714A714A714A714F59EDF069A6129B0F7A32FE417B516A5|..............a).../.....]
REG[20] =  i:1
  47 Ne              13   56   20               00 if r[20]!=r[13] goto 56
REG[13] =  i:1
REG[20] =  i:1
  48 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
  49 Rewind           1    1    0               00 
  50 Rewind           4    1    0               00 
  51 Copy            17   21    0               00 r[21]=r[17]
REG[21] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  52 Copy            21   22    0               00 r[22]=r[21]
REG[22] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  53 Copy            21   23    0               00 r[23]=r[21]
REG[23] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  54 Copy            21   24    0               00 r[24]=r[21]
REG[24] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  55 Goto             0   76    0               00 
  76 Goto             0   35    0               00 
  35 Yield            3   77    0               00 next row of 
REG[3] =  i:28
REG[3] =  i:35
  29 SorterNext       6   23    0               00 
  30 EndCoroutine     3    0    0               00 
REG[3] =  i:35
  77 Integer         98   25    0               00 r[25]=98
REG[25] =  i:98
  78 Rewind           2   97    0               00 
  79 Column           4    3   26               00 r[26]=
REG[26] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  80 AggStep          0   26    1 sum(1)        01 accum=r[1] step(r[26])
REG[26] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  81 Next             4   83    0               00 
  82 Goto             0   87    0               00 
  87 AggValue         1    1    2 sum(1)        00 r[2]=value N=1
  88 Gosub           14  100    0               00 
REG[14] =  i:88
 100 Noop             0    0    0               00 inner-loop subroutine
 101 Column           1    0   28               00 r[28]=.t2
REG[28] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
 102 Copy             2   29    0               00 r[29]=r[2]
REG[29] =  r:0
 103 ResultRow       28    2    0               00 output=r[28..29]
REG[28] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
REG[29] =  r:0
 104 Return          14    0    0               00 end inner-loop subroutine
REG[14] =  i:88
  89 Delete           1    0    0               02 
  90 Next             1   92    0               00 
  91 Goto             0   97    0               00 
  97 ResetSorter      1    0    0               00 
  98 Return          25    0    0               00 
REG[25] =  i:98
  99 Goto             0  105    0               00 
 105 Halt             0    0    0               00 
SQL: [SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      1    0    0 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   12    0               00 
  12 Halt             0    0    0               00 
SQL: [;
;SELECT sum(x) OVER () FROM t1;]
VDBE Trace:
   0 Init             0   61    0               00 Start at 61
  61 Transaction      0    0    3 0             01 usesStmtJournal=0
  62 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenEphemeral    1    1    0               00 nColumn=1
   3 OpenDup          2    1    0               00 
   4 OpenDup          3    1    0               00 
   5 OpenDup          4    1    0               00 
   6 InitCoroutine    3   15    7               00 
  15 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  16 Explain         16    0    0 SCAN SUBQUERY 2 00 
  17 InitCoroutine    3    0    7               00 
  18 Yield            3   41    0               00 next row of 
REG[3] =  i:6
REG[3] =  i:18
   7 Explain          7    0    0 CO-ROUTINE 2  00 
   8 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   9 Explain          9    7    0 SCAN TABLE t1 00 
  10 Rewind           0   14    0               00 
  11 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:2
  12 Yield            3    0    0               00 
REG[3] =  i:18
REG[3] =  i:12
  19 Copy             4    7    0               00 r[7]=r[4]
REG[7] =  i:2
  20 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  sx3[020102|...]
  21 NewRowid         2    9    0               00 r[9]=rowid
REG[9] =  i:1
  22 Insert           2    8    9               00 intkey=r[9] data=r[8]
REG[8] =  sx3[020102|...]
REG[9] =  i:1
  23 Ne               5   28    9               00 if r[9]!=r[5] goto 28
REG[5] =  i:1
REG[9] =  i:1
  24 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
  25 Rewind           1    1    0               00 
  26 Rewind           4    1    0               00 
  27 Goto             0   40    0               00 
  40 Goto             0   18    0               00 
  18 Yield            3   41    0               00 next row of 
REG[3] =  i:12
REG[3] =  i:18
  13 Next             0   11    0               01 
  14 EndCoroutine     3    0    0               00 
REG[3] =  i:18
  41 Rewind           2   54    0               00 
  42 Column           4    0   10               00 r[10]=
REG[10] =  i:2
  43 AggStep          0   10    1 sum(1)        01 accum=r[1] step(r[10])
REG[10] =  i:2
  44 Next             4   46    0               00 
  45 Goto             0   47    0               00 
  47 AggValue         1    1    2 sum(1)        00 r[2]=value N=1
  48 Gosub            6   56    0               00 
REG[6] =  i:48
  56 Noop             0    0    0               00 inner-loop subroutine
  57 Copy             2   11    0               00 r[11]=r[2]
REG[11] =  i:2
  58 ResultRow       11    1    0               00 output=r[11]
REG[11] =  i:2
  59 Return           6    0    0               00 end inner-loop subroutine
REG[6] =  i:48
  49 Delete           1    0    0               02 
  50 Next             1   52    0               00 
  51 Goto             0   54    0               00 
  54 ResetSorter      1    0    0               00 
  55 Goto             0   60    0               00 
  60 Halt             0    0    0               00 
SQL: [VACUUM
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Vacuum           0    0    0               00 
SQL: [ATTACH '' AS vacuum_db]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 String8          0    1    0               00 r[1]=''
REG[1] =   t0[](8)
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
REG[2] =   t9[vacuum_db](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t0[](8)
REG[2] =   t9[vacuum_db](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      2    0    0 0             00 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
  12 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [BEGIN]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
SQL: [SELECT sql FROM "main".sqlite_master WHERE type='table'AND name<>'sqlite_sequence' AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 0             01 usesStmtJournal=0
  17 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  18 String8          0    3    0 sqlite_sequence 00 r[3]='sqlite_sequence'
REG[3] =   t15[sqlite_sequence](8)
  19 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  20 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          2    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   15    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   14    1 (BINARY)      52 if r[1]!=r[2] goto 14
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   7 Eq               3   14    1 (BINARY)      52 if r[1]==r[3] goto 14
REG[3] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
   8 Column           0    3    1               00 r[1]=sqlite_master.rootpage
REG[1] =  i:2
   9 NotNull          1   11    0               00 if r[1]!=NULL goto 11
REG[1] =  i:2
  11 Le               4   14    1               50 if r[1]<=r[4] goto 14
REG[4] =  i:0
REG[1] =  i:2
  12 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s42[CREATE TABLE t1(x INTEGER](8)
  13 ResultRow        5    1    0               00 output=r[5]
REG[5] =   s42[CREATE TABLE t1(x INTEGER](8)
SQL: [CREATE TABLE t1(x INTEGER PRIMARY KEY, t2)]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      2    1    0 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        2    2    4               00 
   4 SetCookie        2    5    1               00 
   5 CreateBtree      2    2    1               00 r[2]=root iDb=2 flags=1
REG[2] =  i:2
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  tx6[060000000000|......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  tx6[060000000000|......]
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:1
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:1
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t1            00 r[7]='t1'
REG[7] =   t2[t1](8)
  20 String8          0    8    0 t1            00 r[8]='t1'
REG[8] =   t2[t1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  22 String8          0   10    0 CREATE TABLE t1(x INTEGER PRIMARY KEY, t2) 00 r[10]='CREATE TABLE t1(x INTEGER PRIMARY KEY, t2)'
REG[10] =   t42[CREATE TABLE t1(x INTEGER](8)
  23 MakeRecord       6    5    4 BBBDB         00 r[4]=mkrec(r[6..10])
REG[6] =   t5[table](8)
REG[7] =   t2[t1](8)
REG[8] =   t2[t1](8)
REG[9] =  i:2
REG[10] =   t42[CREATE TABLE t1(x INTEGER](8)
REG[4] =  sx58[0617111101617461626C657431743102435245415445205441|.....atablet1t1.CREATE TA]
  24 Insert           1    4    5               00 intkey=r[5] data=r[4]
REG[4] =  sx58[0617111101617461626C657431743102435245415445205441|.....atablet1t1.CREATE TA]
REG[5] =  i:1
  25 SetCookie        2    1    1               00 
  26 ParseSchema      2    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      2    0    1 0             00 usesStmtJournal=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s2[t1](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:2
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s42[CREATE TABLE t1(x INTEGER](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s2[t1](8)
REG[6] =   s2[t1](8)
REG[7] =  i:2
REG[8] =   s42[CREATE TABLE t1(x INTEGER](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
  14 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   14    1 (BINARY)      52 if r[1]!=r[2] goto 14
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  14 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   14    1 (BINARY)      52 if r[1]!=r[2] goto 14
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  14 Next             0    4    0               01 
  15 Halt             0    0    0               00 
SQL: [SELECT sql FROM "main".sqlite_master WHERE type='index']
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    3 0             01 usesStmtJournal=0
  11 String8          0    2    0 index         00 r[2]='index'
REG[2] =   t5[index](8)
  12 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          2    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =   t5[index](8)
REG[1] =   s5[table](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =   t5[index](8)
REG[1] =   s5[index](8)
   6 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s24[CREATE INDEX t3 ON t1(x)](8)
   7 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s24[CREATE INDEX t3 ON t1(x)](8)
SQL: [CREATE INDEX t3 ON t1(x)]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      2    1    1 0             01 usesStmtJournal=1
  34 Goto             0    1    0               00 
   1 Noop             0   32    0               00 
   2 CreateBtree      2    1    2               00 r[1]=root iDb=2 flags=2
REG[1] =  i:3
   3 OpenWrite        0    1    2 5             00 root=1 iDb=2; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:2
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 t3            00 r[4]='t3'
REG[4] =   t2[t3](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:3
   9 String8          0    7    0 CREATE INDEX t3 ON t1(x) 00 r[7]='CREATE INDEX t3 ON t1(x)'
REG[7] =   t24[CREATE INDEX t3 ON t1(x)](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[3] =   t5[index](8)
REG[4] =   t2[t3](8)
REG[5] =   t2[t1](8)
REG[6] =  i:3
REG[7] =   t24[CREATE INDEX t3 ON t1(x)](8)
REG[8] =  sx40[06171111013D696E646578743374310343524541544520494E|.....=indext3t1.CREATE IN]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  sx40[06171111013D696E646578743374310343524541544520494E|.....=indext3t1.CREATE IN]
REG[2] =  i:2
  12 SorterOpen       3    0    1 k(2,,)        00 
  13 OpenRead         1    2    2 2             00 root=2 iDb=2; t1
  14 Rewind           1   20    0               00 
  20 OpenWrite        2    1    2 k(2,,)        11 root=1 iDb=2
  21 SorterSort       3   26    0               00 
  26 Close            1    0    0               00 
  27 Close            2    0    0               00 
  28 Close            3    0    0               00 
  29 SetCookie        2    1    2               00 
  30 ParseSchema      2    0    0 name='t3' AND type='index' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      2    0    2 0             00 usesStmtJournal=0
  18 String8          0    2    0 t3            00 r[2]='t3'
REG[2] =   t2[t3](8)
  19 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t3](8)
REG[1] =   s2[t1](8)
  15 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t3](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t3](8)
REG[1] =   s2[t3](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   15    1 (BINARY)      52 if r[1]!=r[3] goto 15
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[index](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t3](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s2[t1](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:3
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s24[CREATE INDEX t3 ON t1(x)](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[index](8)
REG[5] =   s2[t3](8)
REG[6] =   s2[t1](8)
REG[7] =  i:3
REG[8] =   s24[CREATE INDEX t3 ON t1(x)](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  31 Expire           0    1    0               00 
  32 Halt             0    0    0               00 
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =   t5[index](8)
REG[1] =   s5[index](8)
   6 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s82[CREATE INDEX t4 ON t1(t2)](8)
   7 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s82[CREATE INDEX t4 ON t1(t2)](8)
SQL: [CREATE INDEX t4 ON t1(t2)
    WHERE date(t2) BETWEEN '2017-06-01' AND '2017-08-31']
VDBE Trace:
   0 Init             0   37    0               00 Start at 37
  37 Transaction      2    1    2 0             01 usesStmtJournal=1
  38 String8          0   12    0 2017-06-01    00 r[12]='2017-06-01'
REG[12] =   t10[2017-06-01](8)
  39 String8          0   13    0 2017-08-31    00 r[13]='2017-08-31'
REG[13] =   t10[2017-08-31](8)
  40 Goto             0    1    0               00 
   1 Noop             0   36    0               00 
   2 CreateBtree      2    1    2               00 r[1]=root iDb=2 flags=2
REG[1] =  i:4
   3 OpenWrite        0    1    2 5             00 root=1 iDb=2; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:3
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 t4            00 r[4]='t4'
REG[4] =   t2[t4](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:4
   9 String8          0    7    0 CREATE INDEX t4 ON t1(t2)
    WHERE date(t2) BETWEEN '2017-06-01' AND '2017-08-31' 00 r[7]='CREATE INDEX t4 ON t1(t2)
    WHERE date(t2) BETWEEN '2017-06-01' AND '2017-08-31''
REG[7] =   t82[CREATE INDEX t4 ON t1(t2)](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[3] =   t5[index](8)
REG[4] =   t2[t4](8)
REG[5] =   t2[t1](8)
REG[6] =  i:4
REG[7] =   t82[CREATE INDEX t4 ON t1(t2)](8)
REG[8] =  sx99[07171111018131696E64657874347431044352454154452049|......1indext4t1.CREATE I]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  sx99[07171111018131696E64657874347431044352454154452049|......1indext4t1.CREATE I]
REG[2] =  i:3
  12 SorterOpen       3    0    1 k(2,,)        00 
  13 OpenRead         1    2    2 2             00 root=2 iDb=2; t1
  14 Rewind           1   24    0               00 
  24 OpenWrite        2    1    2 k(2,,)        11 root=1 iDb=2
  25 SorterSort       3   30    0               00 
  30 Close            1    0    0               00 
  31 Close            2    0    0               00 
  32 Close            3    0    0               00 
  33 SetCookie        2    1    3               00 
  34 ParseSchema      2    0    0 name='t4' AND type='index' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      2    0    3 0             00 usesStmtJournal=0
  18 String8          0    2    0 t4            00 r[2]='t4'
REG[2] =   t2[t4](8)
  19 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t4](8)
REG[1] =   s2[t1](8)
  15 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t3](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t4](8)
REG[1] =   s2[t3](8)
  15 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t4](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t4](8)
REG[1] =   s2[t4](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   15    1 (BINARY)      52 if r[1]!=r[3] goto 15
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[index](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t4](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s2[t1](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:4
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s82[CREATE INDEX t4 ON t1(t2)](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[index](8)
REG[5] =   s2[t4](8)
REG[6] =   s2[t1](8)
REG[7] =  i:4
REG[8] =   s82[CREATE INDEX t4 ON t1(t2)](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  35 Expire           0    1    0               00 
  36 Halt             0    0    0               00 
   8 Next             0    4    0               01 
   9 Halt             0    0    0               00 
SQL: [SELECT'INSERT INTO vacuum_db.'||quote(name)||' SELECT*FROM"main".'||quote(name)FROM vacuum_db.sqlite_master WHERE type='table'AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      2    0    3 0             01 usesStmtJournal=0
  21 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  22 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  23 String8          0    6    0 INSERT INTO vacuum_db. 00 r[6]='INSERT INTO vacuum_db.'
REG[6] =   t22[INSERT INTO vacuum_db.](8)
  24 String8          0    9    0  SELECT*FROM"main". 00 r[9]=' SELECT*FROM"main".'
REG[9] =   t19[ SELECT*FROM"main".](8)
  25 Goto             0    1    0               00 
   1 OpenRead         0    1    2 4             00 root=1 iDb=2; sqlite_master
   2 Explain          2    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   19    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   18    1 (BINARY)      52 if r[1]!=r[2] goto 18
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    3    1               00 r[1]=sqlite_master.rootpage
REG[1] =  i:2
   7 NotNull          1    9    0               00 if r[1]!=NULL goto 9
REG[1] =  i:2
   9 Le               3   18    1               50 if r[1]<=r[3] goto 18
REG[3] =  i:0
REG[1] =  i:2
  10 Column           0    1    8               00 r[8]=sqlite_master.name
REG[8] =   s2[t1](8)
  11 Function0        0    8    7 quote(1)      01 r[7]=func(r[8])
REG[8] =   s2[t1](8)
REG[7] =   z4['t1'](8)
  12 Concat           7    6    5               00 r[5]=r[6]+r[7]
REG[7] =   z4['t1'](8)
REG[6] =   t22[INSERT INTO vacuum_db.](8)
REG[5] =   s26[INSERT INTO vacuum_db.'t1](8)
  13 Concat           9    5    1               00 r[1]=r[5]+r[9]
REG[9] =   t19[ SELECT*FROM"main".](8)
REG[5] =   s26[INSERT INTO vacuum_db.'t1](8)
REG[1] =   s45[INSERT INTO vacuum_db.'t1](8)
  14 Column           0    1    7               00 r[7]=sqlite_master.name
REG[7] =   s2[t1](8)
  15 Function0        0    7    5 quote(1)      01 r[5]=func(r[7])
REG[7] =   s2[t1](8)
REG[5] =   z4['t1'](8)
  16 Concat           5    1    4               00 r[4]=r[1]+r[5]
REG[5] =   z4['t1'](8)
REG[1] =   s45[INSERT INTO vacuum_db.'t1](8)
REG[4] =   s49[INSERT INTO vacuum_db.'t1](8)
  17 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s49[INSERT INTO vacuum_db.'t1](8)
SQL: [INSERT INTO vacuum_db.'t1' SELECT*FROM"main".'t1']
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    0    3 0             01 usesStmtJournal=1
  34 Transaction      2    1    3 0             01 usesStmtJournal=1
  35 Goto             0    1    0               00 
   1 OpenWrite        1    2    2 2             00 root=2 iDb=2; t1
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   3 Rewind           0   32    0               00 
   4 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
   5 Abortable        0    0    0               00 
   6 NotExists        1    8    2               00 intkey=r[2]
REG[2] =  i:2
   8 RowData          0    1    1               00 r[1]=data
REG[1] =  ex2504[0400A714F59EDF069A6129B0F7A32FE417B516A50422982618|.........a).../......".&.]
   9 SeekEnd          1    0    0               00 
  10 Insert           1    1    2 t1            39 intkey=r[2] data=r[1]
REG[1] =  ex2504[0400A714F59EDF069A6129B0F7A32FE417B516A50422982618|.........a).../......".&.]
REG[2] =  i:2
  11 Next             0    4    0               00 
  12 Close            0    0    0               00 
  13 Close            1    0    0               00 
  14 OpenRead         0    4    0 k(2,,)        00 root=4 iDb=0; t4
  15 OpenWrite        1    4    2 k(2,,)        01 root=4 iDb=2; t4
  16 Rewind           0   21    0               00 
  21 Close            0    0    0               00 
  22 Close            1    0    0               00 
  23 OpenRead         0    3    0 k(2,,)        00 root=3 iDb=0; t3
  24 OpenWrite        1    3    2 k(2,,)        01 root=3 iDb=2; t3
  25 Rewind           0   30    0               00 
  26 RowData          0    1    1               00 r[1]=data
REG[1] =  ex5[0301010202|.....]
  27 SeekEnd          1    0    0               00 
  28 IdxInsert        1    1    0               18 key=r[1]
REG[1] =  ex5[0301010202|.....]
  29 Next             0   26    0               00 
  30 Close            0    0    0               00 
  31 Close            1    0    0               00 
  32 Halt             0    0    0               00 
  18 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   18    1 (BINARY)      52 if r[1]!=r[2] goto 18
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  18 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   18    1 (BINARY)      52 if r[1]!=r[2] goto 18
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  18 Next             0    4    0               01 
  19 Halt             0    0    0               00 
SQL: [INSERT INTO vacuum_db.sqlite_master SELECT*FROM "main".sqlite_master WHERE type IN('view','trigger') OR(type='table'AND rootpage=0)]
VDBE Trace:
   0 Init             0   29    0               00 Start at 29
  29 Transaction      0    0    3 0             01 usesStmtJournal=0
  30 Transaction      2    1    3 0             01 usesStmtJournal=0
  31 String8          0    9    0 view          00 r[9]='view'
REG[9] =   t4[view](8)
  32 String8          0   10    0 trigger       00 r[10]='trigger'
REG[10] =   t7[trigger](8)
  33 String8          0   12    0 table         00 r[12]='table'
REG[12] =   t5[table](8)
  34 Integer          0   13    0               00 r[13]=0
REG[13] =  i:0
  35 Goto             0    1    0               00 
   1 InitCoroutine    7   22    2               00 
  22 OpenWrite        2    1    2 5             00 root=1 iDb=2; sqlite_master
  23 Yield            7   28    0               00 
REG[7] =  i:1
REG[7] =  i:23
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   21    0               00 
   5 Noop             0    0    0               00 begin IN expr
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   7 Eq               8    9    9 (BINARY)      42 if r[9]==r[8] goto 9
REG[8] =   s5[table](8)
REG[9] =   t4[view](8)
   8 Ne               8   10   10 (BINARY)      52 if r[10]!=r[8] goto 10; end IN expr
REG[8] =   s5[table](8)
REG[10] =   t7[trigger](8)
  10 Column           0    0   11               00 r[11]=sqlite_master.type
REG[11] =   s5[table](8)
  11 Ne              12   20   11 (BINARY)      52 if r[11]!=r[12] goto 20
REG[12] =   t5[table](8)
REG[11] =   s5[table](8)
  12 Column           0    3   11               00 r[11]=sqlite_master.rootpage
REG[11] =  i:2
  13 Ne              13   20   11 (BINARY)      54 if r[11]!=r[13] goto 20
REG[13] =  i:0
REG[11] =  i:2
  20 Next             0    5    0               01 
   5 Noop             0    0    0               00 begin IN expr
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   7 Eq               8    9    9 (BINARY)      42 if r[9]==r[8] goto 9
REG[8] =   s5[index](8)
REG[9] =   t4[view](8)
   8 Ne               8   10   10 (BINARY)      52 if r[10]!=r[8] goto 10; end IN expr
REG[8] =   s5[index](8)
REG[10] =   t7[trigger](8)
  10 Column           0    0   11               00 r[11]=sqlite_master.type
REG[11] =   s5[index](8)
  11 Ne              12   20   11 (BINARY)      52 if r[11]!=r[12] goto 20
REG[12] =   t5[table](8)
REG[11] =   s5[index](8)
  20 Next             0    5    0               01 
   5 Noop             0    0    0               00 begin IN expr
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   7 Eq               8    9    9 (BINARY)      42 if r[9]==r[8] goto 9
REG[8] =   s5[index](8)
REG[9] =   t4[view](8)
   8 Ne               8   10   10 (BINARY)      52 if r[10]!=r[8] goto 10; end IN expr
REG[8] =   s5[index](8)
REG[10] =   t7[trigger](8)
  10 Column           0    0   11               00 r[11]=sqlite_master.type
REG[11] =   s5[index](8)
  11 Ne              12   20   11 (BINARY)      52 if r[11]!=r[12] goto 20
REG[12] =   t5[table](8)
REG[11] =   s5[index](8)
  20 Next             0    5    0               01 
  21 EndCoroutine     7    0    0               00 
REG[7] =  i:23
  28 Halt             0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
;PRAGMA reverse_unordered_selects=0;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    4 1             00 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[t1](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:2
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s42[CREATE TABLE t1(x INTEGER](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s2[t1](8)
REG[3] =   s2[t1](8)
REG[4] =  i:2
REG[5] =   s42[CREATE TABLE t1(x INTEGER](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[t3](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:3
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s24[CREATE INDEX t3 ON t1(x)](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[index](8)
REG[2] =   s2[t3](8)
REG[3] =   s2[t1](8)
REG[4] =  i:3
REG[5] =   s24[CREATE INDEX t3 ON t1(x)](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[t4](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:4
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s82[CREATE INDEX t4 ON t1(t2)](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[index](8)
REG[2] =   s2[t4](8)
REG[3] =   s2[t1](8)
REG[4] =  i:4
REG[5] =   s82[CREATE INDEX t4 ON t1(t2)](8)
  11 Next             0    5    0               01 
  12 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      1    0    0 1             00 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   12    0               00 
  12 Halt             0    0    0               00 
SQL: [;CREATE TABLE a(b,i1);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    4 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  tx6[060000000000|......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  tx6[060000000000|......]
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:4
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:4
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 a             00 r[7]='a'
REG[7] =   t1[a](8)
  20 String8          0    8    0 a             00 r[8]='a'
REG[8] =   t1[a](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  22 String8          0   10    0 CREATE TABLE a(b,i1) 00 r[10]='CREATE TABLE a(b,i1)'
REG[10] =   t20[CREATE TABLE a(b,i1)](8)
  23 MakeRecord       6    5    4 BBBDB         00 r[4]=mkrec(r[6..10])
REG[6] =   t5[table](8)
REG[7] =   t1[a](8)
REG[8] =   t1[a](8)
REG[9] =  i:5
REG[10] =   t20[CREATE TABLE a(b,i1)](8)
REG[4] =  sx34[06170F0F01357461626C65616105435245415445205441424C|.....5tableaa.CREATE TABL]
  24 Insert           1    4    5               00 intkey=r[5] data=r[4]
REG[4] =  sx34[06170F0F01357461626C65616105435245415445205441424C|.....5tableaa.CREATE TABL]
REG[5] =  i:4
  25 SetCookie        0    1    5               00 
  26 ParseSchema      0    0    0 tbl_name='a' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    5 1             00 usesStmtJournal=0
  18 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[a](8)
REG[1] =   s2[t1](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[a](8)
REG[1] =   s2[t1](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[a](8)
REG[1] =   s2[t1](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[a](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s1[a](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:5
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s20[CREATE TABLE a(b,i1)](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s1[a](8)
REG[6] =   s1[a](8)
REG[7] =  i:5
REG[8] =   s20[CREATE TABLE a(b,i1)](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;WITH RECURSIVE x(x) AS (VALUES(1) UNION ALL SELECT x+1 FROM x WHERE x<10)
    INSERT INTO t1(x,x,x) SELECT x, randomblob(100),randomblob(100) FROM x;]
VDBE Trace:
   0 Init             0   72    0               00 Start at 72
  72 Transaction      0    1    5 1             01 usesStmtJournal=1
  73 Integer         10   11    0               00 r[11]=10
REG[11] =  i:10
  74 Integer          1   12    0               00 r[12]=1
REG[12] =  i:1
  75 Integer        100   16    0               00 r[16]=100
REG[16] =  i:100
  76 Integer        100   17    0               00 r[17]=100
REG[17] =  i:100
  77 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  78 String8          0   27    0 2017-06-01    00 r[27]='2017-06-01'
REG[27] =   t10[2017-06-01](8)
  79 String8          0   28    0 2017-08-31    00 r[28]='2017-08-31'
REG[28] =   t10[2017-08-31](8)
  80 Goto             0    1    0               00 
   1 InitCoroutine    4   38    2               00 
  38 OpenWrite        3    2    0 2             00 root=2 iDb=0; t1
  39 OpenWrite        4    4    0 k(2,,)        00 root=4 iDb=0; t4
  40 OpenWrite        5    3    0 k(2,,)        00 root=3 iDb=0; t3
  41 Yield            4   71    0               00 
REG[4] =  i:1
REG[4] =  i:41
   2 InitCoroutine    5   29    3               00 x
  29 Explain         29    0    0 SCAN SUBQUERY 2 00 
  30 InitCoroutine    5    0    3               00 
  31 Yield            5   37    0               00 next row of x
REG[5] =  i:2
REG[5] =  i:31
   3 Explain          3    0    0 CO-ROUTINE 2  00 
   4 OpenPseudo       1    6    1               00 1 columns in r[6]
   5 OpenEphemeral    2    1    0               00 nColumn=1; Queue table
   6 Explain          6    3    0 SETUP         00 
   7 Explain          7    6    0 SCAN CONSTANT ROW 00 
   8 Integer          1    7    0               00 r[7]=1
REG[7] =  i:1
   9 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  sx2[0209|..]
  10 NewRowid         2    9    0               00 r[9]=rowid
REG[9] =  i:1
  11 Insert           2    8    9               08 intkey=r[9] data=r[8]
REG[8] =  sx2[0209|..]
REG[9] =  i:1
  12 Rewind           2   28    0               00 
  13 NullRow          1    0    0               00 
  14 RowData          2    6    0               00 r[6]=data
REG[6] =  sx2[0209|..]
  15 Delete           2    0    0               00 
  16 Column           1    0   10               00 r[10]=
REG[10] =  i:1
  17 Yield            5    0    0               00 
REG[5] =  i:31
REG[5] =  i:17
  32 Copy            10   13    0               00 r[13]=r[10]; x.x
REG[13] =  i:1
  33 Function0        1   16   14 randomblob(1) 01 r[14]=func(r[16])
REG[16] =  i:100
REG[14] =  zx100[E1C150966E93973683DE7FA82B2E7A7667FA5C3CA88EAED83D|..P.n..6....+.zvg.\<....=]
  34 Function0        1   17   15 randomblob(1) 01 r[15]=func(r[17])
REG[17] =  i:100
REG[15] =  zx100[17DBB9CF97E0D5A06593E0DEFB270D928AAD9E54FFD72733D3|........e....'.....T..'3.]
  35 Yield            4    0    0               00 
REG[4] =  i:41
REG[4] =  i:35
  42 Copy            15    1    0               00 r[1]=r[15]
REG[1] =  sx100[17DBB9CF97E0D5A06593E0DEFB270D928AAD9E54FFD72733D3|........e....'.....T..'3.]
  43 NotNull          1   45    0               00 if r[1]!=NULL goto 45
REG[1] =  sx100[17DBB9CF97E0D5A06593E0DEFB270D928AAD9E54FFD72733D3|........e....'.....T..'3.]
  45 MustBeInt        1    0    0               00 
REG[1] =  sx100[17DBB9CF97E0D5A06593E0DEFB270D928AAD9E54FFD72733D3|........e....'.....T..'3.]
SQL: [;INSERT INTO a VALUES(1,2);]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    1    5 1             01 usesStmtJournal=0
   9 Goto             0    1    0               00 
   1 OpenWrite        0    5    0 2             00 root=5 iDb=0; a
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   5 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  sx4[03090102|....]
   6 Insert           0    4    1 a             39 intkey=r[1] data=r[4]
REG[4] =  sx4[03090102|....]
REG[1] =  i:1
   7 Halt             0    0    0               00 
SQL: [;SELECT x FROM t1 WHERE x=-99 OR x>1;]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    0    5 1             01 usesStmtJournal=0
  25 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  26 Goto             0    1    0               00 
   1 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   2 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
   3 Integer         19    1    0               00 r[1]=19
REG[1] =  i:19
   4 Explain          4    0    0 MULTI-INDEX OR 00 
   5 Explain          5    4    0 INDEX 1       00 
   6 Integer        -99    4    0               00 r[4]=-99
REG[4] =  i:-99
   7 SeekRowid        0   12    4               00 intkey=r[4]
REG[4] =  i:-99
  12 Explain         12    4    0 INDEX 2       00 
  13 SeekGT           0   19    5               00 key=r[5]; pk
REG[5] =  i:1
  14 Explain         14   12    0 SEARCH TABLE t1 USING INTEGER PRIMARY KEY (rowid>?) 00 
  15 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:2
  16 RowSetTest       2   18    3 -1            00 if r[3] in rowset(2) goto 18
REG[2] =  NULL
REG[3] =  i:2
  17 Gosub            1   20    0               00 
REG[1] =  i:17
  20 Rowid            0    6    0               00 r[6]=rowid
REG[6] =  i:2
  21 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:2
  22 Return           1    0    0               00 
REG[1] =  i:17
  18 Next             0   14    0               00 
  19 Goto             0   23    0               00 
  23 Halt             0    0    0               00 
SQL: [SELECT x, sum(x) OVER (
    ORDER BY x 
    ROWS BETWEEN 2 PRECEDING AND CURRENT ROW
  ) FROM t1

;]
VDBE Trace:
   0 Init             0   73    0               00 Start at 73
  73 Transaction      0    0    5 1             01 usesStmtJournal=0
  74 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenEphemeral    1    3    0               00 nColumn=3
   3 OpenDup          2    1    0               00 
   4 OpenDup          3    1    0               00 
   5 OpenDup          4    1    0               00 
   6 InitCoroutine    3   18    7               00 
  18 Integer          1    7    0               00 r[7]=1
REG[7] =  i:1
  19 Explain         19    0    0 SCAN SUBQUERY 2 00 
  20 InitCoroutine    3    0    7               00 
  21 Yield            3   51    0               00 next row of 
REG[3] =  i:6
REG[3] =  i:21
   7 Explain          7    0    0 CO-ROUTINE 2  00 
   8 Noop             6    5    0               00 
   9 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
  10 Explain         10    7    0 SCAN TABLE t1 00 
  11 Rewind           0   17    0               00 
  12 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:2
  13 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:2
  14 Rowid            0    6    0               00 r[6]=rowid
REG[6] =  i:2
  15 Yield            3    0    0               00 
REG[3] =  i:21
REG[3] =  i:15
  22 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:2
  23 Copy             5   10    0               00 r[10]=r[5]
REG[10] =  i:2
  24 Copy             6   11    0               00 r[11]=r[6]
REG[11] =  i:2
  25 MakeRecord       9    3   12               00 r[12]=mkrec(r[9..11])
REG[12] =  sx7[04010101020202|.......]
  26 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  27 Insert           2   12   13               00 intkey=r[13] data=r[12]
REG[12] =  sx7[04010101020202|.......]
REG[13] =  i:1
  28 Ne               7   39   13               00 if r[13]!=r[7] goto 39
REG[7] =  i:1
REG[13] =  i:1
  29 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
  30 Integer          2   14    0               00 r[14]=2
REG[14] =  i:2
  31 Integer          0   16    0               00 r[16]=0
REG[16] =  i:0
  32 MustBeInt       14   34    0               00 
REG[14] =  i:2
  33 Ge              16   35   14               00 if r[14]>=r[16] goto 35
REG[16] =  i:0
REG[14] =  i:2
  35 Rewind           3    1    0               00 
  36 Rewind           1    1    0               00 
  37 Rewind           4    1    0               00 
  38 Goto             0   50    0               00 
  50 Goto             0   21    0               00 
  21 Yield            3   51    0               00 next row of 
REG[3] =  i:15
REG[3] =  i:21
  16 Next             0   12    0               01 
  17 EndCoroutine     3    0    0               00 
REG[3] =  i:21
  51 Rewind           2   65    0               00 
  52 Column           4    2   15               00 r[15]=
REG[15] =  i:2
  53 AggStep          0   15    1 sum(1)        01 accum=r[1] step(r[15])
REG[15] =  i:2
  54 Next             4   55    0               00 
  55 AggValue         1    1    2 sum(1)        00 r[2]=value N=1
  56 Gosub            8   67    0               00 
REG[8] =  i:56
  67 Noop             0    0    0               00 inner-loop subroutine
  68 Column           1    0   17               00 r[17]=.x
REG[17] =  i:2
  69 Copy             2   18    0               00 r[18]=r[2]
REG[18] =  i:2
  70 ResultRow       17    2    0               00 output=r[17..18]
REG[17] =  i:2
REG[18] =  i:2
  71 Return           8    0    0               00 end inner-loop subroutine
REG[8] =  i:56
  57 Next             1   59    0               00 
  58 Goto             0   65    0               00 
  65 ResetSorter      1    0    0               00 
  66 Goto             0   72    0               00 
  72 Halt             0    0    0               00 
SQL: [SELECT t2, sum(t2) OVER (
    ORDER BY t2 
    ROWS BETWEEN 3 PRECEDING AND 1 PRECEDING
  ) FROM t1

;]
VDBE Trace:
   0 Init             0   89    0               00 Start at 89
  89 Transaction      0    0    5 1             01 usesStmtJournal=0
  90 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenEphemeral    1    3    0               00 nColumn=3
   3 OpenDup          2    1    0               00 
   4 OpenDup          3    1    0               00 
   5 OpenDup          4    1    0               00 
   6 InitCoroutine    3   28    7               00 
  28 Integer          1   10    0               00 r[10]=1
REG[10] =  i:1
  29 Explain         29    0    0 SCAN SUBQUERY 2 00 
  30 InitCoroutine    3    0    7               00 
  31 Yield            3   73    0               00 next row of 
REG[3] =  i:6
REG[3] =  i:31
   7 Explain          7    0    0 CO-ROUTINE 2  00 
   8 SorterOpen       6    5    0 k(1,B)        00 
   9 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
  10 Explain         10    7    0 SCAN TABLE t1 00 
  11 Rewind           0   18    0               00 
  12 Column           0    1    5               00 r[5]=t1.t2
REG[5] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  13 Column           0    1    6               00 r[6]=t1.t2
REG[6] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  14 Column           0    1    4               00 r[4]=t1.t2
REG[4] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  15 MakeRecord       4    3    8               00 r[8]=mkrec(r[4..6])
REG[8] =  sx7507[07A714A714A714F59EDF069A6129B0F7A32FE417B516A50422|............a).../......"]
  16 SorterInsert     6    8    4 3             00 key=r[8]
REG[8] =  sx7507[07A714A714A714F59EDF069A6129B0F7A32FE417B516A50422|............a).../......"]
  17 Next             0   12    0               01 
  18 Explain         18    7    0 USE TEMP B-TREE FOR ORDER BY 00 
  19 OpenPseudo       7    9    5               00 5 columns in r[9]
  20 SorterSort       6   27    0               00 
  21 SorterData       6    9    7               00 r[9]=data
  22 Column           7    0    7               00 r[7]=
REG[7] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  23 Column           7    2    6               00 r[6]=
REG[6] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  24 Column           7    1    5               00 r[5]=
REG[5] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  25 Yield            3    0    0               00 
REG[3] =  i:31
REG[3] =  i:25
  32 Copy             5   12    0               00 r[12]=r[5]
REG[12] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  33 Copy             6   13    0               00 r[13]=r[6]
REG[13] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  34 Copy             7   14    0               00 r[14]=r[7]
REG[14] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  35 MakeRecord      12    3   15               00 r[15]=mkrec(r[12..14])
REG[15] =  sx7507[07A714A714A714F59EDF069A6129B0F7A32FE417B516A50422|............a).../......"]
  36 NewRowid         2   16    0               00 r[16]=rowid
REG[16] =  i:1
  37 Insert           2   15   16               00 intkey=r[16] data=r[15]
REG[15] =  sx7507[07A714A714A714F59EDF069A6129B0F7A32FE417B516A50422|............a).../......"]
REG[16] =  i:1
  38 Ne              10   60   16               00 if r[16]!=r[10] goto 60
REG[10] =  i:1
REG[16] =  i:1
  39 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
  40 Integer          3   17    0               00 r[17]=3
REG[17] =  i:3
  41 Integer          0   20    0               00 r[20]=0
REG[20] =  i:0
  42 MustBeInt       17   44    0               00 
REG[17] =  i:3
  43 Ge              20   45   17               00 if r[17]>=r[20] goto 45
REG[20] =  i:0
REG[17] =  i:3
  45 Integer          1   18    0               00 r[18]=1
REG[18] =  i:1
  46 Integer          0   20    0               00 r[20]=0
REG[20] =  i:0
  47 MustBeInt       18   49    0               00 
REG[18] =  i:1
  48 Ge              20   50   18               00 if r[18]>=r[20] goto 50
REG[20] =  i:0
REG[18] =  i:1
  50 Le              17   56   18               00 if r[18]<=r[17] goto 56
REG[17] =  i:3
REG[18] =  i:1
  56 Rewind           3    1    0               00 
  57 Rewind           1    1    0               00 
  58 Rewind           4    1    0               00 
  59 Goto             0   72    0               00 
  72 Goto             0   31    0               00 
  31 Yield            3   73    0               00 next row of 
REG[3] =  i:25
REG[3] =  i:31
  26 SorterNext       6   21    0               00 
  27 EndCoroutine     3    0    0               00 
REG[3] =  i:31
  73 Rewind           2   81    0               00 
  74 IfPos           18   78    1               00 if r[18]>0 then r[18]-=1, goto 78
REG[18] =  i:1
  78 AggValue         1    1    2 sum(1)        00 r[2]=value N=1
  79 Gosub           11   83    0               00 
REG[11] =  i:79
  83 Noop             0    0    0               00 inner-loop subroutine
  84 Column           1    0   21               00 r[21]=.t2
REG[21] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  85 Copy             2   22    0               00 r[22]=r[2]
REG[22] =  NULL
  86 ResultRow       21    2    0               00 output=r[21..22]
REG[21] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
REG[22] =  NULL
  87 Return          11    0    0               00 end inner-loop subroutine
REG[11] =  i:79
  80 Next             1   81    0               00 
  81 ResetSorter      1    0    0               00 
  82 Goto             0   88    0               00 
  88 Halt             0    0    0               00 
SQL: [SELECT t2, sum(t2) OVER (
    PARTITION BY t2
    ORDER BY t2 
    ROWS BETWEEN 1 PRECEDING AND 0 PRECEDING
  ) FROM t1

;]
VDBE Trace:
   0 Init             0  100    0               00 Start at 100
 100 Transaction      0    0    5 1             01 usesStmtJournal=0
 101 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenEphemeral    1    4    0               00 nColumn=4
   3 OpenDup          2    1    0               00 
   4 OpenDup          3    1    0               00 
   5 OpenDup          4    1    0               00 
   6 InitCoroutine    3   31    7               00 
  31 Null             0   12   12               00 r[12..12]=NULL
REG[12] =  NULL
  32 Integer          1   13    0               00 r[13]=1
REG[13] =  i:1
  33 Explain         33    0    0 SCAN SUBQUERY 2 00 
  34 InitCoroutine    3    0    7               00 
  35 Yield            3   82    0               00 next row of 
REG[3] =  i:6
REG[3] =  i:35
   7 Explain          7    0    0 CO-ROUTINE 2  00 
   8 SorterOpen       6    7    0 k(2,B,B)      00 
   9 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
  10 Explain         10    7    0 SCAN TABLE t1 00 
  11 Rewind           0   20    0               00 
  12 Column           0    1    6               00 r[6]=t1.t2
REG[6] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  13 Column           0    1    7               00 r[7]=t1.t2
REG[7] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  14 Column           0    1    8               00 r[8]=t1.t2
REG[8] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  15 Column           0    1    4               00 r[4]=t1.t2
REG[4] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  16 Column           0    1    5               00 r[5]=t1.t2
REG[5] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  17 MakeRecord       4    5   10               00 r[10]=mkrec(r[4..8])
REG[10] =  sx12511[0BA714A714A714A714A714F59EDF069A6129B0F7A32FE417B5|................a).../...]
  18 SorterInsert     6   10    4 5             00 key=r[10]
REG[10] =  sx12511[0BA714A714A714A714A714F59EDF069A6129B0F7A32FE417B5|................a).../...]
  19 Next             0   12    0               01 
  20 Explain         20    7    0 USE TEMP B-TREE FOR ORDER BY 00 
  21 OpenPseudo       7   11    7               00 7 columns in r[11]
  22 SorterSort       6   30    0               00 
  23 SorterData       6   11    7               00 r[11]=data
  24 Column           7    1    9               00 r[9]=
REG[9] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  25 Column           7    4    8               00 r[8]=
REG[8] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  26 Column           7    3    7               00 r[7]=
REG[7] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  27 Column           7    2    6               00 r[6]=
REG[6] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  28 Yield            3    0    0               00 
REG[3] =  i:35
REG[3] =  i:28
  36 Copy             6   15    0               00 r[15]=r[6]
REG[15] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  37 Copy             7   16    0               00 r[16]=r[7]
REG[16] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  38 Copy             8   17    0               00 r[17]=r[8]
REG[17] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  39 Copy             9   18    0               00 r[18]=r[9]
REG[18] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  40 MakeRecord      15    4   19               00 r[19]=mkrec(r[15..18])
REG[19] =  sx10009[09A714A714A714A714F59EDF069A6129B0F7A32FE417B516A5|..............a).../.....]
  41 Compare         16   12    1 k(1,B)        00 r[16] <-> r[12]
REG[16] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
REG[12] =  NULL
  42 Jump            43   45   43               00 
  43 Gosub           23   83    0               00 call flush_partition
REG[23] =  i:43
  83 Rewind           2   91    0               00 
  91 ResetSorter      1    0    0               00 
  92 Return          23    0    0               00 
REG[23] =  i:43
  44 Copy            16   12    0               00 r[12]=r[16]
REG[12] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  45 NewRowid         2   20    0               00 r[20]=rowid
REG[20] =  i:1
  46 Insert           2   19   20               00 intkey=r[20] data=r[19]
REG[19] =  sx10009[09A714A714A714A714F59EDF069A6129B0F7A32FE417B516A5|..............a).../.....]
REG[20] =  i:1
  47 Ne              13   69   20               00 if r[20]!=r[13] goto 69
REG[13] =  i:1
REG[20] =  i:1
  48 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
  49 Integer          1   21    0               00 r[21]=1
REG[21] =  i:1
  50 Integer          0   25    0               00 r[25]=0
REG[25] =  i:0
  51 MustBeInt       21   53    0               00 
REG[21] =  i:1
  52 Ge              25   54   21               00 if r[21]>=r[25] goto 54
REG[25] =  i:0
REG[21] =  i:1
  54 Integer          0   22    0               00 r[22]=0
REG[22] =  i:0
  55 Integer          0   25    0               00 r[25]=0
REG[25] =  i:0
  56 MustBeInt       22   58    0               00 
REG[22] =  i:0
  57 Ge              25   59   22               00 if r[22]>=r[25] goto 59
REG[25] =  i:0
REG[22] =  i:0
  59 Le              21   65   22               00 if r[22]<=r[21] goto 65
REG[21] =  i:1
REG[22] =  i:0
  65 Rewind           3    1    0               00 
  66 Rewind           1    1    0               00 
  67 Rewind           4    1    0               00 
  68 Goto             0   81    0               00 
  81 Goto             0   35    0               00 
  35 Yield            3   82    0               00 next row of 
REG[3] =  i:28
REG[3] =  i:35
  29 SorterNext       6   23    0               00 
  30 EndCoroutine     3    0    0               00 
REG[3] =  i:35
  82 Integer         92   23    0               00 r[23]=92
REG[23] =  i:92
  83 Rewind           2   91    0               00 
  84 IfPos           22   88    1               00 if r[22]>0 then r[22]-=1, goto 88
REG[22] =  i:0
  85 Column           4    3   24               00 r[24]=
REG[24] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  86 AggStep          0   24    1 sum(1)        01 accum=r[1] step(r[24])
REG[24] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  87 Next             4   88    0               00 
  88 AggValue         1    1    2 sum(1)        00 r[2]=value N=1
  89 Gosub           14   94    0               00 
REG[14] =  i:89
  94 Noop             0    0    0               00 inner-loop subroutine
  95 Column           1    0   26               00 r[26]=.t2
REG[26] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  96 Copy             2   27    0               00 r[27]=r[2]
REG[27] =  r:0
  97 ResultRow       26    2    0               00 output=r[26..27]
REG[26] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
REG[27] =  r:0
  98 Return          14    0    0               00 end inner-loop subroutine
REG[14] =  i:89
  90 Next             1   91    0               00 
  91 ResetSorter      1    0    0               00 
  92 Return          23    0    0               00 
REG[23] =  i:92
  93 Goto             0   99    0               00 
  99 Halt             0    0    0               00 
SQL: [SELECT t2, sum(t2) OVER (
    PARTITION BY t2
    ORDER BY t2 
    ROWS BETWEEN UNBOUNDED PRECEDING AND 2 PRECEDING
  ) FROM t1

;]
VDBE Trace:
   0 Init             0   85    0               00 Start at 85
  85 Transaction      0    0    5 1             01 usesStmtJournal=0
  86 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenEphemeral    1    4    0               00 nColumn=4
   3 OpenDup          2    1    0               00 
   4 OpenDup          3    1    0               00 
   5 OpenDup          4    1    0               00 
   6 InitCoroutine    3   31    7               00 
  31 Null             0   12   12               00 r[12..12]=NULL
REG[12] =  NULL
  32 Integer          1   13    0               00 r[13]=1
REG[13] =  i:1
  33 Explain         33    0    0 SCAN SUBQUERY 2 00 
  34 InitCoroutine    3    0    7               00 
  35 Yield            3   66    0               00 next row of 
REG[3] =  i:6
REG[3] =  i:35
   7 Explain          7    0    0 CO-ROUTINE 2  00 
   8 SorterOpen       6    7    0 k(2,B,B)      00 
   9 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
  10 Explain         10    7    0 SCAN TABLE t1 00 
  11 Rewind           0   20    0               00 
  12 Column           0    1    6               00 r[6]=t1.t2
REG[6] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  13 Column           0    1    7               00 r[7]=t1.t2
REG[7] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  14 Column           0    1    8               00 r[8]=t1.t2
REG[8] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  15 Column           0    1    4               00 r[4]=t1.t2
REG[4] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  16 Column           0    1    5               00 r[5]=t1.t2
REG[5] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  17 MakeRecord       4    5   10               00 r[10]=mkrec(r[4..8])
REG[10] =  sx12511[0BA714A714A714A714A714F59EDF069A6129B0F7A32FE417B5|................a).../...]
  18 SorterInsert     6   10    4 5             00 key=r[10]
REG[10] =  sx12511[0BA714A714A714A714A714F59EDF069A6129B0F7A32FE417B5|................a).../...]
  19 Next             0   12    0               01 
  20 Explain         20    7    0 USE TEMP B-TREE FOR ORDER BY 00 
  21 OpenPseudo       7   11    7               00 7 columns in r[11]
  22 SorterSort       6   30    0               00 
  23 SorterData       6   11    7               00 r[11]=data
  24 Column           7    1    9               00 r[9]=
REG[9] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  25 Column           7    4    8               00 r[8]=
REG[8] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  26 Column           7    3    7               00 r[7]=
REG[7] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  27 Column           7    2    6               00 r[6]=
REG[6] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  28 Yield            3    0    0               00 
REG[3] =  i:35
REG[3] =  i:28
  36 Copy             6   15    0               00 r[15]=r[6]
REG[15] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  37 Copy             7   16    0               00 r[16]=r[7]
REG[16] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  38 Copy             8   17    0               00 r[17]=r[8]
REG[17] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  39 Copy             9   18    0               00 r[18]=r[9]
REG[18] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  40 MakeRecord      15    4   19               00 r[19]=mkrec(r[15..18])
REG[19] =  sx10009[09A714A714A714A714F59EDF069A6129B0F7A32FE417B516A5|..............a).../.....]
  41 Compare         16   12    1 k(1,B)        00 r[16] <-> r[12]
REG[16] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
REG[12] =  NULL
  42 Jump            43   45   43               00 
  43 Gosub           22   67    0               00 call flush_partition
REG[22] =  i:43
  67 Rewind           2   76    0               00 
  76 ResetSorter      1    0    0               00 
  77 Return          22    0    0               00 
REG[22] =  i:43
  44 Copy            16   12    0               00 r[12]=r[16]
REG[12] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  45 NewRowid         2   20    0               00 r[20]=rowid
REG[20] =  i:1
  46 Insert           2   19   20               00 intkey=r[20] data=r[19]
REG[19] =  sx10009[09A714A714A714A714F59EDF069A6129B0F7A32FE417B516A5|..............a).../.....]
REG[20] =  i:1
  47 Ne              13   57   20               00 if r[20]!=r[13] goto 57
REG[13] =  i:1
REG[20] =  i:1
  48 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
  49 Integer          2   21    0               00 r[21]=2
REG[21] =  i:2
  50 Integer          0   24    0               00 r[24]=0
REG[24] =  i:0
  51 MustBeInt       21   53    0               00 
REG[21] =  i:2
  52 Ge              24   54   21               00 if r[21]>=r[24] goto 54
REG[24] =  i:0
REG[21] =  i:2
  54 Rewind           1    1    0               00 
  55 Rewind           4    1    0               00 
  56 Goto             0   65    0               00 
  65 Goto             0   35    0               00 
  35 Yield            3   66    0               00 next row of 
REG[3] =  i:28
REG[3] =  i:35
  29 SorterNext       6   23    0               00 
  30 EndCoroutine     3    0    0               00 
REG[3] =  i:35
  66 Integer         77   22    0               00 r[22]=77
REG[22] =  i:77
  67 Rewind           2   76    0               00 
  68 IfPos           21   73    1               00 if r[21]>0 then r[21]-=1, goto 73
REG[21] =  i:2
  73 AggValue         1    1    2 sum(1)        00 r[2]=value N=1
  74 Gosub           14   79    0               00 
REG[14] =  i:74
  79 Noop             0    0    0               00 inner-loop subroutine
  80 Column           1    0   25               00 r[25]=.t2
REG[25] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  81 Copy             2   26    0               00 r[26]=r[2]
REG[26] =  NULL
  82 ResultRow       25    2    0               00 output=r[25..26]
REG[25] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
REG[26] =  NULL
  83 Return          14    0    0               00 end inner-loop subroutine
REG[14] =  i:74
  75 Next             1   76    0               00 
  76 ResetSorter      1    0    0               00 
  77 Return          22    0    0               00 
REG[22] =  i:77
  78 Goto             0   84    0               00 
  84 Halt             0    0    0               00 
SQL: [SELECT x, sum(x) OVER (
    ORDER BY x 
    ROWS BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING
  ) FROM t1

;]
VDBE Trace:
   0 Init             0   72    0               00 Start at 72
  72 Transaction      0    0    5 1             01 usesStmtJournal=0
  73 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenEphemeral    1    3    0               00 nColumn=3
   3 OpenDup          2    1    0               00 
   4 OpenDup          3    1    0               00 
   5 OpenDup          4    1    0               00 
   6 InitCoroutine    3   18    7               00 
  18 Integer          1    7    0               00 r[7]=1
REG[7] =  i:1
  19 Explain         19    0    0 SCAN SUBQUERY 2 00 
  20 InitCoroutine    3    0    7               00 
  21 Yield            3   43    0               00 next row of 
REG[3] =  i:6
REG[3] =  i:21
   7 Explain          7    0    0 CO-ROUTINE 2  00 
   8 Noop             6    5    0               00 
   9 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
  10 Explain         10    7    0 SCAN TABLE t1 00 
  11 Rewind           0   17    0               00 
  12 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:2
  13 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:2
  14 Rowid            0    6    0               00 r[6]=rowid
REG[6] =  i:2
  15 Yield            3    0    0               00 
REG[3] =  i:21
REG[3] =  i:15
  22 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:2
  23 Copy             5   10    0               00 r[10]=r[5]
REG[10] =  i:2
  24 Copy             6   11    0               00 r[11]=r[6]
REG[11] =  i:2
  25 MakeRecord       9    3   12               00 r[12]=mkrec(r[9..11])
REG[12] =  sx7[04010101020202|.......]
  26 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  27 Insert           2   12   13               00 intkey=r[13] data=r[12]
REG[12] =  sx7[04010101020202|.......]
REG[13] =  i:1
  28 Ne               7   39   13               00 if r[13]!=r[7] goto 39
REG[7] =  i:1
REG[13] =  i:1
  29 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
  30 Integer          1   14    0               00 r[14]=1
REG[14] =  i:1
  31 Integer          0   16    0               00 r[16]=0
REG[16] =  i:0
  32 MustBeInt       14   34    0               00 
REG[14] =  i:1
  33 Ge              16   35   14               00 if r[14]>=r[16] goto 35
REG[16] =  i:0
REG[14] =  i:1
  35 Rewind           3    1    0               00 
  36 Rewind           1    1    0               00 
  37 Rewind           4    1    0               00 
  38 Goto             0   42    0               00 
  42 Goto             0   21    0               00 
  21 Yield            3   43    0               00 next row of 
REG[3] =  i:15
REG[3] =  i:21
  16 Next             0   12    0               01 
  17 EndCoroutine     3    0    0               00 
REG[3] =  i:21
  43 Rewind           2   64    0               00 
  44 Column           4    2   15               00 r[15]=
REG[15] =  i:2
  45 AggStep          0   15    1 sum(1)        01 accum=r[1] step(r[15])
REG[15] =  i:2
  46 Next             4   47    0               00 
  47 IfPos           14   53    1               00 if r[14]>0 then r[14]-=1, goto 53
REG[14] =  i:1
  53 Column           3    2   15               00 r[15]=
REG[15] =  i:2
  54 AggInverse       1   15    1 sum(1)        01 accum=r[1] inverse(r[15])
REG[15] =  i:2
  55 Next             3   57    0               00 
  56 Goto             0   58    0               00 
  58 AggValue         1    1    2 sum(1)        00 r[2]=value N=1
  59 Gosub            8   66    0               00 
REG[8] =  i:59
  66 Noop             0    0    0               00 inner-loop subroutine
  67 Column           1    0   17               00 r[17]=.x
REG[17] =  i:2
  68 Copy             2   18    0               00 r[18]=r[2]
REG[18] =  NULL
  69 ResultRow       17    2    0               00 output=r[17..18]
REG[17] =  i:2
REG[18] =  NULL
  70 Return           8    0    0               00 end inner-loop subroutine
REG[8] =  i:59
  60 Delete           1    0    0               02 
  61 Next             1   63    0               00 
  62 Goto             0   64    0               00 
  64 ResetSorter      1    0    0               00 
  65 Goto             0   71    0               00 
  71 Halt             0    0    0               00 
SQL: [SELECT x, sum(x) OVER (
    PARTITION BY x
    ORDER BY x 
    ROWS BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING
  ) FROM t1

;]
VDBE Trace:
   0 Init             0   81    0               00 Start at 81
  81 Transaction      0    0    5 1             01 usesStmtJournal=0
  82 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenEphemeral    1    4    0               00 nColumn=4
   3 OpenDup          2    1    0               00 
   4 OpenDup          3    1    0               00 
   5 OpenDup          4    1    0               00 
   6 InitCoroutine    3   19    7               00 
  19 Null             0    8    8               00 r[8..8]=NULL
REG[8] =  NULL
  20 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  21 Explain         21    0    0 SCAN SUBQUERY 2 00 
  22 InitCoroutine    3    0    7               00 
  23 Yield            3   50    0               00 next row of 
REG[3] =  i:6
REG[3] =  i:23
   7 Explain          7    0    0 CO-ROUTINE 2  00 
   8 Noop             6    7    0               00 
   9 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
  10 Explain         10    7    0 SCAN TABLE t1 00 
  11 Rewind           0   18    0               00 
  12 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:2
  13 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:2
  14 Rowid            0    6    0               00 r[6]=rowid
REG[6] =  i:2
  15 Rowid            0    7    0               00 r[7]=rowid
REG[7] =  i:2
  16 Yield            3    0    0               00 
REG[3] =  i:23
REG[3] =  i:16
  24 Copy             4   11    0               00 r[11]=r[4]
REG[11] =  i:2
  25 Copy             5   12    0               00 r[12]=r[5]
REG[12] =  i:2
  26 Copy             6   13    0               00 r[13]=r[6]
REG[13] =  i:2
  27 Copy             7   14    0               00 r[14]=r[7]
REG[14] =  i:2
  28 MakeRecord      11    4   15               00 r[15]=mkrec(r[11..14])
REG[15] =  sx9[050101010102020202|.........]
  29 Compare         12    8    1 k(1,B)        00 r[12] <-> r[8]
REG[12] =  i:2
REG[8] =  NULL
  30 Jump            31   33   31               00 
  31 Gosub           18   51    0               00 call flush_partition
REG[18] =  i:31
  51 Rewind           2   72    0               00 
  72 ResetSorter      1    0    0               00 
  73 Return          18    0    0               00 
REG[18] =  i:31
  32 Copy            12    8    0               00 r[8]=r[12]
REG[8] =  i:2
  33 NewRowid         2   16    0               00 r[16]=rowid
REG[16] =  i:1
  34 Insert           2   15   16               00 intkey=r[16] data=r[15]
REG[15] =  sx9[050101010102020202|.........]
REG[16] =  i:1
  35 Ne               9   46   16               00 if r[16]!=r[9] goto 46
REG[9] =  i:1
REG[16] =  i:1
  36 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
  37 Integer          1   17    0               00 r[17]=1
REG[17] =  i:1
  38 Integer          0   20    0               00 r[20]=0
REG[20] =  i:0
  39 MustBeInt       17   41    0               00 
REG[17] =  i:1
  40 Ge              20   42   17               00 if r[17]>=r[20] goto 42
REG[20] =  i:0
REG[17] =  i:1
  42 Rewind           3    1    0               00 
  43 Rewind           1    1    0               00 
  44 Rewind           4    1    0               00 
  45 Goto             0   49    0               00 
  49 Goto             0   23    0               00 
  23 Yield            3   50    0               00 next row of 
REG[3] =  i:16
REG[3] =  i:23
  17 Next             0   12    0               01 
  18 EndCoroutine     3    0    0               00 
REG[3] =  i:23
  50 Integer         73   18    0               00 r[18]=73
REG[18] =  i:73
  51 Rewind           2   72    0               00 
  52 Column           4    3   19               00 r[19]=
REG[19] =  i:2
  53 AggStep          0   19    1 sum(1)        01 accum=r[1] step(r[19])
REG[19] =  i:2
  54 Next             4   55    0               00 
  55 IfPos           17   61    1               00 if r[17]>0 then r[17]-=1, goto 61
REG[17] =  i:1
  61 Column           3    3   19               00 r[19]=
REG[19] =  i:2
  62 AggInverse       1   19    1 sum(1)        01 accum=r[1] inverse(r[19])
REG[19] =  i:2
  63 Next             3   65    0               00 
  64 Goto             0   66    0               00 
  66 AggValue         1    1    2 sum(1)        00 r[2]=value N=1
  67 Gosub           10   75    0               00 
REG[10] =  i:67
  75 Noop             0    0    0               00 inner-loop subroutine
  76 Column           1    0   21               00 r[21]=.x
REG[21] =  i:2
  77 Copy             2   22    0               00 r[22]=r[2]
REG[22] =  NULL
  78 ResultRow       21    2    0               00 output=r[21..22]
REG[21] =  i:2
REG[22] =  NULL
  79 Return          10    0    0               00 end inner-loop subroutine
REG[10] =  i:67
  68 Delete           1    0    0               02 
  69 Next             1   71    0               00 
  70 Goto             0   72    0               00 
  72 ResetSorter      1    0    0               00 
  73 Return          18    0    0               00 
REG[18] =  i:73
  74 Goto             0   80    0               00 
  80 Halt             0    0    0               00 
SQL: [SELECT x, sum(x) OVER (
    PARTITION BY x
    ORDER BY x 
    ROWS BETWEEN CURRENT ROW AND CURRENT ROW
  ) FROM t1

;]
VDBE Trace:
   0 Init             0   75    0               00 Start at 75
  75 Transaction      0    0    5 1             01 usesStmtJournal=0
  76 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenEphemeral    1    4    0               00 nColumn=4
   3 OpenDup          2    1    0               00 
   4 OpenDup          3    1    0               00 
   5 OpenDup          4    1    0               00 
   6 InitCoroutine    3   19    7               00 
  19 Null             0    8    8               00 r[8..8]=NULL
REG[8] =  NULL
  20 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  21 Explain         21    0    0 SCAN SUBQUERY 2 00 
  22 InitCoroutine    3    0    7               00 
  23 Yield            3   52    0               00 next row of 
REG[3] =  i:6
REG[3] =  i:23
   7 Explain          7    0    0 CO-ROUTINE 2  00 
   8 Noop             6    7    0               00 
   9 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
  10 Explain         10    7    0 SCAN TABLE t1 00 
  11 Rewind           0   18    0               00 
  12 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:2
  13 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:2
  14 Rowid            0    6    0               00 r[6]=rowid
REG[6] =  i:2
  15 Rowid            0    7    0               00 r[7]=rowid
REG[7] =  i:2
  16 Yield            3    0    0               00 
REG[3] =  i:23
REG[3] =  i:16
  24 Copy             4   11    0               00 r[11]=r[4]
REG[11] =  i:2
  25 Copy             5   12    0               00 r[12]=r[5]
REG[12] =  i:2
  26 Copy             6   13    0               00 r[13]=r[6]
REG[13] =  i:2
  27 Copy             7   14    0               00 r[14]=r[7]
REG[14] =  i:2
  28 MakeRecord      11    4   15               00 r[15]=mkrec(r[11..14])
REG[15] =  sx9[050101010102020202|.........]
  29 Compare         12    8    1 k(1,B)        00 r[12] <-> r[8]
REG[12] =  i:2
REG[8] =  NULL
  30 Jump            31   33   31               00 
  31 Gosub           17   53    0               00 call flush_partition
REG[17] =  i:31
  53 Rewind           2   66    0               00 
  66 ResetSorter      1    0    0               00 
  67 Return          17    0    0               00 
REG[17] =  i:31
  32 Copy            12    8    0               00 r[8]=r[12]
REG[8] =  i:2
  33 NewRowid         2   16    0               00 r[16]=rowid
REG[16] =  i:1
  34 Insert           2   15   16               00 intkey=r[16] data=r[15]
REG[15] =  sx9[050101010102020202|.........]
REG[16] =  i:1
  35 Ne               9   41   16               00 if r[16]!=r[9] goto 41
REG[9] =  i:1
REG[16] =  i:1
  36 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
  37 Rewind           3    1    0               00 
  38 Rewind           1    1    0               00 
  39 Rewind           4    1    0               00 
  40 Goto             0   51    0               00 
  51 Goto             0   23    0               00 
  23 Yield            3   52    0               00 next row of 
REG[3] =  i:16
REG[3] =  i:23
  17 Next             0   12    0               01 
  18 EndCoroutine     3    0    0               00 
REG[3] =  i:23
  52 Integer         67   17    0               00 r[17]=67
REG[17] =  i:67
  53 Rewind           2   66    0               00 
  54 Column           4    3   18               00 r[18]=
REG[18] =  i:2
  55 AggStep          0   18    1 sum(1)        01 accum=r[1] step(r[18])
REG[18] =  i:2
  56 Next             4   57    0               00 
  57 AggValue         1    1    2 sum(1)        00 r[2]=value N=1
  58 Gosub           10   69    0               00 
REG[10] =  i:58
  69 Noop             0    0    0               00 inner-loop subroutine
  70 Column           1    0   19               00 r[19]=.x
REG[19] =  i:2
  71 Copy             2   20    0               00 r[20]=r[2]
REG[20] =  i:2
  72 ResultRow       19    2    0               00 output=r[19..20]
REG[19] =  i:2
REG[20] =  i:2
  73 Return          10    0    0               00 end inner-loop subroutine
REG[10] =  i:58
  59 Next             1   61    0               00 
  60 Goto             0   66    0               00 
  66 ResetSorter      1    0    0               00 
  67 Return          17    0    0               00 
REG[17] =  i:67
  68 Goto             0   74    0               00 
  74 Halt             0    0    0               00 
SQL: [SELECT t2, sum(x) OVER (
    ORDER BY x 
    RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING
  ) FROM t1

;]
VDBE Trace:
   0 Init             0   85    0               00 Start at 85
  85 Transaction      0    0    5 1             01 usesStmtJournal=0
  86 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenEphemeral    1    3    0               00 nColumn=3
   3 OpenDup          2    1    0               00 
   4 OpenDup          3    1    0               00 
   5 OpenDup          4    1    0               00 
   6 InitCoroutine    3   18    7               00 
  18 Integer          1    7    0               00 r[7]=1
REG[7] =  i:1
  19 Explain         19    0    0 SCAN SUBQUERY 2 00 
  20 InitCoroutine    3    0    7               00 
  21 Yield            3   50    0               00 next row of 
REG[3] =  i:6
REG[3] =  i:21
   7 Explain          7    0    0 CO-ROUTINE 2  00 
   8 Noop             6    5    0               00 
   9 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
  10 Explain         10    7    0 SCAN TABLE t1 00 
  11 Rewind           0   17    0               00 
  12 Column           0    1    4               00 r[4]=t1.t2
REG[4] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  13 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:2
  14 Rowid            0    6    0               00 r[6]=rowid
REG[6] =  i:2
  15 Yield            3    0    0               00 
REG[3] =  i:21
REG[3] =  i:15
  22 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  23 Copy             5   10    0               00 r[10]=r[5]
REG[10] =  i:2
  24 Copy             6   11    0               00 r[11]=r[6]
REG[11] =  i:2
  25 MakeRecord       9    3   12               00 r[12]=mkrec(r[9..11])
REG[12] =  sx2507[05A7140101F59EDF069A6129B0F7A32FE417B516A504229826|..........a).../......".&]
  26 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  27 Insert           2   12   13               00 intkey=r[13] data=r[12]
REG[12] =  sx2507[05A7140101F59EDF069A6129B0F7A32FE417B516A504229826|..........a).../......".&]
REG[13] =  i:1
  28 Ne               7   38   13               00 if r[13]!=r[7] goto 38
REG[7] =  i:1
REG[13] =  i:1
  29 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
  30 Rewind           3    1    0               00 
  31 Rewind           1    1    0               00 
  32 Rewind           4    1    0               00 
  33 Copy            10   14    0               00 r[14]=r[10]
REG[14] =  i:2
  34 Copy            14   15    0               00 r[15]=r[14]
REG[15] =  i:2
  35 Copy            14   16    0               00 r[16]=r[14]
REG[16] =  i:2
  36 Copy            14   17    0               00 r[17]=r[14]
REG[17] =  i:2
  37 Goto             0   49    0               00 
  49 Goto             0   21    0               00 
  21 Yield            3   50    0               00 next row of 
REG[3] =  i:15
REG[3] =  i:21
  16 Next             0   12    0               01 
  17 EndCoroutine     3    0    0               00 
REG[3] =  i:21
  50 Rewind           2   77    0               00 
  51 Column           4    2   18               00 r[18]=
REG[18] =  i:2
  52 AggStep          0   18    1 sum(1)        01 accum=r[1] step(r[18])
REG[18] =  i:2
  53 Next             4   55    0               00 
  54 Goto             0   59    0               00 
  59 AggValue         1    1    2 sum(1)        00 r[2]=value N=1
  60 Gosub            8   79    0               00 
REG[8] =  i:60
  79 Noop             0    0    0               00 inner-loop subroutine
  80 Column           1    0   20               00 r[20]=.t2
REG[20] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  81 Copy             2   21    0               00 r[21]=r[2]
REG[21] =  i:2
  82 ResultRow       20    2    0               00 output=r[20..21]
REG[20] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
REG[21] =  i:2
  83 Return           8    0    0               00 end inner-loop subroutine
REG[8] =  i:60
  61 Next             1   63    0               00 
  62 Goto             0   77    0               00 
  77 ResetSorter      1    0    0               00 
  78 Goto             0   84    0               00 
  84 Halt             0    0    0               00 
SQL: [SELECT x, sum(x) OVER (
    ORDER BY x
    ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
  ) FROM t1

;]
VDBE Trace:
   0 Init             0   55    0               00 Start at 55
  55 Transaction      0    0    5 1             01 usesStmtJournal=0
  56 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenEphemeral    1    3    0               00 nColumn=3
   3 OpenDup          2    1    0               00 
   4 OpenDup          3    1    0               00 
   5 OpenDup          4    1    0               00 
   6 InitCoroutine    3   18    7               00 
  18 Integer          1    7    0               00 r[7]=1
REG[7] =  i:1
  19 Explain         19    0    0 SCAN SUBQUERY 2 00 
  20 InitCoroutine    3    0    7               00 
  21 Yield            3   37    0               00 next row of 
REG[3] =  i:6
REG[3] =  i:21
   7 Explain          7    0    0 CO-ROUTINE 2  00 
   8 Noop             6    5    0               00 
   9 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
  10 Explain         10    7    0 SCAN TABLE t1 00 
  11 Rewind           0   17    0               00 
  12 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:2
  13 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:2
  14 Rowid            0    6    0               00 r[6]=rowid
REG[6] =  i:2
  15 Yield            3    0    0               00 
REG[3] =  i:21
REG[3] =  i:15
  22 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:2
  23 Copy             5   10    0               00 r[10]=r[5]
REG[10] =  i:2
  24 Copy             6   11    0               00 r[11]=r[6]
REG[11] =  i:2
  25 MakeRecord       9    3   12               00 r[12]=mkrec(r[9..11])
REG[12] =  sx7[04010101020202|.......]
  26 NewRowid         2   13    0               00 r[13]=rowid
REG[13] =  i:1
  27 Insert           2   12   13               00 intkey=r[13] data=r[12]
REG[12] =  sx7[04010101020202|.......]
REG[13] =  i:1
  28 Ne               7   33   13               00 if r[13]!=r[7] goto 33
REG[7] =  i:1
REG[13] =  i:1
  29 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
  30 Rewind           1    1    0               00 
  31 Rewind           4    1    0               00 
  32 Goto             0   36    0               00 
  36 Goto             0   21    0               00 
  21 Yield            3   37    0               00 next row of 
REG[3] =  i:15
REG[3] =  i:21
  16 Next             0   12    0               01 
  17 EndCoroutine     3    0    0               00 
REG[3] =  i:21
  37 Rewind           2   47    0               00 
  38 Column           4    2   14               00 r[14]=
REG[14] =  i:2
  39 AggStep          0   14    1 sum(1)        01 accum=r[1] step(r[14])
REG[14] =  i:2
  40 Next             4   41    0               00 
  41 AggValue         1    1    2 sum(1)        00 r[2]=value N=1
  42 Gosub            8   49    0               00 
REG[8] =  i:42
  49 Noop             0    0    0               00 inner-loop subroutine
  50 Column           1    0   15               00 r[15]=.x
REG[15] =  i:2
  51 Copy             2   16    0               00 r[16]=r[2]
REG[16] =  i:2
  52 ResultRow       15    2    0               00 output=r[15..16]
REG[15] =  i:2
REG[16] =  i:2
  53 Return           8    0    0               00 end inner-loop subroutine
REG[8] =  i:42
  43 Delete           1    0    0               02 
  44 Next             1   46    0               00 
  45 Goto             0   47    0               00 
  47 ResetSorter      1    0    0               00 
  48 Goto             0   54    0               00 
  54 Halt             0    0    0               00 
SQL: [;
;SELECT t2, sum(t2) OVER (
    ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
  ) FROM t1 ORDER BY 1, 2;]
VDBE Trace:
   0 Init             0  113    0               00 Start at 113
 113 Transaction      0    0    5 1             01 usesStmtJournal=0
 114 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenEphemeral    1    4    0               00 nColumn=4
   3 OpenDup          2    1    0               00 
   4 OpenDup          3    1    0               00 
   5 OpenDup          4    1    0               00 
   6 InitCoroutine    3   65    7               00 
  65 SorterOpen      11    5    0 k(2,B,B)      00 
  66 Integer          1   24    0               00 r[24]=1
REG[24] =  i:1
  67 Explain         67    0    0 SCAN SUBQUERY 2 00 
  68 InitCoroutine    3    0    7               00 
  69 Yield            3   86    0               00 next row of 
REG[3] =  i:6
REG[3] =  i:69
   7 Explain          7    0    0 CO-ROUTINE 2  00 
   8 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
   9 OpenEphemeral    6    4    0               00 nColumn=4
  10 OpenDup          7    6    0               00 
  11 OpenDup          8    6    0               00 
  12 OpenDup          9    6    0               00 
  13 InitCoroutine    6   25   14               00 
  25 Integer          1   11    0               00 r[11]=1
REG[11] =  i:1
  26 Explain         26    7    0 SCAN SUBQUERY 3 00 
  27 InitCoroutine    6    0   14               00 
  28 Yield            6   45    0               00 next row of 
REG[6] =  i:13
REG[6] =  i:28
  14 Explain         14    7    0 CO-ROUTINE 3  00 
  15 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
  16 Explain         16   14    0 SCAN TABLE t1 00 
  17 Rewind           0   24    0               00 
  18 Column           0    1    7               00 r[7]=t1.t2
REG[7] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  19 Column           0    1    8               00 r[8]=t1.t2
REG[8] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  20 Column           0    1    9               00 r[9]=t1.t2
REG[9] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  21 Column           0    1   10               00 r[10]=t1.t2
REG[10] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  22 Yield            6    0    0               00 
REG[6] =  i:28
REG[6] =  i:22
  29 Copy             7   13    0               00 r[13]=r[7]
REG[13] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  30 Copy             8   14    0               00 r[14]=r[8]
REG[14] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  31 Copy             9   15    0               00 r[15]=r[9]
REG[15] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  32 Copy            10   16    0               00 r[16]=r[10]
REG[16] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  33 MakeRecord      13    4   17               00 r[17]=mkrec(r[13..16])
REG[17] =  sx10009[09A714A714A714A714F59EDF069A6129B0F7A32FE417B516A5|..............a).../.....]
  34 NewRowid         7   18    0               00 r[18]=rowid
REG[18] =  i:1
  35 Insert           7   17   18               00 intkey=r[18] data=r[17]
REG[17] =  sx10009[09A714A714A714A714F59EDF069A6129B0F7A32FE417B516A5|..............a).../.....]
REG[18] =  i:1
  36 Ne              11   41   18               00 if r[18]!=r[11] goto 41
REG[11] =  i:1
REG[18] =  i:1
  37 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  38 Rewind           6    1    0               00 
  39 Rewind           9    1    0               00 
  40 Goto             0   44    0               00 
  44 Goto             0   28    0               00 
  28 Yield            6   45    0               00 next row of 
REG[6] =  i:22
REG[6] =  i:28
  23 Next             0   18    0               01 
  24 EndCoroutine     6    0    0               00 
REG[6] =  i:28
  45 Rewind           7   55    0               00 
  46 Column           9    3   19               00 r[19]=
REG[19] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  47 AggStep          0   19    4 sum(1)        01 accum=r[4] step(r[19])
REG[19] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  48 Next             9   49    0               00 
  49 AggValue         4    1    5 sum(1)        00 r[5]=value N=1
  50 Gosub           12   57    0               00 
REG[12] =  i:50
  57 Noop             0    0    0               00 inner-loop subroutine
  58 Column           6    0   20               00 r[20]=.t2
REG[20] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  59 Column           6    1   21               00 r[21]=.t2:1
REG[21] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  60 Copy             5   22    0               00 r[22]=r[5]
REG[22] =  r:0
  61 Column           6    2   23               00 r[23]=.t2:2
REG[23] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  62 Yield            3    0    0               00 
REG[3] =  i:69
REG[3] =  i:62
  70 Copy            20   26    0               00 r[26]=r[20]
REG[26] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  71 Copy            21   27    0               00 r[27]=r[21]
REG[27] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  72 Copy            22   28    0               00 r[28]=r[22]
REG[28] =  r:0
  73 Copy            23   29    0               00 r[29]=r[23]
REG[29] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  74 MakeRecord      26    4   30               00 r[30]=mkrec(r[26..29])
REG[30] =  sx7516[08A714A71407A714F59EDF069A6129B0F7A32FE417B516A504|.............a).../......]
  75 NewRowid         2   31    0               00 r[31]=rowid
REG[31] =  i:1
  76 Insert           2   30   31               00 intkey=r[31] data=r[30]
REG[30] =  sx7516[08A714A71407A714F59EDF069A6129B0F7A32FE417B516A504|.............a).../......]
REG[31] =  i:1
  77 Ne              24   82   31               00 if r[31]!=r[24] goto 82
REG[24] =  i:1
REG[31] =  i:1
  78 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
  79 Rewind           1    1    0               00 
  80 Rewind           4    1    0               00 
  81 Goto             0   85    0               00 
  85 Goto             0   69    0               00 
  69 Yield            3   86    0               00 next row of 
REG[3] =  i:62
REG[3] =  i:69
  63 Return          12    0    0               00 end inner-loop subroutine
REG[12] =  i:50
  51 Delete           6    0    0               02 
  52 Next             6   54    0               00 
  53 Goto             0   55    0               00 
  55 ResetSorter      6    0    0               00 
  56 Goto             0   64    0               00 
  64 EndCoroutine     3    0    0               00 
REG[3] =  i:69
  86 Rewind           2   96    0               00 
  87 Column           4    3   32               00 r[32]=
REG[32] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  88 AggStep          0   32    1 sum(1)        01 accum=r[1] step(r[32])
REG[32] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  89 Next             4   90    0               00 
  90 AggValue         1    1    2 sum(1)        00 r[2]=value N=1
  91 Gosub           25   98    0               00 
REG[25] =  i:91
  98 Noop             0    0    0               00 inner-loop subroutine
  99 Column           1    1   33               00 r[33]=.t2:1
REG[33] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
 100 Column           1    2   34               00 r[34]=.column3
REG[34] =  r:0
 101 MakeRecord      33    2   37               00 r[37]=mkrec(r[33..34])
REG[37] =  sx2512[04A71407F59EDF069A6129B0F7A32FE417B516A50422982618|.........a).../......".&.]
 102 SorterInsert    11   37   33 2             00 key=r[37]
REG[37] =  sx2512[04A71407F59EDF069A6129B0F7A32FE417B516A50422982618|.........a).../......".&.]
 103 Return          25    0    0               00 end inner-loop subroutine
REG[25] =  i:91
  92 Delete           1    0    0               02 
  93 Next             1   95    0               00 
  94 Goto             0   96    0               00 
  96 ResetSorter      1    0    0               00 
  97 Goto             0  104    0               00 
 104 Explain        104    0    0 USE TEMP B-TREE FOR ORDER BY 00 
 105 OpenPseudo      12   38    5               00 5 columns in r[38]
 106 SorterSort      11  112    0               00 
 107 SorterData      11   38   12               00 r[38]=data
 108 Column          12    1   36               00 r[36]=sum(t2) OVER (
    ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
  )
REG[36] =  r:0
 109 Column          12    0   35               00 r[35]=t2
REG[35] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
 110 ResultRow       35    2    0               00 output=r[35..36]
REG[35] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
REG[36] =  r:0
 111 SorterNext      11  107    0               00 
 112 Halt             0    0    0               00 
SQL: [;
;SELECT x, sum(x) OVER (
    ORDER BY x
    ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
  ) FROM t1 ORDER BY 1, 2;]
VDBE Trace:
   0 Init             0  120    0               00 Start at 120
 120 Transaction      0    0    5 1             01 usesStmtJournal=0
 121 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenEphemeral    1    5    0               00 nColumn=5
   3 OpenDup          2    1    0               00 
   4 OpenDup          3    1    0               00 
   5 OpenDup          4    1    0               00 
   6 InitCoroutine    3   71    7               00 
  71 SorterOpen      12    5    0 k(2,B,B)      00 
  72 Integer          1   29    0               00 r[29]=1
REG[29] =  i:1
  73 Explain         73    0    0 SCAN SUBQUERY 2 00 
  74 InitCoroutine    3    0    7               00 
  75 Yield            3   93    0               00 next row of 
REG[3] =  i:6
REG[3] =  i:75
   7 Explain          7    0    0 CO-ROUTINE 2  00 
   8 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
   9 OpenEphemeral    6    6    0               00 nColumn=6
  10 OpenDup          7    6    0               00 
  11 OpenDup          8    6    0               00 
  12 OpenDup          9    6    0               00 
  13 InitCoroutine    6   28   14               00 
  28 Integer          1   13    0               00 r[13]=1
REG[13] =  i:1
  29 Explain         29    7    0 SCAN SUBQUERY 3 00 
  30 InitCoroutine    6    0   14               00 
  31 Yield            6   50    0               00 next row of 
REG[6] =  i:13
REG[6] =  i:31
  14 Explain         14    7    0 CO-ROUTINE 3  00 
  15 Noop            11    8    0               00 
  16 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
  17 Explain         17   14    0 SCAN TABLE t1 00 
  18 Rewind           0   27    0               00 
  19 Rowid            0    7    0               00 r[7]=rowid
REG[7] =  i:2
  20 Rowid            0    8    0               00 r[8]=rowid
REG[8] =  i:2
  21 Rowid            0    9    0               00 r[9]=rowid
REG[9] =  i:2
  22 Rowid            0   10    0               00 r[10]=rowid
REG[10] =  i:2
  23 Rowid            0   11    0               00 r[11]=rowid
REG[11] =  i:2
  24 Rowid            0   12    0               00 r[12]=rowid
REG[12] =  i:2
  25 Yield            6    0    0               00 
REG[6] =  i:31
REG[6] =  i:25
  32 Copy             7   15    0               00 r[15]=r[7]
REG[15] =  i:2
  33 Copy             8   16    0               00 r[16]=r[8]
REG[16] =  i:2
  34 Copy             9   17    0               00 r[17]=r[9]
REG[17] =  i:2
  35 Copy            10   18    0               00 r[18]=r[10]
REG[18] =  i:2
  36 Copy            11   19    0               00 r[19]=r[11]
REG[19] =  i:2
  37 Copy            12   20    0               00 r[20]=r[12]
REG[20] =  i:2
  38 MakeRecord      15    6   21               00 r[21]=mkrec(r[15..20])
REG[21] =  sx13[07010101010101020202020202|.............]
  39 NewRowid         7   22    0               00 r[22]=rowid
REG[22] =  i:1
  40 Insert           7   21   22               00 intkey=r[22] data=r[21]
REG[21] =  sx13[07010101010101020202020202|.............]
REG[22] =  i:1
  41 Ne              13   46   22               00 if r[22]!=r[13] goto 46
REG[13] =  i:1
REG[22] =  i:1
  42 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  43 Rewind           6    1    0               00 
  44 Rewind           9    1    0               00 
  45 Goto             0   49    0               00 
  49 Goto             0   31    0               00 
  31 Yield            6   50    0               00 next row of 
REG[6] =  i:25
REG[6] =  i:31
  26 Next             0   19    0               01 
  27 EndCoroutine     6    0    0               00 
REG[6] =  i:31
  50 Rewind           7   60    0               00 
  51 Column           9    5   23               00 r[23]=
REG[23] =  i:2
  52 AggStep          0   23    4 sum(1)        01 accum=r[4] step(r[23])
REG[23] =  i:2
  53 Next             9   54    0               00 
  54 AggValue         4    1    5 sum(1)        00 r[5]=value N=1
  55 Gosub           14   62    0               00 
REG[14] =  i:55
  62 Noop             0    0    0               00 inner-loop subroutine
  63 Column           6    0   24               00 r[24]=.x
REG[24] =  i:2
  64 Column           6    1   25               00 r[25]=.x:1
REG[25] =  i:2
  65 Copy             5   26    0               00 r[26]=r[5]
REG[26] =  i:2
  66 Column           6    2   27               00 r[27]=.x:2
REG[27] =  i:2
  67 Column           6    3   28               00 r[28]=.x:3
REG[28] =  i:2
  68 Yield            3    0    0               00 
REG[3] =  i:75
REG[3] =  i:68
  76 Copy            24   31    0               00 r[31]=r[24]
REG[31] =  i:2
  77 Copy            25   32    0               00 r[32]=r[25]
REG[32] =  i:2
  78 Copy            26   33    0               00 r[33]=r[26]
REG[33] =  i:2
  79 Copy            27   34    0               00 r[34]=r[27]
REG[34] =  i:2
  80 Copy            28   35    0               00 r[35]=r[28]
REG[35] =  i:2
  81 MakeRecord      31    5   36               00 r[36]=mkrec(r[31..35])
REG[36] =  sx11[0601010101010202020202|...........]
  82 NewRowid         2   37    0               00 r[37]=rowid
REG[37] =  i:1
  83 Insert           2   36   37               00 intkey=r[37] data=r[36]
REG[36] =  sx11[0601010101010202020202|...........]
REG[37] =  i:1
  84 Ne              29   89   37               00 if r[37]!=r[29] goto 89
REG[29] =  i:1
REG[37] =  i:1
  85 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
  86 Rewind           1    1    0               00 
  87 Rewind           4    1    0               00 
  88 Goto             0   92    0               00 
  92 Goto             0   75    0               00 
  75 Yield            3   93    0               00 next row of 
REG[3] =  i:68
REG[3] =  i:75
  69 Return          14    0    0               00 end inner-loop subroutine
REG[14] =  i:55
  56 Delete           6    0    0               02 
  57 Next             6   59    0               00 
  58 Goto             0   60    0               00 
  60 ResetSorter      6    0    0               00 
  61 Goto             0   70    0               00 
  70 EndCoroutine     3    0    0               00 
REG[3] =  i:75
  93 Rewind           2  103    0               00 
  94 Column           4    4   38               00 r[38]=
REG[38] =  i:2
  95 AggStep          0   38    1 sum(1)        01 accum=r[1] step(r[38])
REG[38] =  i:2
  96 Next             4   97    0               00 
  97 AggValue         1    1    2 sum(1)        00 r[2]=value N=1
  98 Gosub           30  105    0               00 
REG[30] =  i:98
 105 Noop             0    0    0               00 inner-loop subroutine
 106 Column           1    1   39               00 r[39]=.x:1
REG[39] =  i:2
 107 Column           1    2   40               00 r[40]=.column3
REG[40] =  i:2
 108 MakeRecord      39    2   43               00 r[43]=mkrec(r[39..40])
REG[43] =  sx5[0301010202|.....]
 109 SorterInsert    12   43   39 2             00 key=r[43]
REG[43] =  sx5[0301010202|.....]
 110 Return          30    0    0               00 end inner-loop subroutine
REG[30] =  i:98
  99 Delete           1    0    0               02 
 100 Next             1  102    0               00 
 101 Goto             0  103    0               00 
 103 ResetSorter      1    0    0               00 
 104 Goto             0  111    0               00 
 111 Explain        111    0    0 USE TEMP B-TREE FOR ORDER BY 00 
 112 OpenPseudo      13   44    5               00 5 columns in r[44]
 113 SorterSort      12  119    0               00 
 114 SorterData      12   44   13               00 r[44]=data
 115 Column          13    1   42               00 r[42]=sum(x) OVER (
    ORDER BY x
    ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
  )
REG[42] =  i:2
 116 Column          13    0   41               00 r[41]=x
REG[41] =  i:2
 117 ResultRow       41    2    0               00 output=r[41..42]
REG[41] =  i:2
REG[42] =  i:2
 118 SorterNext      12  114    0               00 
 119 Halt             0    0    0               00 
SQL: [;
;SELECT t2, sum(t2) OVER (
    ORDER BY t2
    ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING
  ) FROM t1 ORDER BY 1, 2;]
VDBE Trace:
   0 Init             0  141    0               00 Start at 141
 141 Transaction      0    0    5 1             01 usesStmtJournal=0
 142 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenEphemeral    1    5    0               00 nColumn=5
   3 OpenDup          2    1    0               00 
   4 OpenDup          3    1    0               00 
   5 OpenDup          4    1    0               00 
   6 InitCoroutine    3   88    7               00 
  88 SorterOpen      13    5    0 k(2,B,B)      00 
  89 Integer          1   32    0               00 r[32]=1
REG[32] =  i:1
  90 Explain         90    0    0 SCAN SUBQUERY 2 00 
  91 InitCoroutine    3    0    7               00 
  92 Yield            3  111    0               00 next row of 
REG[3] =  i:6
REG[3] =  i:92
   7 Explain          7    0    0 CO-ROUTINE 2  00 
   8 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
   9 OpenEphemeral    6    6    0               00 nColumn=6
  10 OpenDup          7    6    0               00 
  11 OpenDup          8    6    0               00 
  12 OpenDup          9    6    0               00 
  13 InitCoroutine    6   41   14               00 
  41 Integer          1   16    0               00 r[16]=1
REG[16] =  i:1
  42 Explain         42    7    0 SCAN SUBQUERY 3 00 
  43 InitCoroutine    6    0   14               00 
  44 Yield            6   64    0               00 next row of 
REG[6] =  i:13
REG[6] =  i:44
  14 Explain         14    7    0 CO-ROUTINE 3  00 
  15 SorterOpen      11    8    0 k(1,B)        00 
  16 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
  17 Explain         17   14    0 SCAN TABLE t1 00 
  18 Rewind           0   28    0               00 
  19 Column           0    1    8               00 r[8]=t1.t2
REG[8] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  20 Column           0    1    9               00 r[9]=t1.t2
REG[9] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  21 Column           0    1   10               00 r[10]=t1.t2
REG[10] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  22 Column           0    1   11               00 r[11]=t1.t2
REG[11] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  23 Column           0    1   12               00 r[12]=t1.t2
REG[12] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  24 Column           0    1    7               00 r[7]=t1.t2
REG[7] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  25 MakeRecord       7    6   14               00 r[14]=mkrec(r[7..12])
REG[14] =  sx15013[0DA714A714A714A714A714A714F59EDF069A6129B0F7A32FE4|..................a).../.]
  26 SorterInsert    11   14    7 6             00 key=r[14]
REG[14] =  sx15013[0DA714A714A714A714A714A714F59EDF069A6129B0F7A32FE4|..................a).../.]
  27 Next             0   19    0               01 
  28 Explain         28   14    0 USE TEMP B-TREE FOR ORDER BY 00 
  29 OpenPseudo      12   15    8               00 8 columns in r[15]
  30 SorterSort      11   40    0               00 
  31 SorterData      11   15   12               00 r[15]=data
  32 Column          12    0   13               00 r[13]=
REG[13] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  33 Column          12    5   12               00 r[12]=
REG[12] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  34 Column          12    4   11               00 r[11]=
REG[11] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  35 Column          12    3   10               00 r[10]=
REG[10] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  36 Column          12    2    9               00 r[9]=
REG[9] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  37 Column          12    1    8               00 r[8]=
REG[8] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  38 Yield            6    0    0               00 
REG[6] =  i:44
REG[6] =  i:38
  45 Copy             8   18    0               00 r[18]=r[8]
REG[18] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  46 Copy             9   19    0               00 r[19]=r[9]
REG[19] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  47 Copy            10   20    0               00 r[20]=r[10]
REG[20] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  48 Copy            11   21    0               00 r[21]=r[11]
REG[21] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  49 Copy            12   22    0               00 r[22]=r[12]
REG[22] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  50 Copy            13   23    0               00 r[23]=r[13]
REG[23] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  51 MakeRecord      18    6   24               00 r[24]=mkrec(r[18..23])
REG[24] =  sx15013[0DA714A714A714A714A714A714F59EDF069A6129B0F7A32FE4|..................a).../.]
  52 NewRowid         7   25    0               00 r[25]=rowid
REG[25] =  i:1
  53 Insert           7   24   25               00 intkey=r[25] data=r[24]
REG[24] =  sx15013[0DA714A714A714A714A714A714F59EDF069A6129B0F7A32FE4|..................a).../.]
REG[25] =  i:1
  54 Ne              16   60   25               00 if r[25]!=r[16] goto 60
REG[16] =  i:1
REG[25] =  i:1
  55 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  56 Rewind           8    1    0               00 
  57 Rewind           6    1    0               00 
  58 Rewind           9    1    0               00 
  59 Goto             0   63    0               00 
  63 Goto             0   44    0               00 
  44 Yield            6   64    0               00 next row of 
REG[6] =  i:38
REG[6] =  i:44
  39 SorterNext      11   31    0               00 
  40 EndCoroutine     6    0    0               00 
REG[6] =  i:44
  64 Rewind           7   77    0               00 
  65 Column           9    5   26               00 r[26]=
REG[26] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  66 AggStep          0   26    4 sum(1)        01 accum=r[4] step(r[26])
REG[26] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  67 Next             9   68    0               00 
  68 AggValue         4    1    5 sum(1)        00 r[5]=value N=1
  69 Gosub           17   79    0               00 
REG[17] =  i:69
  79 Noop             0    0    0               00 inner-loop subroutine
  80 Column           6    0   27               00 r[27]=.t2
REG[27] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  81 Column           6    1   28               00 r[28]=.t2:1
REG[28] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  82 Copy             5   29    0               00 r[29]=r[5]
REG[29] =  r:0
  83 Column           6    2   30               00 r[30]=.t2:2
REG[30] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  84 Column           6    3   31               00 r[31]=.t2:3
REG[31] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  85 Yield            3    0    0               00 
REG[3] =  i:92
REG[3] =  i:85
  93 Copy            27   34    0               00 r[34]=r[27]
REG[34] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  94 Copy            28   35    0               00 r[35]=r[28]
REG[35] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  95 Copy            29   36    0               00 r[36]=r[29]
REG[36] =  r:0
  96 Copy            30   37    0               00 r[37]=r[30]
REG[37] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  97 Copy            31   38    0               00 r[38]=r[31]
REG[38] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
  98 MakeRecord      34    5   39               00 r[39]=mkrec(r[34..38])
REG[39] =  sx10018[0AA714A71407A714A714F59EDF069A6129B0F7A32FE417B516|...............a).../....]
  99 NewRowid         2   40    0               00 r[40]=rowid
REG[40] =  i:1
 100 Insert           2   39   40               00 intkey=r[40] data=r[39]
REG[39] =  sx10018[0AA714A71407A714A714F59EDF069A6129B0F7A32FE417B516|...............a).../....]
REG[40] =  i:1
 101 Ne              32  107   40               00 if r[40]!=r[32] goto 107
REG[32] =  i:1
REG[40] =  i:1
 102 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
 103 Rewind           3    1    0               00 
 104 Rewind           1    1    0               00 
 105 Rewind           4    1    0               00 
 106 Goto             0  110    0               00 
 110 Goto             0   92    0               00 
  92 Yield            3  111    0               00 next row of 
REG[3] =  i:85
REG[3] =  i:92
  86 Return          17    0    0               00 end inner-loop subroutine
REG[17] =  i:69
  70 Next             6   72    0               00 
  71 Goto             0   77    0               00 
  77 ResetSorter      6    0    0               00 
  78 Goto             0   87    0               00 
  87 EndCoroutine     3    0    0               00 
REG[3] =  i:92
 111 Rewind           2  124    0               00 
 112 Column           4    4   41               00 r[41]=
REG[41] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
 113 AggStep          0   41    1 sum(1)        01 accum=r[1] step(r[41])
REG[41] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
 114 Next             4  115    0               00 
 115 AggValue         1    1    2 sum(1)        00 r[2]=value N=1
 116 Gosub           33  126    0               00 
REG[33] =  i:116
 126 Noop             0    0    0               00 inner-loop subroutine
 127 Column           1    1   42               00 r[42]=.t2:1
REG[42] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
 128 Column           1    2   43               00 r[43]=.column3
REG[43] =  r:0
 129 MakeRecord      42    2   46               00 r[46]=mkrec(r[42..43])
REG[46] =  sx2512[04A71407F59EDF069A6129B0F7A32FE417B516A50422982618|.........a).../......".&.]
 130 SorterInsert    13   46   42 2             00 key=r[46]
REG[46] =  sx2512[04A71407F59EDF069A6129B0F7A32FE417B516A50422982618|.........a).../......".&.]
 131 Return          33    0    0               00 end inner-loop subroutine
REG[33] =  i:116
 117 Next             1  119    0               00 
 118 Goto             0  124    0               00 
 124 ResetSorter      1    0    0               00 
 125 Goto             0  132    0               00 
 132 Explain        132    0    0 USE TEMP B-TREE FOR ORDER BY 00 
 133 OpenPseudo      14   47    5               00 5 columns in r[47]
 134 SorterSort      13  140    0               00 
 135 SorterData      13   47   14               00 r[47]=data
 136 Column          14    1   45               00 r[45]=sum(t2) OVER (
    ORDER BY t2
    ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING
  )
REG[45] =  r:0
 137 Column          14    0   44               00 r[44]=t2
REG[44] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
 138 ResultRow       44    2    0               00 output=r[44..45]
REG[44] =  sx2500[F59EDF069A6129B0F7A32FE417B516A50422982618FF8AE4E7|.....a).../......".&.....]
REG[45] =  r:0
 139 SorterNext      13  135    0               00 
 140 Halt             0    0    0               00 
SQL: [;
;SELECT 
    rank() OVER win AS rank,
    cume_dist() OVER win AS cume_dist FROM a
  WINDOW win AS (ORDER BY 1);]
VDBE Trace:
   0 Init             0  174    0               00 Start at 174
 174 Transaction      0    0    5 1             01 usesStmtJournal=0
 175 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenEphemeral    1    2    0               00 nColumn=2
   3 OpenDup          2    1    0               00 
   4 OpenDup          3    1    0               00 
   5 OpenDup          4    1    0               00 
   6 InitCoroutine    3  110    7               00 
 110 Integer          1   24    0               00 r[24]=1
REG[24] =  i:1
 111 Explain        111    0    0 SCAN SUBQUERY 2 00 
 112 InitCoroutine    3    0    7               00 
 113 Yield            3  148    0               00 next row of 
REG[3] =  i:6
REG[3] =  i:113
   7 Explain          7    0    0 CO-ROUTINE 2  00 
   8 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
   9 OpenEphemeral    6    1    0               00 nColumn=1
  10 OpenDup          7    6    0               00 
  11 OpenDup          8    6    0               00 
  12 OpenDup          9    6    0               00 
  13 InitCoroutine    6   32   14               00 
  32 Integer          1   11    0               00 r[11]=1
REG[11] =  i:1
  33 Explain         33    7    0 SCAN SUBQUERY 3 00 
  34 InitCoroutine    6    0   14               00 
  35 Yield            6   66    0               00 next row of 
REG[6] =  i:13
REG[6] =  i:35
  14 Explain         14    7    0 CO-ROUTINE 3  00 
  15 SorterOpen      11    3    0 k(1,B)        00 
  16 OpenRead         0    5    0 0             00 root=5 iDb=0; a
  17 Explain         17   14    0 SCAN TABLE a  00 
  18 Rewind           0   24    0               00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Null             0    7    0               00 r[7]=NULL
REG[7] =  NULL
  21 MakeRecord       7    2    9               00 r[9]=mkrec(r[7..8])
REG[9] =  sx3[030009|...]
  22 SorterInsert    11    9    7 2             00 key=r[9]
REG[9] =  sx3[030009|...]
  23 Next             0   19    0               01 
  24 Explain         24   14    0 USE TEMP B-TREE FOR ORDER BY 00 
  25 OpenPseudo      12   10    3               00 3 columns in r[10]
  26 SorterSort      11   31    0               00 
  27 SorterData      11   10   12               00 r[10]=data
  28 Column          12    1    8               00 r[8]=
REG[8] =  i:1
  29 Yield            6    0    0               00 
REG[6] =  i:35
REG[6] =  i:29
  36 Copy             8   13    0               00 r[13]=r[8]
REG[13] =  i:1
  37 MakeRecord      13    1   14               00 r[14]=mkrec(r[13])
REG[14] =  sx2[0209|..]
  38 NewRowid         7   15    0               00 r[15]=rowid
REG[15] =  i:1
  39 Insert           7   14   15               00 intkey=r[15] data=r[14]
REG[14] =  sx2[0209|..]
REG[15] =  i:1
  40 Ne              11   55   15               00 if r[15]!=r[11] goto 55
REG[11] =  i:1
REG[15] =  i:1
  41 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  42 Integer          1   16    0               00 r[16]=1
REG[16] =  i:1
  43 Integer          0   21    0               00 r[21]=0
REG[21] =  i:0
  44 MustBeInt       16   46    0               00 
REG[16] =  i:1
  45 Ge              21   47   16               00 if r[16]>=r[21] goto 47
REG[21] =  i:0
REG[16] =  i:1
  47 Rewind           8    1    0               00 
  48 Rewind           6    1    0               00 
  49 Rewind           9    1    0               00 
  50 Copy            13   17    0               00 r[17]=r[13]
REG[17] =  i:1
  51 Copy            17   18    0               00 r[18]=r[17]
REG[18] =  i:1
  52 Copy            17   19    0               00 r[19]=r[17]
REG[19] =  i:1
  53 Copy            17   20    0               00 r[20]=r[17]
REG[20] =  i:1
  54 Goto             0   65    0               00 
  65 Goto             0   35    0               00 
  35 Yield            6   66    0               00 next row of 
REG[6] =  i:29
REG[6] =  i:35
  30 SorterNext      11   27    0               00 
  31 EndCoroutine     6    0    0               00 
REG[6] =  i:35
  66 Rewind           7  102    0               00 
  67 AggStep          0   21    4 cume_dist(0)  00 accum=r[4] step(r[21])
  68 Next             9   70    0               00 
  69 Goto             0   74    0               00 
  74 IfPos           16   84    1               00 if r[16]>0 then r[16]-=1, goto 84
REG[16] =  i:1
  84 AggInverse       1   21    4 cume_dist(0)  00 accum=r[4] inverse(r[21])
  85 Next             8   87    0               00 
  86 Goto             0   92    0               00 
  92 AggValue         4    0    5 cume_dist(0)  00 r[5]=value N=0
  93 Gosub           12  104    0               00 
REG[12] =  i:93
 104 Noop             0    0    0               00 inner-loop subroutine
 105 Copy             5   22    0               00 r[22]=r[5]
REG[22] =  r:1
 106 Integer          1   23    0               00 r[23]=1
REG[23] =  i:1
 107 Yield            3    0    0               00 
REG[3] =  i:113
REG[3] =  i:107
 114 Copy            22   26    0               00 r[26]=r[22]
REG[26] =  r:1
 115 Copy            23   27    0               00 r[27]=r[23]
REG[27] =  i:1
 116 MakeRecord      26    2   28               00 r[28]=mkrec(r[26..27])
REG[28] =  sx11[0307093FF0000000000000|...?.......]
 117 NewRowid         2   29    0               00 r[29]=rowid
REG[29] =  i:1
 118 Insert           2   28   29               00 intkey=r[29] data=r[28]
REG[28] =  sx11[0307093FF0000000000000|...?.......]
REG[29] =  i:1
 119 Ne              24  128   29               00 if r[29]!=r[24] goto 128
REG[24] =  i:1
REG[29] =  i:1
 120 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
 121 Rewind           1    1    0               00 
 122 Rewind           4    1    0               00 
 123 Copy            27   30    0               00 r[30]=r[27]
REG[30] =  i:1
 124 Copy            30   31    0               00 r[31]=r[30]
REG[31] =  i:1
 125 Copy            30   32    0               00 r[32]=r[30]
REG[32] =  i:1
 126 Copy            30   33    0               00 r[33]=r[30]
REG[33] =  i:1
 127 Goto             0  147    0               00 
 147 Goto             0  113    0               00 
 113 Yield            3  148    0               00 next row of 
REG[3] =  i:107
REG[3] =  i:113
 108 Return          12    0    0               00 end inner-loop subroutine
REG[12] =  i:93
  94 Delete           6    0    0               02 
  95 Next             6   97    0               00 
  96 Goto             0  102    0               00 
 102 ResetSorter      6    0    0               00 
 103 Goto             0  109    0               00 
 109 EndCoroutine     3    0    0               00 
REG[3] =  i:113
 148 Rewind           2  166    0               00 
 149 AggStep          0   34    1 rank(0)       00 accum=r[1] step(r[34])
 150 Next             4  152    0               00 
 151 Goto             0  156    0               00 
 156 AggValue         1    0    2 rank(0)       00 r[2]=value N=0
 157 Gosub           25  168    0               00 
REG[25] =  i:157
 168 Noop             0    0    0               00 inner-loop subroutine
 169 Copy             2   35    0               00 r[35]=r[2]
REG[35] =  i:1
 170 Column           1    0   36               00 r[36]=.column1
REG[36] =  r:1
 171 ResultRow       35    2    0               00 output=r[35..36]
REG[35] =  i:1
REG[36] =  r:1
 172 Return          25    0    0               00 end inner-loop subroutine
REG[25] =  i:157
 158 Delete           1    0    0               02 
 159 Next             1  161    0               00 
 160 Goto             0  166    0               00 
 166 ResetSorter      1    0    0               00 
 167 Goto             0  173    0               00 
 173 Halt             0    0    0               00 
SQL: [SELECT count(distinct x) FILTER (WHERE x='odd') FROM t1

;]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      0    0    5 1             01 usesStmtJournal=0
  19 String8          0    4    0 odd           00 r[4]='odd'
REG[4] =   t3[odd](8)
  20 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenEphemeral    1    0    0 k(1,B)        00 nColumn=0
   3 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   4 Explain          4    0    0 SCAN TABLE t1 00 
   5 Rewind           0   14    0               00 
   6 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:2
   7 Ne               4   13    3               54 if r[3]!=r[4] goto 13
REG[4] =   t3[odd](8)
REG[3] =  i:2
  13 Next             0    6    0               01 
  14 AggFinal         1    1    0 count(1)      00 accum=r[1] N=1
  15 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:0
  16 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:0
  17 Halt             0    0    0               00 
SQL: [;DROP TABLE IF EXISTS t0;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    5 1             01 usesStmtJournal=0
   3 Transaction      1    0    0 1             01 usesStmtJournal=0
   4 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t1 WHERE 
      (0, t1.x) IN (SELECT DENSE_RANK() OVER(), LAG(0) OVER() FROM t1);]
VDBE Trace:
   0 Init             0  144    0               00 Start at 144
 144 Transaction      0    0    5 1             01 usesStmtJournal=0
 145 Integer          0   29    0               00 r[29]=0
REG[29] =  i:0
 146 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SEARCH TABLE t1 USING INTEGER PRIMARY KEY (rowid=?) 00 
   3 Integer         14    2    0               00 r[2]=14; return address
REG[2] =  i:14
   4 Once             0   14    0               00 
   5 OpenEphemeral    2    1    0 k(1,)         00 nColumn=1; Result of SELECT 1
   6 Explain          6    0    0 LIST SUBQUERY 1 00 
   7 OpenRead         1    2    0 0             00 root=2 iDb=0; t1
   8 Explain          8    6    0 SCAN TABLE t1 00 
   9 Rewind           1   14    0               00 
  10 SCopy            0    3    0               00 r[3]=r[0]
REG[3] =  undefined
  11 MakeRecord       3    1    4 D             00 r[4]=mkrec(r[3])

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f2696373859 in __GI_abort () at abort.c:79
#2  0x00007f2696373729 in __assert_fail_base (fmt=0x7f2696509588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x222142 "memIsValid(pRec)", file=0x2291f4 "sqlite3.c", line=86917, function=<optimized out>)
    at assert.c:92
#3  0x00007f2696384fd6 in __GI___assert_fail (assertion=0x222142 "memIsValid(pRec)", file=0x2291f4 "sqlite3.c", line=86917, function=0x216a86 "int sqlite3VdbeExec(Vdbe *)") at assert.c:101
#4  0x00000000003d3831 in sqlite3VdbeExec (p=0xa0deb0) at sqlite3.c:86917
#5  0x000000000041ba74 in sqlite3Step (p=0xa0deb0) at sqlite3.c:82300
#6  0x0000000000293d5d in sqlite3_step (pStmt=0xa0deb0) at sqlite3.c:82365
#7  0x0000000000258a39 in main (argc=1, argv=0x7ffdae8f3128) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 43141] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
