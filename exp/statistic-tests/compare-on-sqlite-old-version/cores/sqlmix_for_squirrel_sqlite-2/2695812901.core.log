GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000147,sig:06,src:021219+021957,time:3396499,execs:619923,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;BEGIN;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
SQL: [;BEGIN;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
SQL: [;BEGIN;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
SQL: [;ROLLBACK;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    1    0               00 
SQL: [SELECT * FROM t1 WHERE x=10006 AND x IN (10000,10201)
                       AND x>0 AND x<10
      ORDER BY x
    
;]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    3 0             01 usesStmtJournal=0
  20 Integer       10006    2    0               00 r[2]=10006
REG[2] =  i:10006
  21 Integer       10000    3    0               00 r[3]=10000
REG[3] =  i:10000
  22 Integer       10201    4    0               00 r[4]=10201
REG[4] =  i:10201
  23 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  24 Integer         10    7    0               00 r[7]=10
REG[7] =  i:10
  25 Goto             0    1    0               00 
   1 Noop             1    3    0               00 
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   18    0               00 
  18 Halt             0    0    0               00 
SQL: [;BEGIN;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
SQL: [SELECT * FROM t1 WHERE x=99 ORDER BY x
  
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    3 0             01 usesStmtJournal=0
  12 Integer         99    2    0               00 r[2]=99
REG[2] =  i:99
  13 Goto             0    1    0               00 
   1 Noop             1    3    0               00 
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
SQL: [;ROLLBACK;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    1    0               00 
SQL: [;ROLLBACK;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    1    0               00 
SQL: [SELECT x.x,y.x FROM t1 x CROSS JOIN t1 y
       WHERE y.x=x.x OR y.x='hello'
    
;]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      0    0    3 0             01 usesStmtJournal=0
  19 String8          0    3    0 hello         00 r[3]='hello'
REG[3] =   t5[hello](8)
  20 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   2 OpenRead         1    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 AS x 00 
   4 Rewind           0   17    0               00 
  17 Halt             0    0    0               00 
SQL: [create unique index b on t1(x);]
VDBE Trace:
   0 Init             0   37    0               00 Start at 37
  37 Transaction      0    1    3 0             01 usesStmtJournal=1
  38 Goto             0    1    0               00 
   1 Noop             0   36    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:3
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:4
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 b             00 r[4]='b'
REG[4] =   t1[b](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:3
   9 String8          0    7    0 CREATE UNIQUE INDEX b on t1(x) 00 r[7]='CREATE UNIQUE INDEX b on t1(x)'
REG[7] =   t30[CREATE UNIQUE INDEX b on ](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[3] =   t5[index](8)
REG[4] =   t1[b](8)
REG[5] =   t2[t1](8)
REG[6] =  i:3
REG[7] =   t30[CREATE UNIQUE INDEX b on ](8)
REG[8] =  sx45[06170F110149696E6465786274310343524541544520554E49|.....Iindexbt1.CREATE UNI]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  sx45[06170F110149696E6465786274310343524541544520554E49|.....Iindexbt1.CREATE UNI]
REG[2] =  i:4
  12 SorterOpen       3    0    1 k(2,,)        00 
  13 OpenRead         1    2    0 1             00 root=2 iDb=0; t1
  14 Rewind           1   20    0               00 
  20 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  21 SorterSort       3   30    0               00 
  30 Close            1    0    0               00 
  31 Close            2    0    0               00 
  32 Close            3    0    0               00 
  33 SetCookie        0    1    4               00 
  34 ParseSchema      0    0    0 name='b' AND type='index' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    4 0             00 usesStmtJournal=0
  18 String8          0    2    0 b             00 r[2]='b'
REG[2] =   t1[b](8)
  19 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[b](8)
REG[1] =   s2[t1](8)
  15 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[b](8)
REG[1] =   s2[t2](8)
  15 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t3](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[b](8)
REG[1] =   s2[t3](8)
  15 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[b](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[b](8)
REG[1] =   s1[b](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   15    1 (BINARY)      52 if r[1]!=r[3] goto 15
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[index](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[b](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s2[t1](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:3
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s30[CREATE UNIQUE INDEX b on ](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[index](8)
REG[5] =   s1[b](8)
REG[6] =   s2[t1](8)
REG[7] =  i:3
REG[8] =   s30[CREATE UNIQUE INDEX b on ](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  35 Expire           0    1    0               00 
  36 Halt             0    0    0               00 
SQL: [SELECT x FROM t1
       WHERE x IN (SELECT x FROM t4 WHERE x BETWEEN 10 AND 20)
         AND x IN (SELECT x FROM t4 WHERE x BETWEEN 10 AND 20)
         AND x IN (SELECT x FROM t4 WHERE x BETWEEN 2 AND 4)
    
;]
VDBE Trace:
   0 Init             0   59    0               00 Start at 59
  59 Transaction      0    0    4 0             01 usesStmtJournal=0
  60 Transaction      1    0    1 0             01 usesStmtJournal=0
  61 Integer         10    3    0               00 r[3]=10
REG[3] =  i:10
  62 Integer         20    4    0               00 r[4]=20
REG[4] =  i:20
  63 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  64 Integer          4   10    0               00 r[10]=4
REG[10] =  i:4
  65 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   58    0               00 
  58 Halt             0    0    0               00 
SQL: [SELECT x FROM t1
       WHERE x IN (SELECT x FROM t1 WHERE +x BETWEEN 10 AND 20)
         AND x IN (SELECT x FROM t1 WHERE +x BETWEEN 200 AND 300)
         AND x IN (SELECT x FROM t1 WHERE +x BETWEEN 10 AND 20)
    
;]
VDBE Trace:
   0 Init             0   68    0               00 Start at 68
  68 Transaction      0    0    4 0             01 usesStmtJournal=0
  69 Integer         10    5    0               00 r[5]=10
REG[5] =  i:10
  70 Integer         20    6    0               00 r[6]=20
REG[6] =  i:20
  71 Integer        200   11    0               00 r[11]=200
REG[11] =  i:200
  72 Integer        300   12    0               00 r[12]=300
REG[12] =  i:300
  73 Goto             0    1    0               00 
   1 OpenRead         4    3    0 k(2,,)        02 root=3 iDb=0; b
   2 Explain          2    0    0 SEARCH TABLE t1 USING COVERING INDEX b (x=?) 00 
   3 Integer         17    2    0               00 r[2]=17; return address
REG[2] =  i:17
   4 Once             0   17    0               00 
   5 OpenEphemeral    5    1    0 k(1,B)        00 nColumn=1; Result of SELECT 1
   6 Explain          6    0    0 LIST SUBQUERY 1 00 
   7 OpenRead         1    2    0 1             00 root=2 iDb=0; t1
   8 Explain          8    6    0 SCAN TABLE t1 00 
   9 Rewind           1   17    0               00 
  17 Return           2    0    0               00 
REG[2] =  i:17
  18 Rewind           5   67    0               00 
  67 Halt             0    0    0               00 
SQL: [;ROLLBACK;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    1    0               00 
SQL: [;SELECT count(*) FROM t4;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      1    0    1 0             01 usesStmtJournal=0
   8 Goto             0    1    0               00 
   1 OpenRead         1    2    1 1             00 root=2 iDb=1
   2 Count            1    1    0               00 r[1]=count()
REG[1] =  i:0
   3 Close            1    0    0               00 
   4 Copy             1    2    0               00 r[2]=r[1]
REG[2] =  i:0
   5 ResultRow        2    1    0               00 output=r[2]
REG[2] =  i:0
   6 Halt             0    0    0               00 
SQL: [SELECT "" <= '';]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    2    0               00 r[2]=''
REG[2] =   t0[](8)
   6 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Le               2    1    2               60 r[1] = (r[2]<=r[2])
REG[2] =   t0[](8)
REG[2] =   t0[](8)
REG[1] =  i:1
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   4 Halt             0    0    0               00 
SQL: [;INSERT INTO t1(x) VALUES(1);]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    1    4 0             01 usesStmtJournal=1
  24 Integer       999999    8    0               00 r[8]=999999
REG[8] =  i:999999
  25 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 1             00 root=2 iDb=0; t1
   2 OpenWrite        1    3    0 k(2,,)        00 root=3 iDb=0; b
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   4 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   5 Abortable        0    0    0               00 
   6 Lt               2    9    2 (BINARY)      52 if r[2]<r[2] goto 9

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fece1d8e859 in __GI_abort () at abort.c:79
#2  0x00007fece1d8e729 in __assert_fail_base (fmt=0x7fece1f24588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21dc88 "pIn1!=pIn3", file=0x2291f4 "sqlite3.c", line=86002, function=<optimized out>) at assert.c:92
#3  0x00007fece1d9ffd6 in __GI___assert_fail (assertion=0x21dc88 "pIn1!=pIn3", file=0x2291f4 "sqlite3.c", line=86002, function=0x216a86 "int sqlite3VdbeExec(Vdbe *)") at assert.c:101
#4  0x00000000003cf4ad in sqlite3VdbeExec (p=0x198c670) at sqlite3.c:86002
#5  0x000000000041ba74 in sqlite3Step (p=0x198c670) at sqlite3.c:82300
#6  0x0000000000293d5d in sqlite3_step (pStmt=0x198c670) at sqlite3.c:82365
#7  0x0000000000258a39 in main (argc=1, argv=0x7ffc5e08cb78) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 39953] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
