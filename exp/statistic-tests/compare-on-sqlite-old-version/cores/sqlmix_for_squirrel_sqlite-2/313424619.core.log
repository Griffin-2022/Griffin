GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000351,sig:06,src:020214+021896,time:14425328,execs:2791439,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;CREATE TABLE t2(t3 TEXT, CHECK(t3 BETWEEN 0 AND +t3));]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    1 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  tx6[060000000000|......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  tx6[060000000000|......]
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:2
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:2
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t2            00 r[7]='t2'
REG[7] =   t2[t2](8)
  20 String8          0    8    0 t2            00 r[8]='t2'
REG[8] =   t2[t2](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  22 String8          0   10    0 CREATE TABLE t2(t3 TEXT, CHECK(t3 BETWEEN 0 AND +t3)) 00 r[10]='CREATE TABLE t2(t3 TEXT, CHECK(t3 BETWEEN 0 AND +t3))'
REG[10] =   t53[CREATE TABLE t2(t3 TEXT, ](8)
  23 MakeRecord       6    5    4 BBBDB         00 r[4]=mkrec(r[6..10])
REG[6] =   t5[table](8)
REG[7] =   t2[t2](8)
REG[8] =   t2[t2](8)
REG[9] =  i:4
REG[10] =   t53[CREATE TABLE t2(t3 TEXT, ](8)
REG[4] =  sx69[0617111101777461626C657432743204435245415445205441|.....wtablet2t2.CREATE TA]
  24 Insert           1    4    5               00 intkey=r[5] data=r[4]
REG[4] =  sx69[0617111101777461626C657432743204435245415445205441|.....wtablet2t2.CREATE TA]
REG[5] =  i:2
  25 SetCookie        0    1    2               00 
  26 ParseSchema      0    0    0 tbl_name='t2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    2 0             00 usesStmtJournal=0
  18 String8          0    2    0 t2            00 r[2]='t2'
REG[2] =   t2[t2](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t2](8)
REG[1] =   s2[t1](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t2](8)
REG[1] =   s2[t2](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t2](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s2[t2](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:4
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s53[CREATE TABLE t2(t3 TEXT, ](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s2[t2](8)
REG[6] =   s2[t2](8)
REG[7] =  i:4
REG[8] =   s53[CREATE TABLE t2(t3 TEXT, ](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;CREATE TABLE t4(a INT);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    2 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  tx6[060000000000|......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  tx6[060000000000|......]
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:3
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:3
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t4            00 r[7]='t4'
REG[7] =   t2[t4](8)
  20 String8          0    8    0 t4            00 r[8]='t4'
REG[8] =   t2[t4](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  22 String8          0   10    0 CREATE TABLE t4(a INT) 00 r[10]='CREATE TABLE t4(a INT)'
REG[10] =   t22[CREATE TABLE t4(a INT)](8)
  23 MakeRecord       6    5    4 BBBDB         00 r[4]=mkrec(r[6..10])
REG[6] =   t5[table](8)
REG[7] =   t2[t4](8)
REG[8] =   t2[t4](8)
REG[9] =  i:5
REG[10] =   t22[CREATE TABLE t4(a INT)](8)
REG[4] =  sx38[0617111101397461626C657434743405435245415445205441|.....9tablet4t4.CREATE TA]
  24 Insert           1    4    5               00 intkey=r[5] data=r[4]
REG[4] =  sx38[0617111101397461626C657434743405435245415445205441|.....9tablet4t4.CREATE TA]
REG[5] =  i:3
  25 SetCookie        0    1    3               00 
  26 ParseSchema      0    0    0 tbl_name='t4' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    3 0             00 usesStmtJournal=0
  18 String8          0    2    0 t4            00 r[2]='t4'
REG[2] =   t2[t4](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t4](8)
REG[1] =   s2[t1](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t4](8)
REG[1] =   s2[t2](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t4](8)
REG[1] =   s2[t4](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t4](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s2[t4](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:5
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s22[CREATE TABLE t4(a INT)](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s2[t4](8)
REG[6] =   s2[t4](8)
REG[7] =  i:5
REG[8] =   s22[CREATE TABLE t4(a INT)](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;
;DROP TABLE t4;]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      0    1    3 0             01 usesStmtJournal=1
  39 String8          0    3    0 t4            00 r[3]='t4'
REG[3] =   t2[t4](8)
  40 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  41 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[t4](8)
REG[2] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t2](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[t4](8)
REG[2] =   s2[t2](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t4](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[t4](8)
REG[2] =   s2[t4](8)
   7 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
   8 Eq               4   12    2 (BINARY)      52 if r[2]==r[4] goto 12
REG[4] =   t7[trigger](8)
REG[2] =   s5[table](8)
   9 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:3
  10 Once             0   11    0               00 
  11 Delete           0    0    0               02 
  12 Next             0    5    0               01 
  13 Destroy          5    2    0               00 
REG[2] =  i:0
  14 Null             0    6    7               00 r[6..7]=NULL
REG[6] =  NULL
  15 IfNot            2   24    1               00 
REG[2] =  i:0
  24 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  25 RowSetRead       6   35    7               00 r[7]=rowset(6)
REG[6] =  NULL
REG[7] =  NULL
  35 DropTable        0    0    0 t4            00 
  36 SetCookie        0    1    4               00 
  37 Halt             0    0    0               00 
SQL: [;CREATE TABLE t4(a TEXT, CHECK(a NOT BETWEEN 0 AND +a));]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    4 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  tx6[060000000000|......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  tx6[060000000000|......]
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:3
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:3
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t4            00 r[7]='t4'
REG[7] =   t2[t4](8)
  20 String8          0    8    0 t4            00 r[8]='t4'
REG[8] =   t2[t4](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  22 String8          0   10    0 CREATE TABLE t4(a TEXT, CHECK(a NOT BETWEEN 0 AND +a)) 00 r[10]='CREATE TABLE t4(a TEXT, CHECK(a NOT BETWEEN 0 AND +a))'
REG[10] =   t54[CREATE TABLE t4(a TEXT, C](8)
  23 MakeRecord       6    5    4 BBBDB         00 r[4]=mkrec(r[6..10])
REG[6] =   t5[table](8)
REG[7] =   t2[t4](8)
REG[8] =   t2[t4](8)
REG[9] =  i:5
REG[10] =   t54[CREATE TABLE t4(a TEXT, C](8)
REG[4] =  sx70[0617111101797461626C657434743405435245415445205441|.....ytablet4t4.CREATE TA]
  24 Insert           1    4    5               00 intkey=r[5] data=r[4]
REG[4] =  sx70[0617111101797461626C657434743405435245415445205441|.....ytablet4t4.CREATE TA]
REG[5] =  i:3
  25 SetCookie        0    1    5               00 
  26 ParseSchema      0    0    0 tbl_name='t4' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    5 0             00 usesStmtJournal=0
  18 String8          0    2    0 t4            00 r[2]='t4'
REG[2] =   t2[t4](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t4](8)
REG[1] =   s2[t1](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t4](8)
REG[1] =   s2[t2](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t4](8)
REG[1] =   s2[t4](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t4](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s2[t4](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:5
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s54[CREATE TABLE t4(a TEXT, C](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s2[t4](8)
REG[6] =   s2[t4](8)
REG[7] =  i:5
REG[8] =   s54[CREATE TABLE t4(a TEXT, C](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;CREATE TABLE b(i1 TEXT, CHECK(i1 BETWEEN +i1 AND 999999));]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    5 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:6
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  tx6[060000000000|......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  tx6[060000000000|......]
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:4
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:4
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 b             00 r[7]='b'
REG[7] =   t1[b](8)
  20 String8          0    8    0 b             00 r[8]='b'
REG[8] =   t1[b](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:6
  22 String8          0   10    0 CREATE TABLE b(i1 TEXT, CHECK(i1 BETWEEN +i1 AND 999999)) 00 r[10]='CREATE TABLE b(i1 TEXT, CHECK(i1 BETWEEN +i1 AND 999999))'
REG[10] =   t57[CREATE TABLE b(i1 TEXT, C](8)
  23 MakeRecord       6    5    4 BBBDB         00 r[4]=mkrec(r[6..10])
REG[6] =   t5[table](8)
REG[7] =   t1[b](8)
REG[8] =   t1[b](8)
REG[9] =  i:6
REG[10] =   t57[CREATE TABLE b(i1 TEXT, C](8)
REG[4] =  sx71[06170F0F017F7461626C65626206435245415445205441424C|......tablebb.CREATE TABL]
  24 Insert           1    4    5               00 intkey=r[5] data=r[4]
REG[4] =  sx71[06170F0F017F7461626C65626206435245415445205441424C|......tablebb.CREATE TABL]
REG[5] =  i:4
  25 SetCookie        0    1    6               00 
  26 ParseSchema      0    0    0 tbl_name='b' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    6 0             00 usesStmtJournal=0
  18 String8          0    2    0 b             00 r[2]='b'
REG[2] =   t1[b](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[b](8)
REG[1] =   s2[t1](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[b](8)
REG[1] =   s2[t2](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[b](8)
REG[1] =   s2[t4](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[b](8)
REG[1] =   s1[b](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[b](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s1[b](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:6
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s57[CREATE TABLE b(i1 TEXT, C](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s1[b](8)
REG[6] =   s1[b](8)
REG[7] =  i:6
REG[8] =   s57[CREATE TABLE b(i1 TEXT, C](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;-- added 2019-08-10 to invalidate
  DROP TABLE IF EXISTS b;]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      0    1    6 0             01 usesStmtJournal=1
  39 String8          0    3    0 b             00 r[3]='b'
REG[3] =   t1[b](8)
  40 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  41 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t1[b](8)
REG[2] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t2](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t1[b](8)
REG[2] =   s2[t2](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t4](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t1[b](8)
REG[2] =   s2[t4](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[b](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t1[b](8)
REG[2] =   s1[b](8)
   7 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
   8 Eq               4   12    2 (BINARY)      52 if r[2]==r[4] goto 12
REG[4] =   t7[trigger](8)
REG[2] =   s5[table](8)
   9 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:4
  10 Once             0   11    0               00 
  11 Delete           0    0    0               02 
  12 Next             0    5    0               01 
  13 Destroy          6    2    0               00 
REG[2] =  i:0
  14 Null             0    6    7               00 r[6..7]=NULL
REG[6] =  NULL
  15 IfNot            2   24    1               00 
REG[2] =  i:0
  24 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  25 RowSetRead       6   35    7               00 r[7]=rowset(6)
REG[6] =  NULL
REG[7] =  NULL
  35 DropTable        0    0    0 b             00 
  36 SetCookie        0    1    7               00 
  37 Halt             0    0    0               00 
SQL: [;SELECT (SELECT avg(x) UNION SELECT min(x) OVER()) FROM t1;]
VDBE Trace:
   0 Init             0   91    0               00 Start at 91
  91 Transaction      0    0    7 0             01 usesStmtJournal=0
  92 Goto             0    1    0               00 
   1 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
   2 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   3 OpenRead         0    3    0 1             00 root=3 iDb=0; t1
   4 Explain          4    0    0 SCAN TABLE t1 00 
   5 Rewind           0   12    0               00 
  12 AggFinal         2    1    0 avg(1)        00 accum=r[2] N=1
  13 Explain         13    0    0 CORRELATED SCALAR SUBQUERY 2 00 
  14 Null             0    6    6               00 r[6..6]=NULL; Init subquery result
REG[6] =  NULL
  15 Explain         15   13    0 COMPOUND QUERY 00 
  16 Explain         16   15    0 LEFT-MOST SUBQUERY 00 
  17 OpenEphemeral    1    1    0 k(1,B)        00 nColumn=1
  18 Explain         18   16    0 SCAN CONSTANT ROW 00 
  19 SCopy            2    7    0               00 r[7]=r[2]
REG[7] =  NULL
  20 MakeRecord       7    1    4               00 r[4]=mkrec(r[7])
REG[4] =  sx2[0200|..]
  21 IdxInsert        1    4    7 1             00 key=r[4]
REG[4] =  sx2[0200|..]
  22 Explain         22   15    0 UNION USING TEMP B-TREE 00 
  23 Null             0    8    0               00 r[8]=NULL
REG[8] =  NULL
  24 OpenEphemeral    2    1    0               00 nColumn=1
  25 OpenDup          3    2    0               00 
  26 OpenDup          4    2    0               00 
  27 OpenDup          5    2    0               00 
  28 InitCoroutine   10   34   29               00 
  34 Integer          1   12    0               00 r[12]=1
REG[12] =  i:1
  35 Explain         35   22    0 SCAN SUBQUERY 4 00 
  36 InitCoroutine   10    0   29               00 
  37 Yield           10   61    0               00 next row of 
REG[10] =  i:28
REG[10] =  i:37
  29 Explain         29   22    0 CO-ROUTINE 4  00 
  30 Explain         30   29    0 SCAN CONSTANT ROW 00 
  31 Copy             1   11    0               00 r[11]=r[1]
REG[11] =  NULL
  32 Yield           10    0    0               00 
REG[10] =  i:37
REG[10] =  i:32
  38 Copy            11   14    0               00 r[14]=r[11]
REG[14] =  NULL
  39 MakeRecord      14    1   15               00 r[15]=mkrec(r[14])
REG[15] =  sx2[0200|..]
  40 NewRowid         3   16    0               00 r[16]=rowid
REG[16] =  i:1
  41 Insert           3   15   16               00 intkey=r[16] data=r[15]
REG[15] =  sx2[0200|..]
REG[16] =  i:1
  42 Ne              12   47   16               00 if r[16]!=r[12] goto 47
REG[12] =  i:1
REG[16] =  i:1
  43 Null             0    8    0               00 r[8]=NULL
REG[8] =  NULL
  44 Rewind           2    1    0               00 
  45 Rewind           5    1    0               00 
  46 Goto             0   60    0               00 
  60 Goto             0   37    0               00 
  37 Yield           10   61    0               00 next row of 
REG[10] =  i:32
REG[10] =  i:37
  33 EndCoroutine    10    0    0               00 
REG[10] =  i:37
  61 Rewind           3   75    0               00 
  62 Column           5    0   17               00 r[17]=
REG[17] =  NULL
  63 CollSeq          0    0    0 (BINARY)      00 
  64 AggStep          0   17    8 min(1)        01 accum=r[8] step(r[17])
REG[17] =  NULL
  65 Next             5   67    0               00 
  66 Goto             0   68    0               00 
  68 AggValue         8    1    9 min(1)        00 r[9]=value N=1
  69 Gosub           13   77    0               00 
REG[13] =  i:69
  77 Noop             0    0    0               00 inner-loop subroutine
  78 SCopy            9    7    0               00 r[7]=r[9]
REG[7] =  NULL
  79 MakeRecord       7    1   18               00 r[18]=mkrec(r[7])
REG[18] =  sx2[0200|..]
  80 IdxInsert        1   18    7 1             00 key=r[18]
REG[18] =  sx2[0200|..]
  81 Return          13    0    0               00 end inner-loop subroutine
REG[13] =  i:69
  70 Delete           2    0    0               02 
  71 Next             2   73    0               00 
  72 Goto             0   75    0               00 
  75 ResetSorter      2    0    0               00 
  76 Goto             0   82    0               00 
  82 Integer          1   19    0               00 r[19]=1; LIMIT counter
REG[19] =  i:1
  83 Rewind           1   87    0               00 
  84 Column           1    0    6               00 r[6]=
REG[6] =  NULL
  85 DecrJumpZero    19   87    0               00 if (--r[19])==0 goto 87
REG[19] =  i:1
  87 Close            1    0    0               00 
  88 Copy             6    5    0               00 r[5]=r[6]
REG[5] =  NULL
  89 ResultRow        5    1    0               00 output=r[5]
REG[5] =  NULL
  90 Halt             0    0    0               00 
SQL: [SELECT max(x)/avg(x), max(x)/avg(x) FROM t1
;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    7 0             01 usesStmtJournal=0
  18 Goto             0    1    0               00 
   1 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
   2 OpenRead         0    3    0 1             00 root=3 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   11    0               00 
  11 AggFinal         1    1    0 max(1)        00 accum=r[1] N=1
  12 AggFinal         2    1    0 avg(1)        00 accum=r[2] N=1
  13 Divide           2    1    5               00 r[5]=r[1]/r[2]
REG[2] =  NULL
REG[1] =  NULL
REG[5] =  NULL
  14 Divide           2    1    6               00 r[6]=r[1]/r[2]
REG[2] =  NULL
REG[1] =  NULL
REG[6] =  NULL
  15 ResultRow        5    2    0               00 output=r[5..6]
REG[5] =  NULL
REG[6] =  NULL
  16 Halt             0    0    0               00 
SQL: [SELECT x, avg(x)+1 FROM t1 GROUP BY x ORDER BY x
;]
VDBE Trace:
   0 Init             0   45    0               00 Start at 45
  45 Transaction      0    0    7 0             01 usesStmtJournal=0
  46 Integer          1   13    0               00 r[13]=1
REG[13] =  i:1
  47 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 SorterOpen       2    1    0 k(1,B)        00 
   3 Integer          0    4    0               00 r[4]=0; clear abort flag
REG[4] =  i:0
   4 Null             0    7    7               00 r[7..7]=NULL
REG[7] =  NULL
   5 Gosub            6   41    0               00 
REG[6] =  i:5
  41 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  42 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
REG[3] =  i:0
  43 Return           6    0    0               00 
REG[6] =  i:5
   6 OpenRead         0    3    0 1             00 root=3 iDb=0; t1
   7 Explain          7    0    0 SCAN TABLE t1 00 
   8 Rewind           0   14    0               00 
  14 OpenPseudo       3    9    1               00 1 columns in r[9]
  15 SorterSort       2   44    0               00 GROUP BY sort
  44 Halt             0    0    0               00 
SQL: [SELECT x, count(*) FROM t1 
    GROUP BY x 
    HAVING count(*)>=4 
    ORDER BY max(x)+0
  
;]
VDBE Trace:
   0 Init             0   58    0               00 Start at 58
  58 Transaction      0    0    7 0             01 usesStmtJournal=0
  59 Integer          4   13    0               00 r[13]=4
REG[13] =  i:4
  60 Integer          0   17    0               00 r[17]=0
REG[17] =  i:0
  61 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 SorterOpen       2    1    0 k(1,B)        00 
   3 Integer          0    5    0               00 r[5]=0; clear abort flag
REG[5] =  i:0
   4 Null             0    8    8               00 r[8..8]=NULL
REG[8] =  NULL
   5 Gosub            7   46    0               00 
REG[7] =  i:5
  46 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  47 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
  48 Return           7    0    0               00 
REG[7] =  i:5
   6 OpenRead         0    3    0 1             00 root=3 iDb=0; t1
   7 Explain          7    0    0 SCAN TABLE t1 00 
   8 Rewind           0   14    0               00 
  14 OpenPseudo       3   10    1               00 1 columns in r[10]
  15 SorterSort       2   49    0               00 GROUP BY sort
  49 Explain         49    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  50 OpenPseudo       4   19    4               00 4 columns in r[19]
  51 SorterSort       1   57    0               00 
  57 Halt             0    0    0               00 
SQL: [SELECT x AS x FROM t1 
    GROUP BY x
    HAVING count(*)>=4 
    ORDER BY max(x)+0
  
;]
VDBE Trace:
   0 Init             0   57    0               00 Start at 57
  57 Transaction      0    0    7 0             01 usesStmtJournal=0
  58 Integer          4   13    0               00 r[13]=4
REG[13] =  i:4
  59 Integer          0   16    0               00 r[16]=0
REG[16] =  i:0
  60 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 SorterOpen       2    1    0 k(1,B)        00 
   3 Integer          0    5    0               00 r[5]=0; clear abort flag
REG[5] =  i:0
   4 Null             0    8    8               00 r[8..8]=NULL
REG[8] =  NULL
   5 Gosub            7   46    0               00 
REG[7] =  i:5
  46 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  47 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
  48 Return           7    0    0               00 
REG[7] =  i:5
   6 OpenRead         0    3    0 1             00 root=3 iDb=0; t1
   7 Explain          7    0    0 SCAN TABLE t1 00 
   8 Rewind           0   14    0               00 
  14 OpenPseudo       3   10    1               00 1 columns in r[10]
  15 SorterSort       2   49    0               00 GROUP BY sort
  49 Explain         49    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  50 OpenPseudo       4   18    3               00 3 columns in r[18]
  51 SorterSort       1   56    0               00 
  56 Halt             0    0    0               00 
SQL: [;
;SELECT t3, min(t3) FROM t2 GROUP BY t3 ORDER BY t3 DESC;]
VDBE Trace:
   0 Init             0   45    0               00 Start at 45
  45 Transaction      0    0    7 0             01 usesStmtJournal=0
  46 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 SorterOpen       2    1    0 k(1,-B)       00 
   3 Integer          0    4    0               00 r[4]=0; clear abort flag
REG[4] =  i:0
   4 Null             0    7    7               00 r[7..7]=NULL
REG[7] =  NULL
   5 Gosub            6   41    0               00 
REG[6] =  i:5
  41 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  42 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
REG[3] =  i:0
  43 Return           6    0    0               00 
REG[6] =  i:5
   6 OpenRead         0    4    0 1             00 root=4 iDb=0; t2
   7 Explain          7    0    0 SCAN TABLE t2 00 
   8 Rewind           0   14    0               00 
  14 OpenPseudo       3    9    1               00 1 columns in r[9]
  15 SorterSort       2   44    0               00 GROUP BY sort
  44 Halt             0    0    0               00 
SQL: [;
;SELECT t3, min(t3) FROM t2 GROUP BY t3 ORDER BY 1;]
VDBE Trace:
   0 Init             0   45    0               00 Start at 45
  45 Transaction      0    0    7 0             01 usesStmtJournal=0
  46 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 SorterOpen       2    1    0 k(1,B)        00 
   3 Integer          0    4    0               00 r[4]=0; clear abort flag
REG[4] =  i:0
   4 Null             0    7    7               00 r[7..7]=NULL
REG[7] =  NULL
   5 Gosub            6   41    0               00 
REG[6] =  i:5
  41 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  42 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
REG[3] =  i:0
  43 Return           6    0    0               00 
REG[6] =  i:5
   6 OpenRead         0    4    0 1             00 root=4 iDb=0; t2
   7 Explain          7    0    0 SCAN TABLE t2 00 
   8 Rewind           0   14    0               00 
  14 OpenPseudo       3    9    1               00 1 columns in r[9]
  15 SorterSort       2   44    0               00 GROUP BY sort
  44 Halt             0    0    0               00 
SQL: [;
;SELECT t3, min(t3) FROM t2 GROUP BY t3 ORDER BY 1;]
VDBE Trace:
   0 Init             0   45    0               00 Start at 45
  45 Transaction      0    0    7 0             01 usesStmtJournal=0
  46 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 SorterOpen       2    1    0 k(1,B)        00 
   3 Integer          0    4    0               00 r[4]=0; clear abort flag
REG[4] =  i:0
   4 Null             0    7    7               00 r[7..7]=NULL
REG[7] =  NULL
   5 Gosub            6   41    0               00 
REG[6] =  i:5
  41 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  42 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
REG[3] =  i:0
  43 Return           6    0    0               00 
REG[6] =  i:5
   6 OpenRead         0    4    0 1             00 root=4 iDb=0; t2
   7 Explain          7    0    0 SCAN TABLE t2 00 
   8 Rewind           0   14    0               00 
  14 OpenPseudo       3    9    1               00 1 columns in r[9]
  15 SorterSort       2   44    0               00 GROUP BY sort
  44 Halt             0    0    0               00 
SQL: [;CREATE TABLE b (t4a, i1 REAL PRIMARY KEY);]
VDBE Trace:
   0 Init             0   39    0               00 Start at 39
  39 Transaction      0    1    7 0             01 usesStmtJournal=0
  40 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:6
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  tx6[060000000000|......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  tx6[060000000000|......]
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      0    4    2               00 r[4]=root iDb=0 flags=2
REG[4] =  i:7
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:5
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_b_1 00 r[7]='sqlite_autoindex_b_1'
REG[7] =   t20[sqlite_autoindex_b_1](8)
  17 String8          0    8    0 b             00 r[8]='b'
REG[8] =   t1[b](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:7
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[6] =   t5[index](8)
REG[7] =   t20[sqlite_autoindex_b_1](8)
REG[8] =   t1[b](8)
REG[9] =  i:7
REG[10] =  NULL
REG[11] =  sx33[0617350F0100696E64657873716C6974655F6175746F696E64|..5...indexsqlite_autoind]
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  sx33[0617350F0100696E64657873716C6974655F6175746F696E64|..5...indexsqlite_autoind]
REG[5] =  i:5
  22 Close            0    0    0               00 
  23 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  24 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  25 Explain         25    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  26 SeekRowid        2   28    1               00 intkey=r[1]
REG[1] =  i:4
  27 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:4
  28 IsNull          13   36    0               00 if r[13]==NULL goto 36
REG[13] =  i:4
  29 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  30 String8          0   15    0 b             00 r[15]='b'
REG[15] =   t1[b](8)
  31 String8          0   16    0 b             00 r[16]='b'
REG[16] =   t1[b](8)
  32 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:6
  33 String8          0   18    0 CREATE TABLE b (t4a, i1 REAL PRIMARY KEY) 00 r[18]='CREATE TABLE b (t4a, i1 REAL PRIMARY KEY)'
REG[18] =   t41[CREATE TABLE b (t4a, i1 R](8)
  34 MakeRecord      14    5   12 BBBDB         00 r[12]=mkrec(r[14..18])
REG[14] =   t5[table](8)
REG[15] =   t1[b](8)
REG[16] =   t1[b](8)
REG[17] =  i:6
REG[18] =   t41[CREATE TABLE b (t4a, i1 R](8)
REG[12] =  sx55[06170F0F015F7461626C65626206435245415445205441424C|....._tablebb.CREATE TABL]
  35 Insert           2   12   13               00 intkey=r[13] data=r[12]
REG[12] =  sx55[06170F0F015F7461626C65626206435245415445205441424C|....._tablebb.CREATE TABL]
REG[13] =  i:4
  36 SetCookie        0    1    8               00 
  37 ParseSchema      0    0    0 tbl_name='b' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    8 0             00 usesStmtJournal=0
  18 String8          0    2    0 b             00 r[2]='b'
REG[2] =   t1[b](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[b](8)
REG[1] =   s2[t1](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[b](8)
REG[1] =   s2[t2](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[b](8)
REG[1] =   s2[t4](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[b](8)
REG[1] =   s1[b](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[b](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s1[b](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:6
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s41[CREATE TABLE b (t4a, i1 R](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s1[b](8)
REG[6] =   s1[b](8)
REG[7] =  i:6
REG[8] =   s41[CREATE TABLE b (t4a, i1 R](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[b](8)
REG[1] =   s1[b](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[index](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s20[sqlite_autoindex_b_1](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s1[b](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:7
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =  NULL
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[index](8)
REG[5] =   s20[sqlite_autoindex_b_1](8)
REG[6] =   s1[b](8)
REG[7] =  i:7
REG[8] =  NULL
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  38 Halt             0    0    0               00 
SQL: [;UPDATE t2 SET t3 = NULL;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1    8 0             01 usesStmtJournal=1
  17 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
  18 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenWrite        0    4    0 1             00 root=4 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   15    0               00 
  15 Halt             0    0    0               00 
SQL: [;PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0  118  115               00 Start at 118
 118 Transaction      0    0    8 0             01 usesStmtJournal=0
 119 Transaction      1    0    0 0             01 usesStmtJournal=0
 120 Integer          0   14    0               00 r[14]=0
REG[14] =  i:0
 121 Goto             0    1    0               00 
   1 Integer         99    1    0               00 r[1]=99
REG[1] =  i:99
   2 IntegrityCk      2    6    1 [6,7,5,4,3,1] 00 
   3 IsNull           2    9    0               00 if r[2]==NULL goto 9
REG[2] =  NULL
   9 OpenRead         1    6    0 2             00 root=6 iDb=0; b
  10 OpenRead         2    7    0 k(2,,)        00 root=7 iDb=0; sqlite_autoindex_b_1
  11 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  12 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  13 Rewind           1   37    0               00 
  37 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
  38 Count            2    3    0               00 r[3]=count()
REG[3] =  i:0
  39 Eq               8   45    3               90 if r[3]==r[8] goto 45
REG[8] =  i:0
REG[3] =  i:0
  45 OpenRead         1    5    0 1             00 root=5 iDb=0; t4
  46 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  47 Rewind           1   59    0               00 
  59 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
  60 OpenRead         1    4    0 1             00 root=4 iDb=0; t2
  61 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  62 Rewind           1   74    0               00 
  74 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
  75 OpenRead         1    3    0 1             00 root=3 iDb=0; t1
  76 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  77 Rewind           1   88    0               00 
  88 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
  89 OpenRead         1    1    0 5             00 root=1 iDb=0; sqlite_master
  90 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  91 Rewind           1   95    0               00 
  92 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  93 Column           1    4    3               80 r[3]=
REG[3] =   s36[CREATE TABLE t1(x TEXT, C](8)
  94 Next             1   92    0               00 
  92 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
  93 Column           1    4    3               80 r[3]=
REG[3] =   s53[CREATE TABLE t2(t3 TEXT, ](8)
  94 Next             1   92    0               00 
  92 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:2
  93 Column           1    4    3               80 r[3]=
REG[3] =   s54[CREATE TABLE t4(a TEXT, C](8)
  94 Next             1   92    0               00 
  92 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:3
  93 Column           1    4    3               80 r[3]=
REG[3] =   s41[CREATE TABLE b (t4a, i1 R](8)
  94 Next             1   92    0               00 
  92 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:4
  93 Column           1    4    3               80 r[3]=
REG[3] =  NULL
  94 Next             1   92    0               00 
  95 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
  96 IntegrityCk      2    1    1 [1]           01 
  97 IsNull           2  103    0               00 if r[2]==NULL goto 103
REG[2] =  NULL
 103 OpenRead         1    1    1 5             00 root=1 iDb=1; sqlite_temp_master
 104 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
 105 Rewind           1  109    0               00 
 109 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
 110 AddImm           1  -99    0               00 r[1]=r[1]+-99
REG[1] =  i:99
 111 IfNotZero        1  114    0               00 if r[1]!=0 then r[1]--, goto 114
REG[1] =  i:0
 112 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
 113 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
 114 Halt             0    0    0               00 
SQL: [;PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0  118  115               00 Start at 118
 118 Transaction      0    0    8 0             01 usesStmtJournal=0
 119 Transaction      1    0    0 0             01 usesStmtJournal=0
 120 Integer          0   14    0               00 r[14]=0
REG[14] =  i:0
 121 Goto             0    1    0               00 
   1 Integer         99    1    0               00 r[1]=99
REG[1] =  i:99
   2 IntegrityCk      2    6    1 [6,7,5,4,3,1] 00 
   3 IsNull           2    9    0               00 if r[2]==NULL goto 9
REG[2] =  NULL
   9 OpenRead         1    6    0 2             00 root=6 iDb=0; b
  10 OpenRead         2    7    0 k(2,,)        00 root=7 iDb=0; sqlite_autoindex_b_1
  11 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  12 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  13 Rewind           1   37    0               00 
  37 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
  38 Count            2    3    0               00 r[3]=count()
REG[3] =  i:0
  39 Eq               8   45    3               90 if r[3]==r[8] goto 45
REG[8] =  i:0
REG[3] =  i:0
  45 OpenRead         1    5    0 1             00 root=5 iDb=0; t4
  46 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  47 Rewind           1   59    0               00 
  59 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
  60 OpenRead         1    4    0 1             00 root=4 iDb=0; t2
  61 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  62 Rewind           1   74    0               00 
  74 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
  75 OpenRead         1    3    0 1             00 root=3 iDb=0; t1
  76 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  77 Rewind           1   88    0               00 
  88 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
  89 OpenRead         1    1    0 5             00 root=1 iDb=0; sqlite_master
  90 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  91 Rewind           1   95    0               00 
  92 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  93 Column           1    4    3               80 r[3]=
REG[3] =   s36[CREATE TABLE t1(x TEXT, C](8)
  94 Next             1   92    0               00 
  92 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
  93 Column           1    4    3               80 r[3]=
REG[3] =   s53[CREATE TABLE t2(t3 TEXT, ](8)
  94 Next             1   92    0               00 
  92 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:2
  93 Column           1    4    3               80 r[3]=
REG[3] =   s54[CREATE TABLE t4(a TEXT, C](8)
  94 Next             1   92    0               00 
  92 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:3
  93 Column           1    4    3               80 r[3]=
REG[3] =   s41[CREATE TABLE b (t4a, i1 R](8)
  94 Next             1   92    0               00 
  92 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:4
  93 Column           1    4    3               80 r[3]=
REG[3] =  NULL
  94 Next             1   92    0               00 
  95 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
  96 IntegrityCk      2    1    1 [1]           01 
  97 IsNull           2  103    0               00 if r[2]==NULL goto 103
REG[2] =  NULL
 103 OpenRead         1    1    1 5             00 root=1 iDb=1; sqlite_temp_master
 104 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
 105 Rewind           1  109    0               00 
 109 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
 110 AddImm           1  -99    0               00 r[1]=r[1]+-99
REG[1] =  i:99
 111 IfNotZero        1  114    0               00 if r[1]!=0 then r[1]--, goto 114
REG[1] =  i:0
 112 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
 113 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
 114 Halt             0    0    0               00 
SQL: [;SELECT DISTINCT * FROM t1 WHERE (t1.x IS NULL);]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    8 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Null             1    3    0               08 r[3]=NULL
REG[3] =  NULL
   2 OpenRead         0    3    0 1             00 root=3 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   12    0               00 
  12 Halt             0    0    0               00 
SQL: [;CREATE TABLE t5 (t7, t6 REAL PRIMARY KEY);]
VDBE Trace:
   0 Init             0   39    0               00 Start at 39
  39 Transaction      0    1    8 0             01 usesStmtJournal=0
  40 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:8
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  tx6[060000000000|......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  tx6[060000000000|......]
REG[1] =  i:6
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      0    4    2               00 r[4]=root iDb=0 flags=2
REG[4] =  i:9
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:7
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_t5_1 00 r[7]='sqlite_autoindex_t5_1'
REG[7] =   t21[sqlite_autoindex_t5_1](8)
  17 String8          0    8    0 t5            00 r[8]='t5'
REG[8] =   t2[t5](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:9
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[6] =   t5[index](8)
REG[7] =   t21[sqlite_autoindex_t5_1](8)
REG[8] =   t2[t5](8)
REG[9] =  i:9
REG[10] =  NULL
REG[11] =  sx35[061737110100696E64657873716C6974655F6175746F696E64|..7...indexsqlite_autoind]
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  sx35[061737110100696E64657873716C6974655F6175746F696E64|..7...indexsqlite_autoind]
REG[5] =  i:7
  22 Close            0    0    0               00 
  23 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  24 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  25 Explain         25    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  26 SeekRowid        2   28    1               00 intkey=r[1]
REG[1] =  i:6
  27 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:6
  28 IsNull          13   36    0               00 if r[13]==NULL goto 36
REG[13] =  i:6
  29 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  30 String8          0   15    0 t5            00 r[15]='t5'
REG[15] =   t2[t5](8)
  31 String8          0   16    0 t5            00 r[16]='t5'
REG[16] =   t2[t5](8)
  32 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:8
  33 String8          0   18    0 CREATE TABLE t5 (t7, t6 REAL PRIMARY KEY) 00 r[18]='CREATE TABLE t5 (t7, t6 REAL PRIMARY KEY)'
REG[18] =   t41[CREATE TABLE t5 (t7, t6 R](8)
  34 MakeRecord      14    5   12 BBBDB         00 r[12]=mkrec(r[14..18])
REG[14] =   t5[table](8)
REG[15] =   t2[t5](8)
REG[16] =   t2[t5](8)
REG[17] =  i:8
REG[18] =   t41[CREATE TABLE t5 (t7, t6 R](8)
REG[12] =  sx57[06171111015F7461626C657435743508435245415445205441|....._tablet5t5.CREATE TA]
  35 Insert           2   12   13               00 intkey=r[13] data=r[12]
REG[12] =  sx57[06171111015F7461626C657435743508435245415445205441|....._tablet5t5.CREATE TA]
REG[13] =  i:6
  36 SetCookie        0    1    9               00 
  37 ParseSchema      0    0    0 tbl_name='t5' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    9 0             00 usesStmtJournal=0
  18 String8          0    2    0 t5            00 r[2]='t5'
REG[2] =   t2[t5](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t5](8)
REG[1] =   s2[t1](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t5](8)
REG[1] =   s2[t2](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t5](8)
REG[1] =   s2[t4](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t5](8)
REG[1] =   s1[b](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t5](8)
REG[1] =   s1[b](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t5](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t5](8)
REG[1] =   s2[t5](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t5](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s2[t5](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:8
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s41[CREATE TABLE t5 (t7, t6 R](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s2[t5](8)
REG[6] =   s2[t5](8)
REG[7] =  i:8
REG[8] =   s41[CREATE TABLE t5 (t7, t6 R](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t5](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t5](8)
REG[1] =   s2[t5](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[index](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s21[sqlite_autoindex_t5_1](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s2[t5](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:9
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =  NULL
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[index](8)
REG[5] =   s21[sqlite_autoindex_t5_1](8)
REG[6] =   s2[t5](8)
REG[7] =  i:9
REG[8] =  NULL
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  38 Halt             0    0    0               00 
SQL: [;PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0  154  151               00 Start at 154
 154 Transaction      0    0    9 0             01 usesStmtJournal=0
 155 Transaction      1    0    0 0             01 usesStmtJournal=0
 156 Integer          0   14    0               00 r[14]=0
REG[14] =  i:0
 157 Goto             0    1    0               00 
   1 Integer         99    1    0               00 r[1]=99
REG[1] =  i:99
   2 IntegrityCk      2    8    1 [8,9,6,7,5,4,3,1] 00 
   3 IsNull           2    9    0               00 if r[2]==NULL goto 9
REG[2] =  NULL
   9 OpenRead         1    8    0 2             00 root=8 iDb=0; t5
  10 OpenRead         2    9    0 k(2,,)        00 root=9 iDb=0; sqlite_autoindex_t5_1
  11 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  12 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  13 Rewind           1   37    0               00 
  37 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
  38 Count            2    3    0               00 r[3]=count()
REG[3] =  i:0
  39 Eq               8   45    3               90 if r[3]==r[8] goto 45
REG[8] =  i:0
REG[3] =  i:0
  45 OpenRead         1    6    0 2             00 root=6 iDb=0; b
  46 OpenRead         2    7    0 k(2,,)        00 root=7 iDb=0; sqlite_autoindex_b_1
  47 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  48 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  49 Rewind           1   73    0               00 
  73 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
  74 Count            2    3    0               00 r[3]=count()
REG[3] =  i:0
  75 Eq               8   81    3               90 if r[3]==r[8] goto 81
REG[8] =  i:0
REG[3] =  i:0
  81 OpenRead         1    5    0 1             00 root=5 iDb=0; t4
  82 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  83 Rewind           1   95    0               00 
  95 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
  96 OpenRead         1    4    0 1             00 root=4 iDb=0; t2
  97 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  98 Rewind           1  110    0               00 
 110 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
 111 OpenRead         1    3    0 1             00 root=3 iDb=0; t1
 112 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
 113 Rewind           1  124    0               00 
 124 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
 125 OpenRead         1    1    0 5             00 root=1 iDb=0; sqlite_master
 126 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
 127 Rewind           1  131    0               00 
 128 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
 129 Column           1    4    3               80 r[3]=
REG[3] =   s36[CREATE TABLE t1(x TEXT, C](8)
 130 Next             1  128    0               00 
 128 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
 129 Column           1    4    3               80 r[3]=
REG[3] =   s53[CREATE TABLE t2(t3 TEXT, ](8)
 130 Next             1  128    0               00 
 128 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:2
 129 Column           1    4    3               80 r[3]=
REG[3] =   s54[CREATE TABLE t4(a TEXT, C](8)
 130 Next             1  128    0               00 
 128 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:3
 129 Column           1    4    3               80 r[3]=
REG[3] =   s41[CREATE TABLE b (t4a, i1 R](8)
 130 Next             1  128    0               00 
 128 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:4
 129 Column           1    4    3               80 r[3]=
REG[3] =  NULL
 130 Next             1  128    0               00 
 128 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:5
 129 Column           1    4    3               80 r[3]=
REG[3] =   s41[CREATE TABLE t5 (t7, t6 R](8)
 130 Next             1  128    0               00 
 128 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:6
 129 Column           1    4    3               80 r[3]=
REG[3] =  NULL
 130 Next             1  128    0               00 
 131 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
 132 IntegrityCk      2    1    1 [1]           01 
 133 IsNull           2  139    0               00 if r[2]==NULL goto 139
REG[2] =  NULL
 139 OpenRead         1    1    1 5             00 root=1 iDb=1; sqlite_temp_master
 140 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
 141 Rewind           1  145    0               00 
 145 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entries in ind](8)
 146 AddImm           1  -99    0               00 r[1]=r[1]+-99
REG[1] =  i:99
 147 IfNotZero        1  150    0               00 if r[1]!=0 then r[1]--, goto 150
REG[1] =  i:0
 148 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
 149 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
 150 Halt             0    0    0               00 
SQL: [;INSERT INTO t4(a, a) VALUES (0, $a), (0, 0);]
VDBE Trace:
   0 Init             0   22    0               00 Start at 22
  22 Transaction      0    1    9 0             01 usesStmtJournal=1
  23 Integer          0   10    0               00 r[10]=0
REG[10] =  i:0
  24 Goto             0    1    0               00 
   1 InitCoroutine    3   10    2               00 
  10 OpenWrite        0    5    0 1             00 root=5 iDb=0; t4
  11 Yield            3   21    0               00 
REG[3] =  i:1
REG[3] =  i:11
   2 Explain          2    0    0 SCAN 2 CONSTANT ROWS 00 
   3 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
   4 Variable         1    5    0 $a            00 r[5]=parameter(1,$a)
REG[5] =  NULL
   5 Yield            3    0    0               00 
REG[3] =  i:11
REG[3] =  i:5
  12 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
  13 SCopy            4    2    0               00 r[2]=r[4]
REG[2] =  i:0
  14 Abortable        0    0    0               00 
  15 Lt              10   18    2 (BINARY)      52 if r[2]<r[10] goto 18
REG[10] =  i:0
REG[2] =  i:0
  16 Gt               2   18    2 (BINARY)      52 if r[2]>r[2] goto 18

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fe6c8e49859 in __GI_abort () at abort.c:79
#2  0x00007fe6c8e49729 in __assert_fail_base (fmt=0x7fe6c8fdf588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21dc88 "pIn1!=pIn3", file=0x2291f4 "sqlite3.c", line=86002, function=<optimized out>) at assert.c:92
#3  0x00007fe6c8e5afd6 in __GI___assert_fail (assertion=0x21dc88 "pIn1!=pIn3", file=0x2291f4 "sqlite3.c", line=86002, function=0x216a86 "int sqlite3VdbeExec(Vdbe *)") at assert.c:101
#4  0x00000000003cf4ad in sqlite3VdbeExec (p=0x1079240) at sqlite3.c:86002
#5  0x000000000041ba74 in sqlite3Step (p=0x1079240) at sqlite3.c:82300
#6  0x0000000000293d5d in sqlite3_step (pStmt=0x1079240) at sqlite3.c:82365
#7  0x0000000000258a39 in main (argc=1, argv=0x7fff80423ab8) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 41852] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
