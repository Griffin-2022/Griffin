GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000440,sig:06,src:023758+024966,time:22798343,execs:4406898,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
parser: [[[PRAGMA journal_mode = wal;;CREATE TABLE t1(x TEXT, CHECK(x NOT BETWEEN +x AND 999999));;WITH s(i) AS (
        SELECT 1 UNION ALL SELECT i+1 FROM s LIMIT 20
    )
    INSERT INTO t1 SELECT randomblob(750) FROM s;VACUUM;;
;CREATE TABLE t2(t3,t4,a);;
;CREATE TABLE b(i1, t4a);;
;PRAGMA integrity_check;CREATE INDEX t5 ON t1(x)
;CREATE TABLE t6(t7 TEXT PRIMARY KEY);;BEGIN;;ROLLBACK;;SELECT t4 FROM t2 WHERE t4>=(?1 || ?2) collate "binary"   AND t4<=(?1 || char(1114111)) collate "binary"    ORDER BY 1 collate "binary" ASC LIMIT 1
;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;SELECT +x FROM t1;;BEGIN;SELECT a, a, a, coalesce(a,a)  FROM "main"."t2" WHERE a=0 AND a>=?1 AND a<?2
;;CREATE TABLE IF NOT EXISTS "main"."t8"(
  t9 INTEGER PRIMARY KEY,
  letter INT,
  number INT,
  test TEXT,
  t10 TEXT,
  i2 TEXT
);;PRAGMA table_info = t5;;ROLLBACK;;BEGIN;UPDATE OR REPLACE "main"."t2" SET t3=3, t3=1, t3=0, t3='Archilles', t3=nullif('archilles','Archilles'), t3='RCLC' WHERE t3=1
;;ROLLBACK;UPDATE OR IGNORE "main"."t1" SET x=3, x=1, x=0, x='Apollo', x=nullif('apollo','Apollo'), x='ABL' WHERE x=2
;;ROLLBACK;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'PRAGMA' in state 0
parser: Shift 'PRAGMA', go to state 215
parser: Return. Stack=[PRAGMA]
parser: Input 'ID' in state 215
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[PRAGMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 215.
parser: ... then shift 'nm', go to state 295
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 394
parser: Shift 'EQ', go to state 31
parser: Return. Stack=[PRAGMA nm dbnm EQ]
parser: Input 'ID' in state 31
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[PRAGMA nm dbnm EQ ID]
parser: Input 'SEMI' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 31.
parser: ... then shift 'nm', pending reduce 238
parser: Reduce 238 [cmd ::= PRAGMA nm dbnm EQ nmnum], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[;CREATE TABLE t1(x TEXT, CHECK(x NOT BETWEEN +x AND 999999));;WITH s(i) AS (
        SELECT 1 UNION ALL SELECT i+1 FROM s LIMIT 20
    )
    INSERT INTO t1 SELECT randomblob(750) FROM s;VACUUM;;
;CREATE TABLE t2(t3,t4,a);;
;CREATE TABLE b(i1, t4a);;
;PRAGMA integrity_check;CREATE INDEX t5 ON t1(x)
;CREATE TABLE t6(t7 TEXT PRIMARY KEY);;BEGIN;;ROLLBACK;;SELECT t4 FROM t2 WHERE t4>=(?1 || ?2) collate "binary"   AND t4<=(?1 || char(1114111)) collate "binary"    ORDER BY 1 collate "binary" ASC LIMIT 1
;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;SELECT +x FROM t1;;BEGIN;SELECT a, a, a, coalesce(a,a)  FROM "main"."t2" WHERE a=0 AND a>=?1 AND a<?2
;;CREATE TABLE IF NOT EXISTS "main"."t8"(
  t9 INTEGER PRIMARY KEY,
  letter INT,
  number INT,
  test TEXT,
  t10 TEXT,
  i2 TEXT
);;PRAGMA table_info = t5;;ROLLBACK;;BEGIN;UPDATE OR REPLACE "main"."t2" SET t3=3, t3=1, t3=0, t3='Archilles', t3=nullif('archilles','Archilles'), t3='RCLC' WHERE t3=1
;;ROLLBACK;UPDATE OR IGNORE "main"."t1" SET x=3, x=1, x=0, x='Apollo', x=nullif('apollo','Apollo'), x='ABL' WHERE x=2
;;ROLLBACK;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'CREATE' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[ecmd CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 1.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 390
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[ecmd createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 1.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[ecmd create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd create_table LP ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[ecmd create_table LP nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 379
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 152
parser: Reduce 336 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[ecmd create_table LP columnlist COMMA]
parser: Input 'CHECK' in state 34
parser: Shift 'CHECK', go to state 471
parser: Return. Stack=[ecmd create_table LP columnlist COMMA CHECK]
parser: Input 'LP' in state 471
parser: Shift 'LP', go to state 88
parser: Return. Stack=[ecmd create_table LP columnlist COMMA CHECK LP]
parser: Input 'ID' in state 88
parser: Shift 'ID', go to state 419
parser: Return. Stack=[ecmd create_table LP columnlist COMMA CHECK LP ID]
parser: Input 'NOT' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 88.
parser: ... then shift 'expr', go to state 45
parser: Shift 'NOT', go to state 386
parser: Return. Stack=[ecmd create_table LP columnlist COMMA CHECK LP expr NOT]
parser: Input 'BETWEEN' in state 386
parser: Shift 'BETWEEN', pending reduce 202
parser: Return. Stack=[ecmd create_table LP columnlist COMMA CHECK LP expr NOT BETWEEN]
parser: Input 'PLUS' with pending reduce 202
parser: Reduce 202 [between_op ::= NOT BETWEEN], go to state 45.
parser: ... then shift 'between_op', go to state 109
parser: Shift 'PLUS', go to state 103
parser: Return. Stack=[ecmd create_table LP columnlist COMMA CHECK LP expr between_op PLUS]
parser: Input 'ID' in state 103
parser: Shift 'ID', go to state 419
parser: Return. Stack=[ecmd create_table LP columnlist COMMA CHECK LP expr between_op PLUS ID]
parser: Input 'AND' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 103.
parser: ... then shift 'expr', go to state 149
parser: Reduce 200 [expr ::= PLUS|MINUS expr], go to state 109.
parser: ... then shift 'expr', go to state 72
parser: Shift 'AND', go to state 108
parser: Return. Stack=[ecmd create_table LP columnlist COMMA CHECK LP expr between_op expr AND]
parser: Input 'INTEGER' in state 108
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[ecmd create_table LP columnlist COMMA CHECK LP expr between_op expr AND INTEGER]
parser: Input 'RP' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 108.
parser: ... then shift 'term', go to state 126
parser: Reduce 203 [expr ::= expr between_op expr AND expr], go to state 88.
parser: ... then shift 'expr', go to state 45
parser: Shift 'RP', go to state 326
parser: Return. Stack=[ecmd create_table LP columnlist COMMA CHECK LP expr RP]
parser: Input 'RP' in state 326
parser: Reduce 69 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 66
parser: Reduce 66 [tcons ::= CHECK LP expr RP onconf], go to state 34.
parser: ... then shift 'tcons', go to state 278
parser: Reduce 347 [conslist_opt ::= COMMA conslist], go to state 365.
parser: ... then shift 'conslist_opt', go to state 540
parser: Shift 'RP', go to state 364
parser: Return. Stack=[ecmd create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 364
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: [[[UPDATE 'main'.sqlite_master SET type='table', name='t1', tbl_name='t1', rootpage=#2, sql='CREATE TABLE t1(x TEXT, CHECK(x NOT BETWEEN +x AND 999999))' WHERE rowid=#1]]]
parser: Input 'UPDATE' in state 0
parser: Reduce 380 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'STRING' in state 299
parser: Reduce 71 [orconf ::=].
parser: ... then shift 'orconf', go to state 167
parser: Shift 'STRING', pending reduce 338
parser: Return. Stack=[with UPDATE orconf STRING]
parser: Input 'DOT' with pending reduce 338
parser: Reduce 338 [nm ::= STRING], go to state 167.
parser: ... then shift 'nm', go to state 395
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 432
parser: Reduce 114 [xfullname ::= nm DOT nm], go to state 167.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 431
parser: Shift 'SET', go to state 155
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 155
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 155.
parser: ... then shift 'nm', go to state 445
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'STRING' in state 84
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 84.
parser: ... then shift 'term', go to state 58
parser: Reduce 152 [setlist ::= nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'VARIABLE' in state 86
parser: Shift 'VARIABLE', pending reduce 174
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ VARIABLE]
parser: Input 'COMMA' with pending reduce 174
parser: Reduce 174 [expr ::= VARIABLE], go to state 86.
parser: ... then shift 'expr', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'WHERE' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ]
parser: Input 'VARIABLE' in state 117
parser: Shift 'VARIABLE', pending reduce 174
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ VARIABLE]
parser: Input 'SEMI' with pending reduce 174
parser: Reduce 174 [expr ::= VARIABLE], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 148 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 149
parser: Reduce 149 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 327
parser: Reduce 327 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 323 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'create_table_args', pending reduce 334
parser: Reduce 334 [cmd ::= create_table create_table_args], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[SELECT*FROM"main".sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 97
parser: Return. Stack=[SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 97
parser: Reduce 97 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 110
parser: Reduce 110 [dbnm ::= DOT nm], go to state 350.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'NE' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'NE', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE STRING]
parser: Input 'ORDER' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 183 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 148 [where_opt ::= WHERE expr], go to state 363.
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 517
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 517
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 134 [sortorder ::=].
parser: ... then shift 'sortorder', go to state 353
parser: Reduce 137 [nulls ::=].
parser: ... then shift 'nulls', pending reduce 131
parser: Reduce 131 [sortlist ::= expr sortorder nulls], go to state 26.
parser: ... then shift 'sortlist', go to state 516
parser: Reduce 129 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 80
parser: Reduce 80 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE t1(x TEXT, CHECK(x NOT BETWEEN +x AND 999999))]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 390
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 379
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 152
parser: Reduce 336 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'CHECK' in state 34
parser: Shift 'CHECK', go to state 471
parser: Return. Stack=[create_table LP columnlist COMMA CHECK]
parser: Input 'LP' in state 471
parser: Shift 'LP', go to state 88
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP]
parser: Input 'ID' in state 88
parser: Shift 'ID', go to state 419
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP ID]
parser: Input 'NOT' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 88.
parser: ... then shift 'expr', go to state 45
parser: Shift 'NOT', go to state 386
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr NOT]
parser: Input 'BETWEEN' in state 386
parser: Shift 'BETWEEN', pending reduce 202
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr NOT BETWEEN]
parser: Input 'PLUS' with pending reduce 202
parser: Reduce 202 [between_op ::= NOT BETWEEN], go to state 45.
parser: ... then shift 'between_op', go to state 109
parser: Shift 'PLUS', go to state 103
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr between_op PLUS]
parser: Input 'ID' in state 103
parser: Shift 'ID', go to state 419
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr between_op PLUS ID]
parser: Input 'AND' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 103.
parser: ... then shift 'expr', go to state 149
parser: Reduce 200 [expr ::= PLUS|MINUS expr], go to state 109.
parser: ... then shift 'expr', go to state 72
parser: Shift 'AND', go to state 108
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr between_op expr AND]
parser: Input 'INTEGER' in state 108
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr between_op expr AND INTEGER]
parser: Input 'RP' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 108.
parser: ... then shift 'term', go to state 126
parser: Reduce 203 [expr ::= expr between_op expr AND expr], go to state 88.
parser: ... then shift 'expr', go to state 45
parser: Shift 'RP', go to state 326
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr RP]
parser: Input 'RP' in state 326
parser: Reduce 69 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 66
parser: Reduce 66 [tcons ::= CHECK LP expr RP onconf], go to state 34.
parser: ... then shift 'tcons', go to state 278
parser: Reduce 347 [conslist_opt ::= COMMA conslist], go to state 365.
parser: ... then shift 'conslist_opt', go to state 540
parser: Shift 'RP', go to state 364
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 364
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 334
parser: Reduce 334 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[;WITH s(i) AS (
        SELECT 1 UNION ALL SELECT i+1 FROM s LIMIT 20
    )
    INSERT INTO t1 SELECT randomblob(750) FROM s;VACUUM;;
;CREATE TABLE t2(t3,t4,a);;
;CREATE TABLE b(i1, t4a);;
;PRAGMA integrity_check;CREATE INDEX t5 ON t1(x)
;CREATE TABLE t6(t7 TEXT PRIMARY KEY);;BEGIN;;ROLLBACK;;SELECT t4 FROM t2 WHERE t4>=(?1 || ?2) collate "binary"   AND t4<=(?1 || char(1114111)) collate "binary"    ORDER BY 1 collate "binary" ASC LIMIT 1
;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;SELECT +x FROM t1;;BEGIN;SELECT a, a, a, coalesce(a,a)  FROM "main"."t2" WHERE a=0 AND a>=?1 AND a<?2
;;CREATE TABLE IF NOT EXISTS "main"."t8"(
  t9 INTEGER PRIMARY KEY,
  letter INT,
  number INT,
  test TEXT,
  t10 TEXT,
  i2 TEXT
);;PRAGMA table_info = t5;;ROLLBACK;;BEGIN;UPDATE OR REPLACE "main"."t2" SET t3=3, t3=1, t3=0, t3='Archilles', t3=nullif('archilles','Archilles'), t3='RCLC' WHERE t3=1
;;ROLLBACK;UPDATE OR IGNORE "main"."t1" SET x=3, x=1, x=0, x='Apollo', x=nullif('apollo','Apollo'), x='ABL' WHERE x=2
;;ROLLBACK;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'WITH' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'WITH', go to state 156
parser: Return. Stack=[ecmd WITH]
parser: Input 'ID' in state 156
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd WITH ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 156.
parser: ... then shift 'nm', go to state 338
parser: Shift 'LP', go to state 184
parser: Return. Stack=[ecmd WITH nm LP]
parser: Input 'ID' in state 184
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd WITH nm LP ID]
parser: Input 'RP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 184.
parser: ... then shift 'nm', go to state 339
parser: Reduce 230 [collate ::=].
parser: ... then shift 'collate', go to state 281
parser: Reduce 134 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 229
parser: Reduce 229 [eidlist ::= nm collate sortorder], go to state 184.
parser: ... then shift 'eidlist', go to state 410
parser: Shift 'RP', pending reduce 227
parser: Return. Stack=[ecmd WITH nm LP eidlist RP]
parser: Input 'AS' with pending reduce 227
parser: Reduce 227 [eidlist_opt ::= LP eidlist RP], go to state 338.
parser: ... then shift 'eidlist_opt', go to state 489
parser: Shift 'AS', go to state 488
parser: Return. Stack=[ecmd WITH nm eidlist_opt AS]
parser: Input 'LP' in state 488
parser: Shift 'LP', go to state 39
parser: Return. Stack=[ecmd WITH nm eidlist_opt AS LP]
parser: Input 'SELECT' in state 39
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[ecmd WITH nm eidlist_opt AS LP SELECT]
parser: Input 'INTEGER' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[ecmd WITH nm eidlist_opt AS LP SELECT distinct sclp scanpt INTEGER]
parser: Input 'UNION' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 77.
parser: ... then shift 'term', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Reduce 101 [from ::=].
parser: ... then shift 'from', go to state 363
parser: Reduce 147 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 128 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 39.
parser: ... then shift 'oneselect', go to state 264
parser: Shift 'UNION', go to state 535
parser: Return. Stack=[ecmd WITH nm eidlist_opt AS LP oneselect UNION]
parser: Input 'ALL' in state 535
parser: Shift 'ALL', pending reduce 86
parser: Return. Stack=[ecmd WITH nm eidlist_opt AS LP oneselect UNION ALL]
parser: Input 'SELECT' with pending reduce 86
parser: Reduce 86 [multiselect_op ::= UNION ALL], go to state 264.
parser: ... then shift 'multiselect_op', go to state 195
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[ecmd WITH nm eidlist_opt AS LP oneselect multiselect_op SELECT]
parser: Input 'ID' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 419
parser: Return. Stack=[ecmd WITH nm eidlist_opt AS LP oneselect multiselect_op SELECT distinct sclp scanpt ID]
parser: Input 'PLUS' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Shift 'PLUS', go to state 115
parser: Return. Stack=[ecmd WITH nm eidlist_opt AS LP oneselect multiselect_op SELECT distinct sclp scanpt expr PLUS]
parser: Input 'INTEGER' in state 115
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[ecmd WITH nm eidlist_opt AS LP oneselect multiselect_op SELECT distinct sclp scanpt expr PLUS INTEGER]
parser: Input 'FROM' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 115.
parser: ... then shift 'term', go to state 132
parser: Reduce 188 [expr ::= expr PLUS|MINUS expr], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[ecmd WITH nm eidlist_opt AS LP oneselect multiselect_op SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd WITH nm eidlist_opt AS LP oneselect multiselect_op SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'LIMIT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Reduce 147 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 128 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 360
parser: Shift 'LIMIT', go to state 122
parser: Return. Stack=[ecmd WITH nm eidlist_opt AS LP oneselect multiselect_op SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt LIMIT]
parser: Input 'INTEGER' in state 122
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[ecmd WITH nm eidlist_opt AS LP oneselect multiselect_op SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt LIMIT INTEGER]
parser: Input 'RP' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 122.
parser: ... then shift 'term', go to state 43
parser: Reduce 143 [limit_opt ::= LIMIT expr], go to state 360.
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 195.
parser: ... then shift 'oneselect', pending reduce 84
parser: Reduce 84 [selectnowith ::= selectnowith multiselect_op oneselect], go to state 39.
parser: ... then shift 'selectnowith', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 39.
parser: ... then shift 'select', go to state 487
parser: Shift 'RP', pending reduce 290
parser: Return. Stack=[ecmd WITH nm eidlist_opt AS LP select RP]
parser: Input 'INSERT' with pending reduce 290
parser: Reduce 290 [wqlist ::= nm eidlist_opt AS LP select RP], go to state 156.
parser: ... then shift 'wqlist', go to state 141
parser: Reduce 288 [with ::= WITH wqlist], go to state 1.
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[ecmd with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 71 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 160
parser: Reduce 160 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 430
parser: Shift 'INTO', go to state 166
parser: Return. Stack=[ecmd with insert_cmd INTO]
parser: Input 'ID' in state 166
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd with insert_cmd INTO ID]
parser: Input 'SELECT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 166.
parser: ... then shift 'nm', go to state 395
parser: Reduce 113 [xfullname ::= nm], go to state 166.
parser: ... then shift 'xfullname', go to state 298
parser: Reduce 162 [idlist_opt ::=].
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt SELECT]
parser: Input 'ID' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 419
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt SELECT distinct sclp scanpt ID]
parser: Input 'LP' in state 419
parser: Shift 'LP', go to state 266
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt SELECT distinct sclp scanpt ID LP]
parser: Input 'INTEGER' in state 266
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt SELECT distinct sclp scanpt ID LP distinct INTEGER]
parser: Input 'RP' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 11.
parser: ... then shift 'term', go to state 70
parser: Reduce 220 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Reduce 359 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 484
parser: Shift 'RP', go to state 146
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt SELECT distinct sclp scanpt ID LP distinct exprlist RP]
parser: Input 'FROM' in state 146
parser: Reduce 177 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'SEMI' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Reduce 147 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 128 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 156 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 154
parser: Reduce 154 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[VACUUM;;
;CREATE TABLE t2(t3,t4,a);;
;CREATE TABLE b(i1, t4a);;
;PRAGMA integrity_check;CREATE INDEX t5 ON t1(x)
;CREATE TABLE t6(t7 TEXT PRIMARY KEY);;BEGIN;;ROLLBACK;;SELECT t4 FROM t2 WHERE t4>=(?1 || ?2) collate "binary"   AND t4<=(?1 || char(1114111)) collate "binary"    ORDER BY 1 collate "binary" ASC LIMIT 1
;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;SELECT +x FROM t1;;BEGIN;SELECT a, a, a, coalesce(a,a)  FROM "main"."t2" WHERE a=0 AND a>=?1 AND a<?2
;;CREATE TABLE IF NOT EXISTS "main"."t8"(
  t9 INTEGER PRIMARY KEY,
  letter INT,
  number INT,
  test TEXT,
  t10 TEXT,
  i2 TEXT
);;PRAGMA table_info = t5;;ROLLBACK;;BEGIN;UPDATE OR REPLACE "main"."t2" SET t3=3, t3=1, t3=0, t3='Archilles', t3=nullif('archilles','Archilles'), t3='RCLC' WHERE t3=1
;;ROLLBACK;UPDATE OR IGNORE "main"."t1" SET x=3, x=1, x=0, x='Apollo', x=nullif('apollo','Apollo'), x='ABL' WHERE x=2
;;ROLLBACK;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'VACUUM' in state 0
parser: Shift 'VACUUM', go to state 154
parser: Return. Stack=[VACUUM]
parser: Input 'SEMI' in state 154
parser: Reduce 236 [vinto ::=].
parser: ... then shift 'vinto', pending reduce 233
parser: Reduce 233 [cmd ::= VACUUM vinto], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[ATTACH '' AS vacuum_db]]]
parser: Input 'ATTACH' in state 0
parser: Shift 'ATTACH', go to state 294
parser: Return. Stack=[ATTACH]
parser: Input 'STRING' in state 294
parser: Reduce 371 [database_kw_opt ::=].
parser: ... then shift 'database_kw_opt', go to state 81
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[ATTACH database_kw_opt STRING]
parser: Input 'AS' in state 539
parser: Reduce 172 [term ::= STRING], go to state 81.
parser: ... then shift 'term', go to state 44
parser: Shift 'AS', go to state 80
parser: Return. Stack=[ATTACH database_kw_opt term AS]
parser: Input 'ID' in state 80
parser: Shift 'ID', go to state 419
parser: Return. Stack=[ATTACH database_kw_opt term AS ID]
parser: Input 'SEMI' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 80.
parser: ... then shift 'expr', go to state 15
parser: Reduce 271 [key_opt ::=].
parser: ... then shift 'key_opt', pending reduce 269
parser: Reduce 269 [cmd ::= ATTACH database_kw_opt expr AS expr key_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE x(type text,name text,tbl_name text,rootpage int,sql text)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 390
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 379
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 152
parser: Reduce 336 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'RP' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Reduce 61 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 540
parser: Shift 'RP', go to state 364
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 364
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 334
parser: Reduce 334 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT*FROM"vacuum_db".sqlite_master ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 97
parser: Return. Stack=[SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 97
parser: Reduce 97 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'ORDER' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 110
parser: Reduce 110 [dbnm ::= DOT nm], go to state 350.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Reduce 147 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 517
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 517
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 134 [sortorder ::=].
parser: ... then shift 'sortorder', go to state 353
parser: Reduce 137 [nulls ::=].
parser: ... then shift 'nulls', pending reduce 131
parser: Reduce 131 [sortlist ::= expr sortorder nulls], go to state 26.
parser: ... then shift 'sortlist', go to state 516
parser: Reduce 129 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 80
parser: Reduce 80 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[BEGIN]]]
parser: Input 'BEGIN' in state 0
parser: Shift 'BEGIN', go to state 268
parser: Return. Stack=[BEGIN]
parser: Input 'SEMI' in state 268
parser: Reduce 4 [transtype ::=].
parser: ... then shift 'transtype', go to state 370
parser: Reduce 329 [trans_opt ::=].
parser: ... then shift 'trans_opt', pending reduce 3
parser: Reduce 3 [cmd ::= BEGIN transtype trans_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT sql FROM "main".sqlite_master WHERE type='table'AND name<>'sqlite_sequence' AND coalesce(rootpage,1)>0]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 110
parser: Reduce 110 [dbnm ::= DOT nm], go to state 350.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'NE' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'NE', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE STRING]
parser: Input 'AND' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 183 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'LP' in state 419
parser: Shift 'LP', go to state 266
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP]
parser: Input 'ID' in state 266
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct ID]
parser: Input 'COMMA' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 220 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA INTEGER]
parser: Input 'RP' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Reduce 359 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 484
parser: Shift 'RP', go to state 146
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct exprlist RP]
parser: Input 'GT' in state 146
parser: Reduce 177 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'GT', go to state 118
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr GT]
parser: Input 'INTEGER' in state 118
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr GT INTEGER]
parser: Input 'SEMI' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 118.
parser: ... then shift 'term', go to state 130
parser: Reduce 185 [expr ::= expr LT|GT|GE|LE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 183 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 148 [where_opt ::= WHERE expr], go to state 363.
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 128 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 80
parser: Reduce 80 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE sqlite_stat1(tbl,idx,stat)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 390
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP ID]
parser: Input 'COMMA' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 192
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 379
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 152
parser: Reduce 336 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'RP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Reduce 61 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 540
parser: Shift 'RP', go to state 364
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 364
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: [[[UPDATE 'vacuum_db'.sqlite_master SET type='table', name='sqlite_stat1', tbl_name='sqlite_stat1', rootpage=#2, sql='CREATE TABLE sqlite_stat1(tbl,idx,stat)' WHERE rowid=#1]]]
parser: Input 'UPDATE' in state 0
parser: Reduce 380 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'STRING' in state 299
parser: Reduce 71 [orconf ::=].
parser: ... then shift 'orconf', go to state 167
parser: Shift 'STRING', pending reduce 338
parser: Return. Stack=[with UPDATE orconf STRING]
parser: Input 'DOT' with pending reduce 338
parser: Reduce 338 [nm ::= STRING], go to state 167.
parser: ... then shift 'nm', go to state 395
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 432
parser: Reduce 114 [xfullname ::= nm DOT nm], go to state 167.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 431
parser: Shift 'SET', go to state 155
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 155
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 155.
parser: ... then shift 'nm', go to state 445
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'STRING' in state 84
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 84.
parser: ... then shift 'term', go to state 58
parser: Reduce 152 [setlist ::= nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'VARIABLE' in state 86
parser: Shift 'VARIABLE', pending reduce 174
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ VARIABLE]
parser: Input 'COMMA' with pending reduce 174
parser: Reduce 174 [expr ::= VARIABLE], go to state 86.
parser: ... then shift 'expr', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'WHERE' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ]
parser: Input 'VARIABLE' in state 117
parser: Shift 'VARIABLE', pending reduce 174
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ VARIABLE]
parser: Input 'SEMI' with pending reduce 174
parser: Reduce 174 [expr ::= VARIABLE], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 148 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 149
parser: Reduce 149 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 327
parser: Reduce 327 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 323 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'create_table_args', pending reduce 334
parser: Reduce 334 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT*FROM"vacuum_db".sqlite_master WHERE tbl_name='sqlite_stat1' AND type!='trigger' ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 97
parser: Return. Stack=[SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 97
parser: Reduce 97 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 110
parser: Reduce 110 [dbnm ::= DOT nm], go to state 350.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'NE' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'NE', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE STRING]
parser: Input 'ORDER' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 183 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 148 [where_opt ::= WHERE expr], go to state 363.
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 517
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 517
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 134 [sortorder ::=].
parser: ... then shift 'sortorder', go to state 353
parser: Reduce 137 [nulls ::=].
parser: ... then shift 'nulls', pending reduce 131
parser: Reduce 131 [sortlist ::= expr sortorder nulls], go to state 26.
parser: ... then shift 'sortlist', go to state 516
parser: Reduce 129 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 80
parser: Reduce 80 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE sqlite_stat1(tbl,idx,stat)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 390
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP ID]
parser: Input 'COMMA' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 192
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 379
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 152
parser: Reduce 336 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'RP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Reduce 61 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 540
parser: Shift 'RP', go to state 364
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 364
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 334
parser: Reduce 334 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE t1(x TEXT, CHECK(x NOT BETWEEN +x AND 999999))]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 390
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 379
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 152
parser: Reduce 336 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'CHECK' in state 34
parser: Shift 'CHECK', go to state 471
parser: Return. Stack=[create_table LP columnlist COMMA CHECK]
parser: Input 'LP' in state 471
parser: Shift 'LP', go to state 88
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP]
parser: Input 'ID' in state 88
parser: Shift 'ID', go to state 419
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP ID]
parser: Input 'NOT' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 88.
parser: ... then shift 'expr', go to state 45
parser: Shift 'NOT', go to state 386
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr NOT]
parser: Input 'BETWEEN' in state 386
parser: Shift 'BETWEEN', pending reduce 202
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr NOT BETWEEN]
parser: Input 'PLUS' with pending reduce 202
parser: Reduce 202 [between_op ::= NOT BETWEEN], go to state 45.
parser: ... then shift 'between_op', go to state 109
parser: Shift 'PLUS', go to state 103
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr between_op PLUS]
parser: Input 'ID' in state 103
parser: Shift 'ID', go to state 419
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr between_op PLUS ID]
parser: Input 'AND' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 103.
parser: ... then shift 'expr', go to state 149
parser: Reduce 200 [expr ::= PLUS|MINUS expr], go to state 109.
parser: ... then shift 'expr', go to state 72
parser: Shift 'AND', go to state 108
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr between_op expr AND]
parser: Input 'INTEGER' in state 108
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr between_op expr AND INTEGER]
parser: Input 'RP' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 108.
parser: ... then shift 'term', go to state 126
parser: Reduce 203 [expr ::= expr between_op expr AND expr], go to state 88.
parser: ... then shift 'expr', go to state 45
parser: Shift 'RP', go to state 326
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr RP]
parser: Input 'RP' in state 326
parser: Reduce 69 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 66
parser: Reduce 66 [tcons ::= CHECK LP expr RP onconf], go to state 34.
parser: ... then shift 'tcons', go to state 278
parser: Reduce 347 [conslist_opt ::= COMMA conslist], go to state 365.
parser: ... then shift 'conslist_opt', go to state 540
parser: Shift 'RP', go to state 364
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 364
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: [[[UPDATE 'vacuum_db'.sqlite_master SET type='table', name='t1', tbl_name='t1', rootpage=#2, sql='CREATE TABLE t1(x TEXT, CHECK(x NOT BETWEEN +x AND 999999))' WHERE rowid=#1]]]
parser: Input 'UPDATE' in state 0
parser: Reduce 380 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'STRING' in state 299
parser: Reduce 71 [orconf ::=].
parser: ... then shift 'orconf', go to state 167
parser: Shift 'STRING', pending reduce 338
parser: Return. Stack=[with UPDATE orconf STRING]
parser: Input 'DOT' with pending reduce 338
parser: Reduce 338 [nm ::= STRING], go to state 167.
parser: ... then shift 'nm', go to state 395
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 432
parser: Reduce 114 [xfullname ::= nm DOT nm], go to state 167.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 431
parser: Shift 'SET', go to state 155
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 155
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 155.
parser: ... then shift 'nm', go to state 445
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'STRING' in state 84
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 84.
parser: ... then shift 'term', go to state 58
parser: Reduce 152 [setlist ::= nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'VARIABLE' in state 86
parser: Shift 'VARIABLE', pending reduce 174
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ VARIABLE]
parser: Input 'COMMA' with pending reduce 174
parser: Reduce 174 [expr ::= VARIABLE], go to state 86.
parser: ... then shift 'expr', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'WHERE' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ]
parser: Input 'VARIABLE' in state 117
parser: Shift 'VARIABLE', pending reduce 174
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ VARIABLE]
parser: Input 'SEMI' with pending reduce 174
parser: Reduce 174 [expr ::= VARIABLE], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 148 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 149
parser: Reduce 149 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 327
parser: Reduce 327 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 323 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'create_table_args', pending reduce 334
parser: Reduce 334 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT*FROM"vacuum_db".sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 97
parser: Return. Stack=[SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 97
parser: Reduce 97 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 110
parser: Reduce 110 [dbnm ::= DOT nm], go to state 350.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'NE' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'NE', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE STRING]
parser: Input 'ORDER' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 183 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 148 [where_opt ::= WHERE expr], go to state 363.
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 517
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 517
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 134 [sortorder ::=].
parser: ... then shift 'sortorder', go to state 353
parser: Reduce 137 [nulls ::=].
parser: ... then shift 'nulls', pending reduce 131
parser: Reduce 131 [sortlist ::= expr sortorder nulls], go to state 26.
parser: ... then shift 'sortlist', go to state 516
parser: Reduce 129 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 80
parser: Reduce 80 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE t1(x TEXT, CHECK(x NOT BETWEEN +x AND 999999))]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 390
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 379
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 152
parser: Reduce 336 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'CHECK' in state 34
parser: Shift 'CHECK', go to state 471
parser: Return. Stack=[create_table LP columnlist COMMA CHECK]
parser: Input 'LP' in state 471
parser: Shift 'LP', go to state 88
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP]
parser: Input 'ID' in state 88
parser: Shift 'ID', go to state 419
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP ID]
parser: Input 'NOT' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 88.
parser: ... then shift 'expr', go to state 45
parser: Shift 'NOT', go to state 386
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr NOT]
parser: Input 'BETWEEN' in state 386
parser: Shift 'BETWEEN', pending reduce 202
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr NOT BETWEEN]
parser: Input 'PLUS' with pending reduce 202
parser: Reduce 202 [between_op ::= NOT BETWEEN], go to state 45.
parser: ... then shift 'between_op', go to state 109
parser: Shift 'PLUS', go to state 103
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr between_op PLUS]
parser: Input 'ID' in state 103
parser: Shift 'ID', go to state 419
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr between_op PLUS ID]
parser: Input 'AND' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 103.
parser: ... then shift 'expr', go to state 149
parser: Reduce 200 [expr ::= PLUS|MINUS expr], go to state 109.
parser: ... then shift 'expr', go to state 72
parser: Shift 'AND', go to state 108
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr between_op expr AND]
parser: Input 'INTEGER' in state 108
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr between_op expr AND INTEGER]
parser: Input 'RP' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 108.
parser: ... then shift 'term', go to state 126
parser: Reduce 203 [expr ::= expr between_op expr AND expr], go to state 88.
parser: ... then shift 'expr', go to state 45
parser: Shift 'RP', go to state 326
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr RP]
parser: Input 'RP' in state 326
parser: Reduce 69 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 66
parser: Reduce 66 [tcons ::= CHECK LP expr RP onconf], go to state 34.
parser: ... then shift 'tcons', go to state 278
parser: Reduce 347 [conslist_opt ::= COMMA conslist], go to state 365.
parser: ... then shift 'conslist_opt', go to state 540
parser: Shift 'RP', go to state 364
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 364
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 334
parser: Reduce 334 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT sql FROM "main".sqlite_master WHERE type='index']]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 110
parser: Reduce 110 [dbnm ::= DOT nm], go to state 350.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'SEMI' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 148 [where_opt ::= WHERE expr], go to state 363.
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 128 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 80
parser: Reduce 80 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT'INSERT INTO vacuum_db.'||quote(name)||' SELECT*FROM"main".'||quote(name)FROM vacuum_db.sqlite_master WHERE type='table'AND coalesce(rootpage,1)>0]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'STRING' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct sclp scanpt STRING]
parser: Input 'CONCAT' in state 539
parser: Reduce 172 [term ::= STRING], go to state 77.
parser: ... then shift 'term', go to state 16
parser: Shift 'CONCAT', go to state 113
parser: Return. Stack=[SELECT distinct sclp scanpt term CONCAT]
parser: Input 'ID' in state 113
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct sclp scanpt term CONCAT ID]
parser: Input 'LP' in state 419
parser: Shift 'LP', go to state 266
parser: Return. Stack=[SELECT distinct sclp scanpt term CONCAT ID LP]
parser: Input 'ID' in state 266
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct sclp scanpt term CONCAT ID LP distinct ID]
parser: Input 'RP' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 220 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Reduce 359 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 484
parser: Shift 'RP', go to state 146
parser: Return. Stack=[SELECT distinct sclp scanpt term CONCAT ID LP distinct exprlist RP]
parser: Input 'CONCAT' in state 146
parser: Reduce 177 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 113.
parser: ... then shift 'expr', go to state 148
parser: Reduce 190 [expr ::= expr CONCAT expr], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Shift 'CONCAT', go to state 113
parser: Return. Stack=[SELECT distinct sclp scanpt expr CONCAT]
parser: Input 'STRING' in state 113
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct sclp scanpt expr CONCAT STRING]
parser: Input 'CONCAT' in state 539
parser: Reduce 172 [term ::= STRING], go to state 113.
parser: ... then shift 'term', go to state 148
parser: Reduce 190 [expr ::= expr CONCAT expr], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Shift 'CONCAT', go to state 113
parser: Return. Stack=[SELECT distinct sclp scanpt expr CONCAT]
parser: Input 'ID' in state 113
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct sclp scanpt expr CONCAT ID]
parser: Input 'LP' in state 419
parser: Shift 'LP', go to state 266
parser: Return. Stack=[SELECT distinct sclp scanpt expr CONCAT ID LP]
parser: Input 'ID' in state 266
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct sclp scanpt expr CONCAT ID LP distinct ID]
parser: Input 'RP' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 220 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Reduce 359 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 484
parser: Shift 'RP', go to state 146
parser: Return. Stack=[SELECT distinct sclp scanpt expr CONCAT ID LP distinct exprlist RP]
parser: Input 'FROM' in state 146
parser: Reduce 177 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 113.
parser: ... then shift 'expr', go to state 148
parser: Reduce 190 [expr ::= expr CONCAT expr], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 110
parser: Reduce 110 [dbnm ::= DOT nm], go to state 350.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'LP' in state 419
parser: Shift 'LP', go to state 266
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP]
parser: Input 'ID' in state 266
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct ID]
parser: Input 'COMMA' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 220 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA INTEGER]
parser: Input 'RP' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Reduce 359 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 484
parser: Shift 'RP', go to state 146
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct exprlist RP]
parser: Input 'GT' in state 146
parser: Reduce 177 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'GT', go to state 118
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr GT]
parser: Input 'INTEGER' in state 118
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr GT INTEGER]
parser: Input 'SEMI' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 118.
parser: ... then shift 'term', go to state 130
parser: Reduce 185 [expr ::= expr LT|GT|GE|LE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 183 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 148 [where_opt ::= WHERE expr], go to state 363.
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 128 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 80
parser: Reduce 80 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[INSERT INTO vacuum_db.'sqlite_stat1' SELECT*FROM"main".'sqlite_stat1']]]
parser: Input 'INSERT' in state 0
parser: Reduce 380 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 71 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 160
parser: Reduce 160 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 430
parser: Shift 'INTO', go to state 166
parser: Return. Stack=[with insert_cmd INTO]
parser: Input 'ID' in state 166
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with insert_cmd INTO ID]
parser: Input 'DOT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 166.
parser: ... then shift 'nm', go to state 395
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with insert_cmd INTO nm DOT]
parser: Input 'STRING' in state 218
parser: Shift 'STRING', pending reduce 338
parser: Return. Stack=[with insert_cmd INTO nm DOT STRING]
parser: Input 'SELECT' with pending reduce 338
parser: Reduce 338 [nm ::= STRING], go to state 218.
parser: ... then shift 'nm', go to state 432
parser: Reduce 114 [xfullname ::= nm DOT nm], go to state 166.
parser: ... then shift 'xfullname', go to state 298
parser: Reduce 162 [idlist_opt ::=].
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 97
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 97
parser: Reduce 97 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'STRING' in state 245
parser: Shift 'STRING', pending reduce 338
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM stl_prefix nm DOT STRING]
parser: Input 'SEMI' with pending reduce 338
parser: Reduce 338 [nm ::= STRING], go to state 245.
parser: ... then shift 'nm', pending reduce 110
parser: Reduce 110 [dbnm ::= DOT nm], go to state 350.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Reduce 147 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 128 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 156 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 154
parser: Reduce 154 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[INSERT INTO vacuum_db.'t1' SELECT*FROM"main".'t1']]]
parser: Input 'INSERT' in state 0
parser: Reduce 380 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 71 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 160
parser: Reduce 160 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 430
parser: Shift 'INTO', go to state 166
parser: Return. Stack=[with insert_cmd INTO]
parser: Input 'ID' in state 166
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with insert_cmd INTO ID]
parser: Input 'DOT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 166.
parser: ... then shift 'nm', go to state 395
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with insert_cmd INTO nm DOT]
parser: Input 'STRING' in state 218
parser: Shift 'STRING', pending reduce 338
parser: Return. Stack=[with insert_cmd INTO nm DOT STRING]
parser: Input 'SELECT' with pending reduce 338
parser: Reduce 338 [nm ::= STRING], go to state 218.
parser: ... then shift 'nm', go to state 432
parser: Reduce 114 [xfullname ::= nm DOT nm], go to state 166.
parser: ... then shift 'xfullname', go to state 298
parser: Reduce 162 [idlist_opt ::=].
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 97
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 97
parser: Reduce 97 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'STRING' in state 245
parser: Shift 'STRING', pending reduce 338
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM stl_prefix nm DOT STRING]
parser: Input 'SEMI' with pending reduce 338
parser: Reduce 338 [nm ::= STRING], go to state 245.
parser: ... then shift 'nm', pending reduce 110
parser: Reduce 110 [dbnm ::= DOT nm], go to state 350.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Reduce 147 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 128 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 156 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 154
parser: Reduce 154 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[INSERT INTO vacuum_db.sqlite_master SELECT*FROM "main".sqlite_master WHERE type IN('view','trigger') OR(type='table'AND rootpage=0)]]]
parser: Input 'INSERT' in state 0
parser: Reduce 380 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 71 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 160
parser: Reduce 160 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 430
parser: Shift 'INTO', go to state 166
parser: Return. Stack=[with insert_cmd INTO]
parser: Input 'ID' in state 166
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with insert_cmd INTO ID]
parser: Input 'DOT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 166.
parser: ... then shift 'nm', go to state 395
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with insert_cmd INTO nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with insert_cmd INTO nm DOT ID]
parser: Input 'SELECT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 432
parser: Reduce 114 [xfullname ::= nm DOT nm], go to state 166.
parser: ... then shift 'xfullname', go to state 298
parser: Reduce 162 [idlist_opt ::=].
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 97
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 97
parser: Reduce 97 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 110
parser: Reduce 110 [dbnm ::= DOT nm], go to state 350.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE ID]
parser: Input 'IN' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'IN', pending reduce 204
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr IN]
parser: Input 'LP' with pending reduce 204
parser: Reduce 204 [in_op ::= IN], go to state 63.
parser: ... then shift 'in_op', go to state 209
parser: Shift 'LP', go to state 3
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr in_op LP]
parser: Input 'STRING' in state 3
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr in_op LP STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 3.
parser: ... then shift 'term', go to state 70
parser: Reduce 220 [nexprlist ::= expr], go to state 3.
parser: ... then shift 'nexprlist', go to state 519
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr in_op LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr in_op LP nexprlist COMMA STRING]
parser: Input 'RP' in state 539
parser: Reduce 172 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 3.
parser: ... then shift 'nexprlist', go to state 519
parser: Reduce 359 [exprlist ::= nexprlist], go to state 3.
parser: ... then shift 'exprlist', go to state 521
parser: Shift 'RP', pending reduce 206
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr in_op LP exprlist RP]
parser: Input 'OR' with pending reduce 206
parser: Reduce 206 [expr ::= expr in_op LP exprlist RP], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'OR', go to state 119
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr OR]
parser: Input 'LP' in state 119
parser: Shift 'LP', go to state 4
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr OR LP]
parser: Input 'ID' in state 4
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr OR LP ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 4.
parser: ... then shift 'expr', go to state 50
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr OR LP expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr OR LP expr EQ STRING]
parser: Input 'AND' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 4.
parser: ... then shift 'expr', go to state 50
parser: Shift 'AND', go to state 120
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr OR LP expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr OR LP expr AND ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr OR LP expr AND expr EQ]
parser: Input 'INTEGER' in state 117
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr OR LP expr AND expr EQ INTEGER]
parser: Input 'RP' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 183 [expr ::= expr AND expr], go to state 4.
parser: ... then shift 'expr', go to state 50
parser: Shift 'RP', pending reduce 166
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt SELECT distinct selcollist from WHERE expr OR LP expr RP]
parser: Input 'SEMI' with pending reduce 166
parser: Reduce 166 [expr ::= LP expr RP], go to state 119.
parser: ... then shift 'expr', go to state 74
parser: Reduce 184 [expr ::= expr OR expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 148 [where_opt ::= WHERE expr], go to state 363.
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 128 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 156 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 154
parser: Reduce 154 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[;
;CREATE TABLE t2(t3,t4,a);;
;CREATE TABLE b(i1, t4a);;
;PRAGMA integrity_check;CREATE INDEX t5 ON t1(x)
;CREATE TABLE t6(t7 TEXT PRIMARY KEY);;BEGIN;;ROLLBACK;;SELECT t4 FROM t2 WHERE t4>=(?1 || ?2) collate "binary"   AND t4<=(?1 || char(1114111)) collate "binary"    ORDER BY 1 collate "binary" ASC LIMIT 1
;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;SELECT +x FROM t1;;BEGIN;SELECT a, a, a, coalesce(a,a)  FROM "main"."t2" WHERE a=0 AND a>=?1 AND a<?2
;;CREATE TABLE IF NOT EXISTS "main"."t8"(
  t9 INTEGER PRIMARY KEY,
  letter INT,
  number INT,
  test TEXT,
  t10 TEXT,
  i2 TEXT
);;PRAGMA table_info = t5;;ROLLBACK;;BEGIN;UPDATE OR REPLACE "main"."t2" SET t3=3, t3=1, t3=0, t3='Archilles', t3=nullif('archilles','Archilles'), t3='RCLC' WHERE t3=1
;;ROLLBACK;UPDATE OR IGNORE "main"."t1" SET x=3, x=1, x=0, x='Apollo', x=nullif('apollo','Apollo'), x='ABL' WHERE x=2
;;ROLLBACK;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'SEMI' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[ecmd SEMI]
parser: Input 'CREATE' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 1.
parser: ... then shift 'ecmd', pending reduce 324
parser: Reduce 324 [cmdlist ::= cmdlist ecmd], go to state 0.
parser: ... then shift 'cmdlist', go to state 1
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[cmdlist CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 1.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 390
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[cmdlist createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[cmdlist createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 1.
parser: [[[CREATE TABLE x(type text,name text,tbl_name text,rootpage int,sql text)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 390
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 379
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 152
parser: Reduce 336 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'RP' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Reduce 61 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 540
parser: Shift 'RP', go to state 364
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 364
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 334
parser: Reduce 334 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT*FROM"main".sqlite_master ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 97
parser: Return. Stack=[SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 97
parser: Reduce 97 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'ORDER' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 110
parser: Reduce 110 [dbnm ::= DOT nm], go to state 350.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Reduce 147 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 517
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 517
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 134 [sortorder ::=].
parser: ... then shift 'sortorder', go to state 353
parser: Reduce 137 [nulls ::=].
parser: ... then shift 'nulls', pending reduce 131
parser: Reduce 131 [sortlist ::= expr sortorder nulls], go to state 26.
parser: ... then shift 'sortlist', go to state 516
parser: Reduce 129 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 80
parser: Reduce 80 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE sqlite_stat1(tbl,idx,stat)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 390
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP ID]
parser: Input 'COMMA' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 192
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 379
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 152
parser: Reduce 336 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'RP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Reduce 61 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 540
parser: Shift 'RP', go to state 364
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 364
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 334
parser: Reduce 334 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE t1(x TEXT, CHECK(x NOT BETWEEN +x AND 999999))]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 390
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 379
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 152
parser: Reduce 336 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'CHECK' in state 34
parser: Shift 'CHECK', go to state 471
parser: Return. Stack=[create_table LP columnlist COMMA CHECK]
parser: Input 'LP' in state 471
parser: Shift 'LP', go to state 88
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP]
parser: Input 'ID' in state 88
parser: Shift 'ID', go to state 419
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP ID]
parser: Input 'NOT' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 88.
parser: ... then shift 'expr', go to state 45
parser: Shift 'NOT', go to state 386
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr NOT]
parser: Input 'BETWEEN' in state 386
parser: Shift 'BETWEEN', pending reduce 202
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr NOT BETWEEN]
parser: Input 'PLUS' with pending reduce 202
parser: Reduce 202 [between_op ::= NOT BETWEEN], go to state 45.
parser: ... then shift 'between_op', go to state 109
parser: Shift 'PLUS', go to state 103
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr between_op PLUS]
parser: Input 'ID' in state 103
parser: Shift 'ID', go to state 419
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr between_op PLUS ID]
parser: Input 'AND' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 103.
parser: ... then shift 'expr', go to state 149
parser: Reduce 200 [expr ::= PLUS|MINUS expr], go to state 109.
parser: ... then shift 'expr', go to state 72
parser: Shift 'AND', go to state 108
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr between_op expr AND]
parser: Input 'INTEGER' in state 108
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr between_op expr AND INTEGER]
parser: Input 'RP' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 108.
parser: ... then shift 'term', go to state 126
parser: Reduce 203 [expr ::= expr between_op expr AND expr], go to state 88.
parser: ... then shift 'expr', go to state 45
parser: Shift 'RP', go to state 326
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr RP]
parser: Input 'RP' in state 326
parser: Reduce 69 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 66
parser: Reduce 66 [tcons ::= CHECK LP expr RP onconf], go to state 34.
parser: ... then shift 'tcons', go to state 278
parser: Reduce 347 [conslist_opt ::= COMMA conslist], go to state 365.
parser: ... then shift 'conslist_opt', go to state 540
parser: Shift 'RP', go to state 364
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 364
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 334
parser: Reduce 334 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT tbl,idx,stat FROM 'main'.sqlite_stat1]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 355
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 355
parser: Reduce 355 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 355
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 355
parser: Reduce 355 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'STRING' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'STRING', pending reduce 338
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix STRING]
parser: Input 'DOT' with pending reduce 338
parser: Reduce 338 [nm ::= STRING], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'SEMI' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 110
parser: Reduce 110 [dbnm ::= DOT nm], go to state 350.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Reduce 147 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 128 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 80
parser: Reduce 80 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE x(type text,name text,tbl_name text,rootpage int,sql text)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 390
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 379
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 152
parser: Reduce 336 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'RP' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Reduce 61 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 540
parser: Shift 'RP', go to state 364
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 364
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 334
parser: Reduce 334 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 97
parser: Return. Stack=[SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 97
parser: Reduce 97 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'ORDER' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 110
parser: Reduce 110 [dbnm ::= DOT nm], go to state 350.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Reduce 147 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 517
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 517
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 134 [sortorder ::=].
parser: ... then shift 'sortorder', go to state 353
parser: Reduce 137 [nulls ::=].
parser: ... then shift 'nulls', pending reduce 131
parser: Reduce 131 [sortlist ::= expr sortorder nulls], go to state 26.
parser: ... then shift 'sortlist', go to state 516
parser: Reduce 129 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 80
parser: Reduce 80 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[cmdlist create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[cmdlist create_table LP ID]
parser: Input 'COMMA' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 192
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 379
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 152
parser: Reduce 336 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[cmdlist create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[cmdlist create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[cmdlist create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[cmdlist create_table LP columnlist COMMA ID]
parser: Input 'RP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Reduce 61 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 540
parser: Shift 'RP', go to state 364
parser: Return. Stack=[cmdlist create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 364
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: [[[UPDATE 'main'.sqlite_master SET type='table', name='t2', tbl_name='t2', rootpage=#2, sql='CREATE TABLE t2(t3,t4,a)' WHERE rowid=#1]]]
parser: Input 'UPDATE' in state 0
parser: Reduce 380 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'STRING' in state 299
parser: Reduce 71 [orconf ::=].
parser: ... then shift 'orconf', go to state 167
parser: Shift 'STRING', pending reduce 338
parser: Return. Stack=[with UPDATE orconf STRING]
parser: Input 'DOT' with pending reduce 338
parser: Reduce 338 [nm ::= STRING], go to state 167.
parser: ... then shift 'nm', go to state 395
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 432
parser: Reduce 114 [xfullname ::= nm DOT nm], go to state 167.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 431
parser: Shift 'SET', go to state 155
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 155
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 155.
parser: ... then shift 'nm', go to state 445
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'STRING' in state 84
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 84.
parser: ... then shift 'term', go to state 58
parser: Reduce 152 [setlist ::= nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'VARIABLE' in state 86
parser: Shift 'VARIABLE', pending reduce 174
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ VARIABLE]
parser: Input 'COMMA' with pending reduce 174
parser: Reduce 174 [expr ::= VARIABLE], go to state 86.
parser: ... then shift 'expr', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'WHERE' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ]
parser: Input 'VARIABLE' in state 117
parser: Shift 'VARIABLE', pending reduce 174
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ VARIABLE]
parser: Input 'SEMI' with pending reduce 174
parser: Reduce 174 [expr ::= VARIABLE], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 148 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 149
parser: Reduce 149 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 327
parser: Reduce 327 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 323 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'create_table_args', pending reduce 334
parser: Reduce 334 [cmd ::= create_table create_table_args], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdlist cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping cmdlist
parser: [[[SELECT*FROM"main".sqlite_master WHERE tbl_name='t2' AND type!='trigger' ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 97
parser: Return. Stack=[SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 97
parser: Reduce 97 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 110
parser: Reduce 110 [dbnm ::= DOT nm], go to state 350.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'NE' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'NE', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE STRING]
parser: Input 'ORDER' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 183 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 148 [where_opt ::= WHERE expr], go to state 363.
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 517
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 517
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 134 [sortorder ::=].
parser: ... then shift 'sortorder', go to state 353
parser: Reduce 137 [nulls ::=].
parser: ... then shift 'nulls', pending reduce 131
parser: Reduce 131 [sortlist ::= expr sortorder nulls], go to state 26.
parser: ... then shift 'sortlist', go to state 516
parser: Reduce 129 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 80
parser: Reduce 80 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE t2(t3,t4,a)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 390
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP ID]
parser: Input 'COMMA' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 192
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 379
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 152
parser: Reduce 336 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'RP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Reduce 61 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 540
parser: Shift 'RP', go to state 364
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 364
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 334
parser: Reduce 334 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[;
;CREATE TABLE b(i1, t4a);;
;PRAGMA integrity_check;CREATE INDEX t5 ON t1(x)
;CREATE TABLE t6(t7 TEXT PRIMARY KEY);;BEGIN;;ROLLBACK;;SELECT t4 FROM t2 WHERE t4>=(?1 || ?2) collate "binary"   AND t4<=(?1 || char(1114111)) collate "binary"    ORDER BY 1 collate "binary" ASC LIMIT 1
;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;SELECT +x FROM t1;;BEGIN;SELECT a, a, a, coalesce(a,a)  FROM "main"."t2" WHERE a=0 AND a>=?1 AND a<?2
;;CREATE TABLE IF NOT EXISTS "main"."t8"(
  t9 INTEGER PRIMARY KEY,
  letter INT,
  number INT,
  test TEXT,
  t10 TEXT,
  i2 TEXT
);;PRAGMA table_info = t5;;ROLLBACK;;BEGIN;UPDATE OR REPLACE "main"."t2" SET t3=3, t3=1, t3=0, t3='Archilles', t3=nullif('archilles','Archilles'), t3='RCLC' WHERE t3=1
;;ROLLBACK;UPDATE OR IGNORE "main"."t1" SET x=3, x=1, x=0, x='Apollo', x=nullif('apollo','Apollo'), x='ABL' WHERE x=2
;;ROLLBACK;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'SEMI' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[ecmd SEMI]
parser: Input 'CREATE' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 1.
parser: ... then shift 'ecmd', pending reduce 324
parser: Reduce 324 [cmdlist ::= cmdlist ecmd], go to state 0.
parser: ... then shift 'cmdlist', go to state 1
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[cmdlist CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 1.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 390
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[cmdlist createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[cmdlist createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 1.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[cmdlist create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[cmdlist create_table LP ID]
parser: Input 'COMMA' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 192
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 379
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 152
parser: Reduce 336 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[cmdlist create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[cmdlist create_table LP columnlist COMMA ID]
parser: Input 'RP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Reduce 61 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 540
parser: Shift 'RP', go to state 364
parser: Return. Stack=[cmdlist create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 364
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: [[[UPDATE 'main'.sqlite_master SET type='table', name='b', tbl_name='b', rootpage=#2, sql='CREATE TABLE b(i1, t4a)' WHERE rowid=#1]]]
parser: Input 'UPDATE' in state 0
parser: Reduce 380 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'STRING' in state 299
parser: Reduce 71 [orconf ::=].
parser: ... then shift 'orconf', go to state 167
parser: Shift 'STRING', pending reduce 338
parser: Return. Stack=[with UPDATE orconf STRING]
parser: Input 'DOT' with pending reduce 338
parser: Reduce 338 [nm ::= STRING], go to state 167.
parser: ... then shift 'nm', go to state 395
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 432
parser: Reduce 114 [xfullname ::= nm DOT nm], go to state 167.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 431
parser: Shift 'SET', go to state 155
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 155
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 155.
parser: ... then shift 'nm', go to state 445
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'STRING' in state 84
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 84.
parser: ... then shift 'term', go to state 58
parser: Reduce 152 [setlist ::= nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'VARIABLE' in state 86
parser: Shift 'VARIABLE', pending reduce 174
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ VARIABLE]
parser: Input 'COMMA' with pending reduce 174
parser: Reduce 174 [expr ::= VARIABLE], go to state 86.
parser: ... then shift 'expr', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'WHERE' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ]
parser: Input 'VARIABLE' in state 117
parser: Shift 'VARIABLE', pending reduce 174
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ VARIABLE]
parser: Input 'SEMI' with pending reduce 174
parser: Reduce 174 [expr ::= VARIABLE], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 148 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 149
parser: Reduce 149 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 327
parser: Reduce 327 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 323 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'create_table_args', pending reduce 334
parser: Reduce 334 [cmd ::= create_table create_table_args], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdlist cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping cmdlist
parser: [[[SELECT*FROM"main".sqlite_master WHERE tbl_name='b' AND type!='trigger' ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 97
parser: Return. Stack=[SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 97
parser: Reduce 97 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 110
parser: Reduce 110 [dbnm ::= DOT nm], go to state 350.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'NE' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'NE', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE STRING]
parser: Input 'ORDER' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 183 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 148 [where_opt ::= WHERE expr], go to state 363.
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 517
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 517
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 134 [sortorder ::=].
parser: ... then shift 'sortorder', go to state 353
parser: Reduce 137 [nulls ::=].
parser: ... then shift 'nulls', pending reduce 131
parser: Reduce 131 [sortlist ::= expr sortorder nulls], go to state 26.
parser: ... then shift 'sortlist', go to state 516
parser: Reduce 129 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 80
parser: Reduce 80 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE b(i1, t4a)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 390
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP ID]
parser: Input 'COMMA' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 192
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 379
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 152
parser: Reduce 336 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'RP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Reduce 61 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 540
parser: Shift 'RP', go to state 364
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 364
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 334
parser: Reduce 334 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[;
;PRAGMA integrity_check;CREATE INDEX t5 ON t1(x)
;CREATE TABLE t6(t7 TEXT PRIMARY KEY);;BEGIN;;ROLLBACK;;SELECT t4 FROM t2 WHERE t4>=(?1 || ?2) collate "binary"   AND t4<=(?1 || char(1114111)) collate "binary"    ORDER BY 1 collate "binary" ASC LIMIT 1
;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;SELECT +x FROM t1;;BEGIN;SELECT a, a, a, coalesce(a,a)  FROM "main"."t2" WHERE a=0 AND a>=?1 AND a<?2
;;CREATE TABLE IF NOT EXISTS "main"."t8"(
  t9 INTEGER PRIMARY KEY,
  letter INT,
  number INT,
  test TEXT,
  t10 TEXT,
  i2 TEXT
);;PRAGMA table_info = t5;;ROLLBACK;;BEGIN;UPDATE OR REPLACE "main"."t2" SET t3=3, t3=1, t3=0, t3='Archilles', t3=nullif('archilles','Archilles'), t3='RCLC' WHERE t3=1
;;ROLLBACK;UPDATE OR IGNORE "main"."t1" SET x=3, x=1, x=0, x='Apollo', x=nullif('apollo','Apollo'), x='ABL' WHERE x=2
;;ROLLBACK;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'SEMI' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[ecmd SEMI]
parser: Input 'PRAGMA' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 1.
parser: ... then shift 'ecmd', pending reduce 324
parser: Reduce 324 [cmdlist ::= cmdlist ecmd], go to state 0.
parser: ... then shift 'cmdlist', go to state 1
parser: Shift 'PRAGMA', go to state 215
parser: Return. Stack=[cmdlist PRAGMA]
parser: Input 'ID' in state 215
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[cmdlist PRAGMA ID]
parser: Input 'SEMI' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 215.
parser: ... then shift 'nm', go to state 295
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 394
parser: Reduce 237 [cmd ::= PRAGMA nm dbnm], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdlist cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping cmdlist
parser: [[[CREATE INDEX t5 ON t1(x)
;CREATE TABLE t6(t7 TEXT PRIMARY KEY);;BEGIN;;ROLLBACK;;SELECT t4 FROM t2 WHERE t4>=(?1 || ?2) collate "binary"   AND t4<=(?1 || char(1114111)) collate "binary"    ORDER BY 1 collate "binary" ASC LIMIT 1
;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;SELECT +x FROM t1;;BEGIN;SELECT a, a, a, coalesce(a,a)  FROM "main"."t2" WHERE a=0 AND a>=?1 AND a<?2
;;CREATE TABLE IF NOT EXISTS "main"."t8"(
  t9 INTEGER PRIMARY KEY,
  letter INT,
  number INT,
  test TEXT,
  t10 TEXT,
  i2 TEXT
);;PRAGMA table_info = t5;;ROLLBACK;;BEGIN;UPDATE OR REPLACE "main"."t2" SET t3=3, t3=1, t3=0, t3='Archilles', t3=nullif('archilles','Archilles'), t3='RCLC' WHERE t3=1
;;ROLLBACK;UPDATE OR IGNORE "main"."t1" SET x=3, x=1, x=0, x='Apollo', x=nullif('apollo','Apollo'), x='ABL' WHERE x=2
;;ROLLBACK;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'INDEX' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 225 [uniqueflag ::=].
parser: ... then shift 'uniqueflag', go to state 456
parser: Shift 'INDEX', go to state 315
parser: Return. Stack=[createkw uniqueflag INDEX]
parser: Input 'ID' in state 315
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 225
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists ID]
parser: Input 'ON' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 225.
parser: ... then shift 'nm', go to state 314
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 455
parser: Shift 'ON', go to state 224
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON]
parser: Input 'ID' in state 224
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 224.
parser: ... then shift 'nm', go to state 454
parser: Shift 'LP', go to state 18
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP]
parser: Input 'ID' in state 18
parser: Shift 'ID', go to state 419
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP ID]
parser: Input 'RP' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 18.
parser: ... then shift 'expr', go to state 13
parser: Reduce 134 [sortorder ::=].
parser: ... then shift 'sortorder', go to state 353
parser: Reduce 137 [nulls ::=].
parser: ... then shift 'nulls', pending reduce 131
parser: Reduce 131 [sortlist ::= expr sortorder nulls], go to state 18.
parser: ... then shift 'sortlist', go to state 402
parser: Shift 'RP', go to state 313
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP]
parser: Input 'SEMI' in state 313
parser: Reduce 147 [where_opt ::=].
parser: ... then shift 'where_opt', pending reduce 223
parser: Reduce 223 [cmd ::= createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP where_opt], go to state 0.
parser: [[[INSERT INTO 'main'.sqlite_master VALUES('index','t5','t1',#1,'CREATE INDEX t5 ON t1(x)
');]]]
parser: Input 'INSERT' in state 0
parser: Reduce 380 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 71 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 160
parser: Reduce 160 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 430
parser: Shift 'INTO', go to state 166
parser: Return. Stack=[with insert_cmd INTO]
parser: Input 'STRING' in state 166
parser: Shift 'STRING', pending reduce 338
parser: Return. Stack=[with insert_cmd INTO STRING]
parser: Input 'DOT' with pending reduce 338
parser: Reduce 338 [nm ::= STRING], go to state 166.
parser: ... then shift 'nm', go to state 395
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with insert_cmd INTO nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with insert_cmd INTO nm DOT ID]
parser: Input 'VALUES' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 432
parser: Reduce 114 [xfullname ::= nm DOT nm], go to state 166.
parser: ... then shift 'xfullname', go to state 298
parser: Reduce 162 [idlist_opt ::=].
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'VALUES', go to state 528
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES]
parser: Input 'LP' in state 528
parser: Shift 'LP', go to state 28
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP]
parser: Input 'STRING' in state 28
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 28.
parser: ... then shift 'term', go to state 70
parser: Reduce 220 [nexprlist ::= expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 413
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 413
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 413
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'VARIABLE' in state 107
parser: Shift 'VARIABLE', pending reduce 174
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA VARIABLE]
parser: Input 'COMMA' with pending reduce 174
parser: Reduce 174 [expr ::= VARIABLE], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 413
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'RP' in state 539
parser: Reduce 172 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 413
parser: Shift 'RP', pending reduce 90
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist RP]
parser: Input 'SEMI' with pending reduce 90
parser: Reduce 90 [values ::= VALUES LP nexprlist RP], go to state 35.
parser: ... then shift 'values', go to state 534
parser: Reduce 354 [oneselect ::= values], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 156 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 154
parser: Reduce 154 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 327
parser: Reduce 327 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 323 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT*FROM"main".sqlite_master WHERE name='t5' AND type='index' ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 97
parser: Return. Stack=[SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 97
parser: Reduce 97 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 110
parser: Reduce 110 [dbnm ::= DOT nm], go to state 350.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr EQ STRING]
parser: Input 'ORDER' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 183 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 148 [where_opt ::= WHERE expr], go to state 363.
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 517
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 517
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 134 [sortorder ::=].
parser: ... then shift 'sortorder', go to state 353
parser: Reduce 137 [nulls ::=].
parser: ... then shift 'nulls', pending reduce 131
parser: Reduce 131 [sortlist ::= expr sortorder nulls], go to state 26.
parser: ... then shift 'sortlist', go to state 516
parser: Reduce 129 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 80
parser: Reduce 80 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE INDEX t5 ON t1(x)
]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'INDEX' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 225 [uniqueflag ::=].
parser: ... then shift 'uniqueflag', go to state 456
parser: Shift 'INDEX', go to state 315
parser: Return. Stack=[createkw uniqueflag INDEX]
parser: Input 'ID' in state 315
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 225
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists ID]
parser: Input 'ON' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 225.
parser: ... then shift 'nm', go to state 314
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 455
parser: Shift 'ON', go to state 224
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON]
parser: Input 'ID' in state 224
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 224.
parser: ... then shift 'nm', go to state 454
parser: Shift 'LP', go to state 18
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP]
parser: Input 'ID' in state 18
parser: Shift 'ID', go to state 419
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP ID]
parser: Input 'RP' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 18.
parser: ... then shift 'expr', go to state 13
parser: Reduce 134 [sortorder ::=].
parser: ... then shift 'sortorder', go to state 353
parser: Reduce 137 [nulls ::=].
parser: ... then shift 'nulls', pending reduce 131
parser: Reduce 131 [sortlist ::= expr sortorder nulls], go to state 18.
parser: ... then shift 'sortlist', go to state 402
parser: Shift 'RP', go to state 313
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP]
parser: Input 'SEMI' in state 313
parser: Reduce 147 [where_opt ::=].
parser: ... then shift 'where_opt', pending reduce 223
parser: Reduce 223 [cmd ::= createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE t6(t7 TEXT PRIMARY KEY);;BEGIN;;ROLLBACK;;SELECT t4 FROM t2 WHERE t4>=(?1 || ?2) collate "binary"   AND t4<=(?1 || char(1114111)) collate "binary"    ORDER BY 1 collate "binary" ASC LIMIT 1
;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;SELECT +x FROM t1;;BEGIN;SELECT a, a, a, coalesce(a,a)  FROM "main"."t2" WHERE a=0 AND a>=?1 AND a<?2
;;CREATE TABLE IF NOT EXISTS "main"."t8"(
  t9 INTEGER PRIMARY KEY,
  letter INT,
  number INT,
  test TEXT,
  t10 TEXT,
  i2 TEXT
);;PRAGMA table_info = t5;;ROLLBACK;;BEGIN;UPDATE OR REPLACE "main"."t2" SET t3=3, t3=1, t3=0, t3='Archilles', t3=nullif('archilles','Archilles'), t3='RCLC' WHERE t3=1
;;ROLLBACK;UPDATE OR IGNORE "main"."t1" SET x=3, x=1, x=0, x='Apollo', x=nullif('apollo','Apollo'), x='ABL' WHERE x=2
;;ROLLBACK;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 390
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'PRIMARY' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 379
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 152
parser: Shift 'PRIMARY', go to state 478
parser: Return. Stack=[create_table LP columnname carglist PRIMARY]
parser: Input 'KEY' in state 478
parser: Shift 'KEY', go to state 280
parser: Return. Stack=[create_table LP columnname carglist PRIMARY KEY]
parser: Input 'RP' in state 280
parser: Reduce 134 [sortorder ::=].
parser: ... then shift 'sortorder', go to state 333
parser: Reduce 69 [onconf ::=].
parser: ... then shift 'onconf', go to state 332
parser: Reduce 43 [autoinc ::=].
parser: ... then shift 'autoinc', pending reduce 37
parser: Reduce 37 [ccons ::= PRIMARY KEY sortorder onconf autoinc], go to state 152.
parser: [[[INSERT INTO 'main'.sqlite_master VALUES('index','sqlite_autoindex_t6_1','t6',#4,NULL);]]]
parser: Input 'INSERT' in state 0
parser: Reduce 380 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 71 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 160
parser: Reduce 160 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 430
parser: Shift 'INTO', go to state 166
parser: Return. Stack=[with insert_cmd INTO]
parser: Input 'STRING' in state 166
parser: Shift 'STRING', pending reduce 338
parser: Return. Stack=[with insert_cmd INTO STRING]
parser: Input 'DOT' with pending reduce 338
parser: Reduce 338 [nm ::= STRING], go to state 166.
parser: ... then shift 'nm', go to state 395
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with insert_cmd INTO nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with insert_cmd INTO nm DOT ID]
parser: Input 'VALUES' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 432
parser: Reduce 114 [xfullname ::= nm DOT nm], go to state 166.
parser: ... then shift 'xfullname', go to state 298
parser: Reduce 162 [idlist_opt ::=].
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'VALUES', go to state 528
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES]
parser: Input 'LP' in state 528
parser: Shift 'LP', go to state 28
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP]
parser: Input 'STRING' in state 28
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 28.
parser: ... then shift 'term', go to state 70
parser: Reduce 220 [nexprlist ::= expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 413
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 413
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 413
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'VARIABLE' in state 107
parser: Shift 'VARIABLE', pending reduce 174
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA VARIABLE]
parser: Input 'COMMA' with pending reduce 174
parser: Reduce 174 [expr ::= VARIABLE], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 413
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'NULL' in state 107
parser: Shift 'NULL', pending reduce 171
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA NULL]
parser: Input 'RP' with pending reduce 171
parser: Reduce 171 [term ::= NULL|FLOAT|BLOB], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 413
parser: Shift 'RP', pending reduce 90
parser: Return. Stack=[with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist RP]
parser: Input 'SEMI' with pending reduce 90
parser: Reduce 90 [values ::= VALUES LP nexprlist RP], go to state 35.
parser: ... then shift 'values', go to state 534
parser: Reduce 354 [oneselect ::= values], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 156 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 154
parser: Reduce 154 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 327
parser: Reduce 327 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 323 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'ccons', pending reduce 344
parser: Reduce 344 [carglist ::= carglist ccons], go to state 379.
parser: ... then shift 'carglist', go to state 152
parser: Reduce 336 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Reduce 61 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 540
parser: Shift 'RP', go to state 364
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 364
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: [[[UPDATE 'main'.sqlite_master SET type='table', name='t6', tbl_name='t6', rootpage=#2, sql='CREATE TABLE t6(t7 TEXT PRIMARY KEY)' WHERE rowid=#1]]]
parser: Input 'UPDATE' in state 0
parser: Reduce 380 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'STRING' in state 299
parser: Reduce 71 [orconf ::=].
parser: ... then shift 'orconf', go to state 167
parser: Shift 'STRING', pending reduce 338
parser: Return. Stack=[with UPDATE orconf STRING]
parser: Input 'DOT' with pending reduce 338
parser: Reduce 338 [nm ::= STRING], go to state 167.
parser: ... then shift 'nm', go to state 395
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 432
parser: Reduce 114 [xfullname ::= nm DOT nm], go to state 167.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 431
parser: Shift 'SET', go to state 155
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 155
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 155.
parser: ... then shift 'nm', go to state 445
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'STRING' in state 84
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 84.
parser: ... then shift 'term', go to state 58
parser: Reduce 152 [setlist ::= nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'VARIABLE' in state 86
parser: Shift 'VARIABLE', pending reduce 174
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ VARIABLE]
parser: Input 'COMMA' with pending reduce 174
parser: Reduce 174 [expr ::= VARIABLE], go to state 86.
parser: ... then shift 'expr', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'WHERE' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ]
parser: Input 'VARIABLE' in state 117
parser: Shift 'VARIABLE', pending reduce 174
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ VARIABLE]
parser: Input 'SEMI' with pending reduce 174
parser: Reduce 174 [expr ::= VARIABLE], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 148 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 149
parser: Reduce 149 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 327
parser: Reduce 327 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 323 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'create_table_args', pending reduce 334
parser: Reduce 334 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT*FROM"main".sqlite_master WHERE tbl_name='t6' AND type!='trigger' ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 97
parser: Return. Stack=[SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 97
parser: Reduce 97 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 110
parser: Reduce 110 [dbnm ::= DOT nm], go to state 350.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'NE' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'NE', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE STRING]
parser: Input 'ORDER' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 183 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 148 [where_opt ::= WHERE expr], go to state 363.
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 517
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 517
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 134 [sortorder ::=].
parser: ... then shift 'sortorder', go to state 353
parser: Reduce 137 [nulls ::=].
parser: ... then shift 'nulls', pending reduce 131
parser: Reduce 131 [sortlist ::= expr sortorder nulls], go to state 26.
parser: ... then shift 'sortlist', go to state 516
parser: Reduce 129 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 80
parser: Reduce 80 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE t6(t7 TEXT PRIMARY KEY)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 390
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'PRIMARY' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 379
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 152
parser: Shift 'PRIMARY', go to state 478
parser: Return. Stack=[create_table LP columnname carglist PRIMARY]
parser: Input 'KEY' in state 478
parser: Shift 'KEY', go to state 280
parser: Return. Stack=[create_table LP columnname carglist PRIMARY KEY]
parser: Input 'RP' in state 280
parser: Reduce 134 [sortorder ::=].
parser: ... then shift 'sortorder', go to state 333
parser: Reduce 69 [onconf ::=].
parser: ... then shift 'onconf', go to state 332
parser: Reduce 43 [autoinc ::=].
parser: ... then shift 'autoinc', pending reduce 37
parser: Reduce 37 [ccons ::= PRIMARY KEY sortorder onconf autoinc], go to state 152.
parser: ... then shift 'ccons', pending reduce 344
parser: Reduce 344 [carglist ::= carglist ccons], go to state 379.
parser: ... then shift 'carglist', go to state 152
parser: Reduce 336 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Reduce 61 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 540
parser: Shift 'RP', go to state 364
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 364
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 334
parser: Reduce 334 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[;BEGIN;;ROLLBACK;;SELECT t4 FROM t2 WHERE t4>=(?1 || ?2) collate "binary"   AND t4<=(?1 || char(1114111)) collate "binary"    ORDER BY 1 collate "binary" ASC LIMIT 1
;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;SELECT +x FROM t1;;BEGIN;SELECT a, a, a, coalesce(a,a)  FROM "main"."t2" WHERE a=0 AND a>=?1 AND a<?2
;;CREATE TABLE IF NOT EXISTS "main"."t8"(
  t9 INTEGER PRIMARY KEY,
  letter INT,
  number INT,
  test TEXT,
  t10 TEXT,
  i2 TEXT
);;PRAGMA table_info = t5;;ROLLBACK;;BEGIN;UPDATE OR REPLACE "main"."t2" SET t3=3, t3=1, t3=0, t3='Archilles', t3=nullif('archilles','Archilles'), t3='RCLC' WHERE t3=1
;;ROLLBACK;UPDATE OR IGNORE "main"."t1" SET x=3, x=1, x=0, x='Apollo', x=nullif('apollo','Apollo'), x='ABL' WHERE x=2
;;ROLLBACK;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'BEGIN' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'BEGIN', go to state 268
parser: Return. Stack=[ecmd BEGIN]
parser: Input 'SEMI' in state 268
parser: Reduce 4 [transtype ::=].
parser: ... then shift 'transtype', go to state 370
parser: Reduce 329 [trans_opt ::=].
parser: ... then shift 'trans_opt', pending reduce 3
parser: Reduce 3 [cmd ::= BEGIN transtype trans_opt], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;ROLLBACK;;SELECT t4 FROM t2 WHERE t4>=(?1 || ?2) collate "binary"   AND t4<=(?1 || char(1114111)) collate "binary"    ORDER BY 1 collate "binary" ASC LIMIT 1
;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;SELECT +x FROM t1;;BEGIN;SELECT a, a, a, coalesce(a,a)  FROM "main"."t2" WHERE a=0 AND a>=?1 AND a<?2
;;CREATE TABLE IF NOT EXISTS "main"."t8"(
  t9 INTEGER PRIMARY KEY,
  letter INT,
  number INT,
  test TEXT,
  t10 TEXT,
  i2 TEXT
);;PRAGMA table_info = t5;;ROLLBACK;;BEGIN;UPDATE OR REPLACE "main"."t2" SET t3=3, t3=1, t3=0, t3='Archilles', t3=nullif('archilles','Archilles'), t3='RCLC' WHERE t3=1
;;ROLLBACK;UPDATE OR IGNORE "main"."t1" SET x=3, x=1, x=0, x='Apollo', x=nullif('apollo','Apollo'), x='ABL' WHERE x=2
;;ROLLBACK;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'ROLLBACK' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'ROLLBACK', go to state 368
parser: Return. Stack=[ecmd ROLLBACK]
parser: Input 'SEMI' in state 368
parser: Reduce 329 [trans_opt ::=].
parser: ... then shift 'trans_opt', go to state 541
parser: Reduce 9 [cmd ::= ROLLBACK trans_opt], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;SELECT t4 FROM t2 WHERE t4>=(?1 || ?2) collate "binary"   AND t4<=(?1 || char(1114111)) collate "binary"    ORDER BY 1 collate "binary" ASC LIMIT 1
;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;SELECT +x FROM t1;;BEGIN;SELECT a, a, a, coalesce(a,a)  FROM "main"."t2" WHERE a=0 AND a>=?1 AND a<?2
;;CREATE TABLE IF NOT EXISTS "main"."t8"(
  t9 INTEGER PRIMARY KEY,
  letter INT,
  number INT,
  test TEXT,
  t10 TEXT,
  i2 TEXT
);;PRAGMA table_info = t5;;ROLLBACK;;BEGIN;UPDATE OR REPLACE "main"."t2" SET t3=3, t3=1, t3=0, t3='Archilles', t3=nullif('archilles','Archilles'), t3='RCLC' WHERE t3=1
;;ROLLBACK;UPDATE OR IGNORE "main"."t1" SET x=3, x=1, x=0, x='Apollo', x=nullif('apollo','Apollo'), x='ABL' WHERE x=2
;;ROLLBACK;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'SELECT' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[ecmd SELECT]
parser: Input 'ID' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 419
parser: Return. Stack=[ecmd SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[ecmd SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'WHERE' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 419
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE ID]
parser: Input 'GE' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'GE', go to state 118
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr GE]
parser: Input 'LP' in state 118
parser: Shift 'LP', go to state 4
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr GE LP]
parser: Input 'VARIABLE' in state 4
parser: Shift 'VARIABLE', pending reduce 174
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr GE LP VARIABLE]
parser: Input 'CONCAT' with pending reduce 174
parser: Reduce 174 [expr ::= VARIABLE], go to state 4.
parser: ... then shift 'expr', go to state 50
parser: Shift 'CONCAT', go to state 113
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr GE LP expr CONCAT]
parser: Input 'VARIABLE' in state 113
parser: Shift 'VARIABLE', pending reduce 174
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr GE LP expr CONCAT VARIABLE]
parser: Input 'RP' with pending reduce 174
parser: Reduce 174 [expr ::= VARIABLE], go to state 113.
parser: ... then shift 'expr', go to state 148
parser: Reduce 190 [expr ::= expr CONCAT expr], go to state 4.
parser: ... then shift 'expr', go to state 50
parser: Shift 'RP', pending reduce 166
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr GE LP expr RP]
parser: Input 'COLLATE' with pending reduce 166
parser: Reduce 166 [expr ::= LP expr RP], go to state 118.
parser: ... then shift 'expr', go to state 130
parser: Shift 'COLLATE', go to state 418
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr GE expr COLLATE]
parser: Input 'ID' in state 418
parser: Shift 'ID', pending reduce 175
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr GE expr COLLATE ID]
parser: Input 'AND' with pending reduce 175
parser: Reduce 175 [expr ::= expr COLLATE ID|STRING], go to state 118.
parser: ... then shift 'expr', go to state 130
parser: Reduce 185 [expr ::= expr LT|GT|GE|LE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 419
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'LE' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'LE', go to state 118
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr AND expr LE]
parser: Input 'LP' in state 118
parser: Shift 'LP', go to state 4
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr AND expr LE LP]
parser: Input 'VARIABLE' in state 4
parser: Shift 'VARIABLE', pending reduce 174
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr AND expr LE LP VARIABLE]
parser: Input 'CONCAT' with pending reduce 174
parser: Reduce 174 [expr ::= VARIABLE], go to state 4.
parser: ... then shift 'expr', go to state 50
parser: Shift 'CONCAT', go to state 113
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr AND expr LE LP expr CONCAT]
parser: Input 'ID' in state 113
parser: Shift 'ID', go to state 419
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr AND expr LE LP expr CONCAT ID]
parser: Input 'LP' in state 419
parser: Shift 'LP', go to state 266
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr AND expr LE LP expr CONCAT ID LP]
parser: Input 'INTEGER' in state 266
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr AND expr LE LP expr CONCAT ID LP distinct INTEGER]
parser: Input 'RP' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 11.
parser: ... then shift 'term', go to state 70
parser: Reduce 220 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Reduce 359 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 484
parser: Shift 'RP', go to state 146
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr AND expr LE LP expr CONCAT ID LP distinct exprlist RP]
parser: Input 'RP' in state 146
parser: Reduce 177 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 113.
parser: ... then shift 'expr', go to state 148
parser: Reduce 190 [expr ::= expr CONCAT expr], go to state 4.
parser: ... then shift 'expr', go to state 50
parser: Shift 'RP', pending reduce 166
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr AND expr LE LP expr RP]
parser: Input 'COLLATE' with pending reduce 166
parser: Reduce 166 [expr ::= LP expr RP], go to state 118.
parser: ... then shift 'expr', go to state 130
parser: Shift 'COLLATE', go to state 418
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr AND expr LE expr COLLATE]
parser: Input 'ID' in state 418
parser: Shift 'ID', pending reduce 175
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr AND expr LE expr COLLATE ID]
parser: Input 'ORDER' with pending reduce 175
parser: Reduce 175 [expr ::= expr COLLATE ID|STRING], go to state 118.
parser: ... then shift 'expr', go to state 130
parser: Reduce 185 [expr ::= expr LT|GT|GE|LE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 183 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 148 [where_opt ::= WHERE expr], go to state 363.
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 517
parser: Return. Stack=[ecmd SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 517
parser: Shift 'BY', go to state 26
parser: Return. Stack=[ecmd SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'INTEGER' in state 26
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[ecmd SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY INTEGER]
parser: Input 'COLLATE' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 26.
parser: ... then shift 'term', go to state 13
parser: Shift 'COLLATE', go to state 418
parser: Return. Stack=[ecmd SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY term COLLATE]
parser: Input 'ID' in state 418
parser: Shift 'ID', pending reduce 175
parser: Return. Stack=[ecmd SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY term COLLATE ID]
parser: Input 'ASC' with pending reduce 175
parser: Reduce 175 [expr ::= expr COLLATE ID|STRING], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Shift 'ASC', pending reduce 132
parser: Return. Stack=[ecmd SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY expr ASC]
parser: Input 'LIMIT' with pending reduce 132
parser: Reduce 132 [sortorder ::= ASC], go to state 13.
parser: ... then shift 'sortorder', go to state 353
parser: Reduce 137 [nulls ::=].
parser: ... then shift 'nulls', pending reduce 131
parser: Reduce 131 [sortlist ::= expr sortorder nulls], go to state 26.
parser: ... then shift 'sortlist', go to state 516
parser: Reduce 129 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 360
parser: Shift 'LIMIT', go to state 122
parser: Return. Stack=[ecmd SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt LIMIT]
parser: Input 'INTEGER' in state 122
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[ecmd SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt LIMIT INTEGER]
parser: Input 'SEMI' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 122.
parser: ... then shift 'term', go to state 43
parser: Reduce 143 [limit_opt ::= LIMIT expr], go to state 360.
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 1.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 1.
parser: ... then shift 'select', pending reduce 80
parser: Reduce 80 [cmd ::= select], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;SELECT +x FROM t1;;BEGIN;SELECT a, a, a, coalesce(a,a)  FROM "main"."t2" WHERE a=0 AND a>=?1 AND a<?2
;;CREATE TABLE IF NOT EXISTS "main"."t8"(
  t9 INTEGER PRIMARY KEY,
  letter INT,
  number INT,
  test TEXT,
  t10 TEXT,
  i2 TEXT
);;PRAGMA table_info = t5;;ROLLBACK;;BEGIN;UPDATE OR REPLACE "main"."t2" SET t3=3, t3=1, t3=0, t3='Archilles', t3=nullif('archilles','Archilles'), t3='RCLC' WHERE t3=1
;;ROLLBACK;UPDATE OR IGNORE "main"."t1" SET x=3, x=1, x=0, x='Apollo', x=nullif('apollo','Apollo'), x='ABL' WHERE x=2
;;ROLLBACK;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'SELECT' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[ecmd SELECT]
parser: Input 'ID' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 419
parser: Return. Stack=[ecmd SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 355
parser: Return. Stack=[ecmd SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 355
parser: Reduce 355 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 419
parser: Return. Stack=[ecmd SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 355
parser: Return. Stack=[ecmd SELECT distinct selcollist COMMA]
parser: Input 'NULL' with pending reduce 355
parser: Reduce 355 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'NULL', pending reduce 171
parser: Return. Stack=[ecmd SELECT distinct sclp scanpt NULL]
parser: Input 'COMMA' with pending reduce 171
parser: Reduce 171 [term ::= NULL|FLOAT|BLOB], go to state 77.
parser: ... then shift 'term', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 355
parser: Return. Stack=[ecmd SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 355
parser: Reduce 355 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 419
parser: Return. Stack=[ecmd SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 355
parser: Return. Stack=[ecmd SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 355
parser: Reduce 355 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 419
parser: Return. Stack=[ecmd SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[ecmd SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[ecmd SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'SEMI' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 110
parser: Reduce 110 [dbnm ::= DOT nm], go to state 350.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Reduce 147 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 128 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 1.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 1.
parser: ... then shift 'select', pending reduce 80
parser: Reduce 80 [cmd ::= select], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;SELECT +x FROM t1;;BEGIN;SELECT a, a, a, coalesce(a,a)  FROM "main"."t2" WHERE a=0 AND a>=?1 AND a<?2
;;CREATE TABLE IF NOT EXISTS "main"."t8"(
  t9 INTEGER PRIMARY KEY,
  letter INT,
  number INT,
  test TEXT,
  t10 TEXT,
  i2 TEXT
);;PRAGMA table_info = t5;;ROLLBACK;;BEGIN;UPDATE OR REPLACE "main"."t2" SET t3=3, t3=1, t3=0, t3='Archilles', t3=nullif('archilles','Archilles'), t3='RCLC' WHERE t3=1
;;ROLLBACK;UPDATE OR IGNORE "main"."t1" SET x=3, x=1, x=0, x='Apollo', x=nullif('apollo','Apollo'), x='ABL' WHERE x=2
;;ROLLBACK;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'BEGIN' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'BEGIN', go to state 268
parser: Return. Stack=[ecmd BEGIN]
parser: Input 'SEMI' in state 268
parser: Reduce 4 [transtype ::=].
parser: ... then shift 'transtype', go to state 370
parser: Reduce 329 [trans_opt ::=].
parser: ... then shift 'trans_opt', pending reduce 3
parser: Reduce 3 [cmd ::= BEGIN transtype trans_opt], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;ROLLBACK;;BEGIN;;BEGIN;;SELECT +x FROM t1;;BEGIN;SELECT a, a, a, coalesce(a,a)  FROM "main"."t2" WHERE a=0 AND a>=?1 AND a<?2
;;CREATE TABLE IF NOT EXISTS "main"."t8"(
  t9 INTEGER PRIMARY KEY,
  letter INT,
  number INT,
  test TEXT,
  t10 TEXT,
  i2 TEXT
);;PRAGMA table_info = t5;;ROLLBACK;;BEGIN;UPDATE OR REPLACE "main"."t2" SET t3=3, t3=1, t3=0, t3='Archilles', t3=nullif('archilles','Archilles'), t3='RCLC' WHERE t3=1
;;ROLLBACK;UPDATE OR IGNORE "main"."t1" SET x=3, x=1, x=0, x='Apollo', x=nullif('apollo','Apollo'), x='ABL' WHERE x=2
;;ROLLBACK;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'ROLLBACK' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'ROLLBACK', go to state 368
parser: Return. Stack=[ecmd ROLLBACK]
parser: Input 'SEMI' in state 368
parser: Reduce 329 [trans_opt ::=].
parser: ... then shift 'trans_opt', go to state 541
parser: Reduce 9 [cmd ::= ROLLBACK trans_opt], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;BEGIN;;BEGIN;;SELECT +x FROM t1;;BEGIN;SELECT a, a, a, coalesce(a,a)  FROM "main"."t2" WHERE a=0 AND a>=?1 AND a<?2
;;CREATE TABLE IF NOT EXISTS "main"."t8"(
  t9 INTEGER PRIMARY KEY,
  letter INT,
  number INT,
  test TEXT,
  t10 TEXT,
  i2 TEXT
);;PRAGMA table_info = t5;;ROLLBACK;;BEGIN;UPDATE OR REPLACE "main"."t2" SET t3=3, t3=1, t3=0, t3='Archilles', t3=nullif('archilles','Archilles'), t3='RCLC' WHERE t3=1
;;ROLLBACK;UPDATE OR IGNORE "main"."t1" SET x=3, x=1, x=0, x='Apollo', x=nullif('apollo','Apollo'), x='ABL' WHERE x=2
;;ROLLBACK;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'BEGIN' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'BEGIN', go to state 268
parser: Return. Stack=[ecmd BEGIN]
parser: Input 'SEMI' in state 268
parser: Reduce 4 [transtype ::=].
parser: ... then shift 'transtype', go to state 370
parser: Reduce 329 [trans_opt ::=].
parser: ... then shift 'trans_opt', pending reduce 3
parser: Reduce 3 [cmd ::= BEGIN transtype trans_opt], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;BEGIN;;SELECT +x FROM t1;;BEGIN;SELECT a, a, a, coalesce(a,a)  FROM "main"."t2" WHERE a=0 AND a>=?1 AND a<?2
;;CREATE TABLE IF NOT EXISTS "main"."t8"(
  t9 INTEGER PRIMARY KEY,
  letter INT,
  number INT,
  test TEXT,
  t10 TEXT,
  i2 TEXT
);;PRAGMA table_info = t5;;ROLLBACK;;BEGIN;UPDATE OR REPLACE "main"."t2" SET t3=3, t3=1, t3=0, t3='Archilles', t3=nullif('archilles','Archilles'), t3='RCLC' WHERE t3=1
;;ROLLBACK;UPDATE OR IGNORE "main"."t1" SET x=3, x=1, x=0, x='Apollo', x=nullif('apollo','Apollo'), x='ABL' WHERE x=2
;;ROLLBACK;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'BEGIN' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'BEGIN', go to state 268
parser: Return. Stack=[ecmd BEGIN]
parser: Input 'SEMI' in state 268
parser: Reduce 4 [transtype ::=].
parser: ... then shift 'transtype', go to state 370
parser: Reduce 329 [trans_opt ::=].
parser: ... then shift 'trans_opt', pending reduce 3
parser: Reduce 3 [cmd ::= BEGIN transtype trans_opt], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;SELECT +x FROM t1;;BEGIN;SELECT a, a, a, coalesce(a,a)  FROM "main"."t2" WHERE a=0 AND a>=?1 AND a<?2
;;CREATE TABLE IF NOT EXISTS "main"."t8"(
  t9 INTEGER PRIMARY KEY,
  letter INT,
  number INT,
  test TEXT,
  t10 TEXT,
  i2 TEXT
);;PRAGMA table_info = t5;;ROLLBACK;;BEGIN;UPDATE OR REPLACE "main"."t2" SET t3=3, t3=1, t3=0, t3='Archilles', t3=nullif('archilles','Archilles'), t3='RCLC' WHERE t3=1
;;ROLLBACK;UPDATE OR IGNORE "main"."t1" SET x=3, x=1, x=0, x='Apollo', x=nullif('apollo','Apollo'), x='ABL' WHERE x=2
;;ROLLBACK;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'SELECT' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[ecmd SELECT]
parser: Input 'PLUS' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'PLUS', go to state 103
parser: Return. Stack=[ecmd SELECT distinct sclp scanpt PLUS]
parser: Input 'ID' in state 103
parser: Shift 'ID', go to state 419
parser: Return. Stack=[ecmd SELECT distinct sclp scanpt PLUS ID]
parser: Input 'FROM' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 103.
parser: ... then shift 'expr', go to state 149
parser: Reduce 200 [expr ::= PLUS|MINUS expr], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[ecmd SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'SEMI' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Reduce 147 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 128 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 1.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 1.
parser: ... then shift 'select', pending reduce 80
parser: Reduce 80 [cmd ::= select], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;BEGIN;SELECT a, a, a, coalesce(a,a)  FROM "main"."t2" WHERE a=0 AND a>=?1 AND a<?2
;;CREATE TABLE IF NOT EXISTS "main"."t8"(
  t9 INTEGER PRIMARY KEY,
  letter INT,
  number INT,
  test TEXT,
  t10 TEXT,
  i2 TEXT
);;PRAGMA table_info = t5;;ROLLBACK;;BEGIN;UPDATE OR REPLACE "main"."t2" SET t3=3, t3=1, t3=0, t3='Archilles', t3=nullif('archilles','Archilles'), t3='RCLC' WHERE t3=1
;;ROLLBACK;UPDATE OR IGNORE "main"."t1" SET x=3, x=1, x=0, x='Apollo', x=nullif('apollo','Apollo'), x='ABL' WHERE x=2
;;ROLLBACK;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'BEGIN' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'BEGIN', go to state 268
parser: Return. Stack=[ecmd BEGIN]
parser: Input 'SEMI' in state 268
parser: Reduce 4 [transtype ::=].
parser: ... then shift 'transtype', go to state 370
parser: Reduce 329 [trans_opt ::=].
parser: ... then shift 'trans_opt', pending reduce 3
parser: Reduce 3 [cmd ::= BEGIN transtype trans_opt], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[SELECT a, a, a, coalesce(a,a)  FROM "main"."t2" WHERE a=0 AND a>=?1 AND a<?2
;;CREATE TABLE IF NOT EXISTS "main"."t8"(
  t9 INTEGER PRIMARY KEY,
  letter INT,
  number INT,
  test TEXT,
  t10 TEXT,
  i2 TEXT
);;PRAGMA table_info = t5;;ROLLBACK;;BEGIN;UPDATE OR REPLACE "main"."t2" SET t3=3, t3=1, t3=0, t3='Archilles', t3=nullif('archilles','Archilles'), t3='RCLC' WHERE t3=1
;;ROLLBACK;UPDATE OR IGNORE "main"."t1" SET x=3, x=1, x=0, x='Apollo', x=nullif('apollo','Apollo'), x='ABL' WHERE x=2
;;ROLLBACK;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 355
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 355
parser: Reduce 355 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 355
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 355
parser: Reduce 355 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 355
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 355
parser: Reduce 355 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'LP' in state 419
parser: Shift 'LP', go to state 266
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP]
parser: Input 'ID' in state 266
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct ID]
parser: Input 'COMMA' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 220 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct nexprlist COMMA]
parser: Input 'ID' in state 107
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct nexprlist COMMA ID]
parser: Input 'RP' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Reduce 359 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 484
parser: Shift 'RP', go to state 146
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct exprlist RP]
parser: Input 'FROM' in state 146
parser: Reduce 177 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 110
parser: Reduce 110 [dbnm ::= DOT nm], go to state 350.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'INTEGER' in state 117
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ INTEGER]
parser: Input 'AND' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'GE' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'GE', go to state 118
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr GE]
parser: Input 'VARIABLE' in state 118
parser: Shift 'VARIABLE', pending reduce 174
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr GE VARIABLE]
parser: Input 'AND' with pending reduce 174
parser: Reduce 174 [expr ::= VARIABLE], go to state 118.
parser: ... then shift 'expr', go to state 130
parser: Reduce 185 [expr ::= expr LT|GT|GE|LE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 183 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'LT' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'LT', go to state 118
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr LT]
parser: Input 'VARIABLE' in state 118
parser: Shift 'VARIABLE', pending reduce 174
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr LT VARIABLE]
parser: Input 'SEMI' with pending reduce 174
parser: Reduce 174 [expr ::= VARIABLE], go to state 118.
parser: ... then shift 'expr', go to state 130
parser: Reduce 185 [expr ::= expr LT|GT|GE|LE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 183 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 148 [where_opt ::= WHERE expr], go to state 363.
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 128 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 80
parser: Reduce 80 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[;CREATE TABLE IF NOT EXISTS "main"."t8"(
  t9 INTEGER PRIMARY KEY,
  letter INT,
  number INT,
  test TEXT,
  t10 TEXT,
  i2 TEXT
);;PRAGMA table_info = t5;;ROLLBACK;;BEGIN;UPDATE OR REPLACE "main"."t2" SET t3=3, t3=1, t3=0, t3='Archilles', t3=nullif('archilles','Archilles'), t3='RCLC' WHERE t3=1
;;ROLLBACK;UPDATE OR IGNORE "main"."t1" SET x=3, x=1, x=0, x='Apollo', x=nullif('apollo','Apollo'), x='ABL' WHERE x=2
;;ROLLBACK;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'CREATE' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[ecmd CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 1.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 390
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[ecmd createkw temp TABLE]
parser: Input 'IF' in state 324
parser: Shift 'IF', go to state 466
parser: Return. Stack=[ecmd createkw temp TABLE IF]
parser: Input 'NOT' in state 466
parser: Shift 'NOT', go to state 465
parser: Return. Stack=[ecmd createkw temp TABLE IF NOT]
parser: Input 'EXISTS' in state 465
parser: Shift 'EXISTS', pending reduce 16
parser: Return. Stack=[ecmd createkw temp TABLE IF NOT EXISTS]
parser: Input 'ID' with pending reduce 16
parser: Reduce 16 [ifnotexists ::= IF NOT EXISTS], go to state 324.
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd createkw temp TABLE ifnotexists ID]
parser: Input 'DOT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[ecmd createkw temp TABLE ifnotexists nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd createkw temp TABLE ifnotexists nm DOT ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 110
parser: Reduce 110 [dbnm ::= DOT nm], go to state 323.
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 1.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[ecmd create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd create_table LP ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[ecmd create_table LP nm ID]
parser: Input 'PRIMARY' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 379
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 152
parser: Shift 'PRIMARY', go to state 478
parser: Return. Stack=[ecmd create_table LP columnname carglist PRIMARY]
parser: Input 'KEY' in state 478
parser: Shift 'KEY', go to state 280
parser: Return. Stack=[ecmd create_table LP columnname carglist PRIMARY KEY]
parser: Input 'COMMA' in state 280
parser: Reduce 134 [sortorder ::=].
parser: ... then shift 'sortorder', go to state 333
parser: Reduce 69 [onconf ::=].
parser: ... then shift 'onconf', go to state 332
parser: Reduce 43 [autoinc ::=].
parser: ... then shift 'autoinc', pending reduce 37
parser: Reduce 37 [ccons ::= PRIMARY KEY sortorder onconf autoinc], go to state 152.
parser: ... then shift 'ccons', pending reduce 344
parser: Reduce 344 [carglist ::= carglist ccons], go to state 379.
parser: ... then shift 'carglist', go to state 152
parser: Reduce 336 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[ecmd create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[ecmd create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[ecmd create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[ecmd create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[ecmd create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[ecmd create_table LP columnlist COMMA nm ID]
parser: Input 'RP' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Reduce 61 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 540
parser: Shift 'RP', go to state 364
parser: Return. Stack=[ecmd create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 364
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: [[[UPDATE 'main'.sqlite_master SET type='table', name='t8', tbl_name='t8', rootpage=#2, sql='CREATE TABLE "t8"(
  t9 INTEGER PRIMARY KEY,
  letter INT,
  number INT,
  test TEXT,
  t10 TEXT,
  i2 TEXT
)' WHERE rowid=#1]]]
parser: Input 'UPDATE' in state 0
parser: Reduce 380 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'STRING' in state 299
parser: Reduce 71 [orconf ::=].
parser: ... then shift 'orconf', go to state 167
parser: Shift 'STRING', pending reduce 338
parser: Return. Stack=[with UPDATE orconf STRING]
parser: Input 'DOT' with pending reduce 338
parser: Reduce 338 [nm ::= STRING], go to state 167.
parser: ... then shift 'nm', go to state 395
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 432
parser: Reduce 114 [xfullname ::= nm DOT nm], go to state 167.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 431
parser: Shift 'SET', go to state 155
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 155
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 155.
parser: ... then shift 'nm', go to state 445
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'STRING' in state 84
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 84.
parser: ... then shift 'term', go to state 58
parser: Reduce 152 [setlist ::= nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'VARIABLE' in state 86
parser: Shift 'VARIABLE', pending reduce 174
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ VARIABLE]
parser: Input 'COMMA' with pending reduce 174
parser: Reduce 174 [expr ::= VARIABLE], go to state 86.
parser: ... then shift 'expr', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'WHERE' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ]
parser: Input 'VARIABLE' in state 117
parser: Shift 'VARIABLE', pending reduce 174
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ VARIABLE]
parser: Input 'SEMI' with pending reduce 174
parser: Reduce 174 [expr ::= VARIABLE], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 148 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 149
parser: Reduce 149 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 327
parser: Reduce 327 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 323 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'create_table_args', pending reduce 334
parser: Reduce 334 [cmd ::= create_table create_table_args], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[SELECT*FROM"main".sqlite_master WHERE tbl_name='t8' AND type!='trigger' ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 97
parser: Return. Stack=[SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 97
parser: Reduce 97 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 110
parser: Reduce 110 [dbnm ::= DOT nm], go to state 350.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'NE' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'NE', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE STRING]
parser: Input 'ORDER' in state 539
parser: Reduce 172 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 183 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 148 [where_opt ::= WHERE expr], go to state 363.
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 517
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 517
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 134 [sortorder ::=].
parser: ... then shift 'sortorder', go to state 353
parser: Reduce 137 [nulls ::=].
parser: ... then shift 'nulls', pending reduce 131
parser: Reduce 131 [sortlist ::= expr sortorder nulls], go to state 26.
parser: ... then shift 'sortlist', go to state 516
parser: Reduce 129 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 80
parser: Reduce 80 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE "t8"(
  t9 INTEGER PRIMARY KEY,
  letter INT,
  number INT,
  test TEXT,
  t10 TEXT,
  i2 TEXT
)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 390
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'PRIMARY' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 379
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 152
parser: Shift 'PRIMARY', go to state 478
parser: Return. Stack=[create_table LP columnname carglist PRIMARY]
parser: Input 'KEY' in state 478
parser: Shift 'KEY', go to state 280
parser: Return. Stack=[create_table LP columnname carglist PRIMARY KEY]
parser: Input 'COMMA' in state 280
parser: Reduce 134 [sortorder ::=].
parser: ... then shift 'sortorder', go to state 333
parser: Reduce 69 [onconf ::=].
parser: ... then shift 'onconf', go to state 332
parser: Reduce 43 [autoinc ::=].
parser: ... then shift 'autoinc', pending reduce 37
parser: Reduce 37 [ccons ::= PRIMARY KEY sortorder onconf autoinc], go to state 152.
parser: ... then shift 'ccons', pending reduce 344
parser: Reduce 344 [carglist ::= carglist ccons], go to state 379.
parser: ... then shift 'carglist', go to state 152
parser: Reduce 336 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'RP' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Reduce 61 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 540
parser: Shift 'RP', go to state 364
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 364
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 334
parser: Reduce 334 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[;PRAGMA table_info = t5;;ROLLBACK;;BEGIN;UPDATE OR REPLACE "main"."t2" SET t3=3, t3=1, t3=0, t3='Archilles', t3=nullif('archilles','Archilles'), t3='RCLC' WHERE t3=1
;;ROLLBACK;UPDATE OR IGNORE "main"."t1" SET x=3, x=1, x=0, x='Apollo', x=nullif('apollo','Apollo'), x='ABL' WHERE x=2
;;ROLLBACK;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'PRAGMA' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'PRAGMA', go to state 215
parser: Return. Stack=[ecmd PRAGMA]
parser: Input 'ID' in state 215
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd PRAGMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 215.
parser: ... then shift 'nm', go to state 295
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 394
parser: Shift 'EQ', go to state 31
parser: Return. Stack=[ecmd PRAGMA nm dbnm EQ]
parser: Input 'ID' in state 31
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd PRAGMA nm dbnm EQ ID]
parser: Input 'SEMI' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 31.
parser: ... then shift 'nm', pending reduce 238
parser: Reduce 238 [cmd ::= PRAGMA nm dbnm EQ nmnum], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;ROLLBACK;;BEGIN;UPDATE OR REPLACE "main"."t2" SET t3=3, t3=1, t3=0, t3='Archilles', t3=nullif('archilles','Archilles'), t3='RCLC' WHERE t3=1
;;ROLLBACK;UPDATE OR IGNORE "main"."t1" SET x=3, x=1, x=0, x='Apollo', x=nullif('apollo','Apollo'), x='ABL' WHERE x=2
;;ROLLBACK;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'ROLLBACK' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'ROLLBACK', go to state 368
parser: Return. Stack=[ecmd ROLLBACK]
parser: Input 'SEMI' in state 368
parser: Reduce 329 [trans_opt ::=].
parser: ... then shift 'trans_opt', go to state 541
parser: Reduce 9 [cmd ::= ROLLBACK trans_opt], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;BEGIN;UPDATE OR REPLACE "main"."t2" SET t3=3, t3=1, t3=0, t3='Archilles', t3=nullif('archilles','Archilles'), t3='RCLC' WHERE t3=1
;;ROLLBACK;UPDATE OR IGNORE "main"."t1" SET x=3, x=1, x=0, x='Apollo', x=nullif('apollo','Apollo'), x='ABL' WHERE x=2
;;ROLLBACK;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'BEGIN' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'BEGIN', go to state 268
parser: Return. Stack=[ecmd BEGIN]
parser: Input 'SEMI' in state 268
parser: Reduce 4 [transtype ::=].
parser: ... then shift 'transtype', go to state 370
parser: Reduce 329 [trans_opt ::=].
parser: ... then shift 'trans_opt', pending reduce 3
parser: Reduce 3 [cmd ::= BEGIN transtype trans_opt], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[UPDATE OR REPLACE "main"."t2" SET t3=3, t3=1, t3=0, t3='Archilles', t3=nullif('archilles','Archilles'), t3='RCLC' WHERE t3=1
;;ROLLBACK;UPDATE OR IGNORE "main"."t1" SET x=3, x=1, x=0, x='Apollo', x=nullif('apollo','Apollo'), x='ABL' WHERE x=2
;;ROLLBACK;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'UPDATE' in state 0
parser: Reduce 380 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'OR' in state 299
parser: Shift 'OR', go to state 159
parser: Return. Stack=[with UPDATE OR]
parser: Input 'REPLACE' in state 159
parser: Shift 'REPLACE', pending reduce 74
parser: Return. Stack=[with UPDATE OR REPLACE]
parser: Input 'ID' with pending reduce 74
parser: Reduce 74 [resolvetype ::= REPLACE], go to state 159.
parser: ... then shift 'resolvetype', pending reduce 72
parser: Reduce 72 [orconf ::= OR resolvetype], go to state 299.
parser: ... then shift 'orconf', go to state 167
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf ID]
parser: Input 'DOT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 167.
parser: ... then shift 'nm', go to state 395
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 432
parser: Reduce 114 [xfullname ::= nm DOT nm], go to state 167.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 431
parser: Shift 'SET', go to state 155
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 155
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 155.
parser: ... then shift 'nm', go to state 445
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'INTEGER' in state 84
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ INTEGER]
parser: Input 'COMMA' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 84.
parser: ... then shift 'term', go to state 58
parser: Reduce 152 [setlist ::= nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'INTEGER' in state 86
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ INTEGER]
parser: Input 'COMMA' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'INTEGER' in state 86
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ INTEGER]
parser: Input 'COMMA' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'ID' in state 86
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ ID]
parser: Input 'LP' in state 419
parser: Shift 'LP', go to state 266
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ ID LP]
parser: Input 'STRING' in state 266
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ ID LP distinct STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 11.
parser: ... then shift 'term', go to state 70
parser: Reduce 220 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ ID LP distinct nexprlist COMMA STRING]
parser: Input 'RP' in state 539
parser: Reduce 172 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Reduce 359 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 484
parser: Shift 'RP', go to state 146
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ ID LP distinct exprlist RP]
parser: Input 'COMMA' in state 146
parser: Reduce 177 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 86.
parser: ... then shift 'expr', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'WHERE' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ]
parser: Input 'INTEGER' in state 117
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ INTEGER]
parser: Input 'SEMI' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 148 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 149
parser: Reduce 149 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: [[[CREATE TABLE x(type text,name text,tbl_name text,rootpage int,sql text)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 390
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 379
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 152
parser: Reduce 336 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'RP' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Reduce 61 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 540
parser: Shift 'RP', go to state 364
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 364
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 334
parser: Reduce 334 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT*FROM"main".sqlite_master ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 97
parser: Return. Stack=[SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 97
parser: Reduce 97 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'ORDER' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 110
parser: Reduce 110 [dbnm ::= DOT nm], go to state 350.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Reduce 147 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 517
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 517
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 134 [sortorder ::=].
parser: ... then shift 'sortorder', go to state 353
parser: Reduce 137 [nulls ::=].
parser: ... then shift 'nulls', pending reduce 131
parser: Reduce 131 [sortlist ::= expr sortorder nulls], go to state 26.
parser: ... then shift 'sortlist', go to state 516
parser: Reduce 129 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 80
parser: Reduce 80 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE sqlite_stat1(tbl,idx,stat)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 390
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP ID]
parser: Input 'COMMA' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 192
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 379
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 152
parser: Reduce 336 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'RP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Reduce 61 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 540
parser: Shift 'RP', go to state 364
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 364
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 334
parser: Reduce 334 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE t1(x TEXT, CHECK(x NOT BETWEEN +x AND 999999))]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 390
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 379
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 152
parser: Reduce 336 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'CHECK' in state 34
parser: Shift 'CHECK', go to state 471
parser: Return. Stack=[create_table LP columnlist COMMA CHECK]
parser: Input 'LP' in state 471
parser: Shift 'LP', go to state 88
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP]
parser: Input 'ID' in state 88
parser: Shift 'ID', go to state 419
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP ID]
parser: Input 'NOT' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 88.
parser: ... then shift 'expr', go to state 45
parser: Shift 'NOT', go to state 386
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr NOT]
parser: Input 'BETWEEN' in state 386
parser: Shift 'BETWEEN', pending reduce 202
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr NOT BETWEEN]
parser: Input 'PLUS' with pending reduce 202
parser: Reduce 202 [between_op ::= NOT BETWEEN], go to state 45.
parser: ... then shift 'between_op', go to state 109
parser: Shift 'PLUS', go to state 103
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr between_op PLUS]
parser: Input 'ID' in state 103
parser: Shift 'ID', go to state 419
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr between_op PLUS ID]
parser: Input 'AND' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 103.
parser: ... then shift 'expr', go to state 149
parser: Reduce 200 [expr ::= PLUS|MINUS expr], go to state 109.
parser: ... then shift 'expr', go to state 72
parser: Shift 'AND', go to state 108
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr between_op expr AND]
parser: Input 'INTEGER' in state 108
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr between_op expr AND INTEGER]
parser: Input 'RP' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 108.
parser: ... then shift 'term', go to state 126
parser: Reduce 203 [expr ::= expr between_op expr AND expr], go to state 88.
parser: ... then shift 'expr', go to state 45
parser: Shift 'RP', go to state 326
parser: Return. Stack=[create_table LP columnlist COMMA CHECK LP expr RP]
parser: Input 'RP' in state 326
parser: Reduce 69 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 66
parser: Reduce 66 [tcons ::= CHECK LP expr RP onconf], go to state 34.
parser: ... then shift 'tcons', go to state 278
parser: Reduce 347 [conslist_opt ::= COMMA conslist], go to state 365.
parser: ... then shift 'conslist_opt', go to state 540
parser: Shift 'RP', go to state 364
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 364
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 334
parser: Reduce 334 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE t2(t3,t4,a)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 390
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP ID]
parser: Input 'COMMA' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 192
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 379
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 152
parser: Reduce 336 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'RP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Reduce 61 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 540
parser: Shift 'RP', go to state 364
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 364
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 334
parser: Reduce 334 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE b(i1, t4a)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 390
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP ID]
parser: Input 'COMMA' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 192
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 379
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 152
parser: Reduce 336 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'RP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Reduce 61 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 540
parser: Shift 'RP', go to state 364
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 364
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 334
parser: Reduce 334 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE INDEX t5 ON t1(x)
]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'INDEX' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 225 [uniqueflag ::=].
parser: ... then shift 'uniqueflag', go to state 456
parser: Shift 'INDEX', go to state 315
parser: Return. Stack=[createkw uniqueflag INDEX]
parser: Input 'ID' in state 315
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 225
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists ID]
parser: Input 'ON' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 225.
parser: ... then shift 'nm', go to state 314
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 455
parser: Shift 'ON', go to state 224
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON]
parser: Input 'ID' in state 224
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 224.
parser: ... then shift 'nm', go to state 454
parser: Shift 'LP', go to state 18
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP]
parser: Input 'ID' in state 18
parser: Shift 'ID', go to state 419
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP ID]
parser: Input 'RP' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 18.
parser: ... then shift 'expr', go to state 13
parser: Reduce 134 [sortorder ::=].
parser: ... then shift 'sortorder', go to state 353
parser: Reduce 137 [nulls ::=].
parser: ... then shift 'nulls', pending reduce 131
parser: Reduce 131 [sortlist ::= expr sortorder nulls], go to state 18.
parser: ... then shift 'sortlist', go to state 402
parser: Shift 'RP', go to state 313
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP]
parser: Input 'SEMI' in state 313
parser: Reduce 147 [where_opt ::=].
parser: ... then shift 'where_opt', pending reduce 223
parser: Reduce 223 [cmd ::= createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE t6(t7 TEXT PRIMARY KEY)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 390
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'PRIMARY' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 379
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 152
parser: Shift 'PRIMARY', go to state 478
parser: Return. Stack=[create_table LP columnname carglist PRIMARY]
parser: Input 'KEY' in state 478
parser: Shift 'KEY', go to state 280
parser: Return. Stack=[create_table LP columnname carglist PRIMARY KEY]
parser: Input 'RP' in state 280
parser: Reduce 134 [sortorder ::=].
parser: ... then shift 'sortorder', go to state 333
parser: Reduce 69 [onconf ::=].
parser: ... then shift 'onconf', go to state 332
parser: Reduce 43 [autoinc ::=].
parser: ... then shift 'autoinc', pending reduce 37
parser: Reduce 37 [ccons ::= PRIMARY KEY sortorder onconf autoinc], go to state 152.
parser: ... then shift 'ccons', pending reduce 344
parser: Reduce 344 [carglist ::= carglist ccons], go to state 379.
parser: ... then shift 'carglist', go to state 152
parser: Reduce 336 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Reduce 61 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 540
parser: Shift 'RP', go to state 364
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 364
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 334
parser: Reduce 334 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT tbl,idx,stat FROM 'main'.sqlite_stat1]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 355
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 355
parser: Reduce 355 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 355
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 355
parser: Reduce 355 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'STRING' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'STRING', pending reduce 338
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix STRING]
parser: Input 'DOT' with pending reduce 338
parser: Reduce 338 [nm ::= STRING], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'SEMI' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 110
parser: Reduce 110 [dbnm ::= DOT nm], go to state 350.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Reduce 147 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 128 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 80
parser: Reduce 80 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE x(type text,name text,tbl_name text,rootpage int,sql text)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 390
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 109 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 379
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 152
parser: Reduce 336 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 192
parser: Shift 'ID', pending reduce 341
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'RP' with pending reduce 341
parser: Reduce 341 [typename ::= ID|STRING], go to state 192.
parser: ... then shift 'typename', go to state 392
parser: Reduce 340 [typetoken ::= typename], go to state 192.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 385
parser: Reduce 345 [carglist ::=].
parser: ... then shift 'carglist', go to state 153
parser: Reduce 335 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 365
parser: Reduce 61 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 540
parser: Shift 'RP', go to state 364
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 364
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 334
parser: Reduce 334 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 97
parser: Return. Stack=[SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 97
parser: Reduce 97 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'ORDER' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 110
parser: Reduce 110 [dbnm ::= DOT nm], go to state 350.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Reduce 147 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 517
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 517
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 419
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 134 [sortorder ::=].
parser: ... then shift 'sortorder', go to state 353
parser: Reduce 137 [nulls ::=].
parser: ... then shift 'nulls', pending reduce 131
parser: Reduce 131 [sortlist ::= expr sortorder nulls], go to state 26.
parser: ... then shift 'sortlist', go to state 516
parser: Reduce 129 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 80
parser: Reduce 80 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[;ROLLBACK;UPDATE OR IGNORE "main"."t1" SET x=3, x=1, x=0, x='Apollo', x=nullif('apollo','Apollo'), x='ABL' WHERE x=2
;;ROLLBACK;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'ROLLBACK' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'ROLLBACK', go to state 368
parser: Return. Stack=[ecmd ROLLBACK]
parser: Input 'SEMI' in state 368
parser: Reduce 329 [trans_opt ::=].
parser: ... then shift 'trans_opt', go to state 541
parser: Reduce 9 [cmd ::= ROLLBACK trans_opt], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[UPDATE OR IGNORE "main"."t1" SET x=3, x=1, x=0, x='Apollo', x=nullif('apollo','Apollo'), x='ABL' WHERE x=2
;;ROLLBACK;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'UPDATE' in state 0
parser: Reduce 380 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'OR' in state 299
parser: Shift 'OR', go to state 159
parser: Return. Stack=[with UPDATE OR]
parser: Input 'IGNORE' in state 159
parser: Shift 'IGNORE', pending reduce 73
parser: Return. Stack=[with UPDATE OR IGNORE]
parser: Input 'ID' with pending reduce 73
parser: Reduce 73 [resolvetype ::= IGNORE], go to state 159.
parser: ... then shift 'resolvetype', pending reduce 72
parser: Reduce 72 [orconf ::= OR resolvetype], go to state 299.
parser: ... then shift 'orconf', go to state 167
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf ID]
parser: Input 'DOT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 167.
parser: ... then shift 'nm', go to state 395
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 432
parser: Reduce 114 [xfullname ::= nm DOT nm], go to state 167.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 431
parser: Shift 'SET', go to state 155
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 155
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 155.
parser: ... then shift 'nm', go to state 445
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'INTEGER' in state 84
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ INTEGER]
parser: Input 'COMMA' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 84.
parser: ... then shift 'term', go to state 58
parser: Reduce 152 [setlist ::= nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'INTEGER' in state 86
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ INTEGER]
parser: Input 'COMMA' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'INTEGER' in state 86
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ INTEGER]
parser: Input 'COMMA' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'ID' in state 86
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ ID]
parser: Input 'LP' in state 419
parser: Shift 'LP', go to state 266
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ ID LP]
parser: Input 'STRING' in state 266
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ ID LP distinct STRING]
parser: Input 'COMMA' in state 539
parser: Reduce 172 [term ::= STRING], go to state 11.
parser: ... then shift 'term', go to state 70
parser: Reduce 220 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ ID LP distinct nexprlist COMMA STRING]
parser: Input 'RP' in state 539
parser: Reduce 172 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 219 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 519
parser: Reduce 359 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 484
parser: Shift 'RP', go to state 146
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ ID LP distinct exprlist RP]
parser: Input 'COMMA' in state 146
parser: Reduce 177 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 86.
parser: ... then shift 'expr', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 447
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 539
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'WHERE' in state 539
parser: Reduce 172 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 150 [setlist ::= setlist COMMA nm EQ expr], go to state 155.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 419
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'EQ' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ]
parser: Input 'INTEGER' in state 117
parser: Shift 'INTEGER', pending reduce 173
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ INTEGER]
parser: Input 'SEMI' with pending reduce 173
parser: Reduce 173 [term ::= INTEGER], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 186 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 148 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 149
parser: Reduce 149 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[;ROLLBACK;;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'ROLLBACK' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'ROLLBACK', go to state 368
parser: Return. Stack=[ecmd ROLLBACK]
parser: Input 'SEMI' in state 368
parser: Reduce 329 [trans_opt ::=].
parser: ... then shift 'trans_opt', go to state 541
parser: Reduce 9 [cmd ::= ROLLBACK trans_opt], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;SELECT t3, t3, NULL, t3, t3 FROM "main"."t2"
;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'SELECT' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[ecmd SELECT]
parser: Input 'ID' in state 288
parser: Reduce 94 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 95 [sclp ::=].
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 419
parser: Return. Stack=[ecmd SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 355
parser: Return. Stack=[ecmd SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 355
parser: Reduce 355 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 419
parser: Return. Stack=[ecmd SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 355
parser: Return. Stack=[ecmd SELECT distinct selcollist COMMA]
parser: Input 'NULL' with pending reduce 355
parser: Reduce 355 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'NULL', pending reduce 171
parser: Return. Stack=[ecmd SELECT distinct sclp scanpt NULL]
parser: Input 'COMMA' with pending reduce 171
parser: Reduce 171 [term ::= NULL|FLOAT|BLOB], go to state 77.
parser: ... then shift 'term', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 355
parser: Return. Stack=[ecmd SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 355
parser: Reduce 355 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 419
parser: Return. Stack=[ecmd SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 355
parser: Return. Stack=[ecmd SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 355
parser: Reduce 355 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 384
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 419
parser: Return. Stack=[ecmd SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 419
parser: Reduce 167 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[ecmd SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 104 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 350
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[ecmd SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 337
parser: Return. Stack=[ecmd SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'SEMI' with pending reduce 337
parser: Reduce 337 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 110
parser: Reduce 110 [dbnm ::= DOT nm], go to state 350.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 100 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 123 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 349
parser: Reduce 122 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 348
parser: Reduce 127 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 105
parser: Reduce 105 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 102 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 363
parser: Reduce 147 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 362
parser: Reduce 138 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 361
parser: Reduce 140 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 128 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 360
parser: Reduce 142 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 1.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 83 [select ::= selectnowith], go to state 1.
parser: ... then shift 'select', pending reduce 80
parser: Reduce 80 [cmd ::= select], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'ROLLBACK' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'ROLLBACK', go to state 368
parser: Return. Stack=[ecmd ROLLBACK]
parser: Input 'SEMI' in state 368
parser: Reduce 329 [trans_opt ::=].
parser: ... then shift 'trans_opt', go to state 541
parser: Reduce 9 [cmd ::= ROLLBACK trans_opt], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'ROLLBACK' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'ROLLBACK', go to state 368
parser: Return. Stack=[ecmd ROLLBACK]
parser: Input 'SEMI' in state 368
parser: Reduce 329 [trans_opt ::=].
parser: ... then shift 'trans_opt', go to state 541
parser: Reduce 9 [cmd ::= ROLLBACK trans_opt], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'ROLLBACK' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'ROLLBACK', go to state 368
parser: Return. Stack=[ecmd ROLLBACK]
parser: Input 'SEMI' in state 368
parser: Reduce 329 [trans_opt ::=].
parser: ... then shift 'trans_opt', go to state 541
parser: Reduce 9 [cmd ::= ROLLBACK trans_opt], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'ROLLBACK' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'ROLLBACK', go to state 368
parser: Return. Stack=[ecmd ROLLBACK]
parser: Input 'SEMI' in state 368
parser: Reduce 329 [trans_opt ::=].
parser: ... then shift 'trans_opt', go to state 541
parser: Reduce 9 [cmd ::= ROLLBACK trans_opt], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'ROLLBACK' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'ROLLBACK', go to state 368
parser: Return. Stack=[ecmd ROLLBACK]
parser: Input 'SEMI' in state 368
parser: Reduce 329 [trans_opt ::=].
parser: ... then shift 'trans_opt', go to state 541
parser: Reduce 9 [cmd ::= ROLLBACK trans_opt], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;BEGIN;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'BEGIN' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'BEGIN', go to state 268
parser: Return. Stack=[ecmd BEGIN]
parser: Input 'SEMI' in state 268
parser: Reduce 4 [transtype ::=].
parser: ... then shift 'transtype', go to state 370
parser: Reduce 329 [trans_opt ::=].
parser: ... then shift 'trans_opt', pending reduce 3
parser: Reduce 3 [cmd ::= BEGIN transtype trans_opt], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'ROLLBACK' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'ROLLBACK', go to state 368
parser: Return. Stack=[ecmd ROLLBACK]
parser: Input 'SEMI' in state 368
parser: Reduce 329 [trans_opt ::=].
parser: ... then shift 'trans_opt', go to state 541
parser: Reduce 9 [cmd ::= ROLLBACK trans_opt], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'BEGIN' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'BEGIN', go to state 268
parser: Return. Stack=[ecmd BEGIN]
parser: Input 'SEMI' in state 268
parser: Reduce 4 [transtype ::=].
parser: ... then shift 'transtype', go to state 370
parser: Reduce 329 [trans_opt ::=].
parser: ... then shift 'trans_opt', pending reduce 3
parser: Reduce 3 [cmd ::= BEGIN transtype trans_opt], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;BEGIN;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'BEGIN' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'BEGIN', go to state 268
parser: Return. Stack=[ecmd BEGIN]
parser: Input 'SEMI' in state 268
parser: Reduce 4 [transtype ::=].
parser: ... then shift 'transtype', go to state 370
parser: Reduce 329 [trans_opt ::=].
parser: ... then shift 'trans_opt', pending reduce 3
parser: Reduce 3 [cmd ::= BEGIN transtype trans_opt], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'ROLLBACK' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'ROLLBACK', go to state 368
parser: Return. Stack=[ecmd ROLLBACK]
parser: Input 'SEMI' in state 368
parser: Reduce 329 [trans_opt ::=].
parser: ... then shift 'trans_opt', go to state 541
parser: Reduce 9 [cmd ::= ROLLBACK trans_opt], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'ROLLBACK' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'ROLLBACK', go to state 368
parser: Return. Stack=[ecmd ROLLBACK]
parser: Input 'SEMI' in state 368
parser: Reduce 329 [trans_opt ::=].
parser: ... then shift 'trans_opt', go to state 541
parser: Reduce 9 [cmd ::= ROLLBACK trans_opt], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'ROLLBACK' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'ROLLBACK', go to state 368
parser: Return. Stack=[ecmd ROLLBACK]
parser: Input 'SEMI' in state 368
parser: Reduce 329 [trans_opt ::=].
parser: ... then shift 'trans_opt', go to state 541
parser: Reduce 9 [cmd ::= ROLLBACK trans_opt], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;ROLLBACK;;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'ROLLBACK' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'ROLLBACK', go to state 368
parser: Return. Stack=[ecmd ROLLBACK]
parser: Input 'SEMI' in state 368
parser: Reduce 329 [trans_opt ::=].
parser: ... then shift 'trans_opt', go to state 541
parser: Reduce 9 [cmd ::= ROLLBACK trans_opt], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;BEGIN;;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'BEGIN' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'BEGIN', go to state 268
parser: Return. Stack=[ecmd BEGIN]
parser: Input 'SEMI' in state 268
parser: Reduce 4 [transtype ::=].
parser: ... then shift 'transtype', go to state 370
parser: Reduce 329 [trans_opt ::=].
parser: ... then shift 'trans_opt', pending reduce 3
parser: Reduce 3 [cmd ::= BEGIN transtype trans_opt], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;BEGIN;;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'BEGIN' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'BEGIN', go to state 268
parser: Return. Stack=[ecmd BEGIN]
parser: Input 'SEMI' in state 268
parser: Reduce 4 [transtype ::=].
parser: ... then shift 'transtype', go to state 370
parser: Reduce 329 [trans_opt ::=].
parser: ... then shift 'trans_opt', pending reduce 3
parser: Reduce 3 [cmd ::= BEGIN transtype trans_opt], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 542
parser: Shift 'SEMI', pending reduce 327
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;UPDATE t1 SET x=9223372036854775806, x=-1;;ROLLBACK;;ROLLBACK;;BEGIN;;SELECT x-x FROM t1;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;SELECT t4*t4 FROM t2;;ROLLBACK;;UPDATE t2 SET t4='abc', t4='abc';;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;BEGIN;;ROLLBACK;;BEGIN;;ROLLBACK;;UPDATE t2 SET t4='abxyzzycx', t4='t3%c';;BEGIN;;SELECT t4 LIKE t4 FROM t2;;UPDATE t2 SET a='a߿', a='A__';;SELECT x LIKE x FROM t1;;BEGIN;;BEGIN;;ROLLBACK;;ROLLBACK;;SELECT a LIKE a ESCAPE '7' FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;ROLLBACK;;SELECT t3 LIKE t3 ESCAPE 'ሴ' FROM t2;;ROLLBACK;;SELECT t3 GLOB t3 FROM t2;;BEGIN;;SELECT t4 GLOB t4 FROM t2;;ROLLBACK;;ROLLBACK;;ROLLBACK;;BEGIN;;BEGIN;;BEGIN;;BEGIN;;ROLLBACK;;BEGIN;;SELECT CASE a WHEN 1 THEN null WHEN 2 THEN 'two' ELSE 3 END FROM t2;SELECT x FROM t1 WHERE GLOB('1?',x) ORDER BY x
;SELECT x FROM t1 WHERE x = 5 - abs(-3) ORDER BY x
;;
;DROP TABLE IF EXISTS b;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 326
parser: Return. Stack=[SEMI]
parser: Input 'UPDATE' with pending reduce 326
parser: Reduce 326 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 380 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[ecmd with UPDATE]
parser: Input 'ID' in state 299
parser: Reduce 71 [orconf ::=].
parser: ... then shift 'orconf', go to state 16
Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fe9bbd7b859 in __GI_abort () at abort.c:79
#2  0x00007fe9bbd7b729 in __assert_fail_base (fmt=0x7fe9bbf11588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21dc88 "pIn1!=pIn3", file=0x2291f4 "sqlite3.c", line=86002, function=<optimized out>) at assert.c:92
#3  0x00007fe9bbd8cfd6 in __GI___assert_fail (assertion=0x21dc88 "pIn1!=pIn3", file=0x2291f4 "sqlite3.c", line=86002, function=0x216a86 "int sqlite3VdbeExec(Vdbe *)") at assert.c:101
#4  0x00000000003cf4ad in sqlite3VdbeExec (p=0x194f670) at sqlite3.c:86002
#5  0x000000000041ba74 in sqlite3Step (p=0x194f670) at sqlite3.c:82300
#6  0x0000000000293d5d in sqlite3_step (pStmt=0x194f670) at sqlite3.c:82365
#7  0x0000000000258a39 in main (argc=1, argv=0x7ffffa2bba68) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 42542] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
