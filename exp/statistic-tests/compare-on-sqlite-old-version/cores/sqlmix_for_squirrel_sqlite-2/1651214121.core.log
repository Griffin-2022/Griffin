GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000206,sig:11,src:022049+016812,time:5837381,execs:1090811,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    0 0             00 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
  12 Halt             0    0    0               00 
SQL: [;CREATE TABLE t1(x, t2);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    0 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  tx6[060000000000|......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  tx6[060000000000|......]
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:1
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:1
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t1            00 r[7]='t1'
REG[7] =   t2[t1](8)
  20 String8          0    8    0 t1            00 r[8]='t1'
REG[8] =   t2[t1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  22 String8          0   10    0 CREATE TABLE t1(x, t2) 00 r[10]='CREATE TABLE t1(x, t2)'
REG[10] =   t22[CREATE TABLE t1(x, t2)](8)
  23 MakeRecord       6    5    4 BBBDB         00 r[4]=mkrec(r[6..10])
REG[6] =   t5[table](8)
REG[7] =   t2[t1](8)
REG[8] =   t2[t1](8)
REG[9] =  i:2
REG[10] =   t22[CREATE TABLE t1(x, t2)](8)
REG[4] =  sx38[0617111101397461626C657431743102435245415445205441|.....9tablet1t1.CREATE TA]
  24 Insert           1    4    5               00 intkey=r[5] data=r[4]
REG[4] =  sx38[0617111101397461626C657431743102435245415445205441|.....9tablet1t1.CREATE TA]
REG[5] =  i:1
  25 SetCookie        0    1    1               00 
  26 ParseSchema      0    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    1 0             00 usesStmtJournal=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s2[t1](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:2
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s22[CREATE TABLE t1(x, t2)](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s2[t1](8)
REG[6] =   s2[t1](8)
REG[7] =  i:2
REG[8] =   s22[CREATE TABLE t1(x, t2)](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO t1 VALUES(NULL, 1);]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    1    1 0             01 usesStmtJournal=0
   9 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
   4 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   5 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  sx3[030009|...]
   6 Insert           0    4    1 t1            39 intkey=r[1] data=r[4]
REG[4] =  sx3[030009|...]
REG[1] =  i:1
   7 Halt             0    0    0               00 
SQL: [;CREATE TABLE t3(t4, a);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    1 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  tx6[060000000000|......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  tx6[060000000000|......]
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:2
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:2
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t3            00 r[7]='t3'
REG[7] =   t2[t3](8)
  20 String8          0    8    0 t3            00 r[8]='t3'
REG[8] =   t2[t3](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  22 String8          0   10    0 CREATE TABLE t3(t4, a) 00 r[10]='CREATE TABLE t3(t4, a)'
REG[10] =   t22[CREATE TABLE t3(t4, a)](8)
  23 MakeRecord       6    5    4 BBBDB         00 r[4]=mkrec(r[6..10])
REG[6] =   t5[table](8)
REG[7] =   t2[t3](8)
REG[8] =   t2[t3](8)
REG[9] =  i:3
REG[10] =   t22[CREATE TABLE t3(t4, a)](8)
REG[4] =  sx38[0617111101397461626C657433743303435245415445205441|.....9tablet3t3.CREATE TA]
  24 Insert           1    4    5               00 intkey=r[5] data=r[4]
REG[4] =  sx38[0617111101397461626C657433743303435245415445205441|.....9tablet3t3.CREATE TA]
REG[5] =  i:2
  25 SetCookie        0    1    2               00 
  26 ParseSchema      0    0    0 tbl_name='t3' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    2 0             00 usesStmtJournal=0
  18 String8          0    2    0 t3            00 r[2]='t3'
REG[2] =   t2[t3](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t3](8)
REG[1] =   s2[t1](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t3](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t3](8)
REG[1] =   s2[t3](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t3](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s2[t3](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:3
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s22[CREATE TABLE t3(t4, a)](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s2[t3](8)
REG[6] =   s2[t3](8)
REG[7] =  i:3
REG[8] =   s22[CREATE TABLE t3(t4, a)](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [CREATE TRIGGER b  BEFORE INSERT ON t1 BEGIN 
      INSERT INTO t1 SELECT max(x) OVER(ORDER BY $1) FROM t1; END 
;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    1    2 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   3 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   4 String8          0    3    0 b             00 r[3]='b'
REG[3] =   t1[b](8)
   5 String8          0    4    0 t1            00 r[4]='t1'
REG[4] =   t2[t1](8)
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 String8          0    6    0 CREATE TRIGGER b  BEFORE INSERT ON t1 BEGIN 
      INSERT INTO t1 SELECT max(x) OVER(ORDER BY $1) FROM t1; END 00 r[6]='CREATE TRIGGER b  BEFORE INSERT ON t1 BEGIN 
      INSERT INTO t1 SELECT max(x) OVER(ORDER BY
REG[6] =   t110[CREATE TRIGGER b  BEFORE ](8)
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
REG[2] =   t7[trigger](8)
REG[3] =   t1[b](8)
REG[4] =   t2[t1](8)
REG[5] =  i:0
REG[6] =   t110[CREATE TRIGGER b  BEFORE ](8)
REG[7] =  sx127[071B0F11088169747269676765726274314352454154452054|......itriggerbt1CREATE T]
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
REG[7] =  sx127[071B0F11088169747269676765726274314352454154452054|......itriggerbt1CREATE T]
REG[1] =  i:3
  10 SetCookie        0    1    3               00 
  11 ParseSchema      0    0    0 type='trigger' AND name='b' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    3 0             00 usesStmtJournal=0
  18 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  19 String8          0    3    0 b             00 r[3]='b'
REG[3] =   t1[b](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  15 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  15 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[b](8)
   8 Ne               3   15    1 (BINARY)      52 if r[1]!=r[3] goto 15
REG[3] =   t1[b](8)
REG[1] =   s1[b](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s7[trigger](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[b](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s2[t1](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:0
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s110[CREATE TRIGGER b  BEFORE ](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s7[trigger](8)
REG[5] =   s1[b](8)
REG[6] =   s2[t1](8)
REG[7] =  i:0
REG[8] =   s110[CREATE TRIGGER b  BEFORE ](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  12 Halt             0    0    0               00 

Program received signal SIGSEGV, Segmentation fault.
__strcmp_avx2 () at ../sysdeps/x86_64/multiarch/strcmp-avx2.S:102
(gdb) #0  __strcmp_avx2 () at ../sysdeps/x86_64/multiarch/strcmp-avx2.S:102
#1  0x0000000000350080 in sqlite3ExprCodeTarget (pParse=0x1a1b430, pExpr=0x1a1ff30, target=8) at sqlite3.c:101145
#2  0x00000000003544de in sqlite3ExprCodeExprList (pParse=0x1a1b430, pList=0x1a1c6f0, target=8, srcReg=0, flags=1 '\001') at sqlite3.c:101924
#3  0x00000000003b6480 in pushOntoSorter (pParse=0x1a1b430, pSort=0x7ffe5d0ccd38, pSelect=0x1a1d500, regData=9, regOrigData=0, nData=1, nPrefixReg=1) at sqlite3.c:126256
#4  0x00000000003b1dff in selectInnerLoop (pParse=0x1a1b430, p=0x1a1d500, srcTab=-1, pSort=0x7ffe5d0ccd38, pDistinct=0x7ffe5d0ccdf8, pDest=0x7ffe5d0ccee8, iContinue=-4, iBreak=-2) at sqlite3.c:126809
#5  0x0000000000301bc2 in sqlite3Select (pParse=0x1a1b430, p=0x1a1d500, pDest=0x7ffe5d0ccee8) at sqlite3.c:131815
#6  0x0000000000300cd3 in sqlite3Select (pParse=0x1a1b430, p=0x1a25cf0, pDest=0x7ffe5d0cd210) at sqlite3.c:131596
#7  0x000000000030db43 in sqlite3Insert (pParse=0x1a1b430, pTabList=0x1a19cc0, pSelect=0x1a25cf0, pColumn=0x0, onError=11, pUpsert=0x0) at sqlite3.c:118113
#8  0x000000000039c1d6 in codeTriggerProgram (pParse=0x1a1b430, pStepList=0x1a29ff0, orconf=11) at sqlite3.c:133349
#9  0x000000000039ba29 in codeRowTrigger (pParse=0x7ffe5d0ce3e0, pTrigger=0x1a29320, pTab=0x1a293f0, orconf=11) at sqlite3.c:133502
#10 0x000000000039b15d in getRowTrigger (pParse=0x7ffe5d0ce3e0, pTrigger=0x1a29320, pTab=0x1a293f0, orconf=11) at sqlite3.c:133559
#11 0x000000000039ac73 in sqlite3CodeRowTriggerDirect (pParse=0x7ffe5d0ce3e0, p=0x1a29320, pTab=0x1a293f0, reg=2, orconf=11, ignoreJump=-1) at sqlite3.c:133581
#12 0x0000000000369ad5 in sqlite3CodeRowTrigger (pParse=0x7ffe5d0ce3e0, pTrigger=0x1a29320, op=123, pChanges=0x0, tr_tm=1, pTab=0x1a293f0, reg=2, orconf=11, ignoreJump=-1) at sqlite3.c:133675
#13 0x000000000030ee8c in sqlite3Insert (pParse=0x7ffe5d0ce3e0, pTabList=0x1a261a0, pSelect=0x0, pColumn=0x0, onError=11, pUpsert=0x0) at sqlite3.c:118344
#14 0x00000000002f20e7 in yy_reduce (yypParser=0x7ffe5d0cda00, yyruleno=154, yyLookahead=1, yyLookaheadToken=..., pParse=0x7ffe5d0ce3e0) at sqlite3.c:153570
#15 0x00000000002eca18 in sqlite3Parser (yyp=0x7ffe5d0cda00, yymajor=1, yyminor=...) at sqlite3.c:154496
#16 0x00000000002a9df3 in sqlite3RunParser (pParse=0x7ffe5d0ce3e0, 
    zSql=0x1a203ff ";;INSERT INTO t3 VALUES(NULL, 3);;INSERT INTO t3 VALUES(NULL, 4);;INSERT INTO sqlite_master VALUES('trigger', 'b', 't3', 0,\n    'CREATE TRIGGER b AFTER INSERT ON t3 BEGIN \n        INSERT INTO t1 VALUE"..., pzErrMsg=0x7ffe5d0ce5c0) at sqlite3.c:155636
#17 0x00000000002a77e3 in sqlite3Prepare (db=0x1a06ea0, 
    zSql=0x1a06b87 ";INSERT INTO t1 VALUES(NULL, 2);;INSERT INTO t3 VALUES(NULL, 3);;INSERT INTO t3 VALUES(NULL, 4);;INSERT INTO sqlite_master VALUES('trigger', 'b', 't3', 0,\n    'CREATE TRIGGER b AFTER INSERT ON t3 BEGI"..., nBytes=291, prepFlags=128, pReprepare=0x0, ppStmt=0x7ffe5d0ce6f8, pzTail=0x7ffe5d0ce6e0) at sqlite3.c:125299
#18 0x00000000002a6eae in sqlite3LockAndPrepare (db=0x1a06ea0, 
    zSql=0x1a06b87 ";INSERT INTO t1 VALUES(NULL, 2);;INSERT INTO t3 VALUES(NULL, 3);;INSERT INTO t3 VALUES(NULL, 4);;INSERT INTO sqlite_master VALUES('trigger', 'b', 't3', 0,\n    'CREATE TRIGGER b AFTER INSERT ON t3 BEGI"..., nBytes=291, prepFlags=128, pOld=0x0, ppStmt=0x7ffe5d0ce6f8, pzTail=0x7ffe5d0ce6e0) at sqlite3.c:125402
#19 0x0000000000294f4f in sqlite3_prepare_v2 (db=0x1a06ea0, 
    zSql=0x1a06b87 ";INSERT INTO t1 VALUES(NULL, 2);;INSERT INTO t3 VALUES(NULL, 3);;INSERT INTO t3 VALUES(NULL, 4);;INSERT INTO sqlite_master VALUES('trigger', 'b', 't3', 0,\n    'CREATE TRIGGER b AFTER INSERT ON t3 BEGI"..., nBytes=291, ppStmt=0x7ffe5d0ce6f8, pzTail=0x7ffe5d0ce6e0) at sqlite3.c:125486
#20 0x0000000000258550 in main (argc=1, argv=0x7ffe5d0ce8a8) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 40634] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
