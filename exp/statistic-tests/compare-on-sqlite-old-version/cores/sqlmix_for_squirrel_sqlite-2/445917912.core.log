GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000414,sig:06,src:024388+020214,time:19468501,execs:3770477,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      1    0    0 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   12    0               00 
  12 Halt             0    0    0               00 
SQL: [;CREATE TEMP TABLE IF NOT EXISTS b(i1);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      1    1    0 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       1    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        1    2    4               00 
   4 SetCookie        1    5    1               00 
   5 CreateBtree      1    2    1               00 r[2]=root iDb=1 flags=1
REG[2] =  i:2
   6 OpenWrite        0    1    1 5             00 root=1 iDb=1
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  tx6[060000000000|......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  tx6[060000000000|......]
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    1 5             00 root=1 iDb=1; sqlite_temp_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:1
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:1
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 b             00 r[7]='b'
REG[7] =   t1[b](8)
  20 String8          0    8    0 b             00 r[8]='b'
REG[8] =   t1[b](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  22 String8          0   10    0 CREATE TABLE b(i1) 00 r[10]='CREATE TABLE b(i1)'
REG[10] =   t18[CREATE TABLE b(i1)](8)
  23 MakeRecord       6    5    4 BBBDB         00 r[4]=mkrec(r[6..10])
REG[6] =   t5[table](8)
REG[7] =   t1[b](8)
REG[8] =   t1[b](8)
REG[9] =  i:2
REG[10] =   t18[CREATE TABLE b(i1)](8)
REG[4] =  sx32[06170F0F01317461626C65626202435245415445205441424C|.....1tablebb.CREATE TABL]
  24 Insert           1    4    5               00 intkey=r[5] data=r[4]
REG[4] =  sx32[06170F0F01317461626C65626202435245415445205441424C|.....1tablebb.CREATE TABL]
REG[5] =  i:1
  25 SetCookie        1    1    1               00 
  26 ParseSchema      1    0    0 tbl_name='b' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      1    0    1 0             00 usesStmtJournal=0
  18 String8          0    2    0 b             00 r[2]='b'
REG[2] =   t1[b](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_temp_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[b](8)
REG[1] =   s1[b](8)
   7 Column           0    0    1               00 r[1]=sqlite_temp_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_temp_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_temp_master.name
REG[5] =   s1[b](8)
  11 Column           0    2    6               00 r[6]=sqlite_temp_master.tbl_name
REG[6] =   s1[b](8)
  12 Column           0    3    7               00 r[7]=sqlite_temp_master.rootpage
REG[7] =  i:2
  13 Column           0    4    8               00 r[8]=sqlite_temp_master.sql
REG[8] =   s18[CREATE TABLE b(i1)](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s1[b](8)
REG[6] =   s1[b](8)
REG[7] =  i:2
REG[8] =   s18[CREATE TABLE b(i1)](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;WITH RECURSIVE x(x) AS (VALUES(1) UNION SELECT x+1 FROM x WHERE x<30)
  INSERT INTO t1(x,x,x)
    SELECT x, printf('ab%04xyz',x), random() FROM x;]
VDBE Trace:
   0 Init             0   55    0               00 Start at 55
  55 Transaction      0    1    3 0             01 usesStmtJournal=1
  56 Integer         30   10    0               00 r[10]=30
REG[10] =  i:30
  57 Integer          1   11    0               00 r[11]=1
REG[11] =  i:1
  58 String8          0   15    0 ab%04xyz      00 r[15]='ab%04xyz'
REG[15] =   t8[ab%04xyz](8)
  59 Goto             0    1    0               00 
   1 InitCoroutine    3   44    2               00 
  44 OpenWrite        4    2    0 1             00 root=2 iDb=0; t1
  45 Yield            3   54    0               00 
REG[3] =  i:1
REG[3] =  i:45
   2 InitCoroutine    4   34    3               00 x
  34 Explain         34    0    0 SCAN SUBQUERY 2 00 
  35 InitCoroutine    4    0    3               00 
  36 Yield            4   43    0               00 next row of x
REG[4] =  i:2
REG[4] =  i:36
   3 Explain          3    0    0 CO-ROUTINE 2  00 
   4 OpenPseudo       1    5    1               00 1 columns in r[5]
   5 OpenEphemeral    2    1    0               00 nColumn=1; Queue table
   6 OpenEphemeral    3    1    0 k(1,B)        00 nColumn=1
   7 Explain          7    3    0 SETUP         00 
   8 Explain          8    7    0 SCAN CONSTANT ROW 00 
   9 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  10 MakeRecord       6    1    7               00 r[7]=mkrec(r[6])
REG[7] =  sx2[0209|..]
  11 Found            3   15    7 0             00 key=r[7]
REG[7] =  sx2[0209|..]
  12 IdxInsert        3    7    6 1             00 key=r[7]
REG[7] =  sx2[0209|..]
  13 NewRowid         2    8    0               00 r[8]=rowid
REG[8] =  i:1
  14 Insert           2    7    8               08 intkey=r[8] data=r[7]
REG[7] =  sx2[0209|..]
REG[8] =  i:1
  15 Rewind           2   33    0               00 
  16 NullRow          1    0    0               00 
  17 RowData          2    5    0               00 r[5]=data
REG[5] =  sx2[0209|..]
  18 Delete           2    0    0               00 
  19 Column           1    0    9               00 r[9]=
REG[9] =  i:1
  20 Yield            4    0    0               00 
REG[4] =  i:36
REG[4] =  i:20
  37 Copy             9   12    0               00 r[12]=r[9]; x.x
REG[12] =  i:1
  38 Copy             9   16    0               00 r[16]=r[9]; x.x
REG[16] =  i:1
  39 Function0        1   15   13 printf(-1)    02 r[13]=func(r[15..16])
REG[15] =   t8[ab%04xyz](8)
REG[16] =  i:1
REG[13] =   s8[ab0001yz](8)
  40 Function0        0    0   14 random(0)     00 r[14]=func(r[0])
REG[14] =  i:2360450576499154069
  41 Yield            3    0    0               00 
REG[3] =  i:45
REG[3] =  i:41
  46 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:1
  47 SCopy           12    2    0               00 r[2]=r[12]
REG[2] =  i:1
  48 Abortable        0    0    0               00 
  49 Ne               2   51    2 (BINARY)      52 if r[2]!=r[2] goto 51

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f208de13859 in __GI_abort () at abort.c:79
#2  0x00007f208de13729 in __assert_fail_base (fmt=0x7f208dfa9588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21dc88 "pIn1!=pIn3", file=0x2291f4 "sqlite3.c", line=86002, function=<optimized out>) at assert.c:92
#3  0x00007f208de24fd6 in __GI___assert_fail (assertion=0x21dc88 "pIn1!=pIn3", file=0x2291f4 "sqlite3.c", line=86002, function=0x216a86 "int sqlite3VdbeExec(Vdbe *)") at assert.c:101
#4  0x00000000003cf4ad in sqlite3VdbeExec (p=0x18d26e0) at sqlite3.c:86002
#5  0x000000000041ba74 in sqlite3Step (p=0x18d26e0) at sqlite3.c:82300
#6  0x0000000000293d5d in sqlite3_step (pStmt=0x18d26e0) at sqlite3.c:82365
#7  0x0000000000258a39 in main (argc=1, argv=0x7ffdfc3d5738) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 42360] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
