GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000099,sig:06,src:021313+017806,time:3274166,execs:537273,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;CREATE TABLE r(x TEXT, CHECK(x<>+x));]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    2 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  tx6[060000000000|......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  tx6[060000000000|......]
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:3
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:3
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 r             00 r[7]='r'
REG[7] =   t1[r](8)
  20 String8          0    8    0 r             00 r[8]='r'
REG[8] =   t1[r](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  22 String8          0   10    0 CREATE TABLE r(x TEXT, CHECK(x<>+x)) 00 r[10]='CREATE TABLE r(x TEXT, CHECK(x<>+x))'
REG[10] =   t36[CREATE TABLE r(x TEXT, CH](8)
  23 MakeRecord       6    5    4 BBBDB         00 r[4]=mkrec(r[6..10])
REG[6] =   t5[table](8)
REG[7] =   t1[r](8)
REG[8] =   t1[r](8)
REG[9] =  i:4
REG[10] =   t36[CREATE TABLE r(x TEXT, CH](8)
REG[4] =  sx50[06170F0F01557461626C65727204435245415445205441424C|.....Utablerr.CREATE TABL]
  24 Insert           1    4    5               00 intkey=r[5] data=r[4]
REG[4] =  sx50[06170F0F01557461626C65727204435245415445205441424C|.....Utablerr.CREATE TABL]
REG[5] =  i:3
  25 SetCookie        0    1    3               00 
  26 ParseSchema      0    0    0 tbl_name='r' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    3 0             00 usesStmtJournal=0
  18 String8          0    2    0 r             00 r[2]='r'
REG[2] =   t1[r](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[r](8)
REG[1] =   s2[t2](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[r](8)
REG[1] =   s1[b](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[r](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[r](8)
REG[1] =   s1[r](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[r](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s1[r](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:4
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s36[CREATE TABLE r(x TEXT, CH](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s1[r](8)
REG[6] =   s1[r](8)
REG[7] =  i:4
REG[8] =   s36[CREATE TABLE r(x TEXT, CH](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO t2(a) VALUES(NULL);]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    1    3 0             01 usesStmtJournal=0
  11 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 1             00 root=2 iDb=0; t2
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
   4 Abortable        0    0    0               00 
   5 Eq               2    7    2 (BINARY)      52 if r[2]==r[2] goto 7
REG[2] =  NULL
REG[2] =  NULL
   7 MakeRecord       2    1    3 B             00 r[3]=mkrec(r[2])
REG[2] =  NULL
REG[3] =  sx2[0200|..]
   8 Insert           0    3    1 t2            39 intkey=r[1] data=r[3]
REG[3] =  sx2[0200|..]
REG[1] =  i:1
   9 Halt             0    0    0               00 
SQL: [;SELECT quote(a) FROM t2 ORDER BY rowid;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    3 0             01 usesStmtJournal=0
  11 Goto             0    1    0               00 
   1 Noop             1    3    0               00 
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0    9    0               00 
   5 Column           0    0    2               00 r[2]=t2.a
REG[2] =  NULL
   6 Function0        0    2    1 quote(1)      01 r[1]=func(r[2])
REG[2] =  NULL
REG[1] =   t4[NULL](8)
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s4[NULL](8)
   8 Next             0    5    0               01 
   9 Halt             0    0    0               00 
SQL: [;CREATE TABLE t1i1(t1i2 TEXT, CHECK(t1i2 BETWEEN 0 AND +t1i2));]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    3 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  tx6[060000000000|......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  tx6[060000000000|......]
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:4
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:4
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t1i1          00 r[7]='t1i1'
REG[7] =   t4[t1i1](8)
  20 String8          0    8    0 t1i1          00 r[8]='t1i1'
REG[8] =   t4[t1i1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  22 String8          0   10    0 CREATE TABLE t1i1(t1i2 TEXT, CHECK(t1i2 BETWEEN 0 AND +t1i2)) 00 r[10]='CREATE TABLE t1i1(t1i2 TEXT, CHECK(t1i2 BETWEEN 0 AND +t1i2))'
REG[10] =   t61[CREATE TABLE t1i1(t1i2 TE](8)
  23 MakeRecord       6    5    4 BBBDB         00 r[4]=mkrec(r[6..10])
REG[6] =   t5[table](8)
REG[7] =   t4[t1i1](8)
REG[8] =   t4[t1i1](8)
REG[9] =  i:5
REG[10] =   t61[CREATE TABLE t1i1(t1i2 TE](8)
REG[4] =  sx82[071715150181077461626C6574316931743169310543524541|.......tablet1i1t1i1.CREA]
  24 Insert           1    4    5               00 intkey=r[5] data=r[4]
REG[4] =  sx82[071715150181077461626C6574316931743169310543524541|.......tablet1i1t1i1.CREA]
REG[5] =  i:4
  25 SetCookie        0    1    4               00 
  26 ParseSchema      0    0    0 tbl_name='t1i1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    4 0             00 usesStmtJournal=0
  18 String8          0    2    0 t1i1          00 r[2]='t1i1'
REG[2] =   t4[t1i1](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t4[t1i1](8)
REG[1] =   s2[t2](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t4[t1i1](8)
REG[1] =   s1[b](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[r](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t4[t1i1](8)
REG[1] =   s1[r](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t1i1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t4[t1i1](8)
REG[1] =   s4[t1i1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s4[t1i1](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s4[t1i1](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:5
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s61[CREATE TABLE t1i1(t1i2 TE](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s4[t1i1](8)
REG[6] =   s4[t1i1](8)
REG[7] =  i:5
REG[8] =   s61[CREATE TABLE t1i1(t1i2 TE](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO t2(a) VALUES(NULL),('xyz'),(5),(x'303132'),(4.75);]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    1    4 0             01 usesStmtJournal=1
  25 Goto             0    1    0               00 
   1 InitCoroutine    3   14    2               00 
  14 OpenWrite        0    2    0 1             00 root=2 iDb=0; t2
  15 Yield            3   23    0               00 
REG[3] =  i:1
REG[3] =  i:15
   2 Explain          2    0    0 SCAN 5 CONSTANT ROWS 00 
   3 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
   4 Yield            3    0    0               00 
REG[3] =  i:15
REG[3] =  i:4
  16 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
  17 Abortable        0    0    0               00 
  18 Eq               2   20    2 (BINARY)      52 if r[2]==r[2] goto 20
REG[2] =  NULL
REG[2] =  NULL
  20 MakeRecord       2    1    4 B             00 r[4]=mkrec(r[2])
REG[2] =  NULL
REG[4] =  sx2[0200|..]
  21 Insert           0    4    1 t2            39 intkey=r[1] data=r[4]
REG[4] =  sx2[0200|..]
REG[1] =  i:2
  22 Goto             0   15    0               00 
  15 Yield            3   23    0               00 
REG[3] =  i:4
REG[3] =  i:15
   5 String8          0    2    0 xyz           00 r[2]='xyz'
REG[2] =   t3[xyz](8)
   6 Yield            3    0    0               00 
REG[3] =  i:15
REG[3] =  i:6
  16 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
  17 Abortable        0    0    0               00 
  18 Eq               2   20    2 (BINARY)      52 if r[2]==r[2] goto 20
REG[2] =   t3[xyz](8)
REG[2] =   t3[xyz](8)
  20 MakeRecord       2    1    4 B             00 r[4]=mkrec(r[2])
REG[2] =   t3[xyz](8)
REG[4] =  sx5[021378797A|..xyz]
  21 Insert           0    4    1 t2            39 intkey=r[1] data=r[4]
REG[4] =  sx5[021378797A|..xyz]
REG[1] =  i:3
  22 Goto             0   15    0               00 
  15 Yield            3   23    0               00 
REG[3] =  i:6
REG[3] =  i:15
   7 Integer          5    2    0               00 r[2]=5
REG[2] =  i:5
   8 Yield            3    0    0               00 
REG[3] =  i:15
REG[3] =  i:8
  16 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
  17 Abortable        0    0    0               00 
  18 Eq               2   20    2 (BINARY)      52 if r[2]==r[2] goto 20

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007efe559da859 in __GI_abort () at abort.c:79
#2  0x00007efe559da729 in __assert_fail_base (fmt=0x7efe55b70588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21dc88 "pIn1!=pIn3", file=0x2291f4 "sqlite3.c", line=86002, function=<optimized out>) at assert.c:92
#3  0x00007efe559ebfd6 in __GI___assert_fail (assertion=0x21dc88 "pIn1!=pIn3", file=0x2291f4 "sqlite3.c", line=86002, function=0x216a86 "int sqlite3VdbeExec(Vdbe *)") at assert.c:101
#4  0x00000000003cf4ad in sqlite3VdbeExec (p=0x1b21780) at sqlite3.c:86002
#5  0x000000000041ba74 in sqlite3Step (p=0x1b21780) at sqlite3.c:82300
#6  0x0000000000293d5d in sqlite3_step (pStmt=0x1b21780) at sqlite3.c:82365
#7  0x0000000000258a39 in main (argc=1, argv=0x7ffeacae2278) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 51664] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
