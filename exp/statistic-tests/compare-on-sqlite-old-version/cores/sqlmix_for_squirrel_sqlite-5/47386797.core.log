GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000275,sig:11,src:024409+024667,time:10246861,execs:1923911,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;INSERT INTO sqlite_master VALUES('trigger', 't1i2', 't2', 0,
    'CREATE TRIGGER t1i2 AFTER INSERT ON t2 WHEN ?1 IS NULL BEGIN
        UPDATE t2 SET t1=t1 WHERE t1 IS ?2;
     END'
  );]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    1    3 0             01 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   3 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   4 String8          0    3    0 t1i2          00 r[3]='t1i2'
REG[3] =   t4[t1i2](8)
   5 String8          0    4    0 t2            00 r[4]='t2'
REG[4] =   t2[t2](8)
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 String8          0    6    0 CREATE TRIGGER t1i2 AFTER INSERT ON t2 WHEN ?1 IS NULL BEGIN
        UPDATE t2 SET t1=t1 WHERE t1 IS ?2;
     END 00 r[6]='CREATE TRIGGER t1i2 AFTER INSERT ON t2 WHEN ?1 IS NULL BEGIN
        UPDATE t2 SET t1=t1 WHER
REG[6] =   t113[CREATE TRIGGER t1i2 AFTER](8)
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
REG[2] =   t7[trigger](8)
REG[3] =   t4[t1i2](8)
REG[4] =   t2[t2](8)
REG[5] =  i:0
REG[6] =   t113[CREATE TRIGGER t1i2 AFTER](8)
REG[7] =  sx133[071B151108816F747269676765727431693274324352454154|......otriggert1i2t2CREAT]
   9 Insert           0    7    1 sqlite_master 39 intkey=r[1] data=r[7]
REG[7] =  sx133[071B151108816F747269676765727431693274324352454154|......otriggert1i2t2CREAT]
REG[1] =  i:6
  10 Halt             0    0    0               00 
SQL: [;CREATE TABLE t1i3(
    k1 INTEGER PRIMARY KEY,
    k2 INTEGER NOT NULL,
    k3 INTEGER NOT NULL,
    v2 BOOLEAN NOT NULL DEFAULT 0,
    FOREIGN KEY(k2) REFERENCES r(k1) ON DELETE CASCADE ON UPDATE RESTRICT
        /* no comma */
    FOREIGN KEY(k3) REFERENCES r(k1) ON DELETE CASCADE ON UPDATE RESTRICT
        /* no comma */
    UNIQUE(k2, k3)
  );]
VDBE Trace:
   0 Init             0   39    0               00 Start at 39
  39 Transaction      0    1    3 0             01 usesStmtJournal=0
  40 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:7
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  tx6[060000000000|......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  tx6[060000000000|......]
REG[1] =  i:7
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      0    4    2               00 r[4]=root iDb=0 flags=2
REG[4] =  i:6
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:8
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_t1i3_1 00 r[7]='sqlite_autoindex_t1i3_1'
REG[7] =   t23[sqlite_autoindex_t1i3_1](8)
  17 String8          0    8    0 t1i3          00 r[8]='t1i3'
REG[8] =   t4[t1i3](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:6
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[6] =   t5[index](8)
REG[7] =   t23[sqlite_autoindex_t1i3_1](8)
REG[8] =   t4[t1i3](8)
REG[9] =  i:6
REG[10] =  NULL
REG[11] =  sx39[06173B150100696E64657873716C6974655F6175746F696E64|..;...indexsqlite_autoind]
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  sx39[06173B150100696E64657873716C6974655F6175746F696E64|..;...indexsqlite_autoind]
REG[5] =  i:8
  22 Close            0    0    0               00 
  23 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  24 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  25 Explain         25    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  26 SeekRowid        2   28    1               00 intkey=r[1]
REG[1] =  i:7
  27 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:7
  28 IsNull          13   36    0               00 if r[13]==NULL goto 36
REG[13] =  i:7
  29 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  30 String8          0   15    0 t1i3          00 r[15]='t1i3'
REG[15] =   t4[t1i3](8)
  31 String8          0   16    0 t1i3          00 r[16]='t1i3'
REG[16] =   t4[t1i3](8)
  32 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:5
  33 String8          0   18    0 CREATE TABLE t1i3(
    k1 INTEGER PRIMARY KEY,
    k2 INTEGER NOT NULL,
    k3 INTEGER NOT NULL,
    v2 BOOLEAN NOT NULL DEFAULT 0,
    FOREIGN KEY(k2) REFERENCES r(k1) ON DELETE CASCADE ON UPDATE RESTRICT
        /* no comma */
    FOREIGN KEY(k3) REFERENCES r(k1) ON DELETE CASCADE ON UPDATE RESTRICT
        /* no comma */
    UNIQUE(k2, k3)
  ) 00 r[18]='CREATE TABLE t1i3(
    k1 INTEGER PRIMARY KEY,
    k2 INTEGER NOT NULL,
    k3 INTEGER NOT N
REG[18] =   t348[CREATE TABLE t1i3(.    k1](8)
  34 MakeRecord      14    5   12 BBBDB         00 r[12]=mkrec(r[14..18])
REG[14] =   t5[table](8)
REG[15] =   t4[t1i3](8)
REG[16] =   t4[t1i3](8)
REG[17] =  i:5
REG[18] =   t348[CREATE TABLE t1i3(.    k1](8)
REG[12] =  sx369[071715150185457461626C6574316933743169330543524541|......Etablet1i3t1i3.CREA]
  35 Insert           2   12   13               00 intkey=r[13] data=r[12]
REG[12] =  sx369[071715150185457461626C6574316933743169330543524541|......Etablet1i3t1i3.CREA]
REG[13] =  i:7
  36 SetCookie        0    1    4               00 
  37 ParseSchema      0    0    0 tbl_name='t1i3' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    4 0             00 usesStmtJournal=0
  18 String8          0    2    0 t1i3          00 r[2]='t1i3'
REG[2] =   t4[t1i3](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t4[t1i3](8)
REG[1] =   s2[t2](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t4[t1i3](8)
REG[1] =   s15[sqlite_sequence](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t4[t1i3](8)
REG[1] =   s2[t2](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[r](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t4[t1i3](8)
REG[1] =   s1[r](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[r](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t4[t1i3](8)
REG[1] =   s1[r](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t4[t1i3](8)
REG[1] =   s2[t2](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t1i3](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t4[t1i3](8)
REG[1] =   s4[t1i3](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s4[t1i3](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s4[t1i3](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:5
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s348[CREATE TABLE t1i3(.    k1](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s4[t1i3](8)
REG[6] =   s4[t1i3](8)
REG[7] =  i:5
REG[8] =   s348[CREATE TABLE t1i3(.    k1](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t1i3](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t4[t1i3](8)
REG[1] =   s4[t1i3](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[index](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s23[sqlite_autoindex_t1i3_1](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s4[t1i3](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:6
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =  NULL
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[index](8)
REG[5] =   s23[sqlite_autoindex_t1i3_1](8)
REG[6] =   s4[t1i3](8)
REG[7] =  i:6
REG[8] =  NULL
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  38 Halt             0    0    0               00 
SQL: [;CREATE VIEW t3_1 AS 
    WITH RECURSIVE t3(t3_1,y,z) AS (
        SELECT x,x,NULL FROM r
        UNION
        SELECT t3_1,y,NULL FROM t3, r
    )
  SELECT * FROM t3 AS xyz;]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    4 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:9
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  tx6[060000000000|......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  tx6[060000000000|......]
REG[1] =  i:9
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:9
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:9
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:9
  18 String8          0    6    0 view          00 r[6]='view'
REG[6] =   t4[view](8)
  19 String8          0    7    0 t3_1          00 r[7]='t3_1'
REG[7] =   t4[t3_1](8)
  20 String8          0    8    0 t3_1          00 r[8]='t3_1'
REG[8] =   t4[t3_1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:0
  22 String8          0   10    0 CREATE VIEW t3_1 AS 
    WITH RECURSIVE t3(t3_1,y,z) AS (
        SELECT x,x,NULL FROM r
        UNION
        SELECT t3_1,y,NULL FROM t3, r
    )
  SELECT * FROM t3 AS xyz 00 r[10]='CREATE VIEW t3_1 AS 
    WITH RECURSIVE t3(t3_1,y,z) AS (
        SELECT x,x,NULL FROM r
   
REG[10] =   t172[CREATE VIEW t3_1 AS .    ](8)
  23 MakeRecord       6    5    4 BBBDB         00 r[4]=mkrec(r[6..10])
REG[6] =   t4[view](8)
REG[7] =   t4[t3_1](8)
REG[8] =   t4[t3_1](8)
REG[9] =  i:0
REG[10] =   t172[CREATE VIEW t3_1 AS .    ](8)
REG[4] =  sx191[071515150882657669657774335F3174335F31435245415445|......eviewt3_1t3_1CREATE]
  24 Insert           1    4    5               00 intkey=r[5] data=r[4]
REG[4] =  sx191[071515150882657669657774335F3174335F31435245415445|......eviewt3_1t3_1CREATE]
REG[5] =  i:9
  25 SetCookie        0    1    5               00 
  26 ParseSchema      0    0    0 tbl_name='t3_1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    5 0             00 usesStmtJournal=0
  18 String8          0    2    0 t3_1          00 r[2]='t3_1'
REG[2] =   t4[t3_1](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t4[t3_1](8)
REG[1] =   s2[t2](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t4[t3_1](8)
REG[1] =   s15[sqlite_sequence](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t4[t3_1](8)
REG[1] =   s2[t2](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[r](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t4[t3_1](8)
REG[1] =   s1[r](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[r](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t4[t3_1](8)
REG[1] =   s1[r](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t4[t3_1](8)
REG[1] =   s2[t2](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t1i3](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t4[t3_1](8)
REG[1] =   s4[t1i3](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t1i3](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t4[t3_1](8)
REG[1] =   s4[t1i3](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t3_1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t4[t3_1](8)
REG[1] =   s4[t3_1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s4[view](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s4[view](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s4[view](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s4[t3_1](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s4[t3_1](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:0
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s172[CREATE VIEW t3_1 AS .    ](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s4[view](8)
REG[5] =   s4[t3_1](8)
REG[6] =   s4[t3_1](8)
REG[7] =  i:0
REG[8] =   s172[CREATE VIEW t3_1 AS .    ](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;ALTER TABLE r ADD COLUMN v3;]
VDBE Trace:
   0 Init             0   37    0               00 Start at 37
  37 Transaction      0    1    5 0             01 usesStmtJournal=1
  38 String8          0    9    0 table         00 r[9]='table'
REG[9] =   t5[table](8)
  39 String8          0   10    0 r             00 r[10]='r'
REG[10] =   t1[r](8)
  40 Integer          1   15    0               00 r[15]=1
REG[15] =  i:1
  41 Integer         21   16    0               00 r[16]=21
REG[16] =  i:21
  42 String8          0   17    0 ,             00 r[17]=', '
REG[17] =   t2[, ](8)
  43 String8          0   18    0 v3            00 r[18]='v3'
REG[18] =   t2[v3](8)
  44 Integer         22   20    0               00 r[20]=22
REG[20] =  i:22
  45 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    1    0 2             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Ne               9   11    8 (BINARY)      52 if r[8]!=r[9] goto 11
REG[9] =   t5[table](8)
REG[8] =   s5[table](8)
   7 Column           0    1    8               00 r[8]=sqlite_master.name
REG[8] =   s2[t2](8)
   8 Ne              10   11    8 (BINARY)      52 if r[8]!=r[10] goto 11
REG[10] =   t1[r](8)
REG[8] =   s2[t2](8)
  11 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Ne               9   11    8 (BINARY)      52 if r[8]!=r[9] goto 11
REG[9] =   t5[table](8)
REG[8] =   s5[table](8)
   7 Column           0    1    8               00 r[8]=sqlite_master.name
REG[8] =   s15[sqlite_sequence](8)
   8 Ne              10   11    8 (BINARY)      52 if r[8]!=r[10] goto 11
REG[10] =   t1[r](8)
REG[8] =   s15[sqlite_sequence](8)
  11 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s7[trigger](8)
   6 Ne               9   11    8 (BINARY)      52 if r[8]!=r[9] goto 11
REG[9] =   t5[table](8)
REG[8] =   s7[trigger](8)
  11 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Ne               9   11    8 (BINARY)      52 if r[8]!=r[9] goto 11
REG[9] =   t5[table](8)
REG[8] =   s5[table](8)
   7 Column           0    1    8               00 r[8]=sqlite_master.name
REG[8] =   s1[r](8)
   8 Ne              10   11    8 (BINARY)      52 if r[8]!=r[10] goto 11
REG[10] =   t1[r](8)
REG[8] =   s1[r](8)
   9 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:4
  10 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:4
  11 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s7[trigger](8)
   6 Ne               9   11    8 (BINARY)      52 if r[8]!=r[9] goto 11
REG[9] =   t5[table](8)
REG[8] =   s7[trigger](8)
  11 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s7[trigger](8)
   6 Ne               9   11    8 (BINARY)      52 if r[8]!=r[9] goto 11
REG[9] =   t5[table](8)
REG[8] =   s7[trigger](8)
  11 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Ne               9   11    8 (BINARY)      52 if r[8]!=r[9] goto 11
REG[9] =   t5[table](8)
REG[8] =   s5[table](8)
   7 Column           0    1    8               00 r[8]=sqlite_master.name
REG[8] =   s4[t1i3](8)
   8 Ne              10   11    8 (BINARY)      52 if r[8]!=r[10] goto 11
REG[10] =   t1[r](8)
REG[8] =   s4[t1i3](8)
  11 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   6 Ne               9   11    8 (BINARY)      52 if r[8]!=r[9] goto 11
REG[9] =   t5[table](8)
REG[8] =   s5[index](8)
  11 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s4[view](8)
   6 Ne               9   11    8 (BINARY)      52 if r[8]!=r[9] goto 11
REG[9] =   t5[table](8)
REG[8] =   s4[view](8)
  11 Next             0    5    0               01 
  12 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
  13 RowSetRead       1   29    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:4
  14 NotExists        0   13    2               00 intkey=r[2]
REG[2] =  i:4
  15 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
  16 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[r](8)
  17 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
REG[5] =   s1[r](8)
  18 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  19 Column           0    4   14               00 r[14]=sqlite_master.sql
REG[14] =   s22[CREATE TABLE r(x,t1i1)](8)
  20 Function0        6   14   13 substr(3)     03 r[13]=func(r[14..16])
REG[14] =   s22[CREATE TABLE r(x,t1i1)](8)
REG[15] =  i:1
REG[16] =  i:21
REG[13] =   s21[CREATE TABLE r(x,t1i1](8)
  21 Concat          17   13   12               00 r[12]=r[13]+r[17]
REG[17] =   t2[, ](8)
REG[13] =   s21[CREATE TABLE r(x,t1i1](8)
REG[12] =   s23[CREATE TABLE r(x,t1i1, ](8)
  22 Concat          18   12    8               00 r[8]=r[12]+r[18]
REG[18] =   t2[v3](8)
REG[12] =   s23[CREATE TABLE r(x,t1i1, ](8)
REG[8] =   s25[CREATE TABLE r(x,t1i1, v3](8)
  23 Column           0    4   19               00 r[19]=sqlite_master.sql
REG[19] =   s22[CREATE TABLE r(x,t1i1)](8)
  24 Function0        2   19   12 substr(2)     02 r[12]=func(r[19..20])
REG[19] =   s22[CREATE TABLE r(x,t1i1)](8)
REG[20] =  i:22
REG[12] =   s1[)](8)
  25 Concat          12    8    7               00 r[7]=r[8]+r[12]
REG[12] =   s1[)](8)
REG[8] =   s25[CREATE TABLE r(x,t1i1, v3](8)
REG[7] =   s26[CREATE TABLE r(x,t1i1, v3](8)
  26 MakeRecord       3    5   11 BBBDB         00 r[11]=mkrec(r[3..7])
REG[3] =   s5[table](8)
REG[4] =   s1[r](8)
REG[5] =   s1[r](8)
REG[6] =  i:4
REG[7] =   s26[CREATE TABLE r(x,t1i1, v3](8)
REG[11] =  sx40[06170F0F01417461626C65727204435245415445205441424C|.....Atablerr.CREATE TABL]
  27 Insert           0   11    2               00 intkey=r[2] data=r[11]
REG[11] =  sx40[06170F0F01417461626C65727204435245415445205441424C|.....Atablerr.CREATE TABL]
REG[2] =  i:4
  28 Goto             0   13    0               00 
  13 RowSetRead       1   29    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:4
  29 ReadCookie       0   12    2               00 
REG[12] =  i:4
  30 AddImm          12   -2    0               00 r[12]=r[12]+-2
REG[12] =  i:4
  31 IfPos           12   33    0               00 if r[12]>0 then r[12]-=0, goto 33
REG[12] =  i:2
  33 SetCookie        0    1    6               00 
  34 ParseSchema      0    0    0               00 
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    6 1             00 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[t2](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t2](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:2
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s59[CREATE TABLE t2(a, b INTE](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s2[t2](8)
REG[3] =   s2[t2](8)
REG[4] =  i:2
REG[5] =   s59[CREATE TABLE t2(a, b INTE](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s15[sqlite_sequence](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s15[sqlite_sequence](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:3
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s38[CREATE TABLE sqlite_seque](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s15[sqlite_sequence](8)
REG[3] =   s15[sqlite_sequence](8)
REG[4] =  i:3
REG[5] =   s38[CREATE TABLE sqlite_seque](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s1[c](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t2](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:0
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s110[CREATE TRIGGER c  BEFORE ](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s7[trigger](8)
REG[2] =   s1[c](8)
REG[3] =   s2[t2](8)
REG[4] =  i:0
REG[5] =   s110[CREATE TRIGGER c  BEFORE ](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s1[r](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s1[r](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:4
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s26[CREATE TABLE r(x,t1i1, v3](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s1[r](8)
REG[3] =   s1[r](8)
REG[4] =  i:4
REG[5] =   s26[CREATE TABLE r(x,t1i1, v3](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s1[c](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s1[r](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:0
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s89[CREATE TRIGGER c AFTER IN](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s7[trigger](8)
REG[2] =   s1[c](8)
REG[3] =   s1[r](8)
REG[4] =  i:0
REG[5] =   s89[CREATE TRIGGER c AFTER IN](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s4[t1i2](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t2](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:0
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s113[CREATE TRIGGER t1i2 AFTER](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s7[trigger](8)
REG[2] =   s4[t1i2](8)
REG[3] =   s2[t2](8)
REG[4] =  i:0
REG[5] =   s113[CREATE TRIGGER t1i2 AFTER](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s4[t1i3](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s4[t1i3](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:5
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s348[CREATE TABLE t1i3(.    k1](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s4[t1i3](8)
REG[3] =   s4[t1i3](8)
REG[4] =  i:5
REG[5] =   s348[CREATE TABLE t1i3(.    k1](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s23[sqlite_autoindex_t1i3_1](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s4[t1i3](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:6
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =  NULL
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[index](8)
REG[2] =   s23[sqlite_autoindex_t1i3_1](8)
REG[3] =   s4[t1i3](8)
REG[4] =  i:6
REG[5] =  NULL
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s4[view](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s4[t3_1](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s4[t3_1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:0
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s172[CREATE VIEW t3_1 AS .    ](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s4[view](8)
REG[2] =   s4[t3_1](8)
REG[3] =   s4[t3_1](8)
REG[4] =  i:0
REG[5] =   s172[CREATE VIEW t3_1 AS .    ](8)
  11 Next             0    5    0               01 
  12 Halt             0    0    0               00 
  35 ParseSchema      1    0    0               00 
  36 Halt             0    0    0               00 
SQL: [;CREATE TEMP TABLE t3_2(c1 INTEGER PRIMARY KEY AUTOINCREMENT, k);]
VDBE Trace:
   0 Init             0   54    0               00 Start at 54
  54 Transaction      1    1    0 1             01 usesStmtJournal=0
  55 Goto             0    1    0               00 
   1 ReadCookie       1    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        1    2    4               00 
   4 SetCookie        1    5    1               00 
   5 CreateBtree      1    2    1               00 r[2]=root iDb=1 flags=1
REG[2] =  i:2
   6 OpenWrite        0    1    1 5             00 root=1 iDb=1
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  tx6[060000000000|......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  tx6[060000000000|......]
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    1 5             00 root=1 iDb=1; sqlite_temp_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:1
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:1
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t3_2          00 r[7]='t3_2'
REG[7] =   t4[t3_2](8)
  20 String8          0    8    0 t3_2          00 r[8]='t3_2'
REG[8] =   t4[t3_2](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  22 String8          0   10    0 CREATE TABLE t3_2(c1 INTEGER PRIMARY KEY AUTOINCREMENT, k) 00 r[10]='CREATE TABLE t3_2(c1 INTEGER PRIMARY KEY AUTOINCREMENT, k)'
REG[10] =   t58[CREATE TABLE t3_2(c1 INTE](8)
  23 MakeRecord       6    5    4 BBBDB         00 r[4]=mkrec(r[6..10])
REG[6] =   t5[table](8)
REG[7] =   t4[t3_2](8)
REG[8] =   t4[t3_2](8)
REG[9] =  i:2
REG[10] =   t58[CREATE TABLE t3_2(c1 INTE](8)
REG[4] =  sx79[071715150181017461626C6574335F3274335F320243524541|.......tablet3_2t3_2.CREA]
  24 Insert           1    4    5               00 intkey=r[5] data=r[4]
REG[4] =  sx79[071715150181017461626C6574335F3274335F320243524541|.......tablet3_2t3_2.CREA]
REG[5] =  i:1
  25 SetCookie        1    1    1               00 
  26 ReadCookie       1   14    2               00 
REG[14] =  i:4
  27 If              14   30    0               00 
REG[14] =  i:4
  30 CreateBtree      1   13    1               00 r[13]=root iDb=1 flags=1
REG[13] =  i:3
  31 OpenWrite        0    1    1 5             00 root=1 iDb=1
  32 NewRowid         0   12    0               00 r[12]=rowid
REG[12] =  i:2
  33 Blob             6   14    0              00 r[14]= (len=6)
REG[14] =  tx6[060000000000|......]
  34 Insert           0   14   12               08 intkey=r[12] data=r[14]
REG[14] =  tx6[060000000000|......]
REG[12] =  i:2
  35 Close            0    0    0               00 
  36 Close            0    0    0               00 
  37 Null             0   15   16               00 r[15..16]=NULL
REG[15] =  NULL
  38 OpenWrite        2    1    1 5             00 root=1 iDb=1; sqlite_temp_master
  39 Explain         39    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  40 SeekRowid        2   42   12               00 intkey=r[12]
REG[12] =  i:2
  41 Rowid            2   16    0               00 r[16]=rowid
REG[16] =  i:2
  42 IsNull          16   50    0               00 if r[16]==NULL goto 50
REG[16] =  i:2
  43 String8          0   17    0 table         00 r[17]='table'
REG[17] =   t5[table](8)
  44 String8          0   18    0 sqlite_sequence 00 r[18]='sqlite_sequence'
REG[18] =   t15[sqlite_sequence](8)
  45 String8          0   19    0 sqlite_sequence 00 r[19]='sqlite_sequence'
REG[19] =   t15[sqlite_sequence](8)
  46 Copy            13   20    0               00 r[20]=r[13]
REG[20] =  i:3
  47 String8          0   21    0 CREATE TABLE sqlite_sequence(name,seq) 00 r[21]='CREATE TABLE sqlite_sequence(name,seq)'
REG[21] =   t38[CREATE TABLE sqlite_seque](8)
  48 MakeRecord      17    5   15 BBBDB         00 r[15]=mkrec(r[17..21])
REG[17] =   t5[table](8)
REG[18] =   t15[sqlite_sequence](8)
REG[19] =   t15[sqlite_sequence](8)
REG[20] =  i:3
REG[21] =   t38[CREATE TABLE sqlite_seque](8)
REG[15] =  sx80[06172B2B01597461626C6573716C6974655F73657175656E63|..++.Ytablesqlite_sequenc]
  49 Insert           2   15   16               00 intkey=r[16] data=r[15]
REG[15] =  sx80[06172B2B01597461626C6573716C6974655F73657175656E63|..++.Ytablesqlite_sequenc]
REG[16] =  i:2
  50 SetCookie        1    1    1               00 
  51 ParseSchema      1    0    0 tbl_name='sqlite_sequence' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      1    0    1 1             00 usesStmtJournal=0
  18 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_temp_master.tbl_name
REG[1] =   s4[t3_2](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s4[t3_2](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_temp_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s15[sqlite_sequence](8)
   7 Column           0    0    1               00 r[1]=sqlite_temp_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_temp_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_temp_master.name
REG[5] =   s15[sqlite_sequence](8)
  11 Column           0    2    6               00 r[6]=sqlite_temp_master.tbl_name
REG[6] =   s15[sqlite_sequence](8)
  12 Column           0    3    7               00 r[7]=sqlite_temp_master.rootpage
REG[7] =  i:3
  13 Column           0    4    8               00 r[8]=sqlite_temp_master.sql
REG[8] =   s38[CREATE TABLE sqlite_seque](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s15[sqlite_sequence](8)
REG[6] =   s15[sqlite_sequence](8)
REG[7] =  i:3
REG[8] =   s38[CREATE TABLE sqlite_seque](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  52 ParseSchema      1    0    0 tbl_name='t3_2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      1    0    1 1             00 usesStmtJournal=0
  18 String8          0    2    0 t3_2          00 r[2]='t3_2'
REG[2] =   t4[t3_2](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_temp_master.tbl_name
REG[1] =   s4[t3_2](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t4[t3_2](8)
REG[1] =   s4[t3_2](8)
   7 Column           0    0    1               00 r[1]=sqlite_temp_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_temp_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_temp_master.name
REG[5] =   s4[t3_2](8)
  11 Column           0    2    6               00 r[6]=sqlite_temp_master.tbl_name
REG[6] =   s4[t3_2](8)
  12 Column           0    3    7               00 r[7]=sqlite_temp_master.rootpage
REG[7] =  i:2
  13 Column           0    4    8               00 r[8]=sqlite_temp_master.sql
REG[8] =   s58[CREATE TABLE t3_2(c1 INTE](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s4[t3_2](8)
REG[6] =   s4[t3_2](8)
REG[7] =  i:2
REG[8] =   s58[CREATE TABLE t3_2(c1 INTE](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_temp_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t4[t3_2](8)
REG[1] =   s15[sqlite_sequence](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  53 Halt             0    0    0               00 
SQL: [;ALTER TABLE pragma_compile_options RENAME TO flubber;]
VDBE Trace:
   0 Init             0  157    0               00 Start at 157
 157 Transaction      0    1    6 1             01 usesStmtJournal=1
 158 Transaction      1    1    1 1             01 usesStmtJournal=1
 159 String8          0    9    0 index         00 r[9]='index'
REG[9] =   t5[index](8)
 160 String8          0   10    0 pragma_compile_options 00 r[10]='pragma_compile_options'
REG[10] =   t22[pragma_compile_options](8)
 161 String8          0   11    0 sqliteX_%     00 r[11]='sqliteX_%'
REG[11] =   t9[sqliteX_%](8)
 162 String8          0   13    0 X             00 r[13]='X'
REG[13] =   t1[X](8)
 163 String8          0   15    0 main          00 r[15]='main'
REG[15] =   t4[main](8)
 164 String8          0   19    0 pragma_compile_options 00 r[19]='pragma_compile_options'
REG[19] =   t22[pragma_compile_options](8)
 165 String8          0   20    0 flubber       00 r[20]='flubber'
REG[20] =   t7[flubber](8)
 166 Integer          0   21    0               00 r[21]=0
REG[21] =  i:0
 167 String8          0   29    0 table         00 r[29]='table'
REG[29] =   t5[table](8)
 168 String8          0   30    0 trigger       00 r[30]='trigger'
REG[30] =   t7[trigger](8)
 169 String8          0   32    0 sqliteX_autoindex% 00 r[32]='sqliteX_autoindex%'
REG[32] =   t18[sqliteX_autoindex%](8)
 170 String8          0   34    0 X             00 r[34]='X'
REG[34] =   t1[X](8)
 171 String8          0   52    0 sqlite_autoindex_ 00 r[52]='sqlite_autoindex_'
REG[52] =   t17[sqlite_autoindex_](8)
 172 String8          0   88    0 flubber       00 r[88]='flubber'
REG[88] =   t7[flubber](8)
 173 Concat          88   52   35               00 r[35]=r[52]+r[88]
REG[88] =   t7[flubber](8)
REG[52] =   t17[sqlite_autoindex_](8)
REG[35] =   s24[sqlite_autoindex_flubber](8)
 174 Integer         22   88    0               00 r[88]=22
REG[88] =  i:22
 175 Integer         18   52    0               00 r[52]=18
REG[52] =  i:18
 176 Add             52   88   37               00 r[37]=r[52]+r[88]
REG[52] =  i:18
REG[88] =  i:22
REG[37] =  i:40
 177 String8          0   50    0 view          00 r[50]='view'
REG[50] =   t4[view](8)
 178 String8          0   53    0 main          00 r[53]='main'
REG[53] =   t4[main](8)
 179 Integer          1   57    0               00 r[57]=1
REG[57] =  i:1
 180 String8          0   58    0 main          00 r[58]='main'
REG[58] =   t4[main](8)
 181 String8          0   62    0 pragma_compile_options 00 r[62]='pragma_compile_options'
REG[62] =   t22[pragma_compile_options](8)
 182 String8          0   63    0 flubber       00 r[63]='flubber'
REG[63] =   t7[flubber](8)
 183 Integer          1   64    0               00 r[64]=1
REG[64] =  i:1
 184 String8          0   65    0 sqliteX_%     00 r[65]='sqliteX_%'
REG[65] =   t9[sqliteX_%](8)
 185 String8          0   67    0 X             00 r[67]='X'
REG[67] =   t1[X](8)
 186 String8          0   68    0 create virtual% 00 r[68]='create virtual%'
REG[68] =   t15[create virtual%](8)
 187 String8          0   70    0 main          00 r[70]='main'
REG[70] =   t4[main](8)
 188 Integer          0   74    0               00 r[74]=0
REG[74] =  i:0
 189 Null             0   75    0               00 r[75]=NULL
REG[75] =  NULL
 190 String8          0   77    0 sqliteX_%     00 r[77]='sqliteX_%'
REG[77] =   t9[sqliteX_%](8)
 191 String8          0   79    0 X             00 r[79]='X'
REG[79] =   t1[X](8)
 192 String8          0   80    0 create virtual% 00 r[80]='create virtual%'
REG[80] =   t15[create virtual%](8)
 193 String8          0   82    0 main          00 r[82]='main'
REG[82] =   t4[main](8)
 194 Integer          1   86    0               00 r[86]=1
REG[86] =  i:1
 195 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    1    0 3             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   15    0               00 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Ne               9    9    8 (BINARY)      42 if r[8]!=r[9] goto 9
REG[9] =   t5[index](8)
REG[8] =   s5[table](8)
   9 Column           0    1   12               00 r[12]=sqlite_master.name
REG[12] =   s2[t2](8)
  10 Function0        5   11    8 like(3)       03 r[8]=func(r[11..13])
REG[11] =   t9[sqliteX_%](8)
REG[12] =   s2[t2](8)
REG[13] =   t1[X](8)
REG[8] =  i:0
  11 If               8   14    1               00 
REG[8] =  i:0
  12 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
  13 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
  14 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Ne               9    9    8 (BINARY)      42 if r[8]!=r[9] goto 9
REG[9] =   t5[index](8)
REG[8] =   s5[table](8)
   9 Column           0    1   12               00 r[12]=sqlite_master.name
REG[12] =   s15[sqlite_sequence](8)
  10 Function         5   11    8 like(3)       03 r[8]=func(r[11..13])
REG[11] =   t9[sqliteX_%](8)
REG[12] =   s15[sqlite_sequence](8)
REG[13] =   t1[X](8)
REG[8] =  i:1
  11 If               8   14    1               00 
REG[8] =  i:1
  14 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s7[trigger](8)
   6 Ne               9    9    8 (BINARY)      42 if r[8]!=r[9] goto 9
REG[9] =   t5[index](8)
REG[8] =   s7[trigger](8)
   9 Column           0    1   12               00 r[12]=sqlite_master.name
REG[12] =   s1[c](8)
  10 Function         5   11    8 like(3)       03 r[8]=func(r[11..13])
REG[11] =   t9[sqliteX_%](8)
REG[12] =   s1[c](8)
REG[13] =   t1[X](8)
REG[8] =  i:0
  11 If               8   14    1               00 
REG[8] =  i:0
  12 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:3
  13 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:3
  14 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Ne               9    9    8 (BINARY)      42 if r[8]!=r[9] goto 9
REG[9] =   t5[index](8)
REG[8] =   s5[table](8)
   9 Column           0    1   12               00 r[12]=sqlite_master.name
REG[12] =   s1[r](8)
  10 Function         5   11    8 like(3)       03 r[8]=func(r[11..13])
REG[11] =   t9[sqliteX_%](8)
REG[12] =   s1[r](8)
REG[13] =   t1[X](8)
REG[8] =  i:0
  11 If               8   14    1               00 
REG[8] =  i:0
  12 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:4
  13 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:4
  14 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s7[trigger](8)
   6 Ne               9    9    8 (BINARY)      42 if r[8]!=r[9] goto 9
REG[9] =   t5[index](8)
REG[8] =   s7[trigger](8)
   9 Column           0    1   12               00 r[12]=sqlite_master.name
REG[12] =   s1[c](8)
  10 Function         5   11    8 like(3)       03 r[8]=func(r[11..13])
REG[11] =   t9[sqliteX_%](8)
REG[12] =   s1[c](8)
REG[13] =   t1[X](8)
REG[8] =  i:0
  11 If               8   14    1               00 
REG[8] =  i:0
  12 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:5
  13 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:5
  14 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s7[trigger](8)
   6 Ne               9    9    8 (BINARY)      42 if r[8]!=r[9] goto 9
REG[9] =   t5[index](8)
REG[8] =   s7[trigger](8)
   9 Column           0    1   12               00 r[12]=sqlite_master.name
REG[12] =   s4[t1i2](8)
  10 Function         5   11    8 like(3)       03 r[8]=func(r[11..13])
REG[11] =   t9[sqliteX_%](8)
REG[12] =   s4[t1i2](8)
REG[13] =   t1[X](8)
REG[8] =  i:0
  11 If               8   14    1               00 
REG[8] =  i:0
  12 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:6
  13 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:6
  14 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Ne               9    9    8 (BINARY)      42 if r[8]!=r[9] goto 9
REG[9] =   t5[index](8)
REG[8] =   s5[table](8)
   9 Column           0    1   12               00 r[12]=sqlite_master.name
REG[12] =   s4[t1i3](8)
  10 Function         5   11    8 like(3)       03 r[8]=func(r[11..13])
REG[11] =   t9[sqliteX_%](8)
REG[12] =   s4[t1i3](8)
REG[13] =   t1[X](8)
REG[8] =  i:0
  11 If               8   14    1               00 
REG[8] =  i:0
  12 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:7
  13 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:7
  14 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   6 Ne               9    9    8 (BINARY)      42 if r[8]!=r[9] goto 9
REG[9] =   t5[index](8)
REG[8] =   s5[index](8)
   7 Column           0    2    8               00 r[8]=sqlite_master.tbl_name
REG[8] =   s4[t1i3](8)
   8 Ne              10   14    8 (NOCASE)      52 if r[8]!=r[10] goto 14
REG[10] =   t22[pragma_compile_options](8)
REG[8] =   s4[t1i3](8)
  14 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s4[view](8)
   6 Ne               9    9    8 (BINARY)      42 if r[8]!=r[9] goto 9
REG[9] =   t5[index](8)
REG[8] =   s4[view](8)
   9 Column           0    1   12               00 r[12]=sqlite_master.name
REG[12] =   s4[t3_1](8)
  10 Function         5   11    8 like(3)       03 r[8]=func(r[11..13])
REG[11] =   t9[sqliteX_%](8)
REG[12] =   s4[t3_1](8)
REG[13] =   t1[X](8)
REG[8] =  i:0
  11 If               8   14    1               00 
REG[8] =  i:0
  12 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:9
  13 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:9
  14 Next             0    5    0               01 
  15 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
  16 RowSetRead       1   29    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  17 NotExists        0   16    2               00 intkey=r[2]
REG[2] =  i:1
  18 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
  19 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t2](8)
  20 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
REG[5] =   s2[t2](8)
  21 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  22 Column           0    0   16               00 r[16]=sqlite_master.type
REG[16] =   s5[table](8)
  23 Column           0    1   17               00 r[17]=sqlite_master.name
REG[17] =   s2[t2](8)
  24 Column           0    4   18               00 r[18]=sqlite_master.sql
REG[18] =   s59[CREATE TABLE t2(a, b INTE](8)
  25 Function0      113   15    7 sqlite_rename_table(7) 07 r[7]=func(r[15..21])
REG[15] =   t4[main](8)
REG[16] =   s5[table](8)
REG[17] =   s2[t2](8)
REG[18] =   s59[CREATE TABLE t2(a, b INTE](8)
REG[19] =   t22[pragma_compile_options](8)
REG[20] =   t7[flubber](8)
REG[21] =  i:0
REG[7] =   s59[CREATE TABLE t2(a, b INTE](8)
  26 MakeRecord       3    5   14 BBBDB         00 r[14]=mkrec(r[3..7])
REG[3] =   s5[table](8)
REG[4] =   s2[t2](8)
REG[5] =   s2[t2](8)
REG[6] =  i:2
REG[7] =   s59[CREATE TABLE t2(a, b INTE](8)
REG[14] =  sx76[071711110181037461626C6574327432024352454154452054|.......tablet2t2.CREATE T]
  27 Insert           0   14    2               00 intkey=r[2] data=r[14]
REG[14] =  sx76[071711110181037461626C6574327432024352454154452054|.......tablet2t2.CREATE T]
REG[2] =  i:1
  28 Goto             0   16    0               00 
  16 RowSetRead       1   29    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:3
  17 NotExists        0   16    2               00 intkey=r[2]
REG[2] =  i:3
  18 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s7[trigger](8)
  19 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[c](8)
  20 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
REG[5] =   s2[t2](8)
  21 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:0
  22 Column           0    0   16               00 r[16]=sqlite_master.type
REG[16] =   s7[trigger](8)
  23 Column           0    1   17               00 r[17]=sqlite_master.name
REG[17] =   s1[c](8)
  24 Column           0    4   18               00 r[18]=sqlite_master.sql
REG[18] =   s110[CREATE TRIGGER c  BEFORE ](8)
  25 Function       113   15    7 sqlite_rename_table(7) 07 r[7]=func(r[15..21])
REG[15] =   t4[main](8)
REG[16] =   s7[trigger](8)
REG[17] =   s1[c](8)
REG[18] =   s110[CREATE TRIGGER c  BEFORE ](8)
REG[19] =   t22[pragma_compile_options](8)
REG[20] =   t7[flubber](8)
REG[21] =  i:0
REG[7] =   s110[CREATE TRIGGER c  BEFORE ](8)
  26 MakeRecord       3    5   14 BBBDB         00 r[14]=mkrec(r[3..7])
REG[3] =   s7[trigger](8)
REG[4] =   s1[c](8)
REG[5] =   s2[t2](8)
REG[6] =  i:0
REG[7] =   s110[CREATE TRIGGER c  BEFORE ](8)
REG[14] =  sx127[071B0F11088169747269676765726374324352454154452054|......itriggerct2CREATE T]
  27 Insert           0   14    2               00 intkey=r[2] data=r[14]
REG[14] =  sx127[071B0F11088169747269676765726374324352454154452054|......itriggerct2CREATE T]
REG[2] =  i:3
  28 Goto             0   16    0               00 
  16 RowSetRead       1   29    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:4
  17 NotExists        0   16    2               00 intkey=r[2]
REG[2] =  i:4
  18 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
  19 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[r](8)
  20 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
REG[5] =   s1[r](8)
  21 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  22 Column           0    0   16               00 r[16]=sqlite_master.type
REG[16] =   s5[table](8)
  23 Column           0    1   17               00 r[17]=sqlite_master.name
REG[17] =   s1[r](8)
  24 Column           0    4   18               00 r[18]=sqlite_master.sql
REG[18] =   s26[CREATE TABLE r(x,t1i1, v3](8)
  25 Function       113   15    7 sqlite_rename_table(7) 07 r[7]=func(r[15..21])
REG[15] =   t4[main](8)
REG[16] =   s5[table](8)
REG[17] =   s1[r](8)
REG[18] =   s26[CREATE TABLE r(x,t1i1, v3](8)
REG[19] =   t22[pragma_compile_options](8)
REG[20] =   t7[flubber](8)
REG[21] =  i:0
REG[7] =   s26[CREATE TABLE r(x,t1i1, v3](8)
  26 MakeRecord       3    5   14 BBBDB         00 r[14]=mkrec(r[3..7])
REG[3] =   s5[table](8)
REG[4] =   s1[r](8)
REG[5] =   s1[r](8)
REG[6] =  i:4
REG[7] =   s26[CREATE TABLE r(x,t1i1, v3](8)
REG[14] =  sx40[06170F0F01417461626C65727204435245415445205441424C|.....Atablerr.CREATE TABL]
  27 Insert           0   14    2               00 intkey=r[2] data=r[14]
REG[14] =  sx40[06170F0F01417461626C65727204435245415445205441424C|.....Atablerr.CREATE TABL]
REG[2] =  i:4
  28 Goto             0   16    0               00 
  16 RowSetRead       1   29    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:5
  17 NotExists        0   16    2               00 intkey=r[2]
REG[2] =  i:5
  18 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s7[trigger](8)
  19 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[c](8)
  20 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
REG[5] =   s1[r](8)
  21 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:0
  22 Column           0    0   16               00 r[16]=sqlite_master.type
REG[16] =   s7[trigger](8)
  23 Column           0    1   17               00 r[17]=sqlite_master.name
REG[17] =   s1[c](8)
  24 Column           0    4   18               00 r[18]=sqlite_master.sql
REG[18] =   s89[CREATE TRIGGER c AFTER IN](8)
  25 Function       113   15    7 sqlite_rename_table(7) 07 r[7]=func(r[15..21])

Program received signal SIGSEGV, Segmentation fault.
__strcmp_avx2 () at ../sysdeps/x86_64/multiarch/strcmp-avx2.S:102
(gdb) #0  __strcmp_avx2 () at ../sysdeps/x86_64/multiarch/strcmp-avx2.S:102
#1  0x0000000000350080 in sqlite3ExprCodeTarget (pParse=0xde4f60, pExpr=0xde1270, target=9) at sqlite3.c:101145
#2  0x00000000003544de in sqlite3ExprCodeExprList (pParse=0xde4f60, pList=0xdea3c0, target=9, srcReg=0, flags=1 '\001') at sqlite3.c:101924
#3  0x00000000003b6480 in pushOntoSorter (pParse=0xde4f60, pSort=0x7ffc761b08b8, pSelect=0xde1bd0, regData=10, regOrigData=0, nData=1, nPrefixReg=1) at sqlite3.c:126256
#4  0x00000000003b1dff in selectInnerLoop (pParse=0xde4f60, p=0xde1bd0, srcTab=-1, pSort=0x7ffc761b08b8, pDistinct=0x7ffc761b0978, pDest=0x7ffc761b0a68, iContinue=-4, iBreak=-2) at sqlite3.c:126809
#5  0x0000000000301bc2 in sqlite3Select (pParse=0xde4f60, p=0xde1bd0, pDest=0x7ffc761b0a68) at sqlite3.c:131815
#6  0x0000000000300cd3 in sqlite3Select (pParse=0xde4f60, p=0xdd2810, pDest=0x7ffc761b0d90) at sqlite3.c:131596
#7  0x000000000030db43 in sqlite3Insert (pParse=0xde4f60, pTabList=0xdef370, pSelect=0xdd2810, pColumn=0x0, onError=5, pUpsert=0x0) at sqlite3.c:118113
#8  0x000000000039c1d6 in codeTriggerProgram (pParse=0xde4f60, pStepList=0xdf2ed0, orconf=5) at sqlite3.c:133349
#9  0x000000000039ba29 in codeRowTrigger (pParse=0x7ffc761b1f60, pTrigger=0xdf2e80, pTab=0xdff650, orconf=5) at sqlite3.c:133502
#10 0x000000000039b15d in getRowTrigger (pParse=0x7ffc761b1f60, pTrigger=0xdf2e80, pTab=0xdff650, orconf=5) at sqlite3.c:133559
#11 0x000000000039ac73 in sqlite3CodeRowTriggerDirect (pParse=0x7ffc761b1f60, p=0xdf2e80, pTab=0xdff650, reg=6, orconf=5, ignoreJump=-1) at sqlite3.c:133581
#12 0x0000000000369ad5 in sqlite3CodeRowTrigger (pParse=0x7ffc761b1f60, pTrigger=0xdf2060, op=123, pChanges=0x0, tr_tm=1, pTab=0xdff650, reg=6, orconf=5, ignoreJump=-1) at sqlite3.c:133675
#13 0x000000000030ee8c in sqlite3Insert (pParse=0x7ffc761b1f60, pTabList=0xddd580, pSelect=0x0, pColumn=0x0, onError=5, pUpsert=0x0) at sqlite3.c:118344
#14 0x00000000002f2136 in yy_reduce (yypParser=0x7ffc761b1580, yyruleno=155, yyLookahead=1, yyLookaheadToken=..., pParse=0x7ffc761b1f60) at sqlite3.c:153575
#15 0x00000000002eca18 in sqlite3Parser (yyp=0x7ffc761b1580, yymajor=1, yyminor=...) at sqlite3.c:154496
#16 0x00000000002a9df3 in sqlite3RunParser (pParse=0x7ffc761b1f60, 
    zSql=0xde9f3f ";;DROP TABLE r;;\n;DROP TABLE t3_2;SELECT t1,t1,t1 FROM t2 UNION SELECT t1,t1,t1 FROM t2\n    ORDER BY t1 COLLATE NOCASE DESC,t1,t1\n  \n;;\n;SELECT 10+sum(t1) OVER (ORDER BY t1) \n  FROM t2 \n  ORDER BY 10+"..., pzErrMsg=0x7ffc761b2140) at sqlite3.c:155636
#17 0x00000000002a77e3 in sqlite3Prepare (db=0xdcf4c0, 
    zSql=0xdd01e8 "INSERT OR REPLACE  INTO main.t2 DEFAULT VALUES\n;;DROP TABLE r;;\n;DROP TABLE t3_2;SELECT t1,t1,t1 FROM t2 UNION SELECT t1,t1,t1 FROM t2\n    ORDER BY t1 COLLATE NOCASE DESC,t1,t1\n  \n;;\n;SELECT 10+sum(t1"..., nBytes=584, prepFlags=128, pReprepare=0x0, ppStmt=0x7ffc761b2278, pzTail=0x7ffc761b2260) at sqlite3.c:125299
#18 0x00000000002a6eae in sqlite3LockAndPrepare (db=0xdcf4c0, 
    zSql=0xdd01e8 "INSERT OR REPLACE  INTO main.t2 DEFAULT VALUES\n;;DROP TABLE r;;\n;DROP TABLE t3_2;SELECT t1,t1,t1 FROM t2 UNION SELECT t1,t1,t1 FROM t2\n    ORDER BY t1 COLLATE NOCASE DESC,t1,t1\n  \n;;\n;SELECT 10+sum(t1"..., nBytes=584, prepFlags=128, pOld=0x0, ppStmt=0x7ffc761b2278, pzTail=0x7ffc761b2260) at sqlite3.c:125402
#19 0x0000000000294f4f in sqlite3_prepare_v2 (db=0xdcf4c0, 
    zSql=0xdd01e8 "INSERT OR REPLACE  INTO main.t2 DEFAULT VALUES\n;;DROP TABLE r;;\n;DROP TABLE t3_2;SELECT t1,t1,t1 FROM t2 UNION SELECT t1,t1,t1 FROM t2\n    ORDER BY t1 COLLATE NOCASE DESC,t1,t1\n  \n;;\n;SELECT 10+sum(t1"..., nBytes=584, ppStmt=0x7ffc761b2278, pzTail=0x7ffc761b2260) at sqlite3.c:125486
#20 0x0000000000258550 in main (argc=1, argv=0x7ffc761b2428) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 53098] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
