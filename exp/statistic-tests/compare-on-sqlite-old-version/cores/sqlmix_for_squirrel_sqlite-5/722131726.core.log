GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000451,sig:06,src:026244+021215,time:25424686,execs:4692352,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT quote( CAST(1.78 AS blob) )
;]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 Real             0    3    0 1.78          00 r[3]=1.78
REG[3] =  r:1.78
   6 Cast             3   65    0               00 affinity(r[3])
REG[3] =  r:1.78
   7 Function0        1    3    2 quote(1)      01 r[2]=func(r[3])
REG[3] =  sx4[312E3738|1.78]
REG[2] =   s11[X'312E3738'](8)
   8 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s11[X'312E3738'](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s11[X'312E3738'](8)
   4 Halt             0    0    0               00 
SQL: [;VACUUM;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Vacuum           0    0    0               00 
SQL: [SELECT typeof(CAST(123 AS text))
;]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 Integer        123    3    0               00 r[3]=123
REG[3] =  i:123
   6 Cast             3   66    0               00 affinity(r[3])
REG[3] =  i:123
   7 Function0        1    3    2 typeof(1)     01 r[2]=func(r[3])
REG[3] =   s3[123](8)
REG[2] =   t4[text](8)
   8 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   t4[text](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t4[text](8)
   4 Halt             0    0    0               00 
SQL: [;
;ALTER TABLE t2 RENAME TO r;]
VDBE Trace:
   0 Init             0   88    0               00 Start at 88
  88 Transaction      1    1    1 0             01 usesStmtJournal=1
  89 String8          0    9    0 index         00 r[9]='index'
REG[9] =   t5[index](8)
  90 String8          0   10    0 t2            00 r[10]='t2'
REG[10] =   t2[t2](8)
  91 String8          0   11    0 sqliteX_%     00 r[11]='sqliteX_%'
REG[11] =   t9[sqliteX_%](8)
  92 String8          0   13    0 X             00 r[13]='X'
REG[13] =   t1[X](8)
  93 String8          0   15    0 temp          00 r[15]='temp'
REG[15] =   t4[temp](8)
  94 String8          0   19    0 t2            00 r[19]='t2'
REG[19] =   t2[t2](8)
  95 String8          0   20    0 r             00 r[20]='r'
REG[20] =   t1[r](8)
  96 Integer          1   21    0               00 r[21]=1
REG[21] =  i:1
  97 String8          0   29    0 table         00 r[29]='table'
REG[29] =   t5[table](8)
  98 String8          0   30    0 trigger       00 r[30]='trigger'
REG[30] =   t7[trigger](8)
  99 String8          0   32    0 sqliteX_autoindex% 00 r[32]='sqliteX_autoindex%'
REG[32] =   t18[sqliteX_autoindex%](8)
 100 String8          0   34    0 X             00 r[34]='X'
REG[34] =   t1[X](8)
 101 String8          0    8    0 sqlite_autoindex_ 00 r[8]='sqlite_autoindex_'
REG[8] =   t17[sqlite_autoindex_](8)
 102 String8          0   50    0 r             00 r[50]='r'
REG[50] =   t1[r](8)
 103 Concat          50    8   35               00 r[35]=r[8]+r[50]
REG[50] =   t1[r](8)
REG[8] =   t17[sqlite_autoindex_](8)
REG[35] =   s18[sqlite_autoindex_r](8)
 104 Integer          2   50    0               00 r[50]=2
REG[50] =  i:2
 105 Integer         18    8    0               00 r[8]=18
REG[8] =  i:18
 106 Add              8   50   37               00 r[37]=r[8]+r[50]
REG[8] =  i:18
REG[50] =  i:2
REG[37] =  i:20
 107 String8          0   38    0 sqliteX_%     00 r[38]='sqliteX_%'
REG[38] =   t9[sqliteX_%](8)
 108 String8          0   40    0 X             00 r[40]='X'
REG[40] =   t1[X](8)
 109 String8          0   41    0 create virtual% 00 r[41]='create virtual%'
REG[41] =   t15[create virtual%](8)
 110 String8          0   43    0 temp          00 r[43]='temp'
REG[43] =   t4[temp](8)
 111 Integer          1   47    0               00 r[47]=1
REG[47] =  i:1
 112 Null             0   48    0               00 r[48]=NULL
REG[48] =  NULL
 113 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    1    1 3             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   15    0               00 
   5 Column           0    0    8               00 r[8]=sqlite_temp_master.type
REG[8] =   s5[table](8)
   6 Ne               9    9    8 (BINARY)      42 if r[8]!=r[9] goto 9
REG[9] =   t5[index](8)
REG[8] =   s5[table](8)
   9 Column           0    1   12               00 r[12]=sqlite_temp_master.name
REG[12] =   s2[t2](8)
  10 Function0        5   11    8 like(3)       03 r[8]=func(r[11..13])
REG[11] =   t9[sqliteX_%](8)
REG[12] =   s2[t2](8)
REG[13] =   t1[X](8)
REG[8] =  i:0
  11 If               8   14    1               00 
REG[8] =  i:0
  12 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
  13 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
  14 Next             0    5    0               01 
  15 OpenWrite        0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
  16 RowSetRead       1   29    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  17 NotExists        0   16    2               00 intkey=r[2]
REG[2] =  i:1
  18 Column           0    0    3               00 r[3]=sqlite_temp_master.type
REG[3] =   s5[table](8)
  19 Column           0    1    4               00 r[4]=sqlite_temp_master.name
REG[4] =   s2[t2](8)
  20 Column           0    2    5               00 r[5]=sqlite_temp_master.tbl_name
REG[5] =   s2[t2](8)
  21 Column           0    3    6               00 r[6]=sqlite_temp_master.rootpage
REG[6] =  i:2
  22 Column           0    0   16               00 r[16]=sqlite_temp_master.type
REG[16] =   s5[table](8)
  23 Column           0    1   17               00 r[17]=sqlite_temp_master.name
REG[17] =   s2[t2](8)
  24 Column           0    4   18               00 r[18]=sqlite_temp_master.sql
REG[18] =   s25[CREATE TABLE t2(a, b, t1)](8)
  25 Function0      113   15    7 sqlite_rename_table(7) 07 r[7]=func(r[15..21])
REG[15] =   t4[temp](8)
REG[16] =   s5[table](8)
REG[17] =   s2[t2](8)
REG[18] =   s25[CREATE TABLE t2(a, b, t1)](8)
REG[19] =   t2[t2](8)
REG[20] =   t1[r](8)
REG[21] =  i:1
REG[7] =   s26[CREATE TABLE "r"(a, b, t1](8)
  26 MakeRecord       3    5   14 BBBDB         00 r[14]=mkrec(r[3..7])
REG[3] =   s5[table](8)
REG[4] =   s2[t2](8)
REG[5] =   s2[t2](8)
REG[6] =  i:2
REG[7] =   s26[CREATE TABLE "r"(a, b, t1](8)
REG[14] =  sx42[0617111101417461626C657432743202435245415445205441|.....Atablet2t2.CREATE TA]
  27 Insert           0   14    2               00 intkey=r[2] data=r[14]
REG[14] =  sx42[0617111101417461626C657432743202435245415445205441|.....Atablet2t2.CREATE TA]
REG[2] =  i:1
  28 Goto             0   16    0               00 
  16 RowSetRead       1   29    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  29 Null             0   22   23               00 r[22..23]=NULL
REG[22] =  NULL
  30 OpenRead         1    1    1 3             00 root=1 iDb=1; sqlite_temp_master
  31 Explain         31    0    0 SCAN TABLE sqlite_master 00 
  32 Rewind           1   44    0               00 
  33 Column           1    2    8               00 r[8]=sqlite_temp_master.tbl_name
REG[8] =   s2[t2](8)
  34 Ne              10   43    8 (NOCASE)      52 if r[8]!=r[10] goto 43
REG[10] =   t2[t2](8)
REG[8] =   s2[t2](8)
  35 Column           1    0    8               00 r[8]=sqlite_temp_master.type
REG[8] =   s5[table](8)
  36 Eq              29   41    8 (BINARY)      42 if r[8]==r[29] goto 41
REG[29] =   t5[table](8)
REG[8] =   s5[table](8)
  41 Rowid            1   23    0               00 r[23]=rowid
REG[23] =  i:1
  42 RowSetAdd       22   23    0               00 rowset(22)=r[23]
REG[22] =  NULL
REG[23] =  i:1
  43 Next             1   33    0               01 
  44 OpenWrite        1    1    1 5             00 root=1 iDb=1; sqlite_temp_master
  45 RowSetRead      22   68   23               00 r[23]=rowset(22)
REG[22] =  (rowset)
REG[23] =  i:1
  46 NotExists        1   45   23               00 intkey=r[23]
REG[23] =  i:1
  47 Column           1    0   24               00 r[24]=sqlite_temp_master.type
REG[24] =   s5[table](8)
  48 Column           1    0    8               00 r[8]=sqlite_temp_master.type
REG[8] =   s5[table](8)
  49 Ne              29   52    8 (BINARY)      52 if r[8]!=r[29] goto 52
REG[29] =   t5[table](8)
REG[8] =   s5[table](8)
  50 String8          0   25    0 r             00 r[25]='r'
REG[25] =   t1[r](8)
  51 Goto             0   62    0               00 
  62 String8          0   26    0 r             00 r[26]='r'
REG[26] =   t1[r](8)
  63 Column           1    3   27               00 r[27]=sqlite_temp_master.rootpage
REG[27] =  i:2
  64 Column           1    4   28               00 r[28]=sqlite_temp_master.sql
REG[28] =   s26[CREATE TABLE "r"(a, b, t1](8)
  65 MakeRecord      24    5   31 BBBDB         00 r[31]=mkrec(r[24..28])
REG[24] =   s5[table](8)
REG[25] =   t1[r](8)
REG[26] =   t1[r](8)
REG[27] =  i:2
REG[28] =   s26[CREATE TABLE "r"(a, b, t1](8)
REG[31] =  sx40[06170F0F01417461626C65727202435245415445205441424C|.....Atablerr.CREATE TABL]
  66 Insert           1   31   23               00 intkey=r[23] data=r[31]
REG[31] =  sx40[06170F0F01417461626C65727202435245415445205441424C|.....Atablerr.CREATE TABL]
REG[23] =  i:1
  67 Goto             0   45    0               00 
  45 RowSetRead      22   68   23               00 r[23]=rowset(22)
REG[22] =  (rowset)
REG[23] =  i:1
  68 SetCookie        1    1    2               00 
  69 ParseSchema      1    0    0               00 
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      1    0    2 1             00 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_temp_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_temp_master.name
REG[2] =   s1[r](8)
   7 Column           0    2    3               00 r[3]=sqlite_temp_master.tbl_name
REG[3] =   s1[r](8)
   8 Column           0    3    4               00 r[4]=sqlite_temp_master.rootpage
REG[4] =  i:2
   9 Column           0    4    5               00 r[5]=sqlite_temp_master.sql
REG[5] =   s26[CREATE TABLE "r"(a, b, t1](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s1[r](8)
REG[3] =   s1[r](8)
REG[4] =  i:2
REG[5] =   s26[CREATE TABLE "r"(a, b, t1](8)
  11 Next             0    5    0               01 
  12 Halt             0    0    0               00 
  70 OpenRead         2    1    1 5             00 root=1 iDb=1; sqlite_temp_master
  71 Explain         71    0    0 SCAN TABLE sqlite_master 00 
  72 Rewind           2   87    0               00 
  73 Column           2    1   39               00 r[39]=sqlite_temp_master.name
REG[39] =   s1[r](8)
  74 Function0        5   38    8 like(3)       03 r[8]=func(r[38..40])
REG[38] =   t9[sqliteX_%](8)
REG[39] =   s1[r](8)
REG[40] =   t1[X](8)
REG[8] =  i:0
  75 If               8   86    1               00 
REG[8] =  i:0
  76 Column           2    4   42               00 r[42]=sqlite_temp_master.sql
REG[42] =   s26[CREATE TABLE "r"(a, b, t1](8)
  77 Function0        1   41    8 like(2)       02 r[8]=func(r[41..42])
REG[41] =   t15[create virtual%](8)
REG[42] =   s26[CREATE TABLE "r"(a, b, t1](8)
REG[8] =  i:0
  78 If               8   86    1               00 
REG[8] =  i:0
  79 Column           2    4   44               00 r[44]=sqlite_temp_master.sql
REG[44] =   s26[CREATE TABLE "r"(a, b, t1](8)
  80 Column           2    0   45               00 r[45]=sqlite_temp_master.type
REG[45] =   s5[table](8)
  81 Column           2    1   46               00 r[46]=sqlite_temp_master.name
REG[46] =   s1[r](8)
  82 Function0       17   43    8 sqlite_rename_test(5) 05 r[8]=func(r[43..47])
REG[43] =   t4[temp](8)
REG[44] =   s26[CREATE TABLE "r"(a, b, t1](8)
REG[45] =   s5[table](8)
REG[46] =   s1[r](8)
REG[47] =  i:1
REG[8] =  NULL
  83 Ne              48   86    8               50 if r[8]!=r[48] goto 86
REG[48] =  NULL
REG[8] =  NULL
  86 Next             2   73    0               01 
  87 Halt             0    0    0               00 
SQL: [;ATTACH 'test3.db' AS 'ON';]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 String8          0    1    0 test3.db      00 r[1]='test3.db'
REG[1] =   t8[test3.db](8)
   2 String8          0    2    0 ON            00 r[2]='ON'
REG[2] =   t2[ON](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t8[test3.db](8)
REG[2] =   t2[ON](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      2    0  241 0             00 usesStmtJournal=0
  14 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  15 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[ON](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[ON](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:2
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s26[CREATE TABLE 'ON'(a, b, c](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s2[ON](8)
REG[3] =   s2[ON](8)
REG[4] =  i:2
REG[5] =   s26[CREATE TABLE 'ON'(a, b, c](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s5[t20_2](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s5[t20_2](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:3
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s21[CREATE TABLE t20_2(y)](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s5[t20_2](8)
REG[3] =   s5[t20_2](8)
REG[4] =  i:3
REG[5] =   s21[CREATE TABLE t20_2(y)](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s12[sqlite_stat1](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s12[sqlite_stat1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:4
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s39[CREATE TABLE sqlite_stat1](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s12[sqlite_stat1](8)
REG[3] =   s12[sqlite_stat1](8)
REG[4] =  i:4
REG[5] =   s39[CREATE TABLE sqlite_stat1](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s5[trig4](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[ON](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:0
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s61[CREATE TRIGGER trig4 AFTE](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s7[trigger](8)
REG[2] =   s5[trig4](8)
REG[3] =   s2[ON](8)
REG[4] =  i:0
REG[5] =   s61[CREATE TRIGGER trig4 AFTE](8)
  11 Next             0    5    0               01 
  12 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      2    0  241 0             00 usesStmtJournal=0
  11 TableLock        2    4    0 sqlite_stat1  00 iDb=2 root=4 write=0
  12 Goto             0    1    0               00 
   1 OpenRead         0    4    2 3             00 root=4 iDb=2; sqlite_stat1
   2 Explain          2    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_stat1.tbl
REG[1] =   s1[x](8)
   5 Column           0    1    2               00 r[2]=sqlite_stat1.idx
REG[2] =   s2[v1](8)
   6 Column           0    2    3               00 r[3]=sqlite_stat1.stat
REG[3] =   s44[600000 160000 40000 10000](8)
   7 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[x](8)
REG[2] =   s2[v1](8)
REG[3] =   s44[600000 160000 40000 10000](8)
   8 Next             0    4    0               01 
   9 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [;ATTACH 'test.db' as MAIN;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 String8          0    1    0 test.db       00 r[1]='test.db'
REG[1] =   t7[test.db](8)
   2 String8          0    2    0 MAIN          00 r[2]='MAIN'
REG[2] =   t4[MAIN](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t7[test.db](8)
REG[2] =   t4[MAIN](8)
REG[3] =  NULL
SQL: [SELECT*FROM"ON".sqlite_master WHERE type='trigger' AND name='trig4' ORDER BY rowid
;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      2    0  241 0             01 usesStmtJournal=0
  18 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  19 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  20 String8          0    3    0 trig4         00 r[3]='trig4'
REG[3] =   t5[trig4](8)
  21 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  15 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  15 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  15 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s5[trig4](8)
   8 Ne               3   15    1 (BINARY)      52 if r[1]!=r[3] goto 15
REG[3] =   t5[trig4](8)
REG[1] =   s5[trig4](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s7[trigger](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s5[trig4](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s2[ON](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:0
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s61[CREATE TRIGGER trig4 AFTE](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s7[trigger](8)
REG[5] =   s5[trig4](8)
REG[6] =   s2[ON](8)
REG[7] =  i:0
REG[8] =   s61[CREATE TRIGGER trig4 AFTE](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
SQL: [;SELECT*FROM"temp".sqlite_master WHERE type='trigger' AND name='v2' ORDER BY rowid
;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      1    0    2 1             01 usesStmtJournal=0
  18 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  19 String8          0    3    0 v2            00 r[3]='v2'
REG[3] =   t2[v2](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_temp_master.type
REG[1] =   s5[table](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
SQL: [;
;CREATE TEMP TRIGGER t1i3 AFTER UPDATE ON r BEGIN
      SELECT trigfunc('t1i3', new.k3, new.t1i3, new.t1i3);
    END;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      1    1    2 1             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 OpenWrite        0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   3 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   4 String8          0    3    0 t1i3          00 r[3]='t1i3'
REG[3] =   t4[t1i3](8)
   5 String8          0    4    0 r             00 r[4]='r'
REG[4] =   t1[r](8)
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 String8          0    6    0 CREATE TRIGGER t1i3 AFTER UPDATE ON r BEGIN
      SELECT trigfunc('t1i3', new.k3, new.t1i3, new.t1i3);
    END 00 r[6]='CREATE TRIGGER t1i3 AFTER UPDATE ON r BEGIN
      SELECT trigfunc('t1i3', new.k3, new.t1i3, n
REG[6] =   t110[CREATE TRIGGER t1i3 AFTER](8)
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
REG[2] =   t7[trigger](8)
REG[3] =   t4[t1i3](8)
REG[4] =   t1[r](8)
REG[5] =  i:0
REG[6] =   t110[CREATE TRIGGER t1i3 AFTER](8)
REG[7] =  sx129[071B150F088169747269676765727431693372435245415445|......itriggert1i3rCREATE]
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
REG[7] =  sx129[071B150F088169747269676765727431693372435245415445|......itriggert1i3rCREATE]
REG[1] =  i:2
  10 SetCookie        1    1    3               00 
  11 ParseSchema      1    0    0 type='trigger' AND name='t1i3' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      1    0    3 1             00 usesStmtJournal=0
  18 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  19 String8          0    3    0 t1i3          00 r[3]='t1i3'
REG[3] =   t4[t1i3](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_temp_master.type
REG[1] =   s5[table](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  15 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_temp_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    1               00 r[1]=sqlite_temp_master.name
REG[1] =   s4[t1i3](8)
   8 Ne               3   15    1 (BINARY)      52 if r[1]!=r[3] goto 15
REG[3] =   t4[t1i3](8)
REG[1] =   s4[t1i3](8)
   9 Column           0    0    4               00 r[4]=sqlite_temp_master.type
REG[4] =   s7[trigger](8)
  10 Column           0    1    5               00 r[5]=sqlite_temp_master.name
REG[5] =   s4[t1i3](8)
  11 Column           0    2    6               00 r[6]=sqlite_temp_master.tbl_name
REG[6] =   s1[r](8)
  12 Column           0    3    7               00 r[7]=sqlite_temp_master.rootpage
REG[7] =  i:0
  13 Column           0    4    8               00 r[8]=sqlite_temp_master.sql
REG[8] =   s110[CREATE TRIGGER t1i3 AFTER](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s7[trigger](8)
REG[5] =   s4[t1i3](8)
REG[6] =   s1[r](8)
REG[7] =  i:0
REG[8] =   s110[CREATE TRIGGER t1i3 AFTER](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;SELECT CAST('12345678901234567890123' AS INTEGER);]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 String8          0    1    0 12345678901234567890123 00 r[1]='12345678901234567890123'
REG[1] =   t23[12345678901234567890123](8)
   3 Cast             1   68    0               00 affinity(r[1])
REG[1] =   t23[12345678901234567890123](8)
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:9223372036854775807
   5 Halt             0    0    0               00 
SQL: [;SELECT*FROM"temp".sqlite_master WHERE type='trigger' AND name='v2' ORDER BY rowid
;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      1    0    3 1             01 usesStmtJournal=0
  18 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  19 String8          0    3    0 v2            00 r[3]='v2'
REG[3] =   t2[v2](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_temp_master.type
REG[1] =   s5[table](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  15 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_temp_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    1               00 r[1]=sqlite_temp_master.name
REG[1] =   s4[t1i3](8)
   8 Ne               3   15    1 (BINARY)      52 if r[1]!=r[3] goto 15
REG[3] =   t2[v2](8)
REG[1] =   s4[t1i3](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM temp.sqlite_master WHERE type = 'trigger';]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      1    0    3 1             01 usesStmtJournal=0
  15 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  16 Goto             0    1    0               00 
   1 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   2 Explain          2    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   13    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_temp_master.type
REG[1] =   s5[table](8)
   5 Ne               2   12    1 (BINARY)      52 if r[1]!=r[2] goto 12
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  12 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_temp_master.type
REG[1] =   s7[trigger](8)
   5 Ne               2   12    1 (BINARY)      52 if r[1]!=r[2] goto 12
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   6 Column           0    0    3               00 r[3]=sqlite_temp_master.type
REG[3] =   s7[trigger](8)
   7 Column           0    1    4               00 r[4]=sqlite_temp_master.name
REG[4] =   s4[t1i3](8)
   8 Column           0    2    5               00 r[5]=sqlite_temp_master.tbl_name
REG[5] =   s1[r](8)
   9 Column           0    3    6               00 r[6]=sqlite_temp_master.rootpage
REG[6] =  i:0
  10 Column           0    4    7               00 r[7]=sqlite_temp_master.sql
REG[7] =   s110[CREATE TRIGGER t1i3 AFTER](8)
  11 ResultRow        3    5    0               00 output=r[3..7]
REG[3] =   s7[trigger](8)
REG[4] =   s4[t1i3](8)
REG[5] =   s1[r](8)
REG[6] =  i:0
REG[7] =   s110[CREATE TRIGGER t1i3 AFTER](8)
  12 Next             0    4    0               01 
  13 Halt             0    0    0               00 
SQL: [;ALTER TABLE pragma_compile_options RENAME TO flubber;]
VDBE Trace:
   0 Init             0  140    0               00 Start at 140
 140 Transaction      0    1    1 0             01 usesStmtJournal=1
 141 Transaction      1    1    3 1             01 usesStmtJournal=1
 142 String8          0    9    0 index         00 r[9]='index'
REG[9] =   t5[index](8)
 143 String8          0   10    0 pragma_compile_options 00 r[10]='pragma_compile_options'
REG[10] =   t22[pragma_compile_options](8)
 144 String8          0   11    0 sqliteX_%     00 r[11]='sqliteX_%'
REG[11] =   t9[sqliteX_%](8)
 145 String8          0   13    0 X             00 r[13]='X'
REG[13] =   t1[X](8)
 146 String8          0   15    0 main          00 r[15]='main'
REG[15] =   t4[main](8)
 147 String8          0   19    0 pragma_compile_options 00 r[19]='pragma_compile_options'
REG[19] =   t22[pragma_compile_options](8)
 148 String8          0   20    0 flubber       00 r[20]='flubber'
REG[20] =   t7[flubber](8)
 149 Integer          0   21    0               00 r[21]=0
REG[21] =  i:0
 150 String8          0   29    0 table         00 r[29]='table'
REG[29] =   t5[table](8)
 151 String8          0   30    0 trigger       00 r[30]='trigger'
REG[30] =   t7[trigger](8)
 152 String8          0   32    0 sqliteX_autoindex% 00 r[32]='sqliteX_autoindex%'
REG[32] =   t18[sqliteX_autoindex%](8)
 153 String8          0   34    0 X             00 r[34]='X'
REG[34] =   t1[X](8)
 154 String8          0   47    0 sqlite_autoindex_ 00 r[47]='sqlite_autoindex_'
REG[47] =   t17[sqlite_autoindex_](8)
 155 String8          0   83    0 flubber       00 r[83]='flubber'
REG[83] =   t7[flubber](8)
 156 Concat          83   47   35               00 r[35]=r[47]+r[83]
REG[83] =   t7[flubber](8)
REG[47] =   t17[sqlite_autoindex_](8)
REG[35] =   s24[sqlite_autoindex_flubber](8)
 157 Integer         22   83    0               00 r[83]=22
REG[83] =  i:22
 158 Integer         18   47    0               00 r[47]=18
REG[47] =  i:18
 159 Add             47   83   37               00 r[37]=r[47]+r[83]
REG[47] =  i:18
REG[83] =  i:22
REG[37] =  i:40
 160 String8          0   45    0 view          00 r[45]='view'
REG[45] =   t4[view](8)
 161 String8          0   48    0 main          00 r[48]='main'
REG[48] =   t4[main](8)
 162 Integer          1   52    0               00 r[52]=1
REG[52] =  i:1
 163 String8          0   53    0 main          00 r[53]='main'
REG[53] =   t4[main](8)
 164 String8          0   57    0 pragma_compile_options 00 r[57]='pragma_compile_options'
REG[57] =   t22[pragma_compile_options](8)
 165 String8          0   58    0 flubber       00 r[58]='flubber'
REG[58] =   t7[flubber](8)
 166 Integer          1   59    0               00 r[59]=1
REG[59] =  i:1
 167 String8          0   60    0 sqliteX_%     00 r[60]='sqliteX_%'
REG[60] =   t9[sqliteX_%](8)
 168 String8          0   62    0 X             00 r[62]='X'
REG[62] =   t1[X](8)
 169 String8          0   63    0 create virtual% 00 r[63]='create virtual%'
REG[63] =   t15[create virtual%](8)
 170 String8          0   65    0 main          00 r[65]='main'
REG[65] =   t4[main](8)
 171 Integer          0   69    0               00 r[69]=0
REG[69] =  i:0
 172 Null             0   70    0               00 r[70]=NULL
REG[70] =  NULL
 173 String8          0   72    0 sqliteX_%     00 r[72]='sqliteX_%'
REG[72] =   t9[sqliteX_%](8)
 174 String8          0   74    0 X             00 r[74]='X'
REG[74] =   t1[X](8)
 175 String8          0   75    0 create virtual% 00 r[75]='create virtual%'
REG[75] =   t15[create virtual%](8)
 176 String8          0   77    0 main          00 r[77]='main'
REG[77] =   t4[main](8)
 177 Integer          1   81    0               00 r[81]=1
REG[81] =  i:1
 178 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    1    0 3             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   15    0               00 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s4[view](8)
   6 Ne               9    9    8 (BINARY)      42 if r[8]!=r[9] goto 9
REG[9] =   t5[index](8)
REG[8] =   s4[view](8)
   9 Column           0    1   12               00 r[12]=sqlite_master.name
REG[12] =   s1[c](8)
  10 Function0        5   11    8 like(3)       03 r[8]=func(r[11..13])
REG[11] =   t9[sqliteX_%](8)
REG[12] =   s1[c](8)
REG[13] =   t1[X](8)
REG[8] =  i:0
  11 If               8   14    1               00 
REG[8] =  i:0
  12 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
  13 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
  14 Next             0    5    0               01 
  15 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
  16 RowSetRead       1   29    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  17 NotExists        0   16    2               00 intkey=r[2]
REG[2] =  i:1
  18 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s4[view](8)
  19 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[c](8)
  20 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
REG[5] =   s1[c](8)
  21 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:0
  22 Column           0    0   16               00 r[16]=sqlite_master.type
REG[16] =   s4[view](8)
  23 Column           0    1   17               00 r[17]=sqlite_master.name
REG[17] =   s1[c](8)
  24 Column           0    4   18               00 r[18]=sqlite_master.sql
REG[18] =   s49[CREATE VIEW c AS SELECT 1](8)
  25 Function0      113   15    7 sqlite_rename_table(7) 07 r[7]=func(r[15..21])

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f8f301ec859 in __GI_abort () at abort.c:79
#2  0x00007f8f301ec729 in __assert_fail_base (fmt=0x7f8f30382588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x223ab6 "pPtr!=0", file=0x2291f4 "sqlite3.c", line=103985, function=<optimized out>) at assert.c:92
#3  0x00007f8f301fdfd6 in __GI___assert_fail (assertion=0x223ab6 "pPtr!=0", file=0x2291f4 "sqlite3.c", line=103985, function=0x22a5c7 "void renameTokenFind(Parse *, struct RenameCtx *, void *)") at assert.c:101
#4  0x0000000000427519 in renameTokenFind (pParse=0x7ffefe24b590, pCtx=0x7ffefe24b778, pPtr=0x0) at sqlite3.c:103985
#5  0x0000000000427432 in renameTableSelectCb (pWalker=0x7ffefe24b730, pSelect=0x1df4bf0) at sqlite3.c:104607
#6  0x00000000003203a6 in sqlite3WalkSelect (pWalker=0x7ffefe24b730, p=0x1df4bf0) at sqlite3.c:95676
#7  0x00000000004255d0 in renameTableFunc (context=0x1dca050, NotUsed=7, argv=0x1dca080) at sqlite3.c:104685
#8  0x00000000003e9e49 in sqlite3VdbeExec (p=0x1dbcd60) at sqlite3.c:91482
#9  0x000000000041ba74 in sqlite3Step (p=0x1dbcd60) at sqlite3.c:82300
#10 0x0000000000293d5d in sqlite3_step (pStmt=0x1dbcd60) at sqlite3.c:82365
#11 0x0000000000258a39 in main (argc=1, argv=0x7ffefe24c438) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 54464] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
