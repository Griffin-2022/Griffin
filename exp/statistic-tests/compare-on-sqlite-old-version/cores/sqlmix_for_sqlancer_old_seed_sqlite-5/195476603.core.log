GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000166,sig:06,src:020430+015078,time:23148385,execs:5058110,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [ROLLBACK TO changeset_apply;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Savepoint        2    0    0 changeset_apply 00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    0 1             01 usesStmtJournal=0
  16 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
  14 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    0 1             01 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
SQL: [;
SELECT DISTINCT a, a FROM t1 ;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      1    0    2 1             01 usesStmtJournal=0
  15 Goto             0    1    0               00 
   1 OpenEphemeral    1    0    0 k(2,B,B)      08 nColumn=0
   2 OpenRead         0    2    1 2             00 root=2 iDb=1; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   12    0               00 
  12 Explain         12    0    0 USE TEMP B-TREE FOR DISTINCT 00 
  13 Halt             0    0    0               00 
SQL: [INSERT INTO t1 VALUES(0, 'abc');]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      1    1    2 1             01 usesStmtJournal=0
  34 Goto             0    1    0               00 
   1 OpenWrite        0    2    1 2             00 root=2 iDb=1; t1
   2 OpenWrite        1    4    1 k(3,,,)       00 root=4 iDb=1; t0st
   3 OpenWrite        2    3    1 k(1,)         00 root=3 iDb=1; sqlite_autoindex_t1_1
   4 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   5 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   6 String8          0    3    0 abc           00 r[3]='abc'
REG[3] =   t3[abc](8)
   7 HaltIfNull    1299    3    2 t1.b          01 if r[2]=null halt
REG[2] =  i:0
   8 HaltIfNull    1299    3    3 t1.a          01 if r[3]=null halt
REG[3] =   t3[abc](8)
   9 Affinity         2    2    0 BB            00 affinity(r[2..3])
  10 Noop             0    0    0               00 uniqueness check for t0st
  11 SCopy            2    5    0               00 r[5]=r[2]; b
REG[5] =   e1[0](8)
  12 SCopy            2    6    0               00 r[6]=r[2]; b
REG[6] =   e1[0](8)
  13 IntCopy          1    7    0               00 r[7]=r[1]; rowid
REG[7] =  i:1
  14 MakeRecord       5    3    4               00 r[4]=mkrec(r[5..7]); for t0st
REG[4] =  s6[040F0F093030....00]
  15 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t1_1
  16 SCopy            2    9    0               00 r[9]=r[2]; b
REG[9] =   e1[0](8)
  17 IntCopy          1   10    0               00 r[10]=r[1]; rowid
REG[10] =  i:1
  18 MakeRecord       9    2    8               00 r[8]=mkrec(r[9..10]); for sqlite_autoindex_t1_1
REG[8] =  s4[030F0930...0]
  19 NoConflict       2   28    9 1             00 key=r[9]
REG[9] =   e1[0](8)
  28 IdxInsert        1    4    5 3             10 key=r[4]
REG[4] =  s6[040F0F093030....00]
  29 IdxInsert        2    8    9 1             10 key=r[8]
REG[8] =  s4[030F0930...0]
  30 MakeRecord       2    2   11               00 r[11]=mkrec(r[2..3])
REG[11] =  s7[030F1330616263...0abc]
  31 Insert           0   11    1 t1            39 intkey=r[1] data=r[11]
REG[11] =  s7[030F1330616263...0abc]
REG[1] =  i:1
  32 Halt             0    0    0               00 
SQL: [;
INSERT INTO t1 VALUES(2, NULL);]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      1    1    2 1             01 usesStmtJournal=0
  34 Goto             0    1    0               00 
   1 OpenWrite        0    2    1 2             00 root=2 iDb=1; t1
   2 OpenWrite        1    4    1 k(3,,,)       00 root=4 iDb=1; t0st
   3 OpenWrite        2    3    1 k(1,)         00 root=3 iDb=1; sqlite_autoindex_t1_1
   4 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   5 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
   6 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   7 HaltIfNull    1299    3    2 t1.b          01 if r[2]=null halt
REG[2] =  i:2
   8 HaltIfNull    1299    3    3 t1.a          01 if r[3]=null halt
REG[3] =  NULL
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    0 1             01 usesStmtJournal=0
  16 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
  14 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='k00000d' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    0 1             01 usesStmtJournal=0
  16 String8          0    2    0 k00000d       00 r[2]='k00000d'
REG[2] =   t7[k00000d](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
  14 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'temp'.sqlite_master WHERE tbl_name='sqlite_stat1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      1    0    2 1             01 usesStmtJournal=0
  16 String8          0    2    0 sqlite_stat1  00 r[2]='sqlite_stat1'
REG[2] =   t12[sqlite_stat1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_temp_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_temp_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_temp_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
SQL: [SELECT b, b, b FROM t1;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      1    0    2 1             01 usesStmtJournal=0
  11 Goto             0    1    0               00 
   1 OpenRead         1    3    1 k(1,)         00 root=3 iDb=1; sqlite_autoindex_t1_1
   2 Explain          2    0    0 SCAN TABLE t1 USING COVERING INDEX sqlite_autoindex_t1_1 00 
   3 Rewind           1    9    1 0             00 
   4 Column           1    0    1               00 r[1]=t1.b
REG[1] =   s1[0](8)
   5 Column           1    0    2               00 r[2]=t1.b
REG[2] =   s1[0](8)
   6 Column           1    0    3               00 r[3]=t1.b
REG[3] =   s1[0](8)
   7 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[0](8)
REG[2] =   s1[0](8)
REG[3] =   s1[0](8)
   8 Next             1    4    0               01 
   9 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    0 1             01 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fe1085a8859 in __GI_abort () at abort.c:79
#2  0x00007fe1085a8729 in __assert_fail_base (fmt=0x7fe10873e588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21b92e "pItem->addrFillSub==0", file=0x22873d "sqlite3.c", line=130468, function=<optimized out>)
    at assert.c:92
#3  0x00007fe1085b9fd6 in __GI___assert_fail (assertion=0x21b92e "pItem->addrFillSub==0", file=0x22873d "sqlite3.c", line=130468, function=0x223e82 "int sqlite3Select(Parse *, Select *, SelectDest *)") at assert.c:101
#4  0x00000000002fcfa0 in sqlite3Select (pParse=0x7ffd7fc471a0, p=0x263b200, pDest=0x7ffd7fc45a38) at sqlite3.c:130468
#5  0x000000000034f659 in sqlite3CodeSubselect (pParse=0x7ffd7fc471a0, pExpr=0x263ad50) at sqlite3.c:99820
#6  0x000000000034bbfd in sqlite3ExprCodeTarget (pParse=0x7ffd7fc471a0, pExpr=0x263ad50, target=7) at sqlite3.c:100770
#7  0x00000000003790ab in codeEqualityTerm (pParse=0x7ffd7fc471a0, pTerm=0x2634210, pLevel=0x2634570, iEq=1, bRev=0, iTarget=7) at sqlite3.c:136648
#8  0x000000000037a706 in codeAllEqualityTerms (pParse=0x7ffd7fc471a0, pLevel=0x2634570, bRev=0, nExtraReg=0, pzAff=0x7ffd7fc45fb8) at sqlite3.c:136869
#9  0x0000000000375cb8 in sqlite3WhereCodeOneLoopStart (pParse=0x7ffd7fc471a0, v=0x2639f40, pWInfo=0x2634180, iLevel=1, pLevel=0x2634570, notReady=18446744073709551614) at sqlite3.c:137776
#10 0x000000000036c3cc in sqlite3WhereBegin (pParse=0x7ffd7fc471a0, pTabList=0x264e2b0, pWhere=0x263a8a0, pOrderBy=0x0, pResultSet=0x2646d80, wctrlFlags=0, iAuxArg=320) at sqlite3.c:145128
#11 0x00000000002fdcea in sqlite3Select (pParse=0x7ffd7fc471a0, p=0x263a3f0, pDest=0x7ffd7fc46590) at sqlite3.c:130695
#12 0x00000000002ecaa8 in yy_reduce (yypParser=0x7ffd7fc467c0, yyruleno=79, yyLookahead=1, yyLookaheadToken=..., pParse=0x7ffd7fc471a0) at sqlite3.c:151581
#13 0x00000000002e92f8 in sqlite3Parser (yyp=0x7ffd7fc467c0, yymajor=1, yyminor=...) at sqlite3.c:152877
#14 0x00000000002a68b3 in sqlite3RunParser (pParse=0x7ffd7fc471a0, 
    zSql=0x264ebef ";;;\nSELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t0st_segdir' AND type!='trigger' ORDER BY rowid;;\nSELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t0st' AN"..., pzErrMsg=0x7ffd7fc47380) at sqlite3.c:154013
#15 0x00000000002a1683 in sqlite3Prepare (db=0x262e400, 
    zSql=0x262f000 ";\nSELECT\n    SrcWord, t1.b\n    FROM \n      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )\n    LEFT JOIN \n      t1\n    WHERE t1.b= (\n      SELECT BeginningId FROM (\n        SELECT "..., nBytes=1211, prepFlags=128, pReprepare=0x0, ppStmt=0x7ffd7fc474b8, pzTail=0x7ffd7fc474a0) at sqlite3.c:124303
#16 0x00000000002a0d4e in sqlite3LockAndPrepare (db=0x262e400, 
    zSql=0x262f000 ";\nSELECT\n    SrcWord, t1.b\n    FROM \n      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )\n    LEFT JOIN \n      t1\n    WHERE t1.b= (\n      SELECT BeginningId FROM (\n        SELECT "..., nBytes=1211, prepFlags=128, pOld=0x0, ppStmt=0x7ffd7fc474b8, pzTail=0x7ffd7fc474a0) at sqlite3.c:124403
#17 0x000000000029247f in sqlite3_prepare_v2 (db=0x262e400, 
    zSql=0x262f000 ";\nSELECT\n    SrcWord, t1.b\n    FROM \n      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )\n    LEFT JOIN \n      t1\n    WHERE t1.b= (\n      SELECT BeginningId FROM (\n        SELECT "..., nBytes=1211, ppStmt=0x7ffd7fc474b8, pzTail=0x7ffd7fc474a0) at sqlite3.c:124487
#18 0x0000000000256bd0 in main (argc=1, argv=0x7ffd7fc47668) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 7473] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
