GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000133,sig:06,src:015150+015763,time:17368913,execs:3542762,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [INSERT INTO t1(a) VALUES(1),(2),(3),(4);]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    1    1 0             01 usesStmtJournal=0
  20 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  21 Goto             0    1    0               00 
   1 InitCoroutine    4   12    2               00 
  12 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
  13 Yield            4   18    0               00 
REG[4] =  i:1
REG[4] =  i:13
   2 Explain          2    0    0 SCAN 4 CONSTANT ROWS 00 
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 Yield            4    0    0               00 
REG[4] =  i:13
REG[4] =  i:4
  14 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
  15 MakeRecord       2    2    5 DD            00 r[5]=mkrec(r[2..3])
REG[5] =  s3[030900...]
  16 Insert           0    5    1 t1            39 intkey=r[1] data=r[5]
REG[5] =  s3[030900...]
REG[1] =  i:1
  17 Goto             0   13    0               00 
  13 Yield            4   18    0               00 
REG[4] =  i:4
REG[4] =  i:13
   5 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
   6 Yield            4    0    0               00 
REG[4] =  i:13
REG[4] =  i:6
  14 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
  15 MakeRecord       2    2    5 DD            00 r[5]=mkrec(r[2..3])
REG[5] =  s4[03010002....]
  16 Insert           0    5    1 t1            39 intkey=r[1] data=r[5]
REG[5] =  s4[03010002....]
REG[1] =  i:2
  17 Goto             0   13    0               00 
  13 Yield            4   18    0               00 
REG[4] =  i:6
REG[4] =  i:13
   7 Integer          3    2    0               00 r[2]=3
REG[2] =  i:3
   8 Yield            4    0    0               00 
REG[4] =  i:13
REG[4] =  i:8
  14 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
  15 MakeRecord       2    2    5 DD            00 r[5]=mkrec(r[2..3])
REG[5] =  s4[03010003....]
  16 Insert           0    5    1 t1            39 intkey=r[1] data=r[5]
REG[5] =  s4[03010003....]
REG[1] =  i:3
  17 Goto             0   13    0               00 
  13 Yield            4   18    0               00 
REG[4] =  i:8
REG[4] =  i:13
   9 Integer          4    2    0               00 r[2]=4
REG[2] =  i:4
  10 Yield            4    0    0               00 
REG[4] =  i:13
REG[4] =  i:10
  14 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
  15 MakeRecord       2    2    5 DD            00 r[5]=mkrec(r[2..3])
REG[5] =  s4[03010004....]
  16 Insert           0    5    1 t1            39 intkey=r[1] data=r[5]
REG[5] =  s4[03010004....]
REG[1] =  i:4
  17 Goto             0   13    0               00 
  13 Yield            4   18    0               00 
REG[4] =  i:10
REG[4] =  i:13
  11 EndCoroutine     4    0    0               00 
REG[4] =  i:13
  18 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t0st_segdir' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    1 0             01 usesStmtJournal=0
  16 String8          0    2    0 t0st_segdir   00 r[2]='t0st_segdir'
REG[2] =   t11[t0st_segdir](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t11[t0st_segdir](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
SQL: [SELECT name FROM noname.sqlite_master;]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      2    0    0 0             01 usesStmtJournal=0
   9 Goto             0    1    0               00 
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          2    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0    7    0               00 
   7 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE b = 5 AND b>0 AND b<='5' ORDER BY b ASC 
    ;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    1 0             01 usesStmtJournal=0
  17 Integer          5    2    0               00 r[2]=5
REG[2] =  i:5
  18 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  19 String8          0    4    0 5             00 r[4]='5'
REG[4] =   t1[5](8)
  20 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   15    0               00 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  NULL
   6 Ne               2   14    1 (BINARY)      54 if r[1]!=r[2] goto 14
REG[2] =  i:5
REG[1] =  NULL
  14 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  NULL
   6 Ne               2   14    1 (BINARY)      54 if r[1]!=r[2] goto 14
REG[2] =  i:5
REG[1] =  NULL
  14 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  NULL
   6 Ne               2   14    1 (BINARY)      54 if r[1]!=r[2] goto 14
REG[2] =  i:5
REG[1] =  NULL
  14 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  NULL
   6 Ne               2   14    1 (BINARY)      54 if r[1]!=r[2] goto 14
REG[2] =  i:5
REG[1] =  NULL
  14 Next             0    5    0               01 
  15 Halt             0    0    0               00 
SQL: [;
SELECT DISTINCT b, b FROM t1 ;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    1 0             01 usesStmtJournal=0
  15 Goto             0    1    0               00 
   1 OpenEphemeral    1    0    0 k(2,B,B)      08 nColumn=0
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   12    0               00 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  NULL
   6 Column           0    1    2               00 r[2]=t1.b
REG[2] =  NULL
   7 Found            1   11    1 2             00 key=r[1..2]
REG[1] =  NULL
REG[2] =  NULL
   8 MakeRecord       1    2    3               00 r[3]=mkrec(r[1..2])
REG[3] =  s3[030000...]
   9 IdxInsert        1    3    1 2             10 key=r[3]
REG[3] =  s3[030000...]
  10 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =  NULL
REG[2] =  NULL
  11 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  NULL
   6 Column           0    1    2               00 r[2]=t1.b
REG[2] =  NULL
   7 Found            1   11    1 2             00 key=r[1..2]
REG[1] =  NULL
REG[2] =  NULL
  11 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  NULL
   6 Column           0    1    2               00 r[2]=t1.b
REG[2] =  NULL
   7 Found            1   11    1 2             00 key=r[1..2]
REG[1] =  NULL
REG[2] =  NULL
  11 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  NULL
   6 Column           0    1    2               00 r[2]=t1.b
REG[2] =  NULL
   7 Found            1   11    1 2             00 key=r[1..2]
REG[1] =  NULL
REG[2] =  NULL
  11 Next             0    5    0               01 
  12 Explain         12    0    0 USE TEMP B-TREE FOR DISTINCT 00 
  13 Halt             0    0    0               00 
SQL: [CREATE INDEX t0st ON t1(a, a);]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      0    1    1 0             01 usesStmtJournal=0
  35 Goto             0    1    0               00 
   1 Noop             0   33    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:3
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:2
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 t0st          00 r[4]='t0st'
REG[4] =   t4[t0st](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:3
   9 String8          0    7    0 CREATE INDEX t0st ON t1(a, a) 00 r[7]='CREATE INDEX t0st ON t1(a, a)'
REG[7] =   t29[CREATE INDEX t0](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s47[061715110147696E6465787430737474.....Gindext0stt]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s47[061715110147696E6465787430737474.....Gindext0stt]
REG[2] =  i:2
  12 SorterOpen       3    0    2 k(3,,,)       00 
  13 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  14 Rewind           1   21    0               00 
  15 Column           1    0   10               00 r[10]=t1.a
REG[10] =  i:1
  16 Column           1    0   11               00 r[11]=t1.a
REG[11] =  i:1
  17 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:1
  18 MakeRecord      10    3    9               00 r[9]=mkrec(r[10..12])
REG[9] =  s4[04090909....]
  19 SorterInsert     3    9    0               00 key=r[9]
REG[9] =  s4[04090909....]
  20 Next             1   15    0               00 
  15 Column           1    0   10               00 r[10]=t1.a
REG[10] =  i:2
  16 Column           1    0   11               00 r[11]=t1.a
REG[11] =  i:2
  17 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:2
  18 MakeRecord      10    3    9               00 r[9]=mkrec(r[10..12])
REG[9] =  s7[04010101020202.......]
  19 SorterInsert     3    9    0               00 key=r[9]
REG[9] =  s7[04010101020202.......]
  20 Next             1   15    0               00 
  15 Column           1    0   10               00 r[10]=t1.a
REG[10] =  i:3
  16 Column           1    0   11               00 r[11]=t1.a
REG[11] =  i:3
  17 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:3
  18 MakeRecord      10    3    9               00 r[9]=mkrec(r[10..12])
REG[9] =  s7[04010101030303.......]
  19 SorterInsert     3    9    0               00 key=r[9]
REG[9] =  s7[04010101030303.......]
  20 Next             1   15    0               00 
  15 Column           1    0   10               00 r[10]=t1.a
REG[10] =  i:4
  16 Column           1    0   11               00 r[11]=t1.a
REG[11] =  i:4
  17 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:4
  18 MakeRecord      10    3    9               00 r[9]=mkrec(r[10..12])
REG[9] =  s7[04010101040404.......]
  19 SorterInsert     3    9    0               00 key=r[9]
REG[9] =  s7[04010101040404.......]
  20 Next             1   15    0               00 
  21 OpenWrite        2    1    0 k(3,,,)       11 root=1 iDb=0
  22 SorterSort       3   27    0               00 
  23 SorterData       3    9    2               00 r[9]=data
  24 SeekEnd          2    0    0               00 
  25 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s4[04090909....]
  26 SorterNext       3   23    0               00 
  23 SorterData       3    9    2               00 r[9]=data
  24 SeekEnd          2    0    0               00 
  25 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s7[04010101020202.......]
  26 SorterNext       3   23    0               00 
  23 SorterData       3    9    2               00 r[9]=data
  24 SeekEnd          2    0    0               00 
  25 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s7[04010101030303.......]
  26 SorterNext       3   23    0               00 
  23 SorterData       3    9    2               00 r[9]=data
  24 SeekEnd          2    0    0               00 
  25 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s7[04010101040404.......]
  26 SorterNext       3   23    0               00 
  27 Close            1    0    0               00 
  28 Close            2    0    0               00 
  29 Close            3    0    0               00 
  30 SetCookie        0    1    2               00 
  31 ParseSchema      0    0    0 name='t0st' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 0             00 usesStmtJournal=0
  16 String8          0    2    0 t0st          00 r[2]='t0st'
REG[2] =   t4[t0st](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t0st](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t0st](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t0st](8)
REG[1] =   s4[t0st](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t0st](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s29[CREATE INDEX t0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t0st](8)
REG[5] =  i:3
REG[6] =   s29[CREATE INDEX t0](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  32 Expire           0    1    0               00 
  33 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='t0st' AND type='index' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 0             01 usesStmtJournal=0
  16 String8          0    2    0 t0st          00 r[2]='t0st'
REG[2] =   t4[t0st](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t0st](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t0st](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t0st](8)
REG[1] =   s4[t0st](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t0st](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s29[CREATE INDEX t0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t0st](8)
REG[5] =  i:3
REG[6] =   s29[CREATE INDEX t0](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
SQL: [;
SELECT printf('(%-8c)',char(11106));]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 (%-8c)        00 r[3]='(%-8c)'
REG[3] =   t6[(%-8c)](8)
   6 Integer       11106    5    0               00 r[5]=11106
REG[5] =  i:11106
   7 Function0        1    5    4 char(-1)      01 r[4]=func(r[5])
REG[5] =  i:11106
REG[4] =   z3[...](8)
   8 Function0        3    3    2 printf(-1)    02 r[2]=func(r[3..4])
REG[3] =   t6[(%-8c)](8)
REG[4] =   z3[...](8)
REG[2] =   s12[(...       )](8)
   9 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s12[(...       )](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s12[(...       )](8)
   4 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE b = 5 AND b>0 AND b<='2' ORDER BY b DESC 
    ;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             01 usesStmtJournal=0
  17 Integer          5    2    0               00 r[2]=5
REG[2] =  i:5
  18 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  19 String8          0    4    0 2             00 r[4]='2'
REG[4] =   t1[2](8)
  20 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   15    0               00 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  NULL
   6 Ne               2   14    1 (BINARY)      54 if r[1]!=r[2] goto 14
REG[2] =  i:5
REG[1] =  NULL
  14 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  NULL
   6 Ne               2   14    1 (BINARY)      54 if r[1]!=r[2] goto 14
REG[2] =  i:5
REG[1] =  NULL
  14 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  NULL
   6 Ne               2   14    1 (BINARY)      54 if r[1]!=r[2] goto 14
REG[2] =  i:5
REG[1] =  NULL
  14 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  NULL
   6 Ne               2   14    1 (BINARY)      54 if r[1]!=r[2] goto 14
REG[2] =  i:5
REG[1] =  NULL
  14 Next             0    5    0               01 
  15 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
SQL: [COMMIT;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    0    0               00 
SQL: [;
PRAGMA integrity_check;]
VDBE Trace:
   0 Init             0   82   79               00 Start at 82
  82 Transaction      0    0    2 0             01 usesStmtJournal=0
  83 Transaction      1    0    0 0             01 usesStmtJournal=0
  84 Transaction      2    0    0 0             01 usesStmtJournal=0
  85 Goto             0    1    0               00 
   1 Integer         99    1    0               00 r[1]=99
REG[1] =  i:99
   2 IntegrityCk      2    3    1 [2,3,1]       00 
   3 IsNull           2    9    0               00 if r[2]==NULL goto 9
REG[2] =  NULL
   9 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  10 OpenRead         2    3    0 k(3,,,)       00 root=3 iDb=0; t0st
  11 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  12 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  13 Rewind           1   31    0               00 
  14 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  15 Column           1    1    3               80 r[3]=
REG[3] =  NULL
  16 Column           1    0   10               00 r[10]=t1.a
REG[10] =  i:1
  17 Column           1    0   11               00 r[11]=t1.a
REG[11] =  i:1
  18 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:1
  19 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  20 Found            2   30   10 3             00 key=r[10..12]
REG[10] =  i:1
REG[11] =  i:1
REG[12] =  i:1
  30 Next             1   14    0               00 
  14 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
  15 Column           1    1    3               80 r[3]=
REG[3] =  NULL
  16 Column           1    0   10               00 r[10]=t1.a
REG[10] =  i:2
  17 Column           1    0   11               00 r[11]=t1.a
REG[11] =  i:2
  18 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:2
  19 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:1
  20 Found            2   30   10 3             00 key=r[10..12]
REG[10] =  i:2
REG[11] =  i:2
REG[12] =  i:2
  30 Next             1   14    0               00 
  14 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:2
  15 Column           1    1    3               80 r[3]=
REG[3] =  NULL
  16 Column           1    0   10               00 r[10]=t1.a
REG[10] =  i:3
  17 Column           1    0   11               00 r[11]=t1.a
REG[11] =  i:3
  18 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:3
  19 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:2
  20 Found            2   30   10 3             00 key=r[10..12]
REG[10] =  i:3
REG[11] =  i:3
REG[12] =  i:3
  30 Next             1   14    0               00 
  14 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:3
  15 Column           1    1    3               80 r[3]=
REG[3] =  NULL
  16 Column           1    0   10               00 r[10]=t1.a
REG[10] =  i:4
  17 Column           1    0   11               00 r[11]=t1.a
REG[11] =  i:4
  18 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:4
  19 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:3
  20 Found            2   30   10 3             00 key=r[10..12]
REG[10] =  i:4
REG[11] =  i:4
REG[12] =  i:4
  30 Next             1   14    0               00 
  31 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  32 Count            2    3    0               00 r[3]=count()
REG[3] =  i:4
  33 Eq               8   39    3               90 if r[3]==r[8] goto 39
REG[8] =  i:4
REG[3] =  i:4
  39 OpenRead         1    1    0 5             00 root=1 iDb=0; sqlite_master
  40 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  41 Rewind           1   45    0               00 
  42 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  43 Column           1    4    3               80 r[3]=
REG[3] =   s37[CREATE TABLE t1](8)
  44 Next             1   42    0               00 
  42 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
  43 Column           1    4    3               80 r[3]=
REG[3] =   s29[CREATE INDEX t0](8)
  44 Next             1   42    0               00 
  45 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  46 IntegrityCk      2    1    1 [1]           01 
  47 IsNull           2   53    0               00 if r[2]==NULL goto 53
REG[2] =  NULL
  53 OpenRead         1    1    1 5             00 root=1 iDb=1; sqlite_temp_master
  54 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  55 Rewind           1   59    0               00 
  59 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  60 IntegrityCk      2    1    1 [1]           02 
  61 IsNull           2   67    0               00 if r[2]==NULL goto 67
REG[2] =  NULL
  67 OpenRead         1    1    2 5             00 root=1 iDb=2; sqlite_master
  68 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  69 Rewind           1   73    0               00 
  73 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  74 AddImm           1  -99    0               00 r[1]=r[1]+-99
REG[1] =  i:99
  75 IfNotZero        1   78    0               00 if r[1]!=0 then r[1]--, goto 78
REG[1] =  i:0
  76 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
  77 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
  78 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE b = 5 AND a>0 AND a<='2' ORDER BY a ASC 
    ;]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      0    0    2 0             01 usesStmtJournal=0
  19 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
  20 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   3 OpenRead         2    3    0 k(3,,,)       00 root=3 iDb=0; t0st
   4 Explain          4    0    0 SEARCH TABLE t1 USING INDEX t0st (a>? AND a<?) 00 
   5 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   6 SeekGT           2   17    1 1             00 key=r[1]
REG[1] =  i:0
   7 String8          0    1    0 2             00 r[1]='2'
REG[1] =   t1[2](8)
   8 Affinity         1    1    0 D             00 affinity(r[1])
   9 IdxGT            2   17    1 1             00 key=r[1]
REG[1] =  i:2
  10 DeferredSeek     2    0    0               00 Move 0 to 2.rowid if needed
  11 Column           0    1    2               00 r[2]=t1.b
REG[2] =  NULL
  12 Ne               3   16    2 (BINARY)      54 if r[2]!=r[3] goto 16
REG[3] =  i:5
REG[2] =  NULL
  16 Next             2    9    0               00 
   9 IdxGT            2   17    1 1             00 key=r[1]
REG[1] =  i:2
  10 DeferredSeek     2    0    0               00 Move 0 to 2.rowid if needed
  11 Column           0    1    2               00 r[2]=t1.b
REG[2] =  NULL
  12 Ne               3   16    2 (BINARY)      54 if r[2]!=r[3] goto 16
REG[3] =  i:5
REG[2] =  NULL
  16 Next             2    9    0               00 
   9 IdxGT            2   17    1 1             00 key=r[1]
REG[1] =  i:2
  17 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE b = 5 AND a>0 AND a<='5' ORDER BY a ASC 
    ;]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      0    0    2 0             01 usesStmtJournal=0
  19 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
  20 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   3 OpenRead         2    3    0 k(3,,,)       00 root=3 iDb=0; t0st
   4 Explain          4    0    0 SEARCH TABLE t1 USING INDEX t0st (a>? AND a<?) 00 
   5 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   6 SeekGT           2   17    1 1             00 key=r[1]
REG[1] =  i:0
   7 String8          0    1    0 5             00 r[1]='5'
REG[1] =   t1[5](8)
   8 Affinity         1    1    0 D             00 affinity(r[1])
   9 IdxGT            2   17    1 1             00 key=r[1]
REG[1] =  i:5
  10 DeferredSeek     2    0    0               00 Move 0 to 2.rowid if needed
  11 Column           0    1    2               00 r[2]=t1.b
REG[2] =  NULL
  12 Ne               3   16    2 (BINARY)      54 if r[2]!=r[3] goto 16
REG[3] =  i:5
REG[2] =  NULL
  16 Next             2    9    0               00 
   9 IdxGT            2   17    1 1             00 key=r[1]
REG[1] =  i:5
  10 DeferredSeek     2    0    0               00 Move 0 to 2.rowid if needed
  11 Column           0    1    2               00 r[2]=t1.b
REG[2] =  NULL
  12 Ne               3   16    2 (BINARY)      54 if r[2]!=r[3] goto 16
REG[3] =  i:5
REG[2] =  NULL
  16 Next             2    9    0               00 
   9 IdxGT            2   17    1 1             00 key=r[1]
REG[1] =  i:5
  10 DeferredSeek     2    0    0               00 Move 0 to 2.rowid if needed
  11 Column           0    1    2               00 r[2]=t1.b
REG[2] =  NULL
  12 Ne               3   16    2 (BINARY)      54 if r[2]!=r[3] goto 16
REG[3] =  i:5
REG[2] =  NULL
  16 Next             2    9    0               00 
   9 IdxGT            2   17    1 1             00 key=r[1]
REG[1] =  i:5
  10 DeferredSeek     2    0    0               00 Move 0 to 2.rowid if needed
  11 Column           0    1    2               00 r[2]=t1.b
REG[2] =  NULL
  12 Ne               3   16    2 (BINARY)      54 if r[2]!=r[3] goto 16
REG[3] =  i:5
REG[2] =  NULL
  16 Next             2    9    0               00 
  17 Halt             0    0    0               00 
SQL: [;
PRAGMA integrity_check ;]
VDBE Trace:
   0 Init             0   82   79               00 Start at 82
  82 Transaction      0    0    2 0             01 usesStmtJournal=0
  83 Transaction      1    0    0 0             01 usesStmtJournal=0
  84 Transaction      2    0    0 0             01 usesStmtJournal=0
  85 Goto             0    1    0               00 
   1 Integer         99    1    0               00 r[1]=99
REG[1] =  i:99
   2 IntegrityCk      2    3    1 [2,3,1]       00 
   3 IsNull           2    9    0               00 if r[2]==NULL goto 9
REG[2] =  NULL
   9 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  10 OpenRead         2    3    0 k(3,,,)       00 root=3 iDb=0; t0st
  11 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  12 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  13 Rewind           1   31    0               00 
  14 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  15 Column           1    1    3               80 r[3]=
REG[3] =  NULL
  16 Column           1    0   10               00 r[10]=t1.a
REG[10] =  i:1
  17 Column           1    0   11               00 r[11]=t1.a
REG[11] =  i:1
  18 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:1
  19 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  20 Found            2   30   10 3             00 key=r[10..12]
REG[10] =  i:1
REG[11] =  i:1
REG[12] =  i:1
  30 Next             1   14    0               00 
  14 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
  15 Column           1    1    3               80 r[3]=
REG[3] =  NULL
  16 Column           1    0   10               00 r[10]=t1.a
REG[10] =  i:2
  17 Column           1    0   11               00 r[11]=t1.a
REG[11] =  i:2
  18 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:2
  19 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:1
  20 Found            2   30   10 3             00 key=r[10..12]
REG[10] =  i:2
REG[11] =  i:2
REG[12] =  i:2
  30 Next             1   14    0               00 
  14 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:2
  15 Column           1    1    3               80 r[3]=
REG[3] =  NULL
  16 Column           1    0   10               00 r[10]=t1.a
REG[10] =  i:3
  17 Column           1    0   11               00 r[11]=t1.a
REG[11] =  i:3
  18 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:3
  19 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:2
  20 Found            2   30   10 3             00 key=r[10..12]
REG[10] =  i:3
REG[11] =  i:3
REG[12] =  i:3
  30 Next             1   14    0               00 
  14 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:3
  15 Column           1    1    3               80 r[3]=
REG[3] =  NULL
  16 Column           1    0   10               00 r[10]=t1.a
REG[10] =  i:4
  17 Column           1    0   11               00 r[11]=t1.a
REG[11] =  i:4
  18 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:4
  19 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:3
  20 Found            2   30   10 3             00 key=r[10..12]
REG[10] =  i:4
REG[11] =  i:4
REG[12] =  i:4
  30 Next             1   14    0               00 
  31 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  32 Count            2    3    0               00 r[3]=count()
REG[3] =  i:4
  33 Eq               8   39    3               90 if r[3]==r[8] goto 39
REG[8] =  i:4
REG[3] =  i:4
  39 OpenRead         1    1    0 5             00 root=1 iDb=0; sqlite_master
  40 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  41 Rewind           1   45    0               00 
  42 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  43 Column           1    4    3               80 r[3]=
REG[3] =   s37[CREATE TABLE t1](8)
  44 Next             1   42    0               00 
  42 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:1
  43 Column           1    4    3               80 r[3]=
REG[3] =   s29[CREATE INDEX t0](8)
  44 Next             1   42    0               00 
  45 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  46 IntegrityCk      2    1    1 [1]           01 
  47 IsNull           2   53    0               00 if r[2]==NULL goto 53
REG[2] =  NULL
  53 OpenRead         1    1    1 5             00 root=1 iDb=1; sqlite_temp_master
  54 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  55 Rewind           1   59    0               00 
  59 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  60 IntegrityCk      2    1    1 [1]           02 
  61 IsNull           2   67    0               00 if r[2]==NULL goto 67
REG[2] =  NULL
  67 OpenRead         1    1    2 5             00 root=1 iDb=2; sqlite_master
  68 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  69 Rewind           1   73    0               00 
  73 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  74 AddImm           1  -99    0               00 r[1]=r[1]+-99
REG[1] =  i:99
  75 IfNotZero        1   78    0               00 if r[1]!=0 then r[1]--, goto 78
REG[1] =  i:0
  76 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
  77 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
  78 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f4f437d6859 in __GI_abort () at abort.c:79
#2  0x00007f4f437d6729 in __assert_fail_base (fmt=0x7f4f4396c588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21b92e "pItem->addrFillSub==0", file=0x22873d "sqlite3.c", line=130468, function=<optimized out>)
    at assert.c:92
#3  0x00007f4f437e7fd6 in __GI___assert_fail (assertion=0x21b92e "pItem->addrFillSub==0", file=0x22873d "sqlite3.c", line=130468, function=0x223e82 "int sqlite3Select(Parse *, Select *, SelectDest *)") at assert.c:101
#4  0x00000000002fcfa0 in sqlite3Select (pParse=0x7ffc3d5cc0d0, p=0x13db650, pDest=0x7ffc3d5ca968) at sqlite3.c:130468
#5  0x000000000034f659 in sqlite3CodeSubselect (pParse=0x7ffc3d5cc0d0, pExpr=0x13db1a0) at sqlite3.c:99820
#6  0x000000000034bbfd in sqlite3ExprCodeTarget (pParse=0x7ffc3d5cc0d0, pExpr=0x13db1a0, target=7) at sqlite3.c:100770
#7  0x00000000003790ab in codeEqualityTerm (pParse=0x7ffc3d5cc0d0, pTerm=0x13d4660, pLevel=0x13d49c0, iEq=1, bRev=0, iTarget=7) at sqlite3.c:136648
#8  0x000000000037a706 in codeAllEqualityTerms (pParse=0x7ffc3d5cc0d0, pLevel=0x13d49c0, bRev=0, nExtraReg=0, pzAff=0x7ffc3d5caee8) at sqlite3.c:136869
#9  0x0000000000375cb8 in sqlite3WhereCodeOneLoopStart (pParse=0x7ffc3d5cc0d0, v=0x13da390, pWInfo=0x13d45d0, iLevel=1, pLevel=0x13d49c0, notReady=18446744073709551614) at sqlite3.c:137776
#10 0x000000000036c3cc in sqlite3WhereBegin (pParse=0x7ffc3d5cc0d0, pTabList=0x13e47a0, pWhere=0x13dacf0, pOrderBy=0x0, pResultSet=0x13ecf90, wctrlFlags=0, iAuxArg=320) at sqlite3.c:145128
#11 0x00000000002fdcea in sqlite3Select (pParse=0x7ffc3d5cc0d0, p=0x13da840, pDest=0x7ffc3d5cb4c0) at sqlite3.c:130695
#12 0x00000000002ecaa8 in yy_reduce (yypParser=0x7ffc3d5cb6f0, yyruleno=79, yyLookahead=1, yyLookaheadToken=..., pParse=0x7ffc3d5cc0d0) at sqlite3.c:151581
#13 0x00000000002e92f8 in sqlite3Parser (yyp=0x7ffc3d5cb6f0, yymajor=1, yyminor=...) at sqlite3.c:152877
#14 0x00000000002a68b3 in sqlite3RunParser (pParse=0x7ffc3d5cc0d0, 
    zSql=0x13e7c8f ";INSERT INTO t1 VALUES(9999);;\nPRAGMA integrity_check;;\nCREATE INDEX t0st_content ON t1(a DESC, a ASC) ;;\nPRAGMA query_only;PRAGMA journal_mode = delete;VACUUM;SELECT name, rootpage, sql FROM \"temp\".s"..., pzErrMsg=0x7ffc3d5cc2b0) at sqlite3.c:154013
#15 0x00000000002a1683 in sqlite3Prepare (db=0x13cf2b0, 
    zSql=0x13d049c ";\nSELECT\n    SrcWord, t1.a\n    FROM \n      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )\n    LEFT JOIN \n      t1\n    WHERE t1.a= (\n      SELECT BeginningId FROM (\n        SELECT "..., nBytes=694, prepFlags=128, pReprepare=0x0, ppStmt=0x7ffc3d5cc3e8, pzTail=0x7ffc3d5cc3d0) at sqlite3.c:124303
#16 0x00000000002a0d4e in sqlite3LockAndPrepare (db=0x13cf2b0, 
    zSql=0x13d049c ";\nSELECT\n    SrcWord, t1.a\n    FROM \n      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )\n    LEFT JOIN \n      t1\n    WHERE t1.a= (\n      SELECT BeginningId FROM (\n        SELECT "..., nBytes=694, prepFlags=128, pOld=0x0, ppStmt=0x7ffc3d5cc3e8, pzTail=0x7ffc3d5cc3d0) at sqlite3.c:124403
#17 0x000000000029247f in sqlite3_prepare_v2 (db=0x13cf2b0, 
    zSql=0x13d049c ";\nSELECT\n    SrcWord, t1.a\n    FROM \n      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )\n    LEFT JOIN \n      t1\n    WHERE t1.a= (\n      SELECT BeginningId FROM (\n        SELECT "..., nBytes=694, ppStmt=0x7ffc3d5cc3e8, pzTail=0x7ffc3d5cc3d0) at sqlite3.c:124487
#18 0x0000000000256bd0 in main (argc=1, argv=0x7ffc3d5cc598) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 7134] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
