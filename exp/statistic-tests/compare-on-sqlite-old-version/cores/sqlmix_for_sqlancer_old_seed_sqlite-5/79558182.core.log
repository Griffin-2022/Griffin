GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000032,sig:06,src:017864+016936,time:5616838,execs:901065,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
CREATE INDEX t0st ON t1(a DESC, a DESC) ;]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      0    1    1 0             01 usesStmtJournal=0
  35 Goto             0    1    0               00 
   1 Noop             0   33    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:5
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:3
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 t0st          00 r[4]='t0st'
REG[4] =   t4[t0st](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:5
   9 String8          0    7    0 CREATE INDEX t0st ON t1(a DESC, a DESC)  00 r[7]='CREATE INDEX t0st ON t1(a DESC, a DESC) '
REG[7] =   t40[CREATE INDEX t0](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s58[06171511015D696E6465787430737474.....]indext0stt]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s58[06171511015D696E6465787430737474.....]indext0stt]
REG[2] =  i:3
  12 SorterOpen       3    0    2 k(3,-,-,)     00 
  13 OpenRead         1    3    0 2             00 root=3 iDb=0; t1
  14 Rewind           1   21    0               00 
  21 OpenWrite        2    1    0 k(3,-,-,)     11 root=1 iDb=0
  22 SorterSort       3   27    0               00 
  27 Close            1    0    0               00 
  28 Close            2    0    0               00 
  29 Close            3    0    0               00 
  30 SetCookie        0    1    2               00 
  31 ParseSchema      0    0    0 name='t0st' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 0             00 usesStmtJournal=0
  16 String8          0    2    0 t0st          00 r[2]='t0st'
REG[2] =   t4[t0st](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t0st](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s21[sqlite_autoinde](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t0st](8)
REG[1] =   s21[sqlite_autoinde](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t0st](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t0st](8)
REG[1] =   s4[t0st](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t0st](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:5
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s40[CREATE INDEX t0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t0st](8)
REG[5] =  i:5
REG[6] =   s40[CREATE INDEX t0](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  32 Expire           0    1    0               00 
  33 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 0             01 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s35[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:3
REG[3] =   s35[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s21[sqlite_autoinde](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s21[sqlite_autoinde](8)
REG[2] =  i:4
REG[3] =  NULL
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t0st](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s40[CREATE INDEX t0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s4[t0st](8)
REG[2] =  i:5
REG[3] =   s40[CREATE INDEX t0](8)
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
SQL: [;
ATTACH printf('file:%09000x/x.db?mode=memory&cache=shared',1) AS aux1;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 String8          0    6    0 file:%09000x/x.db?mode=memory&cache=shared 00 r[6]='file:%09000x/x.db?mode=memory&cache=shared'
REG[6] =   t42[file:%09000x/x.](8)
   8 Integer          1    7    0               00 r[7]=1
REG[7] =  i:1
   9 Function0        3    6    5 printf(-1)    02 r[5]=func(r[6..7])
REG[6] =   t42[file:%09000x/x.](8)
REG[7] =  i:1
REG[5] =   s9035[file:0000000000](8)
  10 Goto             0    1    0               00 
   1 SCopy            5    1    0               00 r[1]=r[5]
REG[1] =   e9035[file:0000000000](8)
   2 String8          0    2    0 aux1          00 r[2]='aux1'
REG[2] =   t4[aux1](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   e9035[file:0000000000](8)
REG[2] =   t4[aux1](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 1             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s35[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:3
REG[3] =   s35[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s21[sqlite_autoinde](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s21[sqlite_autoinde](8)
REG[2] =  i:4
REG[3] =  NULL
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t0st](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s40[CREATE INDEX t0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s4[t0st](8)
REG[2] =  i:5
REG[3] =   s40[CREATE INDEX t0](8)
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
SQL: [;
SELECT * FROM t1 WHERE (b=1 OR b=2) AND b IN (
    SELECT b FROM (SELECT DISTINCT b FROM t1) WHERE b=1
  );]
VDBE Trace:
   0 Init             0   57    0               00 Start at 57
  57 Transaction      0    0    2 1             01 usesStmtJournal=0
  58 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  59 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  60 Goto             0    1    0               00 
   1 OpenRead         0    3    0 2             00 root=3 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   56    0               00 
  56 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 1             01 usesStmtJournal=0
  16 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s35[CREATE TABLE t1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t1](8)
REG[5] =  i:3
REG[6] =   s35[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s21[sqlite_autoinde](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =  NULL
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s21[sqlite_autoinde](8)
REG[5] =  i:4
REG[6] =  NULL
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t0st](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:5
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s40[CREATE INDEX t0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t0st](8)
REG[5] =  i:5
REG[6] =   s40[CREATE INDEX t0](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
SQL: [;
SELECT printf('|%7.8c|%-7.8c|','*','*');]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 |%7.8c|%-7.8c| 00 r[3]='|%7.8c|%-7.8c|'
REG[3] =   t14[|%7.8c|%-7.8c|](8)
   6 String8          0    4    0 *             00 r[4]='*'
REG[4] =   t1[*](8)
   7 String8          0    5    0 *             00 r[5]='*'
REG[5] =   t1[*](8)
   8 Function0        7    3    2 printf(-1)    03 r[2]=func(r[3..5])
REG[3] =   t14[|%7.8c|%-7.8c|](8)
REG[4] =   t1[*](8)
REG[5] =   t1[*](8)
REG[2] =   s19[|********|*****](8)
   9 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s19[|********|*****](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s19[|********|*****](8)
   4 Halt             0    0    0               00 
SQL: [;
SELECT DISTINCT a, a FROM t1 ;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    2 1             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Null             1    3    0               08 r[3]=NULL
REG[3] =  NULL
   2 OpenRead         2    5    0 k(3,-,-,)     00 root=5 iDb=0; t0st
   3 Explain          3    0    0 SCAN TABLE t1 USING COVERING INDEX t0st 00 
   4 Rewind           2   12    1 0             00 
  12 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 1             01 usesStmtJournal=0
  16 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s35[CREATE TABLE t1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t1](8)
REG[5] =  i:3
REG[6] =   s35[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s21[sqlite_autoinde](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =  NULL
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s21[sqlite_autoinde](8)
REG[5] =  i:4
REG[6] =  NULL
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t0st](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:5
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s40[CREATE INDEX t0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t0st](8)
REG[5] =  i:5
REG[6] =   s40[CREATE INDEX t0](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
SQL: [INSERT INTO t1 VALUES(0, 'abc');]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    1    2 1             01 usesStmtJournal=0
  26 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 2             00 root=3 iDb=0; t1
   2 OpenWrite        1    5    0 k(3,-,-,)     00 root=5 iDb=0; t0st
   3 OpenWrite        2    4    0 k(3,,,)       00 root=4 iDb=0; sqlite_autoindex_t1_1
   4 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   5 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   6 String8          0    3    0 abc           00 r[3]='abc'
REG[3] =   t3[abc](8)
   7 Noop             0    0    0               00 uniqueness check for t0st
   8 SCopy            2    5    0               00 r[5]=r[2]; a
REG[5] =  i:0
   9 SCopy            2    6    0               00 r[6]=r[2]; a
REG[6] =  i:0
  10 IntCopy          1    7    0               00 r[7]=r[1]; rowid
REG[7] =  i:1
  11 MakeRecord       5    3    4               00 r[4]=mkrec(r[5..7]); for t0st
REG[4] =  s4[04080809....]
  12 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t1_1
  13 SCopy            2    9    0               00 r[9]=r[2]; a
REG[9] =  i:0
  14 SCopy            3   10    0               00 r[10]=r[3]; b
REG[10] =   t3[abc](8)
  15 IntCopy          1   11    0               00 r[11]=r[1]; rowid
REG[11] =  i:1
  16 MakeRecord       9    3    8               00 r[8]=mkrec(r[9..11]); for sqlite_autoindex_t1_1
REG[8] =  s7[04081309616263....abc]
  17 Abortable        0    0    0               00 
  18 NoConflict       2   20    9 2             00 key=r[9..10]
REG[9] =  i:0
REG[10] =   t3[abc](8)
  20 IdxInsert        1    4    5 3             10 key=r[4]
REG[4] =  s4[04080809....]
  21 IdxInsert        2    8    9 3             10 key=r[8]
REG[8] =  s7[04081309616263....abc]
  22 MakeRecord       2    2   12               00 r[12]=mkrec(r[2..3])
REG[12] =  s6[030813616263...abc]
  23 Insert           0   12    1 t1            39 intkey=r[1] data=r[12]
REG[12] =  s6[030813616263...abc]
REG[1] =  i:1
  24 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
SQL: [;
PRAGMA encoding;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 String8          0    1    0 UTF-8         00 r[1]='UTF-8'
REG[1] =   t5[UTF-8](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t5[UTF-8](8)
   3 Halt             0    0    0               00 
SQL: [;
SELECT printf('|%,d|%,d|',123,-123);]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 |%,d|%,d|     00 r[3]='|%,d|%,d|'
REG[3] =   t9[|%,d|%,d|](8)
   6 Integer        123    4    0               00 r[4]=123
REG[4] =  i:123
   7 Integer       -123    5    0               00 r[5]=-123
REG[5] =  i:-123
   8 Function0        7    3    2 printf(-1)    03 r[2]=func(r[3..5])
REG[3] =   t9[|%,d|%,d|](8)
REG[4] =  i:123
REG[5] =  i:-123
REG[2] =   s10[|123|-123|](8)
   9 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s10[|123|-123|](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s10[|123|-123|](8)
   4 Halt             0    0    0               00 
SQL: [;
SELECT printf('|%,d|%,d|',12345,-12345);]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 |%,d|%,d|     00 r[3]='|%,d|%,d|'
REG[3] =   t9[|%,d|%,d|](8)
   6 Integer       12345    4    0               00 r[4]=12345
REG[4] =  i:12345
   7 Integer       -12345    5    0               00 r[5]=-12345
REG[5] =  i:-12345
   8 Function0        7    3    2 printf(-1)    03 r[2]=func(r[3..5])
REG[3] =   t9[|%,d|%,d|](8)
REG[4] =  i:12345
REG[5] =  i:-12345
REG[2] =   s16[|12,345|-12,345](8)
   9 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s16[|12,345|-12,345](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s16[|12,345|-12,345](8)
   4 Halt             0    0    0               00 
SQL: [;
SELECT printf('(%3.3c)',char(1492));]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 (%3.3c)       00 r[3]='(%3.3c)'
REG[3] =   t7[(%3.3c)](8)
   6 Integer       1492    5    0               00 r[5]=1492
REG[5] =  i:1492
   7 Function0        1    5    4 char(-1)      01 r[4]=func(r[5])
REG[5] =  i:1492
REG[4] =   z2[..](8)
   8 Function0        3    3    2 printf(-1)    02 r[2]=func(r[3..4])
REG[3] =   t7[(%3.3c)](8)
REG[4] =   z2[..](8)
REG[2] =   s8[(......)](8)
   9 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s8[(......)](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s8[(......)](8)
   4 Halt             0    0    0               00 
SQL: [;
SELECT min(a), max(a), count(a) FROM t1 GROUP BY b ORDER BY 1;]
VDBE Trace:
   0 Init             0   62    0               00 Start at 62
  62 Transaction      0    0    2 1             01 usesStmtJournal=0
  63 Goto             0    1    0               00 
   1 SorterOpen       1    5    0 k(1,B)        00 
   2 SorterOpen       2    2    0 k(1,B)        00 
   3 Integer          0    6    0               00 r[6]=0; clear abort flag
REG[6] =  i:0
   4 Null             0    9    9               00 r[9..9]=NULL
REG[9] =  NULL
   5 Gosub            8   49    0               00 
REG[8] =  i:5
  49 Null             0    1    4               00 r[1..4]=NULL
REG[1] =  NULL
  50 Integer          0    5    0               00 r[5]=0; indicate accumulator empty
REG[5] =  i:0
  51 Return           8    0    0               00 
REG[8] =  i:5
   6 OpenRead         0    3    0 2             00 root=3 iDb=0; t1
   7 Explain          7    0    0 SCAN TABLE t1 00 
   8 Rewind           0   15    0               00 
   9 Explain          9    0    0 USE TEMP B-TREE FOR GROUP BY 00 
  10 Column           0    1   11               00 r[11]=t1.b
REG[11] =   s3[abc](8)
  11 Column           0    0   12               00 r[12]=t1.a
REG[12] =  i:0
  12 MakeRecord      11    2   13               00 r[13]=mkrec(r[11..12])
REG[13] =  s6[031308616263...abc]
  13 SorterInsert     2   13    0               00 key=r[13]
REG[13] =  s6[031308616263...abc]
  14 Next             0    9    0               01 
  15 OpenPseudo       3   13    2               00 2 columns in r[13]
  16 SorterSort       2   52    0               00 GROUP BY sort
  17 SorterData       2   13    3               00 r[13]=data
  18 Column           3    0   10               00 r[10]=
REG[10] =   s3[abc](8)
  19 Compare          9   10    1 k(1,B)        00 r[9] <-> r[10]
REG[9] =  NULL
REG[10] =   s3[abc](8)
  20 Jump            21   25   21               00 
  21 Move            10    9    1               00 r[9]=r[10]
REG[9] =   s3[abc](8)
  22 Gosub            7   39    0               00 output one row
REG[7] =  i:22
  39 IfPos            5   41    0               00 if r[5]>0 then r[5]-=0, goto 41; Groupby result generator entry point
REG[5] =  i:0
  40 Return           7    0    0               00 
REG[7] =  i:22
  23 IfPos            6   52    0               00 if r[6]>0 then r[6]-=0, goto 52; check abort flag
REG[6] =  i:0
  24 Gosub            8   49    0               00 reset accumulator
REG[8] =  i:24
  49 Null             0    1    4               00 r[1..4]=NULL
REG[1] =  NULL
  50 Integer          0    5    0               00 r[5]=0; indicate accumulator empty
REG[5] =  i:0
  51 Return           8    0    0               00 
REG[8] =  i:24
  25 Column           3    1   14               00 r[14]=
REG[14] =  i:0
  26 CollSeq          0    0    0 (BINARY)      00 
  27 AggStep          0   14    1 min(1)        01 accum=r[1] step(r[14])
REG[14] =  i:0
  28 Column           3    1   14               00 r[14]=
REG[14] =  i:0
  29 CollSeq          0    0    0 (BINARY)      00 
  30 AggStep          0   14    2 max(1)        01 accum=r[2] step(r[14])
REG[14] =  i:0
  31 Column           3    1   14               00 r[14]=
REG[14] =  i:0
  32 AggStep          0   14    3 count(1)      01 accum=r[3] step(r[14])
REG[14] =  i:0
  33 Integer          1    5    0               00 r[5]=1; indicate data in accumulator
REG[5] =  i:1
  34 SorterNext       2   17    0               00 
  35 Gosub            7   39    0               00 output final row
REG[7] =  i:35
  39 IfPos            5   41    0               00 if r[5]>0 then r[5]-=0, goto 41; Groupby result generator entry point
REG[5] =  i:1
  41 AggFinal         1    1    0 min(1)        00 accum=r[1] N=1
  42 AggFinal         2    1    0 max(1)        00 accum=r[2] N=1
  43 AggFinal         3    1    0 count(1)      00 accum=r[3] N=1
  44 Copy             2   16    1               00 r[16..17]=r[2..3]
REG[16] =  i:0
REG[17] =  i:1
  45 Copy             1   15    0               00 r[15]=r[1]
REG[15] =  i:0
  46 MakeRecord      15    3   19               00 r[19]=mkrec(r[15..17])
REG[19] =  s4[04080809....]
  47 SorterInsert     1   19   15 3             00 key=r[19]
REG[19] =  s4[04080809....]
  48 Return           7    0    0               00 end groupby result generator
REG[7] =  i:35
  36 Goto             0   52    0               00 
  52 Explain         52    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  53 OpenPseudo       4   20    5               00 5 columns in r[20]
  54 SorterSort       1   61    0               00 
  55 SorterData       1   20    4               00 r[20]=data
  56 Column           4    2   18               00 r[18]=count(a)
REG[18] =  i:1
  57 Column           4    1   17               00 r[17]=max(a)
REG[17] =  i:0
  58 Column           4    0   16               00 r[16]=min(a)
REG[16] =  i:0
  59 ResultRow       16    3    0               00 output=r[16..18]
REG[16] =  i:0
REG[17] =  i:0
REG[18] =  i:1
  60 SorterNext       1   55    0               00 
  61 Halt             0    0    0               00 
SQL: [;
SELECT printf('%lld%n',314159.2653,'hi');]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 %lld%n        00 r[3]='%lld%n'
REG[3] =   t6[%lld%n](8)
   6 Real             0    4    0 314159.2653   00 r[4]=314159.2653
REG[4] =  r:314159
   7 String8          0    5    0 hi            00 r[5]='hi'
REG[5] =   t2[hi](8)
   8 Function0        7    3    2 printf(-1)    03 r[2]=func(r[3..5])
REG[3] =   t6[%lld%n](8)
REG[4] =  r:314159
REG[5] =   t2[hi](8)
REG[2] =   s6[314159](8)
   9 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s6[314159](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s6[314159](8)
   4 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 1             01 usesStmtJournal=0
  16 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s35[CREATE TABLE t1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t1](8)
REG[5] =  i:3
REG[6] =   s35[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s21[sqlite_autoinde](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =  NULL
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s21[sqlite_autoinde](8)
REG[5] =  i:4
REG[6] =  NULL
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t0st](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:5
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s40[CREATE INDEX t0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t0st](8)
REG[5] =  i:5
REG[6] =   s40[CREATE INDEX t0](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
SQL: [;
SELECT * FROM t1;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    2 1             01 usesStmtJournal=0
  10 Goto             0    1    0               00 
   1 OpenRead         0    3    0 2             00 root=3 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0    8    0               00 
   4 Column           0    0    1               00 r[1]=t1.a
REG[1] =  i:0
   5 Column           0    1    2               00 r[2]=t1.b
REG[2] =   s3[abc](8)
   6 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =  i:0
REG[2] =   s3[abc](8)
   7 Next             0    4    0               01 
   8 Halt             0    0    0               00 
SQL: [;
SELECT printf('(%!.3Q)','הנה מה־טוב ומה־נעים שבת אחים גם־יחד');]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 (%!.3Q)       00 r[3]='(%!.3Q)'
REG[3] =   t7[(%!.3Q)](8)
   6 String8          0    4    0 הנה מה־טוב ומה־נעים שבת אחים גם־יחד 00 r[4]='הנה מה־טוב ומה־נעים שבת אחים גם־יחד'
REG[4] =   t65[...... ........](8)
   7 Function0        3    3    2 printf(-1)    02 r[2]=func(r[3..4])
REG[3] =   t7[(%!.3Q)](8)
REG[4] =   t65[...... ........](8)
REG[2] =   s10[('......')](8)
   8 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s10[('......')](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s10[('......')](8)
   4 Halt             0    0    0               00 
SQL: [PRAGMA default_cache_size;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Transaction      0    0    0               00 
   2 ReadCookie       0    1    3               00 
REG[1] =  i:0
   3 IfPos            1    9    0               00 if r[1]>0 then r[1]-=0, goto 9
REG[1] =  i:0
   4 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   5 Subtract         1    2    1               00 r[1]=r[2]-r[1]
REG[1] =  i:0
REG[2] =  i:0
REG[1] =  i:0
   6 IfPos            1    9    0               00 if r[1]>0 then r[1]-=0, goto 9
REG[1] =  i:0
   7 Integer       -2000    1    0               00 r[1]=-2000
REG[1] =  i:-2000
   8 Noop             0    0    0               00 
   9 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:-2000
  10 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007ff051ba5859 in __GI_abort () at abort.c:79
#2  0x00007ff051ba5729 in __assert_fail_base (fmt=0x7ff051d3b588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21b92e "pItem->addrFillSub==0", file=0x22873d "sqlite3.c", line=130468, function=<optimized out>)
    at assert.c:92
#3  0x00007ff051bb6fd6 in __GI___assert_fail (assertion=0x21b92e "pItem->addrFillSub==0", file=0x22873d "sqlite3.c", line=130468, function=0x223e82 "int sqlite3Select(Parse *, Select *, SelectDest *)") at assert.c:101
#4  0x00000000002fcfa0 in sqlite3Select (pParse=0x7fff23fea280, p=0x17eb0f0, pDest=0x7fff23fe8b18) at sqlite3.c:130468
#5  0x000000000034f659 in sqlite3CodeSubselect (pParse=0x7fff23fea280, pExpr=0x17e9980) at sqlite3.c:99820
#6  0x000000000034bbfd in sqlite3ExprCodeTarget (pParse=0x7fff23fea280, pExpr=0x17e9980, target=7) at sqlite3.c:100770
#7  0x00000000003790ab in codeEqualityTerm (pParse=0x7fff23fea280, pTerm=0x17e4f10, pLevel=0x17e5270, iEq=1, bRev=0, iTarget=7) at sqlite3.c:136648
#8  0x000000000037a706 in codeAllEqualityTerms (pParse=0x7fff23fea280, pLevel=0x17e5270, bRev=0, nExtraReg=0, pzAff=0x7fff23fe9098) at sqlite3.c:136869
#9  0x0000000000375cb8 in sqlite3WhereCodeOneLoopStart (pParse=0x7fff23fea280, v=0x17e4520, pWInfo=0x17e4e80, iLevel=1, pLevel=0x17e5270, notReady=18446744073709551614) at sqlite3.c:137776
#10 0x000000000036c3cc in sqlite3WhereBegin (pParse=0x7fff23fea280, pTabList=0x17dd950, pWhere=0x17ec3b0, pOrderBy=0x0, pResultSet=0x17e6140, wctrlFlags=0, iAuxArg=320) at sqlite3.c:145128
#11 0x00000000002fdcea in sqlite3Select (pParse=0x7fff23fea280, p=0x17eac40, pDest=0x7fff23fe9670) at sqlite3.c:130695
#12 0x00000000002ecaa8 in yy_reduce (yypParser=0x7fff23fe98a0, yyruleno=79, yyLookahead=1, yyLookaheadToken=..., pParse=0x7fff23fea280) at sqlite3.c:151581
#13 0x00000000002e92f8 in sqlite3Parser (yyp=0x7fff23fe98a0, yymajor=1, yyminor=...) at sqlite3.c:152877
#14 0x00000000002a68b3 in sqlite3RunParser (pParse=0x7fff23fea280, 
    zSql=0x17fedaf ";;\nBEGIN;;\nSELECT a FROM t1\n       WHERE b=(SELECT b FROM t1 WHERE a=1)\n          OR b=(SELECT b FROM t1 WHERE a=2)\n          OR b=(SELECT b FROM t1 WHERE a=3)\n          OR b=(SELECT b FROM t1 WHERE a"..., pzErrMsg=0x7fff23fea460) at sqlite3.c:154013
#15 0x00000000002a1683 in sqlite3Prepare (db=0x17d02b0, 
    zSql=0x17d3873 ";\nSELECT\n    SrcWord, t1.a\n    FROM \n      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )\n    LEFT JOIN \n      t1\n    WHERE t1.a= (\n      SELECT BeginningId FROM (\n        SELECT "..., nBytes=3285, prepFlags=128, pReprepare=0x0, ppStmt=0x7fff23fea598, pzTail=0x7fff23fea580) at sqlite3.c:124303
#16 0x00000000002a0d4e in sqlite3LockAndPrepare (db=0x17d02b0, 
    zSql=0x17d3873 ";\nSELECT\n    SrcWord, t1.a\n    FROM \n      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )\n    LEFT JOIN \n      t1\n    WHERE t1.a= (\n      SELECT BeginningId FROM (\n        SELECT "..., nBytes=3285, prepFlags=128, pOld=0x0, ppStmt=0x7fff23fea598, pzTail=0x7fff23fea580) at sqlite3.c:124403
#17 0x000000000029247f in sqlite3_prepare_v2 (db=0x17d02b0, 
    zSql=0x17d3873 ";\nSELECT\n    SrcWord, t1.a\n    FROM \n      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )\n    LEFT JOIN \n      t1\n    WHERE t1.a= (\n      SELECT BeginningId FROM (\n        SELECT "..., nBytes=3285, ppStmt=0x7fff23fea598, pzTail=0x7fff23fea580) at sqlite3.c:124487
#18 0x0000000000256bd0 in main (argc=1, argv=0x7fff23fea748) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 6252] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
