GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000079,sig:06,src:019313+015215,time:10735672,execs:1898104,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 0             01 usesStmtJournal=0
  16 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s33[CREATE TABLE t1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t1](8)
REG[5] =  i:2
REG[6] =   s33[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s21[sqlite_autoinde](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =  NULL
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s21[sqlite_autoinde](8)
REG[5] =  i:3
REG[6] =  NULL
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t0st](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s4[t0st](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
SQL: [PRAGMA mmap_size = 1000000 ;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 0             01 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s33[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s33[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s21[sqlite_autoinde](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s21[sqlite_autoinde](8)
REG[2] =  i:3
REG[3] =  NULL
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t0st](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s46[CREATE TABLE t0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s4[t0st](8)
REG[2] =  i:4
REG[3] =   s46[CREATE TABLE t0](8)
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
SQL: [;;
CREATE INDEX t0st_segdir ON t1(b DESC, b DESC) ;]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      0    1    2 0             01 usesStmtJournal=0
  35 Goto             0    1    0               00 
   1 Noop             0   33    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:5
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:4
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 t0st_segdir   00 r[4]='t0st_segdir'
REG[4] =   t11[t0st_segdir](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:5
   9 String8          0    7    0 CREATE INDEX t0st_segdir ON t1(b DESC, b DESC)  00 r[7]='CREATE INDEX t0st_segdir ON t1(b DESC, b DESC) '
REG[7] =   t47[CREATE INDEX t0](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s72[06172311016B696E646578743073745F..#..kindext0st_]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s72[06172311016B696E646578743073745F..#..kindext0st_]
REG[2] =  i:4
  12 SorterOpen       3    0    2 k(3,-,-,)     00 
  13 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  14 Rewind           1   21    0               00 
  21 OpenWrite        2    1    0 k(3,-,-,)     11 root=1 iDb=0
  22 SorterSort       3   27    0               00 
  27 Close            1    0    0               00 
  28 Close            2    0    0               00 
  29 Close            3    0    0               00 
  30 SetCookie        0    1    3               00 
  31 ParseSchema      0    0    0 name='t0st_segdir' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 0             00 usesStmtJournal=0
  16 String8          0    2    0 t0st_segdir   00 r[2]='t0st_segdir'
REG[2] =   t11[t0st_segdir](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t11[t0st_segdir](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s21[sqlite_autoinde](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t11[t0st_segdir](8)
REG[1] =   s21[sqlite_autoinde](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t0st](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t11[t0st_segdir](8)
REG[1] =   s4[t0st](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s11[t0st_segdir](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t11[t0st_segdir](8)
REG[1] =   s11[t0st_segdir](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s11[t0st_segdir](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:5
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s47[CREATE INDEX t0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s11[t0st_segdir](8)
REG[5] =  i:5
REG[6] =   s47[CREATE INDEX t0](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  32 Expire           0    1    0               00 
  33 Halt             0    0    0               00 
SQL: [pragma auto_vacuum=1;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [;
ATTACH printf('file:%09000x/x.db?mode=memory&cache=shared',1) AS aux1;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 String8          0    6    0 file:%09000x/x.db?mode=memory&cache=shared 00 r[6]='file:%09000x/x.db?mode=memory&cache=shared'
REG[6] =   t42[file:%09000x/x.](8)
   8 Integer          1    7    0               00 r[7]=1
REG[7] =  i:1
   9 Function0        3    6    5 printf(-1)    02 r[5]=func(r[6..7])
REG[6] =   t42[file:%09000x/x.](8)
REG[7] =  i:1
REG[5] =   s9035[file:0000000000](8)
  10 Goto             0    1    0               00 
   1 SCopy            5    1    0               00 r[1]=r[5]
REG[1] =   e9035[file:0000000000](8)
   2 String8          0    2    0 aux1          00 r[2]='aux1'
REG[2] =   t4[aux1](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   e9035[file:0000000000](8)
REG[2] =   t4[aux1](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    3 1             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s33[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s33[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s21[sqlite_autoinde](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s21[sqlite_autoinde](8)
REG[2] =  i:3
REG[3] =  NULL
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t0st](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s46[CREATE TABLE t0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s4[t0st](8)
REG[2] =  i:4
REG[3] =   s46[CREATE TABLE t0](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s11[t0st_segdir](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s47[CREATE INDEX t0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s11[t0st_segdir](8)
REG[2] =  i:5
REG[3] =   s47[CREATE INDEX t0](8)
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t0st' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 1             01 usesStmtJournal=0
  16 String8          0    2    0 t0st          00 r[2]='t0st'
REG[2] =   t4[t0st](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t0st](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t0st](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t0st](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t0st](8)
REG[1] =   s4[t0st](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t0st](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s46[CREATE TABLE t0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t0st](8)
REG[5] =  i:4
REG[6] =   s46[CREATE TABLE t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t0st](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
SQL: [;
INSERT INTO t1 VALUES(5, '.125e+3');]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    1    3 1             01 usesStmtJournal=0
  25 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 OpenWrite        1    5    0 k(3,-,-,)     00 root=5 iDb=0; t0st_segdir
   3 OpenWrite        2    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t1_1
   4 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   5 Integer          5    2    0               00 r[2]=5
REG[2] =  i:5
   6 String8          0    3    0 .125e+3       00 r[3]='.125e+3'
REG[3] =   t7[.125e+3](8)
   7 Noop             0    0    0               00 uniqueness check for t0st_segdir
   8 SCopy            3    5    0               00 r[5]=r[3]; b
REG[5] =   t7[.125e+3](8)
   9 SCopy            3    6    0               00 r[6]=r[3]; b
REG[6] =   t7[.125e+3](8)
  10 IntCopy          1    7    0               00 r[7]=r[1]; rowid
REG[7] =  i:1
  11 MakeRecord       5    3    4               00 r[4]=mkrec(r[5..7]); for t0st_segdir
REG[4] =  s18[041B1B092E313235652B332E31323565.....125e+3.125e]
  12 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t1_1
  13 SCopy            2    9    0               00 r[9]=r[2]; a
REG[9] =  i:5
  14 IntCopy          1   10    0               00 r[10]=r[1]; rowid
REG[10] =  i:1
  15 MakeRecord       9    2    8               00 r[8]=mkrec(r[9..10]); for sqlite_autoindex_t1_1
REG[8] =  s4[03010905....]
  16 Abortable        0    0    0               00 
  17 NoConflict       2   19    9 1             00 key=r[9]
REG[9] =  i:5
  19 IdxInsert        1    4    5 3             10 key=r[4]
REG[4] =  s18[041B1B092E313235652B332E31323565.....125e+3.125e]
  20 IdxInsert        2    8    9 2             10 key=r[8]
REG[8] =  s4[03010905....]
  21 MakeRecord       2    2   11               00 r[11]=mkrec(r[2..3])
REG[11] =  s11[03011B052E313235652B33.....125e+3]
  22 Insert           0   11    1 t1            39 intkey=r[1] data=r[11]
REG[11] =  s11[03011B052E313235652B33.....125e+3]
REG[1] =  i:1
  23 Halt             0    0    0               00 
SQL: [;
PRAGMA foreign_keys = ON;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t0st' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 1             01 usesStmtJournal=0
  16 String8          0    2    0 t0st          00 r[2]='t0st'
REG[2] =   t4[t0st](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t0st](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t0st](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t0st](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t0st](8)
REG[1] =   s4[t0st](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t0st](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s46[CREATE TABLE t0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t0st](8)
REG[5] =  i:4
REG[6] =   s46[CREATE TABLE t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t0st](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
SQL: [;
DELETE FROM t1 WHERE a=3;]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    1    3 1             01 usesStmtJournal=0
  20 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    2    0 2             08 root=2 iDb=0; t1
   3 OpenWrite        2    3    0 k(2,,)        02 root=3 iDb=0; sqlite_autoindex_t1_1
   4 Explain          4    0    0 SEARCH TABLE t1 USING INDEX sqlite_autoindex_t1_1 (a=?) 00 
   5 Integer          3    2    0               00 r[2]=3
REG[2] =  i:3
   6 SeekGE           2   18    2 1             00 key=r[2]
REG[2] =  i:3
  18 Halt             0    0    0               00 
SQL: [;
INSERT INTO t1 VALUES(16, '  123e4');]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    1    3 1             01 usesStmtJournal=0
  25 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 OpenWrite        1    5    0 k(3,-,-,)     00 root=5 iDb=0; t0st_segdir
   3 OpenWrite        2    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t1_1
   4 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   5 Integer         16    2    0               00 r[2]=16
REG[2] =  i:16
   6 String8          0    3    0   123e4       00 r[3]='  123e4'
REG[3] =   t7[  123e4](8)
   7 Noop             0    0    0               00 uniqueness check for t0st_segdir
   8 SCopy            3    5    0               00 r[5]=r[3]; b
REG[5] =   t7[  123e4](8)
   9 SCopy            3    6    0               00 r[6]=r[3]; b
REG[6] =   t7[  123e4](8)
  10 IntCopy          1    7    0               00 r[7]=r[1]; rowid
REG[7] =  i:2
  11 MakeRecord       5    3    4               00 r[4]=mkrec(r[5..7]); for t0st_segdir
REG[4] =  s19[041B1B01202031323365342020313233....  123e4  123]
  12 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t1_1
  13 SCopy            2    9    0               00 r[9]=r[2]; a
REG[9] =  i:16
  14 IntCopy          1   10    0               00 r[10]=r[1]; rowid
REG[10] =  i:2
  15 MakeRecord       9    2    8               00 r[8]=mkrec(r[9..10]); for sqlite_autoindex_t1_1
REG[8] =  s5[0301011002.....]
  16 Abortable        0    0    0               00 
  17 NoConflict       2   19    9 1             00 key=r[9]
REG[9] =  i:16
  19 IdxInsert        1    4    5 3             10 key=r[4]
REG[4] =  s19[041B1B01202031323365342020313233....  123e4  123]
  20 IdxInsert        2    8    9 2             10 key=r[8]
REG[8] =  s5[0301011002.....]
  21 MakeRecord       2    2   11               00 r[11]=mkrec(r[2..3])
REG[11] =  s11[03011B1020203132336534....  123e4]
  22 Insert           0   11    1 t1            39 intkey=r[1] data=r[11]
REG[11] =  s11[03011B1020203132336534....  123e4]
REG[1] =  i:2
  23 Halt             0    0    0               00 
SQL: [BEGIN EXCLUSIVE;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Transaction      0    2    0               00 
   2 Transaction      1    2    0               00 
   3 AutoCommit       0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    3 1             01 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s33[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s33[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s21[sqlite_autoinde](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s21[sqlite_autoinde](8)
REG[2] =  i:3
REG[3] =  NULL
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t0st](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s46[CREATE TABLE t0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s4[t0st](8)
REG[2] =  i:4
REG[3] =   s46[CREATE TABLE t0](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s11[t0st_segdir](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s47[CREATE INDEX t0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s11[t0st_segdir](8)
REG[2] =  i:5
REG[3] =   s47[CREATE INDEX t0](8)
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
SQL: [;
SELECT a FROM t1 WHERE typeof(a)=='real' ORDER BY a;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    3 1             01 usesStmtJournal=0
  13 String8          0    3    0 real          00 r[3]='real'
REG[3] =   t4[real](8)
  14 Goto             0    1    0               00 
   1 Noop             1    3    0               00 
   2 OpenRead         2    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t1_1
   3 Explain          3    0    0 SCAN TABLE t1 USING COVERING INDEX sqlite_autoindex_t1_1 00 
   4 Rewind           2   11    1 0             00 
   5 Column           2    0    2               80 r[2]=t1.a
REG[2] =  i:5
   6 Function0        0    2    1 typeof(1)     01 r[1]=func(r[2])
REG[2] =  i:5
REG[1] =   t7[integer](8)
   7 Ne               3   10    1               51 if r[1]!=r[3] goto 10
REG[3] =   t4[real](8)
REG[1] =   t7[integer](8)
  10 Next             2    5    0               01 
   5 Column           2    0    2               80 r[2]=t1.a
REG[2] =  i:16
   6 Function         0    2    1 typeof(1)     01 r[1]=func(r[2])
REG[2] =  i:16
REG[1] =   t7[integer](8)
   7 Ne               3   10    1               51 if r[1]!=r[3] goto 10
REG[3] =   t4[real](8)
REG[1] =   t7[integer](8)
  10 Next             2    5    0               01 
  11 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t0st' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 1             01 usesStmtJournal=0
  16 String8          0    2    0 t0st          00 r[2]='t0st'
REG[2] =   t4[t0st](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t0st](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t0st](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t0st](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t0st](8)
REG[1] =   s4[t0st](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t0st](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s46[CREATE TABLE t0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t0st](8)
REG[5] =  i:4
REG[6] =   s46[CREATE TABLE t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t0st](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
SQL: [;
SELECT count(*), sum(b), sum(b), sum(b) FROM t1;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 1             01 usesStmtJournal=0
  17 Goto             0    1    0               00 
   1 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0    9    0               00 
   5 AggStep          0    0    1 count(0)      00 accum=r[1] step(r[0])
   6 Column           0    1    4               00 r[4]=t1.b
REG[4] =   s7[.125e+3](8)
   7 AggStep          0    4    2 sum(1)        01 accum=r[2] step(r[4])
REG[4] =   s7[.125e+3](8)
   8 Next             0    5    0               01 
   5 AggStep1         0    0    1 count(0)      00 accum=r[1] step(r[0])
   6 Column           0    1    4               00 r[4]=t1.b
REG[4] =   s7[  123e4](8)
   7 AggStep1         0    4    2 sum(1)        01 accum=r[2] step(r[4])
REG[4] =   s7[  123e4](8)
   8 Next             0    5    0               01 
   9 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  10 AggFinal         2    1    0 sum(1)        00 accum=r[2] N=1
  11 Copy             1    5    1               00 r[5..6]=r[1..2]
REG[5] =  i:2
REG[6] =  r:1.23012e+06
  12 Copy             2    7    0               00 r[7]=r[2]
REG[7] =  r:1.23012e+06
  13 Copy             2    8    0               00 r[8]=r[2]
REG[8] =  r:1.23012e+06
  14 ResultRow        5    4    0               00 output=r[5..8]
REG[5] =  i:2
REG[6] =  r:1.23012e+06
REG[7] =  r:1.23012e+06
REG[8] =  r:1.23012e+06
  15 Halt             0    0    0               00 
SQL: [;
INSERT INTO t1(oid,a,a) VALUES(562949953421311,13,'0001ffffffffffff');]
VDBE Trace:
   0 Init             0   29    0               00 Start at 29
  29 Transaction      0    1    3 1             01 usesStmtJournal=0
  30 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  31 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 OpenWrite        1    5    0 k(3,-,-,)     00 root=5 iDb=0; t0st_segdir
   3 OpenWrite        2    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t1_1
   4 Int64            0    1    0 562949953421311 00 r[1]=562949953421311
REG[1] =  i:562949953421311
   5 NotNull          1    7    0               00 if r[1]!=NULL goto 7
REG[1] =  i:562949953421311
   7 MustBeInt        1    0    0               00 
REG[1] =  i:562949953421311
   8 Integer         13    2    0               00 r[2]=13
REG[2] =  i:13
   9 Noop             0    0    0               00 uniqueness check for ROWID
  10 NotExists        0   12    1               00 intkey=r[1]
REG[1] =  i:562949953421311
  12 Noop             0    0    0               00 uniqueness check for t0st_segdir
  13 SCopy            3    5    0               00 r[5]=r[3]; b
REG[5] =  NULL
  14 SCopy            3    6    0               00 r[6]=r[3]; b
REG[6] =  NULL
  15 IntCopy          1    7    0               00 r[7]=r[1]; rowid
REG[7] =  i:562949953421311
  16 MakeRecord       5    3    4               00 r[4]=mkrec(r[5..7]); for t0st_segdir
REG[4] =  s12[040000060001FFFFFFFFFFFF............]
  17 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t1_1
  18 SCopy            2    9    0               00 r[9]=r[2]; a
REG[9] =  i:13
  19 IntCopy          1   10    0               00 r[10]=r[1]; rowid
REG[10] =  i:562949953421311
  20 MakeRecord       9    2    8               00 r[8]=mkrec(r[9..10]); for sqlite_autoindex_t1_1
REG[8] =  s12[0301060D0001FFFFFFFFFFFF............]
  21 Abortable        0    0    0               00 
  22 NoConflict       2   24    9 1             00 key=r[9]
REG[9] =  i:13
  24 IdxInsert        1    4    5 3             10 key=r[4]
REG[4] =  s12[040000060001FFFFFFFFFFFF............]
  25 IdxInsert        2    8    9 2             10 key=r[8]
REG[8] =  s12[0301060D0001FFFFFFFFFFFF............]
  26 MakeRecord       2    2   11               00 r[11]=mkrec(r[2..3])
REG[11] =  s4[0301000D....]
  27 Insert           0   11    1 t1            31 intkey=r[1] data=r[11]
REG[11] =  s4[0301000D....]
REG[1] =  i:562949953421311
  28 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    3 1             01 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s33[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s33[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s21[sqlite_autoinde](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s21[sqlite_autoinde](8)
REG[2] =  i:3
REG[3] =  NULL
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t0st](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s46[CREATE TABLE t0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s4[t0st](8)
REG[2] =  i:4
REG[3] =   s46[CREATE TABLE t0](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s11[t0st_segdir](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s47[CREATE INDEX t0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s11[t0st_segdir](8)
REG[2] =  i:5
REG[3] =   s47[CREATE INDEX t0](8)
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t0st' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 1             01 usesStmtJournal=0
  16 String8          0    2    0 t0st          00 r[2]='t0st'
REG[2] =   t4[t0st](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t0st](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t0st](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t0st](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t0st](8)
REG[1] =   s4[t0st](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t0st](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s46[CREATE TABLE t0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t0st](8)
REG[5] =  i:4
REG[6] =   s46[CREATE TABLE t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t0st](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
SQL: [;
pragma cache_size=16;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [INSERT INTO t1 (b, b, b) VALUES (1, 'FACTOR', 18);]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    1    3 1             01 usesStmtJournal=0
  24 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  25 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 OpenWrite        1    5    0 k(3,-,-,)     00 root=5 iDb=0; t0st_segdir
   3 OpenWrite        2    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t1_1
   4 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:562949953421312
   5 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   6 Noop             0    0    0               00 uniqueness check for t0st_segdir
   7 SCopy            3    5    0               00 r[5]=r[3]; b
REG[5] =  i:1
   8 SCopy            3    6    0               00 r[6]=r[3]; b
REG[6] =  i:1
   9 IntCopy          1    7    0               00 r[7]=r[1]; rowid
REG[7] =  i:562949953421312
  10 MakeRecord       5    3    4               00 r[4]=mkrec(r[5..7]); for t0st_segdir
REG[4] =  s12[040909060002000000000000............]
  11 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t1_1
  12 SCopy            2    9    0               00 r[9]=r[2]; a
REG[9] =  NULL
  13 IntCopy          1   10    0               00 r[10]=r[1]; rowid
REG[10] =  i:562949953421312
  14 MakeRecord       9    2    8               00 r[8]=mkrec(r[9..10]); for sqlite_autoindex_t1_1
REG[8] =  s11[0300060002000000000000...........]
  15 Abortable        0    0    0               00 
  16 NoConflict       2   18    9 1             00 key=r[9]
REG[9] =  NULL
  18 IdxInsert        1    4    5 3             10 key=r[4]
REG[4] =  s12[040909060002000000000000............]
  19 IdxInsert        2    8    9 2             10 key=r[8]
REG[8] =  s11[0300060002000000000000...........]
  20 MakeRecord       2    2   11               00 r[11]=mkrec(r[2..3])
REG[11] =  s3[030009...]
  21 Insert           0   11    1 t1            39 intkey=r[1] data=r[11]
REG[11] =  s3[030009...]
REG[1] =  i:562949953421312
  22 Halt             0    0    0               00 
SQL: [;
COMMIT;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fb2f283c859 in __GI_abort () at abort.c:79
#2  0x00007fb2f283c729 in __assert_fail_base (fmt=0x7fb2f29d2588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21b92e "pItem->addrFillSub==0", file=0x22873d "sqlite3.c", line=130468, function=<optimized out>)
    at assert.c:92
#3  0x00007fb2f284dfd6 in __GI___assert_fail (assertion=0x21b92e "pItem->addrFillSub==0", file=0x22873d "sqlite3.c", line=130468, function=0x223e82 "int sqlite3Select(Parse *, Select *, SelectDest *)") at assert.c:101
#4  0x00000000002fcfa0 in sqlite3Select (pParse=0x7ffdfef58a90, p=0x13f5a90, pDest=0x7ffdfef57328) at sqlite3.c:130468
#5  0x000000000034f659 in sqlite3CodeSubselect (pParse=0x7ffdfef58a90, pExpr=0x13f55e0) at sqlite3.c:99820
#6  0x000000000034bbfd in sqlite3ExprCodeTarget (pParse=0x7ffdfef58a90, pExpr=0x13f55e0, target=7) at sqlite3.c:100770
#7  0x00000000003790ab in codeEqualityTerm (pParse=0x7ffdfef58a90, pTerm=0x13eef50, pLevel=0x13ef2b0, iEq=1, bRev=0, iTarget=7) at sqlite3.c:136648
#8  0x000000000037a706 in codeAllEqualityTerms (pParse=0x7ffdfef58a90, pLevel=0x13ef2b0, bRev=0, nExtraReg=0, pzAff=0x7ffdfef578a8) at sqlite3.c:136869
#9  0x0000000000375cb8 in sqlite3WhereCodeOneLoopStart (pParse=0x7ffdfef58a90, v=0x13f47d0, pWInfo=0x13eeec0, iLevel=1, pLevel=0x13ef2b0, notReady=18446744073709551614) at sqlite3.c:137776
#10 0x000000000036c3cc in sqlite3WhereBegin (pParse=0x7ffdfef58a90, pTabList=0x13f9780, pWhere=0x13f5130, pOrderBy=0x0, pResultSet=0x1402d80, wctrlFlags=0, iAuxArg=320) at sqlite3.c:145128
#11 0x00000000002fdcea in sqlite3Select (pParse=0x7ffdfef58a90, p=0x13f4c80, pDest=0x7ffdfef57e80) at sqlite3.c:130695
#12 0x00000000002ecaa8 in yy_reduce (yypParser=0x7ffdfef580b0, yyruleno=79, yyLookahead=1, yyLookaheadToken=..., pParse=0x7ffdfef58a90) at sqlite3.c:151581
#13 0x00000000002e92f8 in sqlite3Parser (yyp=0x7ffdfef580b0, yymajor=1, yyminor=...) at sqlite3.c:152877
#14 0x00000000002a68b3 in sqlite3RunParser (pParse=0x7ffdfef58a90, 
    zSql=0x141321f ";;\nSELECT name, rootpage, sql FROM \"main\".sqlite_master ORDER BY rowid;;\nCOMMIT;;;\nSELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t0st_segdir' AND type!='trigger' ORDER BY rowid;"..., pzErrMsg=0x7ffdfef58c70) at sqlite3.c:154013
#15 0x00000000002a1683 in sqlite3Prepare (db=0x13e62b0, 
    zSql=0x13e96f7 ";\nSELECT\n    SrcWord, t1.b\n    FROM \n      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )\n    LEFT JOIN \n      t1\n    WHERE t1.b= (\n      SELECT BeginningId FROM (\n        SELECT "..., nBytes=2185, prepFlags=128, pReprepare=0x0, ppStmt=0x7ffdfef58da8, pzTail=0x7ffdfef58d90) at sqlite3.c:124303
#16 0x00000000002a0d4e in sqlite3LockAndPrepare (db=0x13e62b0, 
    zSql=0x13e96f7 ";\nSELECT\n    SrcWord, t1.b\n    FROM \n      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )\n    LEFT JOIN \n      t1\n    WHERE t1.b= (\n      SELECT BeginningId FROM (\n        SELECT "..., nBytes=2185, prepFlags=128, pOld=0x0, ppStmt=0x7ffdfef58da8, pzTail=0x7ffdfef58d90) at sqlite3.c:124403
#17 0x000000000029247f in sqlite3_prepare_v2 (db=0x13e62b0, 
    zSql=0x13e96f7 ";\nSELECT\n    SrcWord, t1.b\n    FROM \n      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )\n    LEFT JOIN \n      t1\n    WHERE t1.b= (\n      SELECT BeginningId FROM (\n        SELECT "..., nBytes=2185, ppStmt=0x7ffdfef58da8, pzTail=0x7ffdfef58d90) at sqlite3.c:124487
#18 0x0000000000256bd0 in main (argc=1, argv=0x7ffdfef58f58) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 6669] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
