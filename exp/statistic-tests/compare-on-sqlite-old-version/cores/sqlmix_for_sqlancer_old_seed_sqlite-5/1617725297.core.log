GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000028,sig:06,src:017864+017806,time:5615715,execs:900814,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    1 0             01 usesStmtJournal=0
  16 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s54[CREATE TABLE t1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t1](8)
REG[5] =  i:3
REG[6] =   s54[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
SQL: [PRAGMA auto_vacuum=1;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Transaction      0    1    0               00 
   2 ReadCookie       0    1    4               00 
REG[1] =  i:3
   3 If               1    5    0               00 
REG[1] =  i:3
   5 SetCookie        0    7    0               00 
   6 Halt             0    0    0               00 
SQL: [;
CREATE INDEX t0st ON t1(b DESC, b DESC) ;]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      0    1    1 0             01 usesStmtJournal=0
  35 Goto             0    1    0               00 
   1 Noop             0   33    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:4
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:2
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 t0st          00 r[4]='t0st'
REG[4] =   t4[t0st](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:4
   9 String8          0    7    0 CREATE INDEX t0st ON t1(b DESC, b DESC)  00 r[7]='CREATE INDEX t0st ON t1(b DESC, b DESC) '
REG[7] =   t40[CREATE INDEX t0](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s58[06171511015D696E6465787430737474.....]indext0stt]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s58[06171511015D696E6465787430737474.....]indext0stt]
REG[2] =  i:2
  12 SorterOpen       3    0    2 k(3,-,-,)     00 
  13 OpenRead         1    3    0 k(2,,)        00 root=3 iDb=0; t1
  14 Rewind           1   21    0               00 
  21 OpenWrite        2    1    0 k(3,-,-,)     11 root=1 iDb=0
  22 SorterSort       3   27    0               00 
  27 Close            1    0    0               00 
  28 Close            2    0    0               00 
  29 Close            3    0    0               00 
  30 SetCookie        0    1    2               00 
  31 ParseSchema      0    0    0 name='t0st' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 0             00 usesStmtJournal=0
  16 String8          0    2    0 t0st          00 r[2]='t0st'
REG[2] =   t4[t0st](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t0st](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t0st](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t0st](8)
REG[1] =   s4[t0st](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t0st](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s40[CREATE INDEX t0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t0st](8)
REG[5] =  i:4
REG[6] =   s40[CREATE INDEX t0](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  32 Expire           0    1    0               00 
  33 Halt             0    0    0               00 
SQL: [;
SELECT printf('%*.*f',5,2,3.141592653);]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 %*.*f         00 r[3]='%*.*f'
REG[3] =   t5[%*.*f](8)
   6 Integer          5    4    0               00 r[4]=5
REG[4] =  i:5
   7 Integer          2    5    0               00 r[5]=2
REG[5] =  i:2
   8 Real             0    6    0 3.141592653   00 r[6]=3.141592653
REG[6] =  r:3.14159
   9 Function0       15    3    2 printf(-1)    04 r[2]=func(r[3..6])
REG[3] =   t5[%*.*f](8)
REG[4] =  i:5
REG[5] =  i:2
REG[6] =  r:3.14159
REG[2] =   s5[ 3.14](8)
  10 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s5[ 3.14](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s5[ 3.14](8)
   4 Halt             0    0    0               00 
SQL: [;
SELECT * FROM t1 WHERE (a=1 OR a=2) AND a IN (
    SELECT a FROM (SELECT DISTINCT a FROM t1) WHERE a=1
  );]
VDBE Trace:
   0 Init             0   67    0               00 Start at 67
  67 Transaction      0    0    2 0             01 usesStmtJournal=0
  68 Integer          1   11    0               00 r[11]=1
REG[11] =  i:1
  69 Goto             0    1    0               00 
   1 OpenRead         3    3    0 k(2,,)        02 root=3 iDb=0; sqlite_autoindex_t1_1
   2 Explain          2    0    0 SEARCH TABLE t1 USING PRIMARY KEY (a=?) 00 
   3 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   4 Once             0   12    0               00 
   5 OpenEphemeral    4    1    0 k(1,B)        00 nColumn=1; RHS of IN operator
   6 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   7 MakeRecord       3    1    4 A             00 r[4]=mkrec(r[3])
REG[4] =  s2[0209..]
   8 IdxInsert        4    4    3 1             00 key=r[4]
REG[4] =  s2[0209..]
   9 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  10 MakeRecord       3    1    4 A             00 r[4]=mkrec(r[3])
REG[4] =  s3[020102...]
  11 IdxInsert        4    4    3 1             00 key=r[4]
REG[4] =  s3[020102...]
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Rewind           4   66    0               00 
  14 Column           4    0    1               00 r[1]=
REG[1] =  i:1
  15 IsNull           1   65    0               00 if r[1]==NULL goto 65
REG[1] =  i:1
  16 SeekGE           3   65    1 1             00 key=r[1]
REG[1] =  i:1
  65 Next             4   14    0               00 
  14 Column           4    0    1               00 r[1]=
REG[1] =  i:2
  15 IsNull           1   65    0               00 if r[1]==NULL goto 65
REG[1] =  i:2
  16 SeekGE           3   65    1 1             00 key=r[1]
REG[1] =  i:2
  65 Next             4   14    0               00 
  66 Halt             0    0    0               00 
SQL: [;
ATTACH printf('file:%09000x/x.db?mode=memory&cache=shared',1) AS aux1;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 String8          0    6    0 file:%09000x/x.db?mode=memory&cache=shared 00 r[6]='file:%09000x/x.db?mode=memory&cache=shared'
REG[6] =   t42[file:%09000x/x.](8)
   8 Integer          1    7    0               00 r[7]=1
REG[7] =  i:1
   9 Function0        3    6    5 printf(-1)    02 r[5]=func(r[6..7])
REG[6] =   t42[file:%09000x/x.](8)
REG[7] =  i:1
REG[5] =   s9035[file:0000000000](8)
  10 Goto             0    1    0               00 
   1 SCopy            5    1    0               00 r[1]=r[5]
REG[1] =   e9035[file:0000000000](8)
   2 String8          0    2    0 aux1          00 r[2]='aux1'
REG[2] =   t4[aux1](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   e9035[file:0000000000](8)
REG[2] =   t4[aux1](8)
REG[3] =  NULL
SQL: [;

PRAGMA secu200;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 1             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s54[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:3
REG[3] =   s54[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t0st](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s40[CREATE INDEX t0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s4[t0st](8)
REG[2] =  i:4
REG[3] =   s40[CREATE INDEX t0](8)
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
SQL: [SELECT a, abs(a) FROM t1
    INTERSECT
    SELECT abs(a), abs(a) FROM t1
    ORDER BY 1
  ;]
VDBE Trace:
   0 Init             0   78    0               00 Start at 78
  78 Transaction      0    0    2 1             01 usesStmtJournal=0
  79 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 Explain          2    0    0 MERGE (INTERSECT) 00 
   3 InitCoroutine    4   35    4               00 left SELECT
  35 InitCoroutine    5   72   36               00 right SELECT
  72 Yield            4   77    0               00 
REG[4] =  i:3
REG[4] =  i:72
   4 Explain          4    2    0 LEFT          00 
   5 SorterOpen       2    2    0 k(1,B)        00 
   6 OpenRead         3    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t1_1
   7 Explain          7    4    0 SCAN TABLE t1 00 
   8 Rewind           3   22    8 0             00 
  22 Explain         22    4    0 USE TEMP B-TREE FOR RIGHT PART OF ORDER BY 00 
  23 Gosub           15   25    0               00 
REG[15] =  i:23
  25 Once             0   27    0               00 
  26 OpenPseudo       4   16    4               00 4 columns in r[16]
  27 SorterSort       2   34    0               00 
  34 EndCoroutine     4    0    0               00 
REG[4] =  i:72
  77 Halt             0    0    0               00 
SQL: [;
SELECT printf('|%7.8c|%-7.8c|','*','*');]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 |%7.8c|%-7.8c| 00 r[3]='|%7.8c|%-7.8c|'
REG[3] =   t14[|%7.8c|%-7.8c|](8)
   6 String8          0    4    0 *             00 r[4]='*'
REG[4] =   t1[*](8)
   7 String8          0    5    0 *             00 r[5]='*'
REG[5] =   t1[*](8)
   8 Function0        7    3    2 printf(-1)    03 r[2]=func(r[3..5])
REG[3] =   t14[|%7.8c|%-7.8c|](8)
REG[4] =   t1[*](8)
REG[5] =   t1[*](8)
REG[2] =   s19[|********|*****](8)
   9 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s19[|********|*****](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s19[|********|*****](8)
   4 Halt             0    0    0               00 
SQL: [INSERT INTO t1 VALUES(0, 'abc');]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    1    2 1             01 usesStmtJournal=0
  24 Goto             0    1    0               00 
   1 OpenWrite        1    4    0 k(3,-,-,)     00 root=4 iDb=0; t0st
   2 OpenWrite        2    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t1_1
   3 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   4 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   5 String8          0    3    0 abc           00 r[3]='abc'
REG[3] =   t3[abc](8)
   6 HaltIfNull    1299    2    2 t1.a          01 if r[2]=null halt
REG[2] =  i:0
   7 HaltIfNull    1299    2    3 t1.b          01 if r[3]=null halt
REG[3] =   t3[abc](8)
   8 Noop             0    0    0               00 uniqueness check for t0st
   9 SCopy            3    5    0               00 r[5]=r[3]; b
REG[5] =   t3[abc](8)
  10 SCopy            3    6    0               00 r[6]=r[3]; b
REG[6] =   t3[abc](8)
  11 SCopy            2    7    0               00 r[7]=r[2]; a
REG[7] =  i:0
  12 MakeRecord       5    3    4               00 r[4]=mkrec(r[5..7]); for t0st
REG[4] =  s10[04131308616263616263....abcabc]
  13 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t1_1
  14 SCopy            2    9    0               00 r[9]=r[2]; a
REG[9] =  i:0
  15 SCopy            3   10    0               00 r[10]=r[3]; b
REG[10] =   t3[abc](8)
  16 MakeRecord       9    2    8               00 r[8]=mkrec(r[9..10]); for sqlite_autoindex_t1_1
REG[8] =  s6[030813616263...abc]
  17 Abortable        0    0    0               00 
  18 NoConflict       2   20    9 2             00 key=r[9..10]
REG[9] =  i:0
REG[10] =   t3[abc](8)
  20 IdxInsert        1    4    5 3             10 key=r[4]
REG[4] =  s10[04131308616263616263....abcabc]
  21 IdxInsert        2    8    9 2             11 key=r[8]
REG[8] =  s6[030813616263...abc]
  22 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 1             01 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s54[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:3
REG[3] =   s54[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t0st](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s40[CREATE INDEX t0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s4[t0st](8)
REG[2] =  i:4
REG[3] =   s40[CREATE INDEX t0](8)
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
SQL: [;
SELECT printf('%d',314159.2653);]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 %d            00 r[3]='%d'
REG[3] =   t2[%d](8)
   6 Real             0    4    0 314159.2653   00 r[4]=314159.2653
REG[4] =  r:314159
   7 Function0        3    3    2 printf(-1)    02 r[2]=func(r[3..4])
REG[3] =   t2[%d](8)
REG[4] =  r:314159
REG[2] =   s6[314159](8)
   8 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s6[314159](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s6[314159](8)
   4 Halt             0    0    0               00 
SQL: [;
SELECT printf('|%,d|%,d|',123,-123);]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 |%,d|%,d|     00 r[3]='|%,d|%,d|'
REG[3] =   t9[|%,d|%,d|](8)
   6 Integer        123    4    0               00 r[4]=123
REG[4] =  i:123
   7 Integer       -123    5    0               00 r[5]=-123
REG[5] =  i:-123
   8 Function0        7    3    2 printf(-1)    03 r[2]=func(r[3..5])
REG[3] =   t9[|%,d|%,d|](8)
REG[4] =  i:123
REG[5] =  i:-123
REG[2] =   s10[|123|-123|](8)
   9 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s10[|123|-123|](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s10[|123|-123|](8)
   4 Halt             0    0    0               00 
SQL: [;
SELECT printf('|%,d|%,d|',12345,-12345);]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 |%,d|%,d|     00 r[3]='|%,d|%,d|'
REG[3] =   t9[|%,d|%,d|](8)
   6 Integer       12345    4    0               00 r[4]=12345
REG[4] =  i:12345
   7 Integer       -12345    5    0               00 r[5]=-12345
REG[5] =  i:-12345
   8 Function0        7    3    2 printf(-1)    03 r[2]=func(r[3..5])
REG[3] =   t9[|%,d|%,d|](8)
REG[4] =  i:12345
REG[5] =  i:-12345
REG[2] =   s16[|12,345|-12,345](8)
   9 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s16[|12,345|-12,345](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s16[|12,345|-12,345](8)
   4 Halt             0    0    0               00 
SQL: [;
SELECT printf('(%3.3c)',char(1492));]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 (%3.3c)       00 r[3]='(%3.3c)'
REG[3] =   t7[(%3.3c)](8)
   6 Integer       1492    5    0               00 r[5]=1492
REG[5] =  i:1492
   7 Function0        1    5    4 char(-1)      01 r[4]=func(r[5])
REG[5] =  i:1492
REG[4] =   z2[..](8)
   8 Function0        3    3    2 printf(-1)    02 r[2]=func(r[3..4])
REG[3] =   t7[(%3.3c)](8)
REG[4] =   z2[..](8)
REG[2] =   s8[(......)](8)
   9 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s8[(......)](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s8[(......)](8)
   4 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 1             01 usesStmtJournal=0
  16 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s54[CREATE TABLE t1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t1](8)
REG[5] =  i:3
REG[6] =   s54[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t0st](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s40[CREATE INDEX t0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t0st](8)
REG[5] =  i:4
REG[6] =   s40[CREATE INDEX t0](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
SQL: [SELECT b, b, b FROM t1;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    2 1             01 usesStmtJournal=0
  11 Goto             0    1    0               00 
   1 OpenRead         1    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t1_1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           1    9    1 0             00 
   4 Column           1    1    1               00 r[1]=t1.b
REG[1] =   s3[abc](8)
   5 Column           1    1    2               00 r[2]=t1.b
REG[2] =   s3[abc](8)
   6 Column           1    1    3               00 r[3]=t1.b
REG[3] =   s3[abc](8)
   7 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s3[abc](8)
REG[2] =   s3[abc](8)
REG[3] =   s3[abc](8)
   8 Next             1    4    0               01 
   9 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 1             01 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s54[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:3
REG[3] =   s54[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t0st](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s40[CREATE INDEX t0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s4[t0st](8)
REG[2] =  i:4
REG[3] =   s40[CREATE INDEX t0](8)
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
SQL: [CREATE TABLE t0st_content(t0st_segments, t0st_segdir DEFAULT 'x');]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    2 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:3
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:3
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t0st_content  00 r[7]='t0st_content'
REG[7] =   t12[t0st_content](8)
  20 String8          0    8    0 t0st_content  00 r[8]='t0st_content'
REG[8] =   t12[t0st_content](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  22 String8          0   10    0 CREATE TABLE t0st_content(t0st_segments, t0st_segdir DEFAULT 'x') 00 r[10]='CREATE TABLE t0st_content(t0st_segments, t0st_segdir DEFAULT 'x')'
REG[10] =   t65[CREATE TABLE t0](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s102[0717252501810F7461626C6574307374..%%...tablet0st]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s102[0717252501810F7461626C6574307374..%%...tablet0st]
REG[5] =  i:3
  25 SetCookie        0    1    3               00 
  26 ParseSchema      0    0    0 tbl_name='t0st_content' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 1             00 usesStmtJournal=0
  16 String8          0    2    0 t0st_content  00 r[2]='t0st_content'
REG[2] =   t12[t0st_content](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t12[t0st_content](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t12[t0st_content](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[t0st_content](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t12[t0st_content](8)
REG[1] =   s12[t0st_content](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s12[t0st_content](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:5
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s65[CREATE TABLE t0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s12[t0st_content](8)
REG[5] =  i:5
REG[6] =   s65[CREATE TABLE t0](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fc541910859 in __GI_abort () at abort.c:79
#2  0x00007fc541910729 in __assert_fail_base (fmt=0x7fc541aa6588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21b92e "pItem->addrFillSub==0", file=0x22873d "sqlite3.c", line=130468, function=<optimized out>)
    at assert.c:92
#3  0x00007fc541921fd6 in __GI___assert_fail (assertion=0x21b92e "pItem->addrFillSub==0", file=0x22873d "sqlite3.c", line=130468, function=0x223e82 "int sqlite3Select(Parse *, Select *, SelectDest *)") at assert.c:101
#4  0x00000000002fcfa0 in sqlite3Select (pParse=0x7ffe1063c710, p=0xd85940, pDest=0x7ffe1063afa8) at sqlite3.c:130468
#5  0x000000000034f659 in sqlite3CodeSubselect (pParse=0x7ffe1063c710, pExpr=0xd82a60) at sqlite3.c:99820
#6  0x000000000034bbfd in sqlite3ExprCodeTarget (pParse=0x7ffe1063c710, pExpr=0xd82a60, target=7) at sqlite3.c:100770
#7  0x00000000003790ab in codeEqualityTerm (pParse=0x7ffe1063c710, pTerm=0xd72dd0, pLevel=0xd73130, iEq=1, bRev=0, iTarget=7) at sqlite3.c:136648
#8  0x000000000037a706 in codeAllEqualityTerms (pParse=0x7ffe1063c710, pLevel=0xd73130, bRev=0, nExtraReg=0, pzAff=0x7ffe1063b528) at sqlite3.c:136869
#9  0x0000000000375cb8 in sqlite3WhereCodeOneLoopStart (pParse=0x7ffe1063c710, v=0xd71a80, pWInfo=0xd72d40, iLevel=1, pLevel=0xd73130, notReady=18446744073709551614) at sqlite3.c:137776
#10 0x000000000036c3cc in sqlite3WhereBegin (pParse=0x7ffe1063c710, pTabList=0xd7e8c0, pWhere=0xd83d20, pOrderBy=0x0, pResultSet=0xd736a0, wctrlFlags=0, iAuxArg=320) at sqlite3.c:145128
#11 0x00000000002fdcea in sqlite3Select (pParse=0x7ffe1063c710, p=0xd71f30, pDest=0x7ffe1063bb00) at sqlite3.c:130695
#12 0x00000000002ecaa8 in yy_reduce (yypParser=0x7ffe1063bd30, yyruleno=79, yyLookahead=1, yyLookaheadToken=..., pParse=0x7ffe1063c710) at sqlite3.c:151581
#13 0x00000000002e92f8 in sqlite3Parser (yyp=0x7ffe1063bd30, yymajor=1, yyminor=...) at sqlite3.c:152877
#14 0x00000000002a68b3 in sqlite3RunParser (pParse=0x7ffe1063c710, 
    zSql=0xd85f4f ";EXPLAIN INSERT INTO t0st_content SELECT * FROM t0st_content ;CREATE TABLE k00000d(1, docid) ;;\nPRAGMA query_only;PRAGMA page_size = 1024;;\nSELECT t0st_segments, t0st_segments FROM t0st_content WHERE "..., pzErrMsg=0x7ffe1063c8f0) at sqlite3.c:154013
#15 0x00000000002a1683 in sqlite3Prepare (db=0xd692d0, 
    zSql=0xd69f70 ";\nSELECT\n    SrcWord, t1.b\n    FROM \n      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )\n    LEFT JOIN \n      t1\n    WHERE t1.b= (\n      SELECT BeginningId FROM (\n        SELECT "..., nBytes=755, prepFlags=128, pReprepare=0x0, ppStmt=0x7ffe1063ca28, pzTail=0x7ffe1063ca10) at sqlite3.c:124303
#16 0x00000000002a0d4e in sqlite3LockAndPrepare (db=0xd692d0, 
    zSql=0xd69f70 ";\nSELECT\n    SrcWord, t1.b\n    FROM \n      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )\n    LEFT JOIN \n      t1\n    WHERE t1.b= (\n      SELECT BeginningId FROM (\n        SELECT "..., nBytes=755, prepFlags=128, pOld=0x0, ppStmt=0x7ffe1063ca28, pzTail=0x7ffe1063ca10) at sqlite3.c:124403
#17 0x000000000029247f in sqlite3_prepare_v2 (db=0xd692d0, 
    zSql=0xd69f70 ";\nSELECT\n    SrcWord, t1.b\n    FROM \n      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )\n    LEFT JOIN \n      t1\n    WHERE t1.b= (\n      SELECT BeginningId FROM (\n        SELECT "..., nBytes=755, ppStmt=0x7ffe1063ca28, pzTail=0x7ffe1063ca10) at sqlite3.c:124487
#18 0x0000000000256bd0 in main (argc=1, argv=0x7ffe1063cbd8) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 6210] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
