GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000025,sig:06,src:017864+016136,time:5615216,execs:900719,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 0             01 usesStmtJournal=0
  16 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s18[CREATE TABLE t1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t1](8)
REG[5] =  i:2
REG[6] =   s18[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[b](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s37[CREATE INDEX b ](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[b](8)
REG[5] =  i:3
REG[6] =   s37[CREATE INDEX b ](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
SQL: [;
CREATE INDEX t0st ON t1(a DESC, a DESC) ;]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      0    1    2 0             01 usesStmtJournal=0
  35 Goto             0    1    0               00 
   1 Noop             0   33    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:4
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:3
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 t0st          00 r[4]='t0st'
REG[4] =   t4[t0st](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:4
   9 String8          0    7    0 CREATE INDEX t0st ON t1(a DESC, a DESC)  00 r[7]='CREATE INDEX t0st ON t1(a DESC, a DESC) '
REG[7] =   t40[CREATE INDEX t0](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s58[06171511015D696E6465787430737474.....]indext0stt]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s58[06171511015D696E6465787430737474.....]indext0stt]
REG[2] =  i:3
  12 SorterOpen       3    0    2 k(3,-,-,)     00 
  13 OpenRead         1    2    0 1             00 root=2 iDb=0; t1
  14 Rewind           1   21    0               00 
  21 OpenWrite        2    1    0 k(3,-,-,)     11 root=1 iDb=0
  22 SorterSort       3   27    0               00 
  27 Close            1    0    0               00 
  28 Close            2    0    0               00 
  29 Close            3    0    0               00 
  30 SetCookie        0    1    3               00 
  31 ParseSchema      0    0    0 name='t0st' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 0             00 usesStmtJournal=0
  16 String8          0    2    0 t0st          00 r[2]='t0st'
REG[2] =   t4[t0st](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t0st](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t0st](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t0st](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t0st](8)
REG[1] =   s4[t0st](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t0st](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s40[CREATE INDEX t0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t0st](8)
REG[5] =  i:4
REG[6] =   s40[CREATE INDEX t0](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  32 Expire           0    1    0               00 
  33 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    3 0             01 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s18[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s18[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[b](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s37[CREATE INDEX b ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[b](8)
REG[2] =  i:3
REG[3] =   s37[CREATE INDEX b ](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t0st](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s40[CREATE INDEX t0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s4[t0st](8)
REG[2] =  i:4
REG[3] =   s40[CREATE INDEX t0](8)
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
SQL: [;
ATTACH printf('file:%09000x/x.db?mode=memory&cache=shared',1) AS aux1;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 String8          0    6    0 file:%09000x/x.db?mode=memory&cache=shared 00 r[6]='file:%09000x/x.db?mode=memory&cache=shared'
REG[6] =   t42[file:%09000x/x.](8)
   8 Integer          1    7    0               00 r[7]=1
REG[7] =  i:1
   9 Function0        3    6    5 printf(-1)    02 r[5]=func(r[6..7])
REG[6] =   t42[file:%09000x/x.](8)
REG[7] =  i:1
REG[5] =   s9035[file:0000000000](8)
  10 Goto             0    1    0               00 
   1 SCopy            5    1    0               00 r[1]=r[5]
REG[1] =   e9035[file:0000000000](8)
   2 String8          0    2    0 aux1          00 r[2]='aux1'
REG[2] =   t4[aux1](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   e9035[file:0000000000](8)
REG[2] =   t4[aux1](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    3 1             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s18[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s18[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[b](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s37[CREATE INDEX b ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[b](8)
REG[2] =  i:3
REG[3] =   s37[CREATE INDEX b ](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t0st](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s40[CREATE INDEX t0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s4[t0st](8)
REG[2] =  i:4
REG[3] =   s40[CREATE INDEX t0](8)
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
SQL: [;
SELECT * FROM t1 WHERE (a=1 OR a=2) AND a IN (
    SELECT a FROM (SELECT DISTINCT a FROM t1) WHERE a=1
  );]
VDBE Trace:
   0 Init             0   59    0               00 Start at 59
  59 Transaction      0    0    3 1             01 usesStmtJournal=0
  60 Integer          1   13    0               00 r[13]=1
REG[13] =  i:1
  61 Goto             0    1    0               00 
   1 OpenRead         3    4    0 k(3,-,-,)     02 root=4 iDb=0; t0st
   2 Explain          2    0    0 SEARCH TABLE t1 USING COVERING INDEX t0st (a=? AND a=?) 00 
   3 Integer         12    3    0               00 r[3]=12; return address
REG[3] =  i:12
   4 Once             0   12    0               00 
   5 OpenEphemeral    4    1    0 k(1,B)        00 nColumn=1; RHS of IN operator
   6 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
   7 MakeRecord       4    1    5 A             00 r[5]=mkrec(r[4])
REG[5] =  s2[0209..]
   8 IdxInsert        4    5    4 1             00 key=r[5]
REG[5] =  s2[0209..]
   9 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  10 MakeRecord       4    1    5 A             00 r[5]=mkrec(r[4])
REG[5] =  s3[020102...]
  11 IdxInsert        4    5    4 1             00 key=r[5]
REG[5] =  s3[020102...]
  12 Return           3    0    0               00 
REG[3] =  i:12
  13 Last             4   58    0               00 
  14 Column           4    0    1               00 r[1]=
REG[1] =  i:2
  15 IsNull           1   57    0               00 if r[1]==NULL goto 57
REG[1] =  i:2
  16 Integer         44    6    0               00 r[6]=44; return address
REG[6] =  i:44
  17 Once             0   44    0               00 
  18 OpenEphemeral    5    1    0 k(1,B)        00 nColumn=1; Result of SELECT 2
  19 Explain         19    0    0 LIST SUBQUERY 2 00 
  20 InitCoroutine    7   35   21               00 subquery_1
  35 Explain         35   19    0 SCAN SUBQUERY 1 00 
  36 InitCoroutine    7    0   21               00 
  37 Yield            7   44    0               00 next row of subquery_1
REG[7] =  i:20
REG[7] =  i:37
  21 Explain         21   19    0 CO-ROUTINE 1  00 
  22 Null             1   11    0               08 r[11]=NULL
REG[11] =  NULL
  23 OpenRead         7    4    0 k(3,-,-,)     00 root=4 iDb=0; t0st
  24 Explain         24   21    0 SEARCH TABLE t1 USING COVERING INDEX t0st (a=? AND a=?) 00 
  25 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  26 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  27 SeekGE           7   34    8 2             00 key=r[8..9]
REG[8] =  i:1
  34 EndCoroutine     7    0    0               00 
REG[7] =  i:37
  44 Return           6    0    0               00 
REG[6] =  i:44
  45 Last             5   57    0               00 
  57 Prev             4   14    0               00 
  14 Column           4    0    1               00 r[1]=
REG[1] =  i:1
  15 IsNull           1   57    0               00 if r[1]==NULL goto 57
REG[1] =  i:1
  16 Integer         44    6    0               00 r[6]=44; return address
REG[6] =  i:44
  17 Once             1   44    0               00 
  44 Return           6    0    0               00 
REG[6] =  i:44
  45 Last             5   57    0               00 
  57 Prev             4   14    0               00 
  58 Halt             0    0    0               00 
SQL: [;
-- 8
        INSERT INTO t1 SELECT randomblob(800) FROM t1;]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      0    1    3 1             01 usesStmtJournal=0
  39 Integer        800    4    0               00 r[4]=800
REG[4] =  i:800
  40 Goto             0    1    0               00 
   1 InitCoroutine    3    9    2               00 
   9 OpenEphemeral    1    1    0               00 nColumn=1
  10 Yield            3   15    0               00 
REG[3] =  i:1
REG[3] =  i:10
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0    8    0               00 
   8 EndCoroutine     3    0    0               00 
REG[3] =  i:10
  15 OpenWrite        2    2    0 1             00 root=2 iDb=0; t1
  16 OpenWrite        3    4    0 k(3,-,-,)     00 root=4 iDb=0; t0st
  17 OpenWrite        4    3    0 k(3,-,-,)     00 root=3 iDb=0; b
  18 Rewind           1   36    0               00 
  36 Close            1    0    0               00 
  37 Halt             0    0    0               00 
SQL: [;
-- 8192
      COMMIT;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    0    0               00 
SQL: [;
SELECT printf('|%7.8c|%-7.8c|','*','*');]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 |%7.8c|%-7.8c| 00 r[3]='|%7.8c|%-7.8c|'
REG[3] =   t14[|%7.8c|%-7.8c|](8)
   6 String8          0    4    0 *             00 r[4]='*'
REG[4] =   t1[*](8)
   7 String8          0    5    0 *             00 r[5]='*'
REG[5] =   t1[*](8)
   8 Function0        7    3    2 printf(-1)    03 r[2]=func(r[3..5])
REG[3] =   t14[|%7.8c|%-7.8c|](8)
REG[4] =   t1[*](8)
REG[5] =   t1[*](8)
REG[2] =   s19[|********|*****](8)
   9 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s19[|********|*****](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s19[|********|*****](8)
   4 Halt             0    0    0               00 
SQL: [;
SELECT DISTINCT a, a FROM t1 ;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    3 1             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Null             1    3    0               08 r[3]=NULL
REG[3] =  NULL
   2 OpenRead         2    4    0 k(3,-,-,)     00 root=4 iDb=0; t0st
   3 Explain          3    0    0 SCAN TABLE t1 USING COVERING INDEX t0st 00 
   4 Rewind           2   12    1 0             00 
  12 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
SQL: [;
SELECT printf('|%,d|%,d|',12345,-12345);]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 |%,d|%,d|     00 r[3]='|%,d|%,d|'
REG[3] =   t9[|%,d|%,d|](8)
   6 Integer       12345    4    0               00 r[4]=12345
REG[4] =  i:12345
   7 Integer       -12345    5    0               00 r[5]=-12345
REG[5] =  i:-12345
   8 Function0        7    3    2 printf(-1)    03 r[2]=func(r[3..5])
REG[3] =   t9[|%,d|%,d|](8)
REG[4] =  i:12345
REG[5] =  i:-12345
REG[2] =   s16[|12,345|-12,345](8)
   9 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s16[|12,345|-12,345](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s16[|12,345|-12,345](8)
   4 Halt             0    0    0               00 
SQL: [;
SELECT printf('(%3.3c)',char(1492));]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 (%3.3c)       00 r[3]='(%3.3c)'
REG[3] =   t7[(%3.3c)](8)
   6 Integer       1492    5    0               00 r[5]=1492
REG[5] =  i:1492
   7 Function0        1    5    4 char(-1)      01 r[4]=func(r[5])
REG[5] =  i:1492
REG[4] =   z2[..](8)
   8 Function0        3    3    2 printf(-1)    02 r[2]=func(r[3..4])
REG[3] =   t7[(%3.3c)](8)
REG[4] =   z2[..](8)
REG[2] =   s8[(......)](8)
   9 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s8[(......)](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s8[(......)](8)
   4 Halt             0    0    0               00 
SQL: [;
PRAGMA auto_vacuum;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Int64            0    1    0 0             00 r[1]=0
REG[1] =  i:0
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   3 Halt             0    0    0               00 
SQL: [SELECT a FROM t1 WHERE a=0 OR a<0 ORDER BY a;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 1             01 usesStmtJournal=0
  17 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  18 Goto             0    1    0               00 
   1 Noop             1    3    0               00 
   2 OpenRead         2    4    0 k(3,-,-,)     00 root=4 iDb=0; t0st
   3 Explain          3    0    0 SEARCH TABLE t1 USING COVERING INDEX t0st (a<?) 00 
   4 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   5 SeekLT           2   15    1 1             00 key=r[1]
REG[1] =  NULL
  15 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 1             01 usesStmtJournal=0
  16 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s18[CREATE TABLE t1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t1](8)
REG[5] =  i:2
REG[6] =   s18[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[b](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s37[CREATE INDEX b ](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[b](8)
REG[5] =  i:3
REG[6] =   s37[CREATE INDEX b ](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t0st](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s40[CREATE INDEX t0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t0st](8)
REG[5] =  i:4
REG[6] =   s40[CREATE INDEX t0](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
SQL: [SELECT a, a, a FROM t1;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    3 1             01 usesStmtJournal=0
  11 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0    9    0               00 
   9 Halt             0    0    0               00 
SQL: [;
SELECT printf('(%!-5.3s)','הנה מה־טוב ומה־נעים שבת אחים גם־יחד');]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 (%!-5.3s)     00 r[3]='(%!-5.3s)'
REG[3] =   t9[(%!-5.3s)](8)
   6 String8          0    4    0 הנה מה־טוב ומה־נעים שבת אחים גם־יחד 00 r[4]='הנה מה־טוב ומה־נעים שבת אחים גם־יחד'
REG[4] =   t65[...... ........](8)
   7 Function0        3    3    2 printf(-1)    02 r[2]=func(r[3..4])
REG[3] =   t9[(%!-5.3s)](8)
REG[4] =   t65[...... ........](8)
REG[2] =   s10[(......  )](8)
   8 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s10[(......  )](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s10[(......  )](8)
   4 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    3 1             01 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s18[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s18[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[b](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s37[CREATE INDEX b ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[b](8)
REG[2] =  i:3
REG[3] =   s37[CREATE INDEX b ](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t0st](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s40[CREATE INDEX t0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s4[t0st](8)
REG[2] =  i:4
REG[3] =   s40[CREATE INDEX t0](8)
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007ff013cdc859 in __GI_abort () at abort.c:79
#2  0x00007ff013cdc729 in __assert_fail_base (fmt=0x7ff013e72588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21b92e "pItem->addrFillSub==0", file=0x22873d "sqlite3.c", line=130468, function=<optimized out>)
    at assert.c:92
#3  0x00007ff013cedfd6 in __GI___assert_fail (assertion=0x21b92e "pItem->addrFillSub==0", file=0x22873d "sqlite3.c", line=130468, function=0x223e82 "int sqlite3Select(Parse *, Select *, SelectDest *)") at assert.c:101
#4  0x00000000002fcfa0 in sqlite3Select (pParse=0x7ffeb374c3c0, p=0x8e9a90, pDest=0x7ffeb374ac58) at sqlite3.c:130468
#5  0x000000000034f659 in sqlite3CodeSubselect (pParse=0x7ffeb374c3c0, pExpr=0x8e4f90) at sqlite3.c:99820
#6  0x000000000034bbfd in sqlite3ExprCodeTarget (pParse=0x7ffeb374c3c0, pExpr=0x8e4f90, target=7) at sqlite3.c:100770
#7  0x00000000003790ab in codeEqualityTerm (pParse=0x7ffeb374c3c0, pTerm=0x8d5c60, pLevel=0x8d5fc0, iEq=1, bRev=0, iTarget=7) at sqlite3.c:136648
#8  0x000000000037a706 in codeAllEqualityTerms (pParse=0x7ffeb374c3c0, pLevel=0x8d5fc0, bRev=0, nExtraReg=0, pzAff=0x7ffeb374b1d8) at sqlite3.c:136869
#9  0x0000000000375cb8 in sqlite3WhereCodeOneLoopStart (pParse=0x7ffeb374c3c0, v=0x8e5da0, pWInfo=0x8d5bd0, iLevel=1, pLevel=0x8d5fc0, notReady=18446744073709551614) at sqlite3.c:137776
#10 0x000000000036c3cc in sqlite3WhereBegin (pParse=0x7ffeb374c3c0, pTabList=0x8ded20, pWhere=0x8e8320, pOrderBy=0x0, pResultSet=0x8d7ca0, wctrlFlags=0, iAuxArg=320) at sqlite3.c:145128
#11 0x00000000002fdcea in sqlite3Select (pParse=0x7ffeb374c3c0, p=0x8eb6b0, pDest=0x7ffeb374b7b0) at sqlite3.c:130695
#12 0x00000000002ecaa8 in yy_reduce (yypParser=0x7ffeb374b9e0, yyruleno=79, yyLookahead=1, yyLookaheadToken=..., pParse=0x7ffeb374c3c0) at sqlite3.c:151581
#13 0x00000000002e92f8 in sqlite3Parser (yyp=0x7ffeb374b9e0, yymajor=1, yyminor=...) at sqlite3.c:152877
#14 0x00000000002a68b3 in sqlite3RunParser (pParse=0x7ffeb374c3c0, 
    zSql=0x8f5cbf ";SELECT a FROM t1 WHERE ((123||'xabcdefghijklmnopqrstuvwyxz01234567890'||a) BETWEEN '123a' AND '123b')<0 ORDER BY a;;\nPRAGMA query_only;SELECT a FROM t1 WHERE ((a between 1 and 2 OR 0) AND 1) OR 0 ORD"..., pzErrMsg=0x7ffeb374c5a0) at sqlite3.c:154013
#15 0x00000000002a1683 in sqlite3Prepare (db=0x8cf4f0, 
    zSql=0x8d0181 ";\nSELECT\n    SrcWord, t1.a\n    FROM \n      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )\n    LEFT JOIN \n      t1\n    WHERE t1.a= (\n      SELECT BeginningId FROM (\n        SELECT "..., nBytes=1306, prepFlags=128, pReprepare=0x0, ppStmt=0x7ffeb374c6d8, pzTail=0x7ffeb374c6c0) at sqlite3.c:124303
#16 0x00000000002a0d4e in sqlite3LockAndPrepare (db=0x8cf4f0, 
    zSql=0x8d0181 ";\nSELECT\n    SrcWord, t1.a\n    FROM \n      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )\n    LEFT JOIN \n      t1\n    WHERE t1.a= (\n      SELECT BeginningId FROM (\n        SELECT "..., nBytes=1306, prepFlags=128, pOld=0x0, ppStmt=0x7ffeb374c6d8, pzTail=0x7ffeb374c6c0) at sqlite3.c:124403
#17 0x000000000029247f in sqlite3_prepare_v2 (db=0x8cf4f0, 
    zSql=0x8d0181 ";\nSELECT\n    SrcWord, t1.a\n    FROM \n      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )\n    LEFT JOIN \n      t1\n    WHERE t1.a= (\n      SELECT BeginningId FROM (\n        SELECT "..., nBytes=1306, ppStmt=0x7ffeb374c6d8, pzTail=0x7ffeb374c6c0) at sqlite3.c:124487
#18 0x0000000000256bd0 in main (argc=1, argv=0x7ffeb374c888) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 6189] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
