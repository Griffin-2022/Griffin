GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000126,sig:06,src:020074+017347,time:17047890,execs:3464163,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
PRAGMA vdbe_listing=on;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
PRAGMA page_size = 4096 ;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [;
CREATE TABLE t1(
       a    INT NOT NULL CHECK (typeof(a) == 'integer'),
       b     REAL CHECK (typeof(b) == 'real')
    );]
VDBE Program Listing:
   0 Init             0   28    0               00 Start at 28
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
  16 Rowid            1    5    0               00 r[5]=rowid
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
  18 String8          0    6    0 table         00 r[6]='table'
  19 String8          0    7    0 t1            00 r[7]='t1'
  20 String8          0    8    0 t1            00 r[8]='t1'
  21 Copy             2    9    0               00 r[9]=r[2]
  22 String8          0   10    0 CREATE TABLE t1(
       a    INT NOT NULL CHECK (typeof(a) == 'integer'),
       b     REAL CHECK (typeof(b) == 'real')
    ) 00 r[10]='CREATE TABLE t1(
       a    INT NOT NULL CHECK (typeof(a) == 'integer'),
       b     REAL 
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
  25 SetCookie        0    1    1               00 
  26 ParseSchema      0    0    0 tbl_name='t1' AND type!='trigger' 00 
  27 Halt             0    0    0               00 
  28 Transaction      0    1    0 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    1 0             00 usesStmtJournal=0
  16 String8          0    2    0 t1            00 r[2]='t1'
  17 String8          0    3    0 trigger       00 r[3]='trigger'
  18 Goto             0    1    0               00 
SQL: [;
INSERT INTO t1 VALUES(3, 4);]
VDBE Program Listing:
   0 Init             0   19    0               00 Start at 19
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 NewRowid         0    1    0               00 r[1]=rowid
   3 Integer          3    2    0               00 r[2]=3
   4 Integer          4    3    0               00 r[3]=4
   5 HaltIfNull    1299    2    2 t1.a          01 if r[2]=null halt
   6 Abortable        0    0    0               00 
   7 Copy             2    5    0               00 r[5]=r[2]
   8 PureFunc0        0    5    4 typeof(1)     01 
   9 Eq               6   11    4               51 if r[4]==r[6] goto 11
  10 Halt           275    2    0 t1            03 
  11 Abortable        0    0    0               00 
  12 Copy             3    5    0               00 r[5]=r[3]
  13 PureFunc0        0    5    4 typeof(1)     01 
  14 Eq               7   16    4               51 if r[4]==r[7] goto 16
  15 Halt           275    2    0 t1            03 
  16 MakeRecord       2    2    4 DE            00 r[4]=mkrec(r[2..3])
  17 Insert           0    4    1 t1            39 intkey=r[1] data=r[4]
  18 Halt             0    0    0               00 
  19 Transaction      0    1    1 0             01 usesStmtJournal=0
  20 String8          0    6    0 integer       00 r[6]='integer'
  21 String8          0    7    0 real          00 r[7]='real'
  22 Goto             0    1    0               00 
SQL: [;;
CREATE INDEX t0st ON t1(b DESC, b DESC) ;]
VDBE Program Listing:
   0 Init             0   36    0               00 Start at 36
   1 Noop             0   35    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
   5 String8          0    3    0 index         00 r[3]='index'
   6 String8          0    4    0 t0st          00 r[4]='t0st'
   7 String8          0    5    0 t1            00 r[5]='t1'
   8 Copy             1    6    0               00 r[6]=r[1]
   9 String8          0    7    0 CREATE INDEX t0st ON t1(b DESC, b DESC)  00 r[7]='CREATE INDEX t0st ON t1(b DESC, b DESC) '
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
  12 SorterOpen       3    0    2 k(3,-,-,)     00 
  13 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  14 Rewind           1   23    0               00 
  15 Column           1    1   10               00 r[10]=t1.b
  16 Noop            10    0    0               00 
  17 Column           1    1   11               00 r[11]=t1.b
  18 Noop            11    0    0               00 
  19 Rowid            1   12    0               00 r[12]=rowid
  20 MakeRecord      10    3    9               00 r[9]=mkrec(r[10..12])
  21 SorterInsert     3    9    0               00 key=r[9]
  22 Next             1   15    0               00 
  23 OpenWrite        2    1    0 k(3,-,-,)     11 root=1 iDb=0
  24 SorterSort       3   29    0               00 
  25 SorterData       3    9    2               00 r[9]=data
  26 SeekEnd          2    0    0               00 
  27 IdxInsert        2    9    0               10 key=r[9]
  28 SorterNext       3   25    0               00 
  29 Close            1    0    0               00 
  30 Close            2    0    0               00 
  31 Close            3    0    0               00 
  32 SetCookie        0    1    2               00 
  33 ParseSchema      0    0    0 name='t0st' AND type='index' 00 
  34 Expire           0    1    0               00 
  35 Halt             0    0    0               00 
  36 Transaction      0    1    1 0             01 usesStmtJournal=0
  37 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    2 0             00 usesStmtJournal=0
  16 String8          0    2    0 t0st          00 r[2]='t0st'
  17 String8          0    3    0 index         00 r[3]='index'
  18 Goto             0    1    0               00 
SQL: [;
ATTACH printf('file:%09000x/x.db?mode=memory&cache=shared',1) AS aux1;]
VDBE Program Listing:
   0 Init             0    7    0               00 Start at 7
   1 SCopy            5    1    0               00 r[1]=r[5]
   2 String8          0    2    0 aux1          00 r[2]='aux1'
   3 Null             0    3    0               00 r[3]=NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
   7 String8          0    6    0 file:%09000x/x.db?mode=memory&cache=shared 00 r[6]='file:%09000x/x.db?mode=memory&cache=shared'
   8 Integer          1    7    0               00 r[7]=1
   9 Function0        3    6    5 printf(-1)    02 r[5]=func(r[6..7])
  10 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   11    0               00 Start at 11
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
   8 ResultRow        1    3    0               00 output=r[1..3]
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
  11 Transaction      0    0    2 1             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
SQL: [;
SELECT count(*), max(b), min(b) FROM t1;]
VDBE Program Listing:
   0 Init             0   21    0               00 Start at 21
   1 Null             0    1    4               00 r[1..4]=NULL
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   15    0               00 
   5 AggStep          0    0    1 count(0)      00 accum=r[1] step(r[0])
   6 Column           0    1    5               00 r[5]=t1.b
   7 RealAffinity     5    0    0               00 
   8 CollSeq          0    0    0 (BINARY)      00 
   9 AggStep          0    5    2 max(1)        01 accum=r[2] step(r[5])
  10 Column           0    1    5               00 r[5]=t1.b
  11 RealAffinity     5    0    0               00 
  12 CollSeq          0    0    0 (BINARY)      00 
  13 AggStep          0    5    3 min(1)        01 accum=r[3] step(r[5])
  14 Next             0    5    0               01 
  15 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  16 AggFinal         2    1    0 max(1)        00 accum=r[2] N=1
  17 AggFinal         3    1    0 min(1)        00 accum=r[3] N=1
  18 Copy             1    6    2               00 r[6..8]=r[1..3]
  19 ResultRow        6    3    0               00 output=r[6..8]
  20 Halt             0    0    0               00 
  21 Transaction      0    0    2 1             01 usesStmtJournal=0
  22 Goto             0    1    0               00 
SQL: [;
ATTACH 'test2.db' AS aux;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 String8          0    1    0 test2.db      00 r[1]='test2.db'
   2 String8          0    2    0 aux           00 r[2]='aux'
   3 Null             0    3    0               00 r[3]=NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
VDBE Program Listing:
   0 Init             0   11    0               00 Start at 11
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
   8 ResultRow        1    3    0               00 output=r[1..3]
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
  11 Transaction      2    0  205 0             00 usesStmtJournal=0
  12 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  13 Goto             0    1    0               00 
SQL: [;
ATTACH printf('file:%09000x/x.db?mode=memory&cache=shared',1) AS aux1;]
VDBE Program Listing:
   0 Init             0    7    0               00 Start at 7
   1 SCopy            5    1    0               00 r[1]=r[5]
   2 String8          0    2    0 aux1          00 r[2]='aux1'
   3 Null             0    3    0               00 r[3]=NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
   7 String8          0    6    0 file:%09000x/x.db?mode=memory&cache=shared 00 r[6]='file:%09000x/x.db?mode=memory&cache=shared'
   8 Integer          1    7    0               00 r[7]=1
   9 Function0        3    6    5 printf(-1)    02 r[5]=func(r[6..7])
  10 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   11    0               00 Start at 11
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
   8 ResultRow        1    3    0               00 output=r[1..3]
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
  11 Transaction      0    0    2 2             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    2 2             01 usesStmtJournal=0
  16 String8          0    2    0 t1            00 r[2]='t1'
  17 String8          0    3    0 trigger       00 r[3]='trigger'
  18 Goto             0    1    0               00 
SQL: [ROLLBACK;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    1    0               00 
   2 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='f' AND type='index' ORDER BY rowid;]
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    2 2             01 usesStmtJournal=0
  16 String8          0    2    0 f             00 r[2]='f'
  17 String8          0    3    0 index         00 r[3]='index'
  18 Goto             0    1    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f5ac9b28859 in __GI_abort () at abort.c:79
#2  0x00007f5ac9b28729 in __assert_fail_base (fmt=0x7f5ac9cbe588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21b92e "pItem->addrFillSub==0", file=0x22873d "sqlite3.c", line=130468, function=<optimized out>)
    at assert.c:92
#3  0x00007f5ac9b39fd6 in __GI___assert_fail (assertion=0x21b92e "pItem->addrFillSub==0", file=0x22873d "sqlite3.c", line=130468, function=0x223e82 "int sqlite3Select(Parse *, Select *, SelectDest *)") at assert.c:101
#4  0x00000000002fcfa0 in sqlite3Select (pParse=0x7ffe4b334d80, p=0x130d2f0, pDest=0x7ffe4b333618) at sqlite3.c:130468
#5  0x000000000034f659 in sqlite3CodeSubselect (pParse=0x7ffe4b334d80, pExpr=0x1313ec0) at sqlite3.c:99820
#6  0x000000000034bbfd in sqlite3ExprCodeTarget (pParse=0x7ffe4b334d80, pExpr=0x1313ec0, target=7) at sqlite3.c:100770
#7  0x00000000003790ab in codeEqualityTerm (pParse=0x7ffe4b334d80, pTerm=0x1306c60, pLevel=0x1306fc0, iEq=1, bRev=0, iTarget=7) at sqlite3.c:136648
#8  0x000000000037a706 in codeAllEqualityTerms (pParse=0x7ffe4b334d80, pLevel=0x1306fc0, bRev=0, nExtraReg=0, pzAff=0x7ffe4b333b98) at sqlite3.c:136869
#9  0x0000000000375cb8 in sqlite3WhereCodeOneLoopStart (pParse=0x7ffe4b334d80, v=0x130ce40, pWInfo=0x1306bd0, iLevel=1, pLevel=0x1306fc0, notReady=18446744073709551614) at sqlite3.c:137776
#10 0x000000000036c3cc in sqlite3WhereBegin (pParse=0x7ffe4b334d80, pTabList=0x1302a30, pWhere=0x130b6d0, pOrderBy=0x0, pResultSet=0x1310b30, wctrlFlags=0, iAuxArg=320) at sqlite3.c:145128
#11 0x00000000002fdcea in sqlite3Select (pParse=0x7ffe4b334d80, p=0x1315ae0, pDest=0x7ffe4b334170) at sqlite3.c:130695
#12 0x00000000002ecaa8 in yy_reduce (yypParser=0x7ffe4b3343a0, yyruleno=79, yyLookahead=1, yyLookaheadToken=..., pParse=0x7ffe4b334d80) at sqlite3.c:151581
#13 0x00000000002e92f8 in sqlite3Parser (yyp=0x7ffe4b3343a0, yymajor=1, yyminor=...) at sqlite3.c:152877
#14 0x00000000002a68b3 in sqlite3RunParser (pParse=0x7ffe4b334d80, 
    zSql=0x13265af ";;;\nSELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='k00000d' AND type!='trigger' ORDER BY rowid;CREATE TABLE t0st_content(\n     t0st_segments  TEXT PRIMARY KEY,\n     t0st_segdir  "..., pzErrMsg=0x7ffe4b334f60) at sqlite3.c:154013
#15 0x00000000002a1683 in sqlite3Prepare (db=0x12f82b0, 
    zSql=0x12fb6b2 ";\nSELECT\n    SrcWord, t1.b\n    FROM \n      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )\n    LEFT JOIN \n      t1\n    WHERE t1.b= (\n      SELECT BeginningId FROM (\n        SELECT "..., nBytes=3608, prepFlags=128, pReprepare=0x0, ppStmt=0x7ffe4b335098, pzTail=0x7ffe4b335080) at sqlite3.c:124303
#16 0x00000000002a0d4e in sqlite3LockAndPrepare (db=0x12f82b0, 
    zSql=0x12fb6b2 ";\nSELECT\n    SrcWord, t1.b\n    FROM \n      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )\n    LEFT JOIN \n      t1\n    WHERE t1.b= (\n      SELECT BeginningId FROM (\n        SELECT "..., nBytes=3608, prepFlags=128, pOld=0x0, ppStmt=0x7ffe4b335098, pzTail=0x7ffe4b335080) at sqlite3.c:124403
#17 0x000000000029247f in sqlite3_prepare_v2 (db=0x12f82b0, 
    zSql=0x12fb6b2 ";\nSELECT\n    SrcWord, t1.b\n    FROM \n      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )\n    LEFT JOIN \n      t1\n    WHERE t1.b= (\n      SELECT BeginningId FROM (\n        SELECT "..., nBytes=3608, ppStmt=0x7ffe4b335098, pzTail=0x7ffe4b335080) at sqlite3.c:124487
#18 0x0000000000256bd0 in main (argc=1, argv=0x7ffe4b335248) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 7078] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
