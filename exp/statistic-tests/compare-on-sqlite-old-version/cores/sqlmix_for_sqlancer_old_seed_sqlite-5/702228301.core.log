GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000187,sig:06,src:020071+017710,time:27785150,execs:6273893,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    0 0             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    0 0             01 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    0 0             01 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
SQL: [CREATE TABLE t1(a, b, PRIMARY KEY(a, b)) WITHOUT ROWID;]
VDBE Trace:
   0 Init             0   39    0               00 Start at 39
  39 Transaction      0    1    0 0             01 usesStmtJournal=0
  40 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    2               00 r[2]=root iDb=0 flags=2
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Goto             0   22    0               00 
  22 Close            0    0    0               00 
  23 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  24 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  25 Explain         25    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  26 SeekRowid        2   28    1               00 intkey=r[1]
REG[1] =  i:1
  27 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:1
  28 IsNull          13   36    0               00 if r[13]==NULL goto 36
REG[13] =  i:1
  29 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  30 String8          0   15    0 t1            00 r[15]='t1'
REG[15] =   t2[t1](8)
  31 String8          0   16    0 t1            00 r[16]='t1'
REG[16] =   t2[t1](8)
  32 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:2
  33 String8          0   18    0 CREATE TABLE t1(a, b, PRIMARY KEY(a, b)) WITHOUT ROWID 00 r[18]='CREATE TABLE t1(a, b, PRIMARY KEY(a, b)) WITHOUT ROWID'
REG[18] =   t54[CREATE TABLE t1](8)
  34 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s70[0617111101797461626C657431743102.....ytablet1t1.]
  35 Insert           2   19   13               00 intkey=r[13] data=r[19]
REG[19] =  s70[0617111101797461626C657431743102.....ytablet1t1.]
REG[13] =  i:1
  36 SetCookie        0    1    1               00 
  37 ParseSchema      0    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    1 0             00 usesStmtJournal=0
  16 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s54[CREATE TABLE t1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t1](8)
REG[5] =  i:2
REG[6] =   s54[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  38 Halt             0    0    0               00 
SQL: [;
BEGIN;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
SQL: [SELECT 1e0+?;]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 Real             0    2    0 1             00 r[2]=1
REG[2] =  r:1
   6 Variable         1    3    0               00 r[3]=parameter(1,)
REG[3] =  NULL
   7 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Add              3    2    1               00 r[1]=r[3]+r[2]
REG[3] =  NULL
REG[2] =  r:1
REG[1] =  NULL
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   4 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
SQL: [;
ATTACH printf('file:%09000x/x.db?mode=memory&cache=shared',1) AS aux1;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 String8          0    6    0 file:%09000x/x.db?mode=memory&cache=shared 00 r[6]='file:%09000x/x.db?mode=memory&cache=shared'
REG[6] =   t42[file:%09000x/x.](8)
   8 Integer          1    7    0               00 r[7]=1
REG[7] =  i:1
   9 Function0        3    6    5 printf(-1)    02 r[5]=func(r[6..7])
REG[6] =   t42[file:%09000x/x.](8)
REG[7] =  i:1
REG[5] =   s9035[file:0000000000](8)
  10 Goto             0    1    0               00 
   1 SCopy            5    1    0               00 r[1]=r[5]
REG[1] =   e9035[file:0000000000](8)
   2 String8          0    2    0 aux1          00 r[2]='aux1'
REG[2] =   t4[aux1](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   e9035[file:0000000000](8)
REG[2] =   t4[aux1](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    1 1             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s54[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s54[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
SQL: [;
INSERT INTO t1 VALUES(1, 'i');]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1    1 1             01 usesStmtJournal=0
  17 Goto             0    1    0               00 
   1 OpenWrite        1    2    0 k(2,,)        00 root=2 iDb=0; sqlite_autoindex_t1_1
   2 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 String8          0    3    0 i             00 r[3]='i'
REG[3] =   t1[i](8)
   5 HaltIfNull    1299    2    2 t1.a          01 if r[2]=null halt
REG[2] =  i:1
   6 HaltIfNull    1299    2    3 t1.b          01 if r[3]=null halt
REG[3] =   t1[i](8)
   7 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t1_1
   8 SCopy            2    5    0               00 r[5]=r[2]; a
REG[5] =  i:1
   9 SCopy            3    6    0               00 r[6]=r[3]; b
REG[6] =   t1[i](8)
  10 MakeRecord       5    2    4               00 r[4]=mkrec(r[5..6]); for sqlite_autoindex_t1_1
REG[4] =  s4[03090F69...i]
  11 Abortable        0    0    0               00 
  12 NoConflict       1   14    5 2             00 key=r[5..6]
REG[5] =  i:1
REG[6] =   t1[i](8)
  14 IdxInsert        1    4    5 2             11 key=r[4]
REG[4] =  s4[03090F69...i]
  15 Halt             0    0    0               00 
SQL: [;
INSERT INTO t1 VALUES(16, '  123e4');]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1    1 1             01 usesStmtJournal=0
  17 Goto             0    1    0               00 
   1 OpenWrite        1    2    0 k(2,,)        00 root=2 iDb=0; sqlite_autoindex_t1_1
   2 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   3 Integer         16    2    0               00 r[2]=16
REG[2] =  i:16
   4 String8          0    3    0   123e4       00 r[3]='  123e4'
REG[3] =   t7[  123e4](8)
   5 HaltIfNull    1299    2    2 t1.a          01 if r[2]=null halt
REG[2] =  i:16
   6 HaltIfNull    1299    2    3 t1.b          01 if r[3]=null halt
REG[3] =   t7[  123e4](8)
   7 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t1_1
   8 SCopy            2    5    0               00 r[5]=r[2]; a
REG[5] =  i:16
   9 SCopy            3    6    0               00 r[6]=r[3]; b
REG[6] =   t7[  123e4](8)
  10 MakeRecord       5    2    4               00 r[4]=mkrec(r[5..6]); for sqlite_autoindex_t1_1
REG[4] =  s11[03011B1020203132336534....  123e4]
  11 Abortable        0    0    0               00 
  12 NoConflict       1   14    5 2             00 key=r[5..6]
REG[5] =  i:16
REG[6] =   t7[  123e4](8)
  14 IdxInsert        1    4    5 2             11 key=r[4]
REG[4] =  s11[03011B1020203132336534....  123e4]
  15 Halt             0    0    0               00 
SQL: [;
ROLLBACK;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    1    0               00 
SQL: [SELECT typeof( CAST (0.0 AS text) ),  CAST (0.0 AS text) ;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Real             0    4    0 0             00 r[4]=0
REG[4] =  r:0
   8 Cast             4   66    0               00 affinity(r[4])
REG[4] =  r:0
   9 Function0        1    4    3 typeof(1)     01 r[3]=func(r[4])
REG[4] =   s3[0.0](8)
REG[3] =   t4[text](8)
  10 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             3    1    0               00 r[1]=r[3]
REG[1] =   t4[text](8)
   3 Real             0    2    0 0             00 r[2]=0
REG[2] =  r:0
   4 Cast             2   66    0               00 affinity(r[2])
REG[2] =  r:0
   5 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =   t4[text](8)
REG[2] =   s3[0.0](8)
   6 Halt             0    0    0               00 
SQL: [;;
CREATE INDEX t0st ON t1(b DESC, b DESC) ;]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      0    1    1 1             01 usesStmtJournal=0
  35 Goto             0    1    0               00 
   1 Noop             0   33    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:3
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:2
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 t0st          00 r[4]='t0st'
REG[4] =   t4[t0st](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:3
   9 String8          0    7    0 CREATE INDEX t0st ON t1(b DESC, b DESC)  00 r[7]='CREATE INDEX t0st ON t1(b DESC, b DESC) '
REG[7] =   t40[CREATE INDEX t0](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s58[06171511015D696E6465787430737474.....]indext0stt]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s58[06171511015D696E6465787430737474.....]indext0stt]
REG[2] =  i:2
  12 SorterOpen       3    0    2 k(3,-,-,)     00 
  13 OpenRead         1    2    0 k(2,,)        00 root=2 iDb=0; t1
  14 Rewind           1   21    0               00 
  21 OpenWrite        2    1    0 k(3,-,-,)     11 root=1 iDb=0
  22 SorterSort       3   27    0               00 
  27 Close            1    0    0               00 
  28 Close            2    0    0               00 
  29 Close            3    0    0               00 
  30 SetCookie        0    1    2               00 
  31 ParseSchema      0    0    0 name='t0st' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 1             00 usesStmtJournal=0
  16 String8          0    2    0 t0st          00 r[2]='t0st'
REG[2] =   t4[t0st](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t0st](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t0st](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t0st](8)
REG[1] =   s4[t0st](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t0st](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s40[CREATE INDEX t0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t0st](8)
REG[5] =  i:3
REG[6] =   s40[CREATE INDEX t0](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  32 Expire           0    1    0               00 
  33 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 1             01 usesStmtJournal=0
  16 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s54[CREATE TABLE t1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t1](8)
REG[5] =  i:2
REG[6] =   s54[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t0st](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s40[CREATE INDEX t0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t0st](8)
REG[5] =  i:3
REG[6] =   s40[CREATE INDEX t0](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
SQL: [;
SELECT sqlite_compileoption_used('THREADSAFE=2');]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 THREADSAFE=2  00 r[3]='THREADSAFE=2'
REG[3] =   t12[THREADSAFE=2](8)
   6 Function0        1    3    2 sqlite_compileoption_used(1) 01 r[2]=func(r[3])
REG[3] =   t12[THREADSAFE=2](8)
REG[2] =  i:0
   7 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =  i:0
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   4 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 1             01 usesStmtJournal=0
  16 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s54[CREATE TABLE t1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t1](8)
REG[5] =  i:2
REG[6] =   s54[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t0st](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s40[CREATE INDEX t0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t0st](8)
REG[5] =  i:3
REG[6] =   s40[CREATE INDEX t0](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
SQL: [;
SELECT a LIKE a FROM t1;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    2 1             01 usesStmtJournal=0
  11 Goto             0    1    0               00 
   1 OpenRead         1    2    0 k(2,,)        00 root=2 iDb=0; sqlite_autoindex_t1_1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           1    9    1 0             00 
   9 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f120aa2d859 in __GI_abort () at abort.c:79
#2  0x00007f120aa2d729 in __assert_fail_base (fmt=0x7f120abc3588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21b92e "pItem->addrFillSub==0", file=0x22873d "sqlite3.c", line=130468, function=<optimized out>)
    at assert.c:92
#3  0x00007f120aa3efd6 in __GI___assert_fail (assertion=0x21b92e "pItem->addrFillSub==0", file=0x22873d "sqlite3.c", line=130468, function=0x223e82 "int sqlite3Select(Parse *, Select *, SelectDest *)") at assert.c:101
#4  0x00000000002fcfa0 in sqlite3Select (pParse=0x7ffc2b2533b0, p=0x165b470, pDest=0x7ffc2b251c48) at sqlite3.c:130468
#5  0x000000000034f659 in sqlite3CodeSubselect (pParse=0x7ffc2b2533b0, pExpr=0x165afc0) at sqlite3.c:99820
#6  0x000000000034bbfd in sqlite3ExprCodeTarget (pParse=0x7ffc2b2533b0, pExpr=0x165afc0, target=7) at sqlite3.c:100770
#7  0x00000000003790ab in codeEqualityTerm (pParse=0x7ffc2b2533b0, pTerm=0x1654930, pLevel=0x1654c90, iEq=1, bRev=0, iTarget=7) at sqlite3.c:136648
#8  0x000000000037a706 in codeAllEqualityTerms (pParse=0x7ffc2b2533b0, pLevel=0x1654c90, bRev=0, nExtraReg=0, pzAff=0x7ffc2b2521c8) at sqlite3.c:136869
#9  0x0000000000375cb8 in sqlite3WhereCodeOneLoopStart (pParse=0x7ffc2b2533b0, v=0x165a1b0, pWInfo=0x16548a0, iLevel=1, pLevel=0x1654c90, notReady=18446744073709551614) at sqlite3.c:137776
#10 0x000000000036c3cc in sqlite3WhereBegin (pParse=0x7ffc2b2533b0, pTabList=0x166c900, pWhere=0x165ab10, pOrderBy=0x0, pResultSet=0x16653d0, wctrlFlags=0, iAuxArg=320) at sqlite3.c:145128
#11 0x00000000002fdcea in sqlite3Select (pParse=0x7ffc2b2533b0, p=0x165a660, pDest=0x7ffc2b2527a0) at sqlite3.c:130695
#12 0x00000000002ecaa8 in yy_reduce (yypParser=0x7ffc2b2529d0, yyruleno=79, yyLookahead=1, yyLookaheadToken=..., pParse=0x7ffc2b2533b0) at sqlite3.c:151581
#13 0x00000000002e92f8 in sqlite3Parser (yyp=0x7ffc2b2529d0, yymajor=1, yyminor=...) at sqlite3.c:152877
#14 0x00000000002a68b3 in sqlite3RunParser (pParse=0x7ffc2b2533b0, 
    zSql=0x16659df ";;\nSELECT name, rootpage, sql FROM \"main\".sqlite_master ORDER BY rowid;CREATE TABLE t0st_content(\n     t0st_segments  TEXT PRIMARY KEY,\n     t0st_segdir  TEXT\n  );;SELECT name, rootpage, sql FROM 'mai"..., pzErrMsg=0x7ffc2b253590) at sqlite3.c:154013
#15 0x00000000002a1683 in sqlite3Prepare (db=0x164e2b0, 
    zSql=0x164f39d ";\nSELECT\n    SrcWord, t1.b\n    FROM \n      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )\n    LEFT JOIN \n      t1\n    WHERE t1.b= (\n      SELECT BeginningId FROM (\n        SELECT "..., nBytes=726, prepFlags=128, pReprepare=0x0, ppStmt=0x7ffc2b2536c8, pzTail=0x7ffc2b2536b0) at sqlite3.c:124303
#16 0x00000000002a0d4e in sqlite3LockAndPrepare (db=0x164e2b0, 
    zSql=0x164f39d ";\nSELECT\n    SrcWord, t1.b\n    FROM \n      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )\n    LEFT JOIN \n      t1\n    WHERE t1.b= (\n      SELECT BeginningId FROM (\n        SELECT "..., nBytes=726, prepFlags=128, pOld=0x0, ppStmt=0x7ffc2b2536c8, pzTail=0x7ffc2b2536b0) at sqlite3.c:124403
#17 0x000000000029247f in sqlite3_prepare_v2 (db=0x164e2b0, 
    zSql=0x164f39d ";\nSELECT\n    SrcWord, t1.b\n    FROM \n      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )\n    LEFT JOIN \n      t1\n    WHERE t1.b= (\n      SELECT BeginningId FROM (\n        SELECT "..., nBytes=726, ppStmt=0x7ffc2b2536c8, pzTail=0x7ffc2b2536b0) at sqlite3.c:124487
#18 0x0000000000256bd0 in main (argc=1, argv=0x7ffc2b253878) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 7624] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
