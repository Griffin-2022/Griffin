GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000229,sig:06,src:022839+018369,time:3976012,execs:724860,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_listing=on;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT count(*) FROM t1 UNION ALL
     SELECT x FROM t1 WHERE x>=85;]
VDBE Program Listing:
   0 Init             0   17    0               00 Start at 17
   1 Explain          1    0    0 COMPOUND QUERY 00 
   2 Explain          2    1    0 LEFT-MOST SUBQUERY 00 
   3 OpenRead         2    2    0 1             00 root=2 iDb=0
   4 Count            2    1    0               00 r[1]=count()
   5 Close            2    0    0               00 
   6 Copy             1    2    0               00 r[2]=r[1]
   7 ResultRow        2    1    0               00 output=r[2]
   8 Explain          8    1    0 UNION ALL     00 
   9 OpenRead         3    5    0 k(2,,)        00 root=5 iDb=0; a
  10 Explain         10    8    0 SEARCH TABLE t1 USING COVERING INDEX a (x>?) 00 
  11 Integer         85    3    0               00 r[3]=85
  12 SeekGE           3   16    3 1             00 key=r[3]
  13 Column           3    0    2               00 r[2]=t1.x
  14 ResultRow        2    1    0               00 output=r[2]
  15 Next             3   13    0               00 
  16 Halt             0    0    0               00 
  17 Transaction      0    0    4 2             01 usesStmtJournal=0
  18 Goto             0    1    0               00 
SQL: [;CREATE TABLE collate4i1(d int, xyz, b, c);]
VDBE Program Listing:
   0 Init             0   28    0               00 Start at 28
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
  16 Rowid            1    5    0               00 r[5]=rowid
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
  18 String8          0    6    0 table         00 r[6]='table'
  19 String8          0    7    0 collate4i1    00 r[7]='collate4i1'
  20 String8          0    8    0 collate4i1    00 r[8]='collate4i1'
  21 Copy             2    9    0               00 r[9]=r[2]
  22 String8          0   10    0 CREATE TABLE collate4i1(d int, xyz, b, c) 00 r[10]='CREATE TABLE collate4i1(d int, xyz, b, c)'
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
  25 SetCookie        0    1    5               00 
  26 ParseSchema      0    0    0 tbl_name='collate4i1' AND type!='trigger' 00 
  27 Halt             0    0    0               00 
  28 Transaction      0    1    4 2             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    5 2             00 usesStmtJournal=0
  16 String8          0    2    0 collate4i1    00 r[2]='collate4i1'
  17 String8          0    3    0 trigger       00 r[3]='trigger'
  18 Goto             0    1    0               00 
SQL: [;CREATE TABLE xyz1(t2 int, tr1 char);]
VDBE Program Listing:
   0 Init             0   28    0               00 Start at 28
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
  16 Rowid            1    5    0               00 r[5]=rowid
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
  18 String8          0    6    0 table         00 r[6]='table'
  19 String8          0    7    0 xyz1          00 r[7]='xyz1'
  20 String8          0    8    0 xyz1          00 r[8]='xyz1'
  21 Copy             2    9    0               00 r[9]=r[2]
  22 String8          0   10    0 CREATE TABLE xyz1(t2 int, tr1 char) 00 r[10]='CREATE TABLE xyz1(t2 int, tr1 char)'
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
  25 SetCookie        0    1    6               00 
  26 ParseSchema      0    0    0 tbl_name='xyz1' AND type!='trigger' 00 
  27 Halt             0    0    0               00 
  28 Transaction      0    1    5 2             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    6 2             00 usesStmtJournal=0
  16 String8          0    2    0 xyz1          00 r[2]='xyz1'
  17 String8          0    3    0 trigger       00 r[3]='trigger'
  18 Goto             0    1    0               00 
SQL: [;
;DROP TABLE IF EXISTS xyz1;]
VDBE Program Listing:
   0 Init             0   48    0               00 Start at 48
   1 Null             0    1    0               00 r[1]=NULL
   2 OpenWrite        0    4    0 3             00 root=4 iDb=0; sqlite_stat1
   3 Explain          3    0    0 SCAN TABLE sqlite_stat1 00 
   4 Rewind           0   11    0               00 
   5 Column           0    0    2               00 r[2]=sqlite_stat1.tbl
   6 Ne               3   10    2 (BINARY)      51 if r[2]!=r[3] goto 10
   7 Rowid            0    4    0               00 r[4]=rowid
   8 Once             0    9    0               00 
   9 Delete           0    0    0 sqlite_stat1  02 
  10 Next             0    5    0               01 
  11 Null             0    5    0               00 r[5]=NULL
  12 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  13 Explain         13    0    0 SCAN TABLE sqlite_master 00 
  14 Rewind           1   23    0               00 
  15 Column           1    2    2               00 r[2]=sqlite_master.tbl_name
  16 Ne               3   22    2 (BINARY)      52 if r[2]!=r[3] goto 22
  17 Column           1    0    2               00 r[2]=sqlite_master.type
  18 Eq               6   22    2 (BINARY)      52 if r[2]==r[6] goto 22
  19 Rowid            1    7    0               00 r[7]=rowid
  20 Once             0   21    0               00 
  21 Delete           1    0    0               02 
  22 Next             1   15    0               01 
  23 Destroy          7    2    0               00 
  24 Null             0    8    9               00 r[8..9]=NULL
  25 IfNot            2   34    1               00 
  26 OpenRead         2    1    0 4             00 root=1 iDb=0; sqlite_master
  27 Explain         27    0    0 SCAN TABLE sqlite_master 00 
  28 Rewind           2   34    0               00 
  29 Column           2    3   15               00 r[15]=sqlite_master.rootpage
  30 Ne               2   33   15 (BINARY)      54 if r[15]!=r[2] goto 33
  31 Rowid            2    9    0               00 r[9]=rowid
  32 RowSetAdd        8    9    0               00 rowset(8)=r[9]
  33 Next             2   29    0               01 
  34 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  35 RowSetRead       8   45    9               00 r[9]=rowset(8)
  36 NotExists        2   35    9               00 intkey=r[9]
  37 Column           2    0   10               00 r[10]=sqlite_master.type
  38 Column           2    1   11               00 r[11]=sqlite_master.name
  39 Column           2    2   12               00 r[12]=sqlite_master.tbl_name
  40 Integer          7   13    0               00 r[13]=7
  41 Column           2    4   14               00 r[14]=sqlite_master.sql
  42 MakeRecord      10    5   15 BBBDB         00 r[15]=mkrec(r[10..14])
  43 Insert           2   15    9               00 intkey=r[9] data=r[15]
  44 Goto             0   35    0               00 
  45 DropTable        0    0    0 xyz1          00 
  46 SetCookie        0    1    7               00 
  47 Halt             0    0    0               00 
  48 Transaction      0    1    6 2             01 usesStmtJournal=1
  49 String8          0    3    0 xyz1          00 r[3]='xyz1'
  50 String8          0    6    0 trigger       00 r[6]='trigger'
  51 Goto             0    1    0               00 
SQL: [;CREATE TABLE xyz1(t2, tr1, PRIMARY KEY(t2,tr1));]
VDBE Program Listing:
   0 Init             0   39    0               00 Start at 39
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      0    4    2               00 r[4]=root iDb=0 flags=2
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
  15 String8          0    6    0 index         00 r[6]='index'
  16 String8          0    7    0 sqlite_autoindex_xyz1_1 00 r[7]='sqlite_autoindex_xyz1_1'
  17 String8          0    8    0 xyz1          00 r[8]='xyz1'
  18 Copy             4    9    0               00 r[9]=r[4]
  19 Null             0   10    0               00 r[10]=NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
  22 Close            0    0    0               00 
  23 Null             0   12   13               00 r[12..13]=NULL
  24 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  25 Explain         25    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  26 SeekRowid        2   28    1               00 intkey=r[1]
  27 Rowid            2   13    0               00 r[13]=rowid
  28 IsNull          13   36    0               00 if r[13]==NULL goto 36
  29 String8          0   14    0 table         00 r[14]='table'
  30 String8          0   15    0 xyz1          00 r[15]='xyz1'
  31 String8          0   16    0 xyz1          00 r[16]='xyz1'
  32 Copy             2   17    0               00 r[17]=r[2]
  33 String8          0   18    0 CREATE TABLE xyz1(t2, tr1, PRIMARY KEY(t2,tr1)) 00 r[18]='CREATE TABLE xyz1(t2, tr1, PRIMARY KEY(t2,tr1))'
  34 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
  35 Insert           2   19   13               00 intkey=r[13] data=r[19]
  36 SetCookie        0    1    8               00 
  37 ParseSchema      0    0    0 tbl_name='xyz1' AND type!='trigger' 00 
  38 Halt             0    0    0               00 
  39 Transaction      0    1    7 2             01 usesStmtJournal=0
  40 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    8 2             00 usesStmtJournal=0
  16 String8          0    2    0 xyz1          00 r[2]='xyz1'
  17 String8          0    3    0 trigger       00 r[3]='trigger'
  18 Goto             0    1    0               00 
SQL: [;DROP TABLE IF EXISTS xyz1;]
VDBE Program Listing:
   0 Init             0   70    0               00 Start at 70
   1 Null             0    1    0               00 r[1]=NULL
   2 OpenWrite        0    4    0 3             00 root=4 iDb=0; sqlite_stat1
   3 Explain          3    0    0 SCAN TABLE sqlite_stat1 00 
   4 Rewind           0   11    0               00 
   5 Column           0    0    2               00 r[2]=sqlite_stat1.tbl
   6 Ne               3   10    2 (BINARY)      51 if r[2]!=r[3] goto 10
   7 Rowid            0    4    0               00 r[4]=rowid
   8 Once             0    9    0               00 
   9 Delete           0    0    0 sqlite_stat1  02 
  10 Next             0    5    0               01 
  11 Null             0    5    0               00 r[5]=NULL
  12 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  13 Explain         13    0    0 SCAN TABLE sqlite_master 00 
  14 Rewind           1   23    0               00 
  15 Column           1    2    2               00 r[2]=sqlite_master.tbl_name
  16 Ne               3   22    2 (BINARY)      52 if r[2]!=r[3] goto 22
  17 Column           1    0    2               00 r[2]=sqlite_master.type
  18 Eq               6   22    2 (BINARY)      52 if r[2]==r[6] goto 22
  19 Rowid            1    7    0               00 r[7]=rowid
  20 Once             0   21    0               00 
  21 Delete           1    0    0               02 
  22 Next             1   15    0               01 
  23 Destroy          8    2    0               00 
  24 Null             0    8    9               00 r[8..9]=NULL
  25 IfNot            2   34    1               00 
  26 OpenRead         2    1    0 4             00 root=1 iDb=0; sqlite_master
  27 Explain         27    0    0 SCAN TABLE sqlite_master 00 
  28 Rewind           2   34    0               00 
  29 Column           2    3   15               00 r[15]=sqlite_master.rootpage
  30 Ne               2   33   15 (BINARY)      54 if r[15]!=r[2] goto 33
  31 Rowid            2    9    0               00 r[9]=rowid
  32 RowSetAdd        8    9    0               00 rowset(8)=r[9]
  33 Next             2   29    0               01 
  34 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  35 RowSetRead       8   45    9               00 r[9]=rowset(8)
  36 NotExists        2   35    9               00 intkey=r[9]
  37 Column           2    0   10               00 r[10]=sqlite_master.type
  38 Column           2    1   11               00 r[11]=sqlite_master.name
  39 Column           2    2   12               00 r[12]=sqlite_master.tbl_name
  40 Integer          8   13    0               00 r[13]=8
  41 Column           2    4   14               00 r[14]=sqlite_master.sql
  42 MakeRecord      10    5   15 BBBDB         00 r[15]=mkrec(r[10..14])
  43 Insert           2   15    9               00 intkey=r[9] data=r[15]
  44 Goto             0   35    0               00 
  45 Destroy          7    2    0               00 
  46 Null             0   17   18               00 r[17..18]=NULL
  47 IfNot            2   56    1               00 
  48 OpenRead         3    1    0 4             00 root=1 iDb=0; sqlite_master
  49 Explain         49    0    0 SCAN TABLE sqlite_master 00 
  50 Rewind           3   56    0               00 
  51 Column           3    3   16               00 r[16]=sqlite_master.rootpage
  52 Ne               2   55   16 (BINARY)      54 if r[16]!=r[2] goto 55
  53 Rowid            3   18    0               00 r[18]=rowid
  54 RowSetAdd       17   18    0               00 rowset(17)=r[18]
  55 Next             3   51    0               01 
  56 OpenWrite        3    1    0 5             00 root=1 iDb=0; sqlite_master
  57 RowSetRead      17   67   18               00 r[18]=rowset(17)
  58 NotExists        3   57   18               00 intkey=r[18]
  59 Column           3    0   19               00 r[19]=sqlite_master.type
  60 Column           3    1   20               00 r[20]=sqlite_master.name
  61 Column           3    2   21               00 r[21]=sqlite_master.tbl_name
  62 Integer          7   22    0               00 r[22]=7
  63 Column           3    4   23               00 r[23]=sqlite_master.sql
  64 MakeRecord      19    5   16 BBBDB         00 r[16]=mkrec(r[19..23])
  65 Insert           3   16   18               00 intkey=r[18] data=r[16]
  66 Goto             0   57    0               00 
  67 DropTable        0    0    0 xyz1          00 
  68 SetCookie        0    1    9               00 
  69 Halt             0    0    0               00 
  70 Transaction      0    1    8 2             01 usesStmtJournal=1
  71 String8          0    3    0 xyz1          00 r[3]='xyz1'
  72 String8          0    6    0 trigger       00 r[6]='trigger'
  73 Goto             0    1    0               00 
SQL: [;
;DROP TABLE IF EXISTS t0;]
VDBE Program Listing:
   0 Init             0    2    0               00 Start at 2
   1 Halt             0    0    0               00 
   2 Transaction      0    0    9 2             01 usesStmtJournal=0
   3 Transaction      1    0    0 2             01 usesStmtJournal=0
   4 Goto             0    1    0               00 
SQL: [;CREATE TABLE xyz1 (t2);]
VDBE Program Listing:
   0 Init             0   28    0               00 Start at 28
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
  16 Rowid            1    5    0               00 r[5]=rowid
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
  18 String8          0    6    0 table         00 r[6]='table'
  19 String8          0    7    0 xyz1          00 r[7]='xyz1'
  20 String8          0    8    0 xyz1          00 r[8]='xyz1'
  21 Copy             2    9    0               00 r[9]=r[2]
  22 String8          0   10    0 CREATE TABLE xyz1 (t2) 00 r[10]='CREATE TABLE xyz1 (t2)'
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
  25 SetCookie        0    1   10               00 
  26 ParseSchema      0    0    0 tbl_name='xyz1' AND type!='trigger' 00 
  27 Halt             0    0    0               00 
  28 Transaction      0    1    9 2             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0   10 2             00 usesStmtJournal=0
  16 String8          0    2    0 xyz1          00 r[2]='xyz1'
  17 String8          0    3    0 trigger       00 r[3]='trigger'
  18 Goto             0    1    0               00 
SQL: [;INSERT INTO t1(x) VALUES ('a');]
VDBE Program Listing:
   0 Init             0   20    0               00 Start at 20
   1 OpenWrite        0    2    0 1             00 root=2 iDb=0; t1
   2 OpenWrite        1    5    0 k(2,,)        00 root=5 iDb=0; a
   3 OpenWrite        2    3    0 k(2,,)        00 root=3 iDb=0; collate4t1
   4 NewRowid         0    1    0               00 r[1]=rowid
   5 String8          0    2    0 a             00 r[2]='a'
   6 Affinity         2    1    0 C             00 affinity(r[2])
   7 Noop             0    0    0               00 uniqueness check for a
   8 SCopy            2    4    0               00 r[4]=r[2]; x
   9 IntCopy          1    5    0               00 r[5]=r[1]; rowid
  10 MakeRecord       4    2    3               00 r[3]=mkrec(r[4..5]); for a
  11 Noop             0    0    0               00 uniqueness check for collate4t1
  12 Integer          0    7    0               00 r[7]=0; collate4t1 column 0
  13 IntCopy          1    8    0               00 r[8]=r[1]; rowid
  14 MakeRecord       7    2    6               00 r[6]=mkrec(r[7..8]); for collate4t1
  15 IdxInsert        1    3    4 2             10 key=r[3]
  16 IdxInsert        2    6    7 2             10 key=r[6]
  17 MakeRecord       2    1    9               00 r[9]=mkrec(r[2])
  18 Insert           0    9    1 t1            39 intkey=r[1] data=r[9]
  19 Halt             0    0    0               00 
  20 Transaction      0    1   10 2             01 usesStmtJournal=0
  21 Goto             0    1    0               00 
SQL: [;
;SELECT * FROM xyz1 WHERE (xyz1.rowid) <= '0';]
VDBE Program Listing:
   0 Init             0   11    0               00 Start at 11
   1 OpenRead         0    7    0 1             00 root=7 iDb=0; xyz1
   2 Explain          2    0    0 SEARCH TABLE xyz1 USING INTEGER PRIMARY KEY (rowid<?) 00 
   3 Rewind           0   10    0               00 
   4 String8          0    1    0 0             00 r[1]='0'
   5 Rowid            0    2    0               00 r[2]=rowid
   6 Gt               1   10    2               53 if r[2]>r[1] goto 10
   7 Column           0    0    3               00 r[3]=xyz1.t2
   8 ResultRow        3    1    0               00 output=r[3]
   9 Next             0    5    0               00 
  10 Halt             0    0    0               00 
  11 Transaction      0    0   10 2             01 usesStmtJournal=0
  12 Goto             0    1    0               00 
SQL: [;
;SELECT unlikely(xyz1.rowid) <= '0', likelihood(xyz1.rowid,0.5) <= '0' FROM xyz1;]
VDBE Program Listing:
   0 Init             0   11    0               00 Start at 11
   1 OpenRead         0    7    0 0             00 root=7 iDb=0; xyz1
   2 Explain          2    0    0 SCAN TABLE xyz1 00 
   3 Rewind           0   10    0               00 
   4 Rowid            0    3    0               00 r[3]=rowid
   5 Le               4    1    3               64 r[1] = (r[3]<=r[4])
   6 Rowid            0    3    0               00 r[3]=rowid
   7 Le               4    2    3               64 r[2] = (r[3]<=r[4])
   8 ResultRow        1    2    0               00 output=r[1..2]
   9 Next             0    4    0               01 
  10 Halt             0    0    0               00 
  11 Transaction      0    0   10 2             01 usesStmtJournal=0
  12 String8          0    4    0 0             00 r[4]='0'
  13 Goto             0    1    0               00 
SQL: [;
;SELECT * FROM collate4i1 WHERE likelihood(collate4i1.rowid, 0.5) <= '0';]
VDBE Program Listing:
   0 Init             0   14    0               00 Start at 14
   1 OpenRead         0    6    0 4             00 root=6 iDb=0; collate4i1
   2 Explain          2    0    0 SEARCH TABLE collate4i1 USING INTEGER PRIMARY KEY (rowid<?) 00 
   3 Rewind           0   13    0               00 
   4 String8          0    1    0 0             00 r[1]='0'
   5 Rowid            0    2    0               00 r[2]=rowid
   6 Gt               1   13    2               53 if r[2]>r[1] goto 13
   7 Column           0    0    3               00 r[3]=collate4i1.d
   8 Column           0    1    4               00 r[4]=collate4i1.xyz
   9 Column           0    2    5               00 r[5]=collate4i1.b
  10 Column           0    3    6               00 r[6]=collate4i1.c
  11 ResultRow        3    4    0               00 output=r[3..6]
  12 Next             0    5    0               00 
  13 Halt             0    0    0               00 
  14 Transaction      0    0   10 2             01 usesStmtJournal=0
  15 Goto             0    1    0               00 
SQL: [;
;SELECT unlikely(collate4i1.rowid <= '0'),
         likely(collate4i1.rowid <= '0'),
         likelihood(collate4i1.rowid <= '0',0.5)
    FROM collate4i1;]
VDBE Program Listing:
   0 Init             0   13    0               00 Start at 13
   1 OpenRead         0    6    0 0             00 root=6 iDb=0; collate4i1
   2 Explain          2    0    0 SCAN TABLE collate4i1 00 
   3 Rewind           0   12    0               00 
   4 Rowid            0    4    0               00 r[4]=rowid
   5 Le               5    1    4               64 r[1] = (r[4]<=r[5])
   6 Rowid            0    4    0               00 r[4]=rowid
   7 Le               5    2    4               64 r[2] = (r[4]<=r[5])
   8 Rowid            0    4    0               00 r[4]=rowid
   9 Le               5    3    4               64 r[3] = (r[4]<=r[5])
  10 ResultRow        1    3    0               00 output=r[1..3]
  11 Next             0    4    0               01 
  12 Halt             0    0    0               00 
  13 Transaction      0    0   10 2             01 usesStmtJournal=0
  14 String8          0    5    0 0             00 r[5]='0'
  15 Goto             0    1    0               00 
SQL: [;
;DROP TABLE IF EXISTS xyz1;]
VDBE Program Listing:
   0 Init             0   48    0               00 Start at 48
   1 Null             0    1    0               00 r[1]=NULL
   2 OpenWrite        0    4    0 3             00 root=4 iDb=0; sqlite_stat1
   3 Explain          3    0    0 SCAN TABLE sqlite_stat1 00 
   4 Rewind           0   11    0               00 
   5 Column           0    0    2               00 r[2]=sqlite_stat1.tbl
   6 Ne               3   10    2 (BINARY)      51 if r[2]!=r[3] goto 10
   7 Rowid            0    4    0               00 r[4]=rowid
   8 Once             0    9    0               00 
   9 Delete           0    0    0 sqlite_stat1  02 
  10 Next             0    5    0               01 
  11 Null             0    5    0               00 r[5]=NULL
  12 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  13 Explain         13    0    0 SCAN TABLE sqlite_master 00 
  14 Rewind           1   23    0               00 
  15 Column           1    2    2               00 r[2]=sqlite_master.tbl_name
  16 Ne               3   22    2 (BINARY)      52 if r[2]!=r[3] goto 22
  17 Column           1    0    2               00 r[2]=sqlite_master.type
  18 Eq               6   22    2 (BINARY)      52 if r[2]==r[6] goto 22
  19 Rowid            1    7    0               00 r[7]=rowid
  20 Once             0   21    0               00 
  21 Delete           1    0    0               02 
  22 Next             1   15    0               01 
  23 Destroy          7    2    0               00 
  24 Null             0    8    9               00 r[8..9]=NULL
  25 IfNot            2   34    1               00 
  26 OpenRead         2    1    0 4             00 root=1 iDb=0; sqlite_master
  27 Explain         27    0    0 SCAN TABLE sqlite_master 00 
  28 Rewind           2   34    0               00 
  29 Column           2    3   15               00 r[15]=sqlite_master.rootpage
  30 Ne               2   33   15 (BINARY)      54 if r[15]!=r[2] goto 33
  31 Rowid            2    9    0               00 r[9]=rowid
  32 RowSetAdd        8    9    0               00 rowset(8)=r[9]
  33 Next             2   29    0               01 
  34 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  35 RowSetRead       8   45    9               00 r[9]=rowset(8)
  36 NotExists        2   35    9               00 intkey=r[9]
  37 Column           2    0   10               00 r[10]=sqlite_master.type
  38 Column           2    1   11               00 r[11]=sqlite_master.name
  39 Column           2    2   12               00 r[12]=sqlite_master.tbl_name
  40 Integer          7   13    0               00 r[13]=7
  41 Column           2    4   14               00 r[14]=sqlite_master.sql
  42 MakeRecord      10    5   15 BBBDB         00 r[15]=mkrec(r[10..14])
  43 Insert           2   15    9               00 intkey=r[9] data=r[15]
  44 Goto             0   35    0               00 
  45 DropTable        0    0    0 xyz1          00 
  46 SetCookie        0    1   11               00 
  47 Halt             0    0    0               00 
  48 Transaction      0    1   10 2             01 usesStmtJournal=1
  49 String8          0    3    0 xyz1          00 r[3]='xyz1'
  50 String8          0    6    0 trigger       00 r[6]='trigger'
  51 Goto             0    1    0               00 
SQL: [;INSERT INTO t1(x) VALUES(''),(NULL),('X'),(NULL);]
VDBE Program Listing:
   0 Init             0   32    0               00 Start at 32
   1 InitCoroutine    3   12    2               00 
   2 Explain          2    0    0 SCAN 4 CONSTANT ROWS 00 
   3 String8          0    2    0               00 r[2]=''
   4 Yield            3    0    0               00 
   5 Null             0    2    0               00 r[2]=NULL
   6 Yield            3    0    0               00 
   7 String8          0    2    0 X             00 r[2]='X'
   8 Yield            3    0    0               00 
   9 Null             0    2    0               00 r[2]=NULL
  10 Yield            3    0    0               00 
  11 EndCoroutine     3    0    0               00 
  12 OpenWrite        0    2    0 1             00 root=2 iDb=0; t1
  13 OpenWrite        1    5    0 k(2,,)        00 root=5 iDb=0; a
  14 OpenWrite        2    3    0 k(2,,)        00 root=3 iDb=0; collate4t1
  15 Yield            3   31    0               00 
  16 NewRowid         0    1    0               00 r[1]=rowid
  17 Affinity         2    1    0 C             00 affinity(r[2])
  18 Noop             0    0    0               00 uniqueness check for a
  19 SCopy            2    5    0               00 r[5]=r[2]; x
  20 IntCopy          1    6    0               00 r[6]=r[1]; rowid
  21 MakeRecord       5    2    4               00 r[4]=mkrec(r[5..6]); for a
  22 Noop             0    0    0               00 uniqueness check for collate4t1
  23 Integer          0    8    0               00 r[8]=0; collate4t1 column 0
  24 IntCopy          1    9    0               00 r[9]=r[1]; rowid
  25 MakeRecord       8    2    7               00 r[7]=mkrec(r[8..9]); for collate4t1
  26 IdxInsert        1    4    5 2             10 key=r[4]
  27 IdxInsert        2    7    8 2             10 key=r[7]
  28 MakeRecord       2    1   10               00 r[10]=mkrec(r[2])
  29 Insert           0   10    1 t1            39 intkey=r[1] data=r[10]
  30 Goto             0   15    0               00 
  31 Halt             0    0    0               00 
  32 Transaction      0    1   11 2             01 usesStmtJournal=0
  33 Goto             0    1    0               00 
SQL: [;SELECT coalesce(max(quote(x)),10) FROM t1 GROUP BY x;]
VDBE Program Listing:
   0 Init             0   37    0               00 Start at 37
   1 Noop             1    1    0               00 
   2 Integer          0    4    0               00 r[4]=0; clear abort flag
   3 Null             0    7    7               00 r[7..7]=NULL
   4 Gosub            6   33    0               00 
   5 OpenRead         2    5    0 k(2,,)        00 root=5 iDb=0; a
   6 Explain          6    0    0 SCAN TABLE t1 USING COVERING INDEX a 00 
   7 Rewind           2   21    9 0             00 
   8 Column           2    0    8               00 r[8]=t1.x
   9 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
  10 Jump            11   15   11               00 
  11 Move             8    7    1               00 r[7]=r[8]
  12 Gosub            5   25    0               00 output one row
  13 IfPos            4   36    0               00 if r[4]>0 then r[4]-=0, goto 36; check abort flag
  14 Gosub            6   33    0               00 reset accumulator
  15 Column           2    0   10               00 r[10]=t1.x
  16 Function0        0   10    9 quote(1)      01 r[9]=func(r[10])
  17 CollSeq          0    0    0 (BINARY)      00 
  18 AggStep          0    9    1 max(1)        01 accum=r[1] step(r[9])
  19 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
  20 Next             2    8    0               01 
  21 Gosub            5   25    0               00 output final row
  22 Goto             0   36    0               00 
  23 Integer          1    4    0               00 r[4]=1; set abort flag
  24 Return           5    0    0               00 
  25 IfPos            3   27    0               00 if r[3]>0 then r[3]-=0, goto 27; Groupby result generator entry point
  26 Return           5    0    0               00 
  27 AggFinal         1    1    0 max(1)        00 accum=r[1] N=1
  28 SCopy            1   11    0               00 r[11]=r[1]
  29 NotNull         11   31    0               00 if r[11]!=NULL goto 31
  30 Integer         10   11    0               00 r[11]=10
  31 ResultRow       11    1    0               00 output=r[11]
  32 Return           5    0    0               00 end groupby result generator
  33 Null             0    1    2               00 r[1..2]=NULL
  34 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
  35 Return           6    0    0               00 
  36 Halt             0    0    0               00 
  37 Transaction      0    0   11 2             01 usesStmtJournal=0
  38 Goto             0    1    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f30abd36859 in __GI_abort () at abort.c:79
#2  0x00007f30abd36729 in __assert_fail_base (fmt=0x7f30abecc588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x221a82 "(mFlags&MEM_Str)==0 || (pMem->n==pX->n && pMem->z==pX->z)", file=0x22873d "sqlite3.c", 
    line=75351, function=<optimized out>) at assert.c:92
#3  0x00007f30abd47fd6 in __GI___assert_fail (assertion=0x221a82 "(mFlags&MEM_Str)==0 || (pMem->n==pX->n && pMem->z==pX->z)", file=0x22873d "sqlite3.c", line=75351, 
    function=0x208940 "void sqlite3VdbeMemAboutToChange(Vdbe *, Mem *)") at assert.c:101
#4  0x00000000003e1103 in sqlite3VdbeMemAboutToChange (pVdbe=0x23f3040, pMem=0x2441e00) at sqlite3.c:75351
#5  0x00000000003c031d in sqlite3VdbeExec (p=0x23f3040) at sqlite3.c:84329
#6  0x0000000000411104 in sqlite3Step (p=0x23f3040) at sqlite3.c:81930
#7  0x000000000029128d in sqlite3_step (pStmt=0x23f3040) at sqlite3.c:81995
#8  0x00000000002570b9 in main (argc=1, argv=0x7fff979b90d8) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 59045] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
