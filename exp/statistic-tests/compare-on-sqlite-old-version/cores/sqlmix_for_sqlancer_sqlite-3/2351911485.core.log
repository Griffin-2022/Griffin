GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000315,sig:11,src:023522+019598,time:6790292,execs:1372658,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
;pragma vdbe_listing=on;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;PRAGMA integrity_check;]
VDBE Program Listing:
   0 Init             0  100   97               00 Start at 100
   1 Integer         99    1    0               00 r[1]=99
   2 IntegrityCk      2    5    1 [4,2,5,3,1]   00 
   3 IsNull           2    9    0               00 if r[2]==NULL goto 9
   4 String8          0    3    0 *** in database main ***
 00 r[3]='*** in database main ***
'
   5 Concat           2    3    3               00 r[3]=r[3]+r[2]
   6 ResultRow        3    1    0               00 output=r[3]
   7 IfPos            1    9    1               00 if r[1]>0 then r[1]-=1, goto 9
   8 Halt             0    0    0               00 
   9 OpenRead         1    4    0 3             00 root=4 iDb=0; sqlite_stat1
  10 Integer          0    7    0               00 r[7]=0
  11 Rewind           1   15    0               00 
  12 AddImm           7    1    0               00 r[7]=r[7]+1
  13 Column           1    2    3               80 r[3]=
  14 Next             1   12    0               00 
  15 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
  16 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  17 OpenRead         2    5    0 k(2,NOCASE,)  00 root=5 iDb=0; b
  18 OpenRead         3    3    0 k(3,,,)       00 root=3 iDb=0; collate4i1
  19 Integer          0    7    0               00 r[7]=0
  20 Integer          0    8    0               00 r[8]=0
  21 Integer          0    9    0               00 r[9]=0
  22 Rewind           1   56    0               00 
  23 AddImm           7    1    0               00 r[7]=r[7]+1
  24 Column           1    1    3               80 r[3]=
  25 Column           1    1   11               00 r[11]=t1.xyz
  26 Rowid            1   12    0               00 r[12]=rowid
  27 AddImm           8    1    0               00 r[8]=r[8]+1
  28 Found            2   38   11 2             00 key=r[11..12]
  29 String8          0    3    0 row           00 r[3]='row '
  30 Concat           7    3    3               00 r[3]=r[3]+r[7]
  31 String8          0    4    0  missing from index  00 r[4]=' missing from index '
  32 Concat           4    3    3               00 r[3]=r[3]+r[4]
  33 String8          0    4    0 b             00 r[4]='b'
  34 Concat           4    3    3               00 r[3]=r[3]+r[4]
  35 ResultRow        3    1    0               00 output=r[3]
  36 IfPos            1   38    1               00 if r[1]>0 then r[1]-=1, goto 38
  37 Halt             0    0    0               00 
  38 Column           1    0   15               00 r[15]=t1.x
  39 PureFunc0        1   14   13 like(2)       02 
  40 If              13   55    1               00 
  41 Column           1    0   16               00 r[16]=t1.x
  42 Column           1    0   17               00 r[17]=t1.x
  43 Rowid            1   18    0               00 r[18]=rowid
  44 AddImm           9    1    0               00 r[9]=r[9]+1
  45 Found            3   55   16 3             00 key=r[16..18]
  46 String8          0    3    0 row           00 r[3]='row '
  47 Concat           7    3    3               00 r[3]=r[3]+r[7]
  48 String8          0    4    0  missing from index  00 r[4]=' missing from index '
  49 Concat           4    3    3               00 r[3]=r[3]+r[4]
  50 String8          0    4    0 collate4i1    00 r[4]='collate4i1'
  51 Concat           4    3    3               00 r[3]=r[3]+r[4]
  52 ResultRow        3    1    0               00 output=r[3]
  53 IfPos            1   55    1               00 if r[1]>0 then r[1]-=1, goto 55
  54 Halt             0    0    0               00 
  55 Next             1   23    0               00 
  56 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
  57 Count            2    3    0               00 r[3]=count()
  58 Eq               8   64    3               90 if r[3]==r[8] goto 64
  59 String8          0    4    0 b             00 r[4]='b'
  60 Concat           4    2    3               00 r[3]=r[2]+r[4]
  61 ResultRow        3    1    0               00 output=r[3]
  62 IfPos            1   64    1               00 if r[1]>0 then r[1]-=1, goto 64
  63 Halt             0    0    0               00 
  64 Count            3    3    0               00 r[3]=count()
  65 Eq               9   71    3               90 if r[3]==r[9] goto 71
  66 String8          0    4    0 collate4i1    00 r[4]='collate4i1'
  67 Concat           4    2    3               00 r[3]=r[2]+r[4]
  68 ResultRow        3    1    0               00 output=r[3]
  69 IfPos            1   71    1               00 if r[1]>0 then r[1]-=1, goto 71
  70 Halt             0    0    0               00 
  71 OpenRead         1    1    0 5             00 root=1 iDb=0; sqlite_master
  72 Integer          0    7    0               00 r[7]=0
  73 Rewind           1   77    0               00 
  74 AddImm           7    1    0               00 r[7]=r[7]+1
  75 Column           1    4    3               80 r[3]=
  76 Next             1   74    0               00 
  77 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
  78 IntegrityCk      2    1    1 [1]           01 
  79 IsNull           2   85    0               00 if r[2]==NULL goto 85
  80 String8          0    3    0 *** in database temp ***
 00 r[3]='*** in database temp ***
'
  81 Concat           2    3    3               00 r[3]=r[3]+r[2]
  82 ResultRow        3    1    0               00 output=r[3]
  83 IfPos            1   85    1               00 if r[1]>0 then r[1]-=1, goto 85
  84 Halt             0    0    0               00 
  85 OpenRead         1    1    1 5             00 root=1 iDb=1; sqlite_temp_master
  86 Integer          0    7    0               00 r[7]=0
  87 Rewind           1   91    0               00 
  88 AddImm           7    1    0               00 r[7]=r[7]+1
  89 Column           1    4    3               80 r[3]=
  90 Next             1   88    0               00 
  91 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
  92 AddImm           1  -99    0               00 r[1]=r[1]+-99
  93 IfNotZero        1   96    0               00 if r[1]!=0 then r[1]--, goto 96
  94 String8          0    3    0 ok            00 r[3]='ok'
  95 ResultRow        3    1    0               00 output=r[3]
  96 Halt             0    0    0               00 
  97 String8          0    3    0 database disk image is malformed 00 r[3]='database disk image is malformed'
  98 Goto             0   95    0               00 
  99 Halt             0    0    0               00 
 100 Transaction      0    0    6 1             01 usesStmtJournal=0
 101 Transaction      1    0    0 1             01 usesStmtJournal=0
 102 String8          0   14    0 abc%          00 r[14]='abc%'
 103 Goto             0    1    0               00 
SQL: [SELECT tbl,idx,stat FROM 'main'.sqlite_stat1
;]
VDBE Program Listing:
   0 Init             0   10    0               00 Start at 10
   1 OpenRead         0    4    0 3             00 root=4 iDb=0; sqlite_stat1
   2 Explain          2    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_stat1.tbl
   5 Column           0    1    2               00 r[2]=sqlite_stat1.idx
   6 Column           0    2    3               00 r[3]=sqlite_stat1.stat
   7 ResultRow        1    3    0               00 output=r[1..3]
   8 Next             0    4    0               01 
   9 Halt             0    0    0               00 
  10 Transaction      0    0    6 1             01 usesStmtJournal=0
  11 Goto             0    1    0               00 
SQL: [SELECT idx, stat FROM sqlite_stat1 ORDER BY idx;]
VDBE Program Listing:
   0 Init             0   19    0               00 Start at 19
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 OpenRead         0    4    0 3             00 root=4 iDb=0; sqlite_stat1
   3 Explain          3    0    0 SCAN TABLE sqlite_stat1 00 
   4 Rewind           0   10    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_stat1.stat
   6 Column           0    1    1               00 r[1]=sqlite_stat1.idx
   7 MakeRecord       1    2    4               00 r[4]=mkrec(r[1..2])
   8 SorterInsert     1    4    1 2             00 key=r[4]
   9 Next             0    5    0               01 
  10 Explain         10    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  11 OpenPseudo       2    5    4               00 4 columns in r[5]
  12 SorterSort       1   18    0               00 
  13 SorterData       1    5    2               00 r[5]=data
  14 Column           2    1    3               00 r[3]=stat
  15 Column           2    0    2               00 r[2]=idx
  16 ResultRow        2    2    0               00 output=r[2..3]
  17 SorterNext       1   13    0               00 
  18 Halt             0    0    0               00 
  19 Transaction      0    0    6 1             01 usesStmtJournal=0
  20 Goto             0    1    0               00 
SQL: [;PRAGMA integrity_check;]
VDBE Program Listing:
   0 Init             0  100   97               00 Start at 100
   1 Integer         99    1    0               00 r[1]=99
   2 IntegrityCk      2    5    1 [4,2,5,3,1]   00 
   3 IsNull           2    9    0               00 if r[2]==NULL goto 9
   4 String8          0    3    0 *** in database main ***
 00 r[3]='*** in database main ***
'
   5 Concat           2    3    3               00 r[3]=r[3]+r[2]
   6 ResultRow        3    1    0               00 output=r[3]
   7 IfPos            1    9    1               00 if r[1]>0 then r[1]-=1, goto 9
   8 Halt             0    0    0               00 
   9 OpenRead         1    4    0 3             00 root=4 iDb=0; sqlite_stat1
  10 Integer          0    7    0               00 r[7]=0
  11 Rewind           1   15    0               00 
  12 AddImm           7    1    0               00 r[7]=r[7]+1
  13 Column           1    2    3               80 r[3]=
  14 Next             1   12    0               00 
  15 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
  16 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  17 OpenRead         2    5    0 k(2,NOCASE,)  00 root=5 iDb=0; b
  18 OpenRead         3    3    0 k(3,,,)       00 root=3 iDb=0; collate4i1
  19 Integer          0    7    0               00 r[7]=0
  20 Integer          0    8    0               00 r[8]=0
  21 Integer          0    9    0               00 r[9]=0
  22 Rewind           1   56    0               00 
  23 AddImm           7    1    0               00 r[7]=r[7]+1
  24 Column           1    1    3               80 r[3]=
  25 Column           1    1   11               00 r[11]=t1.xyz
  26 Rowid            1   12    0               00 r[12]=rowid
  27 AddImm           8    1    0               00 r[8]=r[8]+1
  28 Found            2   38   11 2             00 key=r[11..12]
  29 String8          0    3    0 row           00 r[3]='row '
  30 Concat           7    3    3               00 r[3]=r[3]+r[7]
  31 String8          0    4    0  missing from index  00 r[4]=' missing from index '
  32 Concat           4    3    3               00 r[3]=r[3]+r[4]
  33 String8          0    4    0 b             00 r[4]='b'
  34 Concat           4    3    3               00 r[3]=r[3]+r[4]
  35 ResultRow        3    1    0               00 output=r[3]
  36 IfPos            1   38    1               00 if r[1]>0 then r[1]-=1, goto 38
  37 Halt             0    0    0               00 
  38 Column           1    0   15               00 r[15]=t1.x
  39 PureFunc0        1   14   13 like(2)       02 
  40 If              13   55    1               00 
  41 Column           1    0   16               00 r[16]=t1.x
  42 Column           1    0   17               00 r[17]=t1.x
  43 Rowid            1   18    0               00 r[18]=rowid
  44 AddImm           9    1    0               00 r[9]=r[9]+1
  45 Found            3   55   16 3             00 key=r[16..18]
  46 String8          0    3    0 row           00 r[3]='row '
  47 Concat           7    3    3               00 r[3]=r[3]+r[7]
  48 String8          0    4    0  missing from index  00 r[4]=' missing from index '
  49 Concat           4    3    3               00 r[3]=r[3]+r[4]
  50 String8          0    4    0 collate4i1    00 r[4]='collate4i1'
  51 Concat           4    3    3               00 r[3]=r[3]+r[4]
  52 ResultRow        3    1    0               00 output=r[3]
  53 IfPos            1   55    1               00 if r[1]>0 then r[1]-=1, goto 55
  54 Halt             0    0    0               00 
  55 Next             1   23    0               00 
  56 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
  57 Count            2    3    0               00 r[3]=count()
  58 Eq               8   64    3               90 if r[3]==r[8] goto 64
  59 String8          0    4    0 b             00 r[4]='b'
  60 Concat           4    2    3               00 r[3]=r[2]+r[4]
  61 ResultRow        3    1    0               00 output=r[3]
  62 IfPos            1   64    1               00 if r[1]>0 then r[1]-=1, goto 64
  63 Halt             0    0    0               00 
  64 Count            3    3    0               00 r[3]=count()
  65 Eq               9   71    3               90 if r[3]==r[9] goto 71
  66 String8          0    4    0 collate4i1    00 r[4]='collate4i1'
  67 Concat           4    2    3               00 r[3]=r[2]+r[4]
  68 ResultRow        3    1    0               00 output=r[3]
  69 IfPos            1   71    1               00 if r[1]>0 then r[1]-=1, goto 71
  70 Halt             0    0    0               00 
  71 OpenRead         1    1    0 5             00 root=1 iDb=0; sqlite_master
  72 Integer          0    7    0               00 r[7]=0
  73 Rewind           1   77    0               00 
  74 AddImm           7    1    0               00 r[7]=r[7]+1
  75 Column           1    4    3               80 r[3]=
  76 Next             1   74    0               00 
  77 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
  78 IntegrityCk      2    1    1 [1]           01 
  79 IsNull           2   85    0               00 if r[2]==NULL goto 85
  80 String8          0    3    0 *** in database temp ***
 00 r[3]='*** in database temp ***
'
  81 Concat           2    3    3               00 r[3]=r[3]+r[2]
  82 ResultRow        3    1    0               00 output=r[3]
  83 IfPos            1   85    1               00 if r[1]>0 then r[1]-=1, goto 85
  84 Halt             0    0    0               00 
  85 OpenRead         1    1    1 5             00 root=1 iDb=1; sqlite_temp_master
  86 Integer          0    7    0               00 r[7]=0
  87 Rewind           1   91    0               00 
  88 AddImm           7    1    0               00 r[7]=r[7]+1
  89 Column           1    4    3               80 r[3]=
  90 Next             1   88    0               00 
  91 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
  92 AddImm           1  -99    0               00 r[1]=r[1]+-99
  93 IfNotZero        1   96    0               00 if r[1]!=0 then r[1]--, goto 96
  94 String8          0    3    0 ok            00 r[3]='ok'
  95 ResultRow        3    1    0               00 output=r[3]
  96 Halt             0    0    0               00 
  97 String8          0    3    0 database disk image is malformed 00 r[3]='database disk image is malformed'
  98 Goto             0   95    0               00 
  99 Halt             0    0    0               00 
 100 Transaction      0    0    6 1             01 usesStmtJournal=0
 101 Transaction      1    0    0 1             01 usesStmtJournal=0
 102 String8          0   14    0 abc%          00 r[14]='abc%'
 103 Goto             0    1    0               00 
SQL: [;
;REINDEX;]
VDBE Program Listing:
   0 Init             0   42    0               00 Start at 42
   1 SorterOpen       2    0    1 k(2,NOCASE,)  00 
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   3 Rewind           0    9    0               00 
   4 Column           0    1    2               00 r[2]=t1.xyz
   5 Rowid            0    3    0               00 r[3]=rowid
   6 MakeRecord       2    2    1               00 r[1]=mkrec(r[2..3])
   7 SorterInsert     2    1    0               00 key=r[1]
   8 Next             0    4    0               00 
   9 Clear            5    0    0               00 
  10 OpenWrite        1    5    0 k(2,NOCASE,)  01 root=5 iDb=0
  11 SorterSort       2   16    0               00 
  12 SorterData       2    1    1               00 r[1]=data
  13 SeekEnd          1    0    0               00 
  14 IdxInsert        1    1    0               10 key=r[1]
  15 SorterNext       2   12    0               00 
  16 Close            0    0    0               00 
  17 Close            1    0    0               00 
  18 Close            2    0    0               00 
  19 SorterOpen       5    0    2 k(3,,,)       00 
  20 OpenRead         3    2    0 2             00 root=2 iDb=0; t1
  21 Rewind           3   31    0               00 
  22 Column           3    0    6               00 r[6]=t1.x
  23 PureFunc0        1    5    4 like(2)       02 
  24 If               4   30    1               00 
  25 Column           3    0    7               00 r[7]=t1.x
  26 Column           3    0    8               00 r[8]=t1.x
  27 Rowid            3    9    0               00 r[9]=rowid
  28 MakeRecord       7    3    1               00 r[1]=mkrec(r[7..9])
  29 SorterInsert     5    1    0               00 key=r[1]
  30 Next             3   22    0               00 
  31 Clear            3    0    0               00 
  32 OpenWrite        4    3    0 k(3,,,)       01 root=3 iDb=0
  33 SorterSort       5   38    0               00 
  34 SorterData       5    1    4               00 r[1]=data
  35 SeekEnd          4    0    0               00 
  36 IdxInsert        4    1    0               10 key=r[1]
  37 SorterNext       5   34    0               00 
  38 Close            3    0    0               00 
  39 Close            4    0    0               00 
  40 Close            5    0    0               00 
  41 Halt             0    0    0               00 
  42 Transaction      0    1    6 1             01 usesStmtJournal=0
  43 String8          0    5    0 abc%          00 r[5]='abc%'
  44 Goto             0    1    0               00 
SQL: [;SELECT tbl,idx,stat FROM 'main'.sqlite_stat1
;]
VDBE Program Listing:
   0 Init             0   10    0               00 Start at 10
   1 OpenRead         0    4    0 3             00 root=4 iDb=0; sqlite_stat1
   2 Explain          2    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_stat1.tbl
   5 Column           0    1    2               00 r[2]=sqlite_stat1.idx
   6 Column           0    2    3               00 r[3]=sqlite_stat1.stat
   7 ResultRow        1    3    0               00 output=r[1..3]
   8 Next             0    4    0               01 
   9 Halt             0    0    0               00 
  10 Transaction      0    0    6 1             01 usesStmtJournal=0
  11 Goto             0    1    0               00 
SQL: [;SELECT count(*) FROM t1 WHERE x IS NOT NULL;]
VDBE Program Listing:
   0 Init             0   13    0               00 Start at 13
   1 Null             0    1    1               00 r[1..1]=NULL
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0    9    0               00 
   5 Column           0    0    2               00 r[2]=t1.x
   6 IsNull           2    8    0               00 if r[2]==NULL goto 8
   7 AggStep          0    0    1 count(0)      00 accum=r[1] step(r[0])
   8 Next             0    5    0               01 
   9 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  10 Copy             1    3    0               00 r[3]=r[1]
  11 ResultRow        3    1    0               00 output=r[3]
  12 Halt             0    0    0               00 
  13 Transaction      0    0    6 1             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
SQL: [;
;DROP INDEX collate4i1;]
VDBE Program Listing:
   0 Init             0   48    0               00 Start at 48
   1 Null             0    1    0               00 r[1]=NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
   7 Column           0    0    2               00 r[2]=sqlite_master.type
   8 Ne               4   12    2 (BINARY)      52 if r[2]!=r[4] goto 12
   9 Rowid            0    5    0               00 r[5]=rowid
  10 Once             0   11    0               00 
  11 Delete           0    0    0               02 
  12 Next             0    5    0               01 
  13 Null             0    6    0               00 r[6]=NULL
  14 OpenWrite        1    4    0 3             00 root=4 iDb=0; sqlite_stat1
  15 Explain         15    0    0 SCAN TABLE sqlite_stat1 00 
  16 Rewind           1   23    0               00 
  17 Column           1    1    2               00 r[2]=sqlite_stat1.idx
  18 Ne               3   22    2 (BINARY)      51 if r[2]!=r[3] goto 22
  19 Rowid            1    7    0               00 r[7]=rowid
  20 Once             0   21    0               00 
  21 Delete           1    0    0 sqlite_stat1  02 
  22 Next             1   17    0               01 
  23 SetCookie        0    1    7               00 
  24 Destroy          3    2    0               00 
  25 Null             0    8    9               00 r[8..9]=NULL
  26 IfNot            2   35    1               00 
  27 OpenRead         2    1    0 4             00 root=1 iDb=0; sqlite_master
  28 Explain         28    0    0 SCAN TABLE sqlite_master 00 
  29 Rewind           2   35    0               00 
  30 Column           2    3   15               00 r[15]=sqlite_master.rootpage
  31 Ne               2   34   15 (BINARY)      54 if r[15]!=r[2] goto 34
  32 Rowid            2    9    0               00 r[9]=rowid
  33 RowSetAdd        8    9    0               00 rowset(8)=r[9]
  34 Next             2   30    0               01 
  35 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  36 RowSetRead       8   46    9               00 r[9]=rowset(8)
  37 NotExists        2   36    9               00 intkey=r[9]
  38 Column           2    0   10               00 r[10]=sqlite_master.type
  39 Column           2    1   11               00 r[11]=sqlite_master.name
  40 Column           2    2   12               00 r[12]=sqlite_master.tbl_name
  41 Integer          3   13    0               00 r[13]=3
  42 Column           2    4   14               00 r[14]=sqlite_master.sql
  43 MakeRecord      10    5   15 BBBDB         00 r[15]=mkrec(r[10..14])
  44 Insert           2   15    9               00 intkey=r[9] data=r[15]
  45 Goto             0   36    0               00 
  46 DropIndex        0    0    0 collate4i1    00 
  47 Halt             0    0    0               00 
  48 Transaction      0    1    6 1             01 usesStmtJournal=1
  49 String8          0    3    0 collate4i1    00 r[3]='collate4i1'
  50 String8          0    4    0 index         00 r[4]='index'
  51 Goto             0    1    0               00 
SQL: [;SELECT xyz FROM t1 WHERE x=15;]
VDBE Program Listing:
   0 Init             0   10    0               00 Start at 10
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=t1.x
   5 Ne               2    8    1 (BINARY)      51 if r[1]!=r[2] goto 8
   6 Column           0    1    3               00 r[3]=t1.xyz
   7 ResultRow        3    1    0               00 output=r[3]
   8 Next             0    4    0               01 
   9 Halt             0    0    0               00 
  10 Transaction      0    0    7 1             01 usesStmtJournal=0
  11 Integer         15    2    0               00 r[2]=15
  12 Goto             0    1    0               00 
SQL: [;
;SELECT xyz FROM t1 WHERE xyz=515 AND xyz>200;]
VDBE Program Listing:
   0 Init             0   12    0               00 Start at 12
   1 OpenRead         1    5    0 k(2,NOCASE,)  00 root=5 iDb=0; b
   2 Explain          2    0    0 SCAN TABLE t1 USING COVERING INDEX b 00 
   3 Rewind           1   11    1 0             00 
   4 Column           1    0    1               00 r[1]=t1.xyz
   5 Ne               2   10    1 (BINARY)      51 if r[1]!=r[2] goto 10
   6 Column           1    0    1               00 r[1]=t1.xyz
   7 Le               3   10    1 (BINARY)      51 if r[1]<=r[3] goto 10
   8 Column           1    0    4               00 r[4]=t1.xyz
   9 ResultRow        4    1    0               00 output=r[4]
  10 Next             1    4    0               01 
  11 Halt             0    0    0               00 
  12 Transaction      0    0    7 1             01 usesStmtJournal=0
  13 Integer        515    2    0               00 r[2]=515
  14 Integer        200    3    0               00 r[3]=200
  15 Goto             0    1    0               00 
SQL: [;
;CREATE TABLE c(d,xyz1);]
VDBE Program Listing:
   0 Init             0   28    0               00 Start at 28
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
  16 Rowid            1    5    0               00 r[5]=rowid
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
  18 String8          0    6    0 table         00 r[6]='table'
  19 String8          0    7    0 c             00 r[7]='c'
  20 String8          0    8    0 c             00 r[8]='c'
  21 Copy             2    9    0               00 r[9]=r[2]
  22 String8          0   10    0 CREATE TABLE c(d,xyz1) 00 r[10]='CREATE TABLE c(d,xyz1)'
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
  25 SetCookie        0    1    8               00 
  26 ParseSchema      0    0    0 tbl_name='c' AND type!='trigger' 00 
  27 Halt             0    0    0               00 
  28 Transaction      0    1    7 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    8 1             00 usesStmtJournal=0
  16 String8          0    2    0 c             00 r[2]='c'
  17 String8          0    3    0 trigger       00 r[3]='trigger'
  18 Goto             0    1    0               00 

Program received signal SIGSEGV, Segmentation fault.
__strcmp_avx2 () at ../sysdeps/x86_64/multiarch/strcmp-avx2.S:102
(gdb) #0  __strcmp_avx2 () at ../sysdeps/x86_64/multiarch/strcmp-avx2.S:102
#1  0x000000000034a642 in sqlite3ExprCodeTarget (pParse=0x1d80870, pExpr=0x1d76460, target=8) at sqlite3.c:100443
#2  0x000000000034e9ee in sqlite3ExprCodeExprList (pParse=0x1d80870, pList=0x1d79340, target=8, srcReg=0, flags=1 '\001') at sqlite3.c:101202
#3  0x00000000003ae220 in pushOntoSorter (pParse=0x1d80870, pSort=0x7ffd85bcdcc8, pSelect=0x1d730d0, regData=9, regOrigData=0, nData=1, nPrefixReg=1) at sqlite3.c:125256
#4  0x00000000003a9edf in selectInnerLoop (pParse=0x1d80870, p=0x1d730d0, srcTab=-1, pSort=0x7ffd85bcdcc8, pDistinct=0x7ffd85bcdd80, pDest=0x7ffd85bcde68, iContinue=-4, iBreak=-2) at sqlite3.c:125809
#5  0x00000000002fe191 in sqlite3Select (pParse=0x1d80870, p=0x1d730d0, pDest=0x7ffd85bcde68) at sqlite3.c:130743
#6  0x00000000002fd24a in sqlite3Select (pParse=0x1d80870, p=0x1d74390, pDest=0x7ffd85bce188) at sqlite3.c:130524
#7  0x0000000000309aa3 in sqlite3Insert (pParse=0x1d80870, pTabList=0x1d7a600, pSelect=0x1d74390, pColumn=0x0, onError=11, pUpsert=0x0) at sqlite3.c:117162
#8  0x00000000003949b6 in codeTriggerProgram (pParse=0x1d80870, pStepList=0x1d84240, orconf=11) at sqlite3.c:132245
#9  0x0000000000394209 in codeRowTrigger (pParse=0x7ffd85bcf380, pTrigger=0x1d83770, pTab=0x1d81ad0, orconf=11) at sqlite3.c:132398
#10 0x000000000039393d in getRowTrigger (pParse=0x7ffd85bcf380, pTrigger=0x1d83770, pTab=0x1d81ad0, orconf=11) at sqlite3.c:132455
#11 0x0000000000393453 in sqlite3CodeRowTriggerDirect (pParse=0x7ffd85bcf380, p=0x1d83770, pTab=0x1d81ad0, reg=4, orconf=11, ignoreJump=-1) at sqlite3.c:132477
#12 0x0000000000363845 in sqlite3CodeRowTrigger (pParse=0x7ffd85bcf380, pTrigger=0x1d895b0, op=120, pChanges=0x0, tr_tm=1, pTab=0x1d81ad0, reg=4, orconf=11, ignoreJump=-1) at sqlite3.c:132571
#13 0x000000000030ad90 in sqlite3Insert (pParse=0x7ffd85bcf380, pTabList=0x1d7b8c0, pSelect=0x0, pColumn=0x1d7af60, onError=11, pUpsert=0x0) at sqlite3.c:117389
#14 0x00000000002ee6c8 in yy_reduce (yypParser=0x7ffd85bce9a0, yyruleno=150, yyLookahead=1, yyLookaheadToken=..., pParse=0x7ffd85bcf380) at sqlite3.c:151937
#15 0x00000000002e92f8 in sqlite3Parser (yyp=0x7ffd85bce9a0, yymajor=1, yyminor=...) at sqlite3.c:152877
#16 0x00000000002a68b3 in sqlite3RunParser (pParse=0x7ffd85bcf380, 
    zSql=0x1d88fdf ";;\n;PRAGMA integrity_check\n;VACUUM;;ATTACH '' AS vacuum_db\n;;SELECT*FROM\"vacuum_db\".sqlite_master WHERE tbl_name='c' AND type!='trigger' ORDER BY rowid\n;SELECT*FROM\"vacuum_db\".sqlite_master WHERE tbl_"..., pzErrMsg=0x7ffd85bcf560) at sqlite3.c:154013
#17 0x00000000002a1683 in sqlite3Prepare (db=0x1d61680, 
    zSql=0x1d623c3 ";\n;INSERT INTO t1(xyz,xyz) VALUES(150, 'test1');;\n;PRAGMA integrity_check\n;VACUUM;;ATTACH '' AS vacuum_db\n;;SELECT*FROM\"vacuum_db\".sqlite_master WHERE tbl_name='c' AND type!='trigger' ORDER BY rowid\n;"..., nBytes=1497, prepFlags=128, pReprepare=0x0, ppStmt=0x7ffd85bcf698, pzTail=0x7ffd85bcf680) at sqlite3.c:124303
#18 0x00000000002a0d4e in sqlite3LockAndPrepare (db=0x1d61680, 
    zSql=0x1d623c3 ";\n;INSERT INTO t1(xyz,xyz) VALUES(150, 'test1');;\n;PRAGMA integrity_check\n;VACUUM;;ATTACH '' AS vacuum_db\n;;SELECT*FROM\"vacuum_db\".sqlite_master WHERE tbl_name='c' AND type!='trigger' ORDER BY rowid\n;"..., nBytes=1497, prepFlags=128, pOld=0x0, ppStmt=0x7ffd85bcf698, pzTail=0x7ffd85bcf680) at sqlite3.c:124403
#19 0x000000000029247f in sqlite3_prepare_v2 (db=0x1d61680, 
    zSql=0x1d623c3 ";\n;INSERT INTO t1(xyz,xyz) VALUES(150, 'test1');;\n;PRAGMA integrity_check\n;VACUUM;;ATTACH '' AS vacuum_db\n;;SELECT*FROM\"vacuum_db\".sqlite_master WHERE tbl_name='c' AND type!='trigger' ORDER BY rowid\n;"..., nBytes=1497, ppStmt=0x7ffd85bcf698, pzTail=0x7ffd85bcf680) at sqlite3.c:124487
#20 0x0000000000256bd0 in main (argc=1, argv=0x7ffd85bcf848) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 59781] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
