GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000367,sig:06,src:020786+012652,time:7877961,execs:1659985,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT (1, 2, 3) != (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               61 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               3    1    3               69 r[1] = (r[3]!=r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 If               1    7    0               00 
REG[1] =  i:0
   6 Ne               4    1    4               69 r[1] = (r[4]!=r[4])
REG[4] =  i:3
REG[4] =  i:3
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, 3) IS (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               E1 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               3    1    3               E9 r[1] = (r[3]==r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 IfNot            1    7    0               00 
REG[1] =  i:1
   6 Eq               4    1    4               E9 r[1] = (r[4]==r[4])
REG[4] =  i:3
REG[4] =  i:3
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [PRAGMA main.page_size;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Int64            0    1    0 4096          00 r[1]=4096
REG[1] =  i:4096
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:4096
   3 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 2, 3) == (SELECT 1, 2, 3)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  10 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Integer          3   10    0               00 r[10]=3
REG[10] =  i:3
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Eq               8    1    3               61 r[1] = (r[3]==r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:1
  25 IfNot            1   29    0               00 
REG[1] =  i:1
  26 Eq               9    1    4               69 r[1] = (r[4]==r[9])
REG[9] =  i:2
REG[4] =  i:2
  27 IfNot            1   29    0               00 
REG[1] =  i:1
  28 Eq              10    1    5               69 r[1] = (r[5]==r[10])
REG[10] =  i:3
REG[5] =  i:3
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  30 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 2, 3) != (SELECT 1, 2, 3)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  10 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Integer          3   10    0               00 r[10]=3
REG[10] =  i:3
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Ne               8    1    3               61 r[1] = (r[3]!=r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  25 If               1   29    0               00 
REG[1] =  i:0
  26 Ne               9    1    4               69 r[1] = (r[4]!=r[9])
REG[9] =  i:2
REG[4] =  i:2
  27 If               1   29    0               00 
REG[1] =  i:0
  28 Ne              10    1    5               69 r[1] = (r[5]!=r[10])
REG[10] =  i:3
REG[5] =  i:3
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  30 Halt             0    0    0               00 
SQL: [SELECT (1, 0, 3) == (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               61 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               4    1    3               69 r[1] = (r[3]==r[4])
REG[4] =  i:2
REG[3] =  i:0
REG[1] =  i:0
   5 IfNot            1    7    0               00 
REG[1] =  i:0
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 0, 3) IS NOT (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               E1 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               4    1    3               E9 r[1] = (r[3]!=r[4])
REG[4] =  i:2
REG[3] =  i:0
REG[1] =  i:1
   5 If               1    7    0               00 
REG[1] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 0, 3) == (SELECT 1, 2, 3)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  10 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Integer          3   10    0               00 r[10]=3
REG[10] =  i:3
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Eq               8    1    3               61 r[1] = (r[3]==r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:1
  25 IfNot            1   29    0               00 
REG[1] =  i:1
  26 Eq               9    1    4               69 r[1] = (r[4]==r[9])
REG[9] =  i:2
REG[4] =  i:0
REG[1] =  i:0
  27 IfNot            1   29    0               00 
REG[1] =  i:0
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  30 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 0, 3) != (SELECT 1, 2, 3)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  10 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Integer          3   10    0               00 r[10]=3
REG[10] =  i:3
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Ne               8    1    3               61 r[1] = (r[3]!=r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  25 If               1   29    0               00 
REG[1] =  i:0
  26 Ne               9    1    4               69 r[1] = (r[4]!=r[9])
REG[9] =  i:2
REG[4] =  i:0
REG[1] =  i:1
  27 If               1   29    0               00 
REG[1] =  i:1
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  30 Halt             0    0    0               00 
SQL: [SELECT (1, 2, NULL) == (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               61 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               3    1    3               69 r[1] = (r[3]==r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 IfNot            1    7    0               00 
REG[1] =  i:1
   6 Eq               5    1    4               69 r[1] = (r[4]==r[5])
REG[5] =  i:3
REG[4] =  NULL
REG[1] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, NULL) IS NOT (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               E1 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               3    1    3               E9 r[1] = (r[3]!=r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 If               1    7    0               00 
REG[1] =  i:0
   6 Ne               5    1    4               E9 r[1] = (r[4]!=r[5])
REG[5] =  i:3
REG[4] =  NULL
REG[1] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 2, NULL) == (SELECT 1, 2, 3)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  10 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Integer          3   10    0               00 r[10]=3
REG[10] =  i:3
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Eq               8    1    3               61 r[1] = (r[3]==r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:1
  25 IfNot            1   29    0               00 
REG[1] =  i:1
  26 Eq               9    1    4               69 r[1] = (r[4]==r[9])
REG[9] =  i:2
REG[4] =  i:2
  27 IfNot            1   29    0               00 
REG[1] =  i:1
  28 Eq              10    1    5               69 r[1] = (r[5]==r[10])
REG[10] =  i:3
REG[5] =  NULL
REG[1] =  NULL
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 2, NULL) != (SELECT 1, 2, 3)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  10 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Integer          3   10    0               00 r[10]=3
REG[10] =  i:3
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Ne               8    1    3               61 r[1] = (r[3]!=r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  25 If               1   29    0               00 
REG[1] =  i:0
  26 Ne               9    1    4               69 r[1] = (r[4]!=r[9])
REG[9] =  i:2
REG[4] =  i:2
  27 If               1   29    0               00 
REG[1] =  i:0
  28 Ne              10    1    5               69 r[1] = (r[5]!=r[10])
REG[10] =  i:3
REG[5] =  NULL
REG[1] =  NULL
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (1, 2, NULL) != (1, 2, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               61 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               3    1    3               69 r[1] = (r[3]!=r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 If               1    7    0               00 
REG[1] =  i:0
   6 Ne               4    1    4               69 r[1] = (r[4]!=r[4])
REG[4] =  NULL
REG[4] =  NULL
REG[1] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, NULL) IS (1, 2, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               E1 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               3    1    3               E9 r[1] = (r[3]==r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 IfNot            1    7    0               00 
REG[1] =  i:1
   6 Eq               4    1    4               E9 r[1] = (r[4]==r[4])
REG[4] =  NULL
REG[4] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, NULL) IS NOT (1, 2, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               E1 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               3    1    3               E9 r[1] = (r[3]!=r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 If               1    7    0               00 
REG[1] =  i:0
   6 Ne               4    1    4               E9 r[1] = (r[4]!=r[4])
REG[4] =  NULL
REG[4] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 2, NULL) == (SELECT 1, 2, NULL)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  10 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Eq               8    1    3               61 r[1] = (r[3]==r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:1
  25 IfNot            1   29    0               00 
REG[1] =  i:1
  26 Eq               9    1    4               69 r[1] = (r[4]==r[9])
REG[9] =  i:2
REG[4] =  i:2
  27 IfNot            1   29    0               00 
REG[1] =  i:1
  28 Eq              10    1    5               69 r[1] = (r[5]==r[10])
REG[10] =  NULL
REG[5] =  NULL
REG[1] =  NULL
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 2, NULL) != (SELECT 1, 2, NULL)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  10 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Ne               8    1    3               61 r[1] = (r[3]!=r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  25 If               1   29    0               00 
REG[1] =  i:0
  26 Ne               9    1    4               69 r[1] = (r[4]!=r[9])
REG[9] =  i:2
REG[4] =  i:2
  27 If               1   29    0               00 
REG[1] =  i:0
  28 Ne              10    1    5               69 r[1] = (r[5]!=r[10])
REG[10] =  NULL
REG[5] =  NULL
REG[1] =  NULL
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (NULL, NULL, NULL) == (NULL, NULL, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  10 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               61 r[1] = (r[2]==r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   3 IfNot            1    7    0               00 
REG[1] =  NULL
   4 Eq               2    1    2               69 r[1] = (r[2]==r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   5 IfNot            1    7    0               00 
REG[1] =  NULL
   6 Eq               2    1    2               69 r[1] = (r[2]==r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (NULL, NULL, NULL) != (NULL, NULL, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  10 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               61 r[1] = (r[2]!=r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   3 If               1    7    0               00 
REG[1] =  NULL
   4 Ne               2    1    2               69 r[1] = (r[2]!=r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   5 If               1    7    0               00 
REG[1] =  NULL
   6 Ne               2    1    2               69 r[1] = (r[2]!=r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT NULL, NULL, NULL) == (SELECT NULL, NULL, NULL)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   9 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  10 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Null             0    8    0               00 r[8]=NULL
REG[8] =  NULL
  20 Null             0    9    0               00 r[9]=NULL
REG[9] =  NULL
  21 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Eq               8    1    3               61 r[1] = (r[3]==r[8])
REG[8] =  NULL
REG[3] =  NULL
REG[1] =  NULL
  25 IfNot            1   29    0               00 
REG[1] =  NULL
  26 Eq               9    1    4               69 r[1] = (r[4]==r[9])
REG[9] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  27 IfNot            1   29    0               00 
REG[1] =  NULL
  28 Eq              10    1    5               69 r[1] = (r[5]==r[10])
REG[10] =  NULL
REG[5] =  NULL
REG[1] =  NULL
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (SELECT NULL, NULL, NULL) != (SELECT NULL, NULL, NULL)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   9 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  10 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Null             0    8    0               00 r[8]=NULL
REG[8] =  NULL
  20 Null             0    9    0               00 r[9]=NULL
REG[9] =  NULL
  21 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Ne               8    1    3               61 r[1] = (r[3]!=r[8])
REG[8] =  NULL
REG[3] =  NULL
REG[1] =  NULL
  25 If               1   29    0               00 
REG[1] =  NULL
  26 Ne               9    1    4               69 r[1] = (r[4]!=r[9])
REG[9] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  27 If               1   29    0               00 
REG[1] =  NULL
  28 Ne              10    1    5               69 r[1] = (r[5]!=r[10])
REG[10] =  NULL
REG[5] =  NULL
REG[1] =  NULL
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 1) == (1, 1, 1)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               61 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               2    1    3               69 r[1] = (r[3]==r[2])
REG[2] =  i:1
REG[3] =  NULL
REG[1] =  NULL
   5 IfNot            1    7    0               00 
REG[1] =  NULL
   6 Eq               2    1    2               69 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 1) IS (1, 1, 1)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               E1 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               2    1    3               E9 r[1] = (r[3]==r[2])
REG[2] =  i:1
REG[3] =  NULL
REG[1] =  i:0
   5 IfNot            1    7    0               00 
REG[1] =  i:0
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 1) IS NOT (1, 1, 1)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               E1 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               2    1    3               E9 r[1] = (r[3]!=r[2])
REG[2] =  i:1
REG[3] =  NULL
REG[1] =  i:1
   5 If               1    7    0               00 
REG[1] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 1) != (1, 1, 2)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               61 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               2    1    3               69 r[1] = (r[3]!=r[2])
REG[2] =  i:1
REG[3] =  NULL
REG[1] =  NULL
   5 If               1    7    0               00 
REG[1] =  NULL
   6 Ne               4    1    2               69 r[1] = (r[2]!=r[4])
REG[4] =  i:2
REG[2] =  i:1
REG[1] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 1) IS (1, 1, 2)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               E1 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               2    1    3               E9 r[1] = (r[3]==r[2])
REG[2] =  i:1
REG[3] =  NULL
REG[1] =  i:0
   5 IfNot            1    7    0               00 
REG[1] =  i:0
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 1) IS NOT (1, 1, 2)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               E1 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               2    1    3               E9 r[1] = (r[3]!=r[2])
REG[2] =  i:1
REG[3] =  NULL
REG[1] =  i:1
   5 If               1    7    0               00 
REG[1] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, NULL, 1) != (SELECT 1, 1, 2)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  10 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  21 Integer          2   10    0               00 r[10]=2
REG[10] =  i:2
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Ne               8    1    3               61 r[1] = (r[3]!=r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  25 If               1   29    0               00 
REG[1] =  i:0
  26 Ne               9    1    4               69 r[1] = (r[4]!=r[9])
REG[9] =  i:1
REG[4] =  NULL
REG[1] =  NULL
  27 If               1   29    0               00 
REG[1] =  NULL
  28 Ne              10    1    5               69 r[1] = (r[5]!=r[10])
REG[10] =  i:2
REG[5] =  i:1
REG[1] =  i:1
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  30 Halt             0    0    0               00 
SQL: [SELECT (1, 2, 3) <= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               3    1    3               61 r[1] = (r[3]<r[3])
REG[3] =  i:2
REG[3] =  i:2
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   6 Le               4    1    4               61 r[1] = (r[4]<=r[4])
REG[4] =  i:3
REG[4] =  i:3
REG[1] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               3    1    3               61 r[1] = (r[3]>r[3])
REG[3] =  i:2
REG[3] =  i:2
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   6 Ge               4    1    4               61 r[1] = (r[4]>=r[4])
REG[4] =  i:3
REG[4] =  i:3
REG[1] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 3, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:2
REG[3] =  i:3
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 3, 3) <= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:2
REG[3] =  i:3
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:2
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:2
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) <= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:2
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:2
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 3, 3) < (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  NULL
REG[3] =  i:3
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 3, 3) > (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  NULL
REG[3] =  i:3
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) < (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               3    1    3               61 r[1] = (r[3]<r[3])
REG[3] =  NULL
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) > (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               3    1    3               61 r[1] = (r[3]>r[3])
REG[3] =  NULL
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (2, 2) BETWEEN (3, NULL) AND (3, 3)
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
  12 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  13 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  14 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  15 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               5    4    2               61 r[4] = (r[2]>r[5])
REG[5] =  i:3
REG[2] =  i:2
REG[4] =  i:0
   3 ElseNotEq        0    5    0               00 
   5 Lt               5    7    2               61 r[7] = (r[2]<r[5])
REG[5] =  i:3
REG[2] =  i:2
REG[7] =  i:1
   6 ElseNotEq        0    8    0               00 
   8 And              7    4    1               00 r[1]=(r[7] && r[4])
REG[7] =  i:1
REG[4] =  i:0
REG[1] =  i:0
   9 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  10 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    0 0             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
SQL: [CREATE TABLE t1(x, collate4t1, a);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    0 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:1
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:1
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t1            00 r[7]='t1'
REG[7] =   t2[t1](8)
  20 String8          0    8    0 t1            00 r[8]='t1'
REG[8] =   t2[t1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  22 String8          0   10    0 CREATE TABLE t1(x, collate4t1, a) 00 r[10]='CREATE TABLE t1(x, collate4t1, a)'
REG[10] =   t33[CREATE TABLE t1](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s49[06171111014F7461626C657431743102.....Otablet1t1.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s49[06171111014F7461626C657431743102.....Otablet1t1.]
REG[5] =  i:1
  25 SetCookie        0    1    1               00 
  26 ParseSchema      0    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    1 0             00 usesStmtJournal=0
  16 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s33[CREATE TABLE t1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t1](8)
REG[5] =  i:2
REG[6] =   s33[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO t1 VALUES('ABC', 1, 'ii');]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    1    1 0             01 usesStmtJournal=0
  10 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 3             00 root=2 iDb=0; t1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 String8          0    2    0 ABC           00 r[2]='ABC'
REG[2] =   t3[ABC](8)
   4 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   5 String8          0    4    0 ii            00 r[4]='ii'
REG[4] =   t2[ii](8)
   6 MakeRecord       2    3    5               00 r[5]=mkrec(r[2..4])
REG[5] =  s9[041309114142436969....ABCii]
   7 Insert           0    5    1 t1            39 intkey=r[1] data=r[5]
REG[5] =  s9[041309114142436969....ABCii]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [;INSERT INTO t1 VALUES('def', 2, 'iii');]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    1    1 0             01 usesStmtJournal=0
  10 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 3             00 root=2 iDb=0; t1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   3 String8          0    2    0 def           00 r[2]='def'
REG[2] =   t3[def](8)
   4 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   5 String8          0    4    0 iii           00 r[4]='iii'
REG[4] =   t3[iii](8)
   6 MakeRecord       2    3    5               00 r[5]=mkrec(r[2..4])
REG[5] =  s11[0413011364656602696969....def.iii]
   7 Insert           0    5    1 t1            39 intkey=r[1] data=r[5]
REG[5] =  s11[0413011364656602696969....def.iii]
REG[1] =  i:2
   8 Halt             0    0    0               00 
SQL: [;CREATE INDEX collate4i1 ON t1(x, a);]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      0    1    1 0             01 usesStmtJournal=0
  35 Goto             0    1    0               00 
   1 Noop             0   33    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:3
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:2
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 collate4i1    00 r[4]='collate4i1'
REG[4] =   t10[collate4i1](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:3
   9 String8          0    7    0 CREATE INDEX collate4i1 ON t1(x, a) 00 r[7]='CREATE INDEX collate4i1 ON t1(x, a)'
REG[7] =   t35[CREATE INDEX co](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s59[061721110153696E646578636F6C6C61..!..Sindexcolla]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s59[061721110153696E646578636F6C6C61..!..Sindexcolla]
REG[2] =  i:2
  12 SorterOpen       3    0    2 k(3,,,)       00 
  13 OpenRead         1    2    0 3             00 root=2 iDb=0; t1
  14 Rewind           1   21    0               00 
  15 Column           1    0   10               00 r[10]=t1.x
REG[10] =   s3[ABC](8)
  16 Column           1    2   11               00 r[11]=t1.a
REG[11] =   s2[ii](8)
  17 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:1
  18 MakeRecord      10    3    9               00 r[9]=mkrec(r[10..12])
REG[9] =  s9[041311094142436969....ABCii]
  19 SorterInsert     3    9    0               00 key=r[9]
REG[9] =  s9[041311094142436969....ABCii]
  20 Next             1   15    0               00 
  15 Column           1    0   10               00 r[10]=t1.x
REG[10] =   s3[def](8)
  16 Column           1    2   11               00 r[11]=t1.a
REG[11] =   s3[iii](8)
  17 Rowid            1   12    0               00 r[12]=rowid
REG[12] =  i:2
  18 MakeRecord      10    3    9               00 r[9]=mkrec(r[10..12])
REG[9] =  s11[0413130164656669696902....defiii.]
  19 SorterInsert     3    9    0               00 key=r[9]
REG[9] =  s11[0413130164656669696902....defiii.]
  20 Next             1   15    0               00 
  21 OpenWrite        2    1    0 k(3,,,)       11 root=1 iDb=0
  22 SorterSort       3   27    0               00 
  23 SorterData       3    9    2               00 r[9]=data
  24 SeekEnd          2    0    0               00 
  25 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s9[041311094142436969....ABCii]
  26 SorterNext       3   23    0               00 
  23 SorterData       3    9    2               00 r[9]=data
  24 SeekEnd          2    0    0               00 
  25 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s11[0413130164656669696902....defiii.]
  26 SorterNext       3   23    0               00 
  27 Close            1    0    0               00 
  28 Close            2    0    0               00 
  29 Close            3    0    0               00 
  30 SetCookie        0    1    2               00 
  31 ParseSchema      0    0    0 name='collate4i1' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 0             00 usesStmtJournal=0
  16 String8          0    2    0 collate4i1    00 r[2]='collate4i1'
REG[2] =   t10[collate4i1](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t10[collate4i1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s10[collate4i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t10[collate4i1](8)
REG[1] =   s10[collate4i1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s10[collate4i1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s35[CREATE INDEX co](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s10[collate4i1](8)
REG[5] =  i:3
REG[6] =   s35[CREATE INDEX co](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  32 Expire           0    1    0               00 
  33 Halt             0    0    0               00 
SQL: [;
;SELECT collate4t1 FROM t1 WHERE x = (SELECT 'abc' COLLATE nocase) AND collate4t1 = (SELECT 1);]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      0    0    2 0             01 usesStmtJournal=0
  33 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 OpenRead         1    3    0 k(3,,,)       02 root=3 iDb=0; collate4i1
   3 Explain          3    0    0 SEARCH TABLE t1 USING INDEX collate4i1 (x=?) 00 
   4 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   5 Once             0   12    0               00 
   6 Explain          6    0    0 SCALAR SUBQUERY 1 00 
   7 Null             0    3    3               00 r[3..3]=NULL; Init subquery result
REG[3] =  NULL
   8 Integer          1    4    0               00 r[4]=1; LIMIT counter
REG[4] =  i:1
   9 Explain          9    6    0 SCAN CONSTANT ROW 00 
  10 String8          0    3    0 abc           00 r[3]='abc'
REG[3] =   t3[abc](8)
  11 DecrJumpZero     4   12    0               00 if (--r[4])==0 goto 12
REG[4] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 IsNull           3   31    0               00 if r[3]==NULL goto 31
REG[3] =   t3[abc](8)
  14 SeekGE           1   31    3 1             00 key=r[3]
REG[3] =   t3[abc](8)
  31 Halt             0    0    0               00 
SQL: [;
;SELECT x FROM t1 WHERE +collate4t1 = (SELECT 'abc' COLLATE nocase) AND a = (SELECT 1);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    0    2 0             01 usesStmtJournal=0
  31 Goto             0    1    0               00 
   1 OpenRead         0    2    0 3             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   29    0               00 
   4 Column           0    1    1               00 r[1]=t1.collate4t1
REG[1] =  i:1
   5 Integer         13    3    0               00 r[3]=13; return address
REG[3] =  i:13
   6 Once             0   13    0               00 
   7 Explain          7    0    0 SCALAR SUBQUERY 1 00 
   8 Null             0    4    4               00 r[4..4]=NULL; Init subquery result
REG[4] =  NULL
   9 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
  10 Explain         10    7    0 SCAN CONSTANT ROW 00 
  11 String8          0    4    0 abc           00 r[4]='abc'
REG[4] =   t3[abc](8)
  12 DecrJumpZero     5   13    0               00 if (--r[5])==0 goto 13
REG[5] =  i:1
  13 Return           3    0    0               00 
REG[3] =  i:13
  14 Ne               4   28    1 (BINARY)      51 if r[1]!=r[4] goto 28
REG[4] =   t3[abc](8)
REG[1] =  i:1
  28 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=t1.collate4t1
REG[1] =  i:2
   5 Integer         13    3    0               00 r[3]=13; return address
REG[3] =  i:13
   6 Once             1   13    0               00 
  13 Return           3    0    0               00 
REG[3] =  i:13
  14 Ne               4   28    1 (BINARY)      51 if r[1]!=r[4] goto 28
REG[4] =   t3[abc](8)
REG[1] =  i:2
  28 Next             0    4    0               01 
  29 Halt             0    0    0               00 
SQL: [
;SELECT collate4t1 FROM t1 WHERE (x COLLATE nocase, collate4t1) = (SELECT 'def', 2);]
VDBE Trace:
   0 Init             0   22    0               00 Start at 22
  22 Transaction      0    0    2 0             01 usesStmtJournal=0
  23 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   21    0               00 
   4 Column           0    0    1               00 r[1]=t1.x
REG[1] =   s3[ABC](8)
   5 Integer         14    3    0               00 r[3]=14; return address
REG[3] =  i:14
   6 Once             0   14    0               00 
   7 Explain          7    0    0 SCALAR SUBQUERY 1 00 
   8 Null             0    4    5               00 r[4..5]=NULL; Init subquery result
REG[4] =  NULL
   9 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
  10 Explain         10    7    0 SCAN CONSTANT ROW 00 
  11 String8          0    4    0 def           00 r[4]='def'
REG[4] =   t3[def](8)
  12 Integer          2    5    0               00 r[5]=2
REG[5] =  i:2
  13 DecrJumpZero     6   14    0               00 if (--r[6])==0 goto 14
REG[6] =  i:1
  14 Return           3    0    0               00 
REG[3] =  i:14
  15 Ne               4   20    1 (NOCASE)      51 if r[1]!=r[4] goto 20
REG[4] =   t3[def](8)
REG[1] =   s3[ABC](8)
  20 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=t1.x
REG[1] =   s3[def](8)
   5 Integer         14    3    0               00 r[3]=14; return address
REG[3] =  i:14
   6 Once             1   14    0               00 
  14 Return           3    0    0               00 
REG[3] =  i:14
  15 Ne               4   20    1 (NOCASE)      51 if r[1]!=r[4] goto 20
REG[4] =   t3[def](8)
REG[1] =   s3[def](8)
  16 Column           0    1    1               00 r[1]=t1.collate4t1
REG[1] =  i:2
  17 Ne               5   20    1 (BINARY)      51 if r[1]!=r[5] goto 20
REG[5] =  i:2
REG[1] =  i:2
  18 Column           0    1    7               00 r[7]=t1.collate4t1
REG[7] =  i:2
  19 ResultRow        7    1    0               00 output=r[7]
REG[7] =  i:2
  20 Next             0    4    0               01 
  21 Halt             0    0    0               00 
SQL: [;
;SELECT collate4t1 FROM t1 WHERE (x, x) = (SELECT 2, 'def');]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    0    2 0             01 usesStmtJournal=0
  25 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 OpenRead         1    3    0 k(3,,,)       02 root=3 iDb=0; collate4i1
   3 Explain          3    0    0 SEARCH TABLE t1 USING INDEX collate4i1 (x=?) 00 
   4 Integer         13    2    0               00 r[2]=13; return address
REG[2] =  i:13
   5 Once             0   13    0               00 
   6 Explain          6    0    0 SCALAR SUBQUERY 1 00 
   7 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   8 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   9 Explain          9    6    0 SCAN CONSTANT ROW 00 
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 String8          0    4    0 def           00 r[4]='def'
REG[4] =   t3[def](8)
  12 DecrJumpZero     5   13    0               00 if (--r[5])==0 goto 13
REG[5] =  i:1
  13 Return           2    0    0               00 
REG[2] =  i:13
  14 IsNull           3   23    0               00 if r[3]==NULL goto 23
REG[3] =  i:2
  15 SeekGE           1   23    3 1             00 key=r[3]
REG[3] =  i:2
  23 Halt             0    0    0               00 
SQL: [;
;CREATE TABLE xyz(c INTEGER PRIMARY KEY, d, b);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    2 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:3
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:3
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 xyz           00 r[7]='xyz'
REG[7] =   t3[xyz](8)
  20 String8          0    8    0 xyz           00 r[8]='xyz'
REG[8] =   t3[xyz](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  22 String8          0   10    0 CREATE TABLE xyz(c INTEGER PRIMARY KEY, d, b) 00 r[10]='CREATE TABLE xyz(c INTEGER PRIMARY KEY, d, b)'
REG[10] =   t45[CREATE TABLE xy](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s63[0617131301677461626C6578797A7879.....gtablexyzxy]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s63[0617131301677461626C6578797A7879.....gtablexyzxy]
REG[5] =  i:3
  25 SetCookie        0    1    3               00 
  26 ParseSchema      0    0    0 tbl_name='xyz' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 0             00 usesStmtJournal=0
  16 String8          0    2    0 xyz           00 r[2]='xyz'
REG[2] =   t3[xyz](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[xyz](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[xyz](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[xyz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[xyz](8)
REG[1] =   s3[xyz](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[xyz](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s45[CREATE TABLE xy](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[xyz](8)
REG[5] =  i:4
REG[6] =   s45[CREATE TABLE xy](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO xyz VALUES(2, 2, 2);]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1    3 0             01 usesStmtJournal=0
  17 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 3             00 root=4 iDb=0; xyz
   2 Integer          2    1    0               00 r[1]=2
REG[1] =  i:2
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  i:2
   5 MustBeInt        1    0    0               00 
REG[1] =  i:2
   6 SoftNull         2    0    0               00 r[2]=NULL
   7 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   8 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
   9 Noop             0    0    0               00 uniqueness check for ROWID
  10 Abortable        0    0    0               00 
  11 NotExists        0   13    1               00 intkey=r[1]
REG[1] =  i:2
  13 MakeRecord       2    3    5 D             00 r[5]=mkrec(r[2..4])
REG[5] =  s6[040001010202......]
  14 Insert           0    5    1 xyz           31 intkey=r[1] data=r[5]
REG[5] =  s6[040001010202......]
REG[1] =  i:2
  15 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (collate4t1, x) IS (2, 2)
;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 0             01 usesStmtJournal=0
  17 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  18 Goto             0    1    0               00 
   1 OpenRead         0    2    0 3             00 root=2 iDb=0; t1
   2 OpenRead         1    3    0 k(3,,,)       02 root=3 iDb=0; collate4i1
   3 Explain          3    0    0 SEARCH TABLE t1 USING INDEX collate4i1 (x=?) 00 
   4 Integer          2    1    0               00 r[1]=2
REG[1] =  i:2
   5 SeekGE           1   15    1 1             00 key=r[1]
REG[1] =  i:2
  15 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (x, a) < (2, 3)
;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0    3 0             01 usesStmtJournal=0
  24 Integer          2    5    0               00 r[5]=2
REG[5] =  i:2
  25 Integer          3    6    0               00 r[6]=3
REG[6] =  i:3
  26 Goto             0    1    0               00 
   1 OpenRead         0    2    0 3             00 root=2 iDb=0; t1
   2 OpenRead         1    3    0 k(3,,,)       00 root=3 iDb=0; collate4i1
   3 Explain          3    0    0 SEARCH TABLE t1 USING INDEX collate4i1 ((x,a)<(?,?)) 00 
   4 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   5 SeekGT           1   22    1 1             00 key=r[1]
REG[1] =  NULL
   6 Integer          2    1    0               00 r[1]=2
REG[1] =  i:2
   7 Integer          3    2    0               00 r[2]=3
REG[2] =  i:3
   8 IsNull           1   22    0               00 if r[1]==NULL goto 22
REG[1] =  i:2
   9 IdxGT            1   22    1 2             00 key=r[1..2]
REG[1] =  i:2
REG[2] =  i:3
  22 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (x, a) < (2, 3)
;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0    3 0             01 usesStmtJournal=0
  24 Integer          2    5    0               00 r[5]=2
REG[5] =  i:2
  25 Integer          3    6    0               00 r[6]=3
REG[6] =  i:3
  26 Goto             0    1    0               00 
   1 OpenRead         0    2    0 3             00 root=2 iDb=0; t1
   2 OpenRead         1    3    0 k(3,,,)       00 root=3 iDb=0; collate4i1
   3 Explain          3    0    0 SEARCH TABLE t1 USING INDEX collate4i1 ((x,a)<(?,?)) 00 
   4 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   5 SeekGT           1   22    1 1             00 key=r[1]
REG[1] =  NULL
   6 Integer          2    1    0               00 r[1]=2
REG[1] =  i:2
   7 Integer          3    2    0               00 r[2]=3
REG[2] =  i:3
   8 IsNull           1   22    0               00 if r[1]==NULL goto 22
REG[1] =  i:2
   9 IdxGT            1   22    1 2             00 key=r[1..2]
REG[1] =  i:2
REG[2] =  i:3
  22 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (x, a) > (2, 1)
;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    0    3 0             01 usesStmtJournal=0
  22 Integer          2    5    0               00 r[5]=2
REG[5] =  i:2
  23 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  24 Goto             0    1    0               00 
   1 OpenRead         0    2    0 3             00 root=2 iDb=0; t1
   2 OpenRead         1    3    0 k(3,,,)       00 root=3 iDb=0; collate4i1
   3 Explain          3    0    0 SEARCH TABLE t1 USING INDEX collate4i1 ((x,a)>(?,?)) 00 
   4 Integer          2    1    0               00 r[1]=2
REG[1] =  i:2
   5 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   6 IsNull           1   20    0               00 if r[1]==NULL goto 20
REG[1] =  i:2
   7 SeekGE           1   20    1 2             00 key=r[1..2]
REG[1] =  i:2
   8 DeferredSeek     1    0    0               00 Move 0 to 1.rowid if needed
   9 Column           1    0    4               00 r[4]=t1.x
REG[4] =   s3[ABC](8)
  10 Gt               5    3    4 (BINARY)      61 r[3] = (r[4]>r[5])
REG[5] =  i:2
REG[4] =   s3[ABC](8)
REG[3] =  i:1
  11 ElseNotEq        0   14    0               00 
  14 IfNot            3   19    1               00 
REG[3] =  i:1
  15 Column           1    0    7               00 r[7]=t1.x
REG[7] =   s3[ABC](8)
  16 Column           0    1    8               00 r[8]=t1.collate4t1
REG[8] =  i:1
  17 Column           1    1    9               00 r[9]=t1.a
REG[9] =   s2[ii](8)
  18 ResultRow        7    3    0               00 output=r[7..9]
REG[7] =   s3[ABC](8)
REG[8] =  i:1
REG[9] =   s2[ii](8)
  19 Next             1    8    0               00 
   8 DeferredSeek     1    0    0               00 Move 0 to 1.rowid if needed
   9 Column           1    0    4               00 r[4]=t1.x
REG[4] =   s3[def](8)
  10 Gt               5    3    4 (BINARY)      61 r[3] = (r[4]>r[5])
REG[5] =  i:2
REG[4] =   s3[def](8)
REG[3] =  i:1
  11 ElseNotEq        0   14    0               00 
  14 IfNot            3   19    1               00 
REG[3] =  i:1
  15 Column           1    0    7               00 r[7]=t1.x
REG[7] =   s3[def](8)
  16 Column           0    1    8               00 r[8]=t1.collate4t1
REG[8] =  i:2
  17 Column           1    1    9               00 r[9]=t1.a
REG[9] =   s3[iii](8)
  18 ResultRow        7    3    0               00 output=r[7..9]
REG[7] =   s3[def](8)
REG[8] =  i:2
REG[9] =   s3[iii](8)
  19 Next             1    8    0               00 
  20 Halt             0    0    0               00 
SQL: [;INSERT INTO t1 VALUES(1, 1, 1);]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1    3 0             01 usesStmtJournal=0
  17 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 3             00 root=2 iDb=0; t1
   2 OpenWrite        1    3    0 k(3,,,)       00 root=3 iDb=0; collate4i1
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   4 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   5 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   6 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
   7 Noop             0    0    0               00 uniqueness check for collate4i1
   8 SCopy            2    6    0               00 r[6]=r[2]; x
REG[6] =  i:1
   9 SCopy            4    7    0               00 r[7]=r[4]; a
REG[7] =  i:1
  10 IntCopy          1    8    0               00 r[8]=r[1]; rowid
REG[8] =  i:3
  11 MakeRecord       6    3    5               00 r[5]=mkrec(r[6..8]); for collate4i1
REG[5] =  s5[0409090103.....]
  12 IdxInsert        1    5    6 3             10 key=r[5]
REG[5] =  s5[0409090103.....]
  13 MakeRecord       2    3    9               00 r[9]=mkrec(r[2..4])
REG[9] =  s4[04090909....]
  14 Insert           0    9    1 t1            39 intkey=r[1] data=r[9]
REG[9] =  s4[04090909....]
REG[1] =  i:3
  15 Halt             0    0    0               00 
SQL: [;INSERT INTO xyz VALUES(2, 2, 2);]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1    3 0             01 usesStmtJournal=0
  17 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 3             00 root=4 iDb=0; xyz
   2 Integer          2    1    0               00 r[1]=2
REG[1] =  i:2
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  i:2
   5 MustBeInt        1    0    0               00 
REG[1] =  i:2
   6 SoftNull         2    0    0               00 r[2]=NULL
   7 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   8 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
   9 Noop             0    0    0               00 uniqueness check for ROWID
  10 Abortable        0    0    0               00 
  11 NotExists        0   13    1               00 intkey=r[1]
REG[1] =  i:2
  12 Halt          1555    2    0 xyz.c         02 
SQL: [;INSERT INTO xyz VALUES(5, 5, 5);]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1    3 0             01 usesStmtJournal=0
  17 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 3             00 root=4 iDb=0; xyz
   2 Integer          5    1    0               00 r[1]=5
REG[1] =  i:5
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  i:5
   5 MustBeInt        1    0    0               00 
REG[1] =  i:5
   6 SoftNull         2    0    0               00 r[2]=NULL
   7 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
   8 Integer          5    4    0               00 r[4]=5
REG[4] =  i:5
   9 Noop             0    0    0               00 uniqueness check for ROWID
  10 Abortable        0    0    0               00 
  11 NotExists        0   13    1               00 intkey=r[1]
REG[1] =  i:5
  13 MakeRecord       2    3    5 D             00 r[5]=mkrec(r[2..4])
REG[5] =  s6[040001010505......]
  14 Insert           0    5    1 xyz           31 intkey=r[1] data=r[5]
REG[5] =  s6[040001010505......]
REG[1] =  i:5
  15 Halt             0    0    0               00 
SQL: [;
;SELECT collate4t1 FROM t1 WHERE (a, a) > (2, 1)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    3 0             01 usesStmtJournal=0
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  17 Goto             0    1    0               00 
   1 OpenRead         0    2    0 3             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   13    0               00 
   4 Column           0    2    2               00 r[2]=t1.a
REG[2] =   s2[ii](8)
   5 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:2
REG[2] =   s2[ii](8)
REG[1] =  i:1
   6 ElseNotEq        0    9    0               00 
   9 IfNot            1   12    1               00 
REG[1] =  i:1
  10 Column           0    1    5               00 r[5]=t1.collate4t1
REG[5] =  i:1
  11 ResultRow        5    1    0               00 output=r[5]
REG[5] =  i:1
  12 Next             0    4    0               01 
   4 Column           0    2    2               00 r[2]=t1.a
REG[2] =   s3[iii](8)
   5 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:2
REG[2] =   s3[iii](8)
REG[1] =  i:1
   6 ElseNotEq        0    9    0               00 
   9 IfNot            1   12    1               00 
REG[1] =  i:1
  10 Column           0    1    5               00 r[5]=t1.collate4t1
REG[5] =  i:2
  11 ResultRow        5    1    0               00 output=r[5]
REG[5] =  i:2
  12 Next             0    4    0               01 
   4 Column           0    2    2               00 r[2]=t1.a
REG[2] =  i:1
   5 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:2
REG[2] =  i:1
REG[1] =  i:0
   6 ElseNotEq        0    9    0               00 
   9 IfNot            1   12    1               00 
REG[1] =  i:0
  12 Next             0    4    0               01 
  13 Halt             0    0    0               00 
SQL: [SELECT x FROM t1 WHERE (x, a) < (4, 5)
;]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    3 0             01 usesStmtJournal=0
  20 Integer          4    5    0               00 r[5]=4
REG[5] =  i:4
  21 Integer          5    6    0               00 r[6]=5
REG[6] =  i:5
  22 Goto             0    1    0               00 
   1 OpenRead         1    3    0 k(3,,,)       00 root=3 iDb=0; collate4i1
   2 Explain          2    0    0 SEARCH TABLE t1 USING COVERING INDEX collate4i1 ((x,a)<(?,?)) 00 
   3 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   4 SeekGT           1   18    1 1             00 key=r[1]
REG[1] =  NULL
   5 Integer          4    1    0               00 r[1]=4
REG[1] =  i:4
   6 Integer          5    2    0               00 r[2]=5
REG[2] =  i:5
   7 IsNull           1   18    0               00 if r[1]==NULL goto 18
REG[1] =  i:4
   8 IdxGT            1   18    1 2             00 key=r[1..2]
REG[1] =  i:4
REG[2] =  i:5
   9 Column           1    0    4               00 r[4]=t1.x
REG[4] =  i:1
  10 Lt               5    3    4 (BINARY)      61 r[3] = (r[4]<r[5])
REG[5] =  i:4
REG[4] =  i:1
REG[3] =  i:1
  11 ElseNotEq        0   14    0               00 
  14 IfNot            3   17    1               00 
REG[3] =  i:1
  15 Column           1    0    7               00 r[7]=t1.x
REG[7] =  i:1
  16 ResultRow        7    1    0               00 output=r[7]
REG[7] =  i:1
  17 Next             1    8    0               00 
   8 IdxGT            1   18    1 2             00 key=r[1..2]
REG[1] =  i:4
REG[2] =  i:5
  18 Halt             0    0    0               00 
SQL: [SELECT a FROM t1 WHERE (collate4t1, x) < (4, 3)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    3 0             01 usesStmtJournal=0
  15 Integer          4    3    0               00 r[3]=4
REG[3] =  i:4
  16 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  17 Goto             0    1    0               00 
   1 OpenRead         0    2    0 3             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   13    0               00 
   4 Column           0    1    2               00 r[2]=t1.collate4t1
REG[2] =  i:1
   5 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:4
REG[2] =  i:1
REG[1] =  i:1
   6 ElseNotEq        0    9    0               00 
   9 IfNot            1   12    1               00 
REG[1] =  i:1
  10 Column           0    2    5               00 r[5]=t1.a
REG[5] =   s2[ii](8)
  11 ResultRow        5    1    0               00 output=r[5]
REG[5] =   s2[ii](8)
  12 Next             0    4    0               01 
   4 Column           0    1    2               00 r[2]=t1.collate4t1
REG[2] =  i:2
   5 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:4
REG[2] =  i:2
REG[1] =  i:1
   6 ElseNotEq        0    9    0               00 
   9 IfNot            1   12    1               00 
REG[1] =  i:1
  10 Column           0    2    5               00 r[5]=t1.a
REG[5] =   s3[iii](8)
  11 ResultRow        5    1    0               00 output=r[5]
REG[5] =   s3[iii](8)
  12 Next             0    4    0               01 
   4 Column           0    1    2               00 r[2]=t1.collate4t1
REG[2] =  i:1
   5 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:4
REG[2] =  i:1
REG[1] =  i:1
   6 ElseNotEq        0    9    0               00 
   9 IfNot            1   12    1               00 
REG[1] =  i:1
  10 Column           0    2    5               00 r[5]=t1.a
REG[5] =  i:1
  11 ResultRow        5    1    0               00 output=r[5]
REG[5] =  i:1
  12 Next             0    4    0               01 
  13 Halt             0    0    0               00 
SQL: [;INSERT INTO t1(x) VALUES('X');]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    1    3 0             01 usesStmtJournal=0
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  17 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 3             00 root=2 iDb=0; t1
   2 OpenWrite        1    3    0 k(3,,,)       00 root=3 iDb=0; collate4i1
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   4 String8          0    2    0 X             00 r[2]='X'
REG[2] =   t1[X](8)
   5 Noop             0    0    0               00 uniqueness check for collate4i1
   6 SCopy            2    6    0               00 r[6]=r[2]; x
REG[6] =   t1[X](8)
   7 SCopy            4    7    0               00 r[7]=r[4]; a
REG[7] =  NULL
   8 IntCopy          1    8    0               00 r[8]=r[1]; rowid
REG[8] =  i:4
   9 MakeRecord       6    3    5               00 r[5]=mkrec(r[6..8]); for collate4i1
REG[5] =  s6[040F00015804....X.]
  10 IdxInsert        1    5    6 3             10 key=r[5]
REG[5] =  s6[040F00015804....X.]
  11 MakeRecord       2    3    9               00 r[9]=mkrec(r[2..4])
REG[9] =  s5[040F000058....X]
  12 Insert           0    9    1 t1            39 intkey=r[1] data=r[9]
REG[9] =  s5[040F000058....X]
REG[1] =  i:4
  13 Halt             0    0    0               00 
SQL: [;CREATE TABLE xyz1(t2,tr1);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    3 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:4
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:4
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 xyz1          00 r[7]='xyz1'
REG[7] =   t4[xyz1](8)
  20 String8          0    8    0 xyz1          00 r[8]='xyz1'
REG[8] =   t4[xyz1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  22 String8          0   10    0 CREATE TABLE xyz1(t2,tr1) 00 r[10]='CREATE TABLE xyz1(t2,tr1)'
REG[10] =   t25[CREATE TABLE xy](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s45[06171515013F7461626C6578797A3178.....?tablexyz1x]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s45[06171515013F7461626C6578797A3178.....?tablexyz1x]
REG[5] =  i:4
  25 SetCookie        0    1    4               00 
  26 ParseSchema      0    0    0 tbl_name='xyz1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    4 0             00 usesStmtJournal=0
  16 String8          0    2    0 xyz1          00 r[2]='xyz1'
REG[2] =   t4[xyz1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[xyz1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[xyz1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[xyz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[xyz1](8)
REG[1] =   s3[xyz](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[xyz1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[xyz1](8)
REG[1] =   s4[xyz1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[xyz1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:5
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s25[CREATE TABLE xy](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[xyz1](8)
REG[5] =  i:5
REG[6] =   s25[CREATE TABLE xy](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;SELECT *,'a' FROM xyz LEFT JOIN t1 ON (d,d)=(a,x);]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    0    4 0             01 usesStmtJournal=0
  32 Goto             0    1    0               00 
   1 OpenRead         0    4    0 3             00 root=4 iDb=0; xyz
   2 OpenRead         1    2    0 3             00 root=2 iDb=0; t1
   3 OpenRead         2    3    0 k(3,,,)       02 root=3 iDb=0; collate4i1
   4 Explain          4    0    0 SCAN TABLE xyz 00 
   5 Rewind           0   30    0               00 
   6 Explain          6    0    0 SEARCH TABLE t1 USING INDEX collate4i1 (x=? AND a=?) 00 
   7 Integer          0    1    0               00 r[1]=0; init LEFT JOIN no-match flag
REG[1] =  i:0
   8 Column           0    1    2               00 r[2]=xyz.d
REG[2] =  i:2
   9 IsNull           2   25    0               00 if r[2]==NULL goto 25
REG[2] =  i:2
  10 Column           0    1    3               00 r[3]=xyz.d
REG[3] =  i:2
  11 IsNull           3   25    0               00 if r[3]==NULL goto 25
REG[3] =  i:2
  12 SeekGE           2   25    2 2             00 key=r[2..3]
REG[2] =  i:2
  25 IfPos            1   29    0               00 if r[1]>0 then r[1]-=0, goto 29
REG[1] =  i:0
  26 NullRow          1    0    0               00 
  27 NullRow          2    0    0               00 
  28 Goto             0   15    0               00 
  15 Integer          1    1    0               00 r[1]=1; record LEFT JOIN hit
REG[1] =  i:1
  16 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:2
  17 Column           0    1    5               00 r[5]=xyz.d
REG[5] =  i:2
  18 Column           0    2    6               00 r[6]=xyz.b
REG[6] =  i:2
  19 Column           2    0    7               00 r[7]=t1.x
REG[7] =  NULL
  20 Column           1    1    8               00 r[8]=t1.collate4t1
REG[8] =  NULL
  21 Column           2    1    9               00 r[9]=t1.a
REG[9] =  NULL
  22 String8          0   10    0 a             00 r[10]='a'
REG[10] =   t1[a](8)
  23 ResultRow        4    7    0               00 output=r[4..10]
REG[4] =  i:2
REG[5] =  i:2
REG[6] =  i:2
REG[7] =  NULL
REG[8] =  NULL
REG[9] =  NULL
REG[10] =   t1[a](8)
  24 Next             2   13    1               00 
  25 IfPos            1   29    0               00 if r[1]>0 then r[1]-=0, goto 29
REG[1] =  i:1
  29 Next             0    6    0               01 
   6 Explain          6    0    0 SEARCH TABLE t1 USING INDEX collate4i1 (x=? AND a=?) 00 
   7 Integer          0    1    0               00 r[1]=0; init LEFT JOIN no-match flag
REG[1] =  i:0
   8 Column           0    1    2               00 r[2]=xyz.d
REG[2] =  i:5
   9 IsNull           2   25    0               00 if r[2]==NULL goto 25
REG[2] =  i:5
  10 Column           0    1    3               00 r[3]=xyz.d
REG[3] =  i:5
  11 IsNull           3   25    0               00 if r[3]==NULL goto 25
REG[3] =  i:5
  12 SeekGE           2   25    2 2             00 key=r[2..3]
REG[2] =  i:5
  25 IfPos            1   29    0               00 if r[1]>0 then r[1]-=0, goto 29
REG[1] =  i:0
  26 NullRow          1    0    0               00 
  27 NullRow          2    0    0               00 
  28 Goto             0   15    0               00 
  15 Integer          1    1    0               00 r[1]=1; record LEFT JOIN hit
REG[1] =  i:1
  16 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:5
  17 Column           0    1    5               00 r[5]=xyz.d
REG[5] =  i:5
  18 Column           0    2    6               00 r[6]=xyz.b
REG[6] =  i:5
  19 Column           2    0    7               00 r[7]=t1.x
REG[7] =  NULL
  20 Column           1    1    8               00 r[8]=t1.collate4t1
REG[8] =  NULL
  21 Column           2    1    9               00 r[9]=t1.a
REG[9] =  NULL
  22 String           1   10    0 a             00 r[10]='a' (len=1)
REG[10] =   t1[a](8)
  23 ResultRow        4    7    0               00 output=r[4..10]
REG[4] =  i:5
REG[5] =  i:5
REG[6] =  i:5
REG[7] =  NULL
REG[8] =  NULL
REG[9] =  NULL
REG[10] =   t1[a](8)
  24 Next             2   13    1               00 
  25 IfPos            1   29    0               00 if r[1]>0 then r[1]-=0, goto 29
REG[1] =  i:1
  29 Next             0    6    0               01 
  30 Halt             0    0    0               00 
SQL: [;
;SELECT 1 WHERE (2,2) BETWEEN (1,1) AND (3,3)
;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Integer          2    1    0               00 r[1]=2
REG[1] =  i:2
  14 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
  15 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  16 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  17 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               4    3    1               61 r[3] = (r[1]>r[4])
REG[4] =  i:1
REG[1] =  i:2
REG[3] =  i:1
   3 ElseNotEq        0    5    0               00 
   5 IfNot            3   12    1               00 
REG[3] =  i:1
   6 Lt               5    3    1               61 r[3] = (r[1]<r[5])
REG[5] =  i:3
REG[1] =  i:2
REG[3] =  i:1
   7 ElseNotEq        0    9    0               00 
   9 IfNot            3   12    1               00 
REG[3] =  i:1
  10 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  11 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:1
  12 Halt             0    0    0               00 
SQL: [SELECT CASE (SELECT 2,2) WHEN (1, 1) THEN 2 ELSE 1 END
;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Integer          1    7    0               00 r[7]=1
REG[7] =  i:1
  22 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         11    2    0               00 r[2]=11; return address
REG[2] =  i:11
   3 Once             0   11    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   9 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  10 DecrJumpZero     5   11    0               00 if (--r[5])==0 goto 11
REG[5] =  i:1
  11 Return           2    0    0               00 
REG[2] =  i:11
  12 Eq               7    6    3               61 r[6] = (r[3]==r[7])
REG[7] =  i:1
REG[3] =  i:2
REG[6] =  i:0
  13 IfNot            6   15    0               00 
REG[6] =  i:0
  15 IfNot            6   18    1               00 
REG[6] =  i:0
  18 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  19 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  20 Halt             0    0    0               00 
SQL: [SELECT 1 WHERE (SELECT 2,2) BETWEEN (1,1) AND (3,3)
;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  24 Integer          3    7    0               00 r[7]=3
REG[7] =  i:3
  25 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         11    1    0               00 r[1]=11; return address
REG[1] =  i:11
   3 Once             0   11    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    2    3               00 r[2..3]=NULL; Init subquery result
REG[2] =  NULL
   6 Integer          1    4    0               00 r[4]=1; LIMIT counter
REG[4] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
   9 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  10 DecrJumpZero     4   11    0               00 if (--r[4])==0 goto 11
REG[4] =  i:1
  11 Return           1    0    0               00 
REG[1] =  i:11
  12 Gt               6    5    2               61 r[5] = (r[2]>r[6])
REG[6] =  i:1
REG[2] =  i:2
REG[5] =  i:1
  13 ElseNotEq        0   15    0               00 
  15 IfNot            5   22    1               00 
REG[5] =  i:1
  16 Lt               7    5    2               61 r[5] = (r[2]<r[7])
REG[7] =  i:3
REG[2] =  i:2
REG[5] =  i:1
  17 ElseNotEq        0   19    0               00 
  19 IfNot            5   22    1               00 
REG[5] =  i:1
  20 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  21 ResultRow        8    1    0               00 output=r[8]
REG[8] =  i:1
  22 Halt             0    0    0               00 
SQL: [;CREATE TABLE tr2(y INTEGER PRIMARY KEY, z);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    4 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:6
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:5
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:5
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:5
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:5
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 tr2           00 r[7]='tr2'
REG[7] =   t3[tr2](8)
  20 String8          0    8    0 tr2           00 r[8]='tr2'
REG[8] =   t3[tr2](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:6
  22 String8          0   10    0 CREATE TABLE tr2(y INTEGER PRIMARY KEY, z) 00 r[10]='CREATE TABLE tr2(y INTEGER PRIMARY KEY, z)'
REG[10] =   t42[CREATE TABLE tr](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s60[0617131301617461626C657472327472.....atabletr2tr]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s60[0617131301617461626C657472327472.....atabletr2tr]
REG[5] =  i:5
  25 SetCookie        0    1    5               00 
  26 ParseSchema      0    0    0 tbl_name='tr2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    5 0             00 usesStmtJournal=0
  16 String8          0    2    0 tr2           00 r[2]='tr2'
REG[2] =   t3[tr2](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[xyz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s3[xyz](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[xyz1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s4[xyz1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s3[tr2](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[tr2](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:6
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s42[CREATE TABLE tr](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[tr2](8)
REG[5] =  i:6
REG[6] =   s42[CREATE TABLE tr](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [
;CREATE TABLE t0(t1a,t1b,bad1);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    5 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:7
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:6
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:6
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:6
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:6
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t0            00 r[7]='t0'
REG[7] =   t2[t0](8)
  20 String8          0    8    0 t0            00 r[8]='t0'
REG[8] =   t2[t0](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:7
  22 String8          0   10    0 CREATE TABLE t0(t1a,t1b,bad1) 00 r[10]='CREATE TABLE t0(t1a,t1b,bad1)'
REG[10] =   t29[CREATE TABLE t0](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s45[0617111101477461626C657430743007.....Gtablet0t0.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s45[0617111101477461626C657430743007.....Gtablet0t0.]
REG[5] =  i:6
  25 SetCookie        0    1    6               00 
  26 ParseSchema      0    0    0 tbl_name='t0' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    6 0             00 usesStmtJournal=0
  16 String8          0    2    0 t0            00 r[2]='t0'
REG[2] =   t2[t0](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[xyz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s3[xyz](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[xyz1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s4[xyz1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s2[t0](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t0](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:7
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s29[CREATE TABLE t0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t0](8)
REG[5] =  i:7
REG[6] =   s29[CREATE TABLE t0](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO xyz VALUES(1,2,3);]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1    6 0             01 usesStmtJournal=0
  17 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 3             00 root=4 iDb=0; xyz
   2 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  i:1
   5 MustBeInt        1    0    0               00 
REG[1] =  i:1
   6 SoftNull         2    0    0               00 r[2]=NULL
   7 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   8 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
   9 Noop             0    0    0               00 uniqueness check for ROWID
  10 Abortable        0    0    0               00 
  11 NotExists        0   13    1               00 intkey=r[1]
REG[1] =  i:1
  13 MakeRecord       2    3    5 D             00 r[5]=mkrec(r[2..4])
REG[5] =  s6[040001010203......]
  14 Insert           0    5    1 xyz           31 intkey=r[1] data=r[5]
REG[5] =  s6[040001010203......]
REG[1] =  i:1
  15 Halt             0    0    0               00 
SQL: [;CREATE TABLE t1c(t2a1);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    6 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:8
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:7
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:7
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:7
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:7
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:7
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t1c           00 r[7]='t1c'
REG[7] =   t3[t1c](8)
  20 String8          0    8    0 t1c           00 r[8]='t1c'
REG[8] =   t3[t1c](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:8
  22 String8          0   10    0 CREATE TABLE t1c(t2a1) 00 r[10]='CREATE TABLE t1c(t2a1)'
REG[10] =   t22[CREATE TABLE t1](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s40[0617131301397461626C657431637431.....9tablet1ct1]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s40[0617131301397461626C657431637431.....9tablet1ct1]
REG[5] =  i:7
  25 SetCookie        0    1    7               00 
  26 ParseSchema      0    0    0 tbl_name='t1c' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    7 0             00 usesStmtJournal=0
  16 String8          0    2    0 t1c           00 r[2]='t1c'
REG[2] =   t3[t1c](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t1c](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t1c](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[xyz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t1c](8)
REG[1] =   s3[xyz](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[xyz1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t1c](8)
REG[1] =   s4[xyz1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t1c](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t1c](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t1c](8)
REG[1] =   s3[t1c](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[t1c](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:8
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s22[CREATE TABLE t1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[t1c](8)
REG[5] =  i:8
REG[6] =   s22[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;CREATE TRIGGER t2a2 AFTER UPDATE ON xyz BEGIN
     UPDATE t0 SET (bad1,t1a,t1a)=(SELECT new.c,new.c+1,new.c+2);
  END;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    1    7 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:8
   3 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   4 String8          0    3    0 t2a2          00 r[3]='t2a2'
REG[3] =   t4[t2a2](8)
   5 String8          0    4    0 xyz           00 r[4]='xyz'
REG[4] =   t3[xyz](8)
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 String8          0    6    0 CREATE TRIGGER t2a2 AFTER UPDATE ON xyz BEGIN
     UPDATE t0 SET (bad1,t1a,t1a)=(SELECT new.c,new.c+1,new.c+2);
  END 00 r[6]='CREATE TRIGGER t2a2 AFTER UPDATE ON xyz BEGIN
     UPDATE t0 SET (bad1,t1a,t1a)=(SELECT new.c
REG[6] =   t117[CREATE TRIGGER ](8)
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
REG[7] =  s138[071B1513088177747269676765727432......wtriggert2]
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
REG[7] =  s138[071B1513088177747269676765727432......wtriggert2]
REG[1] =  i:8
  10 SetCookie        0    1    8               00 
  11 ParseSchema      0    0    0 type='trigger' AND name='t2a2' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    8 0             00 usesStmtJournal=0
  16 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  17 String8          0    3    0 t2a2          00 r[3]='t2a2'
REG[3] =   t4[t2a2](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[index](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t2a2](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t4[t2a2](8)
REG[1] =   s4[t2a2](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t2a2](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:0
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s117[CREATE TRIGGER ](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t2a2](8)
REG[5] =  i:0
REG[6] =   s117[CREATE TRIGGER ](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;UPDATE xyz SET b=7;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    1    8 0             01 usesStmtJournal=0
  24 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    4    0 0             00 root=4 iDb=0; xyz
   3 Explain          3    0    0 SCAN TABLE xyz 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:2
   7 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:5
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:5
   7 Next             0    5    0               01 
   8 OpenWrite        0    4    0 3             00 root=4 iDb=0; xyz
   9 RowSetRead       1   22    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  10 NotExists        0    9    2               00 intkey=r[2]
REG[2] =  i:1
  11 Rowid            0    3    0               00 r[3]=rowid; xyz.c
REG[3] =  i:1
  12 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  13 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  14 Copy             2    6    0               00 r[6]=r[2]
REG[6] =  i:1
  15 Null             0    7    0               00 r[7]=NULL
REG[7] =  NULL
  16 Column           0    1    8               00 r[8]=xyz.d
REG[8] =  i:2
  17 Integer          7    9    0               00 r[9]=7
REG[9] =  i:7
  18 MakeRecord       7    3   10 D             00 r[10]=mkrec(r[7..9])
REG[10] =  s6[040001010207......]
  19 Insert           0   10    6 xyz           05 intkey=r[6] data=r[10]
REG[10] =  s6[040001010207......]
REG[6] =  i:1
  20 Program          2    9   11 program       01 Call: t2a2.default
   0 Init             0    1    0 -- TRIGGER t2a2 00 Start at 1; Start: t2a2.default (AFTER UPDATE ON xyz)
   1 Trace         2147483647    1    0 -- UPDATE t0 SET (bad1,t1a,t1a)=(SELECT new.c,new.c+1,new.c+2) 00 
   2 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   3 OpenWrite        0    7    0 3             00 root=7 iDb=0; t0
   4 Explain          4    0    0 SCAN TABLE t0 00 
   5 Rewind           0   29    0               00 
  29 ResetCount       0    0    0               00 
  30 Halt             0    0    0               00 End: t2a2.default
  21 Goto             0    9    0               00 
   9 RowSetRead       1   22    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  10 NotExists        0    9    2               00 intkey=r[2]
REG[2] =  i:2
  11 Rowid            0    3    0               00 r[3]=rowid; xyz.c
REG[3] =  i:2
  12 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  13 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  14 Copy             2    6    0               00 r[6]=r[2]
REG[6] =  i:2
  15 Null             0    7    0               00 r[7]=NULL
REG[7] =  NULL
  16 Column           0    1    8               00 r[8]=xyz.d
REG[8] =  i:2
  17 Integer          7    9    0               00 r[9]=7
REG[9] =  i:7
  18 MakeRecord       7    3   10 D             00 r[10]=mkrec(r[7..9])
REG[10] =  s6[040001010207......]
  19 Insert           0   10    6 xyz           05 intkey=r[6] data=r[10]
REG[10] =  s6[040001010207......]
REG[6] =  i:2
  20 Program          2    9   11 program       01 Call: t2a2.default
   0 Init             1    1    0 -- TRIGGER t2a2 00 Start at 1; Start: t2a2.default (AFTER UPDATE ON xyz)
   1 Trace         2147483647    1    0 -- UPDATE t0 SET (bad1,t1a,t1a)=(SELECT new.c,new.c+1,new.c+2) 00 
   2 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   3 OpenWrite        0    7    0 3             00 root=7 iDb=0; t0
   4 Explain          4    0    0 SCAN TABLE t0 00 
   5 Rewind           0   29    0               00 
  29 ResetCount       0    0    0               00 
  30 Halt             0    0    0               00 End: t2a2.default
  21 Goto             0    9    0               00 
   9 RowSetRead       1   22    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:5
  10 NotExists        0    9    2               00 intkey=r[2]
REG[2] =  i:5
  11 Rowid            0    3    0               00 r[3]=rowid; xyz.c
REG[3] =  i:5
  12 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  13 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  14 Copy             2    6    0               00 r[6]=r[2]
REG[6] =  i:5
  15 Null             0    7    0               00 r[7]=NULL
REG[7] =  NULL
  16 Column           0    1    8               00 r[8]=xyz.d
REG[8] =  i:5
  17 Integer          7    9    0               00 r[9]=7
REG[9] =  i:7
  18 MakeRecord       7    3   10 D             00 r[10]=mkrec(r[7..9])
REG[10] =  s6[040001010507......]
  19 Insert           0   10    6 xyz           05 intkey=r[6] data=r[10]
REG[10] =  s6[040001010507......]
REG[6] =  i:5
  20 Program          2    9   11 program       01 Call: t2a2.default
   0 Init             2    1    0 -- TRIGGER t2a2 00 Start at 1; Start: t2a2.default (AFTER UPDATE ON xyz)
   1 Trace         2147483647    1    0 -- UPDATE t0 SET (bad1,t1a,t1a)=(SELECT new.c,new.c+1,new.c+2) 00 
   2 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   3 OpenWrite        0    7    0 3             00 root=7 iDb=0; t0
   4 Explain          4    0    0 SCAN TABLE t0 00 
   5 Rewind           0   29    0               00 
  29 ResetCount       0    0    0               00 
  30 Halt             0    0    0               00 End: t2a2.default
  21 Goto             0    9    0               00 
   9 RowSetRead       1   22    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:5
  22 Halt             0    0    0               00 
SQL: [;SELECT * FROM xyz1;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    8 0             01 usesStmtJournal=0
  10 Goto             0    1    0               00 
   1 OpenRead         0    5    0 2             00 root=5 iDb=0; xyz1
   2 Explain          2    0    0 SCAN TABLE xyz1 00 
   3 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [;
;UPDATE xyz1 SET t2=97;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    1    8 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenWrite        0    5    0 2             00 root=5 iDb=0; xyz1
   3 Explain          3    0    0 SCAN TABLE xyz1 00 
   4 Rewind           0   12    0               00 
  12 Halt             0    0    0               00 
SQL: [;
;CREATE TABLE t3(t3a, t3b, t6, t6ab, t6b);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    8 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:9
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:9
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:9
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:9
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:9
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:9
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t3            00 r[7]='t3'
REG[7] =   t2[t3](8)
  20 String8          0    8    0 t3            00 r[8]='t3'
REG[8] =   t2[t3](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:9
  22 String8          0   10    0 CREATE TABLE t3(t3a, t3b, t6, t6ab, t6b) 00 r[10]='CREATE TABLE t3(t3a, t3b, t6, t6ab, t6b)'
REG[10] =   t40[CREATE TABLE t3](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s56[06171111015D7461626C657433743309.....]tablet3t3.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s56[06171111015D7461626C657433743309.....]tablet3t3.]
REG[5] =  i:9
  25 SetCookie        0    1    9               00 
  26 ParseSchema      0    0    0 tbl_name='t3' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    9 0             00 usesStmtJournal=0
  16 String8          0    2    0 t3            00 r[2]='t3'
REG[2] =   t2[t3](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t3](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t3](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[xyz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t3](8)
REG[1] =   s3[xyz](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[xyz1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t3](8)
REG[1] =   s4[xyz1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t3](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t3](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t3](8)
REG[1] =   s3[t1c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[xyz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t3](8)
REG[1] =   s3[xyz](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t3](8)
REG[1] =   s2[t3](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t3](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:9
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s40[CREATE TABLE t3](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t3](8)
REG[5] =  i:9
REG[6] =   s40[CREATE TABLE t3](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;SELECT * FROM t3;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    9 0             01 usesStmtJournal=0
  13 Goto             0    1    0               00 
   1 OpenRead         0    9    0 5             00 root=9 iDb=0; t3
   2 Explain          2    0    0 SCAN TABLE t3 00 
   3 Rewind           0   11    0               00 
  11 Halt             0    0    0               00 
SQL: [;
;CREATE TABLE t7a(t7b, t7ax);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    9 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:10
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:10
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:10
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:10
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:10
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:10
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t7a           00 r[7]='t7a'
REG[7] =   t3[t7a](8)
  20 String8          0    8    0 t7a           00 r[8]='t7a'
REG[8] =   t3[t7a](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:10
  22 String8          0   10    0 CREATE TABLE t7a(t7b, t7ax) 00 r[10]='CREATE TABLE t7a(t7b, t7ax)'
REG[10] =   t27[CREATE TABLE t7](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s45[0617131301437461626C657437617437.....Ctablet7at7]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s45[0617131301437461626C657437617437.....Ctablet7at7]
REG[5] =  i:10
  25 SetCookie        0    1   10               00 
  26 ParseSchema      0    0    0 tbl_name='t7a' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   10 0             00 usesStmtJournal=0
  16 String8          0    2    0 t7a           00 r[2]='t7a'
REG[2] =   t3[t7a](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t7a](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t7a](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[xyz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t7a](8)
REG[1] =   s3[xyz](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[xyz1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t7a](8)
REG[1] =   s4[xyz1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t7a](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t7a](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t7a](8)
REG[1] =   s3[t1c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[xyz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t7a](8)
REG[1] =   s3[xyz](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t7a](8)
REG[1] =   s2[t3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t7a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t7a](8)
REG[1] =   s3[t7a](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[t7a](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:10
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s27[CREATE TABLE t7](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[t7a](8)
REG[5] =  i:10
REG[6] =   s27[CREATE TABLE t7](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;CREATE TABLE t8a(t8b);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   10 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:11
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:11
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:11
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:11
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:11
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:11
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t8a           00 r[7]='t8a'
REG[7] =   t3[t8a](8)
  20 String8          0    8    0 t8a           00 r[8]='t8a'
REG[8] =   t3[t8a](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:11
  22 String8          0   10    0 CREATE TABLE t8a(t8b) 00 r[10]='CREATE TABLE t8a(t8b)'
REG[10] =   t21[CREATE TABLE t8](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s39[0617131301377461626C657438617438.....7tablet8at8]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s39[0617131301377461626C657438617438.....7tablet8at8]
REG[5] =  i:11
  25 SetCookie        0    1   11               00 
  26 ParseSchema      0    0    0 tbl_name='t8a' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   11 0             00 usesStmtJournal=0
  16 String8          0    2    0 t8a           00 r[2]='t8a'
REG[2] =   t3[t8a](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t8a](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t8a](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[xyz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t8a](8)
REG[1] =   s3[xyz](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[xyz1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t8a](8)
REG[1] =   s4[xyz1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t8a](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t8a](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t8a](8)
REG[1] =   s3[t1c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[xyz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t8a](8)
REG[1] =   s3[xyz](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t8a](8)
REG[1] =   s2[t3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t7a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t8a](8)
REG[1] =   s3[t7a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t8a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t8a](8)
REG[1] =   s3[t8a](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[t8a](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:11
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s21[CREATE TABLE t8](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[t8a](8)
REG[5] =  i:11
REG[6] =   s21[CREATE TABLE t8](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;
;CREATE TABLE i8c ( t9, t9ca, PRIMARY KEY (t9, t9ca) );]
VDBE Trace:
   0 Init             0   39    0               00 Start at 39
  39 Transaction      0    1   11 0             01 usesStmtJournal=0
  40 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:12
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:12
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:12
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      0    4    2               00 r[4]=root iDb=0 flags=2
REG[4] =  i:13
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:13
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_i8c_1 00 r[7]='sqlite_autoindex_i8c_1'
REG[7] =   t22[sqlite_autoinde](8)
  17 String8          0    8    0 i8c           00 r[8]='i8c'
REG[8] =   t3[i8c](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:13
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s37[061739130100696E64657873716C6974..9...indexsqlit]
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  s37[061739130100696E64657873716C6974..9...indexsqlit]
REG[5] =  i:13
  22 Close            0    0    0               00 
  23 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  24 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  25 Explain         25    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  26 SeekRowid        2   28    1               00 intkey=r[1]
REG[1] =  i:12
  27 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:12
  28 IsNull          13   36    0               00 if r[13]==NULL goto 36
REG[13] =  i:12
  29 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  30 String8          0   15    0 i8c           00 r[15]='i8c'
REG[15] =   t3[i8c](8)
  31 String8          0   16    0 i8c           00 r[16]='i8c'
REG[16] =   t3[i8c](8)
  32 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:12
  33 String8          0   18    0 CREATE TABLE i8c ( t9, t9ca, PRIMARY KEY (t9, t9ca) ) 00 r[18]='CREATE TABLE i8c ( t9, t9ca, PRIMARY KEY (t9, t9ca) )'
REG[18] =   t53[CREATE TABLE i8](8)
  34 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s71[0617131301777461626C656938636938.....wtablei8ci8]
  35 Insert           2   19   13               00 intkey=r[13] data=r[19]
REG[19] =  s71[0617131301777461626C656938636938.....wtablei8ci8]
REG[13] =  i:12
  36 SetCookie        0    1   12               00 
  37 ParseSchema      0    0    0 tbl_name='i8c' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   12 0             00 usesStmtJournal=0
  16 String8          0    2    0 i8c           00 r[2]='i8c'
REG[2] =   t3[i8c](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[i8c](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[i8c](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[xyz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[i8c](8)
REG[1] =   s3[xyz](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[xyz1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[i8c](8)
REG[1] =   s4[xyz1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[i8c](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[i8c](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[i8c](8)
REG[1] =   s3[t1c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[xyz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[i8c](8)
REG[1] =   s3[xyz](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[i8c](8)
REG[1] =   s2[t3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t7a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[i8c](8)
REG[1] =   s3[t7a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t8a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[i8c](8)
REG[1] =   s3[t8a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[i8c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[i8c](8)
REG[1] =   s3[i8c](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[i8c](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:12
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s53[CREATE TABLE i8](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[i8c](8)
REG[5] =  i:12
REG[6] =   s53[CREATE TABLE i8](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[i8c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[i8c](8)
REG[1] =   s3[i8c](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s22[sqlite_autoinde](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:13
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =  NULL
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s22[sqlite_autoinde](8)
REG[5] =  i:13
REG[6] =  NULL
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  38 Halt             0    0    0               00 
SQL: [;CREATE TABLE t10 ( e );]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   12 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:14
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:14
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:14
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:14
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:14
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:14
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t10           00 r[7]='t10'
REG[7] =   t3[t10](8)
  20 String8          0    8    0 t10           00 r[8]='t10'
REG[8] =   t3[t10](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:14
  22 String8          0   10    0 CREATE TABLE t10 ( e ) 00 r[10]='CREATE TABLE t10 ( e )'
REG[10] =   t22[CREATE TABLE t1](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s40[0617131301397461626C657431307431.....9tablet10t1]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s40[0617131301397461626C657431307431.....9tablet10t1]
REG[5] =  i:14
  25 SetCookie        0    1   13               00 
  26 ParseSchema      0    0    0 tbl_name='t10' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   13 0             00 usesStmtJournal=0
  16 String8          0    2    0 t10           00 r[2]='t10'
REG[2] =   t3[t10](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t10](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t10](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[xyz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t10](8)
REG[1] =   s3[xyz](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[xyz1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t10](8)
REG[1] =   s4[xyz1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t10](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t10](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t10](8)
REG[1] =   s3[t1c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[xyz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t10](8)
REG[1] =   s3[xyz](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t10](8)
REG[1] =   s2[t3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t7a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t10](8)
REG[1] =   s3[t7a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t8a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t10](8)
REG[1] =   s3[t8a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[i8c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t10](8)
REG[1] =   s3[i8c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[i8c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t10](8)
REG[1] =   s3[i8c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t10](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t10](8)
REG[1] =   s3[t10](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[t10](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:14
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s22[CREATE TABLE t1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[t10](8)
REG[5] =  i:14
REG[6] =   s22[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t1 WHERE (x,x)>=(0,0) ORDER BY x;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    0   13 0             01 usesStmtJournal=0
  22 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  23 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    2    0 3             00 root=2 iDb=0; t1
   3 OpenRead         2    3    0 k(3,,,)       00 root=3 iDb=0; collate4i1
   4 Explain          4    0    0 SEARCH TABLE t1 USING INDEX collate4i1 (x>?) 00 
   5 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   6 IsNull           1   20    0               00 if r[1]==NULL goto 20
REG[1] =  i:0
   7 SeekGE           2   20    1 1             00 key=r[1]
REG[1] =  i:0
   8 DeferredSeek     2    0    0               00 Move 0 to 2.rowid if needed
   9 Column           2    0    3               00 r[3]=t1.x
REG[3] =  i:1
  10 Gt               4    2    3 (BINARY)      61 r[2] = (r[3]>r[4])
REG[4] =  i:0
REG[3] =  i:1
REG[2] =  i:1
  11 ElseNotEq        0   14    0               00 
  14 IfNot            2   19    1               00 
REG[2] =  i:1
  15 Column           2    0    5               00 r[5]=t1.x
REG[5] =  i:1
  16 Column           0    1    6               00 r[6]=t1.collate4t1
REG[6] =  i:1
  17 Column           2    1    7               00 r[7]=t1.a
REG[7] =  i:1
  18 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =  i:1
REG[6] =  i:1
REG[7] =  i:1
  19 Next             2    8    0               00 
   8 DeferredSeek     2    0    0               00 Move 0 to 2.rowid if needed
   9 Column           2    0    3               00 r[3]=t1.x
REG[3] =   s3[ABC](8)
  10 Gt               4    2    3 (BINARY)      61 r[2] = (r[3]>r[4])
REG[4] =  i:0
REG[3] =   s3[ABC](8)
REG[2] =  i:1
  11 ElseNotEq        0   14    0               00 
  14 IfNot            2   19    1               00 
REG[2] =  i:1
  15 Column           2    0    5               00 r[5]=t1.x
REG[5] =   s3[ABC](8)
  16 Column           0    1    6               00 r[6]=t1.collate4t1
REG[6] =  i:1
  17 Column           2    1    7               00 r[7]=t1.a
REG[7] =   s2[ii](8)
  18 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s3[ABC](8)
REG[6] =  i:1
REG[7] =   s2[ii](8)
  19 Next             2    8    0               00 
   8 DeferredSeek     2    0    0               00 Move 0 to 2.rowid if needed
   9 Column           2    0    3               00 r[3]=t1.x
REG[3] =   s1[X](8)
  10 Gt               4    2    3 (BINARY)      61 r[2] = (r[3]>r[4])
REG[4] =  i:0
REG[3] =   s1[X](8)
REG[2] =  i:1
  11 ElseNotEq        0   14    0               00 
  14 IfNot            2   19    1               00 
REG[2] =  i:1
  15 Column           2    0    5               00 r[5]=t1.x
REG[5] =   s1[X](8)
  16 Column           0    1    6               00 r[6]=t1.collate4t1
REG[6] =  NULL
  17 Column           2    1    7               00 r[7]=t1.a
REG[7] =  NULL
  18 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[X](8)
REG[6] =  NULL
REG[7] =  NULL
  19 Next             2    8    0               00 
   8 DeferredSeek     2    0    0               00 Move 0 to 2.rowid if needed
   9 Column           2    0    3               00 r[3]=t1.x
REG[3] =   s3[def](8)
  10 Gt               4    2    3 (BINARY)      61 r[2] = (r[3]>r[4])
REG[4] =  i:0
REG[3] =   s3[def](8)
REG[2] =  i:1
  11 ElseNotEq        0   14    0               00 
  14 IfNot            2   19    1               00 
REG[2] =  i:1
  15 Column           2    0    5               00 r[5]=t1.x
REG[5] =   s3[def](8)
  16 Column           0    1    6               00 r[6]=t1.collate4t1
REG[6] =  i:2
  17 Column           2    1    7               00 r[7]=t1.a
REG[7] =   s3[iii](8)
  18 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s3[def](8)
REG[6] =  i:2
REG[7] =   s3[iii](8)
  19 Next             2    8    0               00 
  20 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t3 WHERE (t6ab,t6ab)<=(5,0) ORDER BY t6ab DESC;]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    0   13 0             01 usesStmtJournal=0
  32 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
  33 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  34 Goto             0    1    0               00 
   1 SorterOpen       1    7    0 k(1,-B)       00 
   2 OpenRead         0    9    0 5             00 root=9 iDb=0; t3
   3 Explain          3    0    0 SCAN TABLE t3 00 
   4 Rewind           0   19    0               00 
  19 Explain         19    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  20 OpenPseudo       2   12    7               00 7 columns in r[12]
  21 SorterSort       1   30    0               00 
  30 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t3 WHERE (t3b,t6ab)>=(3,0) ORDER BY t3b;]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    0   13 0             01 usesStmtJournal=0
  32 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  33 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  34 Goto             0    1    0               00 
   1 SorterOpen       1    7    0 k(1,B)        00 
   2 OpenRead         0    9    0 5             00 root=9 iDb=0; t3
   3 Explain          3    0    0 SCAN TABLE t3 00 
   4 Rewind           0   19    0               00 
  19 Explain         19    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  20 OpenPseudo       2   12    7               00 7 columns in r[12]
  21 SorterSort       1   30    0               00 
  30 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t3 WHERE (t6,t3b)<(3,0) ORDER BY t6 DESC;]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    0   13 0             01 usesStmtJournal=0
  32 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  33 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  34 Goto             0    1    0               00 
   1 SorterOpen       1    7    0 k(1,-B)       00 
   2 OpenRead         0    9    0 5             00 root=9 iDb=0; t3
   3 Explain          3    0    0 SCAN TABLE t3 00 
   4 Rewind           0   19    0               00 
  19 Explain         19    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  20 OpenPseudo       2   12    7               00 7 columns in r[12]
  21 SorterSort       1   30    0               00 
  30 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t7a WHERE (t7b,t7b)>(3,33) ORDER BY t7b;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   13 0             01 usesStmtJournal=0
  26 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  27 Integer         33    4    0               00 r[4]=33
REG[4] =  i:33
  28 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 OpenRead         0   10    0 2             00 root=10 iDb=0; t7a
   3 Explain          3    0    0 SCAN TABLE t7a 00 
   4 Rewind           0   16    0               00 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    9    4               00 4 columns in r[9]
  18 SorterSort       1   24    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t0 WHERE (t1b,t1a)>=(3,33) ORDER BY t1b;]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    0   13 0             01 usesStmtJournal=0
  28 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  29 Integer         33    4    0               00 r[4]=33
REG[4] =  i:33
  30 Goto             0    1    0               00 
   1 SorterOpen       1    5    0 k(1,B)        00 
   2 OpenRead         0    7    0 3             00 root=7 iDb=0; t0
   3 Explain          3    0    0 SCAN TABLE t0 00 
   4 Rewind           0   17    0               00 
  17 Explain         17    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  18 OpenPseudo       2   10    5               00 5 columns in r[10]
  19 SorterSort       1   26    0               00 
  26 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t1 WHERE (collate4t1,collate4t1)<(3,34) ORDER BY collate4t1 DESC;]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    0   13 0             01 usesStmtJournal=0
  28 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  29 Integer         34    4    0               00 r[4]=34
REG[4] =  i:34
  30 Goto             0    1    0               00 
   1 SorterOpen       1    5    0 k(1,-B)       00 
   2 OpenRead         0    2    0 3             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   17    0               00 
   5 Column           0    1    2               00 r[2]=t1.collate4t1
REG[2] =  i:1
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:1
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   16    1               00 
REG[1] =  i:1
  11 Column           0    0    6               00 r[6]=t1.x
REG[6] =   s3[ABC](8)
  12 Column           0    2    7               00 r[7]=t1.a
REG[7] =   s2[ii](8)
  13 Column           0    1    5               00 r[5]=t1.collate4t1
REG[5] =  i:1
  14 MakeRecord       5    3    9               00 r[9]=mkrec(r[5..7])
REG[9] =  s9[040913114142436969....ABCii]
  15 SorterInsert     1    9    5 3             00 key=r[9]
REG[9] =  s9[040913114142436969....ABCii]
  16 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=t1.collate4t1
REG[2] =  i:2
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:2
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   16    1               00 
REG[1] =  i:1
  11 Column           0    0    6               00 r[6]=t1.x
REG[6] =   s3[def](8)
  12 Column           0    2    7               00 r[7]=t1.a
REG[7] =   s3[iii](8)
  13 Column           0    1    5               00 r[5]=t1.collate4t1
REG[5] =  i:2
  14 MakeRecord       5    3    9               00 r[9]=mkrec(r[5..7])
REG[9] =  s11[0401131302646566696969.....defiii]
  15 SorterInsert     1    9    5 3             00 key=r[9]
REG[9] =  s11[0401131302646566696969.....defiii]
  16 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=t1.collate4t1
REG[2] =  i:1
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:1
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   16    1               00 
REG[1] =  i:1
  11 Column           0    0    6               00 r[6]=t1.x
REG[6] =  i:1
  12 Column           0    2    7               00 r[7]=t1.a
REG[7] =  i:1
  13 Column           0    1    5               00 r[5]=t1.collate4t1
REG[5] =  i:1
  14 MakeRecord       5    3    9               00 r[9]=mkrec(r[5..7])
REG[9] =  s4[04090909....]
  15 SorterInsert     1    9    5 3             00 key=r[9]
REG[9] =  s4[04090909....]
  16 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=t1.collate4t1
REG[2] =  NULL
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  NULL
REG[1] =  NULL
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   16    1               00 
REG[1] =  NULL
  16 Next             0    5    0               01 
  17 Explain         17    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  18 OpenPseudo       2   10    5               00 5 columns in r[10]
  19 SorterSort       1   26    0               00 
  20 SorterData       1   10    2               00 r[10]=data
  21 Column           2    2    8               00 r[8]=a
REG[8] =   s3[iii](8)
  22 Column           2    0    7               00 r[7]=collate4t1
REG[7] =  i:2
  23 Column           2    1    6               00 r[6]=x
REG[6] =   s3[def](8)
  24 ResultRow        6    3    0               00 output=r[6..8]
REG[6] =   s3[def](8)
REG[7] =  i:2
REG[8] =   s3[iii](8)
  25 SorterNext       1   20    0               00 
  20 SorterData       1   10    2               00 r[10]=data
  21 Column           2    2    8               00 r[8]=a
REG[8] =   s2[ii](8)
  22 Column           2    0    7               00 r[7]=collate4t1
REG[7] =  i:1
  23 Column           2    1    6               00 r[6]=x
REG[6] =   s3[ABC](8)
  24 ResultRow        6    3    0               00 output=r[6..8]
REG[6] =   s3[ABC](8)
REG[7] =  i:1
REG[8] =   s2[ii](8)
  25 SorterNext       1   20    0               00 
  20 SorterData       1   10    2               00 r[10]=data
  21 Column           2    2    8               00 r[8]=a
REG[8] =  i:1
  22 Column           2    0    7               00 r[7]=collate4t1
REG[7] =  i:1
  23 Column           2    1    6               00 r[6]=x
REG[6] =  i:1
  24 ResultRow        6    3    0               00 output=r[6..8]
REG[6] =  i:1
REG[7] =  i:1
REG[8] =  i:1
  25 SorterNext       1   20    0               00 
  26 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM xyz WHERE (c,d)<(3,33) ORDER BY c DESC;]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      0    0   13 0             01 usesStmtJournal=0
  19 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  20 Integer         33    4    0               00 r[4]=33
REG[4] =  i:33
  21 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    4    0 3             00 root=4 iDb=0; xyz
   3 Explain          3    0    0 SEARCH TABLE xyz USING INTEGER PRIMARY KEY (rowid<?) 00 
   4 Integer          3    1    0               00 r[1]=3
REG[1] =  i:3
   5 SeekLE           0   17    1               00 key=r[1]; pk
REG[1] =  i:3
   6 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
   7 Lt               3    1    2               64 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:2
REG[1] =  i:1
   8 ElseNotEq        0   11    0               00 
  11 IfNot            1   16    1               00 
REG[1] =  i:1
  12 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:2
  13 Column           0    1    6               00 r[6]=xyz.d
REG[6] =  i:2
  14 Column           0    2    7               00 r[7]=xyz.b
REG[7] =  i:7
  15 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =  i:2
REG[6] =  i:2
REG[7] =  i:7
  16 Prev             0    6    0               00 
   6 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   7 Lt               3    1    2               64 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:1
REG[1] =  i:1
   8 ElseNotEq        0   11    0               00 
  11 IfNot            1   16    1               00 
REG[1] =  i:1
  12 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:1
  13 Column           0    1    6               00 r[6]=xyz.d
REG[6] =  i:2
  14 Column           0    2    7               00 r[7]=xyz.b
REG[7] =  i:7
  15 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =  i:1
REG[6] =  i:2
REG[7] =  i:7
  16 Prev             0    6    0               00 
  17 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t7a WHERE (5,0)>(t7ax,t7ax) ORDER BY t7ax DESC;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   13 0             01 usesStmtJournal=0
  26 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
  27 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  28 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,-B)       00 
   2 OpenRead         0   10    0 2             00 root=10 iDb=0; t7a
   3 Explain          3    0    0 SCAN TABLE t7a 00 
   4 Rewind           0   16    0               00 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    9    4               00 4 columns in r[9]
  18 SorterSort       1   24    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t7a WHERE (3,0)<(t7ax,t7b) ORDER BY t7ax;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   13 0             01 usesStmtJournal=0
  26 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  27 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  28 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 OpenRead         0   10    0 2             00 root=10 iDb=0; t7a
   3 Explain          3    0    0 SCAN TABLE t7a 00 
   4 Rewind           0   16    0               00 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    9    4               00 4 columns in r[9]
  18 SorterSort       1   24    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t3 WHERE (3,0)<=(t6ab,t6ab) ORDER BY t6ab;]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    0   13 0             01 usesStmtJournal=0
  32 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  33 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  34 Goto             0    1    0               00 
   1 SorterOpen       1    7    0 k(1,B)        00 
   2 OpenRead         0    9    0 5             00 root=9 iDb=0; t3
   3 Explain          3    0    0 SCAN TABLE t3 00 
   4 Rewind           0   19    0               00 
  19 Explain         19    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  20 OpenPseudo       2   12    7               00 7 columns in r[12]
  21 SorterSort       1   30    0               00 
  30 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t0 WHERE (3,0)>(bad1,bad1) ORDER BY bad1 DESC;]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    0   13 0             01 usesStmtJournal=0
  28 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  29 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  30 Goto             0    1    0               00 
   1 SorterOpen       1    5    0 k(1,-B)       00 
   2 OpenRead         0    7    0 3             00 root=7 iDb=0; t0
   3 Explain          3    0    0 SCAN TABLE t0 00 
   4 Rewind           0   17    0               00 
  17 Explain         17    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  18 OpenPseudo       2   10    5               00 5 columns in r[10]
  19 SorterSort       1   26    0               00 
  26 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t7a WHERE (3,0)>=(t7b,t7b) ORDER BY t7b DESC;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   13 0             01 usesStmtJournal=0
  26 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  27 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  28 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,-B)       00 
   2 OpenRead         0   10    0 2             00 root=10 iDb=0; t7a
   3 Explain          3    0    0 SCAN TABLE t7a 00 
   4 Rewind           0   16    0               00 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    9    4               00 4 columns in r[9]
  18 SorterSort       1   24    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t0 WHERE (3,32)<(t1a,t1a) ORDER BY t1a;]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    0   13 0             01 usesStmtJournal=0
  28 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  29 Integer         32    4    0               00 r[4]=32
REG[4] =  i:32
  30 Goto             0    1    0               00 
   1 SorterOpen       1    5    0 k(1,B)        00 
   2 OpenRead         0    7    0 3             00 root=7 iDb=0; t0
   3 Explain          3    0    0 SCAN TABLE t0 00 
   4 Rewind           0   17    0               00 
  17 Explain         17    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  18 OpenPseudo       2   10    5               00 5 columns in r[10]
  19 SorterSort       1   26    0               00 
  26 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t8a WHERE (3,33)<(t8b,t8b) ORDER BY t8b;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   13 0             01 usesStmtJournal=0
  24 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  25 Integer         33    4    0               00 r[4]=33
REG[4] =  i:33
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0   11    0 1             00 root=11 iDb=0; t8a
   3 Explain          3    0    0 SCAN TABLE t8a 00 
   4 Rewind           0   15    0               00 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t1 WHERE (3,33)>=(collate4t1,a) ORDER BY collate4t1 DESC;]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    0   13 0             01 usesStmtJournal=0
  28 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  29 Integer         33    4    0               00 r[4]=33
REG[4] =  i:33
  30 Goto             0    1    0               00 
   1 SorterOpen       1    5    0 k(1,-B)       00 
   2 OpenRead         0    2    0 3             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   17    0               00 
   5 Column           0    1    2               00 r[2]=t1.collate4t1
REG[2] =  i:1
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:1
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   16    1               00 
REG[1] =  i:1
  11 Column           0    0    6               00 r[6]=t1.x
REG[6] =   s3[ABC](8)
  12 Column           0    2    7               00 r[7]=t1.a
REG[7] =   s2[ii](8)
  13 Column           0    1    5               00 r[5]=t1.collate4t1
REG[5] =  i:1
  14 MakeRecord       5    3    9               00 r[9]=mkrec(r[5..7])
REG[9] =  s9[040913114142436969....ABCii]
  15 SorterInsert     1    9    5 3             00 key=r[9]
REG[9] =  s9[040913114142436969....ABCii]
  16 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=t1.collate4t1
REG[2] =  i:2
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:2
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   16    1               00 
REG[1] =  i:1
  11 Column           0    0    6               00 r[6]=t1.x
REG[6] =   s3[def](8)
  12 Column           0    2    7               00 r[7]=t1.a
REG[7] =   s3[iii](8)
  13 Column           0    1    5               00 r[5]=t1.collate4t1
REG[5] =  i:2
  14 MakeRecord       5    3    9               00 r[9]=mkrec(r[5..7])
REG[9] =  s11[0401131302646566696969.....defiii]
  15 SorterInsert     1    9    5 3             00 key=r[9]
REG[9] =  s11[0401131302646566696969.....defiii]
  16 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=t1.collate4t1
REG[2] =  i:1
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:1
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   16    1               00 
REG[1] =  i:1
  11 Column           0    0    6               00 r[6]=t1.x
REG[6] =  i:1
  12 Column           0    2    7               00 r[7]=t1.a
REG[7] =  i:1
  13 Column           0    1    5               00 r[5]=t1.collate4t1
REG[5] =  i:1
  14 MakeRecord       5    3    9               00 r[9]=mkrec(r[5..7])
REG[9] =  s4[04090909....]
  15 SorterInsert     1    9    5 3             00 key=r[9]
REG[9] =  s4[04090909....]
  16 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=t1.collate4t1
REG[2] =  NULL
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  NULL
REG[1] =  NULL
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   16    1               00 
REG[1] =  NULL
  16 Next             0    5    0               01 
  17 Explain         17    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  18 OpenPseudo       2   10    5               00 5 columns in r[10]
  19 SorterSort       1   26    0               00 
  20 SorterData       1   10    2               00 r[10]=data
  21 Column           2    2    8               00 r[8]=a
REG[8] =   s3[iii](8)
  22 Column           2    0    7               00 r[7]=collate4t1
REG[7] =  i:2
  23 Column           2    1    6               00 r[6]=x
REG[6] =   s3[def](8)
  24 ResultRow        6    3    0               00 output=r[6..8]
REG[6] =   s3[def](8)
REG[7] =  i:2
REG[8] =   s3[iii](8)
  25 SorterNext       1   20    0               00 
  20 SorterData       1   10    2               00 r[10]=data
  21 Column           2    2    8               00 r[8]=a
REG[8] =   s2[ii](8)
  22 Column           2    0    7               00 r[7]=collate4t1
REG[7] =  i:1
  23 Column           2    1    6               00 r[6]=x
REG[6] =   s3[ABC](8)
  24 ResultRow        6    3    0               00 output=r[6..8]
REG[6] =   s3[ABC](8)
REG[7] =  i:1
REG[8] =   s2[ii](8)
  25 SorterNext       1   20    0               00 
  20 SorterData       1   10    2               00 r[10]=data
  21 Column           2    2    8               00 r[8]=a
REG[8] =  i:1
  22 Column           2    0    7               00 r[7]=collate4t1
REG[7] =  i:1
  23 Column           2    1    6               00 r[6]=x
REG[6] =  i:1
  24 ResultRow        6    3    0               00 output=r[6..8]
REG[6] =  i:1
REG[7] =  i:1
REG[8] =  i:1
  25 SorterNext       1   20    0               00 
  26 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t3 WHERE (3,32)>=(t6,t6) ORDER BY t6 DESC;]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    0   13 0             01 usesStmtJournal=0
  32 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  33 Integer         32    4    0               00 r[4]=32
REG[4] =  i:32
  34 Goto             0    1    0               00 
   1 SorterOpen       1    7    0 k(1,-B)       00 
   2 OpenRead         0    9    0 5             00 root=9 iDb=0; t3
   3 Explain          3    0    0 SCAN TABLE t3 00 
   4 Rewind           0   19    0               00 
  19 Explain         19    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  20 OpenPseudo       2   12    7               00 7 columns in r[12]
  21 SorterSort       1   30    0               00 
  30 Halt             0    0    0               00 
SQL: [;
;SELECT 1 WHERE (2,(2,0)) IS (2,(2,0));]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Integer          2    1    0               00 r[1]=2
REG[1] =  i:2
   9 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
  10 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               1    7    1               C1 if r[1]!=r[1] goto 7
REG[1] =  i:2
REG[1] =  i:2
   3 Ne               1    7    1               C1 if r[1]!=r[1] goto 7
REG[1] =  i:2
REG[1] =  i:2
   4 Ne               2    7    2               C1 if r[2]!=r[2] goto 7
REG[2] =  i:0
REG[2] =  i:0
   5 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   6 ResultRow        3    1    0               00 output=r[3]
REG[3] =  i:1
   7 Halt             0    0    0               00 
SQL: [;CREATE TABLE t10x(t11,t11x,PRIMARY KEY(t11x,t11x));]
VDBE Trace:
   0 Init             0   39    0               00 Start at 39
  39 Transaction      0    1   13 0             01 usesStmtJournal=0
  40 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:15
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:15
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:15
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      0    4    2               00 r[4]=root iDb=0 flags=2
REG[4] =  i:16
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:16
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_t10x_1 00 r[7]='sqlite_autoindex_t10x_1'
REG[7] =   t23[sqlite_autoinde](8)
  17 String8          0    8    0 t10x          00 r[8]='t10x'
REG[8] =   t4[t10x](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:16
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s39[06173B150100696E64657873716C6974..;...indexsqlit]
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  s39[06173B150100696E64657873716C6974..;...indexsqlit]
REG[5] =  i:16
  22 Close            0    0    0               00 
  23 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  24 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  25 Explain         25    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  26 SeekRowid        2   28    1               00 intkey=r[1]
REG[1] =  i:15
  27 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:15
  28 IsNull          13   36    0               00 if r[13]==NULL goto 36
REG[13] =  i:15
  29 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  30 String8          0   15    0 t10x          00 r[15]='t10x'
REG[15] =   t4[t10x](8)
  31 String8          0   16    0 t10x          00 r[16]='t10x'
REG[16] =   t4[t10x](8)
  32 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:15
  33 String8          0   18    0 CREATE TABLE t10x(t11,t11x,PRIMARY KEY(t11x,t11x)) 00 r[18]='CREATE TABLE t10x(t11,t11x,PRIMARY KEY(t11x,t11x))'
REG[18] =   t50[CREATE TABLE t1](8)
  34 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s70[0617151501717461626C657431307874.....qtablet10xt]
  35 Insert           2   19   13               00 intkey=r[13] data=r[19]
REG[19] =  s70[0617151501717461626C657431307874.....qtablet10xt]
REG[13] =  i:15
  36 SetCookie        0    1   14               00 
  37 ParseSchema      0    0    0 tbl_name='t10x' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   14 0             00 usesStmtJournal=0
  16 String8          0    2    0 t10x          00 r[2]='t10x'
REG[2] =   t4[t10x](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t10x](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t10x](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[xyz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t10x](8)
REG[1] =   s3[xyz](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[xyz1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t10x](8)
REG[1] =   s4[xyz1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t10x](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t10x](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t10x](8)
REG[1] =   s3[t1c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[xyz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t10x](8)
REG[1] =   s3[xyz](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t10x](8)
REG[1] =   s2[t3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t7a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t10x](8)
REG[1] =   s3[t7a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t8a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t10x](8)
REG[1] =   s3[t8a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[i8c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t10x](8)
REG[1] =   s3[i8c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[i8c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t10x](8)
REG[1] =   s3[i8c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t10](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t10x](8)
REG[1] =   s3[t10](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t10x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t10x](8)
REG[1] =   s4[t10x](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t10x](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:15
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s50[CREATE TABLE t1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t10x](8)
REG[5] =  i:15
REG[6] =   s50[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t10x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t10x](8)
REG[1] =   s4[t10x](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s23[sqlite_autoinde](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:16
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =  NULL
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s23[sqlite_autoinde](8)
REG[5] =  i:16
REG[6] =  NULL
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  38 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f5782e5a859 in __GI_abort () at abort.c:79
#2  0x00007f5782e5a729 in __assert_fail_base (fmt=0x7f5782ff0588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x2122b4 "pIn->nSdst==1 || pParse->nErr>0", file=0x22873d "sqlite3.c", line=127594, 
    function=<optimized out>) at assert.c:92
#3  0x00007f5782e6bfd6 in __GI___assert_fail (assertion=0x2122b4 "pIn->nSdst==1 || pParse->nErr>0", file=0x22873d "sqlite3.c", line=127594, 
    function=0x213784 "int generateOutputSubroutine(Parse *, Select *, SelectDest *, SelectDest *, int, int, KeyInfo *, int)") at assert.c:101
#4  0x00000000003b5d8b in generateOutputSubroutine (pParse=0x7ffc13533740, p=0xbc4720, pIn=0x7ffc13531dc0, pDest=0x7ffc13532318, regReturn=15, regPrev=9, pKeyInfo=0xbd1560, iBreak=-7) at sqlite3.c:127594
#5  0x00000000003b4e37 in multiSelectOrderBy (pParse=0x7ffc13533740, p=0xbc4720, pDest=0x7ffc13532318) at sqlite3.c:127921
#6  0x00000000003a3d1c in multiSelect (pParse=0x7ffc13533740, p=0xbc4720, pDest=0x7ffc13532318) at sqlite3.c:127207
#7  0x00000000002fccf5 in sqlite3Select (pParse=0x7ffc13533740, p=0xbc4720, pDest=0x7ffc13532318) at sqlite3.c:130384
#8  0x000000000034f659 in sqlite3CodeSubselect (pParse=0x7ffc13533740, pExpr=0xbc6ca0) at sqlite3.c:99820
#9  0x0000000000350b1c in exprCodeVector (pParse=0x7ffc13533740, p=0xbc6ca0, piFreeable=0x7ffc135323dc) at sqlite3.c:100296
#10 0x000000000034fbdb in sqlite3ExprCodeIN (pParse=0x7ffc13533740, pExpr=0xbc5080, destIfFalse=-3, destIfNull=-4) at sqlite3.c:99952
#11 0x000000000034be9e in sqlite3ExprCodeTarget (pParse=0x7ffc13533740, pExpr=0xbc5080, target=1) at sqlite3.c:100792
#12 0x000000000034e9ee in sqlite3ExprCodeExprList (pParse=0x7ffc13533740, pList=0xbca4e0, target=1, srcReg=0, flags=1 '\001') at sqlite3.c:101202
#13 0x00000000003addca in innerLoopLoadRow (pParse=0x7ffc13533740, pSelect=0xbc67f0, pInfo=0x7ffc13532780) at sqlite3.c:125172
#14 0x00000000003a92ea in selectInnerLoop (pParse=0x7ffc13533740, p=0xbc67f0, srcTab=-1, pSort=0x0, pDistinct=0x7ffc13532a20, pDest=0x7ffc13532b30, iContinue=-2, iBreak=-2) at sqlite3.c:125624
#15 0x00000000002fe191 in sqlite3Select (pParse=0x7ffc13533740, p=0xbc67f0, pDest=0x7ffc13532b30) at sqlite3.c:130743
#16 0x00000000002ecaa8 in yy_reduce (yypParser=0x7ffc13532d60, yyruleno=79, yyLookahead=1, yyLookaheadToken=..., pParse=0x7ffc13533740) at sqlite3.c:151581
#17 0x00000000002e92f8 in sqlite3Parser (yyp=0x7ffc13532d60, yymajor=1, yyminor=...) at sqlite3.c:152877
#18 0x00000000002a68b3 in sqlite3RunParser (pParse=0x7ffc13533740, 
    zSql=0xbc7192 ";;SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1) IN (SELECT 5,6);;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1 DESC) IN (SELECT 3,4);;SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1 DESC) IN (SELECT"..., pzErrMsg=0x7ffc13533920) at sqlite3.c:154013
#19 0x00000000002a1683 in sqlite3Prepare (db=0xbb5260, 
    zSql=0xbb7c15 ";\n;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1) IN (SELECT 3,4);;SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1) IN (SELECT 5,6);;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1 DESC) IN (SELECT 3,4"..., nBytes=1054, prepFlags=128, pReprepare=0x0, ppStmt=0x7ffc13533a58, pzTail=0x7ffc13533a40) at sqlite3.c:124303
#20 0x00000000002a0d4e in sqlite3LockAndPrepare (db=0xbb5260, 
    zSql=0xbb7c15 ";\n;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1) IN (SELECT 3,4);;SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1) IN (SELECT 5,6);;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1 DESC) IN (SELECT 3,4"..., nBytes=1054, prepFlags=128, pOld=0x0, ppStmt=0x7ffc13533a58, pzTail=0x7ffc13533a40) at sqlite3.c:124403
#21 0x000000000029247f in sqlite3_prepare_v2 (db=0xbb5260, 
    zSql=0xbb7c15 ";\n;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1) IN (SELECT 3,4);;SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1) IN (SELECT 5,6);;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1 DESC) IN (SELECT 3,4"..., nBytes=1054, ppStmt=0x7ffc13533a58, pzTail=0x7ffc13533a40) at sqlite3.c:124487
#22 0x0000000000256bd0 in main (argc=1, argv=0x7ffc13533c08) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 60415] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
