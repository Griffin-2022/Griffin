GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000238,sig:06,src:022630+017956,time:4202062,execs:763957,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_listing=on;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;ROLLBACK;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    1    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT typeof(CAST('-9.223372036e14' AS NUMERIC)), CAST('-9.223372036e14' AS NUMERIC)
;]
VDBE Program Listing:
   0 Init             0    7    0               00 Start at 7
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             3    1    0               00 r[1]=r[3]
   3 String8          0    2    0 -9.223372036e14 00 r[2]='-9.223372036e14'
   4 Cast             2   67    0               00 affinity(r[2])
   5 ResultRow        1    2    0               00 output=r[1..2]
   6 Halt             0    0    0               00 
   7 String8          0    4    0 -9.223372036e14 00 r[4]='-9.223372036e14'
   8 Cast             4   67    0               00 affinity(r[4])
   9 Function0        1    4    3 typeof(1)     01 r[3]=func(r[4])
  10 Goto             0    1    0               00 
SQL: [;PRAGMA table_info='t1'
;]
VDBE Program Listing:
   0 Init             0    9    0               00 Start at 9
   1 Integer          0    1    0               00 r[1]=0
   2 String8          0    2    0 x             00 r[2]='x'
   3 String8          0    3    0 INT           00 r[3]='INT'
   4 Integer          0    4    0               00 r[4]=0
   5 Null             0    5    0               00 r[5]=NULL
   6 Integer          0    6    0               00 r[6]=0
   7 ResultRow        1    6    0               00 output=r[1..6]
   8 Halt             0    0    0               00 
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Goto             0    1    0               00 
SQL: [;-- added 2019-08-10 to invalidate
  DROP TABLE IF EXISTS t1;]
VDBE Program Listing:
   0 Init             0   38    0               00 Start at 38
   1 Null             0    1    0               00 r[1]=NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
   7 Column           0    0    2               00 r[2]=sqlite_master.type
   8 Eq               4   12    2 (BINARY)      52 if r[2]==r[4] goto 12
   9 Rowid            0    5    0               00 r[5]=rowid
  10 Once             0   11    0               00 
  11 Delete           0    0    0               02 
  12 Next             0    5    0               01 
  13 Destroy          2    2    0               00 
  14 Null             0    6    7               00 r[6..7]=NULL
  15 IfNot            2   24    1               00 
  16 OpenRead         1    1    0 4             00 root=1 iDb=0; sqlite_master
  17 Explain         17    0    0 SCAN TABLE sqlite_master 00 
  18 Rewind           1   24    0               00 
  19 Column           1    3   13               00 r[13]=sqlite_master.rootpage
  20 Ne               2   23   13 (BINARY)      54 if r[13]!=r[2] goto 23
  21 Rowid            1    7    0               00 r[7]=rowid
  22 RowSetAdd        6    7    0               00 rowset(6)=r[7]
  23 Next             1   19    0               01 
  24 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  25 RowSetRead       6   35    7               00 r[7]=rowset(6)
  26 NotExists        1   25    7               00 intkey=r[7]
  27 Column           1    0    8               00 r[8]=sqlite_master.type
  28 Column           1    1    9               00 r[9]=sqlite_master.name
  29 Column           1    2   10               00 r[10]=sqlite_master.tbl_name
  30 Integer          2   11    0               00 r[11]=2
  31 Column           1    4   12               00 r[12]=sqlite_master.sql
  32 MakeRecord       8    5   13 BBBDB         00 r[13]=mkrec(r[8..12])
  33 Insert           1   13    7               00 intkey=r[7] data=r[13]
  34 Goto             0   25    0               00 
  35 DropTable        0    0    0 t1            00 
  36 SetCookie        0    1    2               00 
  37 Halt             0    0    0               00 
  38 Transaction      0    1    1 0             01 usesStmtJournal=1
  39 String8          0    3    0 t1            00 r[3]='t1'
  40 String8          0    4    0 trigger       00 r[4]='trigger'
  41 Goto             0    1    0               00 
SQL: [;-- x couple assert()s that were
  CREATE TABLE t1(x);]
VDBE Program Listing:
   0 Init             0   28    0               00 Start at 28
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
  16 Rowid            1    5    0               00 r[5]=rowid
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
  18 String8          0    6    0 table         00 r[6]='table'
  19 String8          0    7    0 t1            00 r[7]='t1'
  20 String8          0    8    0 t1            00 r[8]='t1'
  21 Copy             2    9    0               00 r[9]=r[2]
  22 String8          0   10    0 CREATE TABLE t1(x) 00 r[10]='CREATE TABLE t1(x)'
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
  25 SetCookie        0    1    3               00 
  26 ParseSchema      0    0    0 tbl_name='t1' AND type!='trigger' 00 
  27 Halt             0    0    0               00 
  28 Transaction      0    1    2 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    3 0             00 usesStmtJournal=0
  16 String8          0    2    0 t1            00 r[2]='t1'
  17 String8          0    3    0 trigger       00 r[3]='trigger'
  18 Goto             0    1    0               00 
SQL: [;BEGIN;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;BEGIN;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;ROLLBACK;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    1    0               00 
   2 Halt             0    0    0               00 
SQL: [;ROLLBACK;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    1    0               00 
   2 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f68676bc859 in __GI_abort () at abort.c:79
#2  0x00007f68676bc729 in __assert_fail_base (fmt=0x7f6867852588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x211bd9 "pColExpr->op!=TK_AGG_COLUMN", file=0x22873d "sqlite3.c", line=126590, 
    function=<optimized out>) at assert.c:92
#3  0x00007f68676cdfd6 in __GI___assert_fail (assertion=0x211bd9 "pColExpr->op!=TK_AGG_COLUMN", file=0x22873d "sqlite3.c", line=126590, 
    function=0x221122 "int sqlite3ColumnsFromExprList(Parse *, ExprList *, i16 *, Column **)") at assert.c:101
#4  0x000000000032d160 in sqlite3ColumnsFromExprList (pParse=0x7ffd95bc6b60, pEList=0xcf15e0, pnCol=0xcf4506, paCol=0xcf44c8) at sqlite3.c:126590
#5  0x000000000033cf65 in sqlite3ExpandSubquery (pParse=0x7ffd95bc6b60, pFrom=0xcf0c88) at sqlite3.c:129416
#6  0x00000000003a17f2 in sqlite3WindowRewrite (pParse=0x7ffd95bc6b60, p=0xcec630) at sqlite3.c:146385
#7  0x00000000002fc6de in sqlite3Select (pParse=0x7ffd95bc6b60, p=0xcec630, pDest=0x7ffd95bc5450) at sqlite3.c:130281
#8  0x00000000003a45ed in multiSelect (pParse=0x7ffd95bc6b60, p=0xcec630, pDest=0x7ffd95bc5858) at sqlite3.c:127314
#9  0x00000000002fccf5 in sqlite3Select (pParse=0x7ffd95bc6b60, p=0xcec630, pDest=0x7ffd95bc5858) at sqlite3.c:130384
#10 0x000000000034f659 in sqlite3CodeSubselect (pParse=0x7ffd95bc6b60, pExpr=0xcee250) at sqlite3.c:99820
#11 0x000000000034bbfd in sqlite3ExprCodeTarget (pParse=0x7ffd95bc6b60, pExpr=0xcee250, target=5) at sqlite3.c:100770
#12 0x000000000034e9ee in sqlite3ExprCodeExprList (pParse=0x7ffd95bc6b60, pList=0xcf7d00, target=5, srcReg=0, flags=1 '\001') at sqlite3.c:101202
#13 0x00000000003addca in innerLoopLoadRow (pParse=0x7ffd95bc6b60, pSelect=0xcf4e20, pInfo=0x7ffd95bc5ba0) at sqlite3.c:125172
#14 0x00000000003a92ea in selectInnerLoop (pParse=0x7ffd95bc6b60, p=0xcf4e20, srcTab=-1, pSort=0x0, pDistinct=0x0, pDest=0x7ffd95bc5f50, iContinue=-2, iBreak=-2) at sqlite3.c:125624
#15 0x00000000002fffb0 in sqlite3Select (pParse=0x7ffd95bc6b60, p=0xcf4e20, pDest=0x7ffd95bc5f50) at sqlite3.c:131196
#16 0x00000000002ecaa8 in yy_reduce (yypParser=0x7ffd95bc6180, yyruleno=79, yyLookahead=1, yyLookaheadToken=..., pParse=0x7ffd95bc6b60) at sqlite3.c:151581
#17 0x00000000002e92f8 in sqlite3Parser (yyp=0x7ffd95bc6180, yymajor=1, yyminor=...) at sqlite3.c:152877
#18 0x00000000002a68b3 in sqlite3RunParser (pParse=0x7ffd95bc6b60, 
    zSql=0xcef54a ";;ROLLBACK;;BEGIN;;BEGIN;\n;DROP TABLE IF EXISTS t1;;CREATE TABLE t1(\"with space\" TEXT);;CREATE TABLE collate4t1 AS SELECT \"with space\" FROM t1;;\n;DROP TABLE IF EXISTS t3;", pzErrMsg=0x7ffd95bc6d40)
    at sqlite3.c:154013
#19 0x00000000002a1683 in sqlite3Prepare (db=0xcda620, 
    zSql=0xcda16f ";SELECT (SELECT avg(x) UNION SELECT min(x) OVER()) FROM t1;;ROLLBACK;;BEGIN;;BEGIN;\n;DROP TABLE IF EXISTS t1;;CREATE TABLE t1(\"with space\" TEXT);;CREATE TABLE collate4t1 AS SELECT \"with space\" FROM t1"..., nBytes=228, prepFlags=128, pReprepare=0x0, ppStmt=0x7ffd95bc6e78, pzTail=0x7ffd95bc6e60) at sqlite3.c:124303
#20 0x00000000002a0d4e in sqlite3LockAndPrepare (db=0xcda620, 
    zSql=0xcda16f ";SELECT (SELECT avg(x) UNION SELECT min(x) OVER()) FROM t1;;ROLLBACK;;BEGIN;;BEGIN;\n;DROP TABLE IF EXISTS t1;;CREATE TABLE t1(\"with space\" TEXT);;CREATE TABLE collate4t1 AS SELECT \"with space\" FROM t1"..., nBytes=228, prepFlags=128, pOld=0x0, ppStmt=0x7ffd95bc6e78, pzTail=0x7ffd95bc6e60) at sqlite3.c:124403
#21 0x000000000029247f in sqlite3_prepare_v2 (db=0xcda620, 
    zSql=0xcda16f ";SELECT (SELECT avg(x) UNION SELECT min(x) OVER()) FROM t1;;ROLLBACK;;BEGIN;;BEGIN;\n;DROP TABLE IF EXISTS t1;;CREATE TABLE t1(\"with space\" TEXT);;CREATE TABLE collate4t1 AS SELECT \"with space\" FROM t1"..., nBytes=228, ppStmt=0x7ffd95bc6e78, pzTail=0x7ffd95bc6e60) at sqlite3.c:124487
#22 0x0000000000256bd0 in main (argc=1, argv=0x7ffd95bc7028) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 59175] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
