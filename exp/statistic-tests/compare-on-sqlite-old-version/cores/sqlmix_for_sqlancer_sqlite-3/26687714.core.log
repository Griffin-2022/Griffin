GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000681,sig:06,src:021376+017956,time:35866531,execs:12513654,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [PRAGMA page_size
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Int64            0    1    0 4096          00 r[1]=4096
REG[1] =  i:4096
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:4096
   3 Halt             0    0    0               00 
SQL: [;CREATE INDEX collate4i1 ON t1(x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x);]
VDBE Trace:
   0 Init             0  151    0               00 Start at 151
 151 Transaction      0    1    2 0             01 usesStmtJournal=0
 152 Goto             0    1    0               00 
   1 Noop             0  150    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:3
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:3
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 collate4i1    00 r[4]='collate4i1'
REG[4] =   t10[collate4i1](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:3
   9 String8          0    7    0 CREATE INDEX collate4i1 ON t1(x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x) 00 r[7]='CREATE INDEX collate4i1 ON t1(x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x
REG[7] =   t268[CREATE INDEX co](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s293[07172111018425696E646578636F6C6C..!...%indexcoll]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s293[07172111018425696E646578636F6C6C..!...%indexcoll]
REG[2] =  i:3
  12 SorterOpen       3    0  119 k(120,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, 00 
  13 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  14 Rewind           1  138    0               00 
 138 OpenWrite        2    1    0 k(120,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, 11 root=1 iDb=0
 139 SorterSort       3  144    0               00 
 144 Close            1    0    0               00 
 145 Close            2    0    0               00 
 146 Close            3    0    0               00 
 147 SetCookie        0    1    3               00 
 148 ParseSchema      0    0    0 name='collate4i1' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 0             00 usesStmtJournal=0
  16 String8          0    2    0 collate4i1    00 r[2]='collate4i1'
REG[2] =   t10[collate4i1](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t10[collate4i1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t10[collate4i1](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s10[collate4i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t10[collate4i1](8)
REG[1] =   s10[collate4i1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s10[collate4i1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s268[CREATE INDEX co](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s10[collate4i1](8)
REG[5] =  i:3
REG[6] =   s268[CREATE INDEX co](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
 149 Expire           0    1    0               00 
 150 Halt             0    0    0               00 
SQL: [;
;SELECT name FROM pragma_table_xinfo('t1');]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    3 0             01 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 VOpen            0    0    0 vtab:12CBD00  00 
   2 Explain          2    0    0 SCAN TABLE pragma_table_xinfo VIRTUAL TABLE INDEX 0: 00 
   3 String8          0    3    0 t1            00 r[3]='t1'
REG[3] =   t2[t1](8)
   4 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   5 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   6 VFilter          0   10    1               00 iplan=r[1] zplan=''
REG[1] =  i:0
SQL: [PRAGMA table_xinfo='t1']
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      0    0    3 0             01 usesStmtJournal=0
  19 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 String8          0    2    0 x             00 r[2]='x'
REG[2] =   t1[x](8)
   3 String8          0    3    0               00 r[3]=''
REG[3] =   t0[](8)
   4 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
   5 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
   6 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
   7 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
   8 ResultRow        1    7    0               00 output=r[1..7]
REG[1] =  i:0
REG[2] =   t1[x](8)
REG[3] =   t0[](8)
REG[4] =  i:0
REG[5] =  NULL
REG[6] =  i:0
REG[7] =  i:0
   7 VColumn          0    1    4               00 r[4]=vcolumn(1); pragma_table_xinfo.name
REG[4] =   s1[x](8)
   8 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s1[x](8)
   9 VNext            0    7    0               00 
   9 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  10 String8          0    2    0 collate4t1    00 r[2]='collate4t1'
REG[2] =   t10[collate4t1](8)
  11 String8          0    3    0               00 r[3]=''
REG[3] =   t0[](8)
  12 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  13 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  14 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  15 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  16 ResultRow        1    7    0               00 output=r[1..7]
REG[1] =  i:1
REG[2] =   t10[collate4t1](8)
REG[3] =   t0[](8)
REG[4] =  i:0
REG[5] =  NULL
REG[6] =  i:0
REG[7] =  i:0
   7 VColumn          0    1    4               00 r[4]=vcolumn(1); pragma_table_xinfo.name
REG[4] =   s10[collate4t1](8)
   8 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s10[collate4t1](8)
   9 VNext            0    7    0               00 
  17 Halt             0    0    0               00 
  10 Halt             0    0    0               00 
SQL: [SELECT +x, +y FROM a WHERE 1
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    3 0             01 usesStmtJournal=0
  10 Goto             0    1    0               00 
   1 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           1    8    0               00 
   8 Halt             0    0    0               00 
SQL: [SELECT rowid, collate4t1, collate4t1 FROM t1 ORDER BY collate4t1 DESC
  
;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    0    3 0             01 usesStmtJournal=0
  22 Goto             0    1    0               00 
   1 SorterOpen       1    5    0 k(1,-B)       00 
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   11    0               00 
  11 Explain         11    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  12 OpenPseudo       2    6    5               00 5 columns in r[6]
  13 SorterSort       1   20    0               00 
  20 Halt             0    0    0               00 
SQL: [SELECT x, rowid, x FROM t1 ORDER BY +x DESC
  
;]
VDBE Trace:
   0 Init             0   22    0               00 Start at 22
  22 Transaction      0    0    3 0             01 usesStmtJournal=0
  23 Goto             0    1    0               00 
   1 SorterOpen       1    5    0 k(1,-B)       00 
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   12    0               00 
  12 Explain         12    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  13 OpenPseudo       2    6    5               00 5 columns in r[6]
  14 SorterSort       1   21    0               00 
  21 Halt             0    0    0               00 
SQL: [CREATE TABLE xyz(b,c);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    3 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:4
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:4
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 xyz           00 r[7]='xyz'
REG[7] =   t3[xyz](8)
  20 String8          0    8    0 xyz           00 r[8]='xyz'
REG[8] =   t3[xyz](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  22 String8          0   10    0 CREATE TABLE xyz(b,c) 00 r[10]='CREATE TABLE xyz(b,c)'
REG[10] =   t21[CREATE TABLE xy](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s39[0617131301377461626C6578797A7879.....7tablexyzxy]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s39[0617131301377461626C6578797A7879.....7tablexyzxy]
REG[5] =  i:4
  25 SetCookie        0    1    4               00 
  26 ParseSchema      0    0    0 tbl_name='xyz' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    4 0             00 usesStmtJournal=0
  16 String8          0    2    0 xyz           00 r[2]='xyz'
REG[2] =   t3[xyz](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[xyz](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[xyz](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[xyz](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[xyz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[xyz](8)
REG[1] =   s3[xyz](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[xyz](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s21[CREATE TABLE xy](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[xyz](8)
REG[5] =  i:4
REG[6] =   s21[CREATE TABLE xy](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO xyz VALUES(3,4);]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    1    4 0             01 usesStmtJournal=0
   9 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 2             00 root=4 iDb=0; xyz
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Integer          3    2    0               00 r[2]=3
REG[2] =  i:3
   4 Integer          4    3    0               00 r[3]=4
REG[3] =  i:4
   5 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s5[0301010304.....]
   6 Insert           0    4    1 xyz           39 intkey=r[1] data=r[4]
REG[4] =  s5[0301010304.....]
REG[1] =  i:1
   7 Halt             0    0    0               00 
SQL: [DROP TABLE IF EXISTS xyz;]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      0    1    4 0             01 usesStmtJournal=1
  39 String8          0    3    0 xyz           00 r[3]='xyz'
REG[3] =   t3[xyz](8)
  40 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  41 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[xyz](8)
REG[2] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[a](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[xyz](8)
REG[2] =   s1[a](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[xyz](8)
REG[2] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s3[xyz](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[xyz](8)
REG[2] =   s3[xyz](8)
   7 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
   8 Eq               4   12    2 (BINARY)      52 if r[2]==r[4] goto 12
REG[4] =   t7[trigger](8)
REG[2] =   s5[table](8)
   9 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:4
  10 Once             0   11    0               00 
  11 Delete           0    0    0               02 
  12 Next             0    5    0               01 
  13 Destroy          4    2    0               00 
REG[2] =  i:0
  14 Null             0    6    7               00 r[6..7]=NULL
REG[6] =  NULL
  15 IfNot            2   24    1               00 
REG[2] =  i:0
  24 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  25 RowSetRead       6   35    7               00 r[7]=rowset(6)
REG[6] =  NULL
REG[7] =  NULL
  35 DropTable        0    0    0 xyz           00 
  36 SetCookie        0    1    5               00 
  37 Halt             0    0    0               00 
SQL: [;CREATE TABLE xyz(b INT);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    5 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:4
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:4
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 xyz           00 r[7]='xyz'
REG[7] =   t3[xyz](8)
  20 String8          0    8    0 xyz           00 r[8]='xyz'
REG[8] =   t3[xyz](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  22 String8          0   10    0 CREATE TABLE xyz(b INT) 00 r[10]='CREATE TABLE xyz(b INT)'
REG[10] =   t23[CREATE TABLE xy](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s41[06171313013B7461626C6578797A7879.....;tablexyzxy]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s41[06171313013B7461626C6578797A7879.....;tablexyzxy]
REG[5] =  i:4
  25 SetCookie        0    1    6               00 
  26 ParseSchema      0    0    0 tbl_name='xyz' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    6 0             00 usesStmtJournal=0
  16 String8          0    2    0 xyz           00 r[2]='xyz'
REG[2] =   t3[xyz](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[xyz](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[xyz](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[xyz](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[xyz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[xyz](8)
REG[1] =   s3[xyz](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[xyz](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s23[CREATE TABLE xy](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[xyz](8)
REG[5] =  i:4
REG[6] =   s23[CREATE TABLE xy](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [CREATE TABLE c AS SELECT d FROM (SELECT x AS d FROM t1);]
VDBE Trace:
   0 Init             0   43    0               00 Start at 43
  43 Transaction      0    1    6 0             01 usesStmtJournal=1
  44 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:5
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 OpenWrite        1    2    0               10 root=2 iDb=0
  13 InitCoroutine    4   21   14               00 
  21 Yield            4   26    0               00 
REG[4] =  i:13
REG[4] =  i:21
  14 OpenRead         3    2    0 1             00 root=2 iDb=0; t1
  15 Explain         15    0    0 SCAN TABLE t1 00 
  16 Rewind           3   20    0               00 
  20 EndCoroutine     4    0    0               00 
REG[4] =  i:21
  26 Close            1    0    0               00 
  27 Null             0    8    9               00 r[8..9]=NULL
REG[8] =  NULL
  28 OpenWrite        4    1    0 5             00 root=1 iDb=0; sqlite_master
  29 Explain         29    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  30 SeekRowid        4   32    1               00 intkey=r[1]
REG[1] =  i:5
  31 Rowid            4    9    0               00 r[9]=rowid
REG[9] =  i:5
  32 IsNull           9   40    0               00 if r[9]==NULL goto 40
REG[9] =  i:5
  33 String8          0   10    0 table         00 r[10]='table'
REG[10] =   t5[table](8)
  34 String8          0   11    0 c             00 r[11]='c'
REG[11] =   t1[c](8)
  35 String8          0   12    0 c             00 r[12]='c'
REG[12] =   t1[c](8)
  36 Copy             2   13    0               00 r[13]=r[2]
REG[13] =  i:5
  37 String8          0   14    0 CREATE TABLE c(d) 00 r[14]='CREATE TABLE c(d)'
REG[14] =   t17[CREATE TABLE c(](8)
  38 MakeRecord      10    5   15 BBBDB         00 r[15]=mkrec(r[10..14])
REG[15] =  s31[06170F0F012F7461626C656363054352...../tablecc.CR]
  39 Insert           4   15    9               00 intkey=r[9] data=r[15]
REG[15] =  s31[06170F0F012F7461626C656363054352...../tablecc.CR]
REG[9] =  i:5
  40 SetCookie        0    1    7               00 
  41 ParseSchema      0    0    0 tbl_name='c' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    7 0             00 usesStmtJournal=0
  16 String8          0    2    0 c             00 r[2]='c'
REG[2] =   t1[c](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[c](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[c](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[c](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[xyz](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[c](8)
REG[1] =   s3[xyz](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[c](8)
REG[1] =   s1[c](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[c](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:5
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s17[CREATE TABLE c(](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[c](8)
REG[5] =  i:5
REG[6] =   s17[CREATE TABLE c(](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  42 Halt             0    0    0               00 
SQL: [;SELECT name FROM pragma_table_info('c');]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    7 0             01 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 VOpen            0    0    0 vtab:12CEF00  00 
   2 Explain          2    0    0 SCAN TABLE pragma_table_info VIRTUAL TABLE INDEX 0: 00 
   3 String8          0    3    0 c             00 r[3]='c'
REG[3] =   t1[c](8)
   4 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   5 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   6 VFilter          0   10    1               00 iplan=r[1] zplan=''
REG[1] =  i:0
SQL: [PRAGMA table_info='c']
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    7 0             01 usesStmtJournal=0
  10 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 String8          0    2    0 d             00 r[2]='d'
REG[2] =   t1[d](8)
   3 String8          0    3    0               00 r[3]=''
REG[3] =   t0[](8)
   4 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
   5 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
   6 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
   7 ResultRow        1    6    0               00 output=r[1..6]
REG[1] =  i:0
REG[2] =   t1[d](8)
REG[3] =   t0[](8)
REG[4] =  i:0
REG[5] =  NULL
REG[6] =  i:0
   7 VColumn          0    1    4               00 r[4]=vcolumn(1); pragma_table_info.name
REG[4] =   s1[d](8)
   8 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s1[d](8)
   9 VNext            0    7    0               00 
   8 Halt             0    0    0               00 
  10 Halt             0    0    0               00 
SQL: [;-- added 2019-08-10 to invalidate
  DROP TABLE IF EXISTS xyz;]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      0    1    7 0             01 usesStmtJournal=1
  39 String8          0    3    0 xyz           00 r[3]='xyz'
REG[3] =   t3[xyz](8)
  40 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  41 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[xyz](8)
REG[2] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[a](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[xyz](8)
REG[2] =   s1[a](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[xyz](8)
REG[2] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s3[xyz](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[xyz](8)
REG[2] =   s3[xyz](8)
   7 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
   8 Eq               4   12    2 (BINARY)      52 if r[2]==r[4] goto 12
REG[4] =   t7[trigger](8)
REG[2] =   s5[table](8)
   9 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:4
  10 Once             0   11    0               00 
  11 Delete           0    0    0               02 
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[c](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[xyz](8)
REG[2] =   s1[c](8)
  12 Next             0    5    0               01 
  13 Destroy          4    2    0               00 
REG[2] =  i:0
  14 Null             0    6    7               00 r[6..7]=NULL
REG[6] =  NULL
  15 IfNot            2   24    1               00 
REG[2] =  i:0
  24 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  25 RowSetRead       6   35    7               00 r[7]=rowset(6)
REG[6] =  NULL
REG[7] =  NULL
  35 DropTable        0    0    0 xyz           00 
  36 SetCookie        0    1    8               00 
  37 Halt             0    0    0               00 
SQL: [;-- added by ticket 3b44500725
  INSERT INTO c VALUES(17),(2),(99),(-3),(7);]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    1    8 0             01 usesStmtJournal=0
  22 Goto             0    1    0               00 
   1 InitCoroutine    3   14    2               00 
  14 OpenWrite        0    5    0 1             00 root=5 iDb=0; c
  15 Yield            3   20    0               00 
REG[3] =  i:1
REG[3] =  i:15
   2 Explain          2    0    0 SCAN 5 CONSTANT ROWS 00 
   3 Integer         17    2    0               00 r[2]=17
REG[2] =  i:17
   4 Yield            3    0    0               00 
REG[3] =  i:15
REG[3] =  i:4
  16 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
  17 MakeRecord       2    1    4               00 r[4]=mkrec(r[2])
REG[4] =  s3[020111...]
  18 Insert           0    4    1 c             39 intkey=r[1] data=r[4]
REG[4] =  s3[020111...]
REG[1] =  i:1
  19 Goto             0   15    0               00 
  15 Yield            3   20    0               00 
REG[3] =  i:4
REG[3] =  i:15
   5 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
   6 Yield            3    0    0               00 
REG[3] =  i:15
REG[3] =  i:6
  16 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
  17 MakeRecord       2    1    4               00 r[4]=mkrec(r[2])
REG[4] =  s3[020102...]
  18 Insert           0    4    1 c             39 intkey=r[1] data=r[4]
REG[4] =  s3[020102...]
REG[1] =  i:2
  19 Goto             0   15    0               00 
  15 Yield            3   20    0               00 
REG[3] =  i:6
REG[3] =  i:15
   7 Integer         99    2    0               00 r[2]=99
REG[2] =  i:99
   8 Yield            3    0    0               00 
REG[3] =  i:15
REG[3] =  i:8
  16 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
  17 MakeRecord       2    1    4               00 r[4]=mkrec(r[2])
REG[4] =  s3[020163..c]
  18 Insert           0    4    1 c             39 intkey=r[1] data=r[4]
REG[4] =  s3[020163..c]
REG[1] =  i:3
  19 Goto             0   15    0               00 
  15 Yield            3   20    0               00 
REG[3] =  i:8
REG[3] =  i:15
   9 Integer         -3    2    0               00 r[2]=-3
REG[2] =  i:-3
  10 Yield            3    0    0               00 
REG[3] =  i:15
REG[3] =  i:10
  16 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
  17 MakeRecord       2    1    4               00 r[4]=mkrec(r[2])
REG[4] =  s3[0201FD...]
  18 Insert           0    4    1 c             39 intkey=r[1] data=r[4]
REG[4] =  s3[0201FD...]
REG[1] =  i:4
  19 Goto             0   15    0               00 
  15 Yield            3   20    0               00 
REG[3] =  i:10
REG[3] =  i:15
  11 Integer          7    2    0               00 r[2]=7
REG[2] =  i:7
  12 Yield            3    0    0               00 
REG[3] =  i:15
REG[3] =  i:12
  16 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
  17 MakeRecord       2    1    4               00 r[4]=mkrec(r[2])
REG[4] =  s3[020107...]
  18 Insert           0    4    1 c             39 intkey=r[1] data=r[4]
REG[4] =  s3[020107...]
REG[1] =  i:5
  19 Goto             0   15    0               00 
  15 Yield            3   20    0               00 
REG[3] =  i:12
REG[3] =  i:15
  13 EndCoroutine     3    0    0               00 
REG[3] =  i:15
  20 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f02f310c859 in __GI_abort () at abort.c:79
#2  0x00007f02f310c729 in __assert_fail_base (fmt=0x7f02f32a2588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x211bd9 "pColExpr->op!=TK_AGG_COLUMN", file=0x22873d "sqlite3.c", line=126590, 
    function=<optimized out>) at assert.c:92
#3  0x00007f02f311dfd6 in __GI___assert_fail (assertion=0x211bd9 "pColExpr->op!=TK_AGG_COLUMN", file=0x22873d "sqlite3.c", line=126590, 
    function=0x221122 "int sqlite3ColumnsFromExprList(Parse *, ExprList *, i16 *, Column **)") at assert.c:101
#4  0x000000000032d160 in sqlite3ColumnsFromExprList (pParse=0x7ffe9b3b6b30, pEList=0x12be490, pnCol=0x12b5386, paCol=0x12b5348) at sqlite3.c:126590
#5  0x000000000033cf65 in sqlite3ExpandSubquery (pParse=0x7ffe9b3b6b30, pFrom=0x12b57f8) at sqlite3.c:129416
#6  0x00000000003a17f2 in sqlite3WindowRewrite (pParse=0x7ffe9b3b6b30, p=0x12bb100) at sqlite3.c:146385
#7  0x00000000002fc6de in sqlite3Select (pParse=0x7ffe9b3b6b30, p=0x12bb100, pDest=0x7ffe9b3b5420) at sqlite3.c:130281
#8  0x00000000003a45ed in multiSelect (pParse=0x7ffe9b3b6b30, p=0x12bb100, pDest=0x7ffe9b3b5828) at sqlite3.c:127314
#9  0x00000000002fccf5 in sqlite3Select (pParse=0x7ffe9b3b6b30, p=0x12bb100, pDest=0x7ffe9b3b5828) at sqlite3.c:130384
#10 0x000000000034f659 in sqlite3CodeSubselect (pParse=0x7ffe9b3b6b30, pExpr=0x12bc870) at sqlite3.c:99820
#11 0x000000000034bbfd in sqlite3ExprCodeTarget (pParse=0x7ffe9b3b6b30, pExpr=0x12bc870, target=5) at sqlite3.c:100770
#12 0x000000000034e9ee in sqlite3ExprCodeExprList (pParse=0x7ffe9b3b6b30, pList=0x12c2630, target=5, srcReg=0, flags=1 '\001') at sqlite3.c:101202
#13 0x00000000003addca in innerLoopLoadRow (pParse=0x7ffe9b3b6b30, pSelect=0x12bf2a0, pInfo=0x7ffe9b3b5b70) at sqlite3.c:125172
#14 0x00000000003a92ea in selectInnerLoop (pParse=0x7ffe9b3b6b30, p=0x12bf2a0, srcTab=-1, pSort=0x0, pDistinct=0x0, pDest=0x7ffe9b3b5f20, iContinue=-2, iBreak=-2) at sqlite3.c:125624
#15 0x00000000002fffb0 in sqlite3Select (pParse=0x7ffe9b3b6b30, p=0x12bf2a0, pDest=0x7ffe9b3b5f20) at sqlite3.c:131196
#16 0x00000000002ecaa8 in yy_reduce (yypParser=0x7ffe9b3b6150, yyruleno=79, yyLookahead=1, yyLookaheadToken=..., pParse=0x7ffe9b3b6b30) at sqlite3.c:151581
#17 0x00000000002e92f8 in sqlite3Parser (yyp=0x7ffe9b3b6150, yymajor=1, yyminor=...) at sqlite3.c:152877
#18 0x00000000002a68b3 in sqlite3RunParser (pParse=0x7ffe9b3b6b30, zSql=0x12c429c ";\n;DROP TABLE IF EXISTS c;;DROP TABLE IF EXISTS t1;;\n;DROP TABLE IF EXISTS t3;", pzErrMsg=0x7ffe9b3b6d10) at sqlite3.c:154013
#19 0x00000000002a1683 in sqlite3Prepare (db=0x12a52b0, 
    zSql=0x12a625c ";SELECT (SELECT avg(collate4t1) UNION SELECT min(collate4t1) OVER()) FROM t1;\n;DROP TABLE IF EXISTS c;;DROP TABLE IF EXISTS t1;;\n;DROP TABLE IF EXISTS t3;", nBytes=154, prepFlags=128, pReprepare=0x0, 
    ppStmt=0x7ffe9b3b6e48, pzTail=0x7ffe9b3b6e30) at sqlite3.c:124303
#20 0x00000000002a0d4e in sqlite3LockAndPrepare (db=0x12a52b0, 
    zSql=0x12a625c ";SELECT (SELECT avg(collate4t1) UNION SELECT min(collate4t1) OVER()) FROM t1;\n;DROP TABLE IF EXISTS c;;DROP TABLE IF EXISTS t1;;\n;DROP TABLE IF EXISTS t3;", nBytes=154, prepFlags=128, pOld=0x0, 
    ppStmt=0x7ffe9b3b6e48, pzTail=0x7ffe9b3b6e30) at sqlite3.c:124403
#21 0x000000000029247f in sqlite3_prepare_v2 (db=0x12a52b0, 
    zSql=0x12a625c ";SELECT (SELECT avg(collate4t1) UNION SELECT min(collate4t1) OVER()) FROM t1;\n;DROP TABLE IF EXISTS c;;DROP TABLE IF EXISTS t1;;\n;DROP TABLE IF EXISTS t3;", nBytes=154, ppStmt=0x7ffe9b3b6e48, 
    pzTail=0x7ffe9b3b6e30) at sqlite3.c:124487
#22 0x0000000000256bd0 in main (argc=1, argv=0x7ffe9b3b6ff8) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 63886] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
