GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000309,sig:06,src:021101+004607,time:6697729,execs:1350047,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    0 0             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
SQL: [;CREATE TABLE t1(x, collate4t1 INTEGER PRIMARY KEY AUTOINCREMENT);]
VDBE Trace:
   0 Init             0   54    0               00 Start at 54
  54 Transaction      0    1    0 0             01 usesStmtJournal=0
  55 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:1
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:1
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t1            00 r[7]='t1'
REG[7] =   t2[t1](8)
  20 String8          0    8    0 t1            00 r[8]='t1'
REG[8] =   t2[t1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  22 String8          0   10    0 CREATE TABLE t1(x, collate4t1 INTEGER PRIMARY KEY AUTOINCREMENT) 00 r[10]='CREATE TABLE t1(x, collate4t1 INTEGER PRIMARY KEY AUTOINCREMENT)'
REG[10] =   t64[CREATE TABLE t1](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s81[0717111101810D7461626C6574317431.......tablet1t1]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s81[0717111101810D7461626C6574317431.......tablet1t1]
REG[5] =  i:1
  25 SetCookie        0    1    1               00 
  26 ReadCookie       0   14    2               00 
REG[14] =  i:4
  27 If              14   30    0               00 
REG[14] =  i:4
  30 CreateBtree      0   13    1               00 r[13]=root iDb=0 flags=1
REG[13] =  i:3
  31 OpenWrite        0    1    0 5             00 root=1 iDb=0
  32 NewRowid         0   12    0               00 r[12]=rowid
REG[12] =  i:2
  33 Blob             6   14    0              00 r[14]= (len=6)
REG[14] =  t6[060000000000......]
  34 Insert           0   14   12               08 intkey=r[12] data=r[14]
REG[14] =  t6[060000000000......]
REG[12] =  i:2
  35 Close            0    0    0               00 
  36 Close            0    0    0               00 
  37 Null             0   15   16               00 r[15..16]=NULL
REG[15] =  NULL
  38 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  39 Explain         39    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  40 SeekRowid        2   42   12               00 intkey=r[12]
REG[12] =  i:2
  41 Rowid            2   16    0               00 r[16]=rowid
REG[16] =  i:2
  42 IsNull          16   50    0               00 if r[16]==NULL goto 50
REG[16] =  i:2
  43 String8          0   17    0 table         00 r[17]='table'
REG[17] =   t5[table](8)
  44 String8          0   18    0 sqlite_sequence 00 r[18]='sqlite_sequence'
REG[18] =   t15[sqlite_sequence](8)
  45 String8          0   19    0 sqlite_sequence 00 r[19]='sqlite_sequence'
REG[19] =   t15[sqlite_sequence](8)
  46 Copy            13   20    0               00 r[20]=r[13]
REG[20] =  i:3
  47 String8          0   21    0 CREATE TABLE sqlite_sequence(name,seq) 00 r[21]='CREATE TABLE sqlite_sequence(name,seq)'
REG[21] =   t38[CREATE TABLE sq](8)
  48 MakeRecord      17    5   22 BBBDB         00 r[22]=mkrec(r[17..21])
REG[22] =  s80[06172B2B01597461626C6573716C6974..++.Ytablesqlit]
  49 Insert           2   22   16               00 intkey=r[16] data=r[22]
REG[22] =  s80[06172B2B01597461626C6573716C6974..++.Ytablesqlit]
REG[16] =  i:2
  50 SetCookie        0    1    1               00 
  51 ParseSchema      0    0    0 tbl_name='sqlite_sequence' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    1 0             00 usesStmtJournal=0
  16 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s15[sqlite_sequence](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s15[sqlite_sequence](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s38[CREATE TABLE sq](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s15[sqlite_sequence](8)
REG[5] =  i:3
REG[6] =   s38[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  52 ParseSchema      0    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    1 0             00 usesStmtJournal=0
  16 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s64[CREATE TABLE t1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t1](8)
REG[5] =  i:2
REG[6] =   s64[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  53 Halt             0    0    0               00 
SQL: [
;CREATE TABLE a(collate4i1);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    1 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:3
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:3
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 a             00 r[7]='a'
REG[7] =   t1[a](8)
  20 String8          0    8    0 a             00 r[8]='a'
REG[8] =   t1[a](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  22 String8          0   10    0 CREATE TABLE a(collate4i1) 00 r[10]='CREATE TABLE a(collate4i1)'
REG[10] =   t26[CREATE TABLE a(](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s40[06170F0F01417461626C656161044352.....Atableaa.CR]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s40[06170F0F01417461626C656161044352.....Atableaa.CR]
REG[5] =  i:3
  25 SetCookie        0    1    2               00 
  26 ParseSchema      0    0    0 tbl_name='a' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 0             00 usesStmtJournal=0
  16 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[a](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[a](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[a](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s26[CREATE TABLE a(](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[a](8)
REG[5] =  i:4
REG[6] =   s26[CREATE TABLE a(](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [PRAGMA temp.cache_size = 1;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [;VALUES(1) INTERSECT 
  SELECT sum(x) OVER f FROM t1 WINDOW f AS (ORDER BY x) ORDER BY 1;]
VDBE Trace:
   0 Init             0  213    0               00 Start at 213
 213 Transaction      0    0    2 0             01 usesStmtJournal=0
 214 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 Explain          2    0    0 MERGE (INTERSECT) 00 
   3 InitCoroutine    3   10    4               00 left SELECT
  10 InitCoroutine    4  207   11               00 right SELECT
 207 Yield            3  212    0               00 
REG[3] =  i:3
REG[3] =  i:207
   4 Explain          4    2    0 LEFT          00 
   5 Noop             1    3    0               00 
   6 Explain          6    4    0 SCAN CONSTANT ROW 00 
   7 Integer          1    7    0               00 r[7]=1
REG[7] =  i:1
   8 Yield            3    0    0               00 
REG[3] =  i:207
REG[3] =  i:8
 208 Yield            4  212    0               00 
REG[4] =  i:10
REG[4] =  i:208
  11 Explain         11    2    0 RIGHT         00 
  12 Null             0    8    0               00 r[8]=NULL
REG[8] =  NULL
  13 OpenEphemeral    2    3    0               00 nColumn=3
  14 OpenDup          3    2    0               00 
  15 OpenDup          4    2    0               00 
  16 OpenDup          5    2    0               00 
  17 InitCoroutine   10  117   18               00 subquery_3
 117 SorterOpen      14    3    0 k(1,B)        00 
 118 Integer          1   38    0               00 r[38]=1
REG[38] =  i:1
 119 Explain        119   11    0 SCAN SUBQUERY 3 00 
 120 InitCoroutine   10    0   18               00 
 121 Yield           10  158    0               00 next row of subquery_3
REG[10] =  i:17
REG[10] =  i:121
  18 Explain         18   11    0 CO-ROUTINE 3  00 
  19 Null             0   11    0               00 r[11]=NULL
REG[11] =  NULL
  20 OpenEphemeral    7    4    0               00 nColumn=4
  21 OpenDup          8    7    0               00 
  22 OpenDup          9    7    0               00 
  23 OpenDup         10    7    0               00 
  24 InitCoroutine   13   48   25               00 subquery_4
  48 Integer          1   21    0               00 r[21]=1
REG[21] =  i:1
  49 Explain         49   18    0 SCAN SUBQUERY 4 00 
  50 InitCoroutine   13    0   25               00 
  51 Yield           13   89    0               00 next row of subquery_4
REG[13] =  i:24
REG[13] =  i:51
  25 Explain         25   18    0 CO-ROUTINE 4  00 
  26 SorterOpen      12    6    0 k(1,B)        00 
  27 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
  28 Explain         28   25    0 SCAN TABLE t1 00 
  29 Rewind           0   37    0               00 
  37 Explain         37   25    0 USE TEMP B-TREE FOR ORDER BY 00 
  38 OpenPseudo      13   20    6               00 6 columns in r[20]
  39 SorterSort      12   47    0               00 
  47 EndCoroutine    13    0    0               00 
REG[13] =  i:51
  89 Rewind           8  108    0               00 
 108 ResetSorter      7    0    0               00 
 109 Goto             0  116    0               00 
 116 EndCoroutine    10    0    0               00 
REG[10] =  i:121
 158 Rewind           3  177    0               00 
 177 ResetSorter      2    0    0               00 
 178 Goto             0  184    0               00 
 184 Explain        184   11    0 USE TEMP B-TREE FOR ORDER BY 00 
 185 OpenPseudo      15   54    3               00 3 columns in r[54]
 186 SorterSort      14  191    0               00 
 191 EndCoroutine     4    0    0               00 
REG[4] =  i:208
 212 Halt             0    0    0               00 
SQL: [;
;VALUES(8) EXCEPT 
  SELECT sum(collate4t1) OVER f FROM t1 WINDOW f AS (ORDER BY collate4t1) ORDER BY 1;]
VDBE Trace:
   0 Init             0  209    0               00 Start at 209
 209 Transaction      0    0    2 0             01 usesStmtJournal=0
 210 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 Explain          2    0    0 MERGE (EXCEPT) 00 
   3 InitCoroutine    3   10    4               00 left SELECT
  10 InitCoroutine    4  203   11               00 right SELECT
 203 Yield            3  208    0               00 
REG[3] =  i:3
REG[3] =  i:203
   4 Explain          4    2    0 LEFT          00 
   5 Noop             1    3    0               00 
   6 Explain          6    4    0 SCAN CONSTANT ROW 00 
   7 Integer          8    7    0               00 r[7]=8
REG[7] =  i:8
   8 Yield            3    0    0               00 
REG[3] =  i:203
REG[3] =  i:8
 204 Yield            4  190    0               00 
REG[4] =  i:10
REG[4] =  i:204
  11 Explain         11    2    0 RIGHT         00 
  12 Null             0    8    0               00 r[8]=NULL
REG[8] =  NULL
  13 OpenEphemeral    2    3    0               00 nColumn=3
  14 OpenDup          3    2    0               00 
  15 OpenDup          4    2    0               00 
  16 OpenDup          5    2    0               00 
  17 InitCoroutine   10  106   18               00 subquery_3
 106 SorterOpen      13    3    0 k(1,B)        00 
 107 Integer          1   35    0               00 r[35]=1
REG[35] =  i:1
 108 Explain        108   11    0 SCAN SUBQUERY 3 00 
 109 InitCoroutine   10    0   18               00 
 110 Yield           10  147    0               00 next row of subquery_3
REG[10] =  i:17
REG[10] =  i:110
  18 Explain         18   11    0 CO-ROUTINE 3  00 
  19 Null             0   11    0               00 r[11]=NULL
REG[11] =  NULL
  20 OpenEphemeral    7    4    0               00 nColumn=4
  21 OpenDup          8    7    0               00 
  22 OpenDup          9    7    0               00 
  23 OpenDup         10    7    0               00 
  24 InitCoroutine   13   37   25               00 subquery_4
  37 Integer          1   18    0               00 r[18]=1
REG[18] =  i:1
  38 Explain         38   18    0 SCAN SUBQUERY 4 00 
  39 InitCoroutine   13    0   25               00 
  40 Yield           13   78    0               00 next row of subquery_4
REG[13] =  i:24
REG[13] =  i:40
  25 Explain         25   18    0 CO-ROUTINE 4  00 
  26 Noop            12    6    0               00 
  27 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
  28 Explain         28   25    0 SCAN TABLE t1 00 
  29 Rewind           0   36    0               00 
  36 EndCoroutine    13    0    0               00 
REG[13] =  i:40
  78 Rewind           8   97    0               00 
  97 ResetSorter      7    0    0               00 
  98 Goto             0  105    0               00 
 105 EndCoroutine    10    0    0               00 
REG[10] =  i:110
 147 Rewind           3  166    0               00 
 166 ResetSorter      2    0    0               00 
 167 Goto             0  173    0               00 
 173 Explain        173   11    0 USE TEMP B-TREE FOR ORDER BY 00 
 174 OpenPseudo      14   51    3               00 3 columns in r[51]
 175 SorterSort      13  180    0               00 
 180 EndCoroutine     4    0    0               00 
REG[4] =  i:204
 190 Gosub            5  182    0               00 
REG[5] =  i:190
 182 IfNot            1  185    0               00 
REG[1] =  i:0
 185 Copy             7    2    0               00 r[2]=r[7]
REG[2] =  i:8
 186 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
 187 ResultRow        7    1    0               00 output=r[7]
REG[7] =  i:8
 188 Return           5    0    0               00 
REG[5] =  i:190
 191 Yield            3  208    0               00 
REG[3] =  i:8
REG[3] =  i:191
   9 EndCoroutine     3    0    0               00 
REG[3] =  i:191
 208 Halt             0    0    0               00 
SQL: [;
;VALUES(1) UNION 
  SELECT sum(x) OVER f FROM t1 WINDOW f AS (ORDER BY x) ORDER BY 1;]
VDBE Trace:
   0 Init             0  233    0               00 Start at 233
 233 Transaction      0    0    2 0             01 usesStmtJournal=0
 234 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 Explain          2    0    0 MERGE (UNION) 00 
   3 InitCoroutine    3   10    4               00 left SELECT
  10 InitCoroutine    4  227   11               00 right SELECT
 227 Yield            3  210    0               00 
REG[3] =  i:3
REG[3] =  i:227
   4 Explain          4    2    0 LEFT          00 
   5 Noop             1    3    0               00 
   6 Explain          6    4    0 SCAN CONSTANT ROW 00 
   7 Integer          1    7    0               00 r[7]=1
REG[7] =  i:1
   8 Yield            3    0    0               00 
REG[3] =  i:227
REG[3] =  i:8
 228 Yield            4  213    0               00 
REG[4] =  i:10
REG[4] =  i:228
  11 Explain         11    2    0 RIGHT         00 
  12 Null             0    8    0               00 r[8]=NULL
REG[8] =  NULL
  13 OpenEphemeral    2    3    0               00 nColumn=3
  14 OpenDup          3    2    0               00 
  15 OpenDup          4    2    0               00 
  16 OpenDup          5    2    0               00 
  17 InitCoroutine   10  117   18               00 subquery_3
 117 SorterOpen      14    3    0 k(1,B)        00 
 118 Integer          1   38    0               00 r[38]=1
REG[38] =  i:1
 119 Explain        119   11    0 SCAN SUBQUERY 3 00 
 120 InitCoroutine   10    0   18               00 
 121 Yield           10  158    0               00 next row of subquery_3
REG[10] =  i:17
REG[10] =  i:121
  18 Explain         18   11    0 CO-ROUTINE 3  00 
  19 Null             0   11    0               00 r[11]=NULL
REG[11] =  NULL
  20 OpenEphemeral    7    4    0               00 nColumn=4
  21 OpenDup          8    7    0               00 
  22 OpenDup          9    7    0               00 
  23 OpenDup         10    7    0               00 
  24 InitCoroutine   13   48   25               00 subquery_4
  48 Integer          1   21    0               00 r[21]=1
REG[21] =  i:1
  49 Explain         49   18    0 SCAN SUBQUERY 4 00 
  50 InitCoroutine   13    0   25               00 
  51 Yield           13   89    0               00 next row of subquery_4
REG[13] =  i:24
REG[13] =  i:51
  25 Explain         25   18    0 CO-ROUTINE 4  00 
  26 SorterOpen      12    6    0 k(1,B)        00 
  27 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
  28 Explain         28   25    0 SCAN TABLE t1 00 
  29 Rewind           0   37    0               00 
  37 Explain         37   25    0 USE TEMP B-TREE FOR ORDER BY 00 
  38 OpenPseudo      13   20    6               00 6 columns in r[20]
  39 SorterSort      12   47    0               00 
  47 EndCoroutine    13    0    0               00 
REG[13] =  i:51
  89 Rewind           8  108    0               00 
 108 ResetSorter      7    0    0               00 
 109 Goto             0  116    0               00 
 116 EndCoroutine    10    0    0               00 
REG[10] =  i:121
 158 Rewind           3  177    0               00 
 177 ResetSorter      2    0    0               00 
 178 Goto             0  184    0               00 
 184 Explain        184   11    0 USE TEMP B-TREE FOR ORDER BY 00 
 185 OpenPseudo      15   54    3               00 3 columns in r[54]
 186 SorterSort      14  191    0               00 
 191 EndCoroutine     4    0    0               00 
REG[4] =  i:228
 213 Gosub            5  193    0               00 
REG[5] =  i:213
 193 IfNot            1  196    0               00 
REG[1] =  i:0
 196 Copy             7    2    0               00 r[2]=r[7]
REG[2] =  i:1
 197 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
 198 ResultRow        7    1    0               00 output=r[7]
REG[7] =  i:1
 199 Return           5    0    0               00 
REG[5] =  i:213
 214 Yield            3  232    0               00 
REG[3] =  i:8
REG[3] =  i:214
   9 EndCoroutine     3    0    0               00 
REG[3] =  i:214
 232 Halt             0    0    0               00 
SQL: [;SELECT (CASE WHEN x=0 THEN 0 ELSE (x + 25) / 50 END) AS categ, count(*)
    FROM t1 GROUP BY categ
  
;]
VDBE Trace:
   0 Init             0   54    0               00 Start at 54
  54 Transaction      0    0    2 0             01 usesStmtJournal=0
  55 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  56 Integer         25   14    0               00 r[14]=25
REG[14] =  i:25
  57 Integer         50   15    0               00 r[15]=50
REG[15] =  i:50
  58 Goto             0    1    0               00 
   1 SorterOpen       1    2    0 k(1,B)        00 
   2 Integer          0    4    0               00 r[4]=0; clear abort flag
REG[4] =  i:0
   3 Null             0    7    7               00 r[7..7]=NULL
REG[7] =  NULL
   4 Gosub            6   50    0               00 
REG[6] =  i:4
  50 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  51 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
REG[3] =  i:0
  52 Return           6    0    0               00 
REG[6] =  i:4
   5 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   6 Explain          6    0    0 SCAN TABLE t1 00 
   7 Rewind           0   20    0               00 
  20 OpenPseudo       2   11    2               00 2 columns in r[11]
  21 SorterSort       1   53    0               00 GROUP BY sort
  53 Halt             0    0    0               00 
SQL: [;
;VALUES(count(*)OVER()),(2);]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN 2 CONSTANT ROWS 00 
   2 Copy             0    1    0               00 r[1]=r[0]
REG[1] =  undefined
   3 ResultRow        1    1    0               00 output=r[1]

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f5d1a569859 in __GI_abort () at abort.c:79
#2  0x00007f5d1a569729 in __assert_fail_base (fmt=0x7f5d1a6ff588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x216557 "memIsValid(&pMem[i])", file=0x22873d "sqlite3.c", line=85004, function=<optimized out>)
    at assert.c:92
#3  0x00007f5d1a57afd6 in __GI___assert_fail (assertion=0x216557 "memIsValid(&pMem[i])", file=0x22873d "sqlite3.c", line=85004, function=0x216524 "int sqlite3VdbeExec(Vdbe *)") at assert.c:101
#4  0x00000000003c3bf1 in sqlite3VdbeExec (p=0x12fc1b0) at sqlite3.c:85004
#5  0x0000000000411104 in sqlite3Step (p=0x12fc1b0) at sqlite3.c:81930
#6  0x000000000029128d in sqlite3_step (pStmt=0x12fc1b0) at sqlite3.c:81995
#7  0x00000000002570b9 in main (argc=1, argv=0x7ffcfce4bf38) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 59739] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
