GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000491,sig:06,src:020734+017870,time:15517029,execs:4325829,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_listing=on;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
;PRAGMA vdbe_trace=off;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
;COMMIT;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;COMMIT;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
;SELECT 2e-25*0.5e25
;]
VDBE Program Listing:
   0 Init             0    5    0               00 Start at 5
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Multiply         3    2    1               00 r[1]=r[3]*r[2]
   3 ResultRow        1    1    0               00 output=r[1]
   4 Halt             0    0    0               00 
   5 Real             0    2    0 2e-25         00 r[2]=2e-25
   6 Real             0    3    0 5e+24         00 r[3]=5e+24
   7 Goto             0    1    0               00 
SQL: [SELECT 2.0e-27 * '+0.000005e+132'
;]
VDBE Program Listing:
   0 Init             0    5    0               00 Start at 5
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Multiply         3    2    1               00 r[1]=r[3]*r[2]
   3 ResultRow        1    1    0               00 output=r[1]
   4 Halt             0    0    0               00 
   5 Real             0    2    0 2e-27         00 r[2]=2e-27
   6 String8          0    3    0 +0.000005e+132 00 r[3]='+0.000005e+132'
   7 Goto             0    1    0               00 
SQL: [CREATE TABLE t1(x INT UNIQUE);]
VDBE Program Listing:
   0 Init             0   39    0               00 Start at 39
   1 ReadCookie       0    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      0    4    2               00 r[4]=root iDb=0 flags=2
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
  15 String8          0    6    0 index         00 r[6]='index'
  16 String8          0    7    0 sqlite_autoindex_t1_1 00 r[7]='sqlite_autoindex_t1_1'
  17 String8          0    8    0 t1            00 r[8]='t1'
  18 Copy             4    9    0               00 r[9]=r[4]
  19 Null             0   10    0               00 r[10]=NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
  22 Close            0    0    0               00 
  23 Null             0   12   13               00 r[12..13]=NULL
  24 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  25 Explain         25    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  26 SeekRowid        2   28    1               00 intkey=r[1]
  27 Rowid            2   13    0               00 r[13]=rowid
  28 IsNull          13   36    0               00 if r[13]==NULL goto 36
  29 String8          0   14    0 table         00 r[14]='table'
  30 String8          0   15    0 t1            00 r[15]='t1'
  31 String8          0   16    0 t1            00 r[16]='t1'
  32 Copy             2   17    0               00 r[17]=r[2]
  33 String8          0   18    0 CREATE TABLE t1(x INT UNIQUE) 00 r[18]='CREATE TABLE t1(x INT UNIQUE)'
  34 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
  35 Insert           2   19   13               00 intkey=r[13] data=r[19]
  36 SetCookie        0    1    1               00 
  37 ParseSchema      0    0    0 tbl_name='t1' AND type!='trigger' 00 
  38 Halt             0    0    0               00 
  39 Transaction      0    1    0 0             01 usesStmtJournal=0
  40 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    1 0             00 usesStmtJournal=0
  16 String8          0    2    0 t1            00 r[2]='t1'
  17 String8          0    3    0 trigger       00 r[3]='trigger'
  18 Goto             0    1    0               00 
SQL: [;CREATE TRIGGER x AFTER INSERT ON t1 WHEN new.x BEGIN
    SELECT x, sum() w3 FROM t1 
    WINDOW x AS (ORDER BY NOT EXISTS(SELECT 1 FROM abc));
  END;]
VDBE Program Listing:
   0 Init             0   13    0               00 Start at 13
   1 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 NewRowid         0    1    0               00 r[1]=rowid
   3 String8          0    2    0 trigger       00 r[2]='trigger'
   4 String8          0    3    0 x             00 r[3]='x'
   5 String8          0    4    0 t1            00 r[4]='t1'
   6 Integer          0    5    0               00 r[5]=0
   7 String8          0    6    0 CREATE TRIGGER x AFTER INSERT ON t1 WHEN new.x BEGIN
    SELECT x, sum() w3 FROM t1 
    WINDOW x AS (ORDER BY NOT EXISTS(SELECT 1 FROM abc));
  END 00 r[6]='CREATE TRIGGER x AFTER INSERT ON t1 WHEN new.x BEGIN
    SELECT x, sum() w3 FROM t1 
    WIND
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
  10 SetCookie        0    1    2               00 
  11 ParseSchema      0    0    0 type='trigger' AND name='x' 00 
  12 Halt             0    0    0               00 
  13 Transaction      0    1    1 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    1    1               00 r[1]=sqlite_master.name
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    2 0             00 usesStmtJournal=0
  16 String8          0    2    0 trigger       00 r[2]='trigger'
  17 String8          0    3    0 x             00 r[3]='x'
  18 Goto             0    1    0               00 
SQL: [;
;SELECT * FROM t1 WHERE x>=0 AND x<2147483649 ORDER BY x DESC;]
VDBE Program Listing:
   0 Init             0   12    0               00 Start at 12
   1 Noop             1    3    0               00 
   2 OpenRead         2    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t1_1
   3 Explain          3    0    0 SEARCH TABLE t1 USING COVERING INDEX sqlite_autoindex_t1_1 (x>? AND x<?) 00 
   4 Int64            0    1    0 2147483649    00 r[1]=2147483649
   5 SeekLT           2   11    1 1             00 key=r[1]
   6 Integer          0    1    0               00 r[1]=0
   7 IdxLT            2   11    1 1             00 key=r[1]
   8 Column           2    0    2               00 r[2]=t1.x
   9 ResultRow        2    1    0               00 output=r[2]
  10 Prev             2    7    0               00 
  11 Halt             0    0    0               00 
  12 Transaction      0    0    2 0             01 usesStmtJournal=0
  13 Goto             0    1    0               00 
SQL: [;SELECT count(x), count(x) FROM t1;]
VDBE Program Listing:
   0 Init             0   13    0               00 Start at 13
   1 Null             0    1    2               00 r[1..2]=NULL
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0    8    0               00 
   5 Column           0    0    3               00 r[3]=t1.x
   6 AggStep          0    3    1 count(1)      01 accum=r[1] step(r[3])
   7 Next             0    5    0               01 
   8 AggFinal         1    1    0 count(1)      00 accum=r[1] N=1
   9 Copy             1    4    0               00 r[4]=r[1]
  10 Copy             1    5    0               00 r[5]=r[1]
  11 ResultRow        4    2    0               00 output=r[4..5]
  12 Halt             0    0    0               00 
  13 Transaction      0    0    2 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
SQL: [;
;ALTER TABLE t1 RENAME TO a;]
VDBE Program Listing:
   0 Init             0  140    0               00 Start at 140
   1 Null             0    1    2               00 r[1..2]=NULL
   2 OpenRead         0    1    0 3             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   15    0               00 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
   6 Ne               9    9    8 (BINARY)      42 if r[8]!=r[9] goto 9
   7 Column           0    2    8               00 r[8]=sqlite_master.tbl_name
   8 Ne              10   14    8 (NOCASE)      52 if r[8]!=r[10] goto 14
   9 Column           0    1   12               00 r[12]=sqlite_master.name
  10 Function0        1   11    8 like(2)       02 r[8]=func(r[11..12])
  11 If               8   14    1               00 
  12 Rowid            0    2    0               00 r[2]=rowid
  13 RowSetAdd        1    2    0               00 rowset(1)=r[2]
  14 Next             0    5    0               01 
  15 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
  16 RowSetRead       1   29    2               00 r[2]=rowset(1)
  17 NotExists        0   16    2               00 intkey=r[2]
  18 Column           0    0    3               00 r[3]=sqlite_master.type
  19 Column           0    1    4               00 r[4]=sqlite_master.name
  20 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
  21 Column           0    3    6               00 r[6]=sqlite_master.rootpage
  22 Column           0    0   14               00 r[14]=sqlite_master.type
  23 Column           0    1   15               00 r[15]=sqlite_master.name
  24 Column           0    4   16               00 r[16]=sqlite_master.sql
  25 Function0      113   13    7 sqlite_rename_table(7) 07 r[7]=func(r[13..19])
  26 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
  27 Insert           0    8    2               00 intkey=r[2] data=r[8]
  28 Goto             0   16    0               00 
  29 Null             0   20   21               00 r[20..21]=NULL
  30 OpenRead         1    1    0 3             00 root=1 iDb=0; sqlite_master
  31 Explain         31    0    0 SCAN TABLE sqlite_master 00 
  32 Rewind           1   44    0               00 
  33 Column           1    2   27               00 r[27]=sqlite_master.tbl_name
  34 Ne              10   43   27 (NOCASE)      52 if r[27]!=r[10] goto 43
  35 Column           1    0   27               00 r[27]=sqlite_master.type
  36 Eq              28   41   27 (BINARY)      42 if r[27]==r[28] goto 41
  37 Column           1    0   27               00 r[27]=sqlite_master.type
  38 Eq               9   41   27 (BINARY)      42 if r[27]==r[9] goto 41
  39 Column           1    0   27               00 r[27]=sqlite_master.type
  40 Ne              29   43   27 (BINARY)      52 if r[27]!=r[29] goto 43
  41 Rowid            1   21    0               00 r[21]=rowid
  42 RowSetAdd       20   21    0               00 rowset(20)=r[21]
  43 Next             1   33    0               01 
  44 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  45 RowSetRead      20   68   21               00 r[21]=rowset(20)
  46 NotExists        1   45   21               00 intkey=r[21]
  47 Column           1    0   22               00 r[22]=sqlite_master.type
  48 Column           1    0   27               00 r[27]=sqlite_master.type
  49 Ne              28   52   27 (BINARY)      52 if r[27]!=r[28] goto 52
  50 String8          0   23    0 a             00 r[23]='a'
  51 Goto             0   62    0               00 
  52 Column           1    1   31               00 r[31]=sqlite_master.name
  53 Function0        1   30   27 like(2)       02 r[27]=func(r[30..31])
  54 IfNot           27   61    1               00 
  55 Column           1    0   27               00 r[27]=sqlite_master.type
  56 Ne               9   61   27 (BINARY)      52 if r[27]!=r[9] goto 61
  57 Column           1    1   33               00 r[33]=sqlite_master.name
  58 Function0        2   33   27 substr(2)     02 r[27]=func(r[33..34])
  59 Concat          27   32   23               00 r[23]=r[32]+r[27]
  60 Goto             0   62    0               00 
  61 Column           1    1   23               00 r[23]=sqlite_master.name
  62 String8          0   24    0 a             00 r[24]='a'
  63 Column           1    3   25               00 r[25]=sqlite_master.rootpage
  64 Column           1    4   26               00 r[26]=sqlite_master.sql
  65 MakeRecord      22    5   27 BBBDB         00 r[27]=mkrec(r[22..26])
  66 Insert           1   27   21               00 intkey=r[21] data=r[27]
  67 Goto             0   45    0               00 
  68 Null             0   35   36               00 r[35..36]=NULL
  69 OpenRead         2    1    1 1             00 root=1 iDb=1; sqlite_temp_master
  70 Explain         70    0    0 SCAN TABLE sqlite_temp_master 00 
  71 Rewind           2   79    0               00 
  72 Noop             0    0    0               00 begin IN expr
  73 Column           2    0   42               00 r[42]=sqlite_temp_master.type
  74 Eq              42   76   43 (BINARY)      42 if r[43]==r[42] goto 76
  75 Ne              42   78   29 (BINARY)      52 if r[29]!=r[42] goto 78; end IN expr
  76 Rowid            2   36    0               00 r[36]=rowid
  77 RowSetAdd       35   36    0               00 rowset(35)=r[36]
  78 Next             2   72    0               01 
  79 OpenWrite        2    1    1 5             00 root=1 iDb=1; sqlite_temp_master
  80 RowSetRead      35  102   36               00 r[36]=rowset(35)
  81 NotExists        2   80   36               00 intkey=r[36]
  82 Column           2    0   37               00 r[37]=sqlite_temp_master.type
  83 Column           2    1   38               00 r[38]=sqlite_temp_master.name
  84 Column           2    2   44               00 r[44]=sqlite_temp_master.tbl_name
  85 Ne              10   93   44 (NOCASE)      52 if r[44]!=r[10] goto 93
  86 Column           2    4   46               00 r[46]=sqlite_temp_master.sql
  87 Column           2    0   47               00 r[47]=sqlite_temp_master.type
  88 Column           2    1   48               00 r[48]=sqlite_temp_master.name
  89 Function0       17   45   44 sqlite_rename_test(5) 05 r[44]=func(r[45..49])
  90 IfNot           44   93    1               00 
  91 String8          0   39    0 a             00 r[39]='a'
  92 Goto             0   94    0               00 
  93 Column           2    2   39               00 r[39]=sqlite_temp_master.tbl_name
  94 Column           2    3   40               00 r[40]=sqlite_temp_master.rootpage
  95 Column           2    0   51               00 r[51]=sqlite_temp_master.type
  96 Column           2    1   52               00 r[52]=sqlite_temp_master.name
  97 Column           2    4   53               00 r[53]=sqlite_temp_master.sql
  98 Function0      113   50   41 sqlite_rename_table(7) 07 r[41]=func(r[50..56])
  99 MakeRecord      37    5   44 BBBDB         00 r[44]=mkrec(r[37..41])
 100 Insert           2   44   36               00 intkey=r[36] data=r[44]
 101 Goto             0   80    0               00 
 102 SetCookie        0    1    3               00 
 103 ParseSchema      0    0    0               00 
 104 ParseSchema      1    0    0               00 
 105 OpenRead         4    1    0 5             00 root=1 iDb=0; sqlite_master
 106 Explain        106    0    0 SCAN TABLE sqlite_master 00 
 107 Rewind           4  122    0               00 
 108 Column           4    1   59               00 r[59]=sqlite_master.name
 109 Function0        1   58   57 like(2)       02 r[57]=func(r[58..59])
 110 If              57  121    1               00 
 111 Column           4    4   61               00 r[61]=sqlite_master.sql
 112 Function0        1   60   57 like(2)       02 r[57]=func(r[60..61])
 113 If              57  121    1               00 
 114 Column           4    4   63               00 r[63]=sqlite_master.sql
 115 Column           4    0   64               00 r[64]=sqlite_master.type
 116 Column           4    1   65               00 r[65]=sqlite_master.name
 117 Function0       17   62   57 sqlite_rename_test(5) 05 r[57]=func(r[62..66])
 118 Ne              67  121   57               51 if r[57]!=r[67] goto 121
 119 Integer          1   68    0               00 r[68]=1
 120 ResultRow       68    1    0               00 output=r[68]
 121 Next             4  108    0               01 
 122 OpenRead         5    1    1 5             00 root=1 iDb=1; sqlite_temp_master
 123 Explain        123    0    0 SCAN TABLE sqlite_master 00 
 124 Rewind           5  139    0               00 
 125 Column           5    1   70               00 r[70]=sqlite_temp_master.name
 126 Function0        1   69   57 like(2)       02 r[57]=func(r[69..70])
 127 If              57  138    1               00 
 128 Column           5    4   72               00 r[72]=sqlite_temp_master.sql
 129 Function0        1   71   57 like(2)       02 r[57]=func(r[71..72])
 130 If              57  138    1               00 
 131 Column           5    4   74               00 r[74]=sqlite_temp_master.sql
 132 Column           5    0   75               00 r[75]=sqlite_temp_master.type
 133 Column           5    1   76               00 r[76]=sqlite_temp_master.name
 134 Function0       17   73   57 sqlite_rename_test(5) 05 r[57]=func(r[73..77])
 135 Ne              67  138   57               51 if r[57]!=r[67] goto 138
 136 Integer          1   78    0               00 r[78]=1
 137 ResultRow       78    1    0               00 output=r[78]
 138 Next             5  125    0               01 
 139 Halt             0    0    0               00 
 140 Transaction      0    1    2 0             01 usesStmtJournal=1
 141 Transaction      1    1    0 0             01 usesStmtJournal=1
 142 String8          0    9    0 index         00 r[9]='index'
 143 String8          0   10    0 t1            00 r[10]='t1'
 144 String8          0   11    0 sqlite_%      00 r[11]='sqlite_%'
 145 String8          0   13    0 main          00 r[13]='main'
 146 String8          0   17    0 t1            00 r[17]='t1'
 147 String8          0   18    0 a             00 r[18]='a'
 148 Integer          0   19    0               00 r[19]=0
 149 String8          0   28    0 table         00 r[28]='table'
 150 String8          0   29    0 trigger       00 r[29]='trigger'
 151 String8          0   30    0 sqlite_autoindex% 00 r[30]='sqlite_autoindex%'
 152 String8          0   57    0 sqlite_autoindex_ 00 r[57]='sqlite_autoindex_'
 153 String8          0   79    0 a             00 r[79]='a'
 154 Concat          79   57   32               00 r[32]=r[57]+r[79]
 155 Integer          2   79    0               00 r[79]=2
 156 Integer         18   57    0               00 r[57]=18
 157 Add             57   79   34               00 r[34]=r[57]+r[79]
 158 String8          0   43    0 view          00 r[43]='view'
 159 String8          0   45    0 main          00 r[45]='main'
 160 Integer          1   49    0               00 r[49]=1
 161 String8          0   50    0 main          00 r[50]='main'
 162 String8          0   54    0 t1            00 r[54]='t1'
 163 String8          0   55    0 a             00 r[55]='a'
 164 Integer          1   56    0               00 r[56]=1
 165 String8          0   58    0 sqlite_%      00 r[58]='sqlite_%'
 166 String8          0   60    0 create virtual% 00 r[60]='create virtual%'
 167 String8          0   62    0 main          00 r[62]='main'
 168 Integer          0   66    0               00 r[66]=0
 169 Null             0   67    0               00 r[67]=NULL
 170 String8          0   69    0 sqlite_%      00 r[69]='sqlite_%'
 171 String8          0   71    0 create virtual% 00 r[71]='create virtual%'
 172 String8          0   73    0 main          00 r[73]='main'
 173 Integer          1   77    0               00 r[77]=1
 174 Goto             0    1    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fb12b313859 in __GI_abort () at abort.c:79
#2  0x00007fb12b313729 in __assert_fail_base (fmt=0x7fb12b4a9588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x2079ee "rc==WRC_Continue", file=0x22873d "sqlite3.c", line=95040, function=<optimized out>)
    at assert.c:92
#3  0x00007fb12b324fd6 in __GI___assert_fail (assertion=0x2079ee "rc==WRC_Continue", file=0x22873d "sqlite3.c", line=95040, function=0x2279cf "int sqlite3WalkSelectExpr(Walker *, Select *)") at assert.c:101
#4  0x000000000031bd8f in sqlite3WalkSelectExpr (pWalker=0x7ffe50452620, p=0xb80280) at sqlite3.c:95040
#5  0x000000000031b72e in sqlite3WalkSelect (pWalker=0x7ffe50452620, p=0xb80280) at sqlite3.c:95099
#6  0x000000000032ef96 in sqlite3SelectExpand (pParse=0x7ffe50452800, pSelect=0xb80280) at sqlite3.c:129771
#7  0x000000000032edb0 in sqlite3SelectPrep (pParse=0x7ffe50452800, p=0xb80280, pOuterNC=0x7ffe50452728) at sqlite3.c:129855
#8  0x000000000041be4e in renameResolveTrigger (pParse=0x7ffe50452800, zDb=0xb74fd0 "main") at sqlite3.c:103453
#9  0x000000000041af27 in renameTableFunc (context=0xb74b20, NotUsed=7, argv=0xb74b50) at sqlite3.c:103870
#10 0x00000000003df844 in sqlite3VdbeExec (p=0xb79620) at sqlite3.c:90923
#11 0x0000000000411104 in sqlite3Step (p=0xb79620) at sqlite3.c:81930
#12 0x000000000029128d in sqlite3_step (pStmt=0xb79620) at sqlite3.c:81995
#13 0x00000000002570b9 in main (argc=1, argv=0x7ffe50453648) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 61752] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
